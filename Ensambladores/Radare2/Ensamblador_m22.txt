xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push loc.gcc2_compiled._3
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
call 0x8048590
pop ebx
add ebx, 0x1510
mov eax, dword [ebx + 0x44]
test eax, eax
je 0x80485a3
call eax
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
cmp dword [obj.completed.4], 0
jne 0x80485fd
jmp 0x80485d3
mov eax, dword [obj.p.3]
lea edx, [eax + 4]
mov dword [obj.p.3], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.3]
cmp dword [eax], 0
jne 0x80485c1
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x80485f3
add esp, 0xfffffff4
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.4], 1
leave
ret
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x8048629
add esp, 0xfffffff8
push obj.object.11
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x8048931
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x8048925
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 0x138
cmp dword [arg_8h], 1
jne 0x80488c0
mov eax, dword [src]
lea edx, [dest]
mov dword [eax], edx
add esp, 0xfffffff8
lea eax, [dest]
push eax
push str.addr_of_buf__0x_x_n
call sym.imp.printf
add esp, 0x10
jmp 0x8048908
nop
add esp, 0xfffffff8
add esp, 0xfffffff4
mov eax, dword [src]
push eax
call sym.imp.strlen
add esp, 0x10
mov eax, eax
push eax
push str.receved__d_bytes_n
call sym.imp.printf
add esp, 0x10
add esp, 0xfffffff8
mov eax, dword [src]
push eax
lea eax, [dest]
push eax
call sym.imp.strcpy
add esp, 0x10
add esp, 0xfffffff4
push str._nend_of_vulnerable___n
call sym.imp.printf
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
call 0x8048450
pop ebx
add ebx, 0x1650
call loc.gcc2_compiled.
call sym.frame_dummy
call loc.gcc2_compiled._2
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 0x428
add esp, 0xfffffffc
push 0
push 1
push 2
call sym.imp.socket
add esp, 0x10
mov eax, eax
mov dword [fildes], eax
add esp, 0xfffffff8
push 1
mov eax, dword [fildes]
push eax
call sym.imp.listen
add esp, 0x10
mov dword [addrlen], 0x10
add esp, 0xfffffffc
lea eax, [addrlen]
push eax
lea eax, [addr]
push eax
mov eax, dword [fildes]
push eax
call sym.imp.getsockname
add esp, 0x10
mov eax, eax
test eax, eax
jne 0x80486c8
add esp, 0xfffffff8
movzx eax, word [var_40eh]
add esp, 0xfffffff4
push eax
call sym.imp.ntohs
add esp, 0x10
mov eax, eax
mov edx, eax
movzx eax, dx
push eax
push str.listening_on_port__u_n
call sym.imp.printf
add esp, 0x10
mov dword [addrlen], 0x10
add esp, 0xfffffffc
lea eax, [addrlen]
push eax
lea eax, [var_400h]
push eax
mov eax, dword [fildes]
push eax
call sym.imp.accept
add esp, 0x10
mov eax, eax
mov dword [socket], eax
add esp, 0xfffffff8
movzx eax, word [var_3feh]
add esp, 0xfffffff4
push eax
call sym.imp.ntohs
add esp, 0x10
mov eax, eax
mov edx, eax
movzx eax, dx
push eax
mov eax, dword [var_3fch]
shr eax, 0x18
mov edx, eax
movzx edx, dl
push edx
mov eax, dword [var_3fch]
shr eax, 0x10
mov edx, eax
movzx edx, dl
push edx
mov eax, dword [var_3fch]
shr eax, 8
mov edx, eax
movzx edx, dl
push edx
mov eax, dword [var_3fch]
and eax, 0xff
push eax
push str.accepted_connection_from__d._d._d._d:_u_n
call sym.imp.printf
add esp, 0x20
push 0
push 0x3e8
lea eax, [buffer]
push eax
mov eax, dword [socket]
push eax
call sym.imp.recv
add esp, 0x10
mov eax, eax
mov dword [var_41ch], eax
add esp, 0xfffffff8
mov eax, dword [var_41ch]
push eax
push str.receved__d_bytes_n
call sym.imp.printf
add esp, 0x10
cmp dword [var_41ch], 0
jle 0x8048856
mov al, byte [buffer]
cmp al, 0x41
je 0x80487b1
cmp al, 0x58
je 0x8048800
jmp 0x8048856
mov dword [var_420h], 1
add esp, 0xfffffff8
lea eax, [var_418h]
push eax
mov eax, dword [var_420h]
push eax
call sym.vulnerable
add esp, 0x10
push 0
push 4
lea eax, [var_418h]
push eax
mov eax, dword [socket]
push eax
call sym.imp.send
add esp, 0x10
add esp, 0xfffffff4
push str.sent_address_of_buf_n
call sym.imp.printf
add esp, 0x10
jmp 0x8048856
lea esi, [esi]
mov dword [var_420h], 0
add esp, 0xfffffff4
push str.exploiting_n
call sym.imp.printf
add esp, 0x10
lea eax, [buffer]
mov edx, dword [var_41ch]
mov byte [edx + eax], 0
add esp, 0xfffffff8
lea eax, [buffer]
lea edx, [eax + 1]
push edx
mov eax, dword [var_420h]
push eax
call sym.vulnerable
add esp, 0x10
add esp, 0xfffffff4
push str.exploit_done_nnow_the_other_boy_is_running_a_shell_non_your_computer__be_happy
call sym.imp.printf
add esp, 0x10
cmp dword [var_41ch], 0
jg 0x8048861
jmp 0x8048866
jmp 0x8048758
add esp, 0xfffffff4
mov eax, dword [fildes]
push eax
call sym.imp.close
add esp, 0x10
add esp, 0xfffffff4
mov eax, dword [socket]
push eax
call sym.imp.close
add esp, 0x10
xor eax, eax
jmp 0x8048888
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
call 0x8048948
pop ebx
add ebx, 0x1158
nop
call loc.gcc2_compiled._1
pop ebx
leave
ret
jmp dword [reloc.close]
jmp dword [reloc.accept]
jmp dword [reloc.listen]
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.ntohs]
jmp dword [reloc.strlen]
jmp dword [reloc.printf]
jmp dword [reloc.getsockname]
jmp dword [reloc.send]
jmp dword [reloc.recv]
jmp dword [reloc.socket]
jmp dword [reloc.strcpy]
