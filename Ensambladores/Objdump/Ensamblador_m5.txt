push   ebp
mov    ebp,esp
sub    esp,0x8
call   8890 <__cxa_finalize@plt+0x1c>
call   8940 <__cxa_finalize@plt+0xcc>
call   151b0 <_Z24DisconnectTier1Librariesv@@Base+0x20>
leave  
ret    
push   DWORD PTR [ebx+0x4]
jmp    DWORD PTR [ebx+0x8]
add    BYTE PTR [eax],al
jmp    DWORD PTR [ebx+0xc]
push   0x0
jmp    8854 <_init@@Base+0x18>
jmp    DWORD PTR [ebx+0x10]
push   0x8
jmp    8854 <_init@@Base+0x18>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
call   889c <__cxa_finalize@plt+0x28>
pop    ebx
add    ebx,0xe92c
mov    edx,DWORD PTR [ebx-0xc]
test   edx,edx
je     88b2 <__cxa_finalize@plt+0x3e>
call   8864 <__gmon_start__@plt>
pop    eax
pop    ebx
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
call   8977 <__cxa_finalize@plt+0x103>
add    ebx,0xe8fe
sub    esp,0x10
cmp    BYTE PTR [ebx+0x5c],0x0
jne    8933 <__cxa_finalize@plt+0xbf>
mov    eax,DWORD PTR [ebx-0x4]
test   eax,eax
je     88f4 <__cxa_finalize@plt+0x80>
lea    eax,[ebx-0x118]
mov    DWORD PTR [esp],eax
call   8874 <__cxa_finalize@plt>
lea    eax,[ebx-0x120]
lea    edx,[ebx-0x124]
sub    eax,edx
sar    eax,0x2
lea    esi,[eax-0x1]
mov    eax,DWORD PTR [ebx+0x58]
cmp    esi,eax
jbe    892c <__cxa_finalize@plt+0xb8>
add    eax,0x1
mov    DWORD PTR [ebx+0x58],eax
call   DWORD PTR [ebx+eax*4-0x124]
mov    eax,DWORD PTR [ebx+0x58]
cmp    esi,eax
ja     8912 <__cxa_finalize@plt+0x9e>
mov    BYTE PTR [ebx+0x5c],0x1
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
call   8977 <__cxa_finalize@plt+0x103>
add    ebx,0xe87f
sub    esp,0x4
mov    edx,DWORD PTR [ebx-0x11c]
test   edx,edx
je     8971 <__cxa_finalize@plt+0xfd>
mov    edx,DWORD PTR [ebx-0x8]
test   edx,edx
je     8971 <__cxa_finalize@plt+0xfd>
lea    eax,[ebx-0x11c]
mov    DWORD PTR [esp],eax
call   edx
add    esp,0x4
pop    ebx
pop    ebp
ret    
mov    ebx,DWORD PTR [esp]
ret    
nop
nop
nop
nop
nop
push   ebp
sub    eax,0x1
mov    ebp,esp
je     8990 <__cxa_finalize@plt+0x11c>
pop    ebp
ret    
lea    esi,[esi+0x0]
cmp    edx,0xffff
jne    8988 <__cxa_finalize@plt+0x114>
pop    ebp
mov    DWORD PTR ds:0x0,0x8
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    edx,0xffff
mov    ebp,esp
mov    eax,0x1
pop    ebp
jmp    8980 <__cxa_finalize@plt+0x10c>
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15200
call   DWORD PTR [ebp+0x8]
test   eax,eax
mov    ds:0x1722c,eax
je     89f0 <_Z9InitCVarsPFPvPKcPiE@@Base+0x30>
mov    DWORD PTR [ebp+0x8],0x0
leave  
jmp    89ea <_Z9InitCVarsPFPvPKcPiE@@Base+0x2a>
xchg   ax,ax
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
mov    ebx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [esp+0x4],0x40000
call   DWORD PTR [eax+0x10]
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [esp+0x4],0x0
call   8a26 <_ZN21CPluginConVarAccessor22RegisterConCommandBaseEP14ConCommandBase@@Base+0x26>
mov    eax,ds:0x1722c
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x14]
add    esp,0x14
mov    eax,0x1
pop    ebx
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    eax,0x0
mov    ebp,esp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
mov    DWORD PTR [eax+0x4],0x68
mov    DWORD PTR [eax+0x8],0x0
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
mov    DWORD PTR [eax+0x4],0x68
mov    DWORD PTR [eax+0x8],0x0
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    eax,0x15274
mov    ebp,esp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax+0x8],edx
pop    ebp
ret    
xchg   ax,ax
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8
push   ebp
mov    ebp,esp
pop    ebp
add    eax,0x1
ret    
nop
xchg   ax,ax
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x0
mov    ebx,DWORD PTR ds:0x8
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp],eax
add    ebx,0x1
call   DWORD PTR [edx+0x8]
test   al,al
je     8bf0 <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x30>
xor    eax,eax
test   ebx,ebx
jle    8bf0 <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x30>
add    esp,0x4
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
xor    eax,eax
cmp    ebx,0x1
setle  al
add    esp,0x4
pop    ebx
pop    ebp
ret    
xchg   ax,ax
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x17560
pop    ebp
jmp    8c0c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x4c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x17520
pop    ebp
jmp    8c1c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x5c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x174c0
pop    ebp
jmp    8c2c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x6c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x17460
pop    ebp
jmp    8c3c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x7c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x17400
pop    ebp
jmp    8c4c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x8c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x173a0
pop    ebp
jmp    8c5c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0x9c>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x17340
pop    ebp
jmp    8c6c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0xac>
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x172e0
pop    ebp
jmp    8c7c <_Z33UTIL_IsCommandIssuedByServerAdminv@@Base+0xbc>
mov    edx,DWORD PTR ds:0x0
mov    eax,ds:0x0
push   ebp
mov    ebp,esp
mov    DWORD PTR [eax+0x2c],edx
pop    ebp
jmp    8c93 <_ZN18CEmptyServerPlugin6UnloadEv@@Base+0x13>
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
mov    DWORD PTR [eax+0x4],0x8
pop    ebp
jmp    8cb5 <_ZN18CEmptyServerPluginD0Ev@@Base+0x15>
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
mov    DWORD PTR [eax+0x4],0x8
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
mov    DWORD PTR [eax+0x4],0x8
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
mov    ecx,DWORD PTR ds:0x8
mov    DWORD PTR ds:0xc,0x0
test   ecx,ecx
js     8d90 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb0>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     8d42 <_ZN18CEmptyServerPluginD2Ev@@Base+0x62>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    edx,DWORD PTR ds:0x8
mov    DWORD PTR ds:0x10,ecx
test   edx,edx
js     8d85 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa5>
test   ecx,ecx
je     8d7b <_ZN18CEmptyServerPluginD2Ev@@Base+0x9b>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
add    esp,0x14
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR ds:0x0
jmp    8d4c <_ZN18CEmptyServerPluginD2Ev@@Base+0x6c>
mov    ebx,eax
mov    eax,ds:0x8
test   eax,eax
js     8dd2 <_ZN18CEmptyServerPluginD2Ev@@Base+0xf2>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     8dc8 <_ZN18CEmptyServerPluginD2Ev@@Base+0xe8>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR [esp],ebx
call   8dd6 <_ZN18CEmptyServerPluginD2Ev@@Base+0xf6>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
sub    eax,0x1
je     8df0 <_ZN18CEmptyServerPluginD2Ev@@Base+0x110>
leave  
ret    
lea    esi,[esi+0x0]
cmp    edx,0xffff
jne    8deb <_ZN18CEmptyServerPluginD2Ev@@Base+0x10b>
xor    eax,eax
mov    ds:0x172c8,eax
mov    ds:0x172cc,eax
mov    eax,0x7f7fffff
mov    ds:0x172d0,eax
mov    ds:0x172d4,eax
mov    DWORD PTR [esp+0x10],0x15298
mov    DWORD PTR [esp+0xc],0x100
mov    DWORD PTR [esp+0x8],0x152c4
mov    DWORD PTR [esp+0x4],0x154ec
mov    DWORD PTR [esp],0x172e0
call   8e3b <_ZN18CEmptyServerPluginD2Ev@@Base+0x15b>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c70
call   8e57 <_ZN18CEmptyServerPluginD2Ev@@Base+0x177>
mov    DWORD PTR [esp+0x10],0x152f4
mov    DWORD PTR [esp+0xc],0x0
mov    DWORD PTR [esp+0x8],0x1566e
mov    DWORD PTR [esp+0x4],0x154f8
mov    DWORD PTR [esp],0x17340
call   8e83 <_ZN18CEmptyServerPluginD2Ev@@Base+0x1a3>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c60
call   8e9f <_ZN18CEmptyServerPluginD2Ev@@Base+0x1bf>
mov    DWORD PTR [esp+0x10],0x15318
mov    DWORD PTR [esp+0xc],0x0
mov    DWORD PTR [esp+0x8],0x15503
mov    DWORD PTR [esp+0x4],0x15505
mov    DWORD PTR [esp],0x173a0
call   8ecb <_ZN18CEmptyServerPluginD2Ev@@Base+0x1eb>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c50
call   8ee7 <_ZN18CEmptyServerPluginD2Ev@@Base+0x207>
mov    DWORD PTR [esp+0x10],0x15344
mov    DWORD PTR [esp+0xc],0x0
mov    DWORD PTR [esp+0x8],0x15503
mov    DWORD PTR [esp+0x4],0x1550d
mov    DWORD PTR [esp],0x17400
call   8f13 <_ZN18CEmptyServerPluginD2Ev@@Base+0x233>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c40
call   8f2f <_ZN18CEmptyServerPluginD2Ev@@Base+0x24f>
mov    DWORD PTR [esp+0x10],0x15370
mov    DWORD PTR [esp+0xc],0x0
mov    DWORD PTR [esp+0x8],0x1566e
mov    DWORD PTR [esp+0x4],0x15523
mov    DWORD PTR [esp],0x17460
call   8f5b <_ZN18CEmptyServerPluginD2Ev@@Base+0x27b>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c30
call   8f77 <_ZN18CEmptyServerPluginD2Ev@@Base+0x297>
mov    DWORD PTR [esp+0x10],0x153a8
mov    DWORD PTR [esp+0xc],0x0
mov    DWORD PTR [esp+0x8],0x1566e
mov    DWORD PTR [esp+0x4],0x153e8
mov    DWORD PTR [esp],0x174c0
call   8fa3 <_ZN18CEmptyServerPluginD2Ev@@Base+0x2c3>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c20
call   8fbf <_ZN18CEmptyServerPluginD2Ev@@Base+0x2df>
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR ds:0xc,0x0
mov    DWORD PTR ds:0x10,0x0
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x93a0
call   900d <_ZN18CEmptyServerPluginD2Ev@@Base+0x32d>
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR ds:0xc,0x0
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
mov    WORD PTR ds:0x14,0xffff
mov    WORD PTR ds:0x16,0x0
mov    DWORD PTR ds:0x18,0x0
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x9480
call   907f <_ZN18CEmptyServerPluginD2Ev@@Base+0x39f>
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR ds:0xc,0x0
mov    DWORD PTR ds:0x10,0x0
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8d00
call   90cd <_ZN18CEmptyServerPluginD2Ev@@Base+0x3ed>
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR ds:0xc,0x0
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
mov    WORD PTR ds:0x14,0xffff
mov    WORD PTR ds:0x16,0x0
mov    DWORD PTR ds:0x18,0x0
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x9820
call   913f <_ZN18CEmptyServerPluginD2Ev@@Base+0x45f>
mov    DWORD PTR ds:0x0,0x8
mov    DWORD PTR ds:0x4,0x68
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x9380
call   9179 <_ZN18CEmptyServerPluginD2Ev@@Base+0x499>
mov    DWORD PTR [esp+0x8],0x1553b
mov    DWORD PTR [esp+0x4],0x8a50
mov    DWORD PTR [esp],0x17504
call   9195 <_ZN18CEmptyServerPluginD2Ev@@Base+0x4b5>
mov    DWORD PTR [esp+0x14],0x0
mov    DWORD PTR [esp+0x10],0x0
mov    DWORD PTR [esp+0xc],0x15408
mov    DWORD PTR [esp+0x8],0x9260
mov    DWORD PTR [esp+0x4],0x15555
mov    DWORD PTR [esp],0x17520
call   91c9 <_ZN18CEmptyServerPluginD2Ev@@Base+0x4e9>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c10
call   91e5 <_ZN18CEmptyServerPluginD2Ev@@Base+0x505>
mov    DWORD PTR [esp+0x14],0x0
mov    DWORD PTR [esp+0x10],0x0
mov    DWORD PTR [esp+0xc],0x15560
mov    DWORD PTR [esp+0x8],0x95d0
mov    DWORD PTR [esp+0x4],0x1557a
mov    DWORD PTR [esp],0x17560
call   9219 <_ZN18CEmptyServerPluginD2Ev@@Base+0x539>
mov    DWORD PTR [esp+0x8],0x170b0
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x8c00
call   9235 <_ZN18CEmptyServerPluginD2Ev@@Base+0x555>
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    edx,0xffff
mov    ebp,esp
mov    eax,0x1
pop    ebp
jmp    8de0 <_ZN18CEmptyServerPluginD2Ev@@Base+0x100>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    eax,ds:0x0
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR ds:0x8
mov    DWORD PTR [ebp-0x8],esi
mov    DWORD PTR [ebp-0x4],edi
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp],eax
add    ebx,0x1
call   DWORD PTR [edx+0x8]
test   al,al
je     92a0 <_ZN18CEmptyServerPluginD2Ev@@Base+0x5c0>
test   ebx,ebx
jle    92a0 <_ZN18CEmptyServerPluginD2Ev@@Base+0x5c0>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    ebx,0x1
jg     928d <_ZN18CEmptyServerPluginD2Ev@@Base+0x5ad>
mov    eax,ds:0x17358
mov    edx,0x1560b
mov    ebx,DWORD PTR [eax+0x2c]
test   ebx,ebx
je     92bb <_ZN18CEmptyServerPluginD2Ev@@Base+0x5db>
mov    edx,0x15584
mov    DWORD PTR [esp+0x4],edx
mov    DWORD PTR [esp],0x1558c
call   92c7 <_ZN18CEmptyServerPluginD2Ev@@Base+0x5e7>
mov    eax,ds:0x17358
mov    edi,DWORD PTR [eax+0x2c]
test   edi,edi
je     9361 <_ZN18CEmptyServerPluginD2Ev@@Base+0x681>
mov    DWORD PTR [esp],0x15598
call   92e3 <_ZN18CEmptyServerPluginD2Ev@@Base+0x603>
mov    DWORD PTR [esp],0x155a6
call   92ef <_ZN18CEmptyServerPluginD2Ev@@Base+0x60f>
mov    DWORD PTR [esp],0x155c4
call   92fb <_ZN18CEmptyServerPluginD2Ev@@Base+0x61b>
mov    esi,DWORD PTR ds:0xc
test   esi,esi
jle    9347 <_ZN18CEmptyServerPluginD2Ev@@Base+0x667>
xor    edi,edi
xor    esi,esi
lea    esi,[esi+0x0]
mov    eax,esi
add    edi,0x1
add    eax,DWORD PTR ds:0x0
add    esi,0xc
mov    edx,DWORD PTR [eax]
mov    ebx,DWORD PTR [eax+0x4]
mov    DWORD PTR [esp],edx
call   9327 <_ZN18CEmptyServerPluginD2Ev@@Base+0x647>
mov    DWORD PTR [esp+0x8],ebx
mov    DWORD PTR [esp],0x155e2
mov    DWORD PTR [esp+0x4],eax
call   933b <_ZN18CEmptyServerPluginD2Ev@@Base+0x65b>
cmp    DWORD PTR ds:0xc,edi
jg     9310 <_ZN18CEmptyServerPluginD2Ev@@Base+0x630>
mov    eax,ds:0x17584
mov    DWORD PTR [esp],0x155ef
mov    DWORD PTR [esp+0x4],eax
call   9358 <_ZN18CEmptyServerPluginD2Ev@@Base+0x678>
jmp    928d <_ZN18CEmptyServerPluginD2Ev@@Base+0x5ad>
mov    DWORD PTR [esp],0x1546c
call   9369 <_ZN18CEmptyServerPluginD2Ev@@Base+0x689>
lea    esi,[esi+0x0]
jmp    92db <_ZN18CEmptyServerPluginD2Ev@@Base+0x5fb>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
mov    DWORD PTR ds:0x0,0x8
mov    DWORD PTR ds:0x4,0x8
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
mov    eax,ds:0x8
mov    DWORD PTR ds:0xc,0x0
test   eax,eax
js     9430 <_ZN18CEmptyServerPluginD2Ev@@Base+0x750>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     93e1 <_ZN18CEmptyServerPluginD2Ev@@Base+0x701>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    eax,ds:0x8
mov    DWORD PTR ds:0x10,ecx
test   eax,eax
js     9423 <_ZN18CEmptyServerPluginD2Ev@@Base+0x743>
test   ecx,ecx
je     9419 <_ZN18CEmptyServerPluginD2Ev@@Base+0x739>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
add    esp,0x14
pop    ebx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR ds:0x0
jmp    93eb <_ZN18CEmptyServerPluginD2Ev@@Base+0x70b>
mov    ebx,eax
mov    eax,ds:0x8
test   eax,eax
js     9472 <_ZN18CEmptyServerPluginD2Ev@@Base+0x792>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     9468 <_ZN18CEmptyServerPluginD2Ev@@Base+0x788>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR [esp],ebx
call   9476 <_ZN18CEmptyServerPluginD2Ev@@Base+0x796>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
movzx  eax,WORD PTR ds:0x16
lea    esi,[eax-0x1]
mov    ebx,esi
jmp    949c <_ZN18CEmptyServerPluginD2Ev@@Base+0x7bc>
sub    ebx,0x1
sub    esi,0x1
test   ebx,ebx
js     94ed <_ZN18CEmptyServerPluginD2Ev@@Base+0x80d>
movzx  eax,si
cmp    eax,DWORD PTR ds:0x8
jge    9496 <_ZN18CEmptyServerPluginD2Ev@@Base+0x7b6>
cmp    BYTE PTR ds:0x0,0x0
jne    9496 <_ZN18CEmptyServerPluginD2Ev@@Base+0x7b6>
mov    DWORD PTR [esp],0x0
call   94bc <_ZN18CEmptyServerPluginD2Ev@@Base+0x7dc>
test   eax,eax
je     9496 <_ZN18CEmptyServerPluginD2Ev@@Base+0x7b6>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   94e7 <_ZN18CEmptyServerPluginD2Ev@@Base+0x807>
jmp    9496 <_ZN18CEmptyServerPluginD2Ev@@Base+0x7b6>
mov    eax,ds:0xc
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
mov    WORD PTR ds:0x16,0x0
test   eax,eax
mov    WORD PTR ds:0x14,0xffff
js     9581 <_ZN18CEmptyServerPluginD2Ev@@Base+0x8a1>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     953f <_ZN18CEmptyServerPluginD2Ev@@Base+0x85f>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    eax,ds:0xc
mov    DWORD PTR ds:0x8,0x0
test   eax,eax
js     9581 <_ZN18CEmptyServerPluginD2Ev@@Base+0x8a1>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     9577 <_ZN18CEmptyServerPluginD2Ev@@Base+0x897>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
mov    ebx,eax
mov    eax,ds:0xc
test   eax,eax
js     95c2 <_ZN18CEmptyServerPluginD2Ev@@Base+0x8e2>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     95b8 <_ZN18CEmptyServerPluginD2Ev@@Base+0x8d8>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR [esp],ebx
call   95c6 <_ZN18CEmptyServerPluginD2Ev@@Base+0x8e6>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x0
mov    ebx,DWORD PTR ds:0x8
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp],eax
add    ebx,0x1
call   DWORD PTR [edx+0x8]
test   al,al
je     9600 <_ZN18CEmptyServerPluginD2Ev@@Base+0x920>
test   ebx,ebx
jle    9600 <_ZN18CEmptyServerPluginD2Ev@@Base+0x920>
add    esp,0xc
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
sub    ebx,0x1
jg     95f7 <_ZN18CEmptyServerPluginD2Ev@@Base+0x917>
mov    edx,DWORD PTR ds:0x8
mov    DWORD PTR ds:0xc,0x0
test   edx,edx
jns    97e6 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb06>
mov    ecx,DWORD PTR ds:0x0
movzx  eax,WORD PTR ds:0x16
mov    DWORD PTR ds:0x10,ecx
mov    esi,eax
sub    esi,0x1
js     96b1 <_ZN18CEmptyServerPluginD2Ev@@Base+0x9d1>
mov    WORD PTR [ebp-0xe],0xffff
jmp    9662 <_ZN18CEmptyServerPluginD2Ev@@Base+0x982>
nop
mov    eax,edi
movzx  edx,WORD PTR [ebp-0xe]
sub    esi,0x1
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    esi,0xffffffff
mov    WORD PTR [eax+0x2],dx
mov    WORD PTR [eax],bx
je     96b1 <_ZN18CEmptyServerPluginD2Ev@@Base+0x9d1>
mov    WORD PTR [ebp-0xe],bx
movzx  edi,si
mov    ebx,esi
cmp    edi,DWORD PTR ds:0x8
jge    9640 <_ZN18CEmptyServerPluginD2Ev@@Base+0x960>
cmp    BYTE PTR ds:0x0,0x0
jne    9640 <_ZN18CEmptyServerPluginD2Ev@@Base+0x960>
mov    DWORD PTR [esp],0x0
call   9680 <_ZN18CEmptyServerPluginD2Ev@@Base+0x9a0>
test   eax,eax
je     9640 <_ZN18CEmptyServerPluginD2Ev@@Base+0x960>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   96ab <_ZN18CEmptyServerPluginD2Ev@@Base+0x9cb>
jmp    9640 <_ZN18CEmptyServerPluginD2Ev@@Base+0x960>
mov    ecx,DWORD PTR ds:0x8
cmp    WORD PTR ds:0x16,0x1
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
sbb    eax,eax
test   ecx,ecx
mov    ds:0x14,ax
mov    DWORD PTR ds:0xc,0x0
js     97db <_ZN18CEmptyServerPluginD2Ev@@Base+0xafb>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     9712 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa32>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
movzx  eax,WORD PTR ds:0x16
mov    DWORD PTR ds:0x10,ecx
mov    esi,eax
sub    esi,0x1
js     97b1 <_ZN18CEmptyServerPluginD2Ev@@Base+0xad1>
mov    WORD PTR [ebp-0x10],0xffff
jmp    9762 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa82>
lea    esi,[esi+eiz*1+0x0]
mov    eax,edi
movzx  edx,WORD PTR [ebp-0x10]
sub    esi,0x1
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    esi,0xffffffff
mov    WORD PTR [eax+0x2],dx
mov    WORD PTR [eax],bx
je     97b1 <_ZN18CEmptyServerPluginD2Ev@@Base+0xad1>
mov    WORD PTR [ebp-0x10],bx
movzx  edi,si
mov    ebx,esi
cmp    edi,DWORD PTR ds:0x8
jge    9740 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa60>
cmp    BYTE PTR ds:0x0,0x0
jne    9740 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa60>
mov    DWORD PTR [esp],0x0
call   9780 <_ZN18CEmptyServerPluginD2Ev@@Base+0xaa0>
test   eax,eax
je     9740 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa60>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   97ab <_ZN18CEmptyServerPluginD2Ev@@Base+0xacb>
jmp    9740 <_ZN18CEmptyServerPluginD2Ev@@Base+0xa60>
cmp    WORD PTR ds:0x16,0x1
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
sbb    eax,eax
mov    ds:0x14,ax
add    esp,0xc
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ecx,DWORD PTR ds:0x0
jmp    971c <_ZN18CEmptyServerPluginD2Ev@@Base+0xa3c>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     980d <_ZN18CEmptyServerPluginD2Ev@@Base+0xb2d>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
jmp    9623 <_ZN18CEmptyServerPluginD2Ev@@Base+0x943>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
movzx  eax,WORD PTR ds:0x16
lea    esi,[eax-0x1]
mov    ebx,esi
jmp    983c <_ZN18CEmptyServerPluginD2Ev@@Base+0xb5c>
sub    ebx,0x1
sub    esi,0x1
test   ebx,ebx
js     988d <_ZN18CEmptyServerPluginD2Ev@@Base+0xbad>
movzx  eax,si
cmp    eax,DWORD PTR ds:0x8
jge    9836 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb56>
cmp    BYTE PTR ds:0x0,0x0
jne    9836 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb56>
mov    DWORD PTR [esp],0x0
call   985c <_ZN18CEmptyServerPluginD2Ev@@Base+0xb7c>
test   eax,eax
je     9836 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb56>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   9887 <_ZN18CEmptyServerPluginD2Ev@@Base+0xba7>
jmp    9836 <_ZN18CEmptyServerPluginD2Ev@@Base+0xb56>
mov    eax,ds:0xc
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
mov    WORD PTR ds:0x16,0x0
test   eax,eax
mov    WORD PTR ds:0x14,0xffff
js     9921 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc41>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     98df <_ZN18CEmptyServerPluginD2Ev@@Base+0xbff>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    eax,ds:0xc
mov    DWORD PTR ds:0x8,0x0
test   eax,eax
js     9921 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc41>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     9917 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc37>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,DWORD PTR ds:0xc
mov    ebx,eax
test   esi,esi
js     9963 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc83>
mov    ecx,DWORD PTR ds:0x4
test   ecx,ecx
je     9959 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc79>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
mov    DWORD PTR ds:0x4,0x0
mov    DWORD PTR ds:0x8,0x0
mov    DWORD PTR [esp],ebx
call   9967 <_ZN18CEmptyServerPluginD2Ev@@Base+0xc87>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x37c
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x354],eax
mov    DWORD PTR [ebp-0x14],eax
movzx  eax,WORD PTR ds:0x10
cmp    ax,0xffff
je     99f7 <_Z14blocked_packetP11sockaddr_in@@Base+0x87>
lea    edi,[ebp-0x14]
nop
lea    esi,[esi+eiz*1+0x0]
movzx  esi,ax
mov    ebx,esi
shl    ebx,0x4
mov    eax,ebx
add    eax,DWORD PTR ds:0x4
mov    DWORD PTR [esp],edi
add    eax,0x8
mov    DWORD PTR [esp+0x4],eax
call   DWORD PTR ds:0x0
test   al,al
je     9b23 <_Z14blocked_packetP11sockaddr_in@@Base+0x1b3>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,esi
je     9b76 <_Z14blocked_packetP11sockaddr_in@@Base+0x206>
cmp    bx,0xffff
mov    eax,0x0
je     99ee <_Z14blocked_packetP11sockaddr_in@@Base+0x7e>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax]
cmp    ax,0xffff
jne    99a0 <_Z14blocked_packetP11sockaddr_in@@Base+0x30>
mov    esi,0xffffffff
mov    ebx,0xffff
cmp    ebx,DWORD PTR ds:0x8
jge    9a67 <_Z14blocked_packetP11sockaddr_in@@Base+0xf7>
cmp    BYTE PTR ds:0x0,0x0
mov    edi,ebx
je     9dab <_Z14blocked_packetP11sockaddr_in@@Base+0x43b>
cmp    di,0xffff
mov    eax,0x0
je     9a2f <_Z14blocked_packetP11sockaddr_in@@Base+0xbf>
movzx  eax,di
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    WORD PTR [eax],si
je     9a67 <_Z14blocked_packetP11sockaddr_in@@Base+0xf7>
mov    eax,ds:0x4
shl    ebx,0x4
mov    edx,DWORD PTR ds:0x0
mov    eax,DWORD PTR [ebx+eax*1+0xc]
mov    edx,DWORD PTR [edx+0xc]
lea    eax,[eax+eax*2]
shl    eax,0x2
add    eax,DWORD PTR ds:0x0
add    DWORD PTR [eax+0x4],0x1
mov    DWORD PTR [eax+0x8],edx
add    esp,0x37c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
cmp    DWORD PTR ds:0xc,0x7ff
jg     9a5c <_Z14blocked_packetP11sockaddr_in@@Base+0xec>
mov    eax,ds:0x173b8
mov    eax,DWORD PTR [eax+0x2c]
test   eax,eax
jne    9c57 <_Z14blocked_packetP11sockaddr_in@@Base+0x2e7>
mov    eax,ds:0x0
mov    esi,DWORD PTR ds:0xc
fld    DWORD PTR [eax+0xc]
mov    eax,ds:0x4
lea    edi,[esi+0x1]
fstp   DWORD PTR [ebp-0x350]
cmp    edi,eax
jg     9bf2 <_Z14blocked_packetP11sockaddr_in@@Base+0x282>
mov    eax,ds:0xc
mov    ecx,DWORD PTR ds:0x0
add    eax,0x1
mov    ds:0xc,eax
sub    eax,esi
lea    edx,[eax-0x1]
test   edx,edx
mov    DWORD PTR ds:0x10,ecx
jg     9d7d <_Z14blocked_packetP11sockaddr_in@@Base+0x40d>
lea    eax,[esi+esi*2]
lea    ebx,[eax*4+0x0]
mov    eax,ebx
add    eax,DWORD PTR ds:0x0
je     9af9 <_Z14blocked_packetP11sockaddr_in@@Base+0x189>
mov    edx,DWORD PTR [ebp-0x354]
fld    DWORD PTR [ebp-0x350]
fstp   DWORD PTR [eax+0x8]
mov    DWORD PTR [eax+0x4],0x1
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp-0x354]
mov    DWORD PTR [ebp-0x10],esi
mov    DWORD PTR [ebp-0x14],eax
lea    eax,[ebp-0x14]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],0x0
call   9b14 <_Z14blocked_packetP11sockaddr_in@@Base+0x1a4>
add    esp,0x37c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
add    ebx,DWORD PTR ds:0x4
mov    DWORD PTR [esp+0x4],edi
lea    eax,[ebx+0x8]
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     9c4f <_Z14blocked_packetP11sockaddr_in@@Base+0x2df>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,esi
je     9bb6 <_Z14blocked_packetP11sockaddr_in@@Base+0x246>
cmp    bx,0xffff
mov    eax,0x0
je     9b63 <_Z14blocked_packetP11sockaddr_in@@Base+0x1f3>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax+0x2]
cmp    ax,0xffff
jne    99a0 <_Z14blocked_packetP11sockaddr_in@@Base+0x30>
jmp    99f7 <_Z14blocked_packetP11sockaddr_in@@Base+0x87>
mov    DWORD PTR [esp],0x0
call   9b7e <_Z14blocked_packetP11sockaddr_in@@Base+0x20e>
test   eax,eax
je     99d7 <_Z14blocked_packetP11sockaddr_in@@Base+0x67>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   9bad <_Z14blocked_packetP11sockaddr_in@@Base+0x23d>
jmp    99d7 <_Z14blocked_packetP11sockaddr_in@@Base+0x67>
mov    DWORD PTR [esp],0x0
call   9bbe <_Z14blocked_packetP11sockaddr_in@@Base+0x24e>
test   eax,eax
je     9b4c <_Z14blocked_packetP11sockaddr_in@@Base+0x1dc>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   9be9 <_Z14blocked_packetP11sockaddr_in@@Base+0x279>
jmp    9b4c <_Z14blocked_packetP11sockaddr_in@@Base+0x1dc>
mov    ecx,DWORD PTR ds:0x8
cmp    ecx,0x0
jl     9aa7 <_Z14blocked_packetP11sockaddr_in@@Base+0x137>
je     9deb <_Z14blocked_packetP11sockaddr_in@@Base+0x47b>
mov    edx,esi
mov    eax,esi
sar    edx,0x1f
idiv   ecx
add    eax,0x1
imul   eax,ecx
mov    ebx,DWORD PTR ds:0x0
mov    ds:0x4,eax
test   ebx,ebx
je     9e15 <_Z14blocked_packetP11sockaddr_in@@Base+0x4a5>
mov    edx,DWORD PTR ds:0x0
lea    eax,[eax+eax*2]
shl    eax,0x2
mov    ecx,DWORD PTR [edx]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],edx
call   DWORD PTR [ecx+0x4]
mov    ds:0x0,eax
jmp    9aa7 <_Z14blocked_packetP11sockaddr_in@@Base+0x137>
movzx  ebx,si
jmp    9a01 <_Z14blocked_packetP11sockaddr_in@@Base+0x91>
mov    eax,ds:0x0
lea    ebx,[ebp-0x140]
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
mov    DWORD PTR [esp+0x8],0x100
call   DWORD PTR [edx+0xd8]
mov    DWORD PTR [esp+0xc],ebx
lea    ebx,[ebp-0x340]
mov    DWORD PTR [esp+0x8],0x15613
mov    DWORD PTR [esp+0x4],0x200
mov    DWORD PTR [esp],ebx
call   9c97 <_Z14blocked_packetP11sockaddr_in@@Base+0x327>
mov    DWORD PTR [esp+0x4],0x2f
mov    DWORD PTR [esp],ebx
call   9ca7 <_Z14blocked_packetP11sockaddr_in@@Base+0x337>
mov    DWORD PTR [esp+0x4],0x15629
mov    DWORD PTR [esp],ebx
call   9cb7 <_Z14blocked_packetP11sockaddr_in@@Base+0x347>
test   eax,eax
mov    edi,eax
je     9a83 <_Z14blocked_packetP11sockaddr_in@@Base+0x113>
lea    eax,[ebp-0x40]
mov    esi,0x1562c
mov    DWORD PTR [esp],eax
mov    eax,ds:0x0
call   DWORD PTR [eax+0x5c]
mov    ebx,DWORD PTR [ebp-0x38]
mov    edx,0x2aaaaaab
mov    eax,ebx
imul   edx
mov    eax,ebx
sar    eax,0x1f
sar    edx,1
sub    edx,eax
mov    eax,0x1562f
lea    edx,[edx+edx*2]
shl    edx,0x2
cmp    ebx,0xb
cmova  esi,eax
sub    ebx,edx
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,0xc
cmove  ebx,eax
mov    eax,DWORD PTR [edx+0x4]
mov    DWORD PTR [esp],eax
call   9d12 <_Z14blocked_packetP11sockaddr_in@@Base+0x3a2>
mov    edx,0x51eb851f
mov    DWORD PTR [esp+0x20],esi
mov    DWORD PTR [esp+0x24],eax
mov    eax,DWORD PTR [ebp-0x40]
mov    DWORD PTR [esp+0x1c],eax
mov    eax,DWORD PTR [ebp-0x3c]
mov    DWORD PTR [esp+0x14],ebx
mov    DWORD PTR [esp+0x18],eax
mov    ecx,DWORD PTR [ebp-0x2c]
mov    eax,ecx
imul   edx
mov    eax,ecx
sar    eax,0x1f
sar    edx,0x5
sub    edx,eax
imul   edx,edx,0x64
sub    ecx,edx
mov    DWORD PTR [esp+0x10],ecx
mov    eax,DWORD PTR [ebp-0x34]
mov    DWORD PTR [esp+0xc],eax
mov    eax,DWORD PTR [ebp-0x30]
mov    DWORD PTR [esp+0x4],0x15490
mov    DWORD PTR [esp],edi
add    eax,0x1
mov    DWORD PTR [esp+0x8],eax
call   9d6c <_Z14blocked_packetP11sockaddr_in@@Base+0x3fc>
mov    DWORD PTR [esp],edi
call   9d74 <_Z14blocked_packetP11sockaddr_in@@Base+0x404>
jmp    9a83 <_Z14blocked_packetP11sockaddr_in@@Base+0x113>
lea    eax,[esi+esi*2]
lea    ebx,[eax*4+0x0]
lea    eax,[edx+edx*2]
shl    eax,0x2
mov    DWORD PTR [esp+0x8],eax
lea    eax,[ecx+ebx*1]
mov    DWORD PTR [esp+0x4],eax
lea    eax,[edi+edi*2]
lea    eax,[ecx+eax*4]
mov    DWORD PTR [esp],eax
call   9da2 <_Z14blocked_packetP11sockaddr_in@@Base+0x432>
jmp    9ad7 <_Z14blocked_packetP11sockaddr_in@@Base+0x167>
mov    DWORD PTR [esp],0x0
call   9db3 <_Z14blocked_packetP11sockaddr_in@@Base+0x443>
test   eax,eax
je     9a18 <_Z14blocked_packetP11sockaddr_in@@Base+0xa8>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   9de2 <_Z14blocked_packetP11sockaddr_in@@Base+0x472>
jmp    9a18 <_Z14blocked_packetP11sockaddr_in@@Base+0xa8>
test   eax,eax
je     9e05 <_Z14blocked_packetP11sockaddr_in@@Base+0x495>
add    eax,eax
cmp    edi,eax
jle    9c16 <_Z14blocked_packetP11sockaddr_in@@Base+0x2a6>
add    eax,eax
cmp    edi,eax
jg     9def <_Z14blocked_packetP11sockaddr_in@@Base+0x47f>
nop
jmp    9c16 <_Z14blocked_packetP11sockaddr_in@@Base+0x2a6>
cmp    edi,0x3
mov    al,0x3
jg     9def <_Z14blocked_packetP11sockaddr_in@@Base+0x47f>
lea    esi,[esi+eiz*1+0x0]
jmp    9c16 <_Z14blocked_packetP11sockaddr_in@@Base+0x2a6>
mov    edx,DWORD PTR ds:0x0
lea    eax,[eax+eax*2]
shl    eax,0x2
mov    ecx,DWORD PTR [edx]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],edx
call   DWORD PTR [ecx]
mov    ds:0x0,eax
jmp    9aa7 <_Z14blocked_packetP11sockaddr_in@@Base+0x137>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x24],eax
mov    DWORD PTR [ebp-0x14],eax
movzx  eax,WORD PTR ds:0x10
cmp    ax,0xffff
je     9ebc <_Z15a2cprint_packetP11sockaddr_in@@Base+0x7c>
lea    edi,[ebp-0x14]
movzx  esi,ax
mov    ebx,esi
shl    ebx,0x4
mov    eax,ebx
add    eax,DWORD PTR ds:0x4
mov    DWORD PTR [esp],edi
add    eax,0x8
mov    DWORD PTR [esp+0x4],eax
call   DWORD PTR ds:0x0
test   al,al
je     9fc2 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x182>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,esi
je     a015 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x1d5>
cmp    bx,0xffff
mov    eax,0x0
je     9eb3 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x73>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax]
cmp    ax,0xffff
jne    9e65 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x25>
mov    esi,0xffffffff
mov    ebx,0xffff
cmp    ebx,DWORD PTR ds:0x8
jge    9f29 <_Z15a2cprint_packetP11sockaddr_in@@Base+0xe9>
cmp    BYTE PTR ds:0x0,0x0
mov    edi,ebx
je     a124 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x2e4>
cmp    di,0xffff
mov    eax,0x0
je     9ef4 <_Z15a2cprint_packetP11sockaddr_in@@Base+0xb4>
movzx  eax,di
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    WORD PTR [eax],si
je     9f29 <_Z15a2cprint_packetP11sockaddr_in@@Base+0xe9>
mov    eax,ds:0x4
shl    ebx,0x4
mov    edx,DWORD PTR ds:0x0
mov    eax,DWORD PTR [ebx+eax*1+0xc]
mov    edx,DWORD PTR [edx+0xc]
lea    eax,[eax+eax*2]
shl    eax,0x2
add    eax,DWORD PTR ds:0x0
add    DWORD PTR [eax+0x4],0x1
mov    DWORD PTR [eax+0x8],edx
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,DWORD PTR ds:0xc
cmp    esi,0x7ff
jg     9f21 <_Z15a2cprint_packetP11sockaddr_in@@Base+0xe1>
mov    eax,ds:0x0
lea    edi,[esi+0x1]
fld    DWORD PTR [eax+0xc]
mov    eax,ds:0x4
fstp   DWORD PTR [ebp-0x20]
cmp    edi,eax
jg     a091 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x251>
mov    eax,ds:0xc
mov    ecx,DWORD PTR ds:0x0
add    eax,0x1
mov    ds:0xc,eax
sub    eax,esi
lea    edx,[eax-0x1]
test   edx,edx
mov    DWORD PTR ds:0x10,ecx
jg     a0f6 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x2b6>
lea    eax,[esi+esi*2]
lea    ebx,[eax*4+0x0]
mov    eax,ebx
add    eax,DWORD PTR ds:0x0
je     9f9e <_Z15a2cprint_packetP11sockaddr_in@@Base+0x15e>
mov    edx,DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x20]
fstp   DWORD PTR [eax+0x8]
mov    DWORD PTR [eax+0x4],0x1
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp-0x24]
mov    DWORD PTR [ebp-0x10],esi
mov    DWORD PTR [ebp-0x14],eax
lea    eax,[ebp-0x14]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],0x0
call   9fb6 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x176>
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
add    ebx,DWORD PTR ds:0x4
mov    DWORD PTR [esp+0x4],edi
lea    eax,[ebx+0x8]
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     a0ee <_Z15a2cprint_packetP11sockaddr_in@@Base+0x2ae>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,esi
je     a055 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x215>
cmp    bx,0xffff
mov    eax,0x0
je     a002 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x1c2>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax+0x2]
cmp    ax,0xffff
jne    9e65 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x25>
jmp    9ebc <_Z15a2cprint_packetP11sockaddr_in@@Base+0x7c>
mov    DWORD PTR [esp],0x0
call   a01d <_Z15a2cprint_packetP11sockaddr_in@@Base+0x1dd>
test   eax,eax
je     9e9c <_Z15a2cprint_packetP11sockaddr_in@@Base+0x5c>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a04c <_Z15a2cprint_packetP11sockaddr_in@@Base+0x20c>
jmp    9e9c <_Z15a2cprint_packetP11sockaddr_in@@Base+0x5c>
mov    DWORD PTR [esp],0x0
call   a05d <_Z15a2cprint_packetP11sockaddr_in@@Base+0x21d>
test   eax,eax
je     9feb <_Z15a2cprint_packetP11sockaddr_in@@Base+0x1ab>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a088 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x248>
jmp    9feb <_Z15a2cprint_packetP11sockaddr_in@@Base+0x1ab>
mov    ecx,DWORD PTR ds:0x8
cmp    ecx,0x0
jl     9f52 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x112>
je     a164 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x324>
mov    edx,esi
mov    eax,esi
sar    edx,0x1f
idiv   ecx
add    eax,0x1
imul   eax,ecx
mov    ebx,DWORD PTR ds:0x0
mov    ds:0x4,eax
test   ebx,ebx
je     a18d <_Z15a2cprint_packetP11sockaddr_in@@Base+0x34d>
mov    edx,DWORD PTR ds:0x0
lea    eax,[eax+eax*2]
shl    eax,0x2
mov    ecx,DWORD PTR [edx]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],edx
call   DWORD PTR [ecx+0x4]
mov    ds:0x0,eax
jmp    9f52 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x112>
movzx  ebx,si
jmp    9ec6 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x86>
lea    eax,[esi+esi*2]
lea    ebx,[eax*4+0x0]
lea    eax,[edx+edx*2]
shl    eax,0x2
mov    DWORD PTR [esp+0x8],eax
lea    eax,[ecx+ebx*1]
mov    DWORD PTR [esp+0x4],eax
lea    eax,[edi+edi*2]
lea    eax,[ecx+eax*4]
mov    DWORD PTR [esp],eax
call   a11b <_Z15a2cprint_packetP11sockaddr_in@@Base+0x2db>
jmp    9f82 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x142>
mov    DWORD PTR [esp],0x0
call   a12c <_Z15a2cprint_packetP11sockaddr_in@@Base+0x2ec>
test   eax,eax
je     9edd <_Z15a2cprint_packetP11sockaddr_in@@Base+0x9d>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a15b <_Z15a2cprint_packetP11sockaddr_in@@Base+0x31b>
jmp    9edd <_Z15a2cprint_packetP11sockaddr_in@@Base+0x9d>
test   eax,eax
je     a181 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x341>
add    eax,eax
cmp    edi,eax
lea    esi,[esi+eiz*1+0x0]
jle    a0b5 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x275>
add    eax,eax
cmp    edi,eax
jg     a168 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x328>
jmp    a0b5 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x275>
cmp    edi,0x3
mov    al,0x3
jg     a168 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x328>
jmp    a0b5 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x275>
mov    edx,DWORD PTR ds:0x0
lea    eax,[eax+eax*2]
shl    eax,0x2
mov    ecx,DWORD PTR [edx]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],edx
call   DWORD PTR [ecx]
mov    ds:0x0,eax
jmp    9f52 <_Z15a2cprint_packetP11sockaddr_in@@Base+0x112>
xchg   ax,ax
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
mov    DWORD PTR [esp+0x4],0x1
call   a1c8 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x18>
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15632
call   DWORD PTR [ebp+0x10]
test   eax,eax
mov    ds:0x0,eax
je     a58c <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3dc>
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15647
call   DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15658
mov    ds:0x0,eax
call   DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15670
mov    ds:0x0,eax
call   DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15685
mov    ds:0x0,eax
call   DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR ds:0x0
test   esi,esi
mov    ds:0x0,eax
je     a577 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3c7>
mov    ebx,DWORD PTR ds:0x0
test   ebx,ebx
je     a577 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3c7>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     a577 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3c7>
test   eax,eax
je     a577 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3c7>
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15200
call   DWORD PTR [ebp+0xc]
test   eax,eax
mov    ds:0x0,eax
je     a558 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3a8>
mov    edx,DWORD PTR ds:0x0
test   edx,edx
je     a2af <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0xff>
mov    eax,DWORD PTR [edx]
mov    DWORD PTR [esp],edx
call   DWORD PTR [eax+0x4]
mov    ds:0x0,eax
mov    eax,0x400ccccd
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],eax
mov    DWORD PTR [esp+0x1c],0x1
mov    DWORD PTR [esp+0x18],0x1
mov    DWORD PTR [esp+0x14],0x1
mov    DWORD PTR [esp+0x10],0x1
mov    DWORD PTR [esp+0xc],0x2
mov    DWORD PTR [esp+0x8],0x0
call   a2ec <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x13c>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp],eax
call   a2f7 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x147>
mov    edx,DWORD PTR ds:0x8
mov    DWORD PTR ds:0xc,0x0
test   edx,edx
jns    a3b5 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x205>
mov    ecx,DWORD PTR ds:0x0
movzx  eax,WORD PTR ds:0x16
mov    DWORD PTR ds:0x10,ecx
mov    esi,eax
sub    esi,0x1
js     a3f0 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x240>
mov    WORD PTR [ebp-0xe],0xffff
jmp    a366 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x1b6>
lea    esi,[esi+eiz*1+0x0]
mov    eax,edi
movzx  edx,WORD PTR [ebp-0xe]
sub    esi,0x1
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    esi,0xffffffff
mov    WORD PTR [eax+0x2],dx
mov    WORD PTR [eax],bx
je     a3f0 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x240>
mov    WORD PTR [ebp-0xe],bx
movzx  edi,si
mov    ebx,esi
cmp    edi,DWORD PTR ds:0x8
jge    a340 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x190>
cmp    BYTE PTR ds:0x0,0x0
jne    a340 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x190>
mov    DWORD PTR [esp],0x0
call   a384 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x1d4>
test   eax,eax
je     a340 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x190>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a3af <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x1ff>
jmp    a340 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x190>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     a3dc <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x22c>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
jmp    a319 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x169>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    WORD PTR ds:0x16,0x1
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
sbb    eax,eax
mov    ds:0x14,ax
mov    eax,ds:0x0
test   eax,eax
jne    a425 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x275>
mov    DWORD PTR ds:0x0,0x0
mov    eax,ds:0x8
mov    DWORD PTR ds:0xc,0x0
test   eax,eax
js     a581 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3d1>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     a463 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2b3>
mov    eax,ds:0x0
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x8]
xor    ecx,ecx
mov    DWORD PTR ds:0x0,0x0
mov    DWORD PTR ds:0x4,0x0
movzx  eax,WORD PTR ds:0x16
mov    DWORD PTR ds:0x10,ecx
mov    esi,eax
sub    esi,0x1
js     a501 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x351>
mov    WORD PTR [ebp-0x10],0xffff
jmp    a4b2 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x302>
lea    esi,[esi+0x0]
mov    eax,edi
movzx  edx,WORD PTR [ebp-0x10]
sub    esi,0x1
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
cmp    esi,0xffffffff
mov    WORD PTR [eax+0x2],dx
mov    WORD PTR [eax],bx
je     a501 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x351>
mov    WORD PTR [ebp-0x10],bx
movzx  edi,si
mov    ebx,esi
cmp    edi,DWORD PTR ds:0x8
jge    a490 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2e0>
cmp    BYTE PTR ds:0x0,0x0
jne    a490 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2e0>
mov    DWORD PTR [esp],0x0
call   a4d0 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x320>
test   eax,eax
je     a490 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2e0>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a4fb <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x34b>
jmp    a490 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2e0>
cmp    WORD PTR ds:0x16,0x1
mov    WORD PTR ds:0x10,0xffff
mov    WORD PTR ds:0x12,0x0
sbb    eax,eax
mov    ds:0x14,ax
mov    eax,ds:0x0
test   eax,eax
jne    a536 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x386>
mov    DWORD PTR ds:0x0,0x0
mov    edx,DWORD PTR ds:0x0
mov    eax,DWORD PTR [edx+0x2c]
mov    ds:0x0,eax
mov    eax,0x1
mov    DWORD PTR [edx+0x2c],0x0
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    DWORD PTR [esp+0x4],0x0
mov    DWORD PTR [esp],0x15696
call   DWORD PTR [ebp+0xc]
test   eax,eax
mov    ds:0x0,eax
jne    a298 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0xe8>
add    esp,0x2c
xor    eax,eax
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ecx,DWORD PTR ds:0x0
jmp    a46d <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x2bd>
mov    DWORD PTR [esp],0x154c0
call   a594 <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3e4>
jmp    a1eb <_ZN18CEmptyServerPlugin4LoadEPFPvPKcPiES5_@@Base+0x3b>
nop
xchg   ax,ax
push   ebp
mov    ebp,esp
sub    esp,0x58
mov    eax,ds:0x17358
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x18]
mov    DWORD PTR [ebp-0xc],ebx
mov    eax,DWORD PTR [eax+0x2c]
test   eax,eax
je     a760 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x1c0>
mov    eax,DWORD PTR [ebp+0x1c]
mov    edx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [esp+0x10],edi
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp+0x14],eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0xc],edx
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edx
call   DWORD PTR ds:0x0
test   eax,eax
mov    ebx,eax
je     a745 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x1a5>
cmp    eax,0x4
jg     a610 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x70>
mov    eax,ebx
mov    esi,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [esi],0xff
jne    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
cmp    BYTE PTR [esi+0x1],0xff
jne    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
cmp    BYTE PTR [esi+0x2],0xff
nop
jne    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
cmp    BYTE PTR [esi+0x3],0xff
jne    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
cmp    BYTE PTR [esi+0x4],0x6c
lea    esi,[esi+eiz*1+0x0]
jne    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
mov    eax,ds:0x17418
mov    eax,DWORD PTR [eax+0x2c]
test   eax,eax
jne    a73d <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x19d>
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [ebp-0x14],eax
movzx  eax,WORD PTR ds:0x10
cmp    ax,0xffff
je     a6b9 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x119>
movzx  eax,ax
mov    DWORD PTR [ebp-0x3c],eax
shl    eax,0x4
mov    DWORD PTR [ebp-0x40],eax
add    eax,DWORD PTR ds:0x4
add    eax,0x8
mov    DWORD PTR [esp+0x4],eax
lea    eax,[ebp-0x14]
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     a790 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x1f0>
movzx  edx,WORD PTR [ebp-0x3c]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x38],dx
je     a7ee <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x24e>
cmp    WORD PTR [ebp-0x38],0xffff
mov    eax,0x0
je     a6b0 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x110>
movzx  eax,WORD PTR [ebp-0x38]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax]
cmp    ax,0xffff
jne    a655 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0xb5>
mov    WORD PTR [ebp-0x34],0xffff
mov    eax,0xffff
cmp    eax,DWORD PTR ds:0x8
jge    a6ff <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x15f>
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x32],ax
je     aa37 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x497>
cmp    WORD PTR [ebp-0x32],0xffff
mov    eax,0x0
je     a6f6 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x156>
movzx  eax,WORD PTR [ebp-0x32]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  edx,WORD PTR [ebp-0x34]
cmp    WORD PTR [eax],dx
jne    a73d <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x19d>
mov    eax,ds:0x174d8
mov    eax,DWORD PTR [eax+0x2c]
test   eax,eax
je     a839 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x299>
cmp    ebx,0x5
mov    ecx,0x5
jle    a839 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x299>
movzx  edx,BYTE PTR [ecx+esi*1]
lea    eax,[edx-0x20]
cmp    al,0x5e
jbe    a82e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x28e>
test   dl,dl
je     a82e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x28e>
cmp    dl,0xa
je     a82e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x28e>
mov    DWORD PTR [esp],edi
call   a741 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x1a1>
mov    DWORD PTR [esp],edi
call   a749 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x1a9>
add    DWORD PTR ds:0x17584,0x1
jmp    a5c5 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x25>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x1c]
mov    edx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [esp+0x10],edi
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp+0x14],eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0xc],edx
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edx
call   DWORD PTR ds:0x0
mov    ebx,eax
jmp    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
mov    edx,DWORD PTR ds:0x4
lea    eax,[ebp-0x14]
add    DWORD PTR [ebp-0x40],edx
mov    DWORD PTR [esp+0x4],eax
mov    eax,DWORD PTR [ebp-0x40]
add    eax,0x8
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     aab7 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x517>
movzx  eax,WORD PTR [ebp-0x3c]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x36],ax
je     a959 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3b9>
cmp    WORD PTR [ebp-0x36],0xffff
mov    eax,0x0
je     a7e5 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x245>
movzx  eax,WORD PTR [ebp-0x36]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax+0x2]
jmp    a64f <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0xaf>
mov    DWORD PTR [esp],0x0
call   a7f6 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x256>
test   eax,eax
je     a697 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0xf7>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a825 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x285>
jmp    a697 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0xf7>
add    ecx,0x1
cmp    ecx,ebx
jne    a71d <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x17d>
mov    eax,ds:0x17478
mov    eax,DWORD PTR [eax+0x2c]
test   eax,eax
je     a94c <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3ac>
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [ebp-0x14],eax
movzx  eax,WORD PTR ds:0x10
cmp    ax,0xffff
je     a8c0 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x320>
movzx  eax,ax
mov    DWORD PTR [ebp-0x2c],eax
shl    eax,0x4
mov    DWORD PTR [ebp-0x30],eax
add    eax,DWORD PTR ds:0x4
add    eax,0x8
mov    DWORD PTR [esp+0x4],eax
lea    eax,[ebp-0x14]
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     a999 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3f9>
movzx  edx,WORD PTR [ebp-0x2c]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x28],dx
je     a9f7 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x457>
cmp    WORD PTR [ebp-0x28],0xffff
mov    eax,0x0
je     a8b7 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x317>
movzx  eax,WORD PTR [ebp-0x28]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax]
cmp    ax,0xffff
jne    a85c <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x2bc>
mov    WORD PTR [ebp-0x20],0xffff
mov    DWORD PTR [ebp-0x24],0xffff
mov    edx,DWORD PTR [ebp-0x24]
cmp    DWORD PTR ds:0x8,edx
jle    a94c <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3ac>
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x1e],dx
je     aac7 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x527>
cmp    WORD PTR [ebp-0x1e],0xffff
mov    eax,0x0
je     a902 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x362>
movzx  eax,WORD PTR [ebp-0x1e]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  edx,WORD PTR [ebp-0x20]
cmp    WORD PTR [eax],dx
je     a94c <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3ac>
shl    DWORD PTR [ebp-0x24],0x4
mov    edx,DWORD PTR [ebp-0x24]
mov    eax,ds:0x4
mov    eax,DWORD PTR [edx+eax*1+0xc]
lea    eax,[eax+eax*2]
lea    edx,[eax*4+0x0]
add    edx,DWORD PTR ds:0x0
cmp    DWORD PTR [edx+0x4],0x1
jbe    a94c <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3ac>
mov    eax,ds:0x0
fld    DWORD PTR [eax+0xc]
fsub   DWORD PTR [edx+0x8]
fld    DWORD PTR ds:0x156a8
fucomip st,st(1)
fstp   st(0)
ja     a73d <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x19d>
mov    DWORD PTR [esp],edi
call   a950 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3b0>
jmp    a5fd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x5d>
mov    DWORD PTR [esp],0x0
call   a961 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3c1>
test   eax,eax
je     a7cc <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x22c>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   a990 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x3f0>
jmp    a7cc <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x22c>
mov    edx,DWORD PTR ds:0x4
lea    eax,[ebp-0x14]
add    DWORD PTR [ebp-0x30],edx
mov    DWORD PTR [esp+0x4],eax
mov    eax,DWORD PTR [ebp-0x30]
add    eax,0x8
mov    DWORD PTR [esp],eax
call   DWORD PTR ds:0x0
test   al,al
je     ab07 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x567>
movzx  eax,WORD PTR [ebp-0x2c]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x26],ax
je     aa77 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x4d7>
cmp    WORD PTR [ebp-0x26],0xffff
mov    eax,0x0
je     a9ee <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x44e>
movzx  eax,WORD PTR [ebp-0x26]
shl    eax,0x4
add    eax,DWORD PTR ds:0x4
movzx  eax,WORD PTR [eax+0x2]
jmp    a856 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x2b6>
mov    DWORD PTR [esp],0x0
call   a9ff <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x45f>
test   eax,eax
je     a89e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x2fe>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aa2e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x48e>
jmp    a89e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x2fe>
mov    DWORD PTR [esp],0x0
call   aa3f <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x49f>
test   eax,eax
je     a6dd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x13d>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aa6e <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x4ce>
jmp    a6dd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x13d>
mov    DWORD PTR [esp],0x0
call   aa7f <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x4df>
test   eax,eax
je     a9d5 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x435>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aaae <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x50e>
jmp    a9d5 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x435>
movzx  edx,WORD PTR [ebp-0x3c]
movzx  eax,dx
mov    WORD PTR [ebp-0x34],dx
jmp    a6c4 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x124>
mov    DWORD PTR [esp],0x0
call   aacf <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x52f>
test   eax,eax
je     a8e9 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x349>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aafe <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x55e>
jmp    a8e9 <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x349>
movzx  edx,WORD PTR [ebp-0x2c]
movzx  eax,dx
mov    WORD PTR [ebp-0x20],dx
mov    DWORD PTR [ebp-0x24],eax
jmp    a8cd <_Z12SOP_recvfromiPciiP8sockaddrPi@@Base+0x32d>
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
pop    ebp
mov    eax,DWORD PTR [eax+0x8]
ret    
nop
nop
nop
nop
nop
add    DWORD PTR [esp+0x4],0xfffffffc
jmp    8ba0 <_ZN18CEmptyServerPlugin13FireGameEventEP9KeyValues@@Base>
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [eax]
mov    eax,DWORD PTR [ebp+0xc]
pop    ebp
cmp    edx,DWORD PTR [eax]
setb   al
movzx  eax,al
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
movzx  ebx,WORD PTR [ebp+0xc]
cmp    BYTE PTR ds:0x0,0x0
je     ab93 <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x33>
cmp    bx,0xffff
mov    edx,0x0
je     ab8b <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x2b>
mov    eax,DWORD PTR [ebp+0x8]
movzx  edx,bx
shl    edx,0x4
add    edx,DWORD PTR [eax+0x4]
add    esp,0x4
mov    eax,edx
pop    ebx
pop    ebp
ret    
mov    DWORD PTR [esp],0x0
call   ab9b <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x3b>
test   eax,eax
je     ab74 <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x14>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   abc6 <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x66>
jmp    ab74 <_ZNK10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE5LinksEt@@Base+0x14>
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
pop    ebp
jmp    abde <_ZN18IGameEventListenerD0Ev@@Base+0xe>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x8
pop    ebp
ret    
nop
nop
add    DWORD PTR [esp+0x4],0xfffffffc
jmp    8ca0 <_ZN18CEmptyServerPluginD0Ev@@Base>
nop
nop
nop
nop
nop
nop
add    DWORD PTR [esp+0x4],0xfffffffc
jmp    8cc0 <_ZN18CEmptyServerPluginD1Ev@@Base>
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
movzx  eax,WORD PTR [ebp+0xc]
cmp    BYTE PTR ds:0x0,0x0
mov    esi,DWORD PTR [ebp+0x8]
movzx  edx,ax
mov    WORD PTR [ebp-0x22],ax
mov    WORD PTR [ebp-0x20],ax
mov    DWORD PTR [ebp-0x28],edx
mov    WORD PTR [ebp-0x16],dx
je     af34 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x314>
cmp    WORD PTR [ebp-0x16],0xffff
je     af74 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x354>
movzx  ecx,WORD PTR [ebp-0x16]
mov    DWORD PTR [ebp-0x1c],ecx
shl    ecx,0x4
mov    eax,ecx
add    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebp-0x14],ecx
movzx  edi,WORD PTR [eax]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x1e],di
mov    ebx,edi
je     aef4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x2d4>
cmp    bx,0xffff
mov    eax,0x0
mov    DWORD PTR [ebp-0x10],0xffff0
je     aca0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x80>
movzx  eax,bx
shl    eax,0x4
mov    DWORD PTR [ebp-0x10],eax
add    eax,DWORD PTR [esi+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x2]
mov    ecx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+ecx*1],ax
cmp    BYTE PTR ds:0x0,0x0
je     aeb4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x294>
cmp    bx,0xffff
mov    eax,0x0
je     accc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xac>
mov    eax,DWORD PTR [ebp-0x10]
add    eax,DWORD PTR [esi+0x4]
cmp    WORD PTR [eax+0x2],0xffff
je     ad04 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xe4>
cmp    BYTE PTR ds:0x0,0x0
je     ae74 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x254>
add    bx,0x1
mov    eax,0x0
je     acf1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xd1>
mov    eax,DWORD PTR [ebp-0x10]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x2]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x20]
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x4],cx
cmp    di,0xffff
je     ad38 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x118>
cmp    BYTE PTR ds:0x0,0x0
je     ae34 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x214>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     ad29 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x109>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    ecx,DWORD PTR [ebp-0x10]
mov    WORD PTR [ecx+edx*1+0x4],ax
movzx  eax,WORD PTR [esi+0x10]
cmp    DWORD PTR [ebp-0x28],eax
je     add0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1b0>
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [ebp-0x1c]
je     af90 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x370>
cmp    bx,0xffff
mov    eax,0x0
je     ad6a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x14a>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [esi+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     afd0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3b0>
cmp    bx,0xffff
mov    eax,0x0
je     ad8f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x16f>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [esi+0x4]
movzx  edx,WORD PTR [ebp-0x20]
cmp    WORD PTR [eax+0x2],dx
je     ae00 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1e0>
cmp    BYTE PTR ds:0x0,0x0
je     b050 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x430>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     adb8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x198>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x1e]
shl    eax,0x4
mov    WORD PTR [eax+edx*1],cx
jmp    add7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1b7>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [esi+0x4]
mov    WORD PTR [esi+0x10],di
movzx  ecx,WORD PTR [ebp-0x20]
mov    eax,DWORD PTR [ebp-0x10]
cmp    WORD PTR [ebp-0x22],0xffff
mov    WORD PTR [edx+eax*1+0x2],cx
je     adf6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1d6>
movzx  ecx,WORD PTR [ebp-0x1e]
mov    eax,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+eax*1+0x4],cx
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
xchg   ax,ax
cmp    BYTE PTR ds:0x0,0x0
je     b010 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3f0>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     ae1f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1ff>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x1e]
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x2],cx
jmp    add7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1b7>
mov    DWORD PTR [esp],0x0
call   ae3c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x21c>
test   eax,eax
je     ad17 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xf7>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   ae6b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x24b>
jmp    ad17 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xf7>
mov    DWORD PTR [esp],0x0
call   ae7c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x25c>
test   eax,eax
je     ace0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xc0>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aeab <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x28b>
jmp    ace0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0xc0>
mov    DWORD PTR [esp],0x0
call   aebc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x29c>
test   eax,eax
je     acbb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x9b>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   aeeb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x2cb>
jmp    acbb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x9b>
mov    DWORD PTR [esp],0x0
call   aefc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x2dc>
test   eax,eax
je     ac82 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x62>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   af2b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x30b>
jmp    ac82 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x62>
mov    DWORD PTR [esp],0x0
call   af3c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x31c>
test   eax,eax
je     ac4f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x2f>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   af6b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x34b>
jmp    ac4f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x2f>
mov    eax,0x0
mov    DWORD PTR [ebp-0x1c],0xffff
mov    DWORD PTR [ebp-0x14],0xffff0
jmp    ac6c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x4c>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esp],0x0
call   af98 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x378>
test   eax,eax
je     ad56 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x136>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   afc7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3a7>
jmp    ad56 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x136>
mov    DWORD PTR [esp],0x0
call   afd8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3b8>
test   eax,eax
je     ad7b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x15b>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b007 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3e7>
jmp    ad7b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x15b>
mov    DWORD PTR [esp],0x0
call   b018 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x3f8>
test   eax,eax
je     ae0d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1ed>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b047 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x427>
jmp    ae0d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x1ed>
mov    DWORD PTR [esp],0x0
call   b058 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x438>
test   eax,eax
je     ada6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x186>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b087 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x467>
jmp    ada6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE11RotateRightEt@@Base+0x186>
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0xc],ebx
mov    DWORD PTR [ebp-0x4],edi
movzx  eax,WORD PTR [esi+0x14]
cmp    ax,0xffff
je     b130 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xa0>
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,ax
mov    edi,ebx
je     b0f0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x60>
cmp    di,0xffff
mov    eax,0x0
je     b0d2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x42>
movzx  eax,di
shl    eax,0x4
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x2]
mov    WORD PTR [esi+0x14],ax
mov    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [esi+0x18],eax
mov    eax,ebx
mov    esi,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
mov    DWORD PTR [esp],0x0
call   b0f8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x68>
test   eax,eax
je     b0be <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x2e>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b123 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x93>
jmp    b0be <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x2e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[esi+0x4]
movzx  eax,WORD PTR [esi+0x16]
mov    ecx,DWORD PTR [edi+0x4]
cmp    ecx,eax
je     b14d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xbd>
movzx  edx,WORD PTR [esi+0x16]
lea    eax,[edx+0x1]
mov    ebx,edx
mov    WORD PTR [esi+0x16],ax
jmp    b0da <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x4a>
mov    ebx,DWORD PTR [edi+0x8]
test   ebx,ebx
js     b13e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xae>
test   ebx,ebx
lea    edx,[ecx+0x1]
je     b18f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xff>
mov    edx,ecx
mov    eax,ecx
sar    edx,0x1f
idiv   ebx
lea    ecx,[eax+0x1]
imul   ecx,ebx
mov    ebx,DWORD PTR [edi]
mov    DWORD PTR [edi+0x4],ecx
test   ebx,ebx
je     b1a8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x118>
mov    eax,ds:0x0
shl    ecx,0x4
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x8],ecx
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx+0x4]
mov    DWORD PTR [edi],eax
jmp    b13e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xae>
test   ecx,ecx
mov    eax,0x2
cmove  ecx,eax
cmp    ecx,edx
jge    b16a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xda>
lea    esi,[esi+0x0]
add    ecx,ecx
cmp    edx,ecx
jg     b1a0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0x110>
jmp    b16a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xda>
mov    eax,ds:0x0
shl    ecx,0x4
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   DWORD PTR [edx]
mov    DWORD PTR [edi],eax
jmp    b13e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE7NewNodeEv@@Base+0xae>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
movzx  eax,WORD PTR [ebp+0xc]
cmp    BYTE PTR ds:0x0,0x0
mov    esi,DWORD PTR [ebp+0x8]
movzx  edx,ax
mov    WORD PTR [ebp-0x22],ax
mov    WORD PTR [ebp-0x20],ax
mov    DWORD PTR [ebp-0x28],edx
mov    WORD PTR [ebp-0x16],dx
je     b4e3 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x313>
cmp    WORD PTR [ebp-0x16],0xffff
je     b523 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x353>
movzx  ecx,WORD PTR [ebp-0x16]
mov    DWORD PTR [ebp-0x1c],ecx
shl    ecx,0x4
mov    eax,ecx
add    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebp-0x14],ecx
movzx  edi,WORD PTR [eax+0x2]
cmp    BYTE PTR ds:0x0,0x0
mov    WORD PTR [ebp-0x1e],di
mov    ebx,edi
je     b4a3 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x2d3>
cmp    bx,0xffff
mov    eax,0x0
mov    DWORD PTR [ebp-0x10],0xffff0
je     b251 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x81>
movzx  eax,bx
shl    eax,0x4
mov    DWORD PTR [ebp-0x10],eax
add    eax,DWORD PTR [esi+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax]
mov    ecx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+ecx*1+0x2],ax
cmp    BYTE PTR ds:0x0,0x0
je     b463 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x293>
cmp    bx,0xffff
mov    eax,0x0
je     b27d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xad>
mov    eax,DWORD PTR [ebp-0x10]
add    eax,DWORD PTR [esi+0x4]
cmp    WORD PTR [eax],0xffff
je     b2b3 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xe3>
cmp    BYTE PTR ds:0x0,0x0
je     b423 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x253>
add    bx,0x1
mov    eax,0x0
je     b2a1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xd1>
mov    eax,DWORD PTR [ebp-0x10]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x20]
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x4],cx
cmp    di,0xffff
je     b2e7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x117>
cmp    BYTE PTR ds:0x0,0x0
je     b3e3 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x213>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     b2d8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x108>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    ecx,DWORD PTR [ebp-0x10]
mov    WORD PTR [ecx+edx*1+0x4],ax
movzx  eax,WORD PTR [esi+0x10]
cmp    DWORD PTR [ebp-0x28],eax
je     b380 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1b0>
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [ebp-0x1c]
je     b540 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x370>
cmp    bx,0xffff
mov    eax,0x0
je     b319 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x149>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [esi+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     b580 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3b0>
cmp    bx,0xffff
mov    eax,0x0
je     b33e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x16e>
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [esi+0x4]
movzx  edx,WORD PTR [ebp-0x20]
cmp    WORD PTR [eax],dx
je     b3b0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1e0>
cmp    BYTE PTR ds:0x0,0x0
je     b600 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x430>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     b366 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x196>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x1e]
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x2],cx
jmp    b387 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1b7>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [esi+0x4]
mov    WORD PTR [esi+0x10],di
movzx  ecx,WORD PTR [ebp-0x20]
mov    eax,DWORD PTR [ebp-0x10]
cmp    WORD PTR [ebp-0x22],0xffff
mov    WORD PTR [edx+eax*1],cx
je     b3a5 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1d5>
movzx  ecx,WORD PTR [ebp-0x1e]
mov    eax,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+eax*1+0x4],cx
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
cmp    BYTE PTR ds:0x0,0x0
je     b5c0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3f0>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     b3cf <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1ff>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,DWORD PTR [esi+0x4]
movzx  eax,WORD PTR [eax+0x4]
mov    edx,DWORD PTR [esi+0x4]
movzx  ecx,WORD PTR [ebp-0x1e]
shl    eax,0x4
mov    WORD PTR [eax+edx*1],cx
jmp    b387 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1b7>
mov    DWORD PTR [esp],0x0
call   b3eb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x21b>
test   eax,eax
je     b2c6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xf6>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b41a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x24a>
jmp    b2c6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xf6>
mov    DWORD PTR [esp],0x0
call   b42b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x25b>
test   eax,eax
je     b290 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xc0>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b45a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x28a>
jmp    b290 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0xc0>
mov    DWORD PTR [esp],0x0
call   b46b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x29b>
test   eax,eax
je     b26c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x9c>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b49a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x2ca>
jmp    b26c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x9c>
mov    DWORD PTR [esp],0x0
call   b4ab <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x2db>
test   eax,eax
je     b233 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x63>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b4da <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x30a>
jmp    b233 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x63>
mov    DWORD PTR [esp],0x0
call   b4eb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x31b>
test   eax,eax
je     b1ff <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x2f>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b51a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x34a>
jmp    b1ff <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x2f>
mov    eax,0x0
mov    DWORD PTR [ebp-0x1c],0xffff
mov    DWORD PTR [ebp-0x14],0xffff0
jmp    b21c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x4c>
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esp],0x0
call   b548 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x378>
test   eax,eax
je     b305 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x135>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b577 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3a7>
jmp    b305 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x135>
mov    DWORD PTR [esp],0x0
call   b588 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3b8>
test   eax,eax
je     b32a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x15a>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b5b7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3e7>
jmp    b32a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x15a>
mov    DWORD PTR [esp],0x0
call   b5c8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x3f8>
test   eax,eax
je     b3bd <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1ed>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b5f7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x427>
jmp    b3bd <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x1ed>
mov    DWORD PTR [esp],0x0
call   b608 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x438>
test   eax,eax
je     b354 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x184>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b637 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x467>
jmp    b354 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE10RotateLeftEt@@Base+0x184>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
movzx  eax,WORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x2c],eax
movzx  edx,WORD PTR [ebp-0x2c]
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,dx
mov    WORD PTR [ebp-0x1e],dx
movzx  edx,WORD PTR [ecx+0x10]
cmp    eax,edx
je     bc69 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x629>
cmp    BYTE PTR ds:0x0,0x0
mov    edi,eax
je     b900 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x2c0>
cmp    di,0xffff
mov    eax,0x0
je     b690 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x50>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,di
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     b8c0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x280>
cmp    bx,0xffff
mov    eax,0x0
je     b6b8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x78>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
cmp    WORD PTR [eax+0x6],0x0
jne    bc60 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x620>
cmp    BYTE PTR ds:0x0,0x0
je     b940 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x300>
cmp    di,0xffff
mov    eax,0x0
je     b6e7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0xa7>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,di
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
movzx  eax,WORD PTR [eax+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ecx,ax
mov    WORD PTR [ebp-0x22],ax
mov    esi,ecx
mov    DWORD PTR [ebp-0x28],ecx
mov    WORD PTR [ebp-0x16],cx
je     b9c0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x380>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
mov    DWORD PTR [ebp-0x1c],0xffff
je     b72b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0xeb>
movzx  eax,WORD PTR [ebp-0x16]
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x1c],eax
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
movzx  eax,WORD PTR [eax+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [ebp-0x1c]
mov    WORD PTR [ebp-0x20],ax
je     b980 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x340>
cmp    bx,0xffff
mov    eax,0x0
je     b75b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x11b>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     ba00 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x3c0>
cmp    bx,0xffff
mov    eax,0x0
je     b783 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x143>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    WORD PTR [eax],si
jne    b826 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x1e6>
movzx  ecx,WORD PTR [ebp-0x20]
cmp    BYTE PTR ds:0x0,0x0
mov    DWORD PTR [ebp-0x10],ecx
mov    esi,ecx
je     bbe0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x5a0>
cmp    si,0xffff
mov    eax,0x0
je     b7b9 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x179>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,si
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x2]
je     bba0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x560>
cmp    bx,0xffff
mov    eax,0x0
je     b7e1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x1a1>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
cmp    WORD PTR [eax+0x6],0x0
jne    ba40 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x400>
mov    edx,DWORD PTR [ebp+0x8]
shl    DWORD PTR [ebp-0x1c],0x4
mov    ecx,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [edx+0x4]
movzx  edx,bx
shl    edx,0x4
mov    WORD PTR [ecx+eax*1+0x6],0x1
mov    WORD PTR [edx+eax*1+0x6],0x1
movzx  edx,si
shl    edx,0x4
mov    WORD PTR [edx+eax*1+0x6],0x0
movzx  eax,WORD PTR [ebp-0x20]
mov    DWORD PTR [ebp-0x2c],eax
jmp    b650 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x10>
movzx  edx,WORD PTR [ebp-0x20]
cmp    BYTE PTR ds:0x0,0x0
mov    DWORD PTR [ebp-0x14],edx
mov    esi,edx
je     bc20 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x5e0>
cmp    si,0xffff
mov    eax,0x0
je     b853 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x213>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,si
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax]
je     bb60 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x520>
cmp    bx,0xffff
mov    eax,0x0
je     b87a <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x23a>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    WORD PTR [eax+0x6],0x0
jne    bad0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x490>
mov    ecx,DWORD PTR [ebp+0x8]
shl    DWORD PTR [ebp-0x1c],0x4
mov    edx,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [ecx+0x4]
movzx  ecx,WORD PTR [ebp-0x20]
mov    WORD PTR [edx+eax*1+0x6],0x1
movzx  edx,bx
shl    edx,0x4
mov    WORD PTR [edx+eax*1+0x6],0x1
movzx  edx,si
shl    edx,0x4
mov    WORD PTR [edx+eax*1+0x6],0x0
mov    DWORD PTR [ebp-0x2c],ecx
jmp    b650 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x10>
nop
mov    DWORD PTR [esp],0x0
call   b8c8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x288>
test   eax,eax
je     b6a1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x61>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b8f7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x2b7>
jmp    b6a1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x61>
mov    DWORD PTR [esp],0x0
call   b908 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x2c8>
test   eax,eax
je     b679 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x39>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b937 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x2f7>
jmp    b679 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x39>
mov    DWORD PTR [esp],0x0
call   b948 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x308>
test   eax,eax
je     b6d0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x90>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b977 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x337>
jmp    b6d0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x90>
mov    DWORD PTR [esp],0x0
call   b988 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x348>
test   eax,eax
je     b744 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x104>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b9b7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x377>
jmp    b744 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x104>
mov    DWORD PTR [esp],0x0
call   b9c8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x388>
test   eax,eax
je     b708 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0xc8>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   b9f7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x3b7>
jmp    b708 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0xc8>
mov    DWORD PTR [esp],0x0
call   ba08 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x3c8>
test   eax,eax
je     b76c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x12c>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   ba37 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x3f7>
jmp    b76c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x12c>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,edi
je     be34 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x7f4>
cmp    bx,0xffff
mov    eax,0x0
je     ba66 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x426>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     bdf4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x7b4>
cmp    bx,0xffff
mov    eax,0x0
je     ba8e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x44e>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
movzx  edx,WORD PTR [ebp-0x1e]
cmp    WORD PTR [eax+0x2],dx
je     bd79 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x739>
mov    eax,DWORD PTR [ebp-0x1c]
shl    eax,0x4
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ecx+0x4]
mov    WORD PTR [eax+edx*1+0x6],0x1
movzx  eax,si
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x6],0x0
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [esp],ecx
mov    DWORD PTR [esp+0x4],eax
call   bac7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x487>
jmp    b650 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x10>
cmp    BYTE PTR ds:0x0,0x0
mov    ebx,edi
je     bcbe <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x67e>
cmp    bx,0xffff
mov    eax,0x0
je     baf6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x4b6>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     bc7e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x63e>
cmp    bx,0xffff
mov    eax,0x0
je     bb1e <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x4de>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
add    eax,DWORD PTR [ecx+0x4]
movzx  edx,WORD PTR [ebp-0x1e]
cmp    WORD PTR [eax],dx
je     bcfe <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6be>
mov    eax,DWORD PTR [ebp-0x1c]
shl    eax,0x4
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ecx+0x4]
mov    WORD PTR [edx+eax*1+0x6],0x1
movzx  eax,si
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x6],0x0
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [esp],ecx
mov    DWORD PTR [esp+0x4],eax
call   bb56 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x516>
jmp    b650 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x10>
nop
mov    DWORD PTR [esp],0x0
call   bb68 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x528>
test   eax,eax
je     b863 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x223>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bb97 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x557>
jmp    b863 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x223>
mov    DWORD PTR [esp],0x0
call   bba8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x568>
test   eax,eax
je     b7ca <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x18a>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bbd7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x597>
jmp    b7ca <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x18a>
mov    DWORD PTR [esp],0x0
call   bbe8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x5a8>
test   eax,eax
je     b7a2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x162>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bc17 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x5d7>
jmp    b7a2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x162>
mov    DWORD PTR [esp],0x0
call   bc28 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x5e8>
test   eax,eax
je     b83c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x1fc>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bc57 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x617>
jmp    b83c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x1fc>
mov    eax,DWORD PTR [ebp+0x8]
movzx  edx,WORD PTR [eax+0x10]
mov    ecx,eax
mov    eax,DWORD PTR [ecx+0x4]
shl    edx,0x4
mov    WORD PTR [edx+eax*1+0x6],0x1
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    DWORD PTR [esp],0x0
call   bc86 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x646>
test   eax,eax
je     bb07 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x4c7>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bcb5 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x675>
jmp    bb07 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x4c7>
mov    DWORD PTR [esp],0x0
call   bcc6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x686>
test   eax,eax
je     badf <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x49f>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bcf5 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6b5>
jmp    badf <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x49f>
mov    ecx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   bd0c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6cc>
cmp    BYTE PTR ds:0x0,0x0
je     bf34 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8f4>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     bd35 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6f5>
mov    eax,DWORD PTR [ebp-0x1c]
mov    edx,DWORD PTR [ebp+0x8]
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     be74 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x834>
cmp    bx,0xffff
mov    edx,0x0
mov    eax,0xffff0
je     bd64 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x724>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
mov    edx,eax
add    edx,DWORD PTR [ecx+0x4]
movzx  edx,WORD PTR [edx+0x4]
mov    DWORD PTR [ebp-0x14],edx
mov    esi,edx
movzx  edx,WORD PTR [ebp-0x22]
mov    DWORD PTR [ebp-0x2c],edx
jmp    bb31 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x4f1>
mov    ecx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   bd87 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x747>
cmp    BYTE PTR ds:0x0,0x0
je     bef4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8b4>
cmp    WORD PTR [ebp-0x16],0xffff
mov    eax,0x0
je     bdb0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x770>
mov    eax,DWORD PTR [ebp-0x1c]
mov    edx,DWORD PTR [ebp+0x8]
shl    eax,0x4
add    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR ds:0x0,0x0
movzx  ebx,WORD PTR [eax+0x4]
je     beb4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x874>
cmp    bx,0xffff
mov    edx,0x0
mov    eax,0xffff0
je     bddf <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x79f>
mov    ecx,DWORD PTR [ebp+0x8]
movzx  eax,bx
shl    eax,0x4
mov    edx,eax
add    edx,DWORD PTR [ecx+0x4]
movzx  edx,WORD PTR [edx+0x4]
mov    DWORD PTR [ebp-0x10],edx
mov    esi,edx
movzx  edx,WORD PTR [ebp-0x22]
mov    DWORD PTR [ebp-0x2c],edx
jmp    baa2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x462>
mov    DWORD PTR [esp],0x0
call   bdfc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x7bc>
test   eax,eax
je     ba77 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x437>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   be2b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x7eb>
jmp    ba77 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x437>
mov    DWORD PTR [esp],0x0
call   be3c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x7fc>
test   eax,eax
je     ba4f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x40f>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   be6b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x82b>
jmp    ba4f <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x40f>
mov    DWORD PTR [esp],0x0
call   be7c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x83c>
test   eax,eax
je     bd46 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x706>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   beab <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x86b>
jmp    bd46 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x706>
mov    DWORD PTR [esp],0x0
call   bebc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x87c>
test   eax,eax
je     bdc1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x781>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   beeb <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8ab>
jmp    bdc1 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x781>
mov    DWORD PTR [esp],0x0
call   befc <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8bc>
test   eax,eax
je     bd98 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x758>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bf2b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8eb>
jmp    bd98 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x758>
mov    DWORD PTR [esp],0x0
call   bf3c <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x8fc>
test   eax,eax
je     bd1d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6dd>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   bf6b <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x92b>
jmp    bd1d <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE15InsertRebalanceEt@@Base+0x6dd>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
xor    esi,esi
push   ebx
sub    esp,0x1c
mov    edi,DWORD PTR [ebp+0x8]
mov    WORD PTR [ebp-0xe],0xffff
movzx  eax,WORD PTR [edi+0x10]
cmp    ax,0xffff
jne    bfd4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x54>
jmp    c025 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0xa5>
cmp    BYTE PTR ds:0x0,0x0
mov    esi,ebx
je     c0f0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x170>
cmp    si,0xffff
mov    eax,0x0
je     bfc6 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x46>
movzx  eax,si
shl    eax,0x4
add    eax,DWORD PTR [edi+0x4]
movzx  eax,WORD PTR [eax]
mov    esi,0x1
cmp    ax,0xffff
je     c021 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0xa1>
movzx  ebx,ax
mov    eax,ebx
shl    eax,0x4
add    eax,DWORD PTR [edi+0x4]
add    eax,0x8
mov    DWORD PTR [esp+0x4],eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp],eax
call   DWORD PTR [edi]
test   al,al
jne    bfa3 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x23>
cmp    BYTE PTR ds:0x0,0x0
mov    esi,ebx
je     c0b0 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x130>
cmp    si,0xffff
mov    eax,0x0
je     c015 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x95>
movzx  eax,si
shl    eax,0x4
add    eax,DWORD PTR [edi+0x4]
movzx  eax,WORD PTR [eax+0x2]
xor    esi,esi
cmp    ax,0xffff
jne    bfd4 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x54>
mov    WORD PTR [ebp-0xe],bx
mov    DWORD PTR [esp],edi
call   c029 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0xa9>
movzx  ecx,ax
mov    edx,ecx
mov    ebx,ecx
shl    edx,0x4
mov    eax,edx
mov    DWORD PTR [ebp-0x14],edx
movzx  edx,WORD PTR [ebp-0xe]
add    eax,DWORD PTR [edi+0x4]
cmp    dx,0xffff
mov    WORD PTR [eax+0x4],dx
mov    WORD PTR [eax+0x2],0xffff
mov    WORD PTR [eax],0xffff
mov    WORD PTR [eax+0x6],0x0
je     c144 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x1c4>
mov    eax,esi
test   al,al
je     c130 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x1b0>
movzx  eax,dx
mov    edx,DWORD PTR [edi+0x4]
shl    eax,0x4
mov    WORD PTR [eax+edx*1],cx
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],edi
call   c081 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x101>
mov    edx,DWORD PTR [ebp-0x14]
add    edx,DWORD PTR [edi+0x4]
add    WORD PTR [edi+0x12],0x1
mov    ecx,edx
add    ecx,0x8
je     c0a5 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x125>
mov    esi,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [esi]
mov    DWORD PTR [edx+0x8],eax
mov    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [ecx+0x4],eax
add    esp,0x1c
mov    eax,ebx
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
mov    DWORD PTR [esp],0x0
call   c0b8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x138>
test   eax,eax
je     c001 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x81>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   c0e7 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x167>
jmp    c001 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x81>
mov    DWORD PTR [esp],0x0
call   c0f8 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x178>
test   eax,eax
je     bfb2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x32>
mov    DWORD PTR [esp],0x0
mov    WORD PTR ds:0x0,0xffff
mov    WORD PTR ds:0x2,0xffff
mov    WORD PTR ds:0x4,0xffff
call   c127 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x1a7>
jmp    bfb2 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0x32>
movzx  eax,WORD PTR [ebp-0xe]
mov    edx,DWORD PTR [edi+0x4]
shl    eax,0x4
mov    WORD PTR [eax+edx*1+0x2],cx
jmp    c079 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0xf9>
mov    WORD PTR [edi+0x10],cx
jmp    c079 <_ZN10CUtlRBTreeIN7CUtlMapImmtE6Node_tEtNS1_8CKeyLessEE6InsertERKS2_@@Base+0xf9>
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [eax]
fmul   st,st(1)
fadd   DWORD PTR [ecx]
fstp   DWORD PTR [edx]
fld    DWORD PTR [eax+0x4]
fmul   st,st(1)
fadd   DWORD PTR [ecx+0x4]
fstp   DWORD PTR [edx+0x4]
fmul   DWORD PTR [eax+0x8]
fadd   DWORD PTR [ecx+0x8]
fstp   DWORD PTR [edx+0x8]
pop    ebp
ret    
nop
mov    esi,esi
push   ebp
xor    ecx,ecx
mov    ebp,esp
push   esi
mov    edx,DWORD PTR [ebp+0x8]
fldz   
push   ebx
mov    esi,0x1
xor    ebx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
fld    DWORD PTR [edx]
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    c1b0 <_Z16SignbitsForPlaneP8cplane_t@@Base+0x30>
mov    eax,esi
shl    eax,cl
or     ebx,eax
inc    ecx
add    edx,0x4
cmp    ecx,0x2
jle    c1a0 <_Z16SignbitsForPlaneP8cplane_t@@Base+0x20>
fstp   st(0)
mov    eax,ebx
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xc
fld    DWORD PTR ds:0x156a8
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax+0x8]
fmul   st,st(1)
fsincos 
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x4]
fxch   st(1)
fmul   st,st(2)
fsincos 
fstp   DWORD PTR [ebp-0x4]
fxch   st(2)
fmul   DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x4]
fxch   st(2)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fld    st(1)
fmul   st,st(4)
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x8]
fxch   st(4)
fmul   DWORD PTR [ebp-0xc]
fxch   st(1)
fmul   st,st(3)
fld    st(2)
fmul   DWORD PTR [ebp-0x8]
fxch   st(5)
fmul   st,st(1)
fxch   st(3)
fmul   st,st(6)
fxch   st(4)
fmulp  st(7),st
fmul   st,st(5)
fxch   st(3)
fsubrp st(2),st
fld    st(0)
fmul   st,st(5)
fxch   st(3)
faddp  st(4),st
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(5)
fxch   st(5)
fmulp  st(4),st
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fsubp  st(3),st
faddp  st(1),st
fxch   st(1)
fstp   DWORD PTR [edx+0x8]
fstp   DWORD PTR [edx+0xc]
leave  
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
fld    DWORD PTR ds:0x15854
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR ds:0x156a8
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [eax]
fxch   st(1)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x18]
fxch   st(3)
fst    DWORD PTR [ebp-0x14]
fxch   st(1)
fst    DWORD PTR [ebp-0x10]
fmul   st,st(2)
fsincos 
fstp   DWORD PTR [ebp-0x1c]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
fsincos 
fstp   DWORD PTR [ebp-0x1c]
fxch   st(3)
fmulp  st(2),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fld    st(1)
fmul   st,st(3)
fld    DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x20]
fxch   st(4)
fmul   DWORD PTR [ebp-0x24]
fxch   st(1)
fmul   st,st(3)
fld    st(2)
fmul   DWORD PTR [ebp-0x20]
fxch   st(5)
fmul   st,st(1)
fxch   st(3)
fmul   st,st(7)
fxch   st(4)
fmulp  st(6),st
fmul   st,st(6)
fxch   st(3)
fsubrp st(2),st
fld    st(0)
fmul   st,st(6)
fxch   st(3)
faddp  st(4),st
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x20]
fxch   st(1)
fmul   DWORD PTR [ebp-0x20]
fxch   st(1)
fmul   st,st(4)
fxch   st(4)
fmulp  st(5),st
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fsubp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [edx+0x8]
fstp   DWORD PTR [edx+0xc]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
push   ebx
mov    edx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ecx]
mov    DWORD PTR [edx+ebx*4],eax
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [edx+ebx*4+0x10],eax
mov    eax,DWORD PTR [ecx+0x8]
mov    DWORD PTR [edx+ebx*4+0x20],eax
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0xc]
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
mov    eax,DWORD PTR [ebx+edx*4]
mov    DWORD PTR [ecx],eax
mov    eax,DWORD PTR [ebx+edx*4+0x10]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,DWORD PTR [ebx+edx*4+0x20]
mov    DWORD PTR [ecx+0x8],eax
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax]
lea    ecx,[eax+0x10]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
lea    ecx,[eax+0x20]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [eax+0x20]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x8]
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
push   esi
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
push   ebx
lea    esi,[eax+0x10]
lea    ebx,[eax+0x20]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x10]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x20]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx]
fld    DWORD PTR [esi+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ebx+0x4]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [esi+0x8]
fld    DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x54
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
lea    edx,[eax+0x20]
fld    DWORD PTR [eax]
fld    st(0)
fmul   st,st(1)
fxch   st(1)
fst    DWORD PTR [ebp-0x18]
fld    DWORD PTR [eax+0x10]
fld    st(0)
fmul   st,st(1)
fxch   st(1)
fst    DWORD PTR [ebp-0x14]
fxch   st(3)
mov    ecx,DWORD PTR [eax+0x20]
faddp  st(1),st
mov    DWORD PTR [ebp-0x10],ecx
fld    DWORD PTR [eax+0x4]
fst    DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [eax+0x14]
mov    DWORD PTR [ebp-0x24],eax
fld    DWORD PTR [edx+0x4]
fst    DWORD PTR [ebp-0x20]
fxch   st(2)
mov    edx,DWORD PTR [edx+0x8]
mov    DWORD PTR [ebp-0x30],edx
fsqrt  
fld    DWORD PTR ds:0x15858
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    c545 <_Z12MatrixAnglesRK11matrix3x4_tPf@@Base+0xb5>
fstp   st(1)
fxch   st(2)
fxch   st(1)
fxch   st(3)
fxch   st(1)
fpatan 
fstp   DWORD PTR [ebp-0x3c]
xor    ecx,0x80000000
fld    DWORD PTR [ebp-0x3c]
fld    DWORD PTR ds:0x1585c
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x4c],ecx
fld    DWORD PTR [ebp-0x4c]
fxch   st(1)
fxch   st(2)
fpatan 
fstp   DWORD PTR [ebp-0x3c]
fld    DWORD PTR [ebp-0x3c]
fmul   st,st(1)
fstp   DWORD PTR [ebx]
mov    DWORD PTR [ebp-0x4c],edx
fld    DWORD PTR [ebp-0x4c]
fxch   st(1)
fxch   st(2)
fxch   st(1)
fpatan 
fstp   DWORD PTR [ebp-0x3c]
fld    DWORD PTR [ebp-0x3c]
fmulp  st(1),st
fstp   DWORD PTR [ebx+0x8]
add    esp,0x54
pop    ebx
pop    ebp
ret    
fstp   st(2)
fstp   st(2)
fstp   st(2)
fchs   
mov    DWORD PTR [ebp-0x4c],eax
fld    DWORD PTR [ebp-0x4c]
fpatan 
fstp   DWORD PTR [ebp-0x3c]
xor    ecx,0x80000000
fld    DWORD PTR [ebp-0x3c]
fld    DWORD PTR ds:0x1585c
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x4c],ecx
fld    DWORD PTR [ebp-0x4c]
fxch   st(1)
fxch   st(2)
fpatan 
fstp   DWORD PTR [ebp-0x3c]
mov    ecx,0x0
fld    DWORD PTR [ebp-0x3c]
mov    DWORD PTR [ebx+0x8],ecx
fmulp  st(1),st
fstp   DWORD PTR [ebx]
add    esp,0x54
pop    ebx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax]
lea    ecx,[eax+0x10]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [eax+0xc]
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [ecx+0xc]
lea    ecx,[eax+0x20]
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [eax+0x20]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [ecx+0xc]
fstp   DWORD PTR [ebx+0x8]
pop    ebx
pop    ebp
ret    
nop
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
lea    ebx,[eax+0x10]
fld    DWORD PTR [ebx+0xc]
lea    ecx,[eax+0x20]
fld    DWORD PTR [eax+0xc]
fsubr  DWORD PTR [edx]
fxch   st(1)
fsubr  DWORD PTR [edx+0x4]
fld    DWORD PTR [ecx+0xc]
fsubr  DWORD PTR [edx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [eax+0x10]
fxch   st(1)
fmul   DWORD PTR [eax]
faddp  st(1),st
fld    st(1)
fmul   DWORD PTR [eax+0x20]
faddp  st(1),st
fld    st(2)
fxch   st(1)
fstp   DWORD PTR [esi]
fld    st(3)
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fld    st(1)
fmul   DWORD PTR [ecx+0x4]
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [ecx+0x8]
fxch   st(1)
faddp  st(2),st
faddp  st(1),st
fstp   DWORD PTR [esi+0x8]
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
movzx  eax,BYTE PTR [ecx+0x10]
cmp    al,0x2
ja     c6d0 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x40>
fld    DWORD PTR [ecx+0xc]
movzx  edx,al
mov    eax,0x1
fld    DWORD PTR [ebx+edx*4]
fucomip st,st(1)
jae    c742 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0xb2>
fld    DWORD PTR [esi+edx*4]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
sbb    eax,eax
not    eax
add    eax,0x3
pop    ebx
pop    esi
pop    ebp
ret    
movzx  eax,BYTE PTR [ecx+0x11]
fldz   
fld    st(0)
cmp    eax,0x7
ja     c71e <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x8e>
fstp   st(0)
fstp   st(0)
jmp    DWORD PTR [eax*4+0x15834]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
fxch   st(4)
fmul   DWORD PTR [ebx]
fxch   st(3)
fmul   DWORD PTR [esi+0x4]
fxch   st(4)
faddp  st(1),st
fld    st(1)
fmul   DWORD PTR [ebx+0x8]
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(2)
faddp  st(3),st
fxch   st(2)
faddp  st(1),st
fxch   st(1)
pop    ebx
mov    eax,0x0
mov    edx,0x1
fld    DWORD PTR [ecx+0xc]
fxch   st(1)
pop    esi
fucomip st,st(1)
cmovb  edx,eax
mov    eax,edx
or     eax,0x2
pop    ebp
fucomip st,st(1)
fstp   st(0)
cmovbe eax,edx
ret    
fstp   st(0)
pop    ebx
pop    esi
pop    ebp
ret    
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(4)
fmul   DWORD PTR [esi]
jmp    c6ff <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x6f>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
fxch   st(4)
fmul   DWORD PTR [ebx]
fxch   st(3)
fmul   DWORD PTR [ebx+0x4]
fxch   st(4)
faddp  st(1),st
fld    st(1)
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
jmp    c714 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x84>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(4)
fmul   DWORD PTR [esi]
jmp    c778 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0xe8>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
fxch   st(4)
fmul   DWORD PTR [ebx]
fxch   st(3)
fmul   DWORD PTR [esi+0x4]
jmp    c77d <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0xed>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(4)
fmul   DWORD PTR [esi]
fxch   st(3)
fmul   DWORD PTR [esi+0x4]
jmp    c77d <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0xed>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
fxch   st(4)
fmul   DWORD PTR [ebx]
fxch   st(3)
fmul   DWORD PTR [ebx+0x4]
jmp    c704 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x74>
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(4)
fmul   DWORD PTR [esi]
fxch   st(3)
fmul   DWORD PTR [ebx+0x4]
jmp    c704 <_Z14BoxOnPlaneSidePKfS0_PK8cplane_t@@Base+0x74>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax]
fxch   st(1)
fucomi st,st(1)
jbe    c894 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x64>
fsubrp st(1),st
fmul   st,st(0)
faddp  st(1),st
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x4]
fucomi st,st(1)
jbe    c883 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x53>
fsubrp st(1),st
fmul   st,st(0)
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [edx+0x8]
fucomi st,st(1)
jbe    c870 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x40>
fsubrp st(1),st
fmul   st,st(0)
faddp  st(1),st
pop    ebp
ret    
fstp   st(0)
fld    DWORD PTR [ecx+0x8]
fxch   st(1)
fucomi st,st(1)
jbe    c8a4 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x74>
pop    ebp
fsubrp st(1),st
fmul   st,st(0)
faddp  st(1),st
ret    
fstp   st(0)
fld    DWORD PTR [ecx+0x4]
fxch   st(1)
fucomi st,st(1)
ja     c858 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x28>
fstp   st(0)
fstp   st(0)
jmp    c85e <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x2e>
fstp   st(0)
fld    DWORD PTR [ecx]
fxch   st(1)
fucomi st,st(1)
ja     c848 <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x18>
fstp   st(0)
fstp   st(0)
jmp    c84e <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x1e>
fstp   st(0)
fstp   st(0)
pop    ebp
jmp    c86f <_Z21CalcSqrDistanceToAABBRK6VectorS1_S1_@@Base+0x3f>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
fld    DWORD PTR [ebp+0x8]
fsqrt  
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
fld    DWORD PTR [ebp+0x8]
fsqrt  
fdivr  DWORD PTR ds:0x15860
pop    ebp
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fld    st(2)
fld    st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(4)
faddp  st(1),st
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fsqrt  
fld    st(0)
fadd   DWORD PTR ds:0x15864
fdivr  DWORD PTR ds:0x15860
fmul   st(4),st
fmul   st(3),st
fmulp  st(2),st
fxch   st(3)
fstp   DWORD PTR [eax]
fxch   st(1)
fstp   DWORD PTR [eax+0x4]
fstp   DWORD PTR [eax+0x8]
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fld    st(2)
fld    st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(4)
faddp  st(1),st
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fsqrt  
fadd   DWORD PTR ds:0x15864
fdivr  DWORD PTR ds:0x15860
fmul   st(3),st
fmul   st(2),st
fmulp  st(1),st
fxch   st(2)
fstp   DWORD PTR [eax]
fstp   DWORD PTR [eax+0x4]
fstp   DWORD PTR [eax+0x8]
pop    ebp
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   st,st(0)
faddp  st(1),st
fld1   
fucomi st,st(1)
ja     c986 <_Z12_InvRSquaredPKf@@Base+0x26>
fdivrp st(1),st
jmp    c988 <_Z12_InvRSquaredPKf@@Base+0x28>
fstp   st(1)
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
movd   mm0,DWORD PTR [ebp+0x8]
femms  
pfrsqrt mm1,mm0
punpckldq mm1,mm1
pfmul  mm0,mm1
femms  
movd   DWORD PTR [ebp-0x4],mm0
fld    DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
movd   mm0,DWORD PTR [ebp+0x8]
femms  
movq   mm1,mm0
pfrsqrt mm0,mm1
punpckldq mm0,mm0
pfmul  mm1,mm0
movd   DWORD PTR [ebp-0x4],mm1
femms  
fld    DWORD PTR [ebp-0x4]
fdivr  DWORD PTR ds:0x15860
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
xorps  xmm0,xmm0
mov    ebp,esp
sub    esp,0x18
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
movss  DWORD PTR [ebp-0x14],xmm0
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fucomip st,st(1)
jne    ca30 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x40>
jp     ca30 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x40>
fld    DWORD PTR [ecx+0x4]
fucomip st,st(1)
jne    ca30 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x40>
jp     ca30 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x40>
fld    DWORD PTR [ecx+0x8]
fucomip st,st(1)
fstp   st(0)
jp     ca32 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x42>
jne    ca32 <_Z22_3DNow_VectorNormalizeR6Vector@@Base+0x42>
movss  DWORD PTR [ebp-0x14],xmm0
fld    DWORD PTR [ebp-0x14]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
mov    edx,DWORD PTR [ecx]
mov    DWORD PTR [ebp-0x8],edx
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x4],eax
movd   mm3,DWORD PTR [ecx+0x8]
mov    DWORD PTR [ebp-0x10],edx
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0xc],eax
movd   mm2,DWORD PTR [ecx+0x8]
femms  
movq   mm4,QWORD PTR [ebp-0x8]
movq   mm0,QWORD PTR [ebp-0x10]
pfmul  mm4,mm4
pfmul  mm3,mm3
pfacc  mm4,mm4
pfadd  mm3,mm4
pfrsqrt mm4,mm3
punpckldq mm3,mm3
pfmul  mm3,mm4
pfmul  mm2,mm4
pfmul  mm0,mm4
movq   QWORD PTR [ebp-0x10],mm0
mov    edx,DWORD PTR [ebp-0x10]
movd   DWORD PTR [ebp-0x14],mm3
movss  xmm0,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ecx],edx
mov    eax,DWORD PTR [ebp-0xc]
movd   DWORD PTR [ecx+0x8],mm2
mov    DWORD PTR [ecx+0x4],eax
femms  
movss  DWORD PTR [ebp-0x14],xmm0
fld    DWORD PTR [ebp-0x14]
leave  
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp],eax
call   cabd <_Z26_3DNow_VectorNormalizeFastR6Vector@@Base+0xd>
fstp   st(0)
leave  
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
movss  xmm0,DWORD PTR ds:0x15860
mov    eax,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x8],ecx
mov    edx,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x4],edx
movd   mm2,DWORD PTR [eax+0x8]
mov    DWORD PTR [ebp-0x10],ecx
mov    DWORD PTR [ebp-0xc],edx
femms  
movss  DWORD PTR [ebp-0x14],xmm0
movq   mm1,QWORD PTR [ebp-0x8]
movq   mm0,QWORD PTR [ebp-0x10]
movd   mm3,DWORD PTR [ebp-0x14]
pfmul  mm1,mm1
pfmul  mm2,mm2
pfacc  mm1,mm1
pfadd  mm2,mm1
pfmax  mm0,mm2
pfrcp  mm1,mm2
movq   mm3,mm1
movd   DWORD PTR [ebp-0x14],mm3
femms  
fld    DWORD PTR [ebp-0x14]
leave  
ret    
nop
push   ebp
mov    eax,0x0
mov    ebp,esp
sub    esp,0x4
mov    DWORD PTR [ebp-0x4],eax
movss  xmm2,DWORD PTR [ebp+0x8]
sqrtss xmm1,xmm2
movss  DWORD PTR [ebp-0x4],xmm1
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x28
mov    edx,DWORD PTR [ebp+0x8]
fst    DWORD PTR [ebp-0x1c]
fld    DWORD PTR [edx]
fucomip st,st(1)
jne    cb90 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x30>
jp     cb90 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x30>
fld    DWORD PTR [edx+0x4]
fucomip st,st(1)
jne    cb90 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x30>
jp     cb90 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x30>
fld    DWORD PTR [edx+0x8]
fucomip st,st(1)
fstp   st(0)
jp     cb92 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x32>
jne    cb92 <_Z20_SSE_VectorNormalizeR6Vector@@Base+0x32>
fld    DWORD PTR [ebp-0x1c]
leave  
ret    
nop
fstp   st(0)
movups xmm4,XMMWORD PTR [edx]
movaps xmm1,xmm4
mulps  xmm1,xmm4
movhlps xmm3,xmm1
movaps xmm2,xmm1
shufps xmm2,xmm2,0x1
addss  xmm1,xmm2
addss  xmm1,xmm3
sqrtss xmm1,xmm1
movss  DWORD PTR [ebp-0x1c],xmm1
rcpss  xmm1,xmm1
shufps xmm1,xmm1,0x0
mulps  xmm4,xmm1
movaps XMMWORD PTR [ebp-0x18],xmm4
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [edx],eax
mov    ecx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [edx+0x4],ecx
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [edx+0x8],eax
fld    DWORD PTR [ebp-0x1c]
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ecx,0x3f000000
mov    ebp,esp
sub    esp,0x10
mov    eax,0x40400000
mov    edx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fadd   DWORD PTR ds:0x15864
faddp  st(1),st
fld    DWORD PTR [edx+0x8]
mov    DWORD PTR [ebp-0xc],ecx
mov    DWORD PTR [ebp-0x10],eax
fmul   st,st(0)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x8]
movss  xmm3,DWORD PTR [ebp-0x8]
movss  xmm1,DWORD PTR [ebp-0xc]
movss  xmm2,DWORD PTR [ebp-0x10]
rsqrtss xmm0,xmm3
mulss  xmm3,xmm0
mulss  xmm1,xmm0
mulss  xmm3,xmm0
subss  xmm2,xmm3
mulss  xmm1,xmm2
movss  DWORD PTR [ebp-0x4],xmm1
fld    DWORD PTR [ebp-0x4]
fld    DWORD PTR [edx]
fmul   st,st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
leave  
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    edx,0x3f800000
mov    ebp,esp
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x4],edx
movups xmm4,XMMWORD PTR [eax]
movaps xmm1,xmm4
mulps  xmm1,xmm4
movhlps xmm3,xmm1
movaps xmm2,xmm1
shufps xmm2,xmm2,0x1
addss  xmm1,xmm2
addss  xmm1,xmm3
maxss  xmm1,xmm5
rcpss  xmm0,xmm1
movss  DWORD PTR [ebp-0x4],xmm0
fld    DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
xor    ebx,ebx
lea    esi,[esi+eiz*1+0x0]
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fadd   st,st(0)
fmul   QWORD PTR ds:0x158f8
fmul   QWORD PTR ds:0x15900
fstp   QWORD PTR [esp]
call   ccd9 <_Z15InitSinCosTablev@@Base+0x29>
fstp   DWORD PTR [ebx*4+0x0]
inc    ebx
cmp    ebx,0xff
jle    ccc0 <_Z15InitSinCosTablev@@Base+0x10>
add    esp,0x14
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
xor    ecx,ecx
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
jne    cd40 <_Z12VectorsEqualPKfS0_@@Base+0x40>
jp     cd40 <_Z12VectorsEqualPKfS0_@@Base+0x40>
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x4]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
jne    cd40 <_Z12VectorsEqualPKfS0_@@Base+0x40>
jp     cd40 <_Z12VectorsEqualPKfS0_@@Base+0x40>
fld    DWORD PTR [eax+0x8]
mov    eax,0x1
fld    DWORD PTR [edx+0x8]
fucomip st,st(1)
fstp   st(0)
cmovne eax,ecx
cmovnp ecx,eax
mov    esi,esi
pop    ebp
mov    eax,ecx
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
fld    DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fsubr  DWORD PTR [eax]
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fst    DWORD PTR [ebp-0x18]
fld    DWORD PTR [edx+0x4]
fsubr  DWORD PTR [eax+0x4]
fst    DWORD PTR [ebp-0x14]
fld    DWORD PTR [edx+0x8]
fsubr  DWORD PTR [eax+0x8]
xor    eax,eax
fst    DWORD PTR [ebp-0x10]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fld    st(2)
fld    st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(4)
fxch   st(3)
fmul   st,st(6)
fxch   st(4)
fmul   st,st(7)
fxch   st(3)
faddp  st(1),st
fld    st(1)
fmul   st,st(2)
fxch   st(7)
fmul   st,st(0)
fxch   st(6)
fmul   st,st(0)
fxch   st(2)
fmul   st,st(5)
fxch   st(1)
faddp  st(7),st
fxch   st(4)
fmul   st,st(0)
fld    DWORD PTR [ebp-0x20]
fxch   st(6)
faddp  st(2),st
fxch   st(2)
faddp  st(3),st
fxch   st(4)
fmul   st,st(0)
fxch   st(4)
faddp  st(1),st
fxch   st(1)
faddp  st(2),st
fsubrp st(2),st
fld    st(2)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR ds:0x15868
fld    st(1)
fmul   st,st(2)
fxch   st(1)
fmulp  st(3),st
fsubrp st(2),st
fld    DWORD PTR ds:0x1586c
fucomip st,st(2)
jae    ce28 <_Z22LineSphereIntersectionRK6VectorfS1_S1_PfS2_@@Base+0xd8>
fxch   st(1)
fsqrt  
fstp   DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [ebp+0x18]
fld    st(1)
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
faddp  st(3),st
mov    ecx,DWORD PTR [ebp+0x1c]
fld    st(0)
fsub   st,st(2)
fxch   st(2)
fchs   
fxch   st(2)
fdiv   st,st(3)
fxch   st(2)
fsubrp st(1),st
fxch   st(1)
fstp   DWORD PTR [eax]
mov    eax,0x1
fdivrp st(1),st
fstp   DWORD PTR [ecx]
jmp    ce2e <_Z22LineSphereIntersectionRK6VectorfS1_S1_PfS2_@@Base+0xde>
fstp   st(0)
fstp   st(0)
fstp   st(0)
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ecx+0xc]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ecx+0x1c]
mov    DWORD PTR [edx+0x4],eax
mov    eax,DWORD PTR [ecx+0x2c]
mov    DWORD PTR [edx+0x8],eax
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],ecx
call   ce59 <_Z12MatrixAnglesRK11matrix3x4_tR11RadianEulerR6Vector@@Base+0x29>
fld    DWORD PTR ds:0x15854
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebx]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebx+0x8]
add    esp,0x14
pop    ebx
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fld    st(2)
fld    st(2)
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   st,st(5)
faddp  st(2),st
fld    st(2)
fmul   st,st(3)
faddp  st(2),st
fld    st(0)
fmul   st,st(1)
faddp  st(2),st
fldz   
fxch   st(2)
fucomi st,st(2)
fstp   st(2)
jp     ceca <_Z19QuaternionNormalizeR10Quaternion@@Base+0x3a>
je     cf00 <_Z19QuaternionNormalizeR10Quaternion@@Base+0x70>
fxch   st(1)
fsqrt  
fstp   DWORD PTR [ebp-0x4]
fld1   
fld    DWORD PTR [ebp-0x4]
fdiv   st(1),st
fxch   st(2)
fmul   st,st(1)
fxch   st(3)
fmul   st,st(1)
fxch   st(4)
fmul   st,st(1)
fxch   st(5)
fmulp  st(1),st
fxch   st(2)
fstp   DWORD PTR [eax+0xc]
fxch   st(2)
fstp   DWORD PTR [eax+0x8]
fxch   st(2)
fstp   DWORD PTR [eax+0x4]
fxch   st(1)
fstp   DWORD PTR [eax]
jmp    cf08 <_Z19QuaternionNormalizeR10Quaternion@@Base+0x78>
lea    esi,[esi+0x0]
fstp   st(0)
fstp   st(1)
fstp   st(1)
fstp   st(1)
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
fld1   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15870
mov    eax,DWORD PTR [ebp+0xc]
lea    ecx,[ebx+0x10]
fld    DWORD PTR [ebx]
lea    edx,[ebx+0x20]
mov    esi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ecx+0x4]
fld    st(1)
fld    DWORD PTR [edx+0x8]
fxch   st(1)
fadd   st,st(2)
fadd   st,st(1)
fadd   st,st(5)
fucomi st,st(4)
fstp   st(4)
jbe    cf90 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0x80>
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(1)
fld    DWORD PTR [ecx+0x8]
fsubr  DWORD PTR [edx+0x4]
fstp   DWORD PTR [eax]
fld    DWORD PTR [ebx+0x20]
fsubr  DWORD PTR [ebx+0x8]
fstp   DWORD PTR [eax+0x4]
fld    DWORD PTR [ebx+0x4]
fsubr  DWORD PTR [ebx+0x10]
fxch   st(1)
fstp   DWORD PTR [eax+0xc]
fstp   DWORD PTR [eax+0x8]
mov    DWORD PTR [esp],eax
call   cf72 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0x62>
fstp   st(0)
mov    ecx,DWORD PTR [ebx+0xc]
mov    DWORD PTR [esi],ecx
mov    edx,DWORD PTR [ebx+0x1c]
mov    DWORD PTR [esi+0x4],edx
mov    eax,DWORD PTR [ebx+0x2c]
mov    DWORD PTR [esi+0x8],eax
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
fstp   st(3)
fxch   st(1)
fucomi st,st(1)
jbe    cfe2 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0xd2>
fucomi st,st(2)
jbe    cfe2 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0xd2>
faddp  st(3),st
fsubp  st(2),st
fsubp  st(1),st
fstp   DWORD PTR [eax]
fld    DWORD PTR [ebx+0x4]
fadd   DWORD PTR [ebx+0x10]
fstp   DWORD PTR [eax+0x4]
fld    DWORD PTR [ebx+0x20]
fadd   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [eax+0x8]
fld    DWORD PTR [ecx+0x8]
fsubr  DWORD PTR [edx+0x4]
fstp   DWORD PTR [eax+0xc]
nop
mov    DWORD PTR [esp],eax
call   cfc4 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0xb4>
fstp   st(0)
mov    ecx,DWORD PTR [ebx+0xc]
mov    DWORD PTR [esi],ecx
mov    edx,DWORD PTR [ebx+0x1c]
mov    DWORD PTR [esi+0x4],edx
mov    eax,DWORD PTR [ebx+0x2c]
mov    DWORD PTR [esi+0x8],eax
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
fstp   st(1)
fstp   st(1)
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [edx+0x8]
fxch   st(1)
fucomi st,st(1)
jbe    d020 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0x110>
faddp  st(3),st
fxch   st(2)
fsubrp st(1),st
fld    DWORD PTR [ebx+0x10]
fadd   DWORD PTR [ebx+0x4]
fxch   st(1)
fsubrp st(2),st
fstp   DWORD PTR [eax]
fstp   DWORD PTR [eax+0x4]
fld    DWORD PTR [ecx+0x8]
fadd   DWORD PTR [edx+0x4]
fstp   DWORD PTR [eax+0x8]
fld    DWORD PTR [ebx+0x20]
fsubr  DWORD PTR [ebx+0x8]
fstp   DWORD PTR [eax+0xc]
jmp    cfc0 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0xb0>
nop
lea    esi,[esi+eiz*1+0x0]
fxch   st(1)
faddp  st(3),st
fxch   st(2)
fsubrp st(1),st
fld    DWORD PTR [ebx+0x20]
fadd   DWORD PTR [ebx+0x8]
fxch   st(1)
fsubrp st(2),st
fstp   DWORD PTR [eax]
fld    DWORD PTR [ecx+0x8]
fadd   DWORD PTR [edx+0x4]
fxch   st(1)
fstp   DWORD PTR [eax+0x8]
fstp   DWORD PTR [eax+0x4]
fld    DWORD PTR [ebx+0x4]
fsubr  DWORD PTR [ebx+0x10]
fstp   DWORD PTR [eax+0xc]
jmp    cfc0 <_Z12MatrixAnglesRK11matrix3x4_tR10QuaternionR6Vector@@Base+0xb0>
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax]
lea    ecx,[eax+0x10]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [eax+0xc]
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [ecx+0xc]
lea    ecx,[eax+0x20]
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [eax+0x20]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fadd   DWORD PTR [ecx+0xc]
fstp   DWORD PTR [ebx+0x8]
pop    ebx
pop    ebp
ret    
nop
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15854
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ecx+0x4]
fmul   st,st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(3)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fxch   st(3)
fmul   DWORD PTR [ecx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x8]
fxch   st(3)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    st(2)
lea    ebx,[edx+0x10]
fld    DWORD PTR [ebp-0x8]
fxch   st(2)
lea    ecx,[edx+0x20]
fstp   DWORD PTR [ebp-0x8]
fld    st(1)
fmul   st,st(5)
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(5)
fxch   st(3)
fmul   st,st(1)
fxch   st(3)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0xc]
fmul   st,st(6)
fstp   DWORD PTR [edx+0x10]
fld    st(1)
fmul   st,st(5)
fxch   st(7)
fst    DWORD PTR [ebp-0x10]
fxch   st(2)
mov    eax,DWORD PTR [ebp-0x10]
fmul   st,st(6)
fxch   st(7)
fsubrp st(3),st
xor    eax,0x80000000
fld    st(3)
mov    DWORD PTR [edx+0x20],eax
fmul   st,st(6)
fxch   st(3)
mov    eax,0x0
fstp   DWORD PTR [edx+0x4]
fld    st(0)
fmul   st,st(5)
faddp  st(7),st
fld    DWORD PTR [ebp-0xc]
fmul   st,st(4)
fxch   st(4)
fmul   st,st(5)
fxch   st(7)
fstp   DWORD PTR [ebx+0x4]
fld    st(0)
fmulp  st(2),st
fxch   st(3)
fstp   DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   DWORD PTR [ebp-0xc]
fld    st(2)
fmulp  st(4),st
fxch   st(2)
fmulp  st(4),st
faddp  st(2),st
fxch   st(2)
fsubrp st(3),st
fstp   DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ecx+0x8]
mov    DWORD PTR [edx+0xc],eax
mov    DWORD PTR [ebx+0xc],eax
mov    DWORD PTR [ecx+0xc],eax
add    esp,0xc
pop    ebx
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
lea    edx,[ebp-0x38]
push   esi
push   ebx
sub    esp,0x38
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],edx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp],eax
call   d1cc <_Z12VectorRotateRK6VectorRK6QAngleRS_@@Base+0x1c>
fld    DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebp-0x34]
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fmul   DWORD PTR [ebx+0x8]
faddp  st(1),st
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x24]
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
faddp  st(1),st
fld    DWORD PTR [ebp-0x20]
fmul   DWORD PTR [ebx+0x8]
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
faddp  st(1),st
fld    DWORD PTR [ebp-0x10]
fmul   DWORD PTR [ebx+0x8]
faddp  st(1),st
fstp   DWORD PTR [esi+0x8]
add    esp,0x38
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax]
lea    ecx,[eax+0x10]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
lea    ecx,[eax+0x20]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [eax+0x20]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x8]
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],edx
call   d2c7 <_Z18TransformAndRotateRK6VectorS1_RK11matrix3x4_tRS_S5_@@Base+0x27>
fld    DWORD PTR [esi+0x4]
lea    eax,[ebx+0x10]
lea    ecx,[ebx+0x20]
fld    DWORD PTR [ebx]
fld    st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
fld    DWORD PTR [esi+0x8]
fxch   st(1)
faddp  st(2),st
fld    st(0)
fmul   DWORD PTR [ebx+0x8]
faddp  st(2),st
fld    st(1)
fst    DWORD PTR [esi]
fxch   st(3)
fmul   DWORD PTR [eax+0x4]
fxch   st(2)
fmul   DWORD PTR [ebx+0x10]
faddp  st(2),st
fld    st(0)
fmul   DWORD PTR [eax+0x8]
faddp  st(2),st
fld    st(2)
fxch   st(2)
fst    DWORD PTR [esi+0x4]
fxch   st(2)
mov    edx,DWORD PTR [esi+0x4]
fmul   DWORD PTR [ebx+0x20]
fxch   st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   DWORD PTR [ecx+0x8]
fxch   st(2)
faddp  st(1),st
faddp  st(1),st
fstp   DWORD PTR [esi+0x8]
mov    eax,DWORD PTR [esi+0x8]
fstp   DWORD PTR [edi]
mov    DWORD PTR [edi+0x4],edx
mov    DWORD PTR [edi+0x8],eax
mov    DWORD PTR [esp],edi
call   DWORD PTR ds:0x0
fstp   st(0)
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xc
mov    DWORD PTR [esp],ebx
mov    ecx,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x4],esi
mov    ebx,DWORD PTR [ebp+0x14]
mov    esi,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x8],edi
mov    eax,DWORD PTR [ecx]
mov    edi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [edx+0x10],eax
mov    eax,DWORD PTR [ecx+0x8]
mov    DWORD PTR [edx+0x20],eax
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [edx+0x4],eax
mov    ecx,DWORD PTR [ebx+0x4]
mov    DWORD PTR [edx+0x14],ecx
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [edx+0x24],eax
mov    ebx,DWORD PTR [esi]
mov    DWORD PTR [edx+0x8],ebx
mov    ecx,DWORD PTR [esi+0x4]
mov    DWORD PTR [edx+0x18],ecx
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [edx+0x28],eax
mov    ebx,DWORD PTR [edi]
mov    DWORD PTR [edx+0xc],ebx
mov    ecx,DWORD PTR [edi+0x4]
mov    DWORD PTR [edx+0x1c],ecx
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [edx+0x2c],eax
mov    ebx,DWORD PTR [esp]
mov    esi,DWORD PTR [esp+0x4]
mov    edi,DWORD PTR [esp+0x8]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx]
mov    DWORD PTR [ecx],eax
mov    eax,DWORD PTR [edx+0x4]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,DWORD PTR [edx+0x8]
mov    DWORD PTR [ecx+0x8],eax
mov    eax,DWORD PTR [edx+0xc]
mov    DWORD PTR [ecx+0xc],eax
mov    eax,DWORD PTR [edx+0x10]
mov    DWORD PTR [ecx+0x10],eax
mov    eax,DWORD PTR [edx+0x14]
mov    DWORD PTR [ecx+0x14],eax
mov    eax,DWORD PTR [edx+0x18]
mov    DWORD PTR [ecx+0x18],eax
mov    eax,DWORD PTR [edx+0x1c]
mov    DWORD PTR [ecx+0x1c],eax
mov    eax,DWORD PTR [edx+0x20]
mov    DWORD PTR [ecx+0x20],eax
mov    eax,DWORD PTR [edx+0x24]
mov    DWORD PTR [ecx+0x24],eax
mov    eax,DWORD PTR [edx+0x28]
mov    DWORD PTR [ecx+0x28],eax
mov    eax,DWORD PTR [edx+0x2c]
mov    DWORD PTR [ecx+0x2c],eax
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x68
mov    esi,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x10]
mov    edi,DWORD PTR [ebp+0xc]
cmp    esi,edx
je     d5d4 <_Z16ConcatTransformsRK11matrix3x4_tS1_RS_@@Base+0x1a4>
cmp    edi,edx
je     d636 <_Z16ConcatTransformsRK11matrix3x4_tS1_RS_@@Base+0x206>
fld    DWORD PTR [edi]
lea    ecx,[edi+0x10]
lea    ebx,[edi+0x20]
fld    DWORD PTR [edi+0x10]
mov    DWORD PTR [ebp-0x4c],ebx
lea    eax,[edx+0x10]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
mov    DWORD PTR [ebp-0x5c],eax
lea    eax,[esi+0x10]
fmul   DWORD PTR [esi]
faddp  st(1),st
fld    DWORD PTR [edi+0x20]
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx]
fld    DWORD PTR [edi+0x4]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
faddp  st(1),st
fld    DWORD PTR [ebx+0x4]
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [edi+0x8]
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [edi+0xc]
fld    DWORD PTR [ecx+0xc]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
faddp  st(1),st
fld    DWORD PTR [ebx+0xc]
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fadd   DWORD PTR [esi+0xc]
fstp   DWORD PTR [edx+0xc]
fld    DWORD PTR [edi]
fld    DWORD PTR [edi+0x10]
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x10]
faddp  st(1),st
fld    DWORD PTR [edi+0x20]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx+0x10]
mov    ebx,DWORD PTR [ebp-0x4c]
fld    DWORD PTR [edi+0x4]
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x10]
faddp  st(1),st
fld    DWORD PTR [ebx+0x4]
mov    ebx,DWORD PTR [ebp-0x5c]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x4]
mov    ebx,DWORD PTR [ebp-0x4c]
fld    DWORD PTR [edi+0x8]
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x10]
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
mov    ebx,DWORD PTR [ebp-0x5c]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x8]
mov    ebx,DWORD PTR [ebp-0x4c]
fld    DWORD PTR [edi+0xc]
fld    DWORD PTR [ecx+0xc]
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x10]
faddp  st(1),st
fld    DWORD PTR [ebx+0xc]
mov    ebx,DWORD PTR [ebp-0x5c]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fadd   DWORD PTR [eax+0xc]
lea    eax,[esi+0x20]
fstp   DWORD PTR [ebx+0xc]
lea    ebx,[edx+0x20]
fld    DWORD PTR [edi]
fld    DWORD PTR [edi+0x10]
fxch   st(1)
fmul   DWORD PTR [esi+0x20]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fld    DWORD PTR [edi+0x20]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx+0x20]
mov    edx,DWORD PTR [ebp-0x4c]
fld    DWORD PTR [edi+0x4]
fld    DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x20]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fld    DWORD PTR [edx+0x4]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [edi+0x8]
fld    DWORD PTR [ecx+0x8]
fxch   st(1)
fmul   DWORD PTR [esi+0x20]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fld    DWORD PTR [edx+0x8]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x8]
fld    DWORD PTR [edi+0xc]
fld    DWORD PTR [ecx+0xc]
fxch   st(1)
fmul   DWORD PTR [esi+0x20]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fld    DWORD PTR [edx+0xc]
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fadd   DWORD PTR [eax+0xc]
fstp   DWORD PTR [ebx+0xc]
add    esp,0x68
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ebx,DWORD PTR [esi]
lea    ecx,[ebp-0x48]
mov    DWORD PTR [ebp-0x48],ebx
mov    edx,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebp-0x44],edx
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [ebp-0x40],eax
mov    ebx,DWORD PTR [esi+0xc]
mov    DWORD PTR [ebp-0x3c],ebx
mov    edx,DWORD PTR [esi+0x10]
mov    DWORD PTR [ebp-0x38],edx
mov    eax,DWORD PTR [esi+0x14]
mov    DWORD PTR [ebp-0x34],eax
mov    ebx,DWORD PTR [esi+0x18]
mov    DWORD PTR [ebp-0x30],ebx
mov    edx,DWORD PTR [esi+0x1c]
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [esi+0x20]
mov    DWORD PTR [ebp-0x28],eax
mov    ebx,DWORD PTR [esi+0x24]
mov    DWORD PTR [ebp-0x24],ebx
mov    edx,DWORD PTR [esi+0x28]
mov    DWORD PTR [ebp-0x20],edx
mov    eax,DWORD PTR [esi+0x2c]
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],edi
mov    DWORD PTR [esp],ecx
call   d62a <_Z16ConcatTransformsRK11matrix3x4_tS1_RS_@@Base+0x1fa>
add    esp,0x68
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ebx,DWORD PTR [edi]
lea    ecx,[ebp-0x48]
mov    DWORD PTR [ebp-0x48],ebx
mov    edx,DWORD PTR [edi+0x4]
mov    DWORD PTR [ebp-0x44],edx
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [ebp-0x40],eax
mov    ebx,DWORD PTR [edi+0xc]
mov    DWORD PTR [ebp-0x3c],ebx
mov    edx,DWORD PTR [edi+0x10]
mov    DWORD PTR [ebp-0x38],edx
mov    eax,DWORD PTR [edi+0x14]
mov    DWORD PTR [ebp-0x34],eax
mov    ebx,DWORD PTR [edi+0x18]
mov    DWORD PTR [ebp-0x30],ebx
mov    edx,DWORD PTR [edi+0x1c]
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [edi+0x20]
mov    DWORD PTR [ebp-0x28],eax
mov    ebx,DWORD PTR [edi+0x24]
mov    DWORD PTR [ebp-0x24],ebx
mov    edx,DWORD PTR [edi+0x28]
mov    DWORD PTR [ebp-0x20],edx
mov    eax,DWORD PTR [edi+0x2c]
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [esp+0x8],edi
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],esi
call   d68c <_Z16ConcatTransformsRK11matrix3x4_tS1_RS_@@Base+0x25c>
jmp    d62e <_Z16ConcatTransformsRK11matrix3x4_tS1_RS_@@Base+0x1fe>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x88
mov    DWORD PTR [ebp-0xc],ebx
mov    edx,DWORD PTR [ebp+0xc]
lea    ebx,[ebp-0x48]
mov    DWORD PTR [ebp-0x8],esi
lea    esi,[ebp-0x78]
mov    DWORD PTR [esp],edx
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x4],ebx
call   d6c6 <_Z27TransformAnglesToWorldSpaceRK6QAngleRK11matrix3x4_t@@Base+0x26>
mov    DWORD PTR [esp+0x8],esi
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
call   d6d9 <_Z27TransformAnglesToWorldSpaceRK6QAngleRK11matrix3x4_t@@Base+0x39>
mov    DWORD PTR [esp+0x4],edi
mov    DWORD PTR [esp],esi
call   d6e5 <_Z27TransformAnglesToWorldSpaceRK6QAngleRK11matrix3x4_t@@Base+0x45>
mov    eax,edi
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    0x4
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x3c
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x2c],eax
cmp    eax,ebx
je     d7cd <_Z12MatrixInvertRK11matrix3x4_tRS_@@Base+0xcd>
mov    esi,DWORD PTR [ebp-0x2c]
lea    edi,[ebx+0x10]
lea    ecx,[esi+0x10]
fld    DWORD PTR [esi]
lea    edx,[esi+0x20]
fst    DWORD PTR [ebx]
fld    DWORD PTR [esi+0x10]
fst    DWORD PTR [ebx+0x4]
fld    DWORD PTR [esi+0x20]
fst    DWORD PTR [ebx+0x8]
fld    DWORD PTR [esi+0x4]
fst    DWORD PTR [ebx+0x10]
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [edi+0x4],eax
mov    esi,DWORD PTR [edx+0x4]
mov    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [edi+0x8],esi
lea    esi,[ebx+0x20]
fld    DWORD PTR [eax+0x8]
fst    DWORD PTR [ebx+0x20]
mov    eax,DWORD PTR [ecx+0x8]
mov    DWORD PTR [esi+0x4],eax
mov    eax,DWORD PTR [edx+0x8]
mov    DWORD PTR [esi+0x8],eax
mov    eax,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0xc]
fst    DWORD PTR [ebp-0x28]
fmulp  st(5),st
fld    DWORD PTR [ecx+0xc]
fst    DWORD PTR [ebp-0x24]
fmulp  st(4),st
fld    DWORD PTR [edx+0xc]
fxch   st(5)
faddp  st(4),st
fxch   st(4)
fst    DWORD PTR [ebp-0x20]
fmulp  st(2),st
fxch   st(2)
faddp  st(1),st
fchs   
fstp   DWORD PTR [ebx+0xc]
fld    DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x20]
fld    st(2)
fxch   st(4)
fmul   st,st(2)
fxch   st(4)
fmul   DWORD PTR [edi+0x4]
fxch   st(2)
fmulp  st(5),st
fxch   st(3)
faddp  st(1),st
fld    st(2)
fmul   DWORD PTR [edi+0x8]
faddp  st(1),st
fchs   
fstp   DWORD PTR [edi+0xc]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(2)
faddp  st(1),st
faddp  st(1),st
fchs   
fstp   DWORD PTR [esi+0xc]
add    esp,0x3c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    edi,[ebx+0x10]
lea    esi,[ebx+0x4]
mov    DWORD PTR [esp],esi
lea    esi,[ebx+0x20]
mov    DWORD PTR [esp+0x4],edi
call   d7de <_Z12MatrixInvertRK11matrix3x4_tRS_@@Base+0xde>
mov    DWORD PTR [esp+0x4],esi
lea    eax,[ebx+0x8]
mov    DWORD PTR [esp],eax
call   d7ed <_Z12MatrixInvertRK11matrix3x4_tRS_@@Base+0xed>
lea    ecx,[ebx+0x24]
lea    edx,[ebx+0x18]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],edx
call   d7ff <_Z12MatrixInvertRK11matrix3x4_tRS_@@Base+0xff>
fld    DWORD PTR [ebx]
mov    ecx,edi
mov    edx,esi
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebx+0x10]
fld    DWORD PTR [ebx+0x20]
jmp    d760 <_Z12MatrixInvertRK11matrix3x4_tRS_@@Base+0x60>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xb8
mov    DWORD PTR [ebp-0xc],ebx
mov    ecx,DWORD PTR [ebp+0x10]
lea    ebx,[ebp-0x78]
mov    DWORD PTR [ebp-0x8],esi
lea    esi,[ebp-0x48]
mov    DWORD PTR [esp],ecx
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x4],ebx
lea    ebx,[ebp-0xa8]
call   d84c <_Z27TransformAnglesToLocalSpaceRK6QAngleRK11matrix3x4_t@@Base+0x2c>
mov    DWORD PTR [esp+0x4],esi
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp],edx
call   d85b <_Z27TransformAnglesToLocalSpaceRK6QAngleRK11matrix3x4_t@@Base+0x3b>
mov    DWORD PTR [esp+0x8],ebx
lea    eax,[ebp-0x78]
mov    DWORD PTR [esp],eax
mov    DWORD PTR [esp+0x4],esi
call   d86e <_Z27TransformAnglesToLocalSpaceRK6QAngleRK11matrix3x4_t@@Base+0x4e>
mov    DWORD PTR [esp+0x4],edi
mov    DWORD PTR [esp],ebx
call   d87a <_Z27TransformAnglesToLocalSpaceRK6QAngleRK11matrix3x4_t@@Base+0x5a>
mov    eax,edi
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    0x4
nop
push   ebp
xor    eax,eax
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ecx+eax*4]
fld    DWORD PTR [edx+eax*4]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
jp     d8b8 <_Z13VectorComparePKfS0_@@Base+0x28>
jne    d8b8 <_Z13VectorComparePKfS0_@@Base+0x28>
inc    eax
cmp    eax,0x2
jle    d89b <_Z13VectorComparePKfS0_@@Base+0xb>
pop    ebp
mov    eax,0x1
ret    
pop    ebp
xor    eax,eax
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [eax]
fmul   st,st(1)
fadd   DWORD PTR [ecx]
fstp   DWORD PTR [edx]
fld    DWORD PTR [eax+0x4]
fmul   st,st(1)
fadd   DWORD PTR [ecx+0x4]
fstp   DWORD PTR [edx+0x4]
fmul   DWORD PTR [eax+0x8]
fadd   DWORD PTR [ecx+0x8]
fstp   DWORD PTR [edx+0x8]
pop    ebp
ret    
nop
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x8]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fsubrp st(1),st
fstp   DWORD PTR [ecx]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx]
fxch   st(1)
fmul   DWORD PTR [edx+0x8]
fsubrp st(1),st
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax]
fxch   st(1)
fmul   DWORD PTR [edx]
fxch   st(1)
fmul   DWORD PTR [edx+0x4]
fsubp  st(1),st
fstp   DWORD PTR [ecx+0x8]
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
xor    edx,edx
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
jmp    d951 <_Z6Q_log2i@@Base+0x11>
lea    esi,[esi+0x0]
inc    edx
sar    eax,1
jne    d950 <_Z6Q_log2i@@Base+0x10>
pop    ebp
mov    eax,edx
ret    
nop
lea    esi,[esi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x50
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebx]
fucomi st,st(1)
jne    d9b0 <_Z12VectorMatrixRK6VectorR11matrix3x4_t@@Base+0x50>
jp     d9b0 <_Z12VectorMatrixRK6VectorR11matrix3x4_t@@Base+0x50>
fld    DWORD PTR [ebx+0x4]
fucomi st,st(2)
jne    d9b3 <_Z12VectorMatrixRK6VectorR11matrix3x4_t@@Base+0x53>
jp     d9b3 <_Z12VectorMatrixRK6VectorR11matrix3x4_t@@Base+0x53>
fstp   st(0)
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
mov    ecx,0x3f800000
mov    DWORD PTR [ebp-0x24],ecx
fst    DWORD PTR [ebp-0x20]
mov    edx,DWORD PTR [ebx+0x8]
fst    DWORD PTR [ebp-0x34]
fstp   DWORD PTR [ebp-0x30]
xor    edx,0x80000000
mov    DWORD PTR [ebp-0x38],edx
jmp    da4d <_Z12VectorMatrixRK6VectorR11matrix3x4_t@@Base+0xed>
lea    esi,[esi+0x0]
fld    DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x48],0x0
mov    ecx,0x3f800000
lea    edx,[ebp-0x28]
mov    DWORD PTR [ebp-0x40],ecx
mov    DWORD PTR [ebp-0x44],0x0
fld    DWORD PTR [ebx+0x8]
fmul   st,st(3)
fsubr  st(1),st
fsubr  st,st(2)
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fstp   DWORD PTR [ebp-0x28]
fxch   st(1)
fstp   DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebx+0x4]
mov    DWORD PTR [esp],edx
fmulp  st(2),st
fsubp  st(1),st
fstp   DWORD PTR [ebp-0x20]
call   DWORD PTR ds:0x0
fstp   st(0)
fld    DWORD PTR [ebx+0x8]
lea    eax,[ebp-0x38]
fld    DWORD PTR [ebx+0x4]
fld    st(1)
fld    DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp-0x24]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(3)
fsubp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebp-0x28]
fxch   st(2)
fmul   st,st(1)
fxch   st(4)
fmul   st,st(2)
fxch   st(1)
fmulp  st(3),st
fsubrp st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x34]
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
mov    DWORD PTR [esp],eax
fsubp  st(1),st
fstp   DWORD PTR [ebp-0x30]
call   DWORD PTR ds:0x0
fstp   st(0)
fld    DWORD PTR [ebx]
mov    ecx,DWORD PTR [ebp-0x24]
mov    edx,DWORD PTR [ebp-0x38]
fstp   DWORD PTR [esi]
mov    eax,DWORD PTR [ebx+0x4]
mov    DWORD PTR [esi+0x10],eax
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [esi+0x20],eax
mov    ebx,DWORD PTR [ebp-0x28]
mov    DWORD PTR [esi+0x14],ecx
mov    DWORD PTR [esi+0x4],ebx
mov    ecx,DWORD PTR [ebp-0x20]
mov    DWORD PTR [esi+0x8],edx
mov    DWORD PTR [esi+0x24],ecx
mov    eax,DWORD PTR [ebp-0x34]
mov    DWORD PTR [esi+0x18],eax
mov    ebx,DWORD PTR [ebp-0x30]
mov    DWORD PTR [esi+0x28],ebx
add    esp,0x50
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x38
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebx]
fucomip st,st(1)
jne    dad7 <_Z13VectorVectorsRK6VectorRS_S2_@@Base+0x57>
jp     dad7 <_Z13VectorVectorsRK6VectorRS_S2_@@Base+0x57>
fld    DWORD PTR [ebx+0x4]
fucomi st,st(1)
jne    dada <_Z13VectorVectorsRK6VectorRS_S2_@@Base+0x5a>
jp     dada <_Z13VectorVectorsRK6VectorRS_S2_@@Base+0x5a>
fstp   st(0)
fst    DWORD PTR [esi]
mov    edx,0xbf800000
mov    DWORD PTR [esi+0x4],edx
fst    DWORD PTR [esi+0x8]
mov    eax,DWORD PTR [ebx+0x8]
fst    DWORD PTR [edi+0x4]
fstp   DWORD PTR [edi+0x8]
xor    eax,0x80000000
mov    DWORD PTR [edi],eax
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
fld    DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x28],0x0
mov    ecx,0x3f800000
mov    DWORD PTR [ebp-0x20],ecx
mov    DWORD PTR [ebp-0x24],0x0
fld    DWORD PTR [ebx+0x8]
fmul   st(2),st
fxch   st(1)
fsubrp st(2),st
fxch   st(1)
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebp-0x28]
fld    st(1)
fxch   st(3)
fmul   st,st(1)
fxch   st(3)
fmul   DWORD PTR [ebp-0x20]
fsubp  st(3),st
fxch   st(2)
fstp   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebp-0x24]
fsubrp st(1),st
fstp   DWORD PTR [esi+0x8]
mov    DWORD PTR [esp],esi
call   DWORD PTR ds:0x0
fstp   st(0)
fld    DWORD PTR [esi+0x8]
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [esi+0x4]
fld    st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   st,st(2)
fsubrp st(1),st
fstp   DWORD PTR [edi]
fld    DWORD PTR [ebx]
fld    DWORD PTR [esi]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(3)
fsubp  st(2),st
fxch   st(1)
fstp   DWORD PTR [edi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [esi+0x4]
fsubp  st(1),st
fstp   DWORD PTR [edi+0x8]
mov    DWORD PTR [esp],edi
call   DWORD PTR ds:0x0
fstp   st(0)
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax+0x4]
fucomi st,st(1)
jne    dbd0 <_Z12VectorAnglesPKfPf@@Base+0x50>
jp     dbd0 <_Z12VectorAnglesPKfPf@@Base+0x50>
fld    DWORD PTR [eax]
fucomi st,st(2)
jne    dbd2 <_Z12VectorAnglesPKfPf@@Base+0x52>
jp     dbd2 <_Z12VectorAnglesPKfPf@@Base+0x52>
fstp   st(0)
fstp   st(0)
fld    DWORD PTR [eax+0x8]
mov    DWORD PTR [edx+0x8],0x0
fld    st(1)
fld    DWORD PTR ds:0x15874
fxch   st(2)
fucomip st,st(3)
fstp   st(2)
fld    DWORD PTR ds:0x15878
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fcmovbe st,st(1)
fstp   st(1)
fstp   DWORD PTR [edx]
leave  
ret    
mov    esi,esi
fld    DWORD PTR [eax]
fld    st(1)
fld    st(1)
fpatan 
fstp   QWORD PTR [ebp-0x8]
fld    QWORD PTR [ebp-0x8]
fmul   QWORD PTR ds:0x15908
fld    QWORD PTR ds:0x158f8
fdiv   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fxch   st(4)
fucomi st,st(4)
ja     dc47 <_Z12VectorAnglesPKfPf@@Base+0xc7>
fxch   st(3)
fmul   st,st(0)
fxch   st(2)
fmul   st,st(0)
faddp  st(2),st
fxch   st(1)
fsqrt  
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [ebp-0xc]
fxch   st(1)
fchs   
fxch   st(1)
fpatan 
fstp   QWORD PTR [ebp-0x8]
fld    QWORD PTR [ebp-0x8]
fmul   QWORD PTR ds:0x15908
fdivrp st(1),st
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fxch   st(1)
fucomip st,st(1)
jbe    dc39 <_Z12VectorAnglesPKfPf@@Base+0xb9>
fadd   DWORD PTR ds:0x1587c
fstp   DWORD PTR [edx]
fstp   DWORD PTR [edx+0x4]
mov    DWORD PTR [edx+0x8],0x0
leave  
ret    
fxch   st(4)
fadd   DWORD PTR ds:0x1587c
fxch   st(4)
jmp    dbfa <_Z12VectorAnglesPKfPf@@Base+0x7a>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x18]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x10]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x1c]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [eax+0x14]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x20]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fmul   DWORD PTR [edx+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0xc]
faddp  st(1),st
fld    DWORD PTR [eax+0x18]
fmul   DWORD PTR [edx+0x14]
faddp  st(1),st
fstp   DWORD PTR [ecx+0xc]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x10]
fmul   DWORD PTR [edx+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0xc]
faddp  st(1),st
fld    DWORD PTR [eax+0x1c]
fmul   DWORD PTR [edx+0x14]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x10]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [eax+0x14]
fmul   DWORD PTR [edx+0x10]
fxch   st(1)
fmul   DWORD PTR [edx+0xc]
faddp  st(1),st
fld    DWORD PTR [eax+0x20]
fmul   DWORD PTR [edx+0x14]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x14]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fmul   DWORD PTR [edx+0x1c]
fxch   st(1)
fmul   DWORD PTR [edx+0x18]
faddp  st(1),st
fld    DWORD PTR [eax+0x18]
fmul   DWORD PTR [edx+0x20]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x18]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x10]
fmul   DWORD PTR [edx+0x1c]
fxch   st(1)
fmul   DWORD PTR [edx+0x18]
faddp  st(1),st
fld    DWORD PTR [eax+0x1c]
fmul   DWORD PTR [edx+0x20]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x1c]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [eax+0x14]
fmul   DWORD PTR [edx+0x1c]
fxch   st(1)
fmul   DWORD PTR [edx+0x18]
faddp  st(1),st
fld    DWORD PTR [eax+0x20]
fmul   DWORD PTR [edx+0x20]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x20]
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x20
fld    QWORD PTR [ebp+0x8]
fld    QWORD PTR [ebp+0x10]
fxch   st(1)
fucomi st,st(2)
fstp   st(2)
jb     de13 <_Z11FloorDivModddPiS_@@Base+0xb3>
fld    st(1)
fdiv   st,st(1)
fnstcw WORD PTR [ebp-0x2]
movzx  eax,WORD PTR [ebp-0x2]
and    eax,0xfffff3ff
or     eax,0x400
mov    WORD PTR [ebp-0x4],ax
fldcw  WORD PTR [ebp-0x4]
frndint 
fldcw  WORD PTR [ebp-0x2]
fnstcw WORD PTR [ebp-0x16]
movzx  ecx,WORD PTR [ebp-0x16]
or     cx,0xc00
mov    WORD PTR [ebp-0x18],cx
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
fldcw  WORD PTR [ebp-0x18]
fist   DWORD PTR [ebp-0x1c]
fldcw  WORD PTR [ebp-0x16]
fmulp  st(1),st
mov    ecx,DWORD PTR [ebp-0x1c]
fsubp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x14]
fnstcw WORD PTR [ebp-0x4]
movzx  edx,WORD PTR [ebp-0x4]
and    edx,0xfffff3ff
or     edx,0x400
mov    WORD PTR [ebp-0x2],dx
fldcw  WORD PTR [ebp-0x2]
frndint 
fldcw  WORD PTR [ebp-0x4]
fnstcw WORD PTR [ebp-0x16]
movzx  eax,WORD PTR [ebp-0x16]
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
or     ax,0xc00
mov    WORD PTR [ebp-0x18],ax
fldcw  WORD PTR [ebp-0x18]
fistp  DWORD PTR [ebp-0x1c]
fldcw  WORD PTR [ebp-0x16]
mov    edx,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [ebp+0x18]
mov    DWORD PTR [eax],ecx
mov    ecx,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ecx],edx
leave  
ret    
fxch   st(1)
fchs   
fld    st(0)
fdiv   st,st(2)
fnstcw WORD PTR [ebp-0x4]
movzx  edx,WORD PTR [ebp-0x4]
and    edx,0xfffff3ff
or     edx,0x400
mov    WORD PTR [ebp-0x2],dx
fldcw  WORD PTR [ebp-0x2]
frndint 
fldcw  WORD PTR [ebp-0x4]
fnstcw WORD PTR [ebp-0x16]
movzx  ecx,WORD PTR [ebp-0x16]
or     cx,0xc00
mov    WORD PTR [ebp-0x18],cx
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
fldcw  WORD PTR [ebp-0x18]
fist   DWORD PTR [ebp-0x1c]
fldcw  WORD PTR [ebp-0x16]
fmul   st,st(2)
mov    ecx,DWORD PTR [ebp-0x1c]
neg    ecx
fsubp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x14]
fnstcw WORD PTR [ebp-0x4]
movzx  eax,WORD PTR [ebp-0x4]
and    eax,0xfffff3ff
or     eax,0x400
mov    WORD PTR [ebp-0x2],ax
fldcw  WORD PTR [ebp-0x2]
frndint 
fldcw  WORD PTR [ebp-0x4]
fnstcw WORD PTR [ebp-0x16]
movzx  edx,WORD PTR [ebp-0x16]
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
or     dx,0xc00
mov    WORD PTR [ebp-0x18],dx
fldcw  WORD PTR [ebp-0x18]
fistp  DWORD PTR [ebp-0x1c]
fldcw  WORD PTR [ebp-0x16]
mov    edx,DWORD PTR [ebp-0x1c]
test   edx,edx
je     dec8 <_Z11FloorDivModddPiS_@@Base+0x168>
fldcw  WORD PTR [ebp-0x18]
fistp  DWORD PTR [ebp-0x1c]
fldcw  WORD PTR [ebp-0x16]
dec    ecx
mov    eax,DWORD PTR [ebp-0x1c]
sub    eax,edx
mov    edx,eax
mov    eax,DWORD PTR [ebp+0x18]
mov    DWORD PTR [eax],ecx
mov    ecx,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ecx],edx
leave  
ret    
fstp   st(0)
mov    eax,DWORD PTR [ebp+0x18]
mov    DWORD PTR [eax],ecx
mov    ecx,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ecx],edx
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
cmp    ebx,ecx
jle    df11 <_Z21GreatestCommonDivisorii@@Base+0x31>
jmp    df00 <_Z21GreatestCommonDivisorii@@Base+0x20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test   ecx,ecx
je     df1e <_Z21GreatestCommonDivisorii@@Base+0x3e>
mov    eax,ebx
cdq    
mov    ebx,ecx
idiv   ecx
mov    ecx,edx
cmp    ebx,ecx
jg     df00 <_Z21GreatestCommonDivisorii@@Base+0x20>
test   ebx,ebx
je     df24 <_Z21GreatestCommonDivisorii@@Base+0x44>
mov    eax,ecx
cdq    
idiv   ebx
mov    ecx,edx
jmp    df0d <_Z21GreatestCommonDivisorii@@Base+0x2d>
pop    edx
mov    eax,ebx
pop    ebx
pop    ebp
ret    
pop    edx
mov    eax,ecx
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
pop    ebp
mov    eax,DWORD PTR [ecx]
test   eax,0x7f800000
sete   dl
test   eax,0x7fffff
setne  al
movzx  eax,al
and    eax,edx
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x15854
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ecx+0x4]
fmul   st,st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fxch   st(1)
fmul   DWORD PTR [ecx]
fld    DWORD PTR [ebp-0x4]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
xor    eax,0x80000000
mov    DWORD PTR [edx+0x8],eax
fmul   st(1),st
fmulp  st(2),st
fstp   DWORD PTR [edx]
fstp   DWORD PTR [edx+0x4]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15854
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax+0x4]
mov    ebx,DWORD PTR [ebp+0x14]
fmul   st,st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(3)
fsincos 
fxch   st(4)
fmul   DWORD PTR [eax+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0xc]
fxch   st(2)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
test   edx,edx
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
je     e027 <_Z12AngleVectorsRK6QAngleP6VectorS3_S3_@@Base+0x77>
fld    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0xc]
fmul   st,st(4)
xor    eax,0x80000000
mov    DWORD PTR [edx+0x8],eax
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x10]
fmul   st,st(3)
fstp   DWORD PTR [edx+0x4]
test   ecx,ecx
je     e061 <_Z12AngleVectorsRK6QAngleP6VectorS3_S3_@@Base+0xb1>
fld    DWORD PTR [ebp-0xc]
fld    st(2)
fld    st(2)
fxch   st(1)
fchs   
fxch   st(1)
fmul   st,st(5)
fxch   st(2)
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebp-0x10]
fld    st(1)
fmul   st,st(7)
fxch   st(2)
fmul   st,st(6)
fxch   st(1)
fstp   DWORD PTR [ecx+0x8]
fxch   st(1)
faddp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ecx]
fld    st(1)
fmul   st,st(5)
fsubp  st(1),st
fstp   DWORD PTR [ecx+0x4]
test   ebx,ebx
je     e095 <_Z12AngleVectorsRK6QAngleP6VectorS3_S3_@@Base+0xe5>
fld    DWORD PTR [ebp-0xc]
fld    st(2)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(2)
fxch   st(3)
fmul   st,st(5)
fxch   st(2)
fmul   DWORD PTR [ebp-0x10]
fld    st(3)
fmulp  st(6),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
fstp   DWORD PTR [ebx+0x8]
fxch   st(3)
faddp  st(1),st
fxch   st(1)
fsubrp st(2),st
fstp   DWORD PTR [ebx]
fstp   DWORD PTR [ebx+0x4]
jmp    e0a0 <_Z12AngleVectorsRK6QAngleP6VectorS3_S3_@@Base+0xf0>
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
add    esp,0xc
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15854
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [eax+0x4]
mov    ebx,DWORD PTR [ebp+0x14]
fmul   st,st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(3)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fxch   st(3)
fmul   DWORD PTR [eax+0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
test   edx,edx
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
je     e13d <_Z21AngleVectorsTransposeRK6QAngleP6VectorS3_S3_@@Base+0x8d>
fld    st(2)
fmul   st,st(4)
fld    st(5)
fmul   st,st(2)
fxch   st(1)
fstp   DWORD PTR [edx]
fld    st(2)
fmul   st,st(7)
fmul   st,st(5)
fsubrp st(1),st
fld    st(2)
fmul   st,st(6)
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fld    st(1)
fmul   st,st(7)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [edx+0x8]
test   ecx,ecx
je     e170 <_Z21AngleVectorsTransposeRK6QAngleP6VectorS3_S3_@@Base+0xc0>
fld    st(2)
fmul   st,st(5)
fld    st(1)
fmul   st,st(5)
fxch   st(5)
fmul   st,st(3)
fxch   st(1)
fstp   DWORD PTR [ecx]
fld    st(2)
fmul   st,st(7)
fmul   st,st(6)
faddp  st(5),st
fxch   st(4)
fstp   DWORD PTR [ecx+0x4]
fld    st(0)
fmul   st,st(6)
fmulp  st(5),st
fxch   st(4)
fsubrp st(3),st
fxch   st(2)
fstp   DWORD PTR [ecx+0x8]
jmp    e180 <_Z21AngleVectorsTransposeRK6QAngleP6VectorS3_S3_@@Base+0xd0>
nop
fstp   st(3)
fstp   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(1)
lea    esi,[esi+0x0]
test   ebx,ebx
je     e1a0 <_Z21AngleVectorsTransposeRK6QAngleP6VectorS3_S3_@@Base+0xf0>
fxch   st(3)
fchs   
fxch   st(1)
fmul   st,st(3)
fxch   st(2)
fmulp  st(3),st
fstp   DWORD PTR [ebx]
fstp   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebx+0x8]
jmp    e1b0 <_Z21AngleVectorsTransposeRK6QAngleP6VectorS3_S3_@@Base+0x100>
lea    esi,[esi+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
nop
lea    esi,[esi+eiz*1+0x0]
pop    ecx
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x40
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebx+0x4]
fucomi st,st(1)
jne    e215 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0x55>
jp     e215 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0x55>
fld    DWORD PTR [ebx]
fucomi st,st(2)
jne    e217 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0x57>
jp     e217 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0x57>
fstp   st(0)
fstp   st(0)
fld    DWORD PTR [ebx+0x8]
mov    DWORD PTR [esi+0x8],0x0
fld    st(1)
fld    DWORD PTR ds:0x15874
fxch   st(2)
fucomip st,st(3)
fstp   st(2)
fld    DWORD PTR ds:0x15878
fxch   st(2)
fstp   DWORD PTR [esi+0x4]
fcmovbe st,st(1)
fstp   st(1)
fstp   DWORD PTR [esi]
add    esp,0x40
pop    ebx
pop    esi
pop    ebp
ret    
fld    DWORD PTR [ebx]
fld    st(1)
fld    st(1)
fpatan 
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
fmul   QWORD PTR ds:0x15908
fdiv   QWORD PTR ds:0x158f8
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x14]
fxch   st(3)
fucomi st,st(3)
ja     e2a0 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0xe0>
fxch   st(2)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
faddp  st(1),st
fstp   DWORD PTR [esp]
fstp   DWORD PTR [ebp-0x28]
fstp   DWORD PTR [ebp-0x38]
call   DWORD PTR ds:0x0
fld    DWORD PTR [ebx+0x8]
fchs   
fxch   st(1)
fpatan 
fstp   QWORD PTR [ebp-0x10]
fld    QWORD PTR [ebp-0x10]
fmul   QWORD PTR ds:0x15908
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fdiv   QWORD PTR ds:0x158f8
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fucomip st,st(1)
jbe    e289 <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0xc9>
fadd   DWORD PTR ds:0x1587c
fstp   DWORD PTR [esi]
fstp   DWORD PTR [esi+0x4]
mov    DWORD PTR [esi+0x8],0x0
add    esp,0x40
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fadd   DWORD PTR ds:0x1587c
fxch   st(3)
jmp    e23b <_Z12VectorAnglesRK6VectorR6QAngle@@Base+0x7b>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    edx,[ebp-0x18]
push   esi
push   ebx
sub    esp,0x30
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [eax+0x8]
fld    DWORD PTR [ebx+0x4]
fld    st(2)
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   st,st(2)
fsubrp st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [eax]
fld    DWORD PTR [ebx]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(3)
fsubp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x14]
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fsubrp st(1),st
fstp   DWORD PTR [ebp-0x10]
mov    DWORD PTR [esp],edx
call   DWORD PTR ds:0x0
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fld    st(1)
fld    st(1)
fxch   st(1)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(2)
faddp  st(1),st
fsqrt  
fld    DWORD PTR ds:0x15858
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    e380 <_Z12VectorAnglesRK6VectorS1_R6QAngle@@Base+0xd0>
fxch   st(2)
fpatan 
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fld    DWORD PTR ds:0x1585c
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebx+0x8]
fchs   
fxch   st(1)
fxch   st(2)
fpatan 
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fmul   st,st(1)
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fmul   DWORD PTR [ebx]
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x10]
fxch   st(1)
fsubrp st(2),st
fxch   st(1)
fpatan 
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fmulp  st(1),st
fstp   DWORD PTR [esi+0x8]
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
fstp   st(1)
fstp   st(1)
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fchs   
fpatan 
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fld    DWORD PTR ds:0x1585c
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebx+0x8]
fchs   
fxch   st(1)
fxch   st(2)
fpatan 
fstp   DWORD PTR [ebp-0x1c]
mov    ecx,0x0
fld    DWORD PTR [ebp-0x1c]
mov    DWORD PTR [esi+0x8],ecx
fmulp  st(1),st
fstp   DWORD PTR [esi]
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
push   edi
cld    
sub    esp,0x4
mov    ecx,0xc
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],edx
mov    edi,DWORD PTR [ebp-0x8]
mov    edx,DWORD PTR [ebp-0x8]
rep stos DWORD PTR es:[edi],eax
mov    eax,0x3f800000
mov    DWORD PTR [edx],eax
mov    DWORD PTR [edx+0x14],eax
mov    DWORD PTR [edx+0x28],eax
pop    edi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x20
fld    DWORD PTR ds:0x1585c
mov    ecx,DWORD PTR [ebp+0x8]
lea    edx,[ebp-0x18]
mov    eax,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ecx]
fxch   st(1)
mov    DWORD PTR [esp+0x4],eax
fstp   DWORD PTR [ebp-0x18]
fxch   st(1)
mov    DWORD PTR [esp],edx
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x10]
call   e43c <_Z11AngleMatrixRK11RadianEulerR11matrix3x4_t@@Base+0x3c>
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    edx,[ebp-0x18]
push   esi
push   ebx
sub    esp,0x18
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x1585c
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [eax]
fxch   st(1)
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],edx
fstp   DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x10]
call   e491 <_Z11AngleMatrixRK11RadianEulerRK6VectorR11matrix3x4_t@@Base+0x41>
mov    ecx,DWORD PTR [esi]
mov    DWORD PTR [ebx+0xc],ecx
mov    edx,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebx+0x1c],edx
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [ebx+0x2c],eax
add    esp,0x18
pop    ebx
pop    esi
pop    ebp
ret    
nop
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    DWORD PTR [ebp-0x8],ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x4],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
call   e4cd <_Z11AngleMatrixRK6QAngleRK6VectorR11matrix3x4_t@@Base+0x1d>
mov    ecx,DWORD PTR [esi]
mov    DWORD PTR [ebx+0xc],ecx
mov    edx,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebx+0x1c],edx
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [ebx+0x2c],eax
mov    ebx,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15854
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax+0x4]
fmul   st,st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR [eax]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(3)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fxch   st(3)
fmul   DWORD PTR [eax+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x8]
fxch   st(3)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
mov    eax,0x0
fld    st(2)
fld    DWORD PTR [ebp-0x8]
fxch   st(2)
lea    ebx,[edx+0x10]
fstp   DWORD PTR [ebp-0x8]
fld    st(1)
fmul   st,st(5)
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fmul   st,st(5)
fxch   st(3)
fmul   st,st(1)
fxch   st(3)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0xc]
fmul   st,st(6)
fstp   DWORD PTR [edx+0x4]
fld    st(1)
fmul   st,st(5)
fxch   st(7)
fst    DWORD PTR [ebp-0x10]
fxch   st(2)
mov    ecx,DWORD PTR [ebp-0x10]
fmul   st,st(6)
fxch   st(7)
fsubrp st(3),st
xor    ecx,0x80000000
fld    st(3)
mov    DWORD PTR [edx+0x8],ecx
fmul   st,st(6)
fxch   st(3)
lea    ecx,[edx+0x20]
fstp   DWORD PTR [edx+0x10]
fld    st(0)
fmul   st,st(5)
faddp  st(7),st
fld    DWORD PTR [ebp-0xc]
fmul   st,st(4)
fxch   st(4)
fmul   st,st(5)
fxch   st(7)
fstp   DWORD PTR [ebx+0x4]
fld    st(0)
fmulp  st(2),st
fxch   st(3)
fstp   DWORD PTR [ebx+0x8]
fxch   st(2)
fmul   DWORD PTR [ebp-0xc]
fld    st(2)
fmulp  st(4),st
fxch   st(2)
fmulp  st(4),st
faddp  st(2),st
fxch   st(2)
fsubrp st(3),st
fstp   DWORD PTR [edx+0x20]
fstp   DWORD PTR [ecx+0x8]
fstp   DWORD PTR [ecx+0x4]
mov    DWORD PTR [edx+0xc],eax
mov    DWORD PTR [ebx+0xc],eax
mov    DWORD PTR [ecx+0xc],eax
add    esp,0xc
pop    ebx
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x20
fld    DWORD PTR ds:0x1585c
mov    ecx,DWORD PTR [ebp+0x8]
lea    edx,[ebp-0x18]
mov    eax,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ecx]
fxch   st(1)
mov    DWORD PTR [esp+0x4],eax
fstp   DWORD PTR [ebp-0x18]
fxch   st(1)
mov    DWORD PTR [esp],edx
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x10]
call   e61c <_Z12AngleIMatrixRK11RadianEulerR11matrix3x4_t@@Base+0x3c>
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x18
mov    esi,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp],edx
call   e649 <_Z12AngleIMatrixRK6QAngleRK6VectorR11matrix3x4_t@@Base+0x19>
fld    DWORD PTR [esi]
lea    eax,[esi+0x10]
lea    ecx,[esi+0x20]
fld    DWORD PTR [esi+0x4]
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fld    DWORD PTR [esi+0x10]
fmul   DWORD PTR [ebx]
fld    DWORD PTR [esi+0x20]
fxch   st(2)
faddp  st(3),st
fld    DWORD PTR [esi+0x8]
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fmul   DWORD PTR [ebx]
fxch   st(3)
faddp  st(2),st
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [ebx+0x4]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [ebx+0x8]
faddp  st(1),st
fld    DWORD PTR [ecx+0x4]
fmul   DWORD PTR [ebx+0x4]
faddp  st(3),st
fld    DWORD PTR [ecx+0x8]
fmul   DWORD PTR [ebx+0x8]
faddp  st(3),st
fld    DWORD PTR ds:0x15880
fmul   st(2),st
fmul   st(1),st
fmulp  st(3),st
fstp   DWORD PTR [ebp-0x14]
fxch   st(1)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [esi+0xc]
mov    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [esi+0x1c],edx
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [esi+0x2c],eax
add    esp,0x18
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
fld    DWORD PTR [ebp+0xc]
push   ebx
xor    eax,eax
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0x14]
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
fld    DWORD PTR [ecx+eax*4]
fld    DWORD PTR [edx+eax*4]
fucomi st,st(1)
ja     e707 <_Z24SphereToAABBIntersectionRK6VectorfS1_S1_@@Base+0x37>
fstp   st(0)
fld    DWORD PTR [ebx+eax*4]
fxch   st(1)
fucomi st,st(1)
jbe    e710 <_Z24SphereToAABBIntersectionRK6VectorfS1_S1_@@Base+0x40>
fxch   st(1)
fsubp  st(1),st
fmul   st,st(0)
faddp  st(2),st
jmp    e720 <_Z24SphereToAABBIntersectionRK6VectorfS1_S1_@@Base+0x50>
nop
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
inc    eax
cmp    eax,0x2
jle    e6f0 <_Z24SphereToAABBIntersectionRK6VectorfS1_S1_@@Base+0x20>
pop    ebx
fmul   st,st(0)
xor    eax,eax
pop    ebp
fucomip st,st(1)
fstp   st(0)
setae  al
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    eax,0x47c34f80
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx+0x8],eax
mov    DWORD PTR [edx+0x4],eax
mov    DWORD PTR [edx],eax
mov    eax,0xc7c34f80
mov    DWORD PTR [ecx+0x8],eax
mov    DWORD PTR [ecx+0x4],eax
mov    DWORD PTR [ecx],eax
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    ecx,ecx
mov    ebp,esp
push   edi
mov    edi,DWORD PTR [ebp+0x8]
push   esi
mov    esi,DWORD PTR [ebp+0xc]
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
jmp    e790 <_Z16AddPointToBoundsRK6VectorRS_S2_@@Base+0x20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fld    DWORD PTR [edi+ecx*4]
lea    edx,[ecx*4+0x0]
lea    eax,[edx+esi*1]
fld    DWORD PTR [eax]
fucomip st,st(1)
jbe    e7a5 <_Z16AddPointToBoundsRK6VectorRS_S2_@@Base+0x35>
fst    DWORD PTR [eax]
lea    eax,[edx+ebx*1]
fld    DWORD PTR [eax]
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    e7b6 <_Z16AddPointToBoundsRK6VectorRS_S2_@@Base+0x46>
fstp   DWORD PTR [eax]
jmp    e7b8 <_Z16AddPointToBoundsRK6VectorRS_S2_@@Base+0x48>
fstp   st(0)
inc    ecx
cmp    ecx,0x2
jle    e790 <_Z16AddPointToBoundsRK6VectorRS_S2_@@Base+0x20>
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
xor    ebx,ebx
lea    esi,[esi+eiz*1+0x0]
lea    edx,[ebx-0x80]
mov    eax,0x40000000
push   edx
fild   DWORD PTR [esp]
add    esp,0x4
mov    DWORD PTR [esp],0x0
mov    DWORD PTR [esp+0x4],eax
fstp   QWORD PTR [esp+0x8]
call   e7ff <_Z18BuildExponentTablev@@Base+0x2f>
fdiv   DWORD PTR ds:0x15884
fstp   DWORD PTR [ebx*4+0x0]
inc    ebx
cmp    ebx,0xff
jle    e7e0 <_Z18BuildExponentTablev@@Base+0x10>
add    esp,0x14
pop    ebx
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x70
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15888
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x10]
fxch   st(3)
fucomi st,st(2)
fcmovnbe st,st(2)
fstp   st(2)
fld1   
fdivr  st(2),st
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fstp   DWORD PTR [ebp-0x3c]
fldz   
fucomip st,st(3)
fstp   st(2)
fstp   DWORD PTR [ebp-0x1c]
jb     e993 <_Z15BuildGammaTablefffi@@Base+0x173>
fstp   st(0)
fld    DWORD PTR ds:0x1588c
fstp   DWORD PTR [ebp-0x20]
xor    ebx,ebx
fld    DWORD PTR [ebp-0x1c]
cvtsi2ss xmm0,ebx
fstp   QWORD PTR [esp+0x8]
movss  DWORD PTR [ebp-0x5c],xmm0
fld    DWORD PTR [ebp-0x5c]
fdiv   DWORD PTR ds:0x15884
fstp   QWORD PTR [esp]
call   e888 <_Z15BuildGammaTablefffi@@Base+0x68>
fnstcw WORD PTR [ebp-0x12]
fmul   DWORD PTR ds:0x15884
xor    edx,edx
movzx  eax,WORD PTR [ebp-0x12]
or     ax,0xc00
mov    WORD PTR [ebp-0x14],ax
fldcw  WORD PTR [ebp-0x14]
fistp  DWORD PTR [ebp-0x18]
fldcw  WORD PTR [ebp-0x12]
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
js     e8c0 <_Z15BuildGammaTablefffi@@Base+0xa0>
mov    edx,0xff
cmp    eax,0x100
cmovl  edx,eax
mov    BYTE PTR [ebx+0x1f9e0],dl
inc    ebx
cmp    ebx,0xff
jle    e86b <_Z15BuildGammaTablefffi@@Base+0x4b>
movss  xmm2,DWORD PTR [ebp+0x10]
xor    ebx,ebx
ucomiss xmm2,DWORD PTR ds:0x15860
ja     ea47 <_Z15BuildGammaTablefffi@@Base+0x227>
jmp    e968 <_Z15BuildGammaTablefffi@@Base+0x148>
fstp   st(0)
fld    DWORD PTR [ebp-0x20]
fxch   st(1)
fsub   DWORD PTR [ebp-0x20]
fxch   st(1)
fsubr  QWORD PTR ds:0x15918
fdivp  st(1),st
fmul   DWORD PTR ds:0x15898
fadd   DWORD PTR ds:0x1588c
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x3c]
fxch   st(1)
fstp   QWORD PTR [esp]
fstp   QWORD PTR [esp+0x8]
call   e91b <_Z15BuildGammaTablefffi@@Base+0xfb>
fnstcw WORD PTR [ebp-0x12]
movzx  edx,WORD PTR [ebp-0x12]
fmul   DWORD PTR ds:0x15884
or     dx,0xc00
mov    WORD PTR [ebp-0x14],dx
xor    edx,edx
fldcw  WORD PTR [ebp-0x14]
fistp  DWORD PTR [ebp-0x18]
fldcw  WORD PTR [ebp-0x12]
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
js     e954 <_Z15BuildGammaTablefffi@@Base+0x134>
mov    edx,0xff
cmp    eax,0x100
cmovl  edx,eax
mov    DWORD PTR [ebx*4+0x1cde0],edx
inc    ebx
cmp    ebx,0x3ff
jg     ea8e <_Z15BuildGammaTablefffi@@Base+0x26e>
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fdiv   DWORD PTR ds:0x15894
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x20]
fucomi st,st(1)
jb     e8e8 <_Z15BuildGammaTablefffi@@Base+0xc8>
fdivp  st(1),st
fmul   DWORD PTR ds:0x1588c
jmp    e90e <_Z15BuildGammaTablefffi@@Base+0xee>
fld    DWORD PTR [ebp+0x10]
fucomip st,st(1)
fstp   st(0)
jbe    e9aa <_Z15BuildGammaTablefffi@@Base+0x18a>
fld    DWORD PTR ds:0x15890
fstp   DWORD PTR [ebp-0x20]
jmp    e869 <_Z15BuildGammaTablefffi@@Base+0x49>
fld    DWORD PTR [ebp+0x10]
fld    QWORD PTR ds:0x15910
fxch   st(1)
fmul   st,st(0)
fmulp  st(1),st
fld    DWORD PTR ds:0x1588c
fsubrp st(1),st
fstp   DWORD PTR [ebp-0x20]
jmp    e869 <_Z15BuildGammaTablefffi@@Base+0x49>
lea    esi,[esi+eiz*1+0x0]
fld    DWORD PTR [ebp-0x20]
fxch   st(1)
fsub   DWORD PTR [ebp-0x20]
fxch   st(1)
fsubr  QWORD PTR ds:0x15918
fdivp  st(1),st
fmul   DWORD PTR ds:0x15898
fadd   DWORD PTR ds:0x1588c
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x3c]
fxch   st(1)
fstp   QWORD PTR [esp]
fstp   QWORD PTR [esp+0x8]
call   ea01 <_Z15BuildGammaTablefffi@@Base+0x1e1>
fnstcw WORD PTR [ebp-0x12]
movzx  eax,WORD PTR [ebp-0x12]
fmul   DWORD PTR ds:0x15884
or     ax,0xc00
mov    WORD PTR [ebp-0x14],ax
fldcw  WORD PTR [ebp-0x14]
fistp  DWORD PTR [ebp-0x18]
fldcw  WORD PTR [ebp-0x12]
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
js     ea7c <_Z15BuildGammaTablefffi@@Base+0x25c>
cmp    eax,0x100
mov    edx,0xff
cmovl  edx,eax
mov    DWORD PTR [ebx*4+0x1cde0],edx
inc    ebx
cmp    ebx,0x3ff
jg     ea8e <_Z15BuildGammaTablefffi@@Base+0x26e>
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fdiv   DWORD PTR ds:0x15894
fld    DWORD PTR [ebp-0x20]
fxch   st(1)
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0xc]
fmul   DWORD PTR [ebp+0x10]
fxch   st(1)
fucomip st,st(1)
jb     e9d0 <_Z15BuildGammaTablefffi@@Base+0x1b0>
fld    DWORD PTR [ebp-0x20]
fdivp  st(1),st
fmul   DWORD PTR ds:0x1588c
jmp    e9f4 <_Z15BuildGammaTablefffi@@Base+0x1d4>
xor    edx,edx
mov    DWORD PTR [ebx*4+0x1cde0],edx
inc    ebx
cmp    ebx,0x3ff
jle    ea47 <_Z15BuildGammaTablefffi@@Base+0x227>
xor    ebx,ebx
fld    DWORD PTR [ebp+0xc]
cvtsi2ss xmm1,ebx
fstp   QWORD PTR [esp+0x8]
movss  DWORD PTR [ebp-0x24],xmm1
fld    DWORD PTR [ebp-0x24]
fdiv   DWORD PTR ds:0x15884
fst    QWORD PTR [esp]
fstp   DWORD PTR [ebp-0x24]
call   eab0 <_Z15BuildGammaTablefffi@@Base+0x290>
fld    DWORD PTR [ebp-0x24]
fxch   st(1)
mov    ecx,0xc0000000
mov    edx,0x3fdd1745
fstp   DWORD PTR [ebx*4+0x1ede0]
mov    DWORD PTR [esp+0x8],ecx
mov    DWORD PTR [esp+0xc],edx
fstp   QWORD PTR [esp]
call   ead6 <_Z15BuildGammaTablefffi@@Base+0x2b6>
fld    DWORD PTR [ebp-0x24]
fxch   st(1)
mov    eax,0xa0000000
mov    ecx,0x40019999
fstp   DWORD PTR [ebx*4+0x1f1e0]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp+0xc],ecx
fstp   QWORD PTR [esp]
call   eafc <_Z15BuildGammaTablefffi@@Base+0x2dc>
fstp   DWORD PTR [ebx*4+0x1f5e0]
inc    ebx
cmp    ebx,0xff
jle    ea90 <_Z15BuildGammaTablefffi@@Base+0x270>
fld    DWORD PTR [ebp+0xc]
xor    ebx,ebx
fdivr  QWORD PTR ds:0x15918
fstp   QWORD PTR [ebp-0x30]
mov    esi,esi
fld    QWORD PTR [ebp-0x30]
fstp   QWORD PTR [esp+0x8]
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fdiv   DWORD PTR ds:0x15894
fstp   QWORD PTR [esp]
call   eb38 <_Z15BuildGammaTablefffi@@Base+0x318>
fnstcw WORD PTR [ebp-0x12]
movzx  eax,WORD PTR [ebp-0x12]
fmul   DWORD PTR ds:0x15884
or     ax,0xc00
mov    WORD PTR [ebp-0x14],ax
fldcw  WORD PTR [ebp-0x14]
fistp  DWORD PTR [ebx*4+0x1dde0]
fldcw  WORD PTR [ebp-0x12]
inc    ebx
cmp    ebx,0x3ff
jle    eb20 <_Z15BuildGammaTablefffi@@Base+0x300>
xor    ebx,ebx
lea    ecx,[ebx-0x80]
mov    edx,0x40000000
push   ecx
fild   DWORD PTR [esp]
add    esp,0x4
mov    DWORD PTR [esp],0x0
mov    DWORD PTR [esp+0x4],edx
fstp   QWORD PTR [esp+0x8]
call   eb88 <_Z15BuildGammaTablefffi@@Base+0x368>
fdiv   DWORD PTR ds:0x15884
fstp   DWORD PTR [ebx*4+0x0]
inc    ebx
cmp    ebx,0xff
jle    eb69 <_Z15BuildGammaTablefffi@@Base+0x349>
cmp    esi,0x2
je     ec55 <_Z15BuildGammaTablefffi@@Base+0x435>
fld    DWORD PTR ds:0x1589c
cmp    esi,0x4
fld1   
fcmove st,st(1)
fstp   st(1)
fld    DWORD PTR [ebp+0x8]
xor    ebx,ebx
fdivr  QWORD PTR ds:0x15918
fstp   QWORD PTR [ebp-0x38]
nop
lea    esi,[esi+eiz*1+0x0]
fld    QWORD PTR [ebp-0x38]
fxch   st(1)
fstp   DWORD PTR [ebp-0x58]
fstp   QWORD PTR [esp+0x8]
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fmul   DWORD PTR ds:0x158a0
fstp   QWORD PTR [esp]
call   ebed <_Z15BuildGammaTablefffi@@Base+0x3cd>
fstp   DWORD PTR [ebp-0xc]
fld1   
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebp-0x58]
fld    st(1)
fmul   st,st(1)
fxch   st(2)
fmul   DWORD PTR ds:0x15884
fxch   st(2)
fucomi st,st(3)
fstp   st(3)
fld1   
fcmovbe st,st(3)
fstp   st(3)
fmul   st(1),st
fxch   st(2)
fstp   DWORD PTR [ebx*4+0x0]
fistp  DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
mov    edx,0xff
cmp    eax,0xff
jg     ec3d <_Z15BuildGammaTablefffi@@Base+0x41d>
mov    edx,eax
test   eax,eax
mov    esi,0x0
cmovs  edx,esi
mov    BYTE PTR [ebx+0x0],dl
inc    ebx
cmp    ebx,0xfff
jle    ebd0 <_Z15BuildGammaTablefffi@@Base+0x3b0>
fstp   st(0)
add    esp,0x70
pop    ebx
pop    esi
pop    ebp
ret    
fld    DWORD PTR ds:0x156a8
jmp    ebba <_Z15BuildGammaTablefffi@@Base+0x39a>
push   ebp
mov    ecx,0xa0000000
mov    ebp,esp
sub    esp,0x18
mov    edx,0x40019999
fld    DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x8],ecx
mov    DWORD PTR [esp+0xc],edx
fstp   QWORD PTR [esp]
call   ec7f <_Z22GammaToLinearFullRangef@@Base+0x1f>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    edx,0xc0000000
mov    ebp,esp
sub    esp,0x18
mov    eax,0x3fdd1745
fld    DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp+0xc],eax
fstp   QWORD PTR [esp]
call   ecaf <_Z22LinearToGammaFullRangef@@Base+0x1f>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x8]
fxch   st(1)
fucomi st,st(1)
ja     ecf6 <_Z13GammaToLinearf@@Base+0x36>
fstp   st(0)
fld    DWORD PTR ds:0x158a4
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jae    ecfb <_Z13GammaToLinearf@@Base+0x3b>
fmul   DWORD PTR ds:0x15884
fistp  DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
fld    DWORD PTR [eax*4+0x1f5e0]
leave  
ret    
fstp   st(1)
leave  
jmp    ecf5 <_Z13GammaToLinearf@@Base+0x35>
fstp   st(0)
leave  
fld1   
ret    
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x8]
fxch   st(1)
fucomi st,st(1)
ja     ed42 <_Z13LinearToGammaf@@Base+0x32>
fstp   st(0)
fld1   
fxch   st(1)
fucomi st,st(1)
ja     ed46 <_Z13LinearToGammaf@@Base+0x36>
fstp   st(1)
fmul   DWORD PTR ds:0x15884
fistp  DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
fld    DWORD PTR [eax*4+0x1f1e0]
jmp    ed50 <_Z13LinearToGammaf@@Base+0x40>
fstp   st(1)
jmp    ed50 <_Z13LinearToGammaf@@Base+0x40>
fstp   st(0)
nop
lea    esi,[esi+eiz*1+0x0]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
js     ed80 <_Z15TextureToLineari@@Base+0x20>
fstp   st(0)
cmp    eax,0xff
fld1   
jg     ed80 <_Z15TextureToLineari@@Base+0x20>
fstp   st(0)
fld    DWORD PTR [eax*4+0x1ede0]
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    edx,edx
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x15894
fmul   DWORD PTR [ebp+0x8]
fstp   DWORD PTR [ebp-0x4]
movss  xmm0,DWORD PTR [ebp-0x4]
cvttss2si eax,xmm0
test   eax,eax
js     edbe <_Z15LinearToTexturef@@Base+0x2e>
mov    edx,0x3ff
cmp    eax,0x400
cmovl  edx,eax
mov    eax,DWORD PTR [edx*4+0x1dde0]
leave  
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
xor    edx,edx
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x15894
fmul   DWORD PTR [ebp+0x8]
fstp   DWORD PTR [ebp-0x4]
movss  xmm0,DWORD PTR [ebp-0x4]
cvttss2si eax,xmm0
test   eax,eax
js     edfe <_Z19LinearToScreenGammaf@@Base+0x2e>
mov    edx,0x3ff
cmp    eax,0x400
cmovl  edx,eax
mov    eax,DWORD PTR [edx*4+0x1cde0]
leave  
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
sub    esp,0x4
mov    edx,DWORD PTR [ebp+0x14]
mov    ecx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x10]
fxch   st(2)
fucomi st,st(3)
jne    ee48 <_Z14SolveQuadraticfffRfS_@@Base+0x38>
jp     ee48 <_Z14SolveQuadraticfffRfS_@@Base+0x38>
fstp   st(0)
fucomi st,st(2)
jp     ee37 <_Z14SolveQuadraticfffRfS_@@Base+0x27>
je     eea0 <_Z14SolveQuadraticfffRfS_@@Base+0x90>
fstp   st(2)
mov    eax,0x1
fchs   
fdivrp st(1),st
fst    DWORD PTR [ecx]
fstp   DWORD PTR [edx]
leave  
ret    
fld    st(0)
xor    eax,eax
fld    st(2)
fxch   st(1)
fmul   DWORD PTR ds:0x15868
fxch   st(1)
fmul   st,st(3)
fxch   st(1)
fmulp  st(4),st
fsubrp st(3),st
fxch   st(3)
fucomip st,st(2)
ja     ee93 <_Z14SolveQuadraticfffRfS_@@Base+0x83>
fxch   st(1)
fsqrt  
fstp   DWORD PTR [ebp-0x4]
fxch   st(1)
mov    eax,0x1
fadd   st,st(0)
fld    DWORD PTR [ebp-0x4]
fld    st(0)
fsub   st,st(3)
fxch   st(3)
fchs   
fxch   st(3)
fdiv   st,st(2)
fxch   st(3)
fsubrp st(1),st
fxch   st(2)
fstp   DWORD PTR [edx]
fdivp  st(1),st
fstp   DWORD PTR [ecx]
leave  
ret    
fstp   st(0)
fstp   st(0)
fstp   st(0)
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
xor    eax,eax
fucomip st,st(1)
fstp   st(0)
jne    ee46 <_Z14SolveQuadraticfffRfS_@@Base+0x36>
jp     ee46 <_Z14SolveQuadraticfffRfS_@@Base+0x36>
mov    DWORD PTR [ecx],0x0
mov    eax,0x1
mov    DWORD PTR [edx],0x0
leave  
ret    
nop
push   ebp
xor    eax,eax
mov    ebp,esp
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x18]
fld    DWORD PTR [ebp+0x10]
fld    st(2)
fsub   st,st(2)
fxch   st(1)
fsubr  st,st(3)
fmulp  st(1),st
fld    DWORD PTR [ebp+0x10]
fsub   st,st(2)
fmulp  st(1),st
fldz   
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jp     eeef <_Z21SolveInverseQuadraticffffffRfS_S_@@Base+0x2f>
je     efb0 <_Z21SolveInverseQuadraticffffffRfS_S_@@Base+0xf0>
fld    DWORD PTR [ebp+0x14]
mov    ecx,DWORD PTR [ebp+0x20]
fld    st(2)
fld    DWORD PTR [ebp+0xc]
fld    st(5)
fxch   st(3)
mov    edx,DWORD PTR [ebp+0x24]
fsub   DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   st,st(5)
fxch   st(1)
mov    eax,DWORD PTR [ebp+0x28]
fsub   DWORD PTR [ebp+0x1c]
fxch   st(2)
fmul   st,st(5)
fxch   st(3)
fmul   st,st(6)
fxch   st(2)
fmul   DWORD PTR [ebp+0x10]
faddp  st(3),st
fld    DWORD PTR [ebp+0x1c]
fsub   DWORD PTR [ebp+0x14]
fmul   st,st(6)
faddp  st(3),st
fxch   st(2)
fdiv   st,st(3)
fstp   DWORD PTR [ecx]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x14]
fxch   st(1)
fsub   DWORD PTR [ebp+0x14]
fxch   st(1)
fsub   DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x10]
fxch   st(2)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(3)
fxch   st(2)
fmul   st,st(0)
fxch   st(1)
faddp  st(2),st
fld    DWORD PTR [ebp+0x1c]
fsub   DWORD PTR [ebp+0xc]
fmul   st,st(1)
faddp  st(2),st
fld    st(6)
fmul   st,st(6)
fxch   st(2)
fdiv   st,st(5)
fstp   DWORD PTR [edx]
fld    st(5)
fsub   st,st(7)
fxch   st(6)
fmul   DWORD PTR [ebp+0xc]
fxch   st(2)
fmulp  st(6),st
fxch   st(6)
fmul   DWORD PTR [ebp+0x1c]
fxch   st(2)
fmul   DWORD PTR [ebp+0x1c]
fxch   st(3)
fmul   DWORD PTR [ebp+0xc]
fxch   st(1)
fsubrp st(2),st
fxch   st(4)
fmul   DWORD PTR [ebp+0x14]
fxch   st(5)
fmulp  st(1),st
fxch   st(1)
fsubrp st(3),st
fxch   st(2)
fmul   DWORD PTR [ebp+0x10]
fxch   st(3)
faddp  st(2),st
fxch   st(1)
faddp  st(2),st
fdivp  st(1),st
fstp   DWORD PTR [eax]
mov    eax,0x1
jmp    efb6 <_Z21SolveInverseQuadraticffffffRfS_S_@@Base+0xf6>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
mov    esi,DWORD PTR [ebp+0x20]
fld    DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0x24]
mov    edi,DWORD PTR [ebp+0x28]
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp+0x8]
fucomip st,st(1)
fstp   st(0)
ja     f296 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2d6>
movss  xmm0,DWORD PTR [ebp-0x28]
ucomiss xmm0,DWORD PTR [ebp+0x18]
ja     f267 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2a7>
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp-0x28]
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
ja     f231 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x271>
movss  xmm0,DWORD PTR ds:0x15860
fldz   
fld    DWORD PTR [ebp+0x14]
fxch   st(1)
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp+0xc]
movss  DWORD PTR [ebp-0x30],xmm0
movss  xmm1,DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x30]
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp+0x1c]
fstp   DWORD PTR [ebp-0x2c]
jmp    f172 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x1b2>
nop
lea    esi,[esi+eiz*1+0x0]
fld    DWORD PTR [ebp-0x20]
mov    eax,0x1
fld    st(4)
fld    DWORD PTR [ebp-0x20]
fxch   st(2)
fsubr  st,st(5)
fxch   st(1)
fmul   st,st(6)
fxch   st(2)
fsub   DWORD PTR [ebp-0x2c]
fxch   st(1)
fmul   st,st(3)
fxch   st(1)
fmul   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(2)
faddp  st(1),st
fld    DWORD PTR [ebp-0x2c]
fsub   st,st(6)
fmul   st,st(7)
faddp  st(1),st
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fdiv   st,st(5)
fxch   st(1)
fsubr  st,st(6)
fxch   st(1)
fstp   DWORD PTR [esi]
fld    st(3)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebp-0x2c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x20]
fsub   st,st(6)
fmul   DWORD PTR [ebp-0x18]
faddp  st(3),st
fld    DWORD PTR [ebp-0x1c]
fmul   st,st(2)
faddp  st(3),st
fld    st(6)
fmul   st,st(4)
fxch   st(3)
fdiv   st,st(5)
fxch   st(4)
fmul   DWORD PTR [ebp-0x20]
fxch   st(7)
fmul   DWORD PTR [ebp-0x2c]
fxch   st(4)
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ebp-0x18]
fxch   st(3)
fmul   DWORD PTR [ebp-0x24]
fxch   st(7)
fsubrp st(4),st
fxch   st(2)
fmul   DWORD PTR [ebp-0x20]
fxch   st(1)
fmulp  st(3),st
fxch   st(5)
fmulp  st(4),st
fsubrp st(4),st
fxch   st(3)
fmul   DWORD PTR [ebp-0x28]
fxch   st(2)
faddp  st(3),st
fxch   st(2)
faddp  st(1),st
fdivrp st(1),st
fstp   DWORD PTR [edi]
test   al,al
je     f1e8 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x228>
fld    DWORD PTR [esi]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x14]
fxch   st(2)
fadd   st,st(0)
fxch   st(2)
fucomi st,st(1)
fxch   st(2)
fadd   DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fstp   DWORD PTR [ebp-0x10]
fld    DWORD PTR [ebp-0x10]
ja     f1f2 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x232>
fld    DWORD PTR [ebp-0x20]
fucomip st,st(2)
jbe    f223 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x263>
fld    DWORD PTR [ebp+0x1c]
fxch   st(2)
fucomi st,st(2)
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
jbe    f223 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x263>
movss  DWORD PTR [ebp-0x30],xmm1
fld    DWORD PTR [ebp-0x30]
fucomip st,st(1)
fstp   st(0)
jae    f214 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x254>
fld    QWORD PTR ds:0x15920
fadd   DWORD PTR [ebp-0x14]
movss  DWORD PTR [ebp-0x30],xmm0
fstp   DWORD PTR [ebp-0x14]
ucomiss xmm0,DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebp-0x30]
jb     f223 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x263>
fld    DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x28]
fxch   st(2)
fxch   st(1)
fld    DWORD PTR [ebp-0x14]
movss  DWORD PTR [ebp-0x30],xmm1
xor    eax,eax
fld    DWORD PTR [ebp+0x18]
fxch   st(1)
fsubp  st(2),st
fld    DWORD PTR [ebp-0x2c]
fld    st(1)
fsub   st,st(5)
fxch   st(1)
fsub   DWORD PTR [ebp-0x20]
fxch   st(3)
fmulp  st(4),st
fld    DWORD PTR [ebp-0x28]
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fxch   st(3)
fstp   DWORD PTR [ebp-0x1c]
fsubr  st,st(4)
fld    DWORD PTR [ebp-0x28]
fsub   st,st(5)
fmul   DWORD PTR [ebp-0x1c]
fdivrp st(3),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x20]
fmul   DWORD PTR [ebp-0x14]
faddp  st(3),st
fld    st(3)
fsub   st,st(1)
fmulp  st(2),st
fld    DWORD PTR [ebp-0x28]
fsub   st,st(1)
fmulp  st(2),st
fld    DWORD PTR [ebp-0x30]
fxch   st(2)
fucomi st,st(2)
fstp   st(2)
jp     f040 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x80>
jne    f040 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x80>
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
test   al,al
jne    f0f1 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x131>
add    esp,0x2c
xor    eax,eax
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fld    DWORD PTR [ebp+0x1c]
fucomi st,st(2)
fstp   DWORD PTR [ebp-0x2c]
jbe    f116 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x156>
movss  DWORD PTR [ebp-0x30],xmm1
fld    DWORD PTR [ebp-0x30]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
jb     f145 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x185>
fstp   st(0)
add    esp,0x2c
mov    eax,0x1
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fstp   st(0)
fstp   st(0)
add    esp,0x2c
mov    eax,0x1
jmp    f21e <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x25e>
fstp   st(0)
lea    ecx,[ebp+0x10]
lea    edx,[ebp+0x8]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],edx
call   f241 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x281>
lea    eax,[ebp+0x14]
lea    ecx,[ebp+0xc]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],ecx
call   f253 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x293>
fld    DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x28]
jmp    f009 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x49>
lea    edx,[ebp+0x18]
lea    eax,[ebp+0x10]
mov    DWORD PTR [esp+0x4],edx
mov    DWORD PTR [esp],eax
call   f275 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2b5>
lea    ecx,[ebp+0x1c]
lea    edx,[ebp+0x14]
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],edx
call   f287 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2c7>
fld    DWORD PTR [ebp+0x10]
fstp   DWORD PTR [ebp-0x28]
jmp    eff7 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x37>
lea    eax,[ebp+0x10]
lea    ecx,[ebp+0x8]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],ecx
call   f2a4 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2e4>
lea    edx,[ebp+0x14]
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp+0x4],edx
mov    DWORD PTR [esp],eax
call   f2b6 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x2f6>
fld    DWORD PTR [ebp+0x10]
fstp   DWORD PTR [ebp-0x28]
jmp    efe8 <_Z30SolveInverseQuadraticMonotonicffffffRfS_S_@@Base+0x28>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x18]
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x8]
fsub   DWORD PTR [ebp+0x10]
fxch   st(1)
fsub   st,st(2)
fld    DWORD PTR [ebp+0x10]
fxch   st(2)
fmulp  st(1),st
fxch   st(1)
fsub   st,st(2)
fldz   
fxch   st(2)
fmul   st,st(1)
fmul   DWORD PTR [ebp+0xc]
fmul   DWORD PTR [ebp+0x14]
fmul   DWORD PTR [ebp+0x1c]
fucomi st,st(2)
fstp   st(2)
jp     f30e <_Z31SolveInverseReciprocalQuadraticffffffRfS_S_@@Base+0x3e>
je     f3e3 <_Z31SolveInverseReciprocalQuadraticffffffRfS_S_@@Base+0x113>
fld    DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x20]
fld    st(3)
fxch   st(1)
fmul   DWORD PTR [ebp+0xc]
fxch   st(1)
mov    edx,DWORD PTR [ebp+0x24]
fmul   st,st(4)
fld    DWORD PTR [ebp+0x14]
fsub   DWORD PTR [ebp+0x1c]
fmulp  st(2),st
fld    DWORD PTR [ebp+0xc]
fsub   DWORD PTR [ebp+0x14]
fmul   st,st(5)
fmul   DWORD PTR [ebp+0x1c]
faddp  st(2),st
fld    DWORD PTR [ebp+0x10]
fmul   DWORD PTR [ebp+0x14]
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp+0x1c]
fsub   DWORD PTR [ebp+0xc]
fmul   DWORD PTR [ebp-0x4]
faddp  st(2),st
fxch   st(1)
fdiv   st,st(3)
fstp   DWORD PTR [ecx]
fld    DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   st,st(0)
fxch   st(2)
fsub   DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x8]
fxch   st(2)
fmul   st,st(3)
fxch   st(2)
fmul   st,st(0)
fxch   st(2)
fmulp  st(1),st
fld    DWORD PTR [ebp+0x14]
fsub   DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   st,st(4)
fmul   DWORD PTR [ebp+0x1c]
faddp  st(1),st
fld    DWORD PTR [ebp+0x1c]
fsub   DWORD PTR [ebp+0x14]
fmul   st,st(2)
faddp  st(1),st
fdiv   st,st(5)
fstp   DWORD PTR [edx]
fxch   st(3)
fmul   DWORD PTR [ebp+0x10]
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ebp+0x1c]
fxch   st(5)
fmul   DWORD PTR [ebp+0x14]
fxch   st(5)
fsubr  DWORD PTR [ebp-0x4]
fxch   st(5)
fmul   DWORD PTR [ebp+0x1c]
fxch   st(3)
fmul   st,st(5)
fxch   st(5)
fstp   DWORD PTR [ebp-0x4]
fxch   st(1)
mov    eax,DWORD PTR [ebp+0x28]
fmul   DWORD PTR [ebp+0xc]
fxch   st(2)
faddp  st(4),st
fmul   DWORD PTR [ebp+0xc]
fxch   st(1)
fmul   DWORD PTR [ebp+0x1c]
fxch   st(1)
fmul   DWORD PTR [ebp+0x14]
fsubp  st(1),st
fmul   DWORD PTR [ebp+0x8]
faddp  st(2),st
fdivp  st(1),st
fstp   DWORD PTR [eax]
mov    eax,0x1
jmp    f3e9 <_Z31SolveInverseReciprocalQuadraticffffffRfS_S_@@Base+0x119>
fstp   st(0)
fstp   st(0)
fstp   st(0)
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x34
fld    DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
cmp    eax,ecx
je     f443 <_Z15VectorYawRotateRK6VectorfRS_@@Base+0x53>
fmul   DWORD PTR ds:0x15854
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
mov    edx,DWORD PTR [eax+0x8]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [ebp-0x1c]
fld    DWORD PTR [eax]
fld    st(2)
fmul   st,st(4)
fxch   st(1)
mov    DWORD PTR [ecx+0x8],edx
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
fsubp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ecx]
fxch   st(1)
fmul   DWORD PTR [eax]
faddp  st(1),st
fstp   DWORD PTR [ecx+0x4]
leave  
ret    
mov    eax,DWORD PTR [ecx]
lea    edx,[ebp-0x18]
mov    DWORD PTR [ebp-0x18],eax
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ecx+0x8]
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp+0x8],ecx
fstp   DWORD PTR [esp+0x4]
mov    DWORD PTR [esp],edx
call   f463 <_Z15VectorYawRotateRK6VectorfRS_@@Base+0x73>
leave  
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR ds:0x17204
fucomip st,st(1)
jp     f4a4 <_Z4Biasff@@Base+0x34>
jne    f4a4 <_Z4Biasff@@Base+0x34>
fstp   st(0)
fld    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp+0x8]
fstp   QWORD PTR [esp]
call   f498 <_Z4Biasff@@Base+0x28>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
fstp   QWORD PTR [esp]
call   f4a8 <_Z4Biasff@@Base+0x38>
fld    DWORD PTR ds:0x158a8
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fst    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp+0x8]
fstp   QWORD PTR [esp]
call   f4cb <_Z4Biasff@@Base+0x5b>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x156a8
fld    DWORD PTR [ebp+0xc]
fxch   st(1)
fucomip st,st(2)
jbe    f540 <_Z4Gainff@@Base+0x60>
fld    DWORD PTR ds:0x17204
fxch   st(2)
fadd   st,st(0)
fstp   DWORD PTR [ebp-0x8]
fld1   
fsubrp st(1),st
fxch   st(1)
fucomip st,st(1)
jp     f5b0 <_Z4Gainff@@Base+0xd0>
jne    f5b0 <_Z4Gainff@@Base+0xd0>
fstp   st(0)
fld    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp-0x8]
fstp   QWORD PTR [esp]
call   f52c <_Z4Gainff@@Base+0x4c>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fmul   DWORD PTR ds:0x156a8
leave  
ret    
mov    esi,esi
fld    DWORD PTR ds:0x17204
fxch   st(2)
fadd   st,st(0)
fsubr  DWORD PTR ds:0x158ac
fstp   DWORD PTR [ebp-0xc]
fld1   
fsubrp st(1),st
fxch   st(1)
fucomip st,st(1)
jp     f590 <_Z4Gainff@@Base+0xb0>
jne    f590 <_Z4Gainff@@Base+0xb0>
fstp   st(0)
fld    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp-0xc]
fstp   QWORD PTR [esp]
call   f572 <_Z4Gainff@@Base+0x92>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fmul   DWORD PTR ds:0x156a8
fsubr  DWORD PTR ds:0x15860
leave  
ret    
lea    esi,[esi+0x0]
fstp   QWORD PTR [esp]
call   f594 <_Z4Gainff@@Base+0xb4>
fld    DWORD PTR ds:0x158a8
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fst    DWORD PTR ds:0x1fae0
jmp    f567 <_Z4Gainff@@Base+0x87>
mov    esi,esi
fstp   QWORD PTR [esp]
call   f5b4 <_Z4Gainff@@Base+0xd4>
fld    DWORD PTR ds:0x158a8
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fst    DWORD PTR ds:0x1fae0
jmp    f521 <_Z4Gainff@@Base+0x41>
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
fld    QWORD PTR ds:0x158f8
fmul   DWORD PTR [ebp+0x8]
fstp   QWORD PTR [esp]
call   f5f3 <_Z11SmoothCurvef@@Base+0x13>
fsubr  QWORD PTR ds:0x15918
fmul   DWORD PTR ds:0x156a8
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x10]
fxch   st(1)
fucomi st,st(2)
jbe    f6b0 <_Z17SmoothCurve_Tweakfff@@Base+0xa0>
fld    DWORD PTR ds:0x156a8
fld1   
fxch   st(4)
fmul   st,st(1)
fdivrp st(2),st
fucomip st,st(1)
ja     f6e7 <_Z17SmoothCurve_Tweakfff@@Base+0xd7>
fadd   st,st(0)
fxch   st(2)
fsubrp st(1),st
fxch   st(1)
fsubr  DWORD PTR ds:0x158ac
fstp   DWORD PTR [ebp-0xc]
fld    DWORD PTR ds:0x17204
fucomip st,st(1)
jp     f745 <_Z17SmoothCurve_Tweakfff@@Base+0x135>
jne    f745 <_Z17SmoothCurve_Tweakfff@@Base+0x135>
fstp   st(0)
fld    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp-0xc]
fstp   QWORD PTR [esp]
call   f677 <_Z17SmoothCurve_Tweakfff@@Base+0x67>
fstp   DWORD PTR [ebp-0x4]
fld1   
fld    DWORD PTR [ebp-0x4]
fmul   DWORD PTR ds:0x156a8
fsubp  st(1),st
fld    QWORD PTR ds:0x158f8
fmulp  st(1),st
fstp   QWORD PTR [esp]
call   f697 <_Z17SmoothCurve_Tweakfff@@Base+0x87>
fsubr  QWORD PTR ds:0x15918
fmul   DWORD PTR ds:0x156a8
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
fld    DWORD PTR ds:0x156a8
fxch   st(3)
fsub   st,st(1)
fld1   
fld    DWORD PTR ds:0x156a8
fxch   st(2)
fmul   st,st(5)
fxch   st(3)
fsubr  st,st(1)
fdivp  st(3),st
fxch   st(2)
faddp  st(4),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fxch   st(3)
fucomip st,st(3)
ja     f6e5 <_Z17SmoothCurve_Tweakfff@@Base+0xd5>
fxch   st(2)
jmp    f63f <_Z17SmoothCurve_Tweakfff@@Base+0x2f>
fxch   st(2)
fadd   st,st(0)
fxch   st(2)
fsubrp st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x8]
fld    DWORD PTR ds:0x17204
fucomip st,st(1)
jp     f766 <_Z17SmoothCurve_Tweakfff@@Base+0x156>
jne    f766 <_Z17SmoothCurve_Tweakfff@@Base+0x156>
fstp   st(0)
fld    DWORD PTR ds:0x1fae0
fstp   QWORD PTR [esp+0x8]
fld    DWORD PTR [ebp-0x8]
fstp   QWORD PTR [esp]
call   f711 <_Z17SmoothCurve_Tweakfff@@Base+0x101>
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fmul   DWORD PTR ds:0x156a8
fld    QWORD PTR ds:0x158f8
fmulp  st(1),st
fstp   QWORD PTR [esp]
call   f72d <_Z17SmoothCurve_Tweakfff@@Base+0x11d>
fsubr  QWORD PTR ds:0x15918
fmul   DWORD PTR ds:0x156a8
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
leave  
ret    
fstp   QWORD PTR [esp]
call   f749 <_Z17SmoothCurve_Tweakfff@@Base+0x139>
fld    DWORD PTR ds:0x158a8
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fst    DWORD PTR ds:0x1fae0
jmp    f66c <_Z17SmoothCurve_Tweakfff@@Base+0x5c>
fstp   QWORD PTR [esp]
call   f76a <_Z17SmoothCurve_Tweakfff@@Base+0x15a>
fld    DWORD PTR ds:0x158a8
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fst    DWORD PTR ds:0x1fae0
jmp    f706 <_Z17SmoothCurve_Tweakfff@@Base+0xf6>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
mov    edx,DWORD PTR [ebp+0x8]
fld    st(0)
push   ebx
mov    esi,DWORD PTR [ebp+0x10]
xor    eax,eax
mov    ebx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [edx+eax*4]
fld    DWORD PTR [ebx+eax*4]
inc    eax
fld    st(1)
fsub   st,st(1)
fxch   st(2)
cmp    eax,0x3
faddp  st(1),st
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
fxch   st(3)
faddp  st(1),st
fxch   st(1)
faddp  st(2),st
jg     f7f6 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x66>
nop
lea    esi,[esi+eiz*1+0x0]
fxch   st(1)
fld    DWORD PTR [edx+eax*4]
fld    DWORD PTR [ebx+eax*4]
inc    eax
fld    st(1)
fsub   st,st(1)
fxch   st(2)
cmp    eax,0x3
faddp  st(1),st
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
fxch   st(3)
faddp  st(1),st
fxch   st(1)
faddp  st(2),st
jle    f7d0 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x40>
fucomip st,st(1)
fstp   st(0)
jbe    f817 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x87>
xor    ecx,ecx
mov    edx,esi
mov    eax,DWORD PTR [ebx+ecx*4]
inc    ecx
xor    eax,0x80000000
mov    DWORD PTR [edx],eax
add    edx,0x4
cmp    ecx,0x3
jle    f800 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x70>
pop    ebx
pop    esi
pop    ebp
ret    
cmp    esi,ebx
je     f813 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x83>
xor    ecx,ecx
mov    edx,esi
nop
mov    esi,DWORD PTR [ebx+ecx*4]
inc    ecx
mov    DWORD PTR [edx],esi
add    edx,0x4
cmp    ecx,0x3
jle    f820 <_Z15QuaternionAlignRK10QuaternionS1_RS_@@Base+0x90>
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fld1   
mov    ebp,esp
push   esi
xor    edx,edx
push   ebx
sub    esp,0x10
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
fsub   st(1),st
mov    eax,esi
lea    esi,[esi+eiz*1+0x0]
fld    DWORD PTR [ebx+edx*4]
fld    DWORD PTR [ecx+edx*4]
fxch   st(1)
inc    edx
fmul   st,st(3)
fxch   st(1)
fmul   st,st(2)
faddp  st(1),st
fstp   DWORD PTR [eax]
add    eax,0x4
cmp    edx,0x3
jle    f860 <_Z22QuaternionBlendNoAlignRK10QuaternionS1_fRS_@@Base+0x20>
fstp   st(0)
fstp   st(0)
mov    DWORD PTR [esp],esi
call   f883 <_Z22QuaternionBlendNoAlignRK10QuaternionS1_fRS_@@Base+0x43>
fstp   st(0)
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
lea    ebx,[ebp-0x28]
mov    DWORD PTR [esp+0x8],ebx
mov    eax,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],esi
call   f8b1 <_Z15QuaternionBlendRK10QuaternionS1_fRS_@@Base+0x21>
fld    DWORD PTR [ebp+0x10]
xor    edx,edx
mov    eax,edi
fsubr  DWORD PTR ds:0x15860
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
fld    DWORD PTR [esi+edx*4]
fld    DWORD PTR [ebp+0x10]
fmul   DWORD PTR [ebx+edx*4]
fxch   st(1)
inc    edx
fmul   st,st(2)
faddp  st(1),st
fstp   DWORD PTR [eax]
add    eax,0x4
cmp    edx,0x3
jle    f8d0 <_Z15QuaternionBlendRK10QuaternionS1_fRS_@@Base+0x40>
fstp   st(0)
mov    DWORD PTR [esp],edi
call   f8f0 <_Z15QuaternionBlendRK10QuaternionS1_fRS_@@Base+0x60>
fstp   st(0)
add    esp,0x2c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
fld1   
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax+0xc]
fxch   st(3)
fsub   st,st(2)
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fmul   st,st(1)
fstp   DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x8]
fmul   st,st(1)
fstp   DWORD PTR [eax+0x8]
fldz   
fucomip st,st(3)
fstp   st(2)
jbe    f950 <_Z23QuaternionIdentityBlendRK10QuaternionfRS_@@Base+0x50>
fxch   st(1)
fmul   DWORD PTR [edx+0xc]
fsubrp st(1),st
fstp   DWORD PTR [eax+0xc]
mov    DWORD PTR [esp],eax
call   f946 <_Z23QuaternionIdentityBlendRK10QuaternionfRS_@@Base+0x46>
fstp   st(0)
leave  
ret    
mov    esi,esi
fxch   st(1)
fmul   DWORD PTR [edx+0xc]
faddp  st(1),st
fstp   DWORD PTR [eax+0xc]
mov    DWORD PTR [esp],eax
call   f95e <_Z23QuaternionIdentityBlendRK10QuaternionfRS_@@Base+0x5e>
fstp   st(0)
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x4c
mov    esi,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x1586c
mov    ebx,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [esi+0x4]
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebx]
fmul   DWORD PTR [esi]
fxch   st(2)
fmul   st,st(1)
faddp  st(2),st
fld    DWORD PTR [ebx+0x8]
fmul   DWORD PTR [esi+0x8]
faddp  st(2),st
fld    DWORD PTR [ebx+0xc]
fmul   DWORD PTR [esi+0xc]
faddp  st(2),st
fld1   
fadd   st,st(2)
fucomip st,st(3)
jbe    f9f7 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x87>
fstp   st(0)
fld1   
fsub   st,st(1)
fucomip st,st(2)
fstp   st(1)
ja     fa73 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x103>
fstp   st(0)
fld    DWORD PTR [ebp+0x10]
fld1   
fsub   DWORD PTR [ebp+0x10]
xor    edx,edx
mov    eax,edi
mov    esi,esi
fld    DWORD PTR [esi+edx*4]
fld    DWORD PTR [ebx+edx*4]
fxch   st(1)
inc    edx
fmul   st,st(2)
fxch   st(1)
fmul   st,st(3)
faddp  st(1),st
fstp   DWORD PTR [eax]
add    eax,0x4
cmp    edx,0x3
jle    f9d0 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x60>
fstp   st(0)
fstp   st(0)
add    esp,0x4c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fstp   st(1)
fstp   st(1)
fchs   
fld1   
fxch   st(1)
fstp   DWORD PTR [edi]
mov    ecx,DWORD PTR [ebx]
fld    QWORD PTR ds:0x15928
fxch   st(1)
mov    DWORD PTR [edi+0x4],ecx
mov    edx,DWORD PTR [ebx+0xc]
xor    edx,0x80000000
mov    DWORD PTR [edi+0x8],edx
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [edi+0xc],eax
fsub   DWORD PTR [ebp+0x10]
fmul   st,st(1)
fstp   QWORD PTR [esp]
fstp   QWORD PTR [ebp-0x48]
call   fa2e <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0xbe>
fld    QWORD PTR [ebp-0x48]
fmul   DWORD PTR [ebp+0x10]
fxch   st(1)
fstp   DWORD PTR [ebp-0x34]
fstp   QWORD PTR [esp]
call   fa41 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0xd1>
fstp   DWORD PTR [ebp-0x1c]
xor    edx,edx
mov    eax,edi
fld    DWORD PTR [ebp-0x1c]
nop
fld    DWORD PTR [eax]
fld    DWORD PTR [ebp-0x34]
fmul   DWORD PTR [esi+edx*4]
fxch   st(1)
inc    edx
fmul   st,st(2)
faddp  st(1),st
fstp   DWORD PTR [eax]
add    eax,0x4
cmp    edx,0x2
jle    fa50 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0xe0>
fstp   st(0)
add    esp,0x4c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fstp   QWORD PTR [esp]
call   fa77 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x107>
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp-0x20]
fstp   DWORD PTR [esp]
call   fa85 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x115>
fstp   DWORD PTR [ebp-0x24]
fld1   
fsub   DWORD PTR [ebp+0x10]
fmul   DWORD PTR [ebp-0x20]
fstp   QWORD PTR [esp]
call   fa98 <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x128>
fld    DWORD PTR [ebp-0x24]
fstp   QWORD PTR [ebp-0x30]
fdiv   QWORD PTR [ebp-0x30]
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp+0x10]
fmul   DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
fstp   QWORD PTR [esp]
fstp   DWORD PTR [ebp-0x48]
call   faba <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x14a>
fdiv   QWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x48]
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebp-0x1c]
fxch   st(1)
jmp    f9ca <_Z22QuaternionSlerpNoAlignRK10QuaternionS1_fRS_@@Base+0x5a>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
mov    DWORD PTR [ebp-0x4],esi
mov    ecx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],ebx
lea    ebx,[ebp-0x18]
mov    DWORD PTR [esp+0x8],ebx
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],esi
call   fb01 <_Z15QuaternionSlerpRK10QuaternionS1_fRS_@@Base+0x21>
mov    DWORD PTR [esp+0x4],ebx
mov    edx,DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp],esi
mov    DWORD PTR [esp+0xc],edx
mov    DWORD PTR [esp+0x8],eax
call   fb1b <_Z15QuaternionSlerpRK10QuaternionS1_fRS_@@Base+0x3b>
mov    ebx,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx]
xor    eax,0x80000000
mov    DWORD PTR [ecx],eax
mov    eax,DWORD PTR [edx+0x4]
xor    eax,0x80000000
mov    DWORD PTR [ecx+0x4],eax
mov    eax,DWORD PTR [edx+0x8]
xor    eax,0x80000000
mov    DWORD PTR [ecx+0x8],eax
mov    eax,DWORD PTR [edx+0xc]
mov    DWORD PTR [ecx+0xc],eax
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x2c
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0xc]
cmp    ebx,esi
je     fc31 <_Z14QuaternionMultRK10QuaternionS1_RS_@@Base+0xd1>
mov    DWORD PTR [esp],ebx
lea    eax,[ebp-0x18]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp+0x4],edx
call   fb88 <_Z14QuaternionMultRK10QuaternionS1_RS_@@Base+0x28>
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x10]
fld    DWORD PTR [ebp-0xc]
fmul   DWORD PTR [ebx]
fxch   st(2)
fst    DWORD PTR [ebp-0x1c]
fmul   st,st(1)
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0xc]
fxch   st(5)
faddp  st(3),st
fld    st(1)
fmul   st,st(1)
fxch   st(1)
fmul   st,st(5)
fxch   st(3)
fsubrp st(1),st
fld    st(4)
fmul   DWORD PTR [ebp-0x18]
faddp  st(1),st
fld    DWORD PTR [ebp-0x1c]
fmul   DWORD PTR [ebp-0xc]
fxch   st(1)
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebx]
fld    st(0)
fchs   
fld    st(0)
fmul   st,st(6)
fxch   st(1)
fmul   DWORD PTR [ebp-0x18]
fxch   st(6)
fmul   st,st(7)
fxch   st(1)
faddp  st(3),st
fld    DWORD PTR [ebp-0x18]
fxch   st(7)
fmul   DWORD PTR [ebp-0xc]
fxch   st(7)
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [ebp-0xc]
fxch   st(3)
faddp  st(4),st
fxch   st(3)
faddp  st(4),st
fxch   st(3)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x18]
fxch   st(5)
fmul   st,st(2)
fxch   st(5)
fmul   st,st(1)
fxch   st(1)
fmulp  st(2),st
fsubp  st(4),st
fsubp  st(4),st
faddp  st(2),st
faddp  st(1),st
fstp   DWORD PTR [esi+0x8]
fld    DWORD PTR [ebp-0x10]
fmul   DWORD PTR [ebx+0x8]
fsubp  st(1),st
faddp  st(1),st
fstp   DWORD PTR [esi+0xc]
add    esp,0x2c
pop    ebx
pop    esi
pop    ebp
ret    
mov    ecx,DWORD PTR [esi]
mov    DWORD PTR [ebp-0x18],ecx
mov    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebp-0x14],eax
mov    ebx,DWORD PTR [esi+0x8]
lea    eax,[ebp-0x18]
mov    DWORD PTR [ebp-0x10],ebx
mov    ecx,DWORD PTR [esi+0xc]
mov    DWORD PTR [ebp-0xc],ecx
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],edx
mov    DWORD PTR [esp],eax
call   fc57 <_Z14QuaternionMultRK10QuaternionS1_RS_@@Base+0xf7>
add    esp,0x2c
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    ecx,[ebp-0x18]
push   ebx
sub    esp,0x74
mov    edx,DWORD PTR [ebp+0xc]
movss  xmm0,DWORD PTR ds:0x15940
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx]
xor    eax,0x80000000
mov    DWORD PTR [ebp-0x18],eax
mov    eax,DWORD PTR [edx+0x4]
xor    eax,0x80000000
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [edx+0x8]
xor    eax,0x80000000
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [edx+0xc]
mov    DWORD PTR [ebp-0xc],eax
lea    eax,[ebp-0x28]
cmp    ebx,eax
je     fdc0 <_Z19QuaternionAngleDiffRK10QuaternionS1_@@Base+0x150>
mov    DWORD PTR [esp+0x4],ecx
lea    edx,[ebp-0x38]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],ebx
movaps XMMWORD PTR [ebp-0x58],xmm0
call   fccc <_Z19QuaternionAngleDiffRK10QuaternionS1_@@Base+0x5c>
fld    DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x2c]
fxch   st(3)
fst    DWORD PTR [ebp-0x40]
fmul   st,st(1)
fxch   st(3)
fmul   st,st(2)
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebx+0xc]
fxch   st(4)
fst    DWORD PTR [ebp-0x5c]
fxch   st(2)
faddp  st(5),st
mov    ecx,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebp-0x38]
fxch   st(1)
xor    ecx,0x80000000
fmul   st,st(2)
mov    DWORD PTR [ebp-0x44],ecx
fld    DWORD PTR [ebp-0x44]
fxch   st(5)
fmul   DWORD PTR [ebp-0x2c]
fxch   st(7)
fsubrp st(1),st
fld    st(5)
fxch   st(5)
fmul   DWORD PTR [ebp-0x40]
fxch   st(5)
fmul   st,st(2)
fxch   st(4)
fmul   DWORD PTR [ebp-0x34]
fxch   st(5)
faddp  st(7),st
faddp  st(3),st
fld    st(1)
fmul   st,st(1)
fxch   st(2)
fmul   DWORD PTR [ebp-0x2c]
fxch   st(3)
fst    DWORD PTR [ebp-0x28]
fxch   st(6)
faddp  st(2),st
fld    DWORD PTR [ebp-0x34]
fmul   st,st(5)
faddp  st(2),st
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebx+0x4]
fld    st(0)
fmul   st,st(3)
fxch   st(1)
fmul   DWORD PTR [ebp-0x34]
fxch   st(3)
fmul   DWORD PTR [ebp-0x44]
fxch   st(5)
fsubrp st(1),st
fld    DWORD PTR [ebp-0x40]
fxch   st(1)
faddp  st(4),st
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ebp-0x2c]
fxch   st(4)
fsubrp st(2),st
fxch   st(2)
faddp  st(4),st
fld    DWORD PTR [ebp-0x40]
fxch   st(4)
fst    DWORD PTR [ebp-0x20]
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fsubp  st(1),st
faddp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fmul   st,st(0)
fxch   st(2)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
faddp  st(2),st
faddp  st(1),st
fsqrt  
fstp   DWORD PTR [ebp-0x3c]
fld    DWORD PTR [ebp-0x3c]
fstp   QWORD PTR [esp]
call   fda8 <_Z19QuaternionAngleDiffRK10QuaternionS1_@@Base+0x138>
fadd   st,st(0)
fstp   DWORD PTR [ebp-0x3c]
fld    DWORD PTR [ebp-0x3c]
fmul   DWORD PTR ds:0x1585c
add    esp,0x74
pop    ebx
pop    ebp
ret    
mov    DWORD PTR [esp+0x4],ecx
mov    eax,DWORD PTR [ebp-0x28]
lea    ecx,[ebp-0x38]
mov    DWORD PTR [esp+0x8],ebx
mov    edx,DWORD PTR [ebp-0x24]
mov    DWORD PTR [esp],ecx
mov    DWORD PTR [ebp-0x38],eax
mov    eax,DWORD PTR [ebp-0x20]
mov    DWORD PTR [ebp-0x34],edx
mov    edx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x30],eax
mov    DWORD PTR [ebp-0x2c],edx
call   fde7 <_Z19QuaternionAngleDiffRK10QuaternionS1_@@Base+0x177>
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x20]
fxch   st(1)
jmp    fd8c <_Z19QuaternionAngleDiffRK10QuaternionS1_@@Base+0x11c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
pop    ebp
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fld    DWORD PTR [eax+0xc]
fmul   DWORD PTR [edx+0xc]
faddp  st(1),st
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax+0x4]
mov    ecx,DWORD PTR [eax+0x8]
fld    DWORD PTR [eax]
xor    edx,0x80000000
xor    ecx,0x80000000
fchs   
mov    DWORD PTR [ebx+0x4],edx
fld    DWORD PTR [eax+0x4]
fxch   st(1)
mov    DWORD PTR [ebx+0x8],ecx
fst    DWORD PTR [ebx]
fxch   st(1)
fmul   st,st(0)
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fst    DWORD PTR [ebx+0xc]
fxch   st(1)
faddp  st(2),st
fld    DWORD PTR [eax+0x8]
fmul   st,st(0)
faddp  st(2),st
fld    DWORD PTR [eax+0xc]
fmul   st,st(0)
faddp  st(2),st
fldz   
fxch   st(2)
fucomi st,st(2)
fstp   st(2)
jp     fe90 <_Z16QuaternionInvertRK10QuaternionRS_@@Base+0x60>
je     fec0 <_Z16QuaternionInvertRK10QuaternionRS_@@Base+0x90>
fxch   st(1)
fdivr  DWORD PTR ds:0x15860
fmul   st(2),st
fmul   st(1),st
fxch   st(2)
fstp   DWORD PTR [ebx]
mov    DWORD PTR [ebp-0x8],edx
fld    DWORD PTR [ebp-0x8]
fmul   st,st(2)
fstp   DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x8],ecx
fld    DWORD PTR [ebp-0x8]
fxch   st(1)
fstp   DWORD PTR [ebx+0xc]
fmulp  st(1),st
fstp   DWORD PTR [ebx+0x8]
jmp    fec6 <_Z16QuaternionInvertRK10QuaternionRS_@@Base+0x96>
lea    esi,[esi+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
pop    eax
pop    ebx
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x30
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
fmul   st,st(0)
faddp  st(1),st
fsqrt  
fstp   DWORD PTR [ebp-0xc]
fld1   
fld    DWORD PTR [ebp-0xc]
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fucomi st,st(1)
fcmovnbe st,st(1)
fstp   st(1)
fst    QWORD PTR [esp]
fstp   DWORD PTR [ebp-0x18]
call   ff10 <_Z15QuaternionScaleRK10QuaternionfRS_@@Base+0x40>
fmul   DWORD PTR [ebp+0xc]
fstp   QWORD PTR [esp]
call   ff1b <_Z15QuaternionScaleRK10QuaternionfRS_@@Base+0x4b>
fld    DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [ebp-0xc]
fadd   DWORD PTR ds:0x15864
fld    DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebp-0x28]
fxch   st(3)
fdivr  st,st(2)
fmul   st(1),st
fxch   st(2)
fmul   st,st(0)
fxch   st(1)
fstp   DWORD PTR [esi]
fsubp  st(2),st
fldz   
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fucomi st,st(3)
fxch   st(3)
fcmovnbe st,st(3)
fxch   st(1)
fmul   st,st(2)
fstp   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [esi+0x8]
fsqrt  
fstp   DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ebp-0xc]
fld    DWORD PTR [ebx+0xc]
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
jbe    ff79 <_Z15QuaternionScaleRK10QuaternionfRS_@@Base+0xa9>
xor    eax,0x80000000
mov    DWORD PTR [esi+0xc],eax
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x24
mov    DWORD PTR [ebp-0x8],ebx
mov    eax,DWORD PTR [ebp+0xc]
lea    edx,[ebp-0x18]
mov    DWORD PTR [ebp-0x4],esi
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [esp+0x4],eax
call   ffb4 <_Z13QuaternionAddRK10QuaternionS1_RS_@@Base+0x24>
fld    DWORD PTR [ebp-0x18]
fadd   DWORD PTR [ebx]
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x14]
fadd   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x10]
fadd   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [esi+0x8]
fld    DWORD PTR [ebp-0xc]
fadd   DWORD PTR [ebx+0xc]
fstp   DWORD PTR [esi+0xc]
mov    ebx,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fld1   
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [eax+0x4]
lea    ecx,[edx+0x10]
lea    ebx,[edx+0x20]
fld    st(0)
fadd   st,st(1)
fmulp  st(1),st
fld    DWORD PTR [eax+0x8]
fxch   st(1)
fsubr  QWORD PTR ds:0x15918
fld    st(1)
fadd   st,st(2)
fmulp  st(2),st
fsubrp st(1),st
fstp   DWORD PTR [edx]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
faddp  st(1),st
fstp   DWORD PTR [edx+0x10]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fsubp  st(1),st
fstp   DWORD PTR [edx+0x20]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fsubp  st(1),st
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [eax]
fld    st(0)
fadd   st,st(1)
fmulp  st(1),st
fld    DWORD PTR [eax+0x8]
fld    st(0)
fadd   st,st(1)
fxch   st(2)
fsubr  st,st(3)
fxch   st(2)
fmulp  st(1),st
fsubp  st(1),st
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [eax]
faddp  st(1),st
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
faddp  st(1),st
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0xc]
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fmul   DWORD PTR [eax]
fsubp  st(1),st
fstp   DWORD PTR [ecx+0x8]
fld    DWORD PTR [eax]
fld    st(0)
fadd   st,st(1)
fmulp  st(1),st
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsubrp st(1),st
fld    st(1)
fadd   st,st(2)
fmulp  st(2),st
fsubrp st(1),st
fstp   DWORD PTR [ebx+0x8]
pop    eax
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x48
mov    DWORD PTR [ebp-0x8],ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],esi
lea    esi,[ebp-0x38]
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp],eax
call   1012d <_Z16QuaternionAnglesRK10QuaternionR11RadianEuler@@Base+0x1d>
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],esi
call   10139 <_Z16QuaternionAnglesRK10QuaternionR11RadianEuler@@Base+0x29>
fld    DWORD PTR ds:0x15854
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebx]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebx+0x8]
mov    ebx,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x44
lea    ebx,[ebp-0x38]
mov    DWORD PTR [esp+0x4],ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp],edx
call   10185 <_Z16QuaternionAnglesRK10QuaternionR6QAngle@@Base+0x15>
mov    DWORD PTR [esp],ebx
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],eax
call   10194 <_Z16QuaternionAnglesRK10QuaternionR6QAngle@@Base+0x24>
add    esp,0x44
pop    ebx
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    DWORD PTR [ebp-0x8],ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x4],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],eax
call   101bd <_Z16QuaternionMatrixRK10QuaternionRK6VectorR11matrix3x4_t@@Base+0x1d>
mov    ecx,DWORD PTR [esi]
mov    DWORD PTR [ebx+0xc],ecx
mov    edx,DWORD PTR [esi+0x4]
mov    DWORD PTR [ebx+0x1c],edx
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [ebx+0x2c],eax
mov    ebx,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebx+0xc]
fstp   QWORD PTR [esp]
call   101ff <_Z19QuaternionAxisAngleRK10QuaternionR6VectorRf@@Base+0x1f>
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fadd   st,st(0)
fstp   DWORD PTR [ebp-0x10]
fld    DWORD PTR [ebp-0x10]
fmul   DWORD PTR ds:0x1585c
fucomi st,st(1)
fstp   st(1)
jbe    10225 <_Z19QuaternionAxisAngleRK10QuaternionR6VectorRf@@Base+0x45>
fsub   DWORD PTR ds:0x1587c
fstp   DWORD PTR [edi]
mov    ecx,DWORD PTR [ebx]
mov    DWORD PTR [esi],ecx
mov    edx,DWORD PTR [ebx+0x4]
mov    DWORD PTR [esi+0x4],edx
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [esi+0x8],eax
mov    DWORD PTR [esp],esi
call   DWORD PTR ds:0x0
fstp   st(0)
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x15854
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
fmul   DWORD PTR [ebp+0xc]
fmul   DWORD PTR ds:0x156a8
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [edx]
fld    DWORD PTR [ebp-0x4]
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fmul   st,st(1)
fstp   DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [eax+0xc]
fstp   DWORD PTR [eax+0x8]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
add    esp,0xffffff80
mov    esi,DWORD PTR [ebp+0xc]
fld    DWORD PTR ds:0x15880
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [esi]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [esi+0x4]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
lea    esi,[ebp-0x48]
fst    DWORD PTR [ebp-0x18]
fxch   st(2)
mov    eax,DWORD PTR [edx]
fst    DWORD PTR [ebp-0x14]
fxch   st(1)
mov    DWORD PTR [ebp-0x48],eax
mov    eax,DWORD PTR [edx+0x4]
fst    DWORD PTR [ebp-0x10]
fxch   st(2)
mov    DWORD PTR [ebp-0x38],eax
mov    eax,DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x44]
fxch   st(1)
fstp   DWORD PTR [ebp-0x24]
mov    DWORD PTR [ebp-0x28],eax
fstp   DWORD PTR [ebp-0x34]
mov    edx,DWORD PTR [ecx]
mov    DWORD PTR [ebp-0x40],edx
mov    eax,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x30],eax
mov    edx,DWORD PTR [ecx+0x8]
lea    eax,[ebp-0x58]
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],esi
mov    DWORD PTR [ebp-0x20],edx
call   10318 <_Z17BasisToQuaternionRK6VectorS1_S1_R10Quaternion@@Base+0x78>
fld    DWORD PTR ds:0x15854
fld    DWORD PTR [ebp-0x50]
fld    DWORD PTR [ebp-0x58]
fld    DWORD PTR ds:0x156a8
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebp-0x54]
fxch   st(1)
fst    DWORD PTR [ebp-0x68]
fxch   st(3)
fst    DWORD PTR [ebp-0x64]
fxch   st(1)
fst    DWORD PTR [ebp-0x60]
fmul   st,st(2)
fsincos 
fstp   DWORD PTR [ebp-0x6c]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fstp   DWORD PTR [ebp-0x70]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fsincos 
fstp   DWORD PTR [ebp-0x6c]
fxch   st(3)
fmulp  st(2),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x74]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x6c]
fld    st(1)
fmul   st,st(3)
fld    DWORD PTR [ebp-0x74]
fld    DWORD PTR [ebp-0x70]
fxch   st(4)
fmul   DWORD PTR [ebp-0x74]
fxch   st(1)
fmul   st,st(3)
fld    st(2)
fmul   DWORD PTR [ebp-0x70]
fxch   st(5)
fmul   st,st(1)
fxch   st(3)
fmul   st,st(7)
fxch   st(4)
fmulp  st(6),st
fmul   st,st(6)
fxch   st(3)
fsubrp st(2),st
fld    st(0)
fmul   st,st(6)
fxch   st(3)
faddp  st(4),st
fxch   st(1)
fstp   DWORD PTR [ebx]
fld    DWORD PTR [ebp-0x70]
fxch   st(1)
fmul   DWORD PTR [ebp-0x70]
fxch   st(1)
fmul   st,st(4)
fxch   st(4)
fmulp  st(5),st
fxch   st(2)
fstp   DWORD PTR [ebx+0x4]
fsubp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ebx+0xc]
sub    esp,0xffffff80
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    DWORD PTR [ebp-0xc],ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x8],esi
mov    ecx,DWORD PTR [ebp+0x18]
mov    ebx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [eax]
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [edx]
fld    DWORD PTR [edi]
mov    DWORD PTR [ecx],eax
mov    eax,DWORD PTR [edx+0x4]
fsubp  st(1),st
fldz   
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
mov    DWORD PTR [ecx+0x4],eax
mov    eax,DWORD PTR [edx+0x8]
mov    DWORD PTR [ecx+0x8],eax
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [esi],eax
mov    eax,DWORD PTR [ebx+0x4]
mov    DWORD PTR [esi+0x4],eax
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [esi+0x8],eax
jp     10436 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0x56>
je     10496 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0xb6>
fld    DWORD PTR [edx]
fld    DWORD PTR [edi]
fxch   st(1)
fucomi st,st(1)
jp     104a5 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0xc5>
jne    104a5 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0xc5>
fstp   st(0)
fstp   st(0)
fld    DWORD PTR [ebx]
mov    eax,DWORD PTR [ebp-0x10]
fld    DWORD PTR [eax]
fxch   st(1)
fucomi st,st(1)
jp     10455 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0x75>
je     10492 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0xb2>
fsub   st,st(1)
fdiv   st(2),st
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fstp   DWORD PTR [esi]
fld    DWORD PTR [eax+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [eax+0x8]
fsub   st(1),st
fxch   st(1)
fmulp  st(2),st
faddp  st(1),st
fstp   DWORD PTR [esi+0x8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
fstp   st(0)
fstp   st(0)
fstp   st(0)
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
fld    st(1)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(2)
fxch   st(1)
fdivr  st,st(3)
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fld    DWORD PTR [edx+0x4]
fxch   st(1)
fstp   DWORD PTR [ecx]
fld    DWORD PTR [edi+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [edi+0x8]
fsub   st(1),st
fxch   st(1)
fmulp  st(2),st
faddp  st(1),st
fstp   DWORD PTR [ecx+0x8]
jmp    10446 <_Z16Spline_NormalizeRK6VectorS1_S1_S1_RS_S2_@@Base+0x66>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x4c
mov    edx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x18]
mov    esi,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x156a8
mov    DWORD PTR [edx],eax
fld    st(1)
mov    DWORD PTR [edx+0x4],eax
fmul   st,st(2)
mov    DWORD PTR [edx+0x8],eax
mov    ebx,DWORD PTR [ebp+0x10]
fld    st(2)
fld    DWORD PTR [esi]
fxch   st(2)
mov    edi,DWORD PTR [ebp+0x14]
fmul   st,st(3)
fld    DWORD PTR [ecx]
fxch   st(4)
fmulp  st(5),st
fmul   st(1),st
fld    DWORD PTR [ecx+0x4]
fld    st(2)
fld    st(3)
fxch   st(1)
fmul   DWORD PTR ds:0x15888
fxch   st(1)
fchs   
fmul   st(6),st
fxch   st(5)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ecx+0x8]
fxch   st(2)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    st(3)
fmul   DWORD PTR ds:0x158b4
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x44]
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(3)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(5)
fadd   DWORD PTR [edx]
fxch   st(5)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [edi+0x8]
fxch   st(5)
fst    DWORD PTR [edx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x54]
fxch   st(3)
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(5)
fstp   DWORD PTR [ebp-0x50]
fxch   st(3)
fadd   DWORD PTR [edx+0x8]
fxch   st(4)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(4)
fst    DWORD PTR [edx+0x8]
fxch   st(4)
faddp  st(1),st
fxch   st(3)
fadd   DWORD PTR [ebp-0x30]
fxch   st(1)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(3)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(3)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x58]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x54]
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x50]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    st(1)
fadd   st,st(2)
fxch   st(3)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(4)
fld    DWORD PTR [esi]
fxch   st(3)
fmulp  st(5),st
fld    st(3)
fmul   DWORD PTR ds:0x158b8
fmul   st(3),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [esi+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fld    st(3)
fmul   DWORD PTR ds:0x15868
fxch   st(4)
fchs   
fxch   st(3)
fmul   st,st(4)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x44]
fxch   st(3)
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(2)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [edi+0x8]
fxch   st(3)
fst    DWORD PTR [edx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x54]
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(3)
fstp   DWORD PTR [ebp-0x50]
fxch   st(3)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fxch   st(3)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(3)
faddp  st(2),st
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(1)
fadd   DWORD PTR [ebp-0x58]
fxch   st(2)
fadd   DWORD PTR [ebp-0x54]
fxch   st(1)
fadd   DWORD PTR [ebp-0x50]
fxch   st(2)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fld    st(2)
fxch   st(1)
fmul   st,st(3)
fxch   st(2)
fstp   DWORD PTR [edx+0x8]
fchs   
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fxch   st(3)
fstp   DWORD PTR [ebp-0x38]
fmul   st,st(1)
fxch   st(2)
fmul   st,st(1)
fld    DWORD PTR [ebx+0x4]
fxch   st(2)
fmul   DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(4)
fstp   DWORD PTR [ebp-0x34]
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebp-0x30]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fxch   st(2)
faddp  st(3),st
fld    DWORD PTR [ebp-0x34]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x30]
fxch   st(1)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [edx]
fadd   DWORD PTR [esi]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
fadd   DWORD PTR [esi+0x4]
fxch   st(2)
fadd   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x4c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x4c
mov    edx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x18]
mov    esi,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15888
mov    DWORD PTR [edx],eax
fld    st(1)
mov    DWORD PTR [edx+0x4],eax
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [edx+0x8],eax
fmul   st,st(1)
mov    edi,DWORD PTR [ebp+0x14]
fld    DWORD PTR ds:0x156a8
fld    DWORD PTR [esi]
fld    DWORD PTR [ecx]
fxch   st(3)
fmul   st,st(5)
fxch   st(5)
fadd   st,st(0)
fld    DWORD PTR [ecx+0x4]
fxch   st(6)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fxch   st(5)
fmul   st,st(1)
fld    st(1)
fchs   
fxch   st(3)
fmul   st,st(1)
fxch   st(5)
fmul   st,st(3)
fxch   st(7)
fmul   st,st(3)
fxch   st(5)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fxch   st(3)
fmul   DWORD PTR [ecx+0x8]
fxch   st(3)
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x34]
fld    st(1)
fmul   DWORD PTR ds:0x158b4
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebx]
fmul   st,st(1)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x44]
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(1)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(6)
fadd   DWORD PTR [edx]
fxch   st(6)
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [edi+0x8]
fxch   st(6)
fst    DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x54]
fxch   st(3)
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(6)
fstp   DWORD PTR [ebp-0x50]
fxch   st(1)
fadd   DWORD PTR [edx+0x8]
fxch   st(5)
faddp  st(3),st
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(5)
fst    DWORD PTR [edx+0x8]
fxch   st(5)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fxch   st(3)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(3)
faddp  st(5),st
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(4)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(4)
fst    DWORD PTR [edx+0x4]
fxch   st(4)
fadd   DWORD PTR [ebp-0x58]
fxch   st(4)
fadd   DWORD PTR [ebp-0x54]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x50]
fxch   st(4)
fstp   DWORD PTR [edx]
fld    st(2)
fadd   st,st(3)
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fxch   st(3)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fld    DWORD PTR [esi]
fxch   st(3)
fmulp  st(4),st
fld    st(4)
fmul   DWORD PTR ds:0x158b8
fmul   st(3),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [esi+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fld    st(4)
fmul   DWORD PTR ds:0x15868
fxch   st(5)
fchs   
fxch   st(3)
fmul   st,st(5)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ebx+0x8]
fxch   st(5)
fstp   DWORD PTR [ebp-0x44]
fxch   st(4)
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(2)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(4)
fadd   DWORD PTR [edx]
fxch   st(4)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [edi+0x8]
fxch   st(4)
fst    DWORD PTR [edx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x54]
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(4)
fstp   DWORD PTR [ebp-0x50]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(3)
faddp  st(1),st
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fxch   st(3)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fxch   st(2)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(2)
faddp  st(3),st
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
fadd   DWORD PTR [ebp-0x58]
fxch   st(1)
fadd   DWORD PTR [ebp-0x54]
fxch   st(2)
fadd   DWORD PTR [ebp-0x50]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebx]
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fld    st(2)
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fxch   st(3)
fchs   
fxch   st(2)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ecx+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x34]
fxch   st(2)
fstp   DWORD PTR [ebp-0x30]
fxch   st(1)
fadd   DWORD PTR [edx]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
fadd   DWORD PTR [ebp-0x38]
fxch   st(1)
fadd   DWORD PTR [ebp-0x34]
fxch   st(2)
fadd   DWORD PTR [ebp-0x30]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x4c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x6c
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
mov    edi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x3c],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x40],edi
fld    DWORD PTR [esi]
fld    DWORD PTR [esi+0x4]
fxch   st(1)
fsubr  DWORD PTR [ebx]
fxch   st(1)
fsubr  DWORD PTR [ebx+0x4]
fld    DWORD PTR [esi+0x8]
fsubr  DWORD PTR [ebx+0x8]
fxch   st(2)
fst    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(0)
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fmul   st,st(0)
fxch   st(1)
faddp  st(2),st
faddp  st(1),st
fstp   DWORD PTR [esp]
call   DWORD PTR ds:0x0
mov    ecx,DWORD PTR [ebp-0x3c]
lea    eax,[ebp-0x28]
mov    edx,DWORD PTR [ebp-0x40]
fstp   DWORD PTR [ebp-0x4c]
mov    edi,DWORD PTR [ebp-0x4c]
fld    DWORD PTR [esi]
fsubr  DWORD PTR [ecx]
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [esi+0x4]
fsubr  DWORD PTR [ecx+0x4]
fstp   DWORD PTR [ebp-0x24]
fld    DWORD PTR [esi+0x8]
fsubr  DWORD PTR [ecx+0x8]
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebx]
fsubr  DWORD PTR [edx]
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebx+0x4]
fsubr  DWORD PTR [edx+0x4]
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx+0x8]
fsubr  DWORD PTR [edx+0x8]
mov    DWORD PTR [esp],eax
fstp   DWORD PTR [ebp-0x30]
call   DWORD PTR ds:0x0
fstp   st(0)
lea    ecx,[ebp-0x38]
mov    DWORD PTR [esp],ecx
call   DWORD PTR ds:0x0
fstp   st(0)
mov    DWORD PTR [esp+0x4],edi
lea    edx,[ebp-0x28]
mov    DWORD PTR [esp+0xc],edx
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],esi
call   10b00 <_Z28Catmull_Rom_Spline_NormalizeRK6VectorS1_S1_S1_fRS_@@Base+0xc0>
mov    DWORD PTR [esp+0x4],edi
lea    eax,[ebp-0x38]
mov    DWORD PTR [esp+0xc],eax
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],ebx
call   10b17 <_Z28Catmull_Rom_Spline_NormalizeRK6VectorS1_S1_S1_fRS_@@Base+0xd7>
mov    DWORD PTR [esp+0x8],ebx
mov    edi,DWORD PTR [ebp+0x1c]
lea    edx,[ebp-0x38]
mov    DWORD PTR [esp+0x4],esi
mov    ecx,DWORD PTR [ebp+0x18]
lea    eax,[ebp-0x28]
mov    DWORD PTR [esp+0xc],edx
mov    DWORD PTR [esp+0x14],edi
mov    DWORD PTR [esp+0x10],ecx
mov    DWORD PTR [esp],eax
call   10b3f <_Z28Catmull_Rom_Spline_NormalizeRK6VectorS1_S1_S1_fRS_@@Base+0xff>
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
lea    esi,[ebp-0x28]
push   ebx
sub    esp,0x58
mov    ecx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    st(2)
fsub   st,st(2)
fld    DWORD PTR [edx+0x4]
movss  xmm0,DWORD PTR [edx+0x8]
fld    DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
movss  xmm1,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(4)
ucomiss xmm1,DWORD PTR ds:0x158bc
fst    DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
movss  DWORD PTR [ebp-0x20],xmm0
jp     10ba5 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x55>
je     10c06 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xb6>
fxch   st(3)
fucomi st,st(5)
jp     10c60 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
jne    10c60 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
fstp   st(5)
fxch   st(3)
fstp   DWORD PTR [ebp-0x10]
fxch   st(2)
fstp   DWORD PTR [ebp-0x14]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fucomi st,st(2)
jp     10bcc <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x7c>
je     10c20 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xd0>
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fsub   st,st(3)
fdiv   st(1),st
fmul   st,st(1)
faddp  st(3),st
fld    DWORD PTR [ecx+0x4]
fsub   st(2),st
fxch   st(3)
fstp   DWORD PTR [esi]
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ecx+0x8]
movss  DWORD PTR [ebp-0x3c],xmm0
fld    DWORD PTR [ebp-0x3c]
fsub   st,st(1)
fmulp  st(2),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fstp   DWORD PTR [esi+0x8]
jmp    10c30 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
fstp   st(0)
fstp   st(1)
fstp   st(3)
fstp   st(3)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x18]
jmp    10c30 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp+0x8],ecx
mov    eax,DWORD PTR [ebp+0x1c]
lea    ecx,[ebp-0x18]
mov    DWORD PTR [esp+0xc],esi
mov    edx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x14],eax
mov    DWORD PTR [esp+0x10],edx
mov    DWORD PTR [esp],ecx
call   10c51 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x101>
add    esp,0x58
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fld    st(5)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(6)
fxch   st(1)
fdivr  DWORD PTR [ebp-0x2c]
fmul   st(1),st
fxch   st(6)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x8]
fsub   st(3),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
faddp  st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x10]
jmp    10bc6 <_Z29Catmull_Rom_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x76>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fld1   
mov    ebp,esp
sub    esp,0x38
mov    edx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x18]
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR [ebp+0x1c]
fld    st(0)
mov    DWORD PTR [ebp-0x8],esi
fmul   st,st(1)
mov    esi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x4],edi
fld    st(1)
mov    edi,DWORD PTR [ebp+0x14]
fmul   st,st(1)
fld    st(1)
fld    st(2)
fxch   st(1)
fmul   DWORD PTR ds:0x15888
fld    st(2)
fadd   st,st(3)
fxch   st(2)
fadd   st,st(4)
fxch   st(2)
fsubrp st(1),st
fxch   st(1)
fsubr  st,st(2)
fld    DWORD PTR [edx]
fxch   st(2)
fadd   st,st(6)
fxch   st(3)
fsubrp st(4),st
faddp  st(4),st
fmul   st,st(1)
fxch   st(4)
fsub   st,st(1)
fxch   st(2)
fstp   DWORD PTR [ebp-0x1c]
fxch   st(3)
fstp   DWORD PTR [ebx]
fld    DWORD PTR [edx+0x4]
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [edx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebx+0x8]
fxch   st(1)
mov    DWORD PTR [esp+0xc],ebx
mov    eax,DWORD PTR [ebp+0xc]
fstp   DWORD PTR [esp+0x4]
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [esp+0x8],eax
fstp   DWORD PTR [ebp-0x28]
call   10d2b <_Z14Hermite_SplineRK6VectorS1_S1_S1_fRS_@@Base+0x8b>
mov    DWORD PTR [esp+0xc],ebx
mov    DWORD PTR [esp+0x8],esi
fld    DWORD PTR [ebp-0x28]
mov    DWORD PTR [esp],ebx
fstp   DWORD PTR [esp+0x4]
call   10d42 <_Z14Hermite_SplineRK6VectorS1_S1_S1_fRS_@@Base+0xa2>
fld    DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp+0x14],ebx
mov    esi,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp+0x10],edi
mov    edi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [ebp+0x8],ebx
mov    ebx,DWORD PTR [ebp-0xc]
fstp   DWORD PTR [ebp+0xc]
mov    esp,ebp
pop    ebp
jmp    10d62 <_Z14Hermite_SplineRK6VectorS1_S1_S1_fRS_@@Base+0xc2>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fld1   
mov    ebp,esp
fld    DWORD PTR [ebp+0x18]
fld    st(0)
fmul   st,st(1)
fld    st(1)
fmul   st,st(1)
fld    st(1)
fmul   DWORD PTR ds:0x15888
fld    st(1)
fadd   st,st(2)
fsubrp st(1),st
fld    st(2)
fadd   st,st(3)
fxch   st(1)
fadd   st,st(5)
fxch   st(1)
fsubr  st,st(2)
fxch   st(5)
fsub   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebp+0x8]
fxch   st(5)
faddp  st(4),st
fxch   st(1)
fsubrp st(2),st
fmul   DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   DWORD PTR [ebp+0x10]
fxch   st(1)
fmul   DWORD PTR [ebp+0x14]
fxch   st(3)
pop    ebp
faddp  st(2),st
faddp  st(1),st
faddp  st(1),st
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x8]
fld    st(0)
fmul   st,st(1)
fld    st(1)
fmul   st,st(1)
fld    st(1)
fmul   DWORD PTR ds:0x15888
fld    st(1)
fadd   st,st(2)
fsubrp st(1),st
fld1   
fadd   st(1),st
fsub   st,st(1)
fxch   st(1)
fstp   DWORD PTR [eax]
fstp   DWORD PTR [eax+0x4]
fld    st(1)
fadd   st,st(2)
fsubr  st,st(1)
fxch   st(1)
fsubrp st(2),st
faddp  st(2),st
fstp   DWORD PTR [eax+0xc]
fstp   DWORD PTR [eax+0x8]
pop    ebp
ret    
push   ebp
fld1   
mov    ebp,esp
push   edi
lea    edi,[ebp-0x28]
push   esi
lea    esi,[ebp-0x38]
push   ebx
sub    esp,0x5c
mov    edx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x10]
fld    DWORD PTR [edx]
fld    st(1)
fxch   st(1)
mov    ebx,DWORD PTR [ebp+0x18]
fsubr  DWORD PTR [eax]
fxch   st(1)
fmul   st,st(2)
fld    st(2)
fxch   st(2)
fstp   DWORD PTR [ebp-0x28]
fmul   st(1),st
fld    st(0)
fld    DWORD PTR [edx+0x4]
fld    st(2)
fadd   st,st(3)
fxch   st(1)
fsubr  DWORD PTR [eax+0x4]
fxch   st(2)
fmul   DWORD PTR ds:0x15888
fxch   st(1)
fsubr  st,st(4)
fxch   st(2)
fstp   DWORD PTR [ebp-0x24]
fxch   st(1)
faddp  st(4),st
fld    DWORD PTR [edx+0x8]
fsubr  DWORD PTR [eax+0x8]
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [eax]
fsubr  DWORD PTR [ecx]
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [eax+0x4]
fsubr  DWORD PTR [ecx+0x4]
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [eax+0x8]
fsubr  DWORD PTR [ecx+0x8]
fstp   DWORD PTR [ebp-0x30]
fld    st(2)
fadd   st,st(3)
fxch   st(3)
fsubrp st(2),st
fsubp  st(2),st
fld    DWORD PTR [eax]
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fxch   st(1)
fadd   st,st(3)
fmul   st(1),st
fsub   st(3),st
fxch   st(1)
fstp   DWORD PTR [ebx]
fld    DWORD PTR [eax+0x4]
fmul   st,st(1)
fstp   DWORD PTR [ebx+0x4]
fmul   DWORD PTR [eax+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x58]
fstp   DWORD PTR [ebx+0x8]
mov    DWORD PTR [esp+0x8],ecx
fstp   DWORD PTR [esp+0x4]
mov    DWORD PTR [esp+0xc],ebx
mov    DWORD PTR [esp],ebx
call   10eca <_Z14Hermite_SplineRK6VectorS1_S1_fRS_@@Base+0xba>
fld    DWORD PTR [ebp-0x58]
mov    DWORD PTR [esp+0xc],ebx
mov    DWORD PTR [esp+0x8],edi
mov    DWORD PTR [esp],ebx
fstp   DWORD PTR [esp+0x4]
call   10ee1 <_Z14Hermite_SplineRK6VectorS1_S1_fRS_@@Base+0xd1>
fld    DWORD PTR [ebp-0x3c]
mov    DWORD PTR [esp+0xc],ebx
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp],ebx
fstp   DWORD PTR [esp+0x4]
call   10ef8 <_Z14Hermite_SplineRK6VectorS1_S1_fRS_@@Base+0xe8>
add    esp,0x5c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fld1   
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0xc]
fxch   st(2)
fmul   st,st(0)
fld    st(1)
fld    DWORD PTR [ebp+0x14]
fxch   st(1)
fsub   st,st(4)
fld    st(4)
fsub   DWORD PTR [ebp+0x8]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    st(2)
fmul   DWORD PTR ds:0x15888
fld    st(1)
fadd   st,st(2)
fsubrp st(1),st
fld    st(3)
fadd   st,st(4)
fxch   st(1)
fadd   st,st(7)
fxch   st(1)
fsubr  st,st(2)
fxch   st(7)
fsub   st,st(1)
fxch   st(7)
fadd   DWORD PTR [ebp+0x14]
fxch   st(6)
fmulp  st(1),st
fxch   st(4)
fmulp  st(6),st
fsubrp st(2),st
fmulp  st(3),st
fxch   st(1)
faddp  st(3),st
fmul   DWORD PTR [ebp-0x4]
fxch   st(2)
faddp  st(1),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
lea    eax,[ebp-0x18]
push   esi
push   ebx
sub    esp,0x40
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0x8],eax
mov    ecx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [esp+0x4],ecx
call   10fa0 <_Z14Hermite_SplineRK10QuaternionS1_S1_fRS_@@Base+0x20>
mov    DWORD PTR [esp],ebx
mov    eax,DWORD PTR [ebp+0xc]
lea    edx,[ebp-0x28]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp+0x4],eax
call   10fb6 <_Z14Hermite_SplineRK10QuaternionS1_S1_fRS_@@Base+0x36>
fld    DWORD PTR [ebx]
fld1   
fld    DWORD PTR [ebp-0x28]
fld    st(2)
fld    DWORD PTR [ebp+0x14]
fxch   st(1)
fsub   st,st(2)
fld    st(2)
fsub   DWORD PTR [ebp-0x18]
fxch   st(2)
fmul   st,st(0)
fxch   st(1)
fstp   DWORD PTR [ebp-0x2c]
fld    DWORD PTR [ebp+0x14]
fld    st(1)
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fadd   st,st(2)
fld    st(1)
fadd   st,st(2)
fxch   st(2)
fstp   DWORD PTR [ebp-0x30]
fld    st(2)
fmul   DWORD PTR ds:0x15888
fxch   st(1)
fsubr  DWORD PTR [ebp-0x30]
fxch   st(3)
fsubr  DWORD PTR [ebp-0x30]
fxch   st(3)
fadd   DWORD PTR [ebp+0x14]
fxch   st(2)
fsubrp st(1),st
fld    DWORD PTR [ebp-0x2c]
fxch   st(3)
fst    DWORD PTR [ebp-0x34]
fxch   st(1)
fadd   st,st(6)
fxch   st(4)
fmul   st,st(2)
fxch   st(6)
fsub   st,st(4)
fxch   st(5)
fmul   st,st(4)
fxch   st(7)
fmul   st,st(5)
fxch   st(3)
fmulp  st(1),st
fxch   st(6)
faddp  st(2),st
fxch   st(1)
faddp  st(4),st
fxch   st(3)
faddp  st(4),st
fld    DWORD PTR [ebp-0x24]
fld    st(0)
fxch   st(5)
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebx+0x4]
fxch   st(5)
fsub   DWORD PTR [ebp-0x14]
fld    st(5)
fsub   st,st(2)
fxch   st(6)
fmul   st,st(4)
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(5)
fxch   st(6)
fmul   DWORD PTR [ebp-0x34]
fxch   st(1)
faddp  st(2),st
fld    DWORD PTR [ebx+0x8]
fxch   st(2)
faddp  st(6),st
faddp  st(5),st
fld    st(0)
fmul   st,st(3)
fxch   st(5)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x20]
fld    st(0)
fxch   st(2)
fsub   st,st(1)
fxch   st(2)
fsub   DWORD PTR [ebp-0x10]
fxch   st(1)
fmul   st,st(3)
fxch   st(2)
fmul   DWORD PTR [ebp-0x34]
fxch   st(1)
fmul   st,st(5)
fxch   st(2)
faddp  st(6),st
fld    DWORD PTR [ebx+0xc]
fxch   st(6)
faddp  st(2),st
faddp  st(1),st
fld    st(4)
fmulp  st(3),st
fstp   DWORD PTR [esi+0x8]
fld    DWORD PTR [ebp-0x1c]
fld    st(0)
fxch   st(5)
fsub   st,st(1)
fxch   st(5)
fsub   DWORD PTR [ebp-0xc]
fxch   st(1)
fmulp  st(2),st
fxch   st(4)
fmul   DWORD PTR [ebp-0x34]
fxch   st(4)
fmulp  st(3),st
faddp  st(1),st
faddp  st(1),st
faddp  st(1),st
fstp   DWORD PTR [esi+0xc]
mov    DWORD PTR [esp],esi
call   110c8 <_Z14Hermite_SplineRK10QuaternionS1_S1_fRS_@@Base+0x148>
fstp   st(0)
add    esp,0x40
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fld1   
mov    ebp,esp
push   edi
fld    st(0)
mov    eax,0x0
push   esi
push   ebx
sub    esp,0x7c
mov    edx,DWORD PTR [ebp+0x28]
fld    DWORD PTR [ebp+0x10]
fxch   st(1)
mov    DWORD PTR [ebp-0x88],0x3f000000
mov    ebx,DWORD PTR [ebp+0x14]
mov    ecx,DWORD PTR [ebp+0x18]
fsub   DWORD PTR [ebp+0x8]
fxch   st(1)
fadd   st,st(2)
mov    esi,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0xc]
fxch   st(1)
mov    edi,DWORD PTR [ebp+0x20]
fmul   st,st(2)
fld    DWORD PTR [ebp+0x24]
fxch   st(2)
fadd   st,st(4)
fst    DWORD PTR [ebp-0x68]
fmul   st,st(1)
fstp   DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp+0x10]
fsubr  st,st(4)
fxch   st(4)
fsub   DWORD PTR [ebp+0xc]
fxch   st(3)
mov    DWORD PTR [edx],eax
fmulp  st(4),st
mov    DWORD PTR [edx+0x4],eax
fld    st(1)
mov    DWORD PTR [edx+0x8],eax
fmul   st,st(2)
fxch   st(1)
fmul   st,st(3)
fxch   st(4)
fst    DWORD PTR [ebp-0x6c]
fmulp  st(3),st
fld    DWORD PTR ds:0x156a8
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fxch   st(2)
fmulp  st(3),st
fxch   st(4)
fstp   DWORD PTR [ebp-0x60]
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebp-0x68]
fxch   st(2)
fst    DWORD PTR [ebp-0x70]
fld    DWORD PTR [ebx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x64]
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebp-0x88]
fstp   DWORD PTR [ebp-0x88]
fld    DWORD PTR [ebp-0x5c]
fchs   
fld    st(0)
fmul   st,st(4)
fxch   st(1)
fstp   DWORD PTR [ebp-0x74]
fld    DWORD PTR [ecx]
fxch   st(5)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(1)
fxch   st(3)
fmulp  st(1),st
fld    DWORD PTR [ebp-0x5c]
fadd   DWORD PTR ds:0x15868
fsub   DWORD PTR [ebp-0x60]
fsub   DWORD PTR [ebp-0x64]
fmul   st,st(4)
fmul   st(5),st
fxch   st(5)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ecx+0x4]
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ecx+0x8]
fxch   st(5)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [esi]
fxch   st(5)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x60]
fadd   DWORD PTR ds:0x158c0
fadd   DWORD PTR [ebp-0x64]
fsub   st,st(6)
fmul   st,st(4)
fxch   st(4)
fmul   st,st(6)
fxch   st(5)
fmul   st,st(4)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [esi+0x4]
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [esi+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x44]
fxch   st(3)
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(4)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(1)
fadd   DWORD PTR [edx]
fxch   st(1)
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [edi+0x8]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(4)
fstp   DWORD PTR [ebp-0x54]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fstp   DWORD PTR [ebp-0x50]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(1)
faddp  st(3),st
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fxch   st(3)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(3)
faddp  st(2),st
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fadd   DWORD PTR [ebp-0x58]
fxch   st(2)
fadd   DWORD PTR [ebp-0x40]
fxch   st(1)
fadd   DWORD PTR [ebp-0x54]
fxch   st(2)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x70]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x50]
fxch   st(1)
fadd   st,st(0)
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebp-0x5c]
fxch   st(1)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x60]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fadd   st,st(0)
fxch   st(3)
fstp   DWORD PTR [ebp-0x78]
fld    DWORD PTR [ecx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x7c]
fld    DWORD PTR [ebp-0x5c]
fadd   st,st(0)
fsubr  DWORD PTR ds:0x158c4
fadd   st,st(3)
fxch   st(3)
fsubr  DWORD PTR ds:0x158c8
fxch   st(3)
fadd   DWORD PTR [ebp-0x64]
fxch   st(3)
fsub   DWORD PTR [ebp-0x64]
fxch   st(3)
fmul   DWORD PTR [ebp-0x70]
fxch   st(3)
fadd   st,st(4)
fxch   st(4)
fchs   
fxch   st(4)
fmul   DWORD PTR [ebp-0x70]
fxch   st(2)
fmul   st,st(3)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ecx+0x4]
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ecx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fxch   st(2)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [esi]
fmul   st,st(1)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [esi+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x44]
fstp   DWORD PTR [ebp-0x40]
fxch   st(1)
fmul   DWORD PTR [ebp-0x70]
fld    DWORD PTR [edi]
fld    DWORD PTR [ebp-0x7c]
fxch   st(1)
fmul   st,st(2)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [edi+0x8]
fxch   st(3)
fst    DWORD PTR [edx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x54]
fld    DWORD PTR [ebp-0x78]
fadd   DWORD PTR [edx+0x4]
fxch   st(3)
fstp   DWORD PTR [ebp-0x50]
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fstp   DWORD PTR [ebp-0x78]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x7c]
faddp  st(1),st
fld    DWORD PTR [ebp-0x78]
fadd   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebp-0x7c]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(2)
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
fadd   DWORD PTR [ebp-0x48]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(1)
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fadd   DWORD PTR [ebp-0x58]
fxch   st(1)
fadd   DWORD PTR [ebp-0x54]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x5c]
fxch   st(1)
fadd   DWORD PTR [ebp-0x50]
fxch   st(1)
fsub   DWORD PTR [ebp-0x60]
fld    DWORD PTR [ebp-0x74]
fmul   DWORD PTR [ebp-0x88]
fxch   st(1)
fmul   DWORD PTR [ebp-0x88]
fxch   st(2)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebx+0x8]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(3)
fxch   st(2)
fmulp  st(3),st
fld    st(3)
fmul   DWORD PTR [ecx]
fstp   DWORD PTR [ebp-0x38]
fld    st(3)
fmul   DWORD PTR [ecx+0x4]
fxch   st(4)
fmul   DWORD PTR [ecx+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebp-0x88]
fmul   DWORD PTR [ebp-0x60]
fxch   st(4)
fstp   DWORD PTR [ebp-0x30]
fxch   st(3)
fst    DWORD PTR [ebp-0x84]
fmul   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x84]
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebp-0x84]
fmul   DWORD PTR [esi+0x4]
fxch   st(4)
fadd   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x40]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x44]
fld    DWORD PTR [ebp-0x38]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(1)
faddp  st(3),st
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [edx]
fld    DWORD PTR [ebp-0x34]
fxch   st(1)
fadd   DWORD PTR [ebp-0x48]
fxch   st(1)
faddp  st(3),st
fld    DWORD PTR [ebp-0x30]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(1)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(2)
fadd   DWORD PTR [ecx]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ecx+0x4]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ecx+0x8]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x7c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
lea    esi,[ebp-0x28]
push   ebx
sub    esp,0x64
mov    ecx,DWORD PTR [ebp+0x1c]
mov    ebx,DWORD PTR [ebp+0x18]
mov    edx,DWORD PTR [ebp+0x20]
mov    eax,DWORD PTR [ebp+0x14]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    st(2)
fsub   st,st(2)
fld    DWORD PTR [edx+0x4]
movss  xmm0,DWORD PTR [edx+0x8]
fld    DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
movss  xmm1,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(4)
ucomiss xmm1,DWORD PTR ds:0x158bc
fst    DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
movss  DWORD PTR [ebp-0x20],xmm0
jp     11515 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x55>
je     11576 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0xb6>
fxch   st(3)
fucomi st,st(5)
jp     115e1 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x121>
jne    115e1 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x121>
fstp   st(5)
fxch   st(3)
fstp   DWORD PTR [ebp-0x10]
fxch   st(2)
fstp   DWORD PTR [ebp-0x14]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fucomi st,st(2)
jp     1153c <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x7c>
je     11590 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0xd0>
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fsub   st,st(3)
fdiv   st(1),st
fmul   st,st(1)
faddp  st(3),st
fld    DWORD PTR [ecx+0x4]
fsub   st(2),st
fxch   st(3)
fstp   DWORD PTR [esi]
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ecx+0x8]
movss  DWORD PTR [ebp-0x3c],xmm0
fld    DWORD PTR [ebp-0x3c]
fsub   st,st(1)
fmulp  st(2),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fstp   DWORD PTR [esi+0x8]
jmp    115a0 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
fstp   st(0)
fstp   st(1)
fstp   st(3)
fstp   st(3)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x18]
jmp    115a0 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp+0x18],esi
mov    edx,DWORD PTR [ebp+0x28]
mov    esi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0x14],ecx
mov    eax,DWORD PTR [ebp+0x24]
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0x10],ebx
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x20],edx
lea    edx,[ebp-0x18]
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x1c],eax
mov    DWORD PTR [esp+0xc],edx
mov    DWORD PTR [esp],ecx
call   115d6 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x116>
add    esp,0x64
pop    ebx
pop    esi
pop    ebp
ret    
fld    st(5)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(6)
fxch   st(1)
fdivr  DWORD PTR [ebp-0x2c]
fmul   st(1),st
fxch   st(6)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x8]
fsub   st(3),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
faddp  st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x10]
jmp    11536 <_Z34Kochanek_Bartels_Spline_NormalizeXfffRK6VectorS1_S1_S1_fRS_@@Base+0x76>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
push   ebx
sub    esp,0x44
mov    edx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x18]
mov    ecx,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [edx],eax
fld    st(0)
fmul   st,st(1)
mov    DWORD PTR [edx+0x4],eax
mov    DWORD PTR [edx+0x8],eax
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fxch   st(3)
fmul   st,st(2)
fld    DWORD PTR [ecx+0x8]
fld    st(1)
fadd   st,st(2)
fxch   st(2)
fmul   DWORD PTR ds:0x158cc
fxch   st(3)
fmul   st,st(2)
fxch   st(5)
fmul   st,st(2)
fxch   st(1)
fmulp  st(2),st
fld    DWORD PTR [ebx]
fmul   st,st(3)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebx+0x4]
fxch   st(5)
fadd   DWORD PTR [edx]
fxch   st(5)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebx+0x8]
fxch   st(5)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x38]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fld    st(3)
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(5)
fstp   DWORD PTR [ebp-0x30]
fxch   st(1)
fadd   DWORD PTR [edx+0x8]
fxch   st(1)
fmul   DWORD PTR ds:0x158b4
fxch   st(4)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x34]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
fstp   DWORD PTR [edx]
fxch   st(2)
fmul   DWORD PTR ds:0x15888
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmulp  st(4),st
fld    DWORD PTR [ebx]
fmul   st,st(3)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fadd   DWORD PTR [edx]
fxch   st(1)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebx+0x8]
fxch   st(1)
fst    DWORD PTR [edx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fstp   DWORD PTR [ebp-0x30]
fxch   st(3)
fadd   DWORD PTR [edx+0x8]
fxch   st(1)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fxch   st(3)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fxch   st(2)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ecx]
fxch   st(2)
faddp  st(3),st
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ecx+0x4]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ecx+0x8]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x44
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   esi
lea    esi,[ebp-0x28]
push   ebx
sub    esp,0x58
mov    ecx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    st(2)
fsub   st,st(2)
fld    DWORD PTR [edx+0x4]
movss  xmm0,DWORD PTR [edx+0x8]
fld    DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
movss  xmm1,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(4)
ucomiss xmm1,DWORD PTR ds:0x158bc
fst    DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
movss  DWORD PTR [ebp-0x20],xmm0
jp     117a5 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x55>
je     11806 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xb6>
fxch   st(3)
fucomi st,st(5)
jp     11860 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
jne    11860 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
fstp   st(5)
fxch   st(3)
fstp   DWORD PTR [ebp-0x10]
fxch   st(2)
fstp   DWORD PTR [ebp-0x14]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fucomi st,st(2)
jp     117cc <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x7c>
je     11820 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xd0>
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fsub   st,st(3)
fdiv   st(1),st
fmul   st,st(1)
faddp  st(3),st
fld    DWORD PTR [ecx+0x4]
fsub   st(2),st
fxch   st(3)
fstp   DWORD PTR [esi]
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ecx+0x8]
movss  DWORD PTR [ebp-0x3c],xmm0
fld    DWORD PTR [ebp-0x3c]
fsub   st,st(1)
fmulp  st(2),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fstp   DWORD PTR [esi+0x8]
jmp    11830 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
fstp   st(0)
fstp   st(1)
fstp   st(3)
fstp   st(3)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x18]
jmp    11830 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp+0x8],ecx
mov    eax,DWORD PTR [ebp+0x1c]
lea    ecx,[ebp-0x18]
mov    DWORD PTR [esp+0xc],esi
mov    edx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x14],eax
mov    DWORD PTR [esp+0x10],edx
mov    DWORD PTR [esp],ecx
call   11851 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x101>
add    esp,0x58
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fld    st(5)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(6)
fxch   st(1)
fdivr  DWORD PTR [ebp-0x2c]
fmul   st(1),st
fxch   st(6)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x8]
fsub   st(3),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
faddp  st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x10]
jmp    117c6 <_Z23Cubic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x76>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x6c
mov    edx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x18]
mov    ecx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx],eax
fld    st(0)
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [edx+0x4],eax
fmul   st,st(1)
mov    edi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [edx+0x8],eax
fld    st(1)
mov    eax,0x3e2aaaab
fmul   DWORD PTR ds:0x158d0
fxch   st(1)
fmul   DWORD PTR ds:0x158d0
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x60]
fxch   st(4)
fmul   st,st(2)
fld    DWORD PTR ds:0x15888
fld    DWORD PTR [esi]
fld    st(2)
fchs   
fmul   st(4),st
fmul   st(7),st
fmulp  st(6),st
fld    st(2)
fmul   st,st(2)
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    st(2)
fmul   DWORD PTR ds:0x158b4
fmul   st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x44]
fstp   DWORD PTR [ebp-0x40]
fld    DWORD PTR [edi]
fmul   st,st(2)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [edi+0x4]
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [edi+0x8]
fxch   st(3)
fst    DWORD PTR [edx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x54]
fxch   st(5)
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x38]
fxch   st(3)
fstp   DWORD PTR [ebp-0x50]
fxch   st(4)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
faddp  st(1),st
fxch   st(3)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(4)
fst    DWORD PTR [edx]
fxch   st(4)
faddp  st(1),st
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fxch   st(3)
fadd   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebp-0x30]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(2)
faddp  st(4),st
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x58]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x54]
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [esi]
fxch   st(3)
fstp   DWORD PTR [edx+0x4]
fld    st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR ds:0x158c4
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x50]
fld    DWORD PTR [ecx+0x4]
fxch   st(4)
fmul   st,st(2)
fxch   st(4)
fmul   st,st(3)
fxch   st(1)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx+0x8]
fld    DWORD PTR [ecx]
fxch   st(5)
fstp   DWORD PTR [ebp-0x38]
fmul   st,st(3)
fxch   st(4)
mov    DWORD PTR [ebp-0x5c],0xc0400000
fmul   st,st(3)
fld    DWORD PTR [esi+0x4]
fxch   st(6)
fmul   DWORD PTR [ebp-0x60]
fxch   st(6)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [esi+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fxch   st(2)
fmul   st,st(3)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fxch   st(2)
fadd   DWORD PTR [edx]
fxch   st(2)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(3)
fstp   DWORD PTR [ebp-0x44]
fld    DWORD PTR [ebp-0x38]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebp-0x40]
faddp  st(2),st
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fst    DWORD PTR [edx]
fld    DWORD PTR [ebp-0x34]
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fld    DWORD PTR [ebp-0x30]
fxch   st(4)
faddp  st(3),st
fxch   st(1)
fadd   DWORD PTR [ebp-0x48]
fxch   st(3)
faddp  st(1),st
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(2)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x60]
fmul   DWORD PTR [ebp-0x5c]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fld    st(0)
fld    st(1)
fxch   st(3)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebx]
fxch   st(3)
fmul   DWORD PTR [ecx]
fxch   st(3)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   DWORD PTR [ecx+0x8]
fxch   st(2)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(3)
fmul   st,st(4)
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fxch   st(3)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(4)
fstp   DWORD PTR [ebp-0x44]
fadd   DWORD PTR [edx+0x4]
fld    DWORD PTR ds:0x158d4
fxch   st(3)
fstp   DWORD PTR [ebp-0x40]
fxch   st(3)
fstp   DWORD PTR [edx]
fadd   DWORD PTR [edx+0x8]
fld    DWORD PTR [esi]
fxch   st(3)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(3)
fmul   st,st(2)
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(3)
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ecx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fxch   st(3)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx+0x8]
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [esi+0x8]
fld    DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   DWORD PTR ds:0x158d0
fxch   st(3)
fstp   DWORD PTR [ebp-0x34]
fxch   st(1)
fmul   DWORD PTR ds:0x158d0
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebx]
fmul   DWORD PTR ds:0x158d0
fxch   st(3)
fmul   DWORD PTR ds:0x158d0
fxch   st(3)
fstp   DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebx+0x4]
fmul   DWORD PTR ds:0x158d0
fstp   DWORD PTR [ebp-0x44]
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fadd   DWORD PTR [edx]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebp-0x40]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx]
fld    DWORD PTR [ebp-0x38]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x34]
fxch   st(3)
faddp  st(2),st
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fxch   st(2)
faddp  st(3),st
fld    DWORD PTR [ebp-0x30]
fxch   st(1)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x48]
fxch   st(1)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x40]
fxch   st(2)
fstp   DWORD PTR [edx]
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   esi
lea    esi,[ebp-0x28]
push   ebx
sub    esp,0x58
mov    ecx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    st(2)
fsub   st,st(2)
fld    DWORD PTR [edx+0x4]
movss  xmm0,DWORD PTR [edx+0x8]
fld    DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
movss  xmm1,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(4)
ucomiss xmm1,DWORD PTR ds:0x158bc
fst    DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
movss  DWORD PTR [ebp-0x20],xmm0
jp     11c15 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x55>
je     11c76 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xb6>
fxch   st(3)
fucomi st,st(5)
jp     11cd0 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
jne    11cd0 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
fstp   st(5)
fxch   st(3)
fstp   DWORD PTR [ebp-0x10]
fxch   st(2)
fstp   DWORD PTR [ebp-0x14]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fucomi st,st(2)
jp     11c3c <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x7c>
je     11c90 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xd0>
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fsub   st,st(3)
fdiv   st(1),st
fmul   st,st(1)
faddp  st(3),st
fld    DWORD PTR [ecx+0x4]
fsub   st(2),st
fxch   st(3)
fstp   DWORD PTR [esi]
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ecx+0x8]
movss  DWORD PTR [ebp-0x3c],xmm0
fld    DWORD PTR [ebp-0x3c]
fsub   st,st(1)
fmulp  st(2),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fstp   DWORD PTR [esi+0x8]
jmp    11ca0 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
fstp   st(0)
fstp   st(1)
fstp   st(3)
fstp   st(3)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x18]
jmp    11ca0 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp+0x8],ecx
mov    eax,DWORD PTR [ebp+0x1c]
lea    ecx,[ebp-0x18]
mov    DWORD PTR [esp+0xc],esi
mov    edx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x14],eax
mov    DWORD PTR [esp+0x10],edx
mov    DWORD PTR [esp],ecx
call   11cc1 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x101>
add    esp,0x58
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fld    st(5)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(6)
fxch   st(1)
fdivr  DWORD PTR [ebp-0x2c]
fmul   st(1),st
fxch   st(6)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x8]
fsub   st(3),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
faddp  st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x10]
jmp    11c36 <_Z18BSpline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x76>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x50
mov    edx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp+0x18]
mov    ebx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x158cc
mov    DWORD PTR [edx],eax
fld    st(1)
mov    DWORD PTR [edx+0x4],eax
fmul   st,st(2)
mov    DWORD PTR [edx+0x8],eax
mov    esi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebx]
fld    DWORD PTR [ecx]
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fld    DWORD PTR [ecx+0x8]
fld    DWORD PTR [ecx+0x4]
fxch   st(6)
fmul   DWORD PTR ds:0x156a8
fld    st(2)
fmul   st,st(6)
fxch   st(5)
fmul   st,st(3)
fxch   st(7)
fmul   st,st(3)
fxch   st(4)
fmul   st,st(5)
fxch   st(2)
fmul   st,st(3)
fxch   st(6)
fmul   st,st(1)
fxch   st(1)
fadd   st,st(0)
fxch   st(2)
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebx+0x4]
fmul   st,st(5)
fxch   st(5)
fmul   DWORD PTR [ebx+0x8]
fxch   st(5)
fstp   DWORD PTR [ebp-0x24]
fxch   st(4)
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [esi]
fmul   st,st(2)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [esi+0x4]
fxch   st(6)
fadd   DWORD PTR [edx]
fxch   st(6)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [esi+0x8]
fxch   st(6)
fst    DWORD PTR [edx]
fxch   st(2)
fstp   DWORD PTR [ebp-0x34]
fxch   st(2)
fadd   DWORD PTR [edx+0x4]
fxch   st(5)
fstp   DWORD PTR [ebp-0x30]
fxch   st(4)
fst    DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x28]
fxch   st(4)
fadd   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebp-0x24]
fxch   st(5)
faddp  st(6),st
fxch   st(4)
faddp  st(1),st
fxch   st(3)
fst    DWORD PTR [edx+0x8]
fxch   st(4)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebp-0x20]
fxch   st(4)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x34]
fxch   st(4)
faddp  st(5),st
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebx]
fxch   st(4)
fst    DWORD PTR [edx+0x8]
fxch   st(4)
fmul   st,st(1)
fxch   st(4)
fadd   DWORD PTR [ebp-0x30]
fxch   st(3)
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ecx]
fxch   st(4)
fstp   DWORD PTR [ebp-0x28]
fxch   st(3)
fmul   st,st(1)
fld    DWORD PTR [ebx+0x4]
fxch   st(3)
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ecx+0x4]
fxch   st(3)
fmul   st,st(4)
fxch   st(3)
fmul   st,st(2)
fxch   st(4)
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fmul   DWORD PTR [ecx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x24]
fadd   DWORD PTR [edx]
fxch   st(3)
fadd   DWORD PTR [edx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fxch   st(1)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [edx+0x4]
fxch   st(1)
fadd   DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(1)
fadd   DWORD PTR [ebp-0x24]
fxch   st(1)
fadd   DWORD PTR [ebp-0x20]
fxch   st(2)
fstp   DWORD PTR [edx]
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
fld    DWORD PTR [ebx]
fmul   DWORD PTR ds:0x156a8
mov    DWORD PTR [ebp-0x4c],0x3f000000
fld    DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x4]
fld    DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fxch   st(3)
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebx+0x4]
fmul   DWORD PTR ds:0x156a8
fxch   st(1)
fmul   DWORD PTR ds:0x156a8
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fxch   st(3)
fadd   DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x24]
fld    DWORD PTR [ebp-0x4c]
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
fadd   DWORD PTR [edx+0x4]
fxch   st(1)
fst    DWORD PTR [edx]
fadd   DWORD PTR [ebp-0x28]
fxch   st(2)
fstp   DWORD PTR [ebp-0x20]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [edx+0x4]
fadd   DWORD PTR [ebp-0x24]
fxch   st(1)
fstp   DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [edx+0x8]
fadd   DWORD PTR [ebp-0x20]
fxch   st(1)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [edx+0x8]
add    esp,0x50
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
lea    esi,[ebp-0x28]
push   ebx
sub    esp,0x58
mov    ecx,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x14]
mov    eax,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    st(2)
fsub   st,st(2)
fld    DWORD PTR [edx+0x4]
movss  xmm0,DWORD PTR [edx+0x8]
fld    DWORD PTR [eax]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
movss  xmm1,DWORD PTR [ebp-0x2c]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(4)
ucomiss xmm1,DWORD PTR ds:0x158bc
fst    DWORD PTR [ebp-0x28]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
movss  DWORD PTR [ebp-0x20],xmm0
jp     11f45 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x55>
je     11fa6 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xb6>
fxch   st(3)
fucomi st,st(5)
jp     12000 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
jne    12000 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x110>
fstp   st(5)
fxch   st(3)
fstp   DWORD PTR [ebp-0x10]
fxch   st(2)
fstp   DWORD PTR [ebp-0x14]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fucomi st,st(2)
jp     11f6c <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x7c>
je     11fc0 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xd0>
fld    DWORD PTR [ebp-0x2c]
fxch   st(1)
fsub   st,st(3)
fdiv   st(1),st
fmul   st,st(1)
faddp  st(3),st
fld    DWORD PTR [ecx+0x4]
fsub   st(2),st
fxch   st(3)
fstp   DWORD PTR [esi]
fmul   st(1),st
fxch   st(2)
faddp  st(1),st
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ecx+0x8]
movss  DWORD PTR [ebp-0x3c],xmm0
fld    DWORD PTR [ebp-0x3c]
fsub   st,st(1)
fmulp  st(2),st
fadd   st,st(1)
fxch   st(1)
fstp   DWORD PTR [ebp-0x3c]
fstp   DWORD PTR [esi+0x8]
jmp    11fd0 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
fstp   st(0)
fstp   st(1)
fstp   st(3)
fstp   st(3)
fstp   DWORD PTR [ebp-0x10]
fstp   DWORD PTR [ebp-0x14]
fstp   DWORD PTR [ebp-0x18]
jmp    11fd0 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0xe0>
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp+0x8],ecx
mov    eax,DWORD PTR [ebp+0x1c]
lea    ecx,[ebp-0x18]
mov    DWORD PTR [esp+0xc],esi
mov    edx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x14],eax
mov    DWORD PTR [esp+0x10],edx
mov    DWORD PTR [esp],ecx
call   11ff1 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x101>
add    esp,0x58
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fld    st(5)
fsub   st,st(1)
fxch   st(1)
fsub   st,st(6)
fxch   st(1)
fdivr  DWORD PTR [ebp-0x2c]
fmul   st(1),st
fxch   st(6)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx+0x4]
fsub   st(1),st
fxch   st(1)
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x14]
fld    DWORD PTR [ebx+0x8]
fsub   st(3),st
fxch   st(3)
fmulp  st(4),st
fxch   st(2)
faddp  st(3),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x10]
jmp    11f66 <_Z27Parabolic_Spline_NormalizeXRK6VectorS1_S1_S1_fRS_@@Base+0x76>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fld1   
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x14]
fadd   DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x10]
fld    DWORD PTR [ebp+0xc]
fxch   st(2)
fsub   DWORD PTR [ebp+0xc]
fxch   st(2)
fsubr  st,st(1)
fdivp  st(2),st
fxch   st(1)
fadd   st,st(0)
fsub   st,st(2)
fld    st(0)
fabs   
fld    DWORD PTR ds:0x158d8
fxch   st(1)
fucomi st,st(1)
jbe    12108 <_Z15RangeCompressorffff@@Base+0xc8>
fsubrp st(1),st
fdiv   DWORD PTR ds:0x158dc
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fxch   st(3)
fucomi st,st(3)
jbe    12110 <_Z15RangeCompressorffff@@Base+0xd0>
fldz   
fxch   st(2)
fucomip st,st(2)
fstp   st(1)
jbe    12140 <_Z15RangeCompressorffff@@Base+0x100>
fld    st(2)
fmul   st,st(3)
fld    st(3)
fld    st(2)
fxch   st(1)
fmul   st,st(2)
fld    st(2)
fmul   DWORD PTR ds:0x15888
fld    st(1)
fadd   st,st(2)
fsubrp st(1),st
fld    st(3)
fadd   st,st(4)
fxch   st(1)
fadd   st,st(5)
fxch   st(1)
fsubr  st,st(2)
fxch   st(3)
fsub   st,st(1)
fxch   st(1)
fmul   DWORD PTR ds:0x158d8
fxch   st(3)
faddp  st(7),st
fxch   st(1)
fsubrp st(3),st
fxch   st(5)
fmul   DWORD PTR ds:0x158d8
fxch   st(1)
faddp  st(5),st
faddp  st(4),st
fldz   
fmulp  st(1),st
faddp  st(3),st
fxch   st(2)
nop
fadd   st,st(2)
fmul   DWORD PTR ds:0x156a8
fsub   st(2),st
fmulp  st(1),st
fxch   st(1)
fmul   DWORD PTR [ebp+0xc]
faddp  st(1),st
fsub   DWORD PTR [ebp+0x14]
leave  
ret    
fstp   st(0)
fstp   st(0)
jmp    120f0 <_Z15RangeCompressorffff@@Base+0xb0>
mov    esi,esi
fstp   st(3)
fldz   
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
fld    st(1)
fld    DWORD PTR ds:0x15880
fcmovnbe st,st(3)
faddp  st(3),st
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fsub   st(2),st
fmulp  st(1),st
fxch   st(1)
fmul   DWORD PTR [ebp+0xc]
faddp  st(1),st
fsub   DWORD PTR [ebp+0x14]
leave  
ret    
mov    esi,esi
fld    st(2)
fmul   st,st(3)
fld    st(3)
fld    st(2)
fxch   st(1)
fmul   st,st(2)
fld    st(2)
fmul   DWORD PTR ds:0x15888
fld    st(1)
fadd   st,st(2)
fsubrp st(1),st
fld    st(3)
fadd   st,st(4)
fxch   st(1)
fadd   st,st(5)
fxch   st(1)
fsubr  st,st(2)
fxch   st(3)
fsub   st,st(1)
fxch   st(1)
fmul   DWORD PTR ds:0x158d8
fxch   st(3)
faddp  st(7),st
fxch   st(1)
fsubrp st(3),st
fxch   st(5)
fmul   DWORD PTR ds:0x158d8
fxch   st(1)
faddp  st(5),st
faddp  st(4),st
fldz   
fmulp  st(1),st
fld    st(1)
fxch   st(4)
faddp  st(1),st
fchs   
faddp  st(1),st
fmul   DWORD PTR ds:0x156a8
fsub   st(2),st
fmulp  st(1),st
fxch   st(1)
fmul   DWORD PTR [ebp+0xc]
faddp  st(1),st
fsub   DWORD PTR [ebp+0x14]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    eax,[ebp-0x48]
push   edi
push   esi
push   ebx
sub    esp,0x78
mov    edi,DWORD PTR [ebp+0x10]
fld    DWORD PTR ds:0x156a8
mov    edx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edi]
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [edi+0x4]
fld    DWORD PTR [edi+0x8]
fxch   st(2)
fadd   DWORD PTR [edx]
fxch   st(1)
fadd   DWORD PTR [edx+0x4]
fxch   st(2)
fadd   DWORD PTR [edx+0x8]
fxch   st(1)
mov    DWORD PTR [ebp-0x5c],esi
fmul   st,st(3)
fxch   st(2)
mov    DWORD PTR [ebp-0x60],ecx
lea    esi,[ebp-0x28]
fmul   st,st(3)
fxch   st(1)
fmulp  st(3),st
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fsubr  DWORD PTR [edi]
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fsubr  DWORD PTR [edi+0x4]
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fsubr  DWORD PTR [edi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fxch   st(1)
mov    DWORD PTR [esp+0x8],eax
fstp   DWORD PTR [ebp-0x34]
mov    DWORD PTR [esp+0x4],ebx
fstp   DWORD PTR [ebp-0x30]
mov    DWORD PTR [esp],esi
call   1222c <_Z13TransformAABBRK11matrix3x4_tRK6VectorS4_RS2_S5_@@Base+0x7c>
mov    esi,DWORD PTR [ebp-0x38]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx]
fstp   DWORD PTR [ebp-0x6c]
mov    ecx,DWORD PTR [ebp-0x6c]
and    ecx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],ecx
mov    ecx,DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    edx,DWORD PTR [ebp-0x6c]
and    edx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edx
mov    edx,DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
faddp  st(1),st
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
and    edi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edi
lea    edi,[ebx+0x10]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x58]
fxch   st(1)
fmul   DWORD PTR [ebx+0x10]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edi+0x4]
fstp   DWORD PTR [ebp-0x6c]
fxch   st(1)
mov    eax,DWORD PTR [ebp-0x6c]
fsubr  DWORD PTR [ebp-0x48]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(3)
faddp  st(1),st
fxch   st(2)
fmul   DWORD PTR [edi+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
and    edi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edi
lea    edi,[ebx+0x20]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(3)
faddp  st(1),st
fst    DWORD PTR [ebp-0x54]
fxch   st(2)
fmul   DWORD PTR [ebx+0x20]
fstp   DWORD PTR [ebp-0x6c]
mov    ebx,DWORD PTR [ebp-0x6c]
mov    eax,ebx
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edi+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    ecx,DWORD PTR [ebp-0x6c]
mov    esi,ecx
and    esi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [edi+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    edx,DWORD PTR [ebp-0x6c]
mov    ebx,edx
and    ebx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],ebx
fld    DWORD PTR [ebp-0x6c]
faddp  st(1),st
fst    DWORD PTR [ebp-0x50]
fxch   st(1)
fstp   DWORD PTR [eax]
fxch   st(1)
mov    ecx,DWORD PTR [ebp-0x60]
fsubr  DWORD PTR [ebp-0x44]
fld    DWORD PTR [ebp-0x58]
fadd   DWORD PTR [ebp-0x48]
fxch   st(2)
fsubr  DWORD PTR [ebp-0x40]
fxch   st(1)
fstp   DWORD PTR [eax+0x4]
fxch   st(1)
fstp   DWORD PTR [ecx]
fld    DWORD PTR [ebp-0x54]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fstp   DWORD PTR [eax+0x8]
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [ebp-0x50]
fadd   DWORD PTR [ebp-0x40]
fstp   DWORD PTR [ecx+0x8]
add    esp,0x78
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ebp
mov    ebp,esp
lea    eax,[ebp-0x48]
push   edi
push   esi
push   ebx
sub    esp,0x78
mov    edx,DWORD PTR [ebp+0x10]
fld    DWORD PTR ds:0x156a8
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx]
mov    ecx,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [edx+0x8]
fxch   st(2)
fadd   DWORD PTR [edi]
fxch   st(1)
fadd   DWORD PTR [edi+0x4]
fxch   st(2)
fadd   DWORD PTR [edi+0x8]
fxch   st(1)
mov    DWORD PTR [ebp-0x5c],esi
fmul   st,st(3)
fxch   st(2)
mov    esi,DWORD PTR [ebp-0x5c]
mov    DWORD PTR [ebp-0x60],ecx
lea    ecx,[ebp-0x28]
fmul   st,st(3)
fxch   st(1)
mov    DWORD PTR [ebp-0x64],ebx
fmulp  st(3),st
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fsubr  DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fsubr  DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fsubr  DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fxch   st(1)
mov    DWORD PTR [esp+0x8],eax
fstp   DWORD PTR [ebp-0x34]
mov    DWORD PTR [esp+0x4],esi
fstp   DWORD PTR [ebp-0x30]
mov    DWORD PTR [esp],ecx
call   12422 <_Z14ITransformAABBRK11matrix3x4_tRK6VectorS4_RS2_S5_@@Base+0x82>
mov    esi,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x5c]
mov    ecx,DWORD PTR [ebp-0x34]
mov    DWORD PTR [ebp-0x6c],esi
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edx]
fstp   DWORD PTR [ebp-0x6c]
mov    ebx,DWORD PTR [ebp-0x6c]
and    ebx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],ebx
lea    ebx,[edx+0x10]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edx+0x10]
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
and    edi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edi
lea    edi,[edx+0x20]
mov    edx,DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
faddp  st(1),st
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [eax+0x20]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x58]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [edi+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x54]
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    esi,DWORD PTR [ebp-0x6c]
mov    eax,esi
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
mov    esi,eax
and    esi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [edi+0x8]
fstp   DWORD PTR [ebp-0x6c]
fxch   st(2)
mov    ebx,DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x60]
fsubr  DWORD PTR [ebp-0x48]
fxch   st(1)
mov    ecx,ebx
fsubr  DWORD PTR [ebp-0x44]
and    ecx,0x7fffffff
mov    edx,DWORD PTR [ebp-0x64]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
fstp   DWORD PTR [eax]
fld    DWORD PTR [ebp-0x58]
fxch   st(3)
faddp  st(2),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x48]
fxch   st(2)
fstp   DWORD PTR [eax+0x4]
fst    DWORD PTR [ebp-0x50]
fsubr  DWORD PTR [ebp-0x40]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x54]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fstp   DWORD PTR [eax+0x8]
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x50]
fadd   DWORD PTR [ebp-0x40]
fstp   DWORD PTR [edx+0x8]
add    esp,0x78
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x6c
mov    eax,DWORD PTR [ebp+0x10]
fld    DWORD PTR ds:0x156a8
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [eax]
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0x18]
fadd   DWORD PTR [edi]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(1)
fadd   DWORD PTR [edi+0x4]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
mov    DWORD PTR [ebp-0x60],esi
fadd   DWORD PTR [edi+0x8]
fxch   st(2)
fmul   st,st(3)
mov    DWORD PTR [ebp-0x5c],ebx
mov    edx,DWORD PTR [ebp-0x5c]
fld    st(1)
fxch   st(3)
mov    DWORD PTR [ebp-0x64],ecx
fmulp  st(4),st
fld    DWORD PTR [eax]
fsub   st,st(2)
fstp   DWORD PTR [ebp-0x6c]
mov    esi,DWORD PTR [ebp-0x6c]
fld    DWORD PTR [eax+0x4]
fsub   st,st(1)
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
fld    st(1)
fld    DWORD PTR [eax+0x8]
lea    eax,[edx+0x10]
fsub   st,st(5)
fstp   DWORD PTR [ebp-0x6c]
fld    st(1)
mov    ecx,DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edx+0x4]
fxch   st(4)
fmul   DWORD PTR [edx]
faddp  st(4),st
fld    st(4)
fmul   DWORD PTR [edx+0x8]
faddp  st(4),st
fxch   st(3)
fst    DWORD PTR [ebp-0x48]
fxch   st(3)
fmul   DWORD PTR [edx+0x10]
mov    edx,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x6c],edx
mov    ebx,DWORD PTR [eax+0x8]
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ebx
add    eax,0x20
fmul   st,st(2)
mov    DWORD PTR [ebp-0x70],eax
mov    eax,DWORD PTR [ebp-0x5c]
faddp  st(1),st
fld    DWORD PTR [ebp-0x6c]
fmul   st,st(5)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x44]
fxch   st(1)
fmul   DWORD PTR [eax+0x20]
mov    eax,DWORD PTR [ebp-0x70]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(3)
mov    eax,DWORD PTR [ebp-0x5c]
fmul   st,st(1)
fxch   st(5)
mov    DWORD PTR [ebp-0x6c],esi
fmul   st,st(3)
fld    DWORD PTR [ebp-0x6c]
fxch   st(3)
faddp  st(6),st
faddp  st(5),st
fxch   st(4)
fstp   DWORD PTR [ebp-0x40]
fmul   DWORD PTR [eax]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edi
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [eax+0x4]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fsub   st(3),st
fstp   DWORD PTR [ebp-0x58]
fmul   DWORD PTR [eax+0x10]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edi
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fmulp  st(1),st
fstp   DWORD PTR [ebp-0x6c]
mov    edx,DWORD PTR [ebp-0x6c]
mov    eax,edx
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
mov    DWORD PTR [ebp-0x6c],ebx
mov    ebx,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
fmulp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
mov    edx,eax
and    edx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x54]
fxch   st(1)
fmul   DWORD PTR [ebx+0x20]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
fsubr  DWORD PTR [ebp-0x44]
mov    edx,eax
and    edx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edx
mov    eax,DWORD PTR [ebp-0x60]
mov    edx,DWORD PTR [ebp-0x64]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edi
fld    DWORD PTR [ebp-0x6c]
fmulp  st(5),st
fxch   st(4)
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
mov    esi,edi
and    esi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fxch   st(5)
faddp  st(1),st
fxch   st(4)
fmulp  st(2),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
mov    ecx,DWORD PTR [ebp-0x6c]
mov    ebx,ecx
and    ebx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],ebx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
fstp   DWORD PTR [eax]
fld    DWORD PTR [ebp-0x58]
fxch   st(3)
faddp  st(2),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x48]
fxch   st(2)
fstp   DWORD PTR [eax+0x4]
fst    DWORD PTR [ebp-0x50]
fsubr  DWORD PTR [ebp-0x40]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x54]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fstp   DWORD PTR [eax+0x8]
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x50]
fadd   DWORD PTR [ebp-0x40]
fstp   DWORD PTR [edx+0x8]
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
lea    eax,[ebp-0x48]
push   edi
push   esi
push   ebx
sub    esp,0x78
mov    edx,DWORD PTR [ebp+0x10]
fld    DWORD PTR ds:0x156a8
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx]
mov    ecx,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [edx+0x8]
fxch   st(2)
fadd   DWORD PTR [edi]
fxch   st(1)
fadd   DWORD PTR [edi+0x4]
fxch   st(2)
fadd   DWORD PTR [edi+0x8]
fxch   st(1)
mov    DWORD PTR [ebp-0x5c],esi
fmul   st,st(3)
fxch   st(2)
mov    esi,DWORD PTR [ebp-0x5c]
mov    DWORD PTR [ebp-0x60],ecx
lea    ecx,[ebp-0x28]
fmul   st,st(3)
fxch   st(1)
mov    DWORD PTR [ebp-0x64],ebx
fmulp  st(3),st
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fsubr  DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fsubr  DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fsubr  DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x38]
fxch   st(1)
mov    DWORD PTR [esp+0x8],eax
fstp   DWORD PTR [ebp-0x34]
mov    DWORD PTR [esp+0x4],esi
fstp   DWORD PTR [ebp-0x30]
mov    DWORD PTR [esp],ecx
call   12892 <_Z11IRotateAABBRK11matrix3x4_tRK6VectorS4_RS2_S5_@@Base+0x82>
mov    esi,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x5c]
mov    ecx,DWORD PTR [ebp-0x34]
mov    DWORD PTR [ebp-0x6c],esi
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edx]
fstp   DWORD PTR [ebp-0x6c]
mov    ebx,DWORD PTR [ebp-0x6c]
and    ebx,0x7fffffff
mov    DWORD PTR [ebp-0x6c],ebx
lea    ebx,[edx+0x10]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [edx+0x10]
fstp   DWORD PTR [ebp-0x6c]
mov    edi,DWORD PTR [ebp-0x6c]
and    edi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],edi
lea    edi,[edx+0x20]
mov    edx,DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
faddp  st(1),st
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [eax+0x20]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x58]
fxch   st(1)
fmul   DWORD PTR [eax+0x4]
fstp   DWORD PTR [ebp-0x70]
mov    eax,DWORD PTR [ebp-0x70]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [edi+0x4]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
mov    eax,DWORD PTR [ebp-0x5c]
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fst    DWORD PTR [ebp-0x54]
fxch   st(1)
fmul   DWORD PTR [eax+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    esi,DWORD PTR [ebp-0x6c]
mov    eax,esi
and    eax,0x7fffffff
mov    DWORD PTR [ebp-0x6c],eax
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x6c]
mov    esi,eax
and    esi,0x7fffffff
mov    DWORD PTR [ebp-0x6c],esi
fld    DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x6c],edx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fmul   DWORD PTR [edi+0x8]
fstp   DWORD PTR [ebp-0x6c]
fxch   st(2)
mov    ebx,DWORD PTR [ebp-0x6c]
mov    eax,DWORD PTR [ebp-0x60]
fsubr  DWORD PTR [ebp-0x48]
fxch   st(1)
mov    ecx,ebx
fsubr  DWORD PTR [ebp-0x44]
and    ecx,0x7fffffff
mov    edx,DWORD PTR [ebp-0x64]
mov    DWORD PTR [ebp-0x6c],ecx
fld    DWORD PTR [ebp-0x6c]
fxch   st(2)
fstp   DWORD PTR [eax]
fld    DWORD PTR [ebp-0x58]
fxch   st(3)
faddp  st(2),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x48]
fxch   st(2)
fstp   DWORD PTR [eax+0x4]
fst    DWORD PTR [ebp-0x50]
fsubr  DWORD PTR [ebp-0x40]
fxch   st(1)
fstp   DWORD PTR [edx]
fld    DWORD PTR [ebp-0x54]
fadd   DWORD PTR [ebp-0x44]
fxch   st(1)
fstp   DWORD PTR [eax+0x8]
fstp   DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x50]
fadd   DWORD PTR [ebp-0x40]
fstp   DWORD PTR [edx+0x8]
add    esp,0x78
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
xor    eax,eax
mov    ebp,esp
push   esi
mov    ecx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0xc]
push   ebx
mov    edx,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x8]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
fld    DWORD PTR [ecx+eax*4]
fld    DWORD PTR [ebx+eax*4]
fucomi st,st(1)
ja     12a55 <_Z22CalcClosestPointOnAABBRK6VectorS1_S1_RS_@@Base+0x35>
fstp   st(0)
fld    DWORD PTR [esi+eax*4]
fxch   st(1)
fucomi st,st(1)
fcmovnbe st,st(1)
fstp   st(1)
fstp   DWORD PTR [edx]
inc    eax
add    edx,0x4
cmp    eax,0x2
jle    12a40 <_Z22CalcClosestPointOnAABBRK6VectorS1_S1_RS_@@Base+0x20>
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fld    DWORD PTR [eax+0x8]
fxch   st(2)
fsubrp st(3),st
fld    DWORD PTR [ecx+0x4]
fld    st(3)
fxch   st(2)
fsubrp st(1),st
fld    DWORD PTR [ecx+0x8]
fxch   st(2)
fmul   st,st(4)
fxch   st(3)
fsubrp st(2),st
fxch   st(3)
fst    DWORD PTR [edx]
fld    st(3)
fmul   st,st(4)
fxch   st(4)
fst    DWORD PTR [edx+0x4]
fxch   st(2)
fst    DWORD PTR [edx+0x8]
fxch   st(3)
faddp  st(4),st
fld    st(2)
fmul   st,st(3)
faddp  st(4),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(4)
ja     12b00 <_Z23CalcClosestPointToLineTRK6VectorS1_S1_RS_@@Base+0x90>
fstp   st(4)
fld    st(3)
fld    st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(5)
fmul   DWORD PTR [ecx]
fxch   st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(5)
faddp  st(1),st
fld    st(2)
fmul   DWORD PTR [ebx+0x8]
fxch   st(2)
faddp  st(5),st
fxch   st(2)
fmul   DWORD PTR [ecx+0x8]
fxch   st(2)
faddp  st(1),st
fxch   st(3)
faddp  st(1),st
fsubp  st(2),st
fdivp  st(1),st
jmp    12b10 <_Z23CalcClosestPointToLineTRK6VectorS1_S1_RS_@@Base+0xa0>
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
nop
lea    esi,[esi+eiz*1+0x0]
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x20
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
mov    esi,DWORD PTR [ebp+0x18]
fld    DWORD PTR [edx+0x8]
fld    st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [edx+0x4]
fxch   st(2)
fsubr  DWORD PTR [eax]
fld    DWORD PTR [eax+0x8]
fld    st(3)
fsubr  DWORD PTR [eax+0x4]
fld    st(2)
fmul   st,st(3)
fxch   st(5)
fstp   DWORD PTR [ebp-0x20]
fld    st(0)
fmul   st,st(1)
fxch   st(3)
fst    DWORD PTR [ebp-0x18]
fxch   st(2)
fsub   st,st(4)
fxch   st(1)
fst    DWORD PTR [ebp-0x14]
fxch   st(5)
faddp  st(3),st
fld    st(0)
fst    DWORD PTR [ebp-0x10]
fmul   st(1),st
fxch   st(3)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     12bb6 <_Z22CalcClosestPointOnLineRK6VectorS1_S1_RS_Pf@@Base+0x96>
fstp   st(5)
fld    DWORD PTR [ebp-0x20]
fld    st(1)
fld    st(5)
fmul   DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   st,st(6)
fxch   st(1)
fmul   DWORD PTR [ecx]
faddp  st(2),st
fld    st(3)
fmul   DWORD PTR [ecx+0x8]
faddp  st(2),st
fld    DWORD PTR [ebp-0x1c]
fmul   st,st(3)
faddp  st(1),st
fld    st(3)
fmul   st,st(5)
faddp  st(1),st
fsubp  st(1),st
fdivrp st(5),st
jmp    12bb8 <_Z22CalcClosestPointOnLineRK6VectorS1_S1_RS_Pf@@Base+0x98>
fstp   st(0)
test   esi,esi
je     12bd4 <_Z22CalcClosestPointOnLineRK6VectorS1_S1_RS_Pf@@Base+0xb4>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [edx+0x4]
fstp   DWORD PTR [ebp-0x20]
jmp    12be0 <_Z22CalcClosestPointOnLineRK6VectorS1_S1_RS_Pf@@Base+0xc0>
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
lea    esi,[esi+eiz*1+0x0]
fxch   st(2)
fmul   st,st(1)
fxch   st(3)
fmul   st,st(1)
fxch   st(4)
fmulp  st(1),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x1c]
fxch   st(3)
fadd   DWORD PTR [ebp-0x20]
fxch   st(1)
faddp  st(2),st
fxch   st(2)
fst    DWORD PTR [ebx]
fxch   st(2)
fst    DWORD PTR [ebx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x1c]
fstp   DWORD PTR [ebp-0x20]
add    esp,0x20
pop    ebx
pop    esi
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x40
lea    ebx,[ebp-0x18]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx+0x4]
fld    st(1)
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fsubr  DWORD PTR [eax]
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fsub   st,st(1)
fld    DWORD PTR [edx+0x8]
fld    st(3)
fmul   st,st(4)
fxch   st(1)
fst    DWORD PTR [ebp-0x2c]
fld    st(2)
fxch   st(1)
fsubr  DWORD PTR [eax+0x8]
fxch   st(1)
fmul   st,st(3)
faddp  st(2),st
fld    st(0)
fmul   st,st(1)
faddp  st(2),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(2)
ja     12cb0 <_Z18CalcDistanceToLineRK6VectorS1_S1_Pf@@Base+0x90>
fstp   st(5)
fld    st(3)
fld    st(2)
fld    st(3)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(5)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(6)
fmul   DWORD PTR [ecx+0x8]
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fmul   st,st(6)
faddp  st(2),st
fld    DWORD PTR [ebp-0x2c]
fmul   st,st(7)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(1),st
fxch   st(4)
jmp    12cb2 <_Z18CalcDistanceToLineRK6VectorS1_S1_Pf@@Base+0x92>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(1)
test   esi,esi
je     12cd0 <_Z18CalcDistanceToLineRK6VectorS1_S1_Pf@@Base+0xb0>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x2c]
jmp    12ce0 <_Z18CalcDistanceToLineRK6VectorS1_S1_Pf@@Base+0xc0>
mov    esi,esi
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
nop
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fmul   st,st(1)
fxch   st(4)
fmul   st,st(1)
fxch   st(2)
fmulp  st(1),st
fxch   st(3)
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x2c]
fxch   st(1)
fst    DWORD PTR [ebx]
fxch   st(2)
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(2)
fst    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebp-0x10]
fsubr  DWORD PTR [ecx+0x8]
fxch   st(2)
fst    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(3)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(0)
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fmul   st,st(0)
fxch   st(3)
faddp  st(2),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
faddp  st(1),st
fstp   DWORD PTR [esp]
call   DWORD PTR ds:0x0
add    esp,0x40
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x30
lea    ebx,[ebp-0x18]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx+0x4]
fld    st(1)
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fsubr  DWORD PTR [eax]
fxch   st(3)
fstp   DWORD PTR [ebp-0x30]
fsub   st,st(1)
fld    DWORD PTR [edx+0x8]
fld    st(3)
fmul   st,st(4)
fxch   st(1)
fst    DWORD PTR [ebp-0x2c]
fld    st(2)
fxch   st(1)
fsubr  DWORD PTR [eax+0x8]
fxch   st(1)
fmul   st,st(3)
faddp  st(2),st
fld    st(0)
fmul   st,st(1)
faddp  st(2),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(2)
ja     12df0 <_Z21CalcDistanceSqrToLineRK6VectorS1_S1_Pf@@Base+0x90>
fstp   st(5)
fld    st(3)
fld    st(2)
fld    st(3)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(5)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(6)
fmul   DWORD PTR [ecx+0x8]
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fmul   st,st(6)
faddp  st(2),st
fld    DWORD PTR [ebp-0x2c]
fmul   st,st(7)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(1),st
fxch   st(4)
jmp    12df2 <_Z21CalcDistanceSqrToLineRK6VectorS1_S1_Pf@@Base+0x92>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(1)
test   esi,esi
je     12e10 <_Z21CalcDistanceSqrToLineRK6VectorS1_S1_Pf@@Base+0xb0>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fld    DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x2c]
jmp    12e20 <_Z21CalcDistanceSqrToLineRK6VectorS1_S1_Pf@@Base+0xc0>
mov    esi,esi
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
nop
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fmul   st,st(1)
fxch   st(4)
fmul   st,st(1)
fxch   st(2)
fmulp  st(1),st
fxch   st(3)
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x2c]
fxch   st(1)
fst    DWORD PTR [ebx]
fxch   st(2)
fstp   DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(2)
fst    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebp-0x10]
fxch   st(2)
fmul   st,st(0)
fxch   st(3)
fmul   st,st(0)
fxch   st(2)
fsubr  DWORD PTR [ecx+0x8]
fxch   st(4)
fstp   DWORD PTR [ebp-0x30]
fstp   DWORD PTR [ebp-0x2c]
add    esp,0x30
faddp  st(1),st
fxch   st(1)
pop    ebx
fmul   st,st(0)
pop    esi
faddp  st(1),st
pop    ebp
ret    
mov    esi,esi
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x20
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
mov    esi,DWORD PTR [ebp+0x18]
fld    DWORD PTR [edx+0x4]
fld    st(1)
fsubr  DWORD PTR [eax]
fld    st(1)
fsubr  DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x8]
fld    st(2)
fmul   st,st(3)
fld    DWORD PTR [eax+0x8]
fxch   st(6)
fstp   DWORD PTR [ebp-0x20]
fld    st(2)
fmul   st,st(3)
fxch   st(4)
fst    DWORD PTR [ebp-0x18]
fxch   st(6)
fsub   st,st(2)
fxch   st(5)
fstp   DWORD PTR [ebp-0x1c]
faddp  st(3),st
fld    st(3)
fxch   st(2)
fst    DWORD PTR [ebp-0x14]
fxch   st(2)
fmul   st,st(4)
fxch   st(4)
fst    DWORD PTR [ebp-0x10]
fxch   st(3)
faddp  st(4),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(4)
ja     12f20 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xa0>
fstp   st(5)
fld    DWORD PTR [ebp-0x1c]
fld    st(4)
fld    st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   DWORD PTR [ecx]
faddp  st(2),st
fld    st(3)
fmul   DWORD PTR [ecx+0x8]
faddp  st(2),st
fld    DWORD PTR [ebp-0x20]
fmul   st,st(6)
faddp  st(1),st
fld    st(3)
fmul   st,st(7)
faddp  st(1),st
fsubp  st(1),st
fdivrp st(3),st
fxch   st(2)
fxch   st(4)
fxch   st(2)
jmp    12f22 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xa2>
mov    esi,esi
fstp   st(3)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     12f36 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xb6>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    12f38 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xb8>
fstp   st(0)
test   esi,esi
je     12f54 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xd4>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fld    DWORD PTR [edx+0x4]
fstp   DWORD PTR [ebp-0x1c]
jmp    12f60 <_Z29CalcClosestPointOnLineSegmentRK6VectorS1_S1_RS_Pf@@Base+0xe0>
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(1)
fxch   st(4)
fmulp  st(1),st
fxch   st(1)
fadd   DWORD PTR [ebp-0x20]
fxch   st(3)
fadd   DWORD PTR [ebp-0x1c]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fst    DWORD PTR [ebx]
fxch   st(1)
fst    DWORD PTR [ebx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [ebp-0x20]
fstp   DWORD PTR [ebp-0x1c]
add    esp,0x20
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x40
lea    ebx,[ebp-0x18]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx+0x4]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    st(1)
fld    DWORD PTR [eax]
fxch   st(1)
fsubr  DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x8]
fxch   st(2)
fsub   st,st(3)
fxch   st(4)
fstp   DWORD PTR [ebp-0x2c]
fld    st(0)
fld    st(4)
fxch   st(3)
fst    DWORD PTR [ebp-0x30]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fsubr  DWORD PTR [eax+0x8]
fxch   st(3)
fmul   st,st(5)
faddp  st(1),st
fld    st(2)
fmul   st,st(3)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     13030 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0x90>
fstp   st(5)
fld    DWORD PTR [ebp-0x2c]
fld    st(4)
fld    st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   DWORD PTR [ecx]
faddp  st(2),st
fld    st(3)
fmul   DWORD PTR [ecx+0x8]
faddp  st(2),st
fld    st(5)
fmul   st,st(5)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fmul   st,st(4)
faddp  st(1),st
fsubp  st(1),st
fdivrp st(5),st
jmp    13032 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0x92>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     13046 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0xa6>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    13048 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0xa8>
fstp   st(0)
test   esi,esi
je     13064 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0xc4>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x2c]
fld    DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x30]
jmp    13070 <_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf@@Base+0xd0>
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(1)
fxch   st(4)
fmulp  st(1),st
fxch   st(3)
fadd   DWORD PTR [ebp-0x2c]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
fstp   DWORD PTR [ebx]
fst    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(3)
fst    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebp-0x10]
fsubr  DWORD PTR [ecx+0x8]
fxch   st(2)
fst    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(4)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(0)
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fmul   st,st(0)
fxch   st(4)
faddp  st(2),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x2c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
faddp  st(1),st
fstp   DWORD PTR [esp]
call   DWORD PTR ds:0x0
add    esp,0x40
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x30
lea    ebx,[ebp-0x18]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [edx+0x4]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    st(1)
fld    DWORD PTR [eax]
fxch   st(1)
fsubr  DWORD PTR [eax+0x4]
fld    DWORD PTR [edx+0x8]
fxch   st(2)
fsub   st,st(3)
fxch   st(4)
fstp   DWORD PTR [ebp-0x2c]
fld    st(0)
fld    st(4)
fxch   st(3)
fst    DWORD PTR [ebp-0x30]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fsubr  DWORD PTR [eax+0x8]
fxch   st(3)
fmul   st,st(5)
faddp  st(1),st
fld    st(2)
fmul   st,st(3)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     13170 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0x90>
fstp   st(5)
fld    DWORD PTR [ebp-0x2c]
fld    st(4)
fld    st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   DWORD PTR [ecx]
faddp  st(2),st
fld    st(3)
fmul   DWORD PTR [ecx+0x8]
faddp  st(2),st
fld    st(5)
fmul   st,st(5)
faddp  st(1),st
fld    DWORD PTR [ebp-0x30]
fmul   st,st(4)
faddp  st(1),st
fsubp  st(1),st
fdivrp st(5),st
jmp    13172 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0x92>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     13186 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0xa6>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    13188 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0xa8>
fstp   st(0)
test   esi,esi
je     131a4 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0xc4>
fstp   st(2)
fxch   st(3)
fst    DWORD PTR [esi]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [edx]
fxch   st(1)
fstp   DWORD PTR [ebp-0x2c]
fld    DWORD PTR [edx+0x8]
fstp   DWORD PTR [ebp-0x30]
jmp    131b0 <_Z28CalcDistanceSqrToLineSegmentRK6VectorS1_S1_Pf@@Base+0xd0>
fxch   st(2)
fxch   st(1)
fxch   st(4)
fxch   st(1)
lea    esi,[esi+eiz*1+0x0]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(1)
fxch   st(4)
fmulp  st(1),st
fxch   st(3)
fadd   DWORD PTR [ebp-0x2c]
fxch   st(2)
faddp  st(1),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x30]
fxch   st(2)
fstp   DWORD PTR [ebx]
fst    DWORD PTR [ebx+0x4]
fld    DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(3)
fst    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebp-0x10]
fxch   st(2)
fmul   st,st(0)
fxch   st(4)
fmul   st,st(0)
fxch   st(2)
fsubr  DWORD PTR [ecx+0x8]
fxch   st(3)
fstp   DWORD PTR [ebp-0x2c]
fstp   DWORD PTR [ebp-0x30]
add    esp,0x30
faddp  st(2),st
pop    ebx
fmul   st,st(0)
pop    esi
faddp  st(1),st
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x8]
fld    DWORD PTR [ecx]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fxch   st(1)
fsubrp st(2),st
fld    DWORD PTR [ecx+0x4]
fld    st(2)
fxch   st(2)
fsubrp st(1),st
fxch   st(2)
fst    DWORD PTR [edx]
fmul   st(1),st
fld    st(2)
fst    DWORD PTR [edx+0x4]
fmul   st(3),st
fxch   st(2)
faddp  st(3),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(3)
ja     13275 <_Z25CalcClosestPointToLineT2DRK8Vector2DS1_S1_RS_@@Base+0x65>
fstp   st(3)
fld    st(2)
fld    st(1)
fxch   st(1)
fmul   DWORD PTR [ebx]
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(4)
fmul   DWORD PTR [ecx]
fxch   st(2)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
faddp  st(4),st
faddp  st(1),st
fsubp  st(2),st
fdivp  st(1),st
jmp    13280 <_Z25CalcClosestPointToLineT2DRK8Vector2DS1_S1_RS_@@Base+0x70>
fstp   st(0)
fstp   st(0)
fstp   st(0)
nop
lea    esi,[esi+eiz*1+0x0]
pop    ebx
pop    ebp
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
mov    ecx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fxch   st(4)
fst    DWORD PTR [ebp-0x18]
fxch   st(4)
fmul   st,st(2)
fxch   st(2)
fst    DWORD PTR [ebp-0x14]
fxch   st(1)
faddp  st(2),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(2)
ja     13302 <_Z24CalcClosestPointOnLine2DRK8Vector2DS1_S1_RS_Pf@@Base+0x72>
fstp   st(5)
fld    st(2)
fld    st(5)
fld    st(6)
fxch   st(1)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ebx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(1),st
fxch   st(4)
jmp    13304 <_Z24CalcClosestPointOnLine2DRK8Vector2DS1_S1_RS_Pf@@Base+0x74>
fstp   st(1)
test   ecx,ecx
je     13317 <_Z24CalcClosestPointOnLine2DRK8Vector2DS1_S1_RS_Pf@@Base+0x87>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ecx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    13330 <_Z24CalcClosestPointOnLine2DRK8Vector2DS1_S1_RS_Pf@@Base+0xa0>
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
jmp    13330 <_Z24CalcClosestPointOnLine2DRK8Vector2DS1_S1_RS_Pf@@Base+0xa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fstp   DWORD PTR [esi+0x4]
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
lea    esi,[ebp-0x18]
push   ebx
sub    esp,0x30
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     133b2 <_Z20CalcDistanceToLine2DRK8Vector2DS1_S1_Pf@@Base+0x62>
fstp   st(5)
fld    st(2)
fld    st(1)
fld    st(2)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(5),st
jmp    133b4 <_Z20CalcDistanceToLine2DRK8Vector2DS1_S1_Pf@@Base+0x64>
fstp   st(0)
test   ebx,ebx
je     133c7 <_Z20CalcDistanceToLine2DRK8Vector2DS1_S1_Pf@@Base+0x77>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    133e0 <_Z20CalcDistanceToLine2DRK8Vector2DS1_S1_Pf@@Base+0x90>
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
jmp    133e0 <_Z20CalcDistanceToLine2DRK8Vector2DS1_S1_Pf@@Base+0x90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(0)
faddp  st(1),st
fstp   DWORD PTR [esp]
call   DWORD PTR ds:0x0
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
lea    esi,[ebp-0x18]
push   ebx
sub    esp,0x20
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     13492 <_Z23CalcDistanceSqrToLine2DRK8Vector2DS1_S1_Pf@@Base+0x62>
fstp   st(5)
fld    st(2)
fld    st(1)
fld    st(2)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(5),st
jmp    13494 <_Z23CalcDistanceSqrToLine2DRK8Vector2DS1_S1_Pf@@Base+0x64>
fstp   st(0)
test   ebx,ebx
je     134a7 <_Z23CalcDistanceSqrToLine2DRK8Vector2DS1_S1_Pf@@Base+0x77>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    134c0 <_Z23CalcDistanceSqrToLine2DRK8Vector2DS1_S1_Pf@@Base+0x90>
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
jmp    134c0 <_Z23CalcDistanceSqrToLine2DRK8Vector2DS1_S1_Pf@@Base+0x90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(1)
add    esp,0x20
pop    ebx
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
pop    esi
pop    ebp
faddp  st(1),st
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
mov    ebx,DWORD PTR [ebp+0x18]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fxch   st(4)
fst    DWORD PTR [ebp-0x18]
fxch   st(4)
fmul   st,st(2)
fxch   st(2)
fst    DWORD PTR [ebp-0x14]
fxch   st(1)
faddp  st(2),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(2)
ja     13572 <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0x72>
fstp   st(5)
fld    st(2)
fld    st(5)
fld    st(6)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(1),st
fxch   st(4)
jmp    13574 <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0x74>
fstp   st(1)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     13588 <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0x88>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    1358a <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0x8a>
fstp   st(0)
test   ebx,ebx
je     135a0 <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0xa0>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    135b0 <_Z31CalcClosestPointOnLineSegment2DRK8Vector2DS1_S1_RS_Pf@@Base+0xb0>
lea    esi,[esi+0x0]
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
lea    esi,[esi+0x0]
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fstp   DWORD PTR [esi+0x4]
add    esp,0x10
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
lea    esi,[ebp-0x18]
push   ebx
sub    esp,0x30
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     13632 <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x62>
fstp   st(5)
fld    st(2)
fld    st(1)
fld    st(2)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(5),st
jmp    13634 <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x64>
fstp   st(0)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     13648 <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x78>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    1364a <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x7a>
fstp   st(0)
test   ebx,ebx
je     13660 <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x90>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    13670 <_Z27CalcDistanceToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0xa0>
lea    esi,[esi+0x0]
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
lea    esi,[esi+0x0]
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x28]
fmul   st,st(0)
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(0)
faddp  st(1),st
fstp   DWORD PTR [esp]
call   DWORD PTR ds:0x0
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
fldz   
mov    ebp,esp
push   esi
lea    esi,[ebp-0x18]
push   ebx
sub    esp,0x20
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
fld    DWORD PTR [edx]
fld    DWORD PTR [eax]
fld    DWORD PTR [edx+0x4]
fld    DWORD PTR [eax+0x4]
fxch   st(2)
fsub   st,st(3)
fxch   st(2)
fsub   st,st(1)
fld    st(2)
fmul   st,st(3)
fld    st(1)
fmul   st,st(2)
faddp  st(1),st
fld    DWORD PTR ds:0x158e0
fucomip st,st(1)
ja     13722 <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x62>
fstp   st(5)
fld    st(2)
fld    st(1)
fld    st(2)
fxch   st(1)
fmul   DWORD PTR [ecx+0x4]
fxch   st(1)
fmul   st,st(4)
fxch   st(2)
fmul   DWORD PTR [ecx]
faddp  st(1),st
fld    st(4)
fmul   st,st(6)
faddp  st(2),st
fsubrp st(1),st
fdivrp st(5),st
jmp    13724 <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x64>
fstp   st(0)
fld1   
fxch   st(5)
fucomi st,st(5)
ja     13738 <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x78>
fstp   st(5)
fldz   
fucomi st,st(5)
fcmovbe st,st(5)
fstp   st(5)
jmp    1373a <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x7a>
fstp   st(0)
test   ebx,ebx
je     13750 <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0x90>
fstp   st(1)
fstp   st(2)
fxch   st(2)
fst    DWORD PTR [ebx]
fld    DWORD PTR [edx]
fld    DWORD PTR [edx+0x4]
jmp    13760 <_Z30CalcDistanceSqrToLineSegment2DRK8Vector2DS1_S1_Pf@@Base+0xa0>
lea    esi,[esi+0x0]
fxch   st(3)
fxch   st(1)
fxch   st(2)
fxch   st(4)
fxch   st(2)
lea    esi,[esi+0x0]
fxch   st(4)
fmul   st,st(2)
fxch   st(3)
fmulp  st(2),st
faddp  st(2),st
faddp  st(2),st
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x18]
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fld    DWORD PTR [ebp-0x14]
fxch   st(1)
fsubr  DWORD PTR [ecx]
fxch   st(1)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(1)
add    esp,0x20
pop    ebx
fmul   st,st(0)
fxch   st(1)
fmul   st,st(0)
pop    esi
pop    ebp
faddp  st(1),st
ret    
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x6c
mov    ebx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0x10]
mov    eax,DWORD PTR [ebp+0x14]
mov    ecx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebx]
mov    esi,DWORD PTR [ebp+0x20]
mov    edi,DWORD PTR [ebp+0x24]
fld    DWORD PTR [edx]
fld    st(1)
fld    DWORD PTR [ebx+0x4]
fxch   st(1)
fsub   st,st(2)
fld    DWORD PTR [ebx+0x8]
fld    st(2)
fsub   DWORD PTR [edx+0x4]
fld    st(1)
fxch   st(3)
fst    DWORD PTR [ebp-0x28]
fxch   st(5)
fsubr  DWORD PTR [eax]
fxch   st(3)
fsub   DWORD PTR [edx+0x8]
fxch   st(1)
fst    DWORD PTR [ebp-0x24]
fxch   st(3)
fst    DWORD PTR [ebp-0x50]
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [edx+0x4]
fsubr  DWORD PTR [eax+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x20]
fld    DWORD PTR [ebp-0x50]
fabs   
fxch   st(2)
fst    DWORD PTR [ebp-0x54]
fstp   DWORD PTR [ebp-0x34]
fld    DWORD PTR [edx+0x8]
fsubr  DWORD PTR [eax+0x8]
fst    DWORD PTR [ebp-0x58]
fstp   DWORD PTR [ebp-0x30]
fld    QWORD PTR ds:0x15930
fucomip st,st(2)
fstp   st(1)
jbe    13850 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0xb0>
fld    DWORD PTR [ebp-0x54]
fabs   
fld    QWORD PTR ds:0x15930
fucomip st,st(1)
fstp   st(0)
jbe    13850 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0xb0>
fld    DWORD PTR [ebp-0x58]
xor    eax,eax
fabs   
fld    QWORD PTR ds:0x15930
fucomip st,st(1)
fstp   st(0)
ja     139d0 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0x230>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
fxch   st(5)
fsubr  DWORD PTR [ecx]
fld    DWORD PTR [ecx+0x8]
fxch   st(4)
fsubr  DWORD PTR [ecx+0x4]
fxch   st(4)
fsubrp st(2),st
fld    st(0)
fst    DWORD PTR [ebp-0x48]
fxch   st(1)
fabs   
fxch   st(4)
fst    DWORD PTR [ebp-0x44]
fxch   st(2)
fst    DWORD PTR [ebp-0x40]
fld    QWORD PTR ds:0x15930
fucomip st,st(5)
fstp   st(4)
ja     139a0 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0x200>
fld    DWORD PTR [ebp-0x50]
xor    eax,eax
fld    DWORD PTR [ebp-0x50]
fxch   st(1)
fmul   st,st(6)
fxch   st(1)
fmul   st,st(2)
fxch   st(6)
fmul   st,st(2)
fxch   st(1)
fstp   DWORD PTR [ebp-0x4c]
fld    DWORD PTR [ebp-0x54]
fmul   st,st(4)
fxch   st(4)
fmul   st,st(3)
fxch   st(4)
fadd   DWORD PTR [ebp-0x4c]
fxch   st(4)
faddp  st(1),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x4c]
fld    DWORD PTR [ebp-0x58]
fmul   st,st(6)
fxch   st(6)
fmul   st,st(4)
fxch   st(6)
fadd   DWORD PTR [ebp-0x4c]
fxch   st(6)
faddp  st(3),st
fld    DWORD PTR [ebp-0x50]
fxch   st(6)
fstp   DWORD PTR [ebp-0x4c]
fld    DWORD PTR [ebp-0x54]
fxch   st(6)
fmul   st,st(0)
fxch   st(6)
fmul   st,st(2)
fxch   st(3)
fstp   DWORD PTR [ebp-0x6c]
fld    st(0)
fmul   st,st(1)
fxch   st(5)
faddp  st(3),st
fld    DWORD PTR [ebp-0x58]
fmul   st,st(4)
faddp  st(3),st
fld    DWORD PTR [ebp-0x54]
fmul   st,st(0)
faddp  st(6),st
fld    DWORD PTR [ebp-0x58]
fmul   st,st(0)
faddp  st(6),st
fld    st(1)
fmul   st,st(2)
faddp  st(5),st
fld    st(3)
fmul   st,st(4)
faddp  st(5),st
fld    st(2)
fmul   st,st(3)
fxch   st(5)
fmul   st,st(6)
fsubrp st(5),st
fld    QWORD PTR ds:0x15930
fld    st(5)
fabs   
fxch   st(1)
fucomip st,st(1)
fstp   st(0)
ja     139d0 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0x230>
fld    DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [ebp+0x18]
mov    ecx,DWORD PTR [ebp+0x1c]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fmul   st,st(4)
fxch   st(1)
fmul   st,st(7)
fsubp  st(1),st
fld    DWORD PTR [ebp-0x58]
fxch   st(1)
fdivrp st(6),st
fxch   st(5)
fst    DWORD PTR [esi]
fmulp  st(3),st
fxch   st(2)
fadd   DWORD PTR [ebp-0x4c]
fdivrp st(5),st
fxch   st(4)
fstp   DWORD PTR [edi]
fmul   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x50]
fxch   st(1)
fadd   DWORD PTR [ebx]
fstp   DWORD PTR [eax]
fxch   st(3)
fmul   DWORD PTR [esi]
fadd   DWORD PTR [ebx+0x4]
fstp   DWORD PTR [eax+0x4]
fmul   DWORD PTR [esi]
fadd   DWORD PTR [ebx+0x8]
fstp   DWORD PTR [eax+0x8]
fxch   st(1)
mov    eax,0x1
fmul   DWORD PTR [edi]
fadd   DWORD PTR [edx]
fstp   DWORD PTR [ecx]
fld    DWORD PTR [ebp-0x54]
fmul   DWORD PTR [edi]
fadd   DWORD PTR [edx+0x4]
fstp   DWORD PTR [ecx+0x4]
fmul   DWORD PTR [edi]
fadd   DWORD PTR [edx+0x8]
fstp   DWORD PTR [ecx+0x8]
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
fld    st(1)
fabs   
fld    QWORD PTR ds:0x15930
fucomip st,st(1)
fstp   st(0)
jbe    13883 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0xe3>
fld    st(3)
xor    eax,eax
fabs   
fld    QWORD PTR ds:0x15930
fucomip st,st(1)
fstp   st(0)
jbe    13883 <_Z33CalcLineToLineIntersectionSegmentRK6VectorS1_S1_S1_PS_S2_PfS3_@@Base+0xe3>
lea    esi,[esi+0x0]
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
fstp   st(0)
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x24
movzx  ebx,BYTE PTR [ebp+0x1c]
movzx  edx,BYTE PTR [ebp+0x18]
movzx  eax,BYTE PTR [ebp+0x20]
mov    BYTE PTR [ebp-0xa],bl
movzx  ebx,BYTE PTR [ebp+0x24]
mov    BYTE PTR [ebp-0x9],dl
mov    BYTE PTR [ebp-0xb],al
call   13a11 <_Z12MathLib_Initfffibbbb@@Base+0x21>
mov    ecx,0x0
mov    edx,0x0
test   bl,bl
mov    DWORD PTR ds:0x0,ecx
mov    ecx,0x0
mov    DWORD PTR ds:0x0,edx
mov    edx,0x0
mov    DWORD PTR ds:0x0,ecx
mov    ecx,0x0
mov    DWORD PTR ds:0x0,edx
mov    edx,0x0
mov    DWORD PTR ds:0x0,ecx
mov    ecx,0x0
mov    DWORD PTR ds:0x0,edx
mov    edx,0x0
mov    DWORD PTR ds:0x0,ecx
mov    DWORD PTR ds:0x0,edx
je     13a7b <_Z12MathLib_Initfffibbbb@@Base+0x8b>
test   BYTE PTR [eax+0x4],0x40
jne    13bc8 <_Z12MathLib_Initfffibbbb@@Base+0x1d8>
mov    BYTE PTR ds:0x1cdd6,0x0
cmp    BYTE PTR [ebp-0x9],0x0
je     13a92 <_Z12MathLib_Initfffibbbb@@Base+0xa2>
test   BYTE PTR [eax+0x4],0x20
jne    13b7a <_Z12MathLib_Initfffibbbb@@Base+0x18a>
mov    BYTE PTR ds:0x1cdd7,0x0
cmp    BYTE PTR [ebp-0xa],0x0
je     13aa9 <_Z12MathLib_Initfffibbbb@@Base+0xb9>
test   BYTE PTR [eax+0x4],0x8
jne    13b2c <_Z12MathLib_Initfffibbbb@@Base+0x13c>
mov    BYTE PTR ds:0x1cdd5,0x0
cmp    BYTE PTR [ebp-0xb],0x0
je     13abc <_Z12MathLib_Initfffibbbb@@Base+0xcc>
test   BYTE PTR [eax+0x4],0x10
jne    13b23 <_Z12MathLib_Initfffibbbb@@Base+0x133>
mov    BYTE PTR ds:0x1cdd4,0x0
mov    BYTE PTR ds:0x1cdd8,0x1
xor    ebx,ebx
lea    esi,[esi+eiz*1+0x0]
push   ebx
fild   DWORD PTR [esp]
add    esp,0x4
fadd   st,st(0)
fmul   QWORD PTR ds:0x158f8
fmul   QWORD PTR ds:0x15900
fstp   QWORD PTR [esp]
call   13ae9 <_Z12MathLib_Initfffibbbb@@Base+0xf9>
fstp   DWORD PTR [ebx*4+0x0]
inc    ebx
cmp    ebx,0xff
jle    13ad0 <_Z12MathLib_Initfffibbbb@@Base+0xe0>
mov    ebx,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x14]
mov    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x8],ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp+0xc],edx
mov    DWORD PTR [esp+0x4],ecx
mov    DWORD PTR [esp],eax
call   13b19 <_Z12MathLib_Initfffibbbb@@Base+0x129>
add    esp,0x24
pop    ebx
pop    ebp
ret    
mov    BYTE PTR ds:0x1cdd4,0x1
jmp    13ac3 <_Z12MathLib_Initfffibbbb@@Base+0xd3>
mov    BYTE PTR ds:0x1cdd5,0x1
mov    edx,0x0
mov    ebx,0x0
mov    DWORD PTR ds:0x0,edx
mov    ecx,0x0
mov    edx,0x0
mov    DWORD PTR ds:0x0,ebx
mov    ebx,0x0
mov    DWORD PTR ds:0x0,ecx
mov    ecx,0x0
mov    DWORD PTR ds:0x0,edx
mov    DWORD PTR ds:0x0,ebx
mov    DWORD PTR ds:0x0,ecx
jmp    13ab0 <_Z12MathLib_Initfffibbbb@@Base+0xc0>
mov    BYTE PTR ds:0x1cdd7,0x1
mov    edx,0x0
mov    ebx,0x0
mov    DWORD PTR ds:0x0,edx
mov    ecx,0x0
mov    edx,0x0
mov    DWORD PTR ds:0x0,ebx
mov    ebx,0x0
mov    DWORD PTR ds:0x0,ecx
mov    ecx,0x0
mov    DWORD PTR ds:0x0,edx
mov    DWORD PTR ds:0x0,ebx
mov    DWORD PTR ds:0x0,ecx
jmp    13a99 <_Z12MathLib_Initfffibbbb@@Base+0xa9>
mov    BYTE PTR ds:0x1cdd6,0x1
jmp    13a82 <_Z12MathLib_Initfffibbbb@@Base+0x92>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
movzx  eax,BYTE PTR ds:0x1cdd7
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
movzx  eax,BYTE PTR ds:0x1cdd6
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
movzx  eax,BYTE PTR ds:0x1cdd5
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
movzx  eax,BYTE PTR ds:0x1cdd4
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x10]
fxch   st(1)
fsub   st,st(2)
fucomi st,st(1)
jbe    13c58 <_Z8Approachfff@@Base+0x38>
fstp   st(0)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
jmp    13c50 <_Z8Approachfff@@Base+0x30>
fstp   st(0)
fstp   st(0)
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x4],eax
fld    DWORD PTR [ebp-0x4]
leave  
ret    
fld    st(1)
mov    eax,DWORD PTR [ebp+0x8]
fchs   
fucomip st,st(1)
fstp   st(0)
jbe    13c43 <_Z8Approachfff@@Base+0x23>
fsubp  st(1),st
jmp    13c3b <_Z8Approachfff@@Base+0x1b>
nop
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x158e4
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0x10]
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ebp+0xc]
fxch   st(2)
fstp   DWORD PTR [ebp-0x4]
movss  xmm3,DWORD PTR [ebp-0x4]
fld    DWORD PTR ds:0x158e8
cvttss2si ecx,xmm3
and    ecx,0xffff
cvtsi2ss xmm2,ecx
movss  DWORD PTR [ebp-0x4],xmm2
fld    DWORD PTR [ebp-0x4]
fxch   st(3)
fstp   DWORD PTR [ebp-0x4]
movss  xmm1,DWORD PTR [ebp-0x4]
fmul   st(2),st
cvttss2si edx,xmm1
and    edx,0xffff
cvtsi2ss xmm0,edx
fld    st(2)
movss  DWORD PTR [ebp-0x4],xmm0
fld    DWORD PTR [ebp-0x4]
fxch   st(3)
fst    DWORD PTR [ebp-0x4]
fxch   st(3)
mov    eax,DWORD PTR [ebp-0x4]
fmulp  st(2),st
xor    eax,0x80000000
fldz   
fucomip st,st(3)
mov    DWORD PTR [ebp-0x4],eax
fsub   st,st(1)
fld    DWORD PTR [ebp-0x4]
fcmovbe st,st(3)
fstp   st(3)
fld    DWORD PTR ds:0x158ec
fucomip st,st(1)
jbe    13d20 <_Z13ApproachAnglefff@@Base+0xb0>
fadd   DWORD PTR ds:0x1587c
fucomi st,st(2)
ja     13d40 <_Z13ApproachAnglefff@@Base+0xd0>
fxch   st(3)
fstp   DWORD PTR [ebp-0x4]
fld    st(1)
mov    eax,DWORD PTR [ebp-0x4]
fchs   
fucomip st,st(3)
fstp   st(2)
jbe    13d54 <_Z13ApproachAnglefff@@Base+0xe4>
fsubp  st(1),st
jmp    13d46 <_Z13ApproachAnglefff@@Base+0xd6>
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    13d06 <_Z13ApproachAnglefff@@Base+0x96>
fsub   DWORD PTR ds:0x1587c
fucomi st,st(2)
jbe    13d0a <_Z13ApproachAnglefff@@Base+0x9a>
nop
lea    esi,[esi+eiz*1+0x0]
fstp   st(0)
fstp   st(2)
faddp  st(1),st
fstp   DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
mov    DWORD PTR [ebp-0x4],eax
fld    DWORD PTR [ebp-0x4]
leave  
ret    
fstp   st(0)
fstp   st(0)
mov    DWORD PTR [ebp-0x4],eax
fld    DWORD PTR [ebp-0x4]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR ds:0x1587c
fld    st(2)
fsub   st,st(2)
fprem  
fnstsw ax
sahf   
jp     13d76 <_Z9AngleDiffff@@Base+0x16>
fstp   DWORD PTR [ebp-0x4]
fxch   st(2)
fucomip st,st(1)
fstp   st(0)
fld    DWORD PTR [ebp-0x4]
jbe    13da0 <_Z9AngleDiffff@@Base+0x40>
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jb     13db0 <_Z9AngleDiffff@@Base+0x50>
fsubrp st(1),st
leave  
ret    
lea    esi,[esi+0x0]
fld    DWORD PTR ds:0x158ec
fucomip st,st(1)
jb     13db0 <_Z9AngleDiffff@@Base+0x50>
leave  
faddp  st(1),st
ret    
mov    esi,esi
fstp   st(1)
leave  
jmp    13d9c <_Z9AngleDiffff@@Base+0x3c>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x8]
fsubrp st(1),st
fld    DWORD PTR ds:0x158ec
fucomip st,st(1)
jbe    13de0 <_Z13AngleDistanceff@@Base+0x20>
fadd   DWORD PTR ds:0x1587c
pop    ebp
ret    
lea    esi,[esi+0x0]
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    13ddb <_Z13AngleDistanceff@@Base+0x1b>
fsub   DWORD PTR ds:0x1587c
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x1587c
fld    DWORD PTR [ebp+0x8]
fld    st(1)
fxch   st(1)
fprem  
fnstsw ax
sahf   
jp     13e13 <_Z14AngleNormalizef@@Base+0x13>
fstp   st(1)
fstp   DWORD PTR [ebp-0x4]
fld    DWORD PTR [ebp-0x4]
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jbe    13e32 <_Z14AngleNormalizef@@Base+0x32>
fsub   st,st(1)
fld    DWORD PTR ds:0x158ec
fucomip st,st(1)
jbe    13e40 <_Z14AngleNormalizef@@Base+0x40>
faddp  st(1),st
jmp    13e42 <_Z14AngleNormalizef@@Base+0x42>
fstp   st(1)
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR ds:0x1587c
fld    DWORD PTR [ebp+0x8]
fld    st(1)
fxch   st(1)
fprem  
fnstsw ax
sahf   
jp     13e63 <_Z22AngleNormalizePositivef@@Base+0x13>
fstp   st(1)
fstp   DWORD PTR [ebp-0x4]
fldz   
fld    DWORD PTR [ebp-0x4]
fxch   st(1)
fucomip st,st(1)
jbe    13e80 <_Z22AngleNormalizePositivef@@Base+0x30>
faddp  st(1),st
jmp    13e82 <_Z22AngleNormalizePositivef@@Base+0x32>
mov    esi,esi
fstp   st(1)
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x8]
fld    DWORD PTR [ebp+0xc]
fld    DWORD PTR ds:0x1587c
fld    st(2)
fsub   st,st(2)
fld    st(1)
fxch   st(1)
fprem  
fnstsw ax
sahf   
jp     13eaa <_Z14AnglesAreEqualfff@@Base+0x1a>
fstp   st(1)
fstp   DWORD PTR [ebp-0x4]
fxch   st(2)
fucomip st,st(1)
fstp   st(0)
fld    DWORD PTR [ebp-0x4]
jbe    13ee1 <_Z14AnglesAreEqualfff@@Base+0x51>
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jae    13f00 <_Z14AnglesAreEqualfff@@Base+0x70>
fstp   st(1)
xor    eax,eax
fabs   
fld    DWORD PTR [ebp+0x10]
leave  
fucomip st,st(1)
fstp   st(0)
seta   al
ret    
fld    DWORD PTR ds:0x158ec
fucomip st,st(1)
jb     13ecf <_Z14AnglesAreEqualfff@@Base+0x3f>
faddp  st(1),st
xor    eax,eax
fabs   
fld    DWORD PTR [ebp+0x10]
leave  
fucomip st,st(1)
fstp   st(0)
seta   al
ret    
lea    esi,[esi+0x0]
fsubrp st(1),st
xor    eax,eax
fabs   
fld    DWORD PTR [ebp+0x10]
leave  
fucomip st,st(1)
fstp   st(0)
seta   al
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    ecx,[ebp-0x28]
push   edi
push   esi
push   ebx
sub    esp,0xac
mov    esi,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15854
mov    eax,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [esi+0x8]
mov    edi,DWORD PTR [ebp+0x10]
fld    DWORD PTR [esi]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
mov    DWORD PTR [ebp-0x8c],eax
fmul   st,st(2)
fld    DWORD PTR [esi+0x4]
fxch   st(2)
fst    DWORD PTR [ebp-0x68]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fst    DWORD PTR [ebp-0x64]
fxch   st(1)
fst    DWORD PTR [ebp-0x60]
fmul   DWORD PTR ds:0x156a8
fsincos 
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x90]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fsincos 
fxch   st(3)
fmul   DWORD PTR ds:0x156a8
fxch   st(3)
fstp   DWORD PTR [ebp-0x98]
fstp   DWORD PTR [ebp-0x94]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x94]
fld    DWORD PTR [ebp-0x98]
fld    DWORD PTR [ebp-0x90]
fxch   st(2)
fmul   st,st(3)
fxch   st(1)
fmul   st,st(4)
fxch   st(3)
fmul   DWORD PTR [ebp-0x98]
fld    st(1)
fmul   st,st(6)
fxch   st(5)
fmul   DWORD PTR [ebp-0x94]
fxch   st(3)
fmul   st,st(4)
fxch   st(4)
fmul   st,st(6)
fxch   st(2)
fmul   DWORD PTR [ebp-0x90]
fxch   st(4)
fsubrp st(5),st
fld    DWORD PTR [ebp-0x90]
fmul   st,st(3)
fxch   st(3)
fmul   st,st(6)
fxch   st(5)
fstp   DWORD PTR [ebp-0x28]
fld    st(0)
fmulp  st(6),st
fmul   DWORD PTR [ebp-0x90]
fxch   st(3)
faddp  st(1),st
fxch   st(4)
fsubrp st(1),st
fxch   st(3)
fstp   DWORD PTR [ebp-0x24]
faddp  st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x20]
fstp   DWORD PTR [ebp-0x1c]
fld    DWORD PTR [ebx+0x8]
fld    DWORD PTR [ebx]
fxch   st(1)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   DWORD PTR [ebx+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x68]
fxch   st(2)
fst    DWORD PTR [ebp-0x64]
fxch   st(1)
fst    DWORD PTR [ebp-0x60]
fmul   DWORD PTR ds:0x156a8
fsincos 
fxch   st(2)
fmul   DWORD PTR ds:0x156a8
fxch   st(2)
fstp   DWORD PTR [ebp-0x6c]
fstp   DWORD PTR [ebp-0x9c]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
fsincos 
fxch   st(3)
fmul   DWORD PTR ds:0x156a8
fxch   st(3)
fstp   DWORD PTR [ebp-0xa4]
fstp   DWORD PTR [ebp-0xa0]
fxch   st(1)
fsincos 
fxch   st(1)
fstp   DWORD PTR [ebp-0x6c]
mov    edx,0xbf800000
lea    ebx,[ebp-0x48]
fld    DWORD PTR [ebp-0x6c]
fxch   st(1)
lea    esi,[ebp-0x58]
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0xa4]
fld    DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0xa0]
fxch   st(2)
fmul   st,st(3)
fxch   st(2)
fmul   st,st(1)
fld    DWORD PTR [ebp-0x9c]
fld    st(3)
fmul   st,st(6)
fxch   st(5)
fmul   DWORD PTR [ebp-0xa0]
fxch   st(1)
fmul   st,st(2)
fxch   st(2)
fmul   st,st(6)
fxch   st(3)
fmul   DWORD PTR [ebp-0xa4]
fxch   st(5)
fsubrp st(2),st
fld    st(0)
fxch   st(4)
fmul   DWORD PTR [ebp-0x9c]
fxch   st(4)
fmul   st,st(6)
fxch   st(2)
fstp   DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebp-0x9c]
fxch   st(3)
faddp  st(4),st
fmul   DWORD PTR [ebp-0x9c]
fxch   st(2)
fmul   st,st(4)
fxch   st(4)
fmulp  st(5),st
fxch   st(2)
fstp   DWORD PTR [ebp-0x34]
fxch   st(2)
fsubrp st(1),st
fxch   st(2)
faddp  st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x30]
fstp   DWORD PTR [ebp-0x2c]
mov    DWORD PTR [esp+0x8],ebx
mov    DWORD PTR [esp+0x4],edx
mov    DWORD PTR [esp],ecx
call   1412a <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x20a>
lea    eax,[ebp-0x38]
cmp    eax,esi
je     142a3 <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x383>
mov    DWORD PTR [esp+0x4],ebx
lea    eax,[ebp-0x88]
lea    ebx,[ebp-0x38]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],ebx
call   1414e <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x22e>
fld    DWORD PTR [ebp-0x34]
fld    DWORD PTR [ebp-0x38]
fld    DWORD PTR [ebp-0x7c]
fld    DWORD PTR [ebp-0x30]
fld    st(2)
fxch   st(2)
fmul   st,st(3)
fxch   st(4)
fst    DWORD PTR [ebp-0xa8]
fmul   DWORD PTR [ebp-0x80]
fld    DWORD PTR [ebp-0x2c]
fld    DWORD PTR [ebp-0x88]
fxch   st(4)
fchs   
fxch   st(5)
fmul   DWORD PTR [ebp-0x84]
fxch   st(6)
faddp  st(2),st
fld    DWORD PTR [ebp-0x84]
fmul   st,st(3)
fsubp  st(2),st
fld    st(0)
fmul   st,st(4)
faddp  st(2),st
fld    DWORD PTR [ebp-0x80]
fmul   st,st(5)
fxch   st(5)
fmul   st,st(4)
fxch   st(2)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [ebp-0xa8]
fmul   DWORD PTR [ebp-0x7c]
faddp  st(5),st
fld    st(2)
fmul   st,st(4)
faddp  st(5),st
fld    DWORD PTR [ebp-0x84]
fmul   st,st(1)
faddp  st(5),st
fld    DWORD PTR [ebp-0xa8]
fmul   DWORD PTR [ebp-0x84]
fxch   st(5)
fstp   DWORD PTR [ebp-0x54]
fld    DWORD PTR [ebp-0xa8]
fmulp  st(4),st
fxch   st(1)
fsubrp st(4),st
fxch   st(4)
fsubrp st(2),st
fld    DWORD PTR [ebp-0x7c]
fmul   st,st(1)
fxch   st(1)
fmul   DWORD PTR [ebp-0x80]
fxch   st(2)
faddp  st(1),st
fld    DWORD PTR [ebp-0x80]
fxch   st(3)
fsubrp st(2),st
fxch   st(2)
fmul   st,st(3)
fxch   st(3)
fmul   DWORD PTR [ebp-0x7c]
fxch   st(2)
faddp  st(3),st
faddp  st(1),st
fxch   st(1)
fstp   DWORD PTR [ebp-0x50]
fstp   DWORD PTR [ebp-0x4c]
mov    DWORD PTR [esp],esi
call   14212 <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x2f2>
fstp   st(0)
fld    DWORD PTR [ebp-0x4c]
fstp   QWORD PTR [esp]
call   1421f <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x2ff>
fld    DWORD PTR ds:0x158b0
fxch   st(1)
fadd   st,st(0)
fstp   DWORD PTR [ebp-0x6c]
fld    DWORD PTR [ebp-0x6c]
fmul   DWORD PTR ds:0x1585c
fucomi st,st(1)
fstp   st(1)
jbe    14274 <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x354>
fsub   DWORD PTR ds:0x1587c
mov    esi,DWORD PTR [ebp-0x8c]
fstp   DWORD PTR [esi]
mov    eax,DWORD PTR [ebp-0x58]
mov    DWORD PTR [edi],eax
mov    ebx,DWORD PTR [ebp-0x54]
mov    DWORD PTR [edi+0x4],ebx
mov    edx,DWORD PTR [ebp-0x50]
mov    DWORD PTR [edi+0x8],edx
mov    DWORD PTR [esp],edi
call   DWORD PTR ds:0x0
fstp   st(0)
add    esp,0xac
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ecx,DWORD PTR [ebp-0x8c]
fstp   DWORD PTR [ecx]
mov    eax,DWORD PTR [ebp-0x58]
mov    DWORD PTR [edi],eax
mov    ebx,DWORD PTR [ebp-0x54]
mov    DWORD PTR [edi+0x4],ebx
mov    edx,DWORD PTR [ebp-0x50]
mov    DWORD PTR [edi+0x8],edx
mov    DWORD PTR [esp],edi
call   DWORD PTR ds:0x0
fstp   st(0)
add    esp,0xac
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    edx,DWORD PTR [ebp-0x58]
mov    ecx,DWORD PTR [ebp-0x54]
mov    eax,DWORD PTR [ebp-0x50]
mov    DWORD PTR [ebp-0x88],edx
mov    edx,DWORD PTR [ebp-0x4c]
mov    DWORD PTR [ebp-0x84],ecx
lea    ecx,[ebp-0x88]
mov    DWORD PTR [ebp-0x80],eax
mov    DWORD PTR [ebp-0x7c],edx
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp],ecx
call   142d3 <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x3b3>
jmp    1420e <_Z22RotationDeltaAxisAngleRK6QAngleS1_R6VectorRf@@Base+0x2ee>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xf8
mov    DWORD PTR [ebp-0x8],esi
mov    ecx,DWORD PTR [ebp+0x8]
lea    esi,[ebp-0x48]
mov    DWORD PTR [ebp-0xc],ebx
lea    ebx,[ebp-0x78]
mov    DWORD PTR [esp],ecx
mov    DWORD PTR [ebp-0x4],edi
lea    edi,[ebp-0xa8]
mov    DWORD PTR [esp+0x4],esi
call   14309 <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x29>
mov    DWORD PTR [esp+0x4],edi
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp],edx
call   14318 <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x38>
mov    DWORD PTR [esp],esi
lea    esi,[ebp-0xd8]
mov    DWORD PTR [esp+0x4],ebx
call   1432a <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x4a>
mov    DWORD PTR [esp+0x4],ebx
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp],edi
call   1433a <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x5a>
mov    DWORD PTR [esp],esi
lea    eax,[ebp-0xe8]
mov    DWORD PTR [esp+0x4],eax
call   1434c <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x6c>
mov    ebx,DWORD PTR [ebp+0x10]
test   ebx,ebx
je     14374 <_Z13RotationDeltaRK6QAngleS1_PS_@@Base+0x94>
mov    edi,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp-0xe8]
mov    ebx,DWORD PTR [ebp-0xe4]
mov    eax,DWORD PTR [ebp-0xe0]
mov    DWORD PTR [edi],esi
mov    DWORD PTR [edi+0x4],ebx
mov    DWORD PTR [edi+0x8],eax
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x30
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebx]
fsubr  DWORD PTR [ecx]
fld    DWORD PTR [ebx+0x4]
fsubr  DWORD PTR [ecx+0x4]
fld    DWORD PTR [ebx+0x8]
fsubr  DWORD PTR [ecx+0x8]
fxch   st(2)
fstp   DWORD PTR [ebp-0x18]
fld    DWORD PTR [ebx]
fsubr  DWORD PTR [edx]
fxch   st(1)
fst    DWORD PTR [ebp-0x14]
fxch   st(2)
fst    DWORD PTR [ebp-0x10]
fld    DWORD PTR [ebx+0x4]
fsubr  DWORD PTR [edx+0x4]
fxch   st(2)
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebx+0x8]
fsubr  DWORD PTR [edx+0x8]
fxch   st(2)
fst    DWORD PTR [ebp-0x24]
fmul   st,st(1)
fxch   st(3)
fmul   st,st(2)
fxch   st(2)
fst    DWORD PTR [ebp-0x20]
fxch   st(2)
fsubrp st(3),st
fxch   st(2)
fstp   DWORD PTR [esi]
fld    DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp-0x18]
fxch   st(3)
fmul   st,st(1)
fxch   st(2)
fmul   st,st(3)
fsubp  st(2),st
fxch   st(1)
fstp   DWORD PTR [esi+0x4]
fmul   DWORD PTR [ebp-0x14]
fxch   st(1)
fmul   DWORD PTR [ebp-0x24]
fsubrp st(1),st
fstp   DWORD PTR [esi+0x8]
mov    DWORD PTR [esp],esi
call   DWORD PTR ds:0x0
fstp   st(0)
fld    DWORD PTR [ebx]
mov    eax,DWORD PTR [ebp+0x18]
fld    DWORD PTR [ebx+0x4]
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
fmul   DWORD PTR [esi]
faddp  st(1),st
fld    DWORD PTR [ebx+0x8]
fmul   DWORD PTR [esi+0x8]
faddp  st(1),st
fstp   DWORD PTR [eax]
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
nop
push   ebp
mov    edx,0xffffffff
mov    ebp,esp
push   edi
xor    eax,eax
push   esi
push   ebx
sub    esp,0x6c
mov    edi,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x158f0
mov    esi,DWORD PTR [ebp+0xc]
lea    esi,[esi+eiz*1+0x0]
fld    DWORD PTR [esi+eax*4]
fabs   
fstp   DWORD PTR [ebp-0x4c]
fld    DWORD PTR [ebp-0x4c]
fucomi st,st(1)
jbe    14490 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x50>
fstp   st(1)
mov    edx,eax
inc    eax
cmp    eax,0x2
jle    14460 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x20>
fstp   st(0)
xor    eax,eax
cmp    edx,0xffffffff
jne    14494 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x54>
add    esp,0x6c
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
fstp   st(0)
jmp    14473 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x33>
fld    DWORD PTR ds:0x4
test   edx,edx
fld    DWORD PTR ds:0x0
fld    DWORD PTR ds:0x8
fxch   st(2)
fst    DWORD PTR [ebp-0x44]
js     1467a <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x23a>
cmp    edx,0x1
jg     14656 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x216>
fstp   st(2)
fst    DWORD PTR [ebp-0x48]
fld1   
fst    DWORD PTR [ebp-0x40]
fxch   st(2)
fmul   DWORD PTR [esi+0x4]
fxch   st(1)
lea    ebx,[ebp-0x48]
fmul   DWORD PTR [esi]
fxch   st(2)
fmul   DWORD PTR [esi+0x8]
fxch   st(2)
mov    DWORD PTR [esp+0xc],ebx
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp],ebx
faddp  st(1),st
faddp  st(1),st
fchs   
fstp   DWORD PTR [esp+0x4]
call   144ef <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0xaf>
mov    DWORD PTR [esp],ebx
call   DWORD PTR ds:0x0
fstp   st(0)
fld    DWORD PTR [esi]
lea    ecx,[edi+0xc]
lea    eax,[edi+0x24]
fld    DWORD PTR [ebp+0x10]
lea    edx,[edi+0x18]
fld    DWORD PTR [ebp-0x44]
fxch   st(1)
fmul   st,st(2)
fld    DWORD PTR [ebp-0x48]
fld    DWORD PTR [ebp-0x40]
fmul   st,st(4)
fxch   st(2)
fst    DWORD PTR [ebp-0x50]
fstp   DWORD PTR [ebp-0x28]
fld    DWORD PTR [ebp+0x10]
fmul   DWORD PTR [esi+0x4]
fxch   st(4)
fmul   DWORD PTR [ebp-0x44]
fxch   st(4)
fst    DWORD PTR [ebp-0x24]
fstp   DWORD PTR [ebp-0x54]
fld    DWORD PTR [ebp+0x10]
fmul   DWORD PTR [esi+0x8]
fld    DWORD PTR [esi+0x4]
fxch   st(1)
fst    DWORD PTR [ebp-0x20]
fld    DWORD PTR [esi+0x8]
fxch   st(1)
fstp   DWORD PTR [ebp-0x58]
fld    DWORD PTR [ebp-0x40]
fxch   st(5)
fmul   st,st(1)
fxch   st(5)
fmul   st,st(2)
fxch   st(1)
fmul   st,st(3)
fxch   st(5)
fsubrp st(1),st
fld    DWORD PTR [ebp-0x44]
fxch   st(4)
fsubrp st(5),st
fld    st(2)
fxch   st(4)
fmul   DWORD PTR [ebp+0x14]
fxch   st(4)
fmulp  st(2),st
fxch   st(2)
fmul   DWORD PTR [ebp+0x14]
fxch   st(2)
fmul   DWORD PTR [ebp+0x14]
fxch   st(1)
fsubrp st(5),st
fxch   st(2)
fst    DWORD PTR [ebp-0x5c]
fstp   DWORD PTR [ebp-0x44]
fld    DWORD PTR [ebp-0x40]
fmul   DWORD PTR [ebp+0x14]
fxch   st(3)
fmul   DWORD PTR [ebp+0x14]
fxch   st(4)
fmul   DWORD PTR [ebp+0x14]
fxch   st(2)
fst    DWORD PTR [ebp-0x38]
fxch   st(3)
fst    DWORD PTR [ebp-0x60]
fstp   DWORD PTR [ebp-0x40]
fxch   st(3)
fst    DWORD PTR [ebp-0x34]
fxch   st(3)
fst    DWORD PTR [ebp-0x48]
fxch   st(1)
fst    DWORD PTR [ebp-0x30]
fld    DWORD PTR [ebp-0x58]
fld    DWORD PTR [ebp-0x50]
fld    DWORD PTR [ebp-0x54]
fxch   st(2)
fsub   st,st(3)
fxch   st(1)
fsub   st,st(5)
fxch   st(5)
fadd   DWORD PTR [ebp-0x50]
fxch   st(2)
fsub   st,st(6)
fxch   st(1)
fstp   DWORD PTR [ebp-0x64]
fld    st(4)
fadd   st,st(4)
fxch   st(6)
fadd   DWORD PTR [ebp-0x54]
fxch   st(5)
fsub   st,st(4)
fxch   st(3)
fadd   DWORD PTR [ebp-0x58]
fxch   st(6)
fstp   DWORD PTR [edi]
fld    DWORD PTR [ebp-0x5c]
fxch   st(3)
fstp   DWORD PTR [edi+0x24]
fadd   st(2),st
fsub   DWORD PTR [ebp-0x5c]
fxch   st(2)
fstp   DWORD PTR [edi+0x4]
fld    DWORD PTR [ebp-0x64]
fadd   DWORD PTR [ebp-0x60]
fstp   DWORD PTR [edi+0x8]
fld    st(0)
fadd   st,st(3)
fxch   st(1)
fsubrp st(3),st
fstp   DWORD PTR [edi+0xc]
fld    DWORD PTR [ebp-0x5c]
fxch   st(2)
fstp   DWORD PTR [edi+0x18]
fxch   st(1)
fadd   st,st(2)
fxch   st(2)
fsub   DWORD PTR [ebp-0x5c]
fxch   st(2)
fstp   DWORD PTR [ecx+0x4]
fld    DWORD PTR [ebp-0x60]
fxch   st(2)
fstp   DWORD PTR [edx+0x4]
fstp   DWORD PTR [eax+0x4]
fadd   st,st(1)
fxch   st(1)
fsub   DWORD PTR [ebp-0x60]
fxch   st(1)
fstp   DWORD PTR [ecx+0x8]
fld    DWORD PTR [ebp-0x64]
fsub   DWORD PTR [ebp-0x60]
fxch   st(1)
fstp   DWORD PTR [edx+0x8]
fstp   DWORD PTR [eax+0x8]
add    esp,0x6c
mov    eax,0x4
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fxch   st(2)
fst    DWORD PTR [ebp-0x40]
cmp    edx,0x2
je     1466c <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x22c>
fxch   st(1)
fst    DWORD PTR [ebp-0x48]
fxch   st(1)
jmp    144c6 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x86>
fstp   st(1)
fld1   
fst    DWORD PTR [ebp-0x48]
fxch   st(1)
jmp    144c6 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x86>
fxch   st(2)
fst    DWORD PTR [ebp-0x40]
fxch   st(1)
jmp    14662 <_Z13PolyFromPlaneP6VectorRKS_ff@@Base+0x222>
nop
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x5c
mov    ebx,DWORD PTR [ebp+0xc]
fld    DWORD PTR [ebp+0x18]
mov    DWORD PTR [ebp-0x20],0x0
mov    ecx,DWORD PTR ds:0x0
mov    DWORD PTR [ebp-0x24],0x0
shl    ebx,0x4
mov    eax,DWORD PTR [ebp+0x14]
fld    DWORD PTR [ebp+0x1c]
add    ebx,0x10
mov    DWORD PTR [ebp-0x28],0x0
sub    esp,ebx
mov    DWORD PTR [ebp-0x38],ecx
lea    esi,[esp+0xf]
sub    esp,ebx
mov    DWORD PTR [ebp-0x3c],eax
lea    ebx,[esp+0xf]
xor    ecx,ecx
and    esi,0xfffffff0
and    ebx,0xfffffff0
mov    edx,DWORD PTR ds:0x4
cmp    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x40],esi
mov    eax,ds:0x8
mov    edi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x34],edx
mov    DWORD PTR [ebp-0x30],eax
jge    14764 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0xd4>
fld    st(0)
mov    edx,DWORD PTR [ebp+0x8]
fchs   
jmp    14724 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x94>
fxch   st(1)
xor    eax,eax
fucomi st,st(1)
fstp   st(1)
setbe  al
inc    eax
add    edx,0xc
mov    DWORD PTR [ebx+ecx*4],eax
mov    esi,DWORD PTR [ebx+ecx*4]
inc    ecx
inc    DWORD PTR [ebp+esi*4-0x28]
cmp    ecx,DWORD PTR [ebp+0xc]
jge    14762 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0xd2>
mov    eax,DWORD PTR [ebp-0x3c]
mov    esi,DWORD PTR [ebp-0x40]
fld    DWORD PTR [eax]
fld    DWORD PTR [eax+0x4]
fmul   DWORD PTR [edx+0x4]
fxch   st(1)
fmul   DWORD PTR [edx]
faddp  st(1),st
fld    DWORD PTR [eax+0x8]
fmul   DWORD PTR [edx+0x8]
faddp  st(1),st
fsub   st,st(3)
fucomi st,st(2)
fst    DWORD PTR [esi+ecx*4]
jbe    14705 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x75>
fstp   st(0)
mov    DWORD PTR [ebx+ecx*4],0x0
add    edx,0xc
mov    esi,DWORD PTR [ebx+ecx*4]
inc    ecx
inc    DWORD PTR [ebp+esi*4-0x28]
cmp    ecx,DWORD PTR [ebp+0xc]
jl     14724 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x94>
fstp   st(0)
fstp   st(0)
mov    edx,DWORD PTR [ebx]
mov    esi,DWORD PTR [ebp-0x40]
mov    DWORD PTR [ebx+ecx*4],edx
mov    eax,DWORD PTR [esi]
mov    edx,DWORD PTR [ebp-0x28]
mov    DWORD PTR [esi+ecx*4],eax
xor    eax,eax
test   edx,edx
je     147ba <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x12a>
mov    eax,DWORD PTR [ebp-0x24]
test   eax,eax
jne    147c4 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x134>
fstp   st(0)
cmp    eax,DWORD PTR [ebp+0xc]
jge    147af <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x11f>
mov    ecx,DWORD PTR [ebp+0xc]
xor    edx,edx
nop
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [edx+ebx*1]
mov    eax,DWORD PTR [edx+ebx*1+0x4]
mov    DWORD PTR [edx+edi*1],esi
mov    esi,DWORD PTR [edx+ebx*1+0x8]
mov    DWORD PTR [edx+edi*1+0x4],eax
mov    DWORD PTR [edx+edi*1+0x8],esi
add    edx,0xc
dec    ecx
jne    14790 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x100>
mov    eax,DWORD PTR [ebp+0xc]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fstp   st(0)
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    DWORD PTR [ebp-0x44],0x0
mov    ecx,DWORD PTR [ebp+0xc]
xor    esi,esi
cmp    esi,ecx
jge    148e0 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x250>
movss  xmm0,DWORD PTR ds:0x15860
fld    st(0)
mov    ecx,edi
fld    DWORD PTR ds:0x15880
fxch   st(1)
fchs   
mov    esi,esi
mov    edx,DWORD PTR [ebp+0x8]
lea    eax,[esi+esi*2]
lea    edi,[edx+eax*4]
mov    edx,DWORD PTR [ebx+esi*4]
cmp    edx,0x2
je     148ed <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x25d>
test   edx,edx
jne    1481f <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x18f>
inc    DWORD PTR [ebp-0x44]
mov    eax,DWORD PTR [edi]
mov    DWORD PTR [ecx],eax
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [ecx+0x8],eax
add    ecx,0xc
mov    eax,DWORD PTR [ebx+esi*4+0x4]
mov    DWORD PTR [ebp-0x60],eax
lea    eax,[esi+0x1]
cmp    DWORD PTR [ebp-0x60],0x2
mov    DWORD PTR [ebp-0x4c],eax
je     148d0 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x240>
cmp    DWORD PTR [ebp-0x60],edx
je     148d0 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x240>
cdq    
fld    st(1)
idiv   DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x8]
lea    edx,[edx+edx*2]
lea    edx,[eax+edx*4]
xor    eax,eax
mov    DWORD PTR [ebp-0x48],edx
mov    edx,DWORD PTR [ebp-0x40]
fld    DWORD PTR [edx+esi*4]
fld    st(0)
fsub   DWORD PTR [edx+esi*4+0x4]
mov    edx,0x2
movss  DWORD PTR [ebp-0x5c],xmm0
fld    DWORD PTR [ebp-0x5c]
fxch   st(2)
fdivrp st(1),st
mov    esi,DWORD PTR [ebp-0x3c]
fld    DWORD PTR [eax+esi*1]
fucomi st,st(2)
jne    14896 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x206>
jp     14896 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x206>
fstp   st(0)
fxch   st(5)
fst    DWORD PTR [eax+ebp*1-0x38]
add    eax,0x4
dec    edx
js     148ac <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x21c>
fxch   st(5)
mov    esi,DWORD PTR [ebp-0x3c]
fld    DWORD PTR [eax+esi*1]
fucomi st,st(2)
je     1487a <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x1ea>
fucomip st,st(3)
jne    14909 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x279>
jp     14909 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x279>
fxch   st(3)
fst    DWORD PTR [eax+ebp*1-0x38]
fxch   st(3)
fxch   st(5)
add    eax,0x4
dec    edx
jns    1488a <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x1fa>
fstp   st(1)
fstp   st(1)
fstp   st(3)
inc    DWORD PTR [ebp-0x44]
mov    edx,DWORD PTR [ebp-0x38]
mov    eax,DWORD PTR [ebp-0x34]
mov    edi,DWORD PTR [ebp-0x30]
mov    DWORD PTR [ecx],edx
mov    DWORD PTR [ecx+0x4],eax
mov    DWORD PTR [ecx+0x8],edi
add    ecx,0xc
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x4c]
cmp    esi,DWORD PTR [ebp+0xc]
jl     147f0 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x160>
fstp   st(0)
fstp   st(0)
fstp   st(0)
mov    eax,DWORD PTR [ebp-0x44]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
inc    DWORD PTR [ebp-0x44]
inc    esi
mov    edx,DWORD PTR [edi]
mov    DWORD PTR [ebp-0x4c],esi
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [ecx],edx
mov    edx,DWORD PTR [edi+0x8]
mov    DWORD PTR [ecx+0x4],eax
mov    DWORD PTR [ecx+0x8],edx
add    ecx,0xc
jmp    148d0 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x240>
fld    DWORD PTR [eax+edi*1]
mov    esi,DWORD PTR [ebp-0x48]
fld    DWORD PTR [eax+esi*1]
fsub   st,st(1)
fmul   st,st(2)
faddp  st(1),st
fstp   DWORD PTR [eax+ebp*1-0x38]
fxch   st(5)
jmp    148a6 <_Z15ClipPolyToPlaneP6VectoriS0_RKS_ff@@Base+0x216>
push   ebp
xor    edx,edx
mov    ebp,esp
push   edi
fldz   
push   esi
push   ebx
sub    esp,0x5c
mov    eax,DWORD PTR [ebp+0xc]
fld    QWORD PTR [ebp+0x18]
mov    DWORD PTR [ebp-0x20],0x0
mov    esi,DWORD PTR [ebp+0x14]
shl    eax,0x5
fld    QWORD PTR [ebp+0x20]
fxch   st(2)
add    eax,0x10
sub    esp,eax
fst    QWORD PTR [ebp-0x48]
lea    edi,[esp+0xf]
sub    esp,eax
fst    QWORD PTR [ebp-0x40]
and    edi,0xfffffff0
lea    ebx,[esp+0xf]
fstp   QWORD PTR [ebp-0x38]
and    ebx,0xfffffff0
cmp    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x24],0x0
mov    DWORD PTR [ebp-0x28],0x0
jge    149df <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0xbf>
fld    st(1)
xor    ecx,ecx
fchs   
jmp    1499f <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x7f>
mov    esi,esi
fxch   st(1)
xor    eax,eax
fucomi st,st(1)
fstp   st(1)
setbe  al
inc    eax
add    ecx,0x18
mov    DWORD PTR [ebx+edx*4],eax
mov    eax,DWORD PTR [ebx+edx*4]
inc    edx
inc    DWORD PTR [ebp+eax*4-0x28]
cmp    edx,DWORD PTR [ebp+0xc]
jge    149dd <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0xbd>
fld    QWORD PTR [esi]
mov    eax,DWORD PTR [ebp+0x8]
fld    QWORD PTR [esi+0x8]
fmul   QWORD PTR [ecx+eax*1+0x8]
fxch   st(1)
fmul   QWORD PTR [ecx+eax*1]
faddp  st(1),st
fld    QWORD PTR [esi+0x10]
fmul   QWORD PTR [ecx+eax*1+0x10]
faddp  st(1),st
fsub   st,st(2)
fucomi st,st(3)
fst    QWORD PTR [edi+edx*8]
jbe    14980 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x60>
fstp   st(0)
mov    DWORD PTR [ebx+edx*4],0x0
add    ecx,0x18
mov    eax,DWORD PTR [ebx+edx*4]
inc    edx
inc    DWORD PTR [ebp+eax*4-0x28]
cmp    edx,DWORD PTR [ebp+0xc]
jl     1499f <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x7f>
fstp   st(0)
fstp   st(0)
fstp   st(0)
fld    QWORD PTR [edi]
xor    eax,eax
mov    esi,DWORD PTR [ebx]
mov    DWORD PTR [ebx+edx*4],esi
mov    ecx,DWORD PTR [ebp-0x28]
fstp   QWORD PTR [edi+edx*8]
test   ecx,ecx
je     14a1c <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0xfc>
mov    edx,DWORD PTR [ebp-0x24]
test   edx,edx
jne    14a24 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x104>
mov    ebx,DWORD PTR [ebp+0xc]
lea    edx,[ebx+ebx*2]
cmp    edx,0x0
jmp    14a17 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0xf7>
mov    ecx,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0x10]
fld    QWORD PTR [ecx+eax*8]
fstp   QWORD PTR [edi+eax*8]
inc    eax
cmp    edx,eax
jg     14a08 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0xe8>
mov    eax,DWORD PTR [ebp+0xc]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    DWORD PTR [ebp-0x4c],0x0
mov    eax,DWORD PTR [ebp+0xc]
xor    esi,esi
cmp    esi,eax
jge    14afc <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x1dc>
mov    DWORD PTR [ebp-0x54],0x0
nop
mov    edx,DWORD PTR [ebp+0x8]
lea    eax,[esi+esi*2]
lea    ecx,[edx+eax*8]
mov    edx,DWORD PTR [ebx+esi*4]
cmp    edx,0x2
mov    DWORD PTR [ebp-0x5c],edx
je     14b07 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x1e7>
mov    edx,DWORD PTR [ebp-0x5c]
test   edx,edx
jne    14a81 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x161>
fld    QWORD PTR [ecx]
mov    edx,DWORD PTR [ebp-0x54]
mov    eax,DWORD PTR [ebp+0x10]
inc    DWORD PTR [ebp-0x4c]
fstp   QWORD PTR [edx+eax*1]
fld    QWORD PTR [ecx+0x8]
fstp   QWORD PTR [edx+eax*1+0x8]
fld    QWORD PTR [ecx+0x10]
fstp   QWORD PTR [edx+eax*1+0x10]
add    edx,0x18
mov    DWORD PTR [ebp-0x54],edx
mov    edx,DWORD PTR [ebx+esi*4+0x4]
lea    eax,[esi+0x1]
mov    DWORD PTR [ebp-0x50],eax
cmp    edx,0x2
je     14af0 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x1d0>
cmp    edx,DWORD PTR [ebp-0x5c]
je     14af0 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x1d0>
fld    QWORD PTR [edi+esi*8]
cdq    
idiv   DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x8]
fld    st(0)
fsub   QWORD PTR [edi+esi*8+0x8]
lea    edx,[edx+edx*2]
lea    edx,[eax+edx*8]
fdivp  st(1),st
xor    eax,eax
fld    QWORD PTR [ecx+eax*8]
fld    QWORD PTR [edx+eax*8]
fsub   st,st(1)
fmul   st,st(2)
faddp  st(1),st
fstp   QWORD PTR [ebp+eax*8-0x48]
inc    eax
cmp    eax,0x2
jle    14aaf <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x18f>
fstp   st(0)
fld    QWORD PTR [ebp-0x48]
mov    esi,DWORD PTR [ebp-0x54]
mov    ecx,DWORD PTR [ebp+0x10]
inc    DWORD PTR [ebp-0x4c]
fstp   QWORD PTR [esi+ecx*1]
fld    QWORD PTR [ebp-0x40]
fstp   QWORD PTR [esi+ecx*1+0x8]
fld    QWORD PTR [ebp-0x38]
fstp   QWORD PTR [esi+ecx*1+0x10]
add    esi,0x18
mov    DWORD PTR [ebp-0x54],esi
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebp-0x50]
cmp    esi,DWORD PTR [ebp+0xc]
jl     14a40 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x120>
mov    eax,DWORD PTR [ebp-0x4c]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
fld    QWORD PTR [ecx]
inc    esi
mov    edx,DWORD PTR [ebp-0x54]
inc    DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x50],esi
fstp   QWORD PTR [edx+eax*1]
fld    QWORD PTR [ecx+0x8]
fstp   QWORD PTR [edx+eax*1+0x8]
fld    QWORD PTR [ecx+0x10]
fstp   QWORD PTR [edx+eax*1+0x10]
add    edx,0x18
mov    DWORD PTR [ebp-0x54],edx
jmp    14af0 <_Z23ClipPolyToPlane_PrecisePdiS_PKddd@@Base+0x1d0>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x4
mov    ecx,DWORD PTR [ebp+0x8]
fld    DWORD PTR ds:0x15884
mov    esi,DWORD PTR [ebp+0xc]
movzx  ebx,BYTE PTR [ecx]
movsx  edx,BYTE PTR [ecx+0x3]
cvtsi2ss xmm2,ebx
mov    ebx,0x0
movss  DWORD PTR [ebp-0xc],xmm2
fld    DWORD PTR [ebp-0xc]
fmul   DWORD PTR [ebx+edx*4+0x200]
fmul   st,st(1)
fstp   DWORD PTR [esi]
movzx  eax,BYTE PTR [ecx+0x1]
movsx  edx,BYTE PTR [ecx+0x3]
cvtsi2ss xmm1,eax
movss  DWORD PTR [ebp-0xc],xmm1
fld    DWORD PTR [ebp-0xc]
fmul   DWORD PTR [ebx+edx*4+0x200]
fmul   st,st(1)
fstp   DWORD PTR [esi+0x4]
movzx  eax,BYTE PTR [ecx+0x2]
movsx  edx,BYTE PTR [ecx+0x3]
cvtsi2ss xmm0,eax
movss  DWORD PTR [ebp-0xc],xmm0
fld    DWORD PTR [ebp-0xc]
fmul   DWORD PTR [ebx+edx*4+0x200]
fmulp  st(1),st
fstp   DWORD PTR [esi+0x8]
pop    ebx
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x30
mov    edx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [edx]
mov    DWORD PTR [ebp-0x18],ebx
mov    ecx,DWORD PTR [edx+0x4]
fld    DWORD PTR [ebp-0x18]
mov    DWORD PTR [ebp-0x14],ecx
mov    eax,DWORD PTR [edx+0x8]
lea    edx,[ebp-0x14]
mov    DWORD PTR [ebp-0x10],eax
mov    eax,0x1
fld    DWORD PTR [edx]
fucomi st,st(1)
fcmovbe st,st(1)
fstp   st(1)
add    edx,0x4
dec    eax
jns    14bda <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x2a>
xor    eax,eax
fldz   
fxch   st(1)
fucomi st,st(1)
fstp   st(1)
jp     14bf6 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x46>
je     14c34 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x84>
fld    DWORD PTR ds:0x15884
fxch   st(1)
fucomi st,st(1)
jbe    14c1d <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x6d>
fld    DWORD PTR ds:0x156a8
jmp    14c12 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x62>
lea    esi,[esi+0x0]
fxch   st(1)
fmul   st(1),st
fxch   st(1)
inc    eax
fucomi st,st(2)
ja     14c10 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x60>
fstp   st(1)
fstp   st(1)
fld    DWORD PTR ds:0x158f4
jmp    14c2e <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x7e>
fxch   st(1)
fadd   st,st(0)
fxch   st(1)
dec    eax
fucomi st,st(1)
ja     14c27 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x77>
fstp   st(0)
fstp   st(0)
cmp    eax,0xffffff80
mov    ebx,0xffffff80
jl     14c4d <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0x9d>
mov    ebx,0x7f
cmp    eax,0x80
cmovl  ebx,eax
mov    edx,ebx
mov    eax,0x40000000
neg    edx
push   edx
fild   DWORD PTR [esp]
add    esp,0x4
mov    DWORD PTR [esp+0x4],eax
mov    DWORD PTR [esp],0x0
fstp   QWORD PTR [esp+0x8]
call   14c6d <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0xbd>
fstp   DWORD PTR [ebp-0x1c]
mov    edx,0x2
lea    eax,[ebp-0x18]
fld    DWORD PTR [ebp-0x1c]
fld    DWORD PTR ds:0x15884
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
fld    DWORD PTR [eax]
fld    DWORD PTR ds:0x15884
fxch   st(1)
fmul   st,st(3)
fucomi st,st(2)
fcmovnbe st,st(1)
fstp   st(1)
fstp   DWORD PTR [eax]
add    eax,0x4
dec    edx
jns    14c90 <_Z21VectorToColorRGBExp32RK6VectorR13ColorRGBExp32@@Base+0xe0>
fstp   st(0)
fstp   st(0)
cvttss2si edx,DWORD PTR [ebp-0x18]
mov    BYTE PTR [esi],dl
cvttss2si eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [esi+0x1],al
cvttss2si ecx,DWORD PTR [ebp-0x10]
mov    BYTE PTR [esi+0x3],bl
mov    BYTE PTR [esi+0x2],cl
add    esp,0x30
pop    ebx
pop    esi
pop    ebp
ret    
nop
push   ebp
mov    eax,0x1
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
jmp    14ce2 <_Z8CeilPow2i@@Base+0x12>
lea    esi,[esi+0x0]
add    eax,eax
cmp    eax,edx
jl     14ce0 <_Z8CeilPow2i@@Base+0x10>
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    eax,0x1
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
jmp    14d02 <_Z9FloorPow2i@@Base+0x12>
lea    esi,[esi+0x0]
add    eax,eax
cmp    eax,edx
jl     14d00 <_Z9FloorPow2i@@Base+0x10>
pop    ebp
sar    eax,1
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [esp+0x8],ebx
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp],edi
call   14d3b <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0x2b>
cmp    eax,0x2
je     14dc0 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb0>
mov    DWORD PTR [esp+0x4],esi
lea    eax,[ebx+0x14]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edi
call   14d53 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0x43>
cmp    eax,0x2
je     14dc0 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb0>
mov    DWORD PTR [esp+0x4],esi
lea    edx,[ebx+0x28]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],edi
call   14d6b <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0x5b>
cmp    eax,0x2
je     14dc0 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb0>
mov    DWORD PTR [esp+0x4],esi
lea    ecx,[ebx+0x3c]
mov    DWORD PTR [esp+0x8],ecx
mov    DWORD PTR [esp],edi
call   14d83 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0x73>
cmp    eax,0x2
je     14dc0 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb0>
mov    DWORD PTR [esp+0x4],esi
lea    eax,[ebx+0x50]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edi
call   14d9b <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0x8b>
cmp    eax,0x2
je     14dc0 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb0>
mov    DWORD PTR [esp+0x4],esi
lea    edx,[ebx+0x64]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],edi
call   14db3 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xa3>
cmp    eax,0x2
jne    14dc7 <_Z9R_CullBoxRK6VectorS1_RK9Frustum_t@@Base+0xb7>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x10],0x1
mov    eax,DWORD PTR [ebp-0x10]
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
mov    DWORD PTR [ebp-0xc],ebx
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x8],esi
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x4],edi
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [esp+0x8],ebx
mov    DWORD PTR [esp+0x4],esi
mov    DWORD PTR [esp],edi
call   14e0b <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0x2b>
cmp    eax,0x2
je     14e80 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0xa0>
mov    DWORD PTR [esp+0x4],esi
lea    eax,[ebx+0x14]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edi
call   14e23 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0x43>
cmp    eax,0x2
je     14e80 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0xa0>
mov    DWORD PTR [esp+0x4],esi
lea    edx,[ebx+0x28]
mov    DWORD PTR [esp+0x8],edx
mov    DWORD PTR [esp],edi
call   14e3b <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0x5b>
cmp    eax,0x2
je     14e80 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0xa0>
mov    DWORD PTR [esp+0x4],esi
lea    ecx,[ebx+0x3c]
mov    DWORD PTR [esp+0x8],ecx
mov    DWORD PTR [esp],edi
call   14e53 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0x73>
cmp    eax,0x2
je     14e80 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0xa0>
mov    DWORD PTR [esp+0x4],esi
lea    eax,[ebx+0x64]
mov    DWORD PTR [esp+0x8],eax
mov    DWORD PTR [esp],edi
call   14e6b <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0x8b>
cmp    eax,0x2
jne    14e87 <_Z17R_CullBoxSkipNearRK6VectorS1_RK9Frustum_t@@Base+0xa7>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    DWORD PTR [ebp-0x10],0x1
mov    eax,DWORD PTR [ebp-0x10]
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    eax,0x0
mov    ebp,esp
pop    ebp
mov    edx,0x7f7fffff
mov    ds:0x1cdcc,eax
mov    ds:0x1cdd0,eax
mov    DWORD PTR ds:0x1cdc4,edx
mov    DWORD PTR ds:0x1cdc8,edx
mov    ds:0x0,eax
mov    ds:0x4,eax
mov    ds:0x8,eax
mov    ds:0x0,eax
mov    ds:0x4,eax
mov    ds:0x8,eax
mov    DWORD PTR ds:0x0,edx
mov    DWORD PTR ds:0x4,edx
mov    DWORD PTR ds:0x8,edx
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
fld    DWORD PTR [ebp+0x8]
fsincos 
fxch   st(1)
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
fstp   DWORD PTR [edx]
fstp   DWORD PTR [eax]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    edx,0x3f000000
mov    ebp,esp
mov    eax,0x40400000
sub    esp,0xc
mov    DWORD PTR [ebp-0x8],edx
mov    DWORD PTR [ebp-0xc],eax
movss  xmm3,DWORD PTR [ebp+0x8]
movss  xmm1,DWORD PTR [ebp-0x8]
movss  xmm2,DWORD PTR [ebp-0xc]
rsqrtss xmm0,xmm3
mulss  xmm3,xmm0
mulss  xmm1,xmm0
mulss  xmm3,xmm0
subss  xmm2,xmm3
mulss  xmm1,xmm2
movss  DWORD PTR [ebp-0x4],xmm1
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
rsqrtss xmm0,DWORD PTR [ebp-0x4]
movss  DWORD PTR [ebp+0x8],xmm0
fld    DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [edx]
mov    eax,DWORD PTR [ecx]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ecx],ebx
pop    ebx
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   edi
push   esi
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [esp+0x24]
test   eax,eax
jle    1505f <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xaf>
mov    ecx,DWORD PTR ds:0x0
lea    edi,[eax-0x1]
mov    esi,eax
and    edi,0x1
mov    ebx,DWORD PTR [esp+0x20]
test   ecx,ecx
je     1512e <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x17e>
mov    eax,ds:0x0
test   eax,eax
je     15154 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x1a4>
mov    edx,DWORD PTR ds:0x0
test   edx,edx
je     15176 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x1c6>
add    ebx,0x4
dec    esi
je     1505f <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xaf>
test   edi,edi
jne    15038 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x88>
jmp    15010 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x0
test   eax,eax
je     15110 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x160>
mov    ecx,DWORD PTR ds:0x0
test   ecx,ecx
je     150f0 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x140>
mov    eax,ds:0x0
test   eax,eax
je     15070 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xc0>
dec    esi
add    ebx,0x4
mov    edi,DWORD PTR ds:0x0
test   edi,edi
je     150d0 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x120>
mov    edi,DWORD PTR ds:0x0
test   edi,edi
je     150b0 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x100>
mov    eax,ds:0x0
test   eax,eax
je     15090 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xe0>
add    ebx,0x4
dec    esi
jne    15010 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x60>
add    esp,0x10
pop    ebx
pop    esi
pop    edi
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp],0x15950
xor    edx,edx
mov    DWORD PTR [esp+0x4],edx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
jmp    15034 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x84>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp],0x15950
xor    ecx,ecx
mov    DWORD PTR [esp+0x4],ecx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
jmp    15059 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xa9>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp],0x1596e
xor    edx,edx
mov    DWORD PTR [esp+0x4],edx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
jmp    15050 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0xa0>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [esp],0x15200
xor    ecx,ecx
mov    DWORD PTR [esp+0x4],ecx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
mov    ds:0x0,eax
jmp    15046 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x96>
mov    esi,esi
mov    DWORD PTR [esp],0x1596e
xor    edi,edi
mov    DWORD PTR [esp+0x4],edi
call   DWORD PTR [ebx]
mov    ds:0x0,eax
jmp    1502b <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x7b>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esp],0x15200
xor    edx,edx
mov    DWORD PTR [esp+0x4],edx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
mov    ds:0x0,eax
jmp    1501d <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x6d>
mov    DWORD PTR [esp],0x15200
xor    edx,edx
mov    DWORD PTR [esp+0x4],edx
call   DWORD PTR [ebx]
mov    ds:0x0,eax
mov    ds:0x0,eax
mov    eax,ds:0x0
test   eax,eax
jne    14fe9 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x39>
mov    DWORD PTR [esp],0x1596e
xor    ecx,ecx
mov    DWORD PTR [esp+0x4],ecx
call   DWORD PTR [ebx]
mov    edx,DWORD PTR ds:0x0
test   edx,edx
mov    ds:0x0,eax
jne    14ff7 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x47>
mov    DWORD PTR [esp],0x15950
xor    eax,eax
mov    DWORD PTR [esp+0x4],eax
call   DWORD PTR [ebx]
mov    ds:0x0,eax
jmp    14ff7 <_Z21ConnectTier1LibrariesPPFPvPKcPiEi@@Base+0x47>
nop
xor    eax,eax
xor    ecx,ecx
xor    edx,edx
mov    ds:0x0,eax
xor    eax,eax
mov    DWORD PTR ds:0x0,ecx
mov    DWORD PTR ds:0x0,edx
mov    ds:0x0,eax
ret    
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
call   8977 <__cxa_finalize@plt+0x103>
add    ebx,0x200e
lea    eax,[ebx-0x128]
lea    esi,[eax-0x4]
mov    eax,DWORD PTR [eax-0x4]
cmp    eax,0xffffffff
je     151dd <_Z24DisconnectTier1Librariesv@@Base+0x4d>
sub    esi,0x4
call   eax
mov    eax,DWORD PTR [esi]
cmp    eax,0xffffffff
jne    151d1 <_Z24DisconnectTier1Librariesv@@Base+0x41>
pop    ebx
pop    esi
pop    ebp
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
call   151f0 <_fini@@Base+0xc>
pop    ebx
add    ebx,0x1fd8
call   88c0 <__cxa_finalize@plt+0x4c>
pop    ecx
pop    ebx
leave  
ret    
