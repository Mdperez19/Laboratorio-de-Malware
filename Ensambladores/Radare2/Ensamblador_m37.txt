jmp dword [0x8049d18]
pop ebx
add ebx, 0x170a0d
add byte [ebx + 0x5083], cl
add byte [ebp - 0xfd8b40], al
ror byte [ebx - 0x3c3603a3], 1
nop
nop
and eax, 0x8049d10
push 8
jmp 0x80484aa
jmp dword [0x8049d14]
and eax, 0x8049d14
push 0x10
jmp 0x80484aa
jmp dword [0x8049d18]
push 0x18
jmp 0x80484aa
invalid
and eax, 0x8049d1c
push 0x20
jmp 0x80484aa
push ebp
mov ebp, esp
sub esp, 8
sub esp, 0xc
push 0x80489c0
call fcn.080484cb
add esp, 0x10
sub esp, 0xc
push 0x80489e0
call fcn.080484fb
add esp, 0x10
sub esp, 0xc
push 0x8048b20
call fcn.080484fb
add esp, 0x10
leave
ret
and eax, 0x8049d24
push 0x30
jmp 0x80484aa
and eax, 0x8049d2c
push 0x40
jmp 0x80484aa
and eax, 0x8049d28
push 0x38
jmp 0x80484aa
and eax, 0x8049d0c
push 0
jmp 0x80484aa
and eax, 0x8049d38
push 0x58
jmp 0x80484aa
and eax, 0x8049d44
push 0x70
jmp 0x80484aa
and eax, 0x8049d40
push 0x68
jmp 0x80484aa
and eax, 0x8049d20
push 0x28
jmp 0x80484aa
and eax, 0x8049d48
push 0x78
jmp 0x80484aa
and eax, 0x8049d30
push 0x48
jmp 0x80484aa
push ebp
mov ebp, esp
sub esp, 0x38
mov eax, dword [arg_ch]
mov word [var_ah], ax
call fcn.0804867b
push dword [0x8049d58]
movsx eax, word [var_ah]
push eax
push dword [arg_8h]
push 0x8048b60
call fcn.080484fb
add esp, 0x10
sub esp, 0xc
push dword [arg_8h]
call fcn.0804851b
add esp, 0x10
mov dword [var_2ch], eax
cmp dword [var_2ch], 0
jne 0x8048714
sub esp, 8
push dword [arg_8h]
push 0x8048b85
call fcn.080484fb
add esp, 0x10
sub esp, 0xc
push 0
call fcn.0804853b
sub esp, 8
push 0x10
lea eax, [var_28h]
push eax
call fcn.0804852b
add esp, 0x10
sub esp, 4
mov eax, dword [var_2ch]
push dword [eax + 0xc]
lea eax, [var_28h]
add eax, 4
push eax
mov eax, dword [var_2ch]
mov eax, dword [eax + 0x10]
push dword [eax]
call fcn.080484bb
add esp, 0x10
mov eax, dword [var_2ch]
mov ax, word [eax + 8]
mov word [var_28h], ax
movzx eax, word [var_ah]
sub esp, 0xc
push eax
call fcn.0804856b
add esp, 0x10
mov word [var_26h], ax
sub esp, 4
push 0
push 2
push 2
call fcn.0804859b
add esp, 0x10
mov dword [var_30h], eax
sub esp, 4
push 0x10
lea eax, [var_28h]
push eax
push dword [var_30h]
call fcn.0804858b
add esp, 0x10
mov eax, dword [var_30h]
leave
ret
and eax, 0x8049d14
push 0x10
jmp 0x80484aa
and eax, 0x8049d3c
push 0x60
jmp 0x80484aa
and eax, 0x8049d4c
push 0x80
jmp 0x80484aa
invalid
invalid
and eax, 0x8049d34
push 0x50
jmp 0x80484aa
mov ebp, esp
sub esp, 8
call fcn.080485ee
call fcn.0804864e
call fcn.08048946
leave
ret
push ebp
mov ebp, esp
push ebx
push eax
call fcn.080485f8
not byte [var_77h]
in eax, 0x83
in al, dx
or byte [ecx + 0x8049cfc], ah
test eax, eax
je 0x8048677
mov eax, 0
test eax, eax
je 0x8048677
sub esp, 0xc
push 0x8049cfc
call 3
add esp, 0x10
leave
ret
in eax, 0x55
mov ebp, esp
push ebx
push edx
mov eax, dword [0x8049cec]
cmp eax, 0xffffffff
mov ebx, 0x8049cec
je 0x8048967
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x804895b
pop eax
pop ebx
leave
ret
pop ebx
add ebx, 0x138e
call fcn.08048613
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
cmp byte [0x8049d54], 0
jne 0x804864b
mov eax, dword [0x8049c20]
mov edx, dword [eax]
test edx, edx
je 0x8048644
mov esi, esi
add eax, 4
mov dword [0x8049c20], eax
call edx
mov eax, dword [0x8049c20]
mov edx, dword [eax]
test edx, edx
jne 0x804862f
mov byte [0x8049d54], 1
leave
ret
push ebp
push ebp
mov ebp, esp
sub esp, 8
and esp, 0xfffffff0
mov eax, 0
sub esp, eax
cmp dword [arg_8h], 4
je 0x80487cb
call fcn.0804867b
sub esp, 8
mov eax, dword [arg_ch]
push dword [eax]
push 0x8048ba0
call fcn.080484fb
add esp, 0x10
sub esp, 0xc
push 0
call fcn.0804853b
sub esp, 0xc
sub esp, 4
call fcn.0804850b
add esp, 4
push eax
call fcn.080485ab
add esp, 0x10
mov eax, dword [arg_ch]
add eax, 0xc
mov eax, dword [eax]
mov dword [0x8049d58], eax
sub esp, 8
sub esp, 4
mov eax, dword [arg_ch]
add eax, 8
push dword [eax]
call fcn.0804854b
add esp, 8
cwde
push eax
mov eax, dword [arg_ch]
add eax, 4
push dword [eax]
call fcn.080486b3
add esp, 0x10
mov dword [var_4h], eax
sub esp, 4
sub esp, 8
mov eax, dword [arg_ch]
push dword [eax]
call fcn.080484db
add esp, 0xc
push eax
push 0
mov eax, dword [arg_ch]
push dword [eax]
call fcn.0804857b
add esp, 0x10
sub esp, 4
sub esp, 8
mov eax, dword [arg_ch]
add eax, 4
push dword [eax]
call fcn.080484db
add esp, 0xc
push eax
push 0
mov eax, dword [arg_ch]
add eax, 4
push dword [eax]
call fcn.0804857b
add esp, 0x10
sub esp, 4
sub esp, 8
mov eax, dword [arg_ch]
add eax, 8
push dword [eax]
call fcn.080484db
add esp, 0xc
push eax
push 0
mov eax, dword [arg_ch]
add eax, 8
push dword [eax]
call fcn.0804857b
add esp, 0x10
sub esp, 4
sub esp, 8
mov eax, dword [arg_ch]
add eax, 0xc
push dword [eax]
call fcn.080484db
add esp, 0xc
push eax
push 0
mov eax, dword [arg_ch]
add eax, 0xc
push dword [eax]
call fcn.0804857b
add esp, 0x10
sub esp, 8
push 0x8048bd0
mov eax, dword [arg_ch]
push dword [eax]
call fcn.080485bb
add esp, 0x10
push 0
push 0x50
push 0x8048be0
push dword [var_4h]
call fcn.0804855b
add esp, 0x10
jmp 0x80488cd
push ebp
mov ebp, esp
push esi
push ebx
call fcn.08048493
mov eax, segment.LOAD1
sub eax, segment.LOAD1
sar eax, 2
xor ebx, ebx
cmp ebx, eax
jae 0x804890f
mov esi, eax
nop
call dword [ebx*4 + segment.LOAD1]
inc ebx
cmp ebx, esi
jb 0x8048903
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
push ebx
push eax
mov eax, segment.LOAD1
sub eax, segment.LOAD1
sar eax, 2
test eax, eax
lea ebx, [eax - 1]
jne 0x8048937
mov ebx, dword [var_4h]
leave
jmp 0x804896b
mov esi, esi
call dword [ebx*4 + segment.LOAD1]
mov edx, ebx
dec ebx
test edx, edx
jne 0x8048937
jmp 0x804892c
in eax, 0x55
mov ebp, esp
push ebx
push edx
mov eax, dword [0x8049cec]
cmp eax, 0xffffffff
mov ebx, 0x8049cec
je 0x8048967
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x804895b
pop eax
pop ebx
leave
ret
push ebp
mov ebp, esp
push ebx
push edx
call fcn.08048975
