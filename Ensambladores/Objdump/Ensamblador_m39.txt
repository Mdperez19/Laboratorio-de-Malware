push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   80483f4 <_init+0xc>
pop    ebx
add    ebx,0x1664
cmp    DWORD PTR [ebx+0x40],0x0
je     8048409 <_init+0x21>
call   0 <_init-0x80483e8>
lea    esi,[esi+0x0]
call   8048588 <frame_dummy>
call   8048950 <__do_global_ctors_aux>
pop    ebx
leave  
ret    
push   DWORD PTR ds:0x8049a5c
jmp    DWORD PTR ds:0x8049a60
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049a64
push   0x0
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a68
push   0x8
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a6c
push   0x10
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a70
push   0x18
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a74
push   0x20
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a78
push   0x28
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a7c
push   0x30
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a80
push   0x38
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a84
push   0x40
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a88
push   0x48
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a8c
push   0x50
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a90
push   0x58
jmp    804841c <.plt>
jmp    DWORD PTR ds:0x8049a94
push   0x60
jmp    804841c <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x804897c
push   0x80483e8
push   ecx
push   esi
push   0x8048614
call   804847c <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x8049a40,0x0
jne    804857d <__do_global_dtors_aux+0x4d>
jmp    8048553 <__do_global_dtors_aux+0x23>
mov    eax,ds:0x8049a3c
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049a3c,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049a3c
cmp    DWORD PTR [eax],0x0
jne    8048541 <__do_global_dtors_aux+0x11>
mov    eax,0x804845c
test   eax,eax
je     8048573 <__do_global_dtors_aux+0x43>
add    esp,0xfffffff4
push   0x8049a44
call   804845c <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049a40,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x804842c
test   eax,eax
je     80485a9 <frame_dummy+0x21>
add    esp,0xfffffff8
push   0x8049b3c
push   0x8049a44
call   804842c <__register_frame_info@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x18
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80484ac <gethostbyname@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    80485e7 <resolve+0x27>
mov    eax,0xffffffff
jmp    8048610 <resolve+0x50>
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0xc]
push   edx
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
lea    eax,[ebp-0x8]
push   eax
call   804849c <memcpy@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,edx
jmp    8048610 <resolve+0x50>
lea    esi,[esi+0x0]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x618
mov    DWORD PTR [ebp-0x28],0x0
cmp    DWORD PTR [ebp+0x8],0x2
jg     8048660 <main+0x4c>
add    esp,0xfffffff4
push   0x80489c0
call   804848c <printf@plt>
add    esp,0x10
add    esp,0xfffffff8
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
push   0x80489e3
call   804848c <printf@plt>
add    esp,0x10
mov    eax,0x1
jmp    80488e0 <main+0x2cc>
lea    esi,[esi+0x0]
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
call   80485c0 <resolve>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x1c],eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80485c0 <resolve>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x20],eax
add    esp,0xfffffffc
push   0x5dc
push   0x0
lea    eax,[ebp-0x60c]
push   eax
call   80484dc <memset@plt>
add    esp,0x10
lea    eax,[ebp-0x60c]
mov    DWORD PTR [ebp-0x14],eax
lea    eax,[ebp-0x60c]
lea    edx,[eax+0x14]
mov    DWORD PTR [ebp-0x18],edx
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0xc],eax
mov    WORD PTR [ebp-0x10],0x2
mov    eax,DWORD PTR [ebp-0x14]
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,DWORD PTR [ebp-0x14]
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x1],0x0
add    esp,0xfffffff4
push   0x2ab5
call   80484cc <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x2],ax
add    esp,0xfffffff4
push   0xbe08
call   80484cc <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x4],ax
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x8],0x40
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x9],0x2
add    esp,0xfffffff8
push   0x14
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   80488e4 <in_chksum>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0xa],ax
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebp-0x20]
mov    DWORD PTR [eax+0xc],edx
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [eax+0x10],edx
add    esp,0xfffffffc
push   0xff
push   0x3
push   0x2
call   80484ec <socket@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x24],eax
cmp    DWORD PTR [ebp-0x24],0xffffffff
jne    8048780 <main+0x16c>
mov    eax,0x1
jmp    80488e0 <main+0x2cc>
lea    esi,[esi+0x0]
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048a00
call   804848c <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x2c],0x0
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [ebp-0x2c],0x1
jle    80487c0 <main+0x1ac>
jmp    80488d8 <main+0x2c4>
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x30],0xdc
add    esp,0xfffffff4
push   0x73a
call   80484cc <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
mov    DWORD PTR [ebp-0x28],0x0
add    esp,0xfffffff8
push   0x10
lea    edx,[ebp-0x10]
mov    eax,edx
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x30]
push   eax
lea    eax,[ebp-0x60c]
push   eax
mov    eax,DWORD PTR [ebp-0x24]
push   eax
call   804844c <sendto@plt>
add    esp,0x20
mov    eax,eax
cmp    eax,0xffffffff
jne    8048830 <main+0x21c>
add    esp,0xfffffff4
push   0x8048a20
call   804843c <perror@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0xffffffff
call   80484bc <exit@plt>
add    esp,0x10
nop
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x14]
movzx  edx,WORD PTR [eax+0x6]
push   edx
call   804846c <ntohs@plt>
add    esp,0x10
mov    eax,eax
cmp    ax,0x2000
jne    8048850 <main+0x23c>
jmp    80488d0 <main+0x2bc>
mov    DWORD PTR [ebp-0x30],0x5dc
cmp    DWORD PTR [ebp-0x28],0x0
jne    8048878 <main+0x264>
add    esp,0xfffffff4
push   0x2681
call   80484cc <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
jmp    80488ab <main+0x297>
add    esp,0xfffffff4
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x14]
movzx  edx,WORD PTR [eax+0x6]
push   edx
call   804846c <ntohs@plt>
add    esp,0x10
mov    eax,eax
lea    edx,[eax-0xb9]
movzx  eax,dx
push   eax
call   80484cc <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
add    esp,0xfffffff8
push   0x14
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   80488e4 <in_chksum>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0xa],ax
inc    DWORD PTR [ebp-0x28]
jmp    80487e7 <main+0x1d3>
lea    esi,[esi+0x0]
inc    DWORD PTR [ebp-0x2c]
jmp    80487b0 <main+0x19c>
mov    eax,0x1
jmp    80488e0 <main+0x2cc>
nop
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
xor    ecx,ecx
mov    WORD PTR [ebp-0x2],0x0
cmp    edx,0x1
jg     8048900 <in_chksum+0x1c>
jmp    8048911 <in_chksum+0x2d>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp+0x8]
movzx  ebx,WORD PTR [eax]
add    ecx,ebx
add    DWORD PTR [ebp+0x8],0x2
add    edx,0xfffffffe
jmp    80488f6 <in_chksum+0x12>
cmp    edx,0x1
jne    8048924 <in_chksum+0x40>
mov    eax,DWORD PTR [ebp+0x8]
mov    bl,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x2],bl
movzx  eax,WORD PTR [ebp-0x2]
add    ecx,eax
mov    eax,ecx
sar    eax,0x10
mov    ebx,ecx
movzx  ebx,bx
lea    ecx,[ebx+eax*1]
mov    eax,ecx
sar    eax,0x10
add    ecx,eax
mov    eax,ecx
not    eax
mov    WORD PTR [ebp-0x2],ax
movzx  ebx,WORD PTR [ebp-0x2]
mov    eax,ebx
jmp    8048948 <in_chksum+0x64>
mov    ebx,DWORD PTR [ebp-0x18]
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    ebx,0x8049a48
cmp    DWORD PTR ds:0x8049a48,0xffffffff
je     8048971 <__do_global_ctors_aux+0x21>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048965 <__do_global_ctors_aux+0x15>
pop    ebx
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048988 <_fini+0xc>
pop    ebx
add    ebx,0x10d0
nop
call   8048530 <__do_global_dtors_aux>
pop    ebx
leave  
ret    
