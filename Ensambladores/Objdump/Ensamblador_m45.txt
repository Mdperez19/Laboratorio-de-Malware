sub    rsp,0x8
call   40094c <call_gmon_start>
call   4009d0 <frame_dummy>
call   4010e0 <__do_global_ctors_aux>
add    rsp,0x8
ret    
push   QWORD PTR [rip+0x200dea]        # 6015a8 <_GLOBAL_OFFSET_TABLE_+0x8>
jmp    QWORD PTR [rip+0x200dec]        # 6015b0 <_GLOBAL_OFFSET_TABLE_+0x10>
nop    DWORD PTR [rax+0x0]
jmp    QWORD PTR [rip+0x200dea]        # 6015b8 <printf@GLIBC_2.2.5>
push   0x0
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200de2]        # 6015c0 <getgid@GLIBC_2.2.5>
push   0x1
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200dda]        # 6015c8 <wait@GLIBC_2.2.5>
push   0x2
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200dd2]        # 6015d0 <puts@GLIBC_2.2.5>
push   0x3
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200dca]        # 6015d8 <exit@GLIBC_2.2.5>
push   0x4
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200dc2]        # 6015e0 <execl@GLIBC_2.2.5>
push   0x5
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200dba]        # 6015e8 <fopen@GLIBC_2.2.5>
push   0x6
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200db2]        # 6015f0 <__libc_start_main@GLIBC_2.2.5>
push   0x7
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200daa]        # 6015f8 <geteuid@GLIBC_2.2.5>
push   0x8
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200da2]        # 601600 <strrchr@GLIBC_2.2.5>
push   0x9
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d9a]        # 601608 <sleep@GLIBC_2.2.5>
push   0xa
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d92]        # 601610 <getegid@GLIBC_2.2.5>
push   0xb
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d8a]        # 601618 <strstr@GLIBC_2.2.5>
push   0xc
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d82]        # 601620 <ptrace@GLIBC_2.2.5>
push   0xd
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d7a]        # 601628 <strcmp@GLIBC_2.2.5>
push   0xe
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d72]        # 601630 <getuid@GLIBC_2.2.5>
push   0xf
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d6a]        # 601638 <fclose@GLIBC_2.2.5>
push   0x10
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d62]        # 601640 <fscanf@GLIBC_2.2.5>
push   0x11
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d5a]        # 601648 <fork@GLIBC_2.2.5>
push   0x12
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d52]        # 601650 <perror@GLIBC_2.2.5>
push   0x13
jmp    4007b8 <.plt>
jmp    QWORD PTR [rip+0x200d4a]        # 601658 <mmap@GLIBC_2.2.5>
push   0x14
jmp    4007b8 <.plt>
xor    ebp,ebp
mov    r9,rdx
pop    rsi
mov    rdx,rsp
and    rsp,0xfffffffffffffff0
push   rax
push   rsp
mov    r8,0x401040
mov    rcx,0x401050
mov    rdi,0x400dd5
call   400838 <__libc_start_main@plt>
hlt    
nop
nop
sub    rsp,0x8
mov    rax,QWORD PTR [rip+0x200c41]        # 601598 <__gmon_start__>
test   rax,rax
je     40095e <call_gmon_start+0x12>
call   rax
add    rsp,0x8
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   rbp
mov    rbp,rsp
push   rbx
sub    rsp,0x8
cmp    BYTE PTR [rip+0x200cf0],0x0        # 601670 <completed.6145>
jne    4009c6 <__do_global_dtors_aux+0x56>
mov    eax,0x6013f8
sub    rax,0x6013f0
sar    rax,0x3
lea    rbx,[rax-0x1]
mov    rax,QWORD PTR [rip+0x200ccc]        # 601668 <dtor_idx.6147>
cmp    rbx,rax
jbe    4009bf <__do_global_dtors_aux+0x4f>
add    rax,0x1
mov    QWORD PTR [rip+0x200cbc],rax        # 601668 <dtor_idx.6147>
call   QWORD PTR [rax*8+0x6013f0]
mov    rax,QWORD PTR [rip+0x200cae]        # 601668 <dtor_idx.6147>
cmp    rbx,rax
ja     4009a1 <__do_global_dtors_aux+0x31>
mov    BYTE PTR [rip+0x200caa],0x1        # 601670 <completed.6145>
add    rsp,0x8
pop    rbx
leave  
ret    
nop    DWORD PTR [rax]
push   rbp
cmp    QWORD PTR [rip+0x200a27],0x0        # 601400 <__JCR_END__>
mov    rbp,rsp
je     4009f4 <frame_dummy+0x24>
mov    eax,0x0
test   rax,rax
je     4009f4 <frame_dummy+0x24>
mov    edi,0x601400
mov    r11,rax
leave  
jmp    r11
leave  
ret    
nop
nop
push   rbp
mov    rbp,rsp
push   rbx
sub    rsp,0x18
mov    QWORD PTR [rbp-0x10],rdi
mov    QWORD PTR [rbp-0x18],rsi
mov    rbx,QWORD PTR [rip+0x200c68]        # 601678 <commit_creds>
mov    rax,QWORD PTR [rip+0x200c69]        # 601680 <prepare_kernel_cred>
mov    edi,0x0
call   rax
mov    rdi,rax
call   rbx
mov    eax,0xffffffff
add    rsp,0x18
pop    rbx
leave  
ret    
push   rbp
mov    rbp,rsp
sub    rsp,0x260
mov    QWORD PTR [rbp-0x238],rdi
mov    DWORD PTR [rbp-0x10],0x0
mov    DWORD PTR [rbp-0xc],0x0
mov    esi,0x401138
mov    edi,0x40113a
call   400828 <fopen@plt>
mov    QWORD PTR [rbp-0x18],rax
cmp    QWORD PTR [rbp-0x18],0x0
jne    400c46 <get_symbol+0x217>
mov    esi,0x401138
mov    edi,0x401149
call   400828 <fopen@plt>
mov    QWORD PTR [rbp-0x18],rax
cmp    QWORD PTR [rbp-0x18],0x0
jne    400a97 <get_symbol+0x68>
mov    QWORD PTR [rbp-0x240],0x0
jmp    400c64 <get_symbol+0x235>
mov    DWORD PTR [rbp-0xc],0x1
jmp    400c46 <get_symbol+0x217>
cmp    DWORD PTR [rbp-0xc],0x0
jne    400ad6 <get_symbol+0xa7>
lea    rdx,[rbp-0x20]
lea    rax,[rbp-0x230]
lea    rcx,[rbp-0x21]
mov    rdi,QWORD PTR [rbp-0x18]
mov    r8,rax
mov    esi,0x401155
mov    eax,0x0
call   4008d8 <fscanf@plt>
mov    DWORD PTR [rbp-0x10],eax
jmp    400bda <get_symbol+0x1ab>
lea    rdx,[rbp-0x20]
lea    rcx,[rbp-0x230]
mov    rdi,QWORD PTR [rbp-0x18]
mov    esi,0x40115f
mov    eax,0x0
call   4008d8 <fscanf@plt>
mov    DWORD PTR [rbp-0x10],eax
cmp    DWORD PTR [rbp-0x10],0x2
jne    400bda <get_symbol+0x1ab>
lea    rdi,[rbp-0x230]
mov    esi,0x401166
call   400888 <strstr@plt>
test   rax,rax
jne    400c46 <get_symbol+0x217>
lea    rdi,[rbp-0x230]
mov    esi,0x40116a
call   400888 <strstr@plt>
test   rax,rax
jne    400c46 <get_symbol+0x217>
lea    rdi,[rbp-0x230]
mov    esi,0x5f
call   400858 <strrchr@plt>
mov    QWORD PTR [rbp-0x8],rax
lea    rax,[rbp-0x230]
add    rax,0x5
cmp    rax,QWORD PTR [rbp-0x8]
jae    400bda <get_symbol+0x1ab>
mov    rax,QWORD PTR [rbp-0x8]
sub    rax,0x3
mov    QWORD PTR [rbp-0x248],rax
mov    QWORD PTR [rbp-0x250],0x40116e
mov    QWORD PTR [rbp-0x258],0x3
cld    
mov    rsi,QWORD PTR [rbp-0x248]
mov    rdi,QWORD PTR [rbp-0x250]
mov    rcx,QWORD PTR [rbp-0x258]
repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
seta   dl
setb   al
mov    ecx,edx
sub    cl,al
mov    eax,ecx
movsx  eax,al
test   eax,eax
jne    400bda <get_symbol+0x1ab>
sub    QWORD PTR [rbp-0x8],0x4
jmp    400bb7 <get_symbol+0x188>
sub    QWORD PTR [rbp-0x8],0x1
lea    rax,[rbp-0x230]
cmp    rax,QWORD PTR [rbp-0x8]
jae    400bd3 <get_symbol+0x1a4>
mov    rax,QWORD PTR [rbp-0x8]
sub    rax,0x1
movzx  eax,BYTE PTR [rax]
cmp    al,0x5f
je     400bb2 <get_symbol+0x183>
mov    rax,QWORD PTR [rbp-0x8]
mov    BYTE PTR [rax],0x0
cmp    DWORD PTR [rbp-0x10],0x0
jne    400bfc <get_symbol+0x1cd>
lea    rdx,[rbp-0x230]
mov    rdi,QWORD PTR [rbp-0x18]
mov    esi,0x401172
mov    eax,0x0
call   4008d8 <fscanf@plt>
jmp    400c46 <get_symbol+0x217>
lea    rsi,[rbp-0x230]
mov    rdi,QWORD PTR [rbp-0x238]
call   4008a8 <strcmp@plt>
test   eax,eax
jne    400c46 <get_symbol+0x217>
mov    rax,QWORD PTR [rbp-0x20]
mov    rdx,rax
mov    rsi,QWORD PTR [rbp-0x238]
mov    edi,0x401176
mov    eax,0x0
call   4007c8 <printf@plt>
mov    rdi,QWORD PTR [rbp-0x18]
call   4008c8 <fclose@plt>
mov    rsi,QWORD PTR [rbp-0x20]
mov    QWORD PTR [rbp-0x240],rsi
jmp    400c64 <get_symbol+0x235>
cmp    DWORD PTR [rbp-0x10],0xffffffff
jne    400aa3 <get_symbol+0x74>
mov    rdi,QWORD PTR [rbp-0x18]
call   4008c8 <fclose@plt>
mov    QWORD PTR [rbp-0x240],0x0
mov    rax,QWORD PTR [rbp-0x240]
leave  
ret    
push   rbp
mov    rbp,rsp
push   r13
push   r12
push   rbx
sub    rsp,0x28
mov    QWORD PTR [rbp-0x30],rdi
mov    QWORD PTR [rbp-0x38],rsi
mov    edi,0x401190
call   400a2f <get_symbol>
mov    QWORD PTR [rip+0x2009e5],rax        # 601678 <commit_creds>
mov    rax,QWORD PTR [rip+0x2009de]        # 601678 <commit_creds>
test   rax,rax
jne    400cb3 <docall+0x46>
mov    edi,0x4011a0
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
mov    edi,0x4011c6
call   400a2f <get_symbol>
mov    QWORD PTR [rip+0x2009bc],rax        # 601680 <prepare_kernel_cred>
mov    rax,QWORD PTR [rip+0x2009b5]        # 601680 <prepare_kernel_cred>
test   rax,rax
jne    400ce4 <docall+0x77>
mov    edi,0x4011a0
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
mov    rax,QWORD PTR [rbp-0x30]
and    rax,0xfffffffffffff000
mov    QWORD PTR [rbp-0x20],rax
mov    rsi,QWORD PTR [rbp-0x20]
mov    edi,0x4011da
mov    eax,0x0
call   4007c8 <printf@plt>
mov    rdi,QWORD PTR [rbp-0x20]
mov    rsi,QWORD PTR [rbp-0x38]
mov    r9d,0x0
mov    r8d,0xffffffff
mov    ecx,0x32
mov    edx,0x7
call   400908 <mmap@plt>
cmp    rax,0xffffffffffffffff
jne    400d56 <docall+0xe9>
mov    edi,0x4011ea
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
mov    eax,0x4009f8
mov    rdx,rax
mov    rax,QWORD PTR [rbp-0x30]
mov    QWORD PTR [rax],rdx
add    QWORD PTR [rbp-0x30],0x8
mov    rax,QWORD PTR [rbp-0x30]
mov    rdx,rax
mov    rax,QWORD PTR [rbp-0x38]
add    rax,QWORD PTR [rbp-0x20]
cmp    rdx,rax
jb     400d42 <docall+0xd5>
mov    rax,0x101
int    0x80
call   400878 <getegid@plt>
mov    r12d,eax
call   4007d8 <getgid@plt>
mov    r13d,eax
call   400848 <geteuid@plt>
mov    ebx,eax
call   4008b8 <getuid@plt>
mov    esi,eax
mov    r8d,r12d
mov    ecx,r13d
mov    edx,ebx
mov    edi,0x4011f8
mov    eax,0x0
call   4007c8 <printf@plt>
mov    edx,0x0
mov    esi,0x401219
mov    edi,0x401220
mov    eax,0x0
call   400818 <execl@plt>
mov    edi,0x401228
call   4007f8 <puts@plt>
mov    edi,0x0
call   400808 <exit@plt>
push   rbp
mov    rbp,rsp
add    rsp,0xffffffffffffff80
mov    DWORD PTR [rbp-0x74],edi
mov    QWORD PTR [rbp-0x80],rsi
mov    DWORD PTR [rbp-0x24],0x0
mov    QWORD PTR [rbp-0x18],0xffffffff80000000
mov    QWORD PTR [rbp-0x10],0xffffffff84000000
mov    DWORD PTR [rbp-0x8],0x808
mov    DWORD PTR [rbp-0x4],0x40
cmp    DWORD PTR [rbp-0x74],0x4
jne    400e37 <main+0x62>
mov    rdx,QWORD PTR [rbp-0x18]
mov    rax,QWORD PTR [rbp-0x10]
mov    rsi,rax
sub    rsi,rdx
mov    rax,QWORD PTR [rbp-0x8]
add    rax,QWORD PTR [rbp-0x18]
mov    rdi,rax
call   400c6d <docall>
mov    edi,0x0
call   400808 <exit@plt>
call   4008e8 <fork@plt>
mov    DWORD PTR [rbp-0x28],eax
cmp    DWORD PTR [rbp-0x28],0x0
jne    400ea5 <main+0xd0>
mov    ecx,0x0
mov    edx,0x0
mov    esi,0x0
mov    edi,0x0
mov    eax,0x0
call   400898 <ptrace@plt>
mov    rax,QWORD PTR [rbp-0x80]
mov    rsi,QWORD PTR [rax]
mov    rax,QWORD PTR [rbp-0x80]
mov    rdi,QWORD PTR [rax]
mov    r9d,0x0
mov    r8d,0x401236
mov    ecx,0x401238
mov    edx,0x40123a
mov    eax,0x0
call   400818 <execl@plt>
mov    edi,0x40123c
call   4008f8 <perror@plt>
mov    edi,0x1
call   400808 <exit@plt>
cmp    DWORD PTR [rbp-0x28],0xffffffff
jne    400ebf <main+0xea>
mov    edi,0x401247
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
lea    rax,[rbp-0x64]
mov    rdi,rax
call   4007e8 <wait@plt>
cmp    eax,DWORD PTR [rbp-0x28]
jne    400ebf <main+0xea>
mov    eax,DWORD PTR [rbp-0x64]
mov    DWORD PTR [rbp-0x60],0x0
mov    DWORD PTR [rbp-0x60],eax
mov    eax,DWORD PTR [rbp-0x60]
and    eax,0x7f
test   eax,eax
jne    400ef6 <main+0x121>
mov    edi,0x401252
call   4007f8 <puts@plt>
jmp    401037 <main+0x262>
mov    eax,DWORD PTR [rbp-0x64]
mov    DWORD PTR [rbp-0x50],0x0
mov    DWORD PTR [rbp-0x50],eax
mov    eax,DWORD PTR [rbp-0x50]
and    eax,0xff
cmp    eax,0x7f
jne    400ebf <main+0xea>
mov    eax,DWORD PTR [rbp-0x64]
mov    DWORD PTR [rbp-0x40],0x0
mov    DWORD PTR [rbp-0x40],eax
mov    eax,DWORD PTR [rbp-0x40]
and    eax,0xff00
sar    eax,0x8
cmp    eax,0x5
je     400f5b <main+0x186>
mov    eax,DWORD PTR [rbp-0x64]
mov    DWORD PTR [rbp-0x30],0x0
mov    DWORD PTR [rbp-0x30],eax
mov    eax,DWORD PTR [rbp-0x30]
and    eax,0xff00
mov    esi,eax
sar    esi,0x8
mov    edi,0x401263
mov    eax,0x0
call   4007c8 <printf@plt>
jmp    401037 <main+0x262>
mov    esi,DWORD PTR [rbp-0x28]
mov    ecx,0x0
mov    edx,0x78
mov    edi,0x3
mov    eax,0x0
call   400898 <ptrace@plt>
mov    QWORD PTR [rbp-0x20],rax
cmp    QWORD PTR [rbp-0x20],0x101
jne    400fc8 <main+0x1f3>
mov    rax,QWORD PTR [rbp-0x8]
mov    rcx,rax
shr    rcx,0x3
mov    esi,DWORD PTR [rbp-0x28]
mov    edx,0x78
mov    edi,0x6
mov    eax,0x0
call   400898 <ptrace@plt>
cmp    rax,0xffffffffffffffff
jne    400fc1 <main+0x1ec>
mov    edi,0x401280
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
mov    DWORD PTR [rbp-0x24],0x1
cmp    QWORD PTR [rbp-0x20],0xb
jne    400ffd <main+0x228>
cmp    DWORD PTR [rbp-0x24],0x0
je     400ffd <main+0x228>
mov    esi,DWORD PTR [rbp-0x28]
mov    ecx,0x0
mov    edx,0x0
mov    edi,0x11
mov    eax,0x0
call   400898 <ptrace@plt>
mov    edi,0x2710
call   400868 <sleep@plt>
jmp    400ff1 <main+0x21c>
mov    esi,DWORD PTR [rbp-0x28]
mov    ecx,0x0
mov    edx,0x1
mov    edi,0x18
mov    eax,0x0
call   400898 <ptrace@plt>
cmp    rax,0xffffffffffffffff
jne    400ebf <main+0xea>
mov    edi,0x401296
call   4007f8 <puts@plt>
mov    edi,0x1
call   400808 <exit@plt>
mov    eax,0x0
leave  
ret    
nop
nop
repz ret 
nop    DWORD PTR [rax+0x0]
nop    DWORD PTR [rax+0x0]
mov    QWORD PTR [rsp-0x20],r12
mov    QWORD PTR [rsp-0x18],r13
lea    r12,[rip+0x20037b]        # 6013dc <__fini_array_end>
mov    QWORD PTR [rsp-0x10],r14
mov    QWORD PTR [rsp-0x8],r15
mov    r14,rsi
mov    QWORD PTR [rsp-0x30],rbx
mov    QWORD PTR [rsp-0x28],rbp
sub    rsp,0x38
mov    r15d,edi
mov    r13,rdx
call   4007a0 <_init>
lea    rax,[rip+0x20034e]        # 6013dc <__fini_array_end>
sub    r12,rax
sar    r12,0x3
test   r12,r12
je     4010b8 <__libc_csu_init+0x68>
xor    ebp,ebp
mov    rbx,rax
nop
add    rbp,0x1
mov    rdx,r13
mov    rsi,r14
mov    edi,r15d
call   QWORD PTR [rbx]
add    rbx,0x8
cmp    r12,rbp
jne    4010a0 <__libc_csu_init+0x50>
mov    rbx,QWORD PTR [rsp+0x8]
mov    rbp,QWORD PTR [rsp+0x10]
mov    r12,QWORD PTR [rsp+0x18]
mov    r13,QWORD PTR [rsp+0x20]
mov    r14,QWORD PTR [rsp+0x28]
mov    r15,QWORD PTR [rsp+0x30]
add    rsp,0x38
ret    
nop
nop
nop
nop
nop
push   rbp
mov    rbp,rsp
push   rbx
mov    ebx,0x6013e0
sub    rsp,0x8
mov    rax,QWORD PTR [rip+0x2002eb]        # 6013e0 <__CTOR_LIST__>
cmp    rax,0xffffffffffffffff
je     40110f <__do_global_ctors_aux+0x2f>
nop    DWORD PTR [rax+rax*1+0x0]
sub    rbx,0x8
call   rax
mov    rax,QWORD PTR [rbx]
cmp    rax,0xffffffffffffffff
jne    401100 <__do_global_ctors_aux+0x20>
add    rsp,0x8
pop    rbx
leave  
ret    
nop
nop
sub    rsp,0x8
call   400970 <__do_global_dtors_aux>
add    rsp,0x8
ret    
