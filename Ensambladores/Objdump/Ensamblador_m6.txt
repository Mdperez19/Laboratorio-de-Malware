push   ebp
mov    ebp,esp
push   ebx
call   8048e79 <readlink@plt-0x33>
pop    ebx
add    ebx,0x9183
cmp    DWORD PTR [ebx+0xf4],0x0
je     8048e8e <readlink@plt-0x1e>
call   0 <readlink@plt-0x8048eac>
mov    esi,esi
call   804f830 <error_at_line@@Base+0xa80>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
push   DWORD PTR ds:0x8052000
jmp    DWORD PTR ds:0x8052004
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8052008
push   0x0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805200c
push   0x8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052010
push   0x10
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052014
push   0x18
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052018
push   0x20
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805201c
push   0x28
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052020
push   0x30
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052024
push   0x38
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052028
push   0x40
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805202c
push   0x48
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052030
push   0x50
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052034
push   0x58
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052038
push   0x60
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805203c
push   0x68
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052040
push   0x70
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052044
push   0x78
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052048
push   0x80
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805204c
push   0x88
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052050
push   0x90
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052054
push   0x98
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052058
push   0xa0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805205c
push   0xa8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052060
push   0xb0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052064
push   0xb8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052068
push   0xc0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805206c
push   0xc8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052070
push   0xd0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052074
push   0xd8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052078
push   0xe0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805207c
push   0xe8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052080
push   0xf0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052084
push   0xf8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052088
push   0x100
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805208c
push   0x108
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052090
push   0x110
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052094
push   0x118
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x8052098
push   0x120
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805209c
push   0x128
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520a0
push   0x130
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520a4
push   0x138
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520a8
push   0x140
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520ac
push   0x148
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520b0
push   0x150
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520b4
push   0x158
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520b8
push   0x160
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520bc
push   0x168
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520c0
push   0x170
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520c4
push   0x178
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520c8
push   0x180
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520cc
push   0x188
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520d0
push   0x190
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520d4
push   0x198
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520d8
push   0x1a0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520dc
push   0x1a8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520e0
push   0x1b0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520e4
push   0x1b8
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520e8
push   0x1c0
jmp    8048e9c <readlink@plt-0x10>
jmp    DWORD PTR ds:0x80520ec
push   0x1c8
jmp    8048e9c <readlink@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x804f870
push   0x8048e70
push   ecx
push   esi
push   0x8049390
call   80490ac <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8051ff8
cmp    DWORD PTR ds:0x8051ff8,0x0
je     80492a0 <strcpy@plt+0x64>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0x4
cmp    DWORD PTR [ebx],0x0
jne    8049294 <strcpy@plt+0x58>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
xor    eax,eax
test   BYTE PTR [edx+0x28],0x4
jne    80492da <strcpy@plt+0x9e>
mov    eax,DWORD PTR [edx+0xc]
sub    eax,DWORD PTR [edx+0x8]
mov    esi,eax
shr    esi,0x2
test   esi,esi
jle    8049379 <strcpy@plt+0x13d>
mov    ecx,edx
test   BYTE PTR [ecx+0x28],0x4
je     8049300 <strcpy@plt+0xc4>
xor    ebx,ebx
jmp    8049335 <strcpy@plt+0xf9>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ebx,DWORD PTR [ecx+0x8]
cmp    DWORD PTR [ecx+0xc],ebx
jne    804930c <strcpy@plt+0xd0>
or     BYTE PTR [ecx+0x28],0x2
mov    edx,DWORD PTR [ecx+0xc]
add    edx,DWORD PTR [ecx+0x18]
mov    eax,DWORD PTR [ecx+0x18]
not    eax
and    edx,eax
mov    DWORD PTR [ecx+0xc],edx
sub    edx,DWORD PTR [ecx+0x4]
mov    eax,DWORD PTR [ecx+0x10]
sub    eax,DWORD PTR [ecx+0x4]
cmp    edx,eax
jle    804932f <strcpy@plt+0xf3>
mov    eax,DWORD PTR [ecx+0x10]
mov    DWORD PTR [ecx+0xc],eax
mov    eax,DWORD PTR [ecx+0xc]
mov    DWORD PTR [ecx+0x8],eax
mov    DWORD PTR [ebp-0x4],ebx
mov    eax,ds:0x80521a4
push   eax
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   804904c <fputs@plt>
xor    ebx,ebx
add    esp,0x8
cmp    ebx,esi
jge    8049369 <strcpy@plt+0x12d>
mov    edi,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [edi+ebx*4]
push   eax
push   0x804fd94
call   80490cc <printf@plt>
add    esp,0x8
inc    ebx
cmp    ebx,esi
jl     8049350 <strcpy@plt+0x114>
mov    eax,ds:0x80521a4
push   eax
push   0x804fd98
call   804904c <fputs@plt>
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [esi]
mov    ds:0x805233c,eax
push   0x804fd9a
push   0x6
call   8048f8c <setlocale@plt>
push   0x804fd9b
push   0x804fdb3
call   804cd80 <bindtextdomain@@Base>
push   0x804fdb3
call   804cdf0 <textdomain@@Base>
mov    DWORD PTR ds:0x80522b0,0x0
mov    DWORD PTR ds:0x80522a0,0x1
mov    DWORD PTR ds:0x80522a4,0x1
mov    DWORD PTR ds:0x805223c,0x0
push   0x0
call   804901c <time@plt>
mov    ds:0x8052240,eax
push   esi
push   edi
call   80496d0 <strcpy@plt+0x494>
mov    ebx,eax
add    esp,0x20
cmp    DWORD PTR ds:0x80522b8,0x0
je     8049460 <strcpy@plt+0x224>
push   0x804fdbd
cmp    DWORD PTR ds:0x8051fc0,0x1
je     8049440 <strcpy@plt+0x204>
mov    eax,0x804fdd4
cmp    DWORD PTR ds:0x8051fc0,0x2
jne    8049445 <strcpy@plt+0x209>
mov    eax,0x804fdd0
jmp    8049445 <strcpy@plt+0x209>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,0x804fdd9
push   eax
push   0x804fddc
call   80490cc <printf@plt>
push   0x0
call   804917c <exit@plt>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR ds:0x80522b4,0x0
je     8049473 <strcpy@plt+0x237>
push   0x0
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x4
call   804f6d0 <error_at_line@@Base+0x920>
cmp    DWORD PTR ds:0x805226c,0x0
je     8049486 <strcpy@plt+0x24a>
call   804a7f0 <strcpy@plt+0x15b4>
xor    edx,edx
mov    eax,ds:0x8052250
add    eax,0xfffffffd
cmp    eax,0x1
jbe    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x8052248,0x0
je     80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x8052278,0x0
jne    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x805227c,0x0
jne    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x8052268,0x0
jne    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x805225c,0x0
jne    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x8052274,0x0
jne    80494d4 <strcpy@plt+0x298>
cmp    DWORD PTR ds:0x805226c,0x0
je     80494d9 <strcpy@plt+0x29d>
mov    edx,0x1
mov    DWORD PTR ds:0x80522ac,edx
cmp    DWORD PTR ds:0x8052264,0x0
je     8049524 <strcpy@plt+0x2e8>
cmp    DWORD PTR ds:0x8052248,0x0
jne    8049524 <strcpy@plt+0x2e8>
push   0x804919c
push   0x804f3b0
push   0x0
push   0x0
push   0x80522c0
call   8048efc <_obstack_begin@plt>
push   0x804919c
push   0x804f3b0
push   0x0
push   0x0
push   0x80522ec
call   8048efc <_obstack_begin@plt>
add    esp,0x28
mov    DWORD PTR ds:0x8052234,0x64
push   0x2a30
call   804f3b0 <error_at_line@@Base+0x600>
mov    ds:0x8052230,eax
mov    DWORD PTR ds:0x8052238,0x0
call   804aeb0 <strcpy@plt+0x1c74>
add    esp,0x4
cmp    ebx,edi
jge    8049578 <strcpy@plt+0x33c>
mov    DWORD PTR ds:0x80522a0,0x0
lea    esi,[esi+0x0]
push   0x804fd9a
push   0x1
mov    eax,DWORD PTR [esi+ebx*4]
push   eax
call   804af20 <strcpy@plt+0x1ce4>
add    esp,0xc
inc    ebx
cmp    ebx,edi
jl     8049560 <strcpy@plt+0x324>
cmp    DWORD PTR ds:0x80522a0,0x0
je     80495af <strcpy@plt+0x373>
cmp    DWORD PTR ds:0x8052280,0x0
je     80495a0 <strcpy@plt+0x364>
push   0x804fd9a
push   0x1
push   0x804fde5
call   804af20 <strcpy@plt+0x1ce4>
add    esp,0xc
jmp    80495af <strcpy@plt+0x373>
push   0x0
push   0x804fde5
call   804aaf0 <strcpy@plt+0x18b4>
add    esp,0x8
cmp    DWORD PTR ds:0x8052238,0x0
je     8049610 <strcpy@plt+0x3d4>
call   804b690 <strcpy@plt+0x2454>
cmp    DWORD PTR ds:0x8052280,0x0
jne    80495d5 <strcpy@plt+0x399>
push   0x0
push   0x804fd9a
call   804b480 <strcpy@plt+0x2244>
add    esp,0x8
cmp    DWORD PTR ds:0x8052238,0x0
je     8049610 <strcpy@plt+0x3d4>
call   804ba30 <strcpy@plt+0x27f4>
cmp    DWORD PTR ds:0x805223c,0x0
je     8049683 <strcpy@plt+0x447>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
jmp    804967a <strcpy@plt+0x43e>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR ds:0x805223c,0x0
je     8049683 <strcpy@plt+0x447>
mov    eax,ds:0x805223c
cmp    DWORD PTR [eax+0x8],0x0
jne    804967a <strcpy@plt+0x43e>
mov    DWORD PTR ds:0x80522a4,0x0
jmp    804967a <strcpy@plt+0x43e>
mov    ebx,DWORD PTR ds:0x805223c
mov    eax,DWORD PTR [ebx+0x8]
mov    ds:0x805223c,eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    eax,DWORD PTR [ebx]
push   eax
call   804ab50 <strcpy@plt+0x1914>
mov    eax,DWORD PTR [ebx]
push   eax
call   804919c <free@plt>
add    esp,0xc
cmp    DWORD PTR [ebx+0x4],0x0
je     8049667 <strcpy@plt+0x42b>
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   804919c <free@plt>
add    esp,0x4
push   ebx
call   804919c <free@plt>
mov    DWORD PTR ds:0x80522a4,0x1
add    esp,0x4
cmp    DWORD PTR ds:0x805223c,0x0
jne    8049630 <strcpy@plt+0x3f4>
cmp    DWORD PTR ds:0x8052264,0x0
je     80496b6 <strcpy@plt+0x47a>
cmp    DWORD PTR ds:0x8052248,0x0
jne    80496b6 <strcpy@plt+0x47a>
push   0x80522c0
push   0x804fde7
call   80492c0 <strcpy@plt+0x84>
push   0x80522ec
push   0x804fdf1
call   80492c0 <strcpy@plt+0x84>
add    esp,0x10
mov    eax,ds:0x80522b0
push   eax
call   804917c <exit@plt>
jmp    80496d0 <strcpy@plt+0x494>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR ds:0x8052294,0x0
mov    DWORD PTR ds:0x8052290,0x0
mov    eax,ds:0x8051fc0
cmp    eax,0x2
je     8049720 <strcpy@plt+0x4e4>
jg     8049710 <strcpy@plt+0x4d4>
cmp    eax,0x1
je     8049760 <strcpy@plt+0x524>
jmp    80497b0 <strcpy@plt+0x574>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,0x3
je     8049740 <strcpy@plt+0x504>
jmp    80497b0 <strcpy@plt+0x574>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x8052248,0x2
mov    DWORD PTR ds:0x8052290,0x1
jmp    80497c0 <strcpy@plt+0x584>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052248,0x0
mov    DWORD PTR ds:0x8052290,0x1
jmp    80497c0 <strcpy@plt+0x584>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   0x1
call   80491cc <isatty@plt>
add    esp,0x4
test   eax,eax
je     8049790 <strcpy@plt+0x554>
mov    DWORD PTR ds:0x8052248,0x2
mov    DWORD PTR ds:0x8052294,0x1
jmp    80497c0 <strcpy@plt+0x584>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    DWORD PTR ds:0x8052248,0x1
mov    DWORD PTR ds:0x8052294,0x0
jmp    80497c0 <strcpy@plt+0x584>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
call   8048fec <abort@plt>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR ds:0x805224c,0x0
mov    DWORD PTR ds:0x8052340,0x0
mov    DWORD PTR ds:0x8052250,0x1
mov    DWORD PTR ds:0x8052254,0x0
mov    DWORD PTR ds:0x8052258,0x0
mov    DWORD PTR ds:0x805225c,0x0
push   0x804fdfe
call   8048f4c <getenv@plt>
add    esp,0x4
test   eax,eax
sete   al
and    eax,0xff
mov    ds:0x8052260,eax
mov    DWORD PTR ds:0x8052268,0x0
mov    DWORD PTR ds:0x8052274,0x0
mov    DWORD PTR ds:0x8052278,0x0
mov    DWORD PTR ds:0x805227c,0x0
mov    DWORD PTR ds:0x8052280,0x0
mov    DWORD PTR ds:0x8052284,0x0
mov    DWORD PTR ds:0x8052288,0x0
mov    DWORD PTR ds:0x805228c,0x0
mov    DWORD PTR ds:0x8052298,0x0
mov    DWORD PTR ds:0x80522a8,0x50
push   0x804fe0e
call   8048f4c <getenv@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     8049909 <strcpy@plt+0x6cd>
push   0x0
lea    eax,[ebp-0x4]
push   eax
push   0x0
push   0x0
push   ebx
call   804f460 <error_at_line@@Base+0x6b0>
add    esp,0x14
test   eax,eax
jne    80498c0 <strcpy@plt+0x684>
mov    eax,DWORD PTR [ebp-0x4]
dec    eax
cmp    eax,0x7ffffffe
ja     80498c0 <strcpy@plt+0x684>
mov    eax,DWORD PTR [ebp-0x4]
mov    ds:0x80522a8,eax
jmp    8049909 <strcpy@plt+0x6cd>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebx
cmp    DWORD PTR ds:0x80521b8,0x0
je     80498d7 <strcpy@plt+0x69b>
mov    eax,ds:0x80521bc
cmp    DWORD PTR ds:0x8052348,eax
je     80498f7 <strcpy@plt+0x6bb>
push   0x5
push   0x804fe16
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521b8,eax
mov    eax,ds:0x8052348
mov    ds:0x80521bc,eax
mov    eax,ds:0x80521b8
push   eax
push   0x0
push   0x0
call   804ecf0 <error@@Base>
add    esp,0x10
mov    DWORD PTR ds:0x805229c,0x8
push   0x804fdfe
call   8048f4c <getenv@plt>
add    esp,0x4
test   eax,eax
jne    80499bc <strcpy@plt+0x780>
push   0x804fe51
call   8048f4c <getenv@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     80499bc <strcpy@plt+0x780>
push   0x0
lea    eax,[ebp-0x4]
push   eax
push   0x0
push   0x0
push   ebx
call   804f460 <error_at_line@@Base+0x6b0>
add    esp,0x14
test   eax,eax
jne    8049970 <strcpy@plt+0x734>
mov    eax,DWORD PTR [ebp-0x4]
cmp    eax,0x7fffffff
ja     8049970 <strcpy@plt+0x734>
mov    ds:0x805229c,eax
jmp    80499bc <strcpy@plt+0x780>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebx
cmp    DWORD PTR ds:0x80521c0,0x0
je     8049987 <strcpy@plt+0x74b>
mov    eax,ds:0x80521c4
cmp    DWORD PTR ds:0x8052348,eax
je     80499a7 <strcpy@plt+0x76b>
push   0x5
push   0x804fe59
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521c0,eax
mov    eax,ds:0x8052348
mov    ds:0x80521c4,eax
mov    eax,ds:0x80521c0
push   eax
push   0x0
push   0x0
call   804ecf0 <error@@Base>
add    esp,0x10
lea    esi,[esi+0x0]
push   0x0
push   0x804f924
push   0x804fe97
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   edi
call   804911c <getopt_long@plt>
add    esp,0x14
cmp    eax,0xffffffff
je     804a210 <strcpy@plt+0xfd4>
cmp    eax,0x78
ja     804a200 <strcpy@plt+0xfc4>
jmp    DWORD PTR [eax*4+0x80499f0]
mov    esi,esi
mov    esp,0x80499
mov    ds:0xa2000804,al
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x604ff7fc],ah
add    al,0x8
xor    BYTE PTR [eax-0x5f4ff7fc],ah
add    al,0x8
xor    BYTE PTR [ecx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
mov    al,ds:0x8049f
mov    ds:0xa2000804,al
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x6643f7fc],ah
add    al,0x8
mov    esp,0x80499
mov    ds:0xa2000804,al
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [esi-0x61eff7fc],bl
add    al,0x8
xor    BYTE PTR [esi-0x61bff7fc],bl
add    al,0x8
add    BYTE PTR [edx-0x61aff7fc],ah
add    al,0x8
jmp    0x4a2:0x8049c
or     BYTE PTR [eax-0x62],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
sbb    BYTE PTR [esi-0x5dfff7fc],0x4
or     BYTE PTR [eax+0x8049e],dl
mov    ds:0xa2000804,al
add    al,0x8
mov    al,0x9e
add    al,0x8
loopne 8049ad8 <strcpy@plt+0x89c>
add    al,0x8
lock sahf 
add    al,0x8
add    BYTE PTR [edi-0x607ff7fc],bl
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
nop
lahf   
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
add    BYTE PTR [edx-0x5dfff7fc],ah
add    al,0x8
loopne 8049b11 <strcpy@plt+0x8d5>
add    al,0x8
mov    edx,0x8049e
pushf  
add    al,0x8
and    BYTE PTR [esp+eax*1+0x4a20008],bl
or     BYTE PTR [eax],dh
pushf  
add    al,0x8
mov    esp,0x80499
mov    ds:0x9c900804,al
add    al,0x8
add    BYTE PTR [edx-0x635ff7fc],ah
add    al,0x8
mov    al,0x9c
add    al,0x8
rcr    BYTE PTR [esp+eax*1+0x49cd008],0x8
loopne 8049b4a <strcpy@plt+0x90e>
add    al,0x8
add    BYTE PTR [ebp-0x62eff7fc],bl
add    al,0x8
xor    BYTE PTR [ebp-0x62bff7fc],bl
add    al,0x8
or     bl,BYTE PTR [esp+eax*1+0x49d5008]
or     BYTE PTR [eax],al
mov    ds:0x9d600804,al
add    al,0x8
lock popf 
add    al,0x8
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    DWORD PTR ds:0x8052284,0x1
mov    DWORD PTR ds:0x8052288,0x1
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805224c,0x1
mov    DWORD PTR ds:0x8052250,0x3
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052280,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052284,0x1
mov    DWORD PTR ds:0x8052288,0x1
mov    DWORD PTR ds:0x8052250,0x0
cmp    DWORD PTR ds:0x8052248,0x0
jne    8049c75 <strcpy@plt+0xa39>
push   0x1
call   80491cc <isatty@plt>
add    esp,0x4
mov    edx,0x1
test   eax,eax
je     8049c6f <strcpy@plt+0xa33>
mov    edx,0x2
mov    DWORD PTR ds:0x8052248,edx
mov    DWORD PTR ds:0x805225c,0x0
mov    DWORD PTR ds:0x805226c,0x0
jmp    80499bc <strcpy@plt+0x780>
mov    esi,esi
mov    DWORD PTR ds:0x8052274,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052260,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052248,0x0
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052248,0x4
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052258,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052248,0x0
mov    DWORD PTR ds:0x8052338,0x1
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052268,0x2
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052294,0x1
mov    DWORD PTR ds:0x8052290,0x0
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052254,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x805225c,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x805224c,0x2
jmp    80499bc <strcpy@plt+0x780>
nop
push   0x0
lea    eax,[ebp-0x4]
push   eax
push   0x0
push   0x0
mov    eax,ds:0x80521b0
push   eax
call   804f460 <error_at_line@@Base+0x6b0>
add    esp,0x14
test   eax,eax
jne    8049d87 <strcpy@plt+0xb4b>
mov    eax,DWORD PTR [ebp-0x4]
dec    eax
cmp    eax,0x7ffffffe
jbe    8049dd5 <strcpy@plt+0xb99>
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521c8,0x0
je     8049da3 <strcpy@plt+0xb67>
mov    eax,ds:0x80521cc
cmp    DWORD PTR ds:0x8052348,eax
je     8049dc3 <strcpy@plt+0xb87>
push   0x5
push   0x804fec1
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521c8,eax
mov    eax,ds:0x8052348
mov    ds:0x80521cc,eax
mov    eax,ds:0x80521c8
push   eax
push   0x0
push   0x1
call   804ecf0 <error@@Base>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
mov    ds:0x80522a8,eax
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052248,0x3
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052284,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
push   0x804fed8
call   804ae10 <strcpy@plt+0x1bd4>
push   0x804fedb
call   804ae10 <strcpy@plt+0x1bd4>
add    esp,0x8
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052248,0x2
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052264,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052268,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    eax,ds:0x80521b0
push   eax
call   804ae10 <strcpy@plt+0x1bd4>
add    esp,0x4
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052278,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052290,0x0
mov    DWORD PTR ds:0x8052294,0x0
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8052298,0x1
mov    DWORD PTR ds:0x8052290,0x1
mov    DWORD PTR ds:0x8052294,0x0
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR ds:0x805227c,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052250,0x4
jmp    80499bc <strcpy@plt+0x780>
nop
push   0x0
lea    eax,[ebp-0x4]
push   eax
push   0x0
push   0x0
mov    eax,ds:0x80521b0
push   eax
call   804f460 <error_at_line@@Base+0x6b0>
add    esp,0x14
test   eax,eax
jne    8049f22 <strcpy@plt+0xce6>
cmp    DWORD PTR [ebp-0x4],0x0
jge    8049f70 <strcpy@plt+0xd34>
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521d0,0x0
je     8049f3e <strcpy@plt+0xd02>
mov    eax,ds:0x80521d4
cmp    DWORD PTR ds:0x8052348,eax
je     8049f5e <strcpy@plt+0xd22>
push   0x5
push   0x804fedf
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521d0,eax
mov    eax,ds:0x8052348
mov    ds:0x80521d4,eax
mov    eax,ds:0x80521d0
push   eax
push   0x0
push   0x1
call   804ecf0 <error@@Base>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
mov    ds:0x805229c,eax
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x8052250,0x0
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052250,0x2
jmp    80499bc <strcpy@plt+0x780>
nop
mov    DWORD PTR ds:0x8052248,0x1
jmp    80499bc <strcpy@plt+0x780>
nop
push   0x804fca8
mov    eax,ds:0x80521b0
push   eax
call   804ebc0 <textdomain@@Base+0x1dd0>
mov    esi,eax
add    esp,0x8
test   esi,esi
jge    804a01b <strcpy@plt+0xddf>
push   esi
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521d8,0x0
je     8049fe6 <strcpy@plt+0xdaa>
mov    eax,ds:0x80521dc
cmp    DWORD PTR ds:0x8052348,eax
je     804a006 <strcpy@plt+0xdca>
push   0x5
push   0x804fef4
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521d8,eax
mov    eax,ds:0x8052348
mov    ds:0x80521dc,eax
mov    eax,ds:0x80521d8
push   eax
call   804ec80 <textdomain@@Base+0x1e90>
push   0x1
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x10
mov    eax,DWORD PTR [esi*4+0x804fccc]
mov    ds:0x8052250,eax
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
push   0x804fcdc
mov    eax,ds:0x80521b0
push   eax
call   804ebc0 <textdomain@@Base+0x1dd0>
mov    esi,eax
add    esp,0x8
test   esi,esi
jge    804a09b <strcpy@plt+0xe5f>
push   esi
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521e0,0x0
je     804a066 <strcpy@plt+0xe2a>
mov    eax,ds:0x80521e4
cmp    DWORD PTR ds:0x8052348,eax
je     804a086 <strcpy@plt+0xe4a>
push   0x5
push   0x804fefe
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521e0,eax
mov    eax,ds:0x8052348
mov    ds:0x80521e4,eax
mov    eax,ds:0x80521e0
push   eax
call   804ec80 <textdomain@@Base+0x1e90>
push   0x1
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x10
mov    eax,DWORD PTR [esi*4+0x804fd14]
mov    ds:0x805224c,eax
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
push   0x804fc2c
mov    eax,ds:0x80521b0
push   eax
call   804ebc0 <textdomain@@Base+0x1dd0>
mov    esi,eax
add    esp,0x8
test   esi,esi
jge    804a11b <strcpy@plt+0xedf>
push   esi
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521e8,0x0
je     804a0e6 <strcpy@plt+0xeaa>
mov    eax,ds:0x80521ec
cmp    DWORD PTR ds:0x8052348,eax
je     804a106 <strcpy@plt+0xeca>
push   0x5
push   0x804ff08
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521e8,eax
mov    eax,ds:0x8052348
mov    ds:0x80521ec,eax
mov    eax,ds:0x80521e8
push   eax
call   804ec80 <textdomain@@Base+0x1e90>
push   0x1
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x10
mov    eax,DWORD PTR [esi*4+0x804fc8c]
mov    ds:0x8052248,eax
jmp    80499bc <strcpy@plt+0x780>
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR ds:0x80521b0,0x0
je     804a1b0 <strcpy@plt+0xf74>
push   0x804fd28
mov    eax,ds:0x80521b0
push   eax
call   804ebc0 <textdomain@@Base+0x1dd0>
mov    esi,eax
add    esp,0x8
test   esi,esi
jge    804a1a4 <strcpy@plt+0xf68>
push   esi
mov    eax,ds:0x80521b0
push   eax
cmp    DWORD PTR ds:0x80521f0,0x0
je     804a16f <strcpy@plt+0xf33>
mov    eax,ds:0x80521f4
cmp    DWORD PTR ds:0x8052348,eax
je     804a18f <strcpy@plt+0xf53>
push   0x5
push   0x804ff14
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521f0,eax
mov    eax,ds:0x8052348
mov    ds:0x80521f4,eax
mov    eax,ds:0x80521f0
push   eax
call   804ec80 <textdomain@@Base+0x1e90>
push   0x1
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x10
mov    esi,DWORD PTR [esi*4+0x804fd74]
jmp    804a1b5 <strcpy@plt+0xf79>
lea    esi,[esi+0x0]
mov    esi,0x1
xor    ebx,ebx
cmp    esi,0x1
je     804a1cf <strcpy@plt+0xf93>
cmp    esi,0x2
jne    804a1d4 <strcpy@plt+0xf98>
push   0x1
call   80491cc <isatty@plt>
add    esp,0x4
test   eax,eax
je     804a1d4 <strcpy@plt+0xf98>
mov    ebx,0x1
mov    DWORD PTR ds:0x805226c,ebx
test   ebx,ebx
je     80499bc <strcpy@plt+0x780>
mov    DWORD PTR ds:0x805229c,0x0
jmp    80499bc <strcpy@plt+0x780>
jmp    804a200 <strcpy@plt+0xfc4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   0x1
call   804cc00 <strcpy@plt+0x39c4>
add    esp,0x4
jmp    80499bc <strcpy@plt+0x780>
nop
mov    eax,ds:0x80521b4
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebx]
mov    edi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [edi]
mov    DWORD PTR [ebp-0x4],edi
mov    DWORD PTR [ebp-0x8],0x0
xor    edx,edx
xor    esi,esi
lea    esi,[esi+0x0]
jmp    DWORD PTR [esi*4+0x804a250]
nop
lea    esi,[esi+eiz*1+0x0]
jo     804a1f4 <strcpy@plt+0xfb8>
add    al,0x8
loopne 804a1f8 <strcpy@plt+0xfbc>
add    al,0x8
lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
and    BYTE PTR [esi-0x588ff7fc],ah
add    al,0x8
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    al,BYTE PTR [ecx]
cmp    al,0x3d
je     804a2c0 <strcpy@plt+0x1084>
jg     804a290 <strcpy@plt+0x1054>
test   al,al
je     804a2c6 <strcpy@plt+0x108a>
cmp    al,0x3a
je     804a2c6 <strcpy@plt+0x108a>
jmp    804a2d0 <strcpy@plt+0x1094>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    al,0x5c
je     804a2a0 <strcpy@plt+0x1064>
cmp    al,0x5e
je     804a2b0 <strcpy@plt+0x1074>
jmp    804a2d0 <strcpy@plt+0x1094>
lea    esi,[esi+0x0]
mov    esi,0x1
inc    ecx
jmp    804a7b5 <strcpy@plt+0x1579>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,0x4
jmp    804a2a5 <strcpy@plt+0x1069>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebp+0x10],0x0
je     804a2d0 <strcpy@plt+0x1094>
mov    esi,0x5
jmp    804a7b5 <strcpy@plt+0x1579>
mov    al,BYTE PTR [ecx]
mov    ebx,DWORD PTR [ebp-0x4]
mov    BYTE PTR [ebx],al
inc    ecx
jmp    804a79b <strcpy@plt+0x155f>
lea    esi,[esi+0x0]
movsx  eax,BYTE PTR [ecx]
cmp    eax,0x78
ja     804a5c0 <strcpy@plt+0x1384>
jmp    DWORD PTR [eax*4+0x804a300]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,0xa5
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,dh
movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a6ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     BYTE PTR [eax],al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
mov    al,ds:0xc00804a5
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
adc    BYTE PTR [ebp-0x5adff7fc],ah
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     BYTE PTR [eax],dh
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
inc    eax
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5aaff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
shl    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     BYTE PTR [eax-0x5b],ah
add    al,0x8
shl    BYTE PTR [ebp-0x5a8ff7fc],0x4
or     al,al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
and    BYTE PTR [ebp-0x5a3ff7fc],0x4
or     BYTE PTR [eax],al
movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    al,0x8
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    esi,0x2
movsx  edx,BYTE PTR [ecx]
add    edx,0xffffffd0
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,0x3
xor    edx,edx
jmp    804a5c3 <strcpy@plt+0x1387>
lea    esi,[esi+eiz*1+0x0]
mov    edx,0x7
jmp    804a5c3 <strcpy@plt+0x1387>
lea    esi,[esi+0x0]
mov    edx,0x8
jmp    804a5c3 <strcpy@plt+0x1387>
lea    esi,[esi+0x0]
mov    edx,0x1b
jmp    804a5c3 <strcpy@plt+0x1387>
lea    esi,[esi+0x0]
mov    edx,0xc
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0xa
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0xd
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0x9
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0xb
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0x7f
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,0x20
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    esi,0x6
jmp    804a5c3 <strcpy@plt+0x1387>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
movsx  edx,BYTE PTR [ecx]
cmp    esi,0x1
jne    804a2a5 <strcpy@plt+0x1069>
mov    al,dl
mov    edi,DWORD PTR [ebp-0x4]
mov    BYTE PTR [edi],al
inc    edi
mov    DWORD PTR [ebp-0x4],edi
inc    DWORD PTR [ebp-0x8]
xor    esi,esi
jmp    804a2a5 <strcpy@plt+0x1069>
jmp    804a5f0 <strcpy@plt+0x13b4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    al,BYTE PTR [ecx]
add    al,0xd0
cmp    al,0x7
jbe    804a610 <strcpy@plt+0x13d4>
mov    al,dl
mov    ebx,DWORD PTR [ebp-0x4]
mov    BYTE PTR [ebx],al
inc    ebx
mov    DWORD PTR [ebp-0x4],ebx
jmp    804a75b <strcpy@plt+0x151f>
nop
lea    esi,[esi+eiz*1+0x0]
movsx  eax,BYTE PTR [ecx]
lea    edx,[eax+edx*8-0x30]
jmp    804a2a5 <strcpy@plt+0x1069>
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ecx]
add    al,0xd0
movsx  eax,al
cmp    eax,0x36
ja     804a750 <strcpy@plt+0x1514>
jmp    DWORD PTR [eax*4+0x804a640]
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
and    BYTE PTR [edi-0x58dff7fc],ah
add    al,0x8
and    BYTE PTR [edi-0x58dff7fc],ah
add    al,0x8
and    BYTE PTR [edi-0x58dff7fc],ah
add    al,0x8
and    BYTE PTR [edi-0x58dff7fc],ah
add    al,0x8
and    BYTE PTR [edi-0x58dff7fc],ah
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
inc    eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
push   eax
cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
add    al,0x8
xor    BYTE PTR [edi-0x58cff7fc],ah
add    al,0x8
xor    BYTE PTR [edi-0x58cff7fc],ah
add    al,0x8
xor    BYTE PTR [edi-0x58cff7fc],ah
add    al,0x8
lea    esi,[esi+eiz*1+0x0]
shl    edx,0x4
movsx  eax,BYTE PTR [ecx]
lea    edx,[eax+edx*1-0x30]
jmp    804a2a5 <strcpy@plt+0x1069>
nop
shl    edx,0x4
movsx  eax,BYTE PTR [ecx]
lea    edx,[eax+edx*1-0x57]
jmp    804a2a5 <strcpy@plt+0x1069>
nop
shl    edx,0x4
movsx  eax,BYTE PTR [ecx]
lea    edx,[eax+edx*1-0x37]
jmp    804a2a5 <strcpy@plt+0x1069>
nop
mov    al,dl
mov    edi,DWORD PTR [ebp-0x4]
mov    BYTE PTR [edi],al
inc    edi
mov    DWORD PTR [ebp-0x4],edi
inc    DWORD PTR [ebp-0x8]
xor    esi,esi
jmp    804a7b5 <strcpy@plt+0x1579>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    esi,esi
mov    al,BYTE PTR [ecx]
add    al,0xc0
cmp    al,0x3e
ja     804a790 <strcpy@plt+0x1554>
mov    bl,BYTE PTR [ecx]
and    bl,0x1f
mov    edi,DWORD PTR [ebp-0x4]
mov    BYTE PTR [edi],bl
inc    ecx
inc    edi
mov    DWORD PTR [ebp-0x4],edi
inc    DWORD PTR [ebp-0x8]
jmp    804a7b5 <strcpy@plt+0x1579>
mov    esi,esi
cmp    BYTE PTR [ecx],0x3f
jne    804a7b0 <strcpy@plt+0x1574>
mov    ebx,DWORD PTR [ebp-0x4]
mov    BYTE PTR [ebx],0x7f
inc    ebx
mov    DWORD PTR [ebp-0x4],ebx
inc    DWORD PTR [ebp-0x8]
jmp    804a7b5 <strcpy@plt+0x1579>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    esi,0x6
cmp    esi,0x4
jbe    804a244 <strcpy@plt+0x1008>
mov    ebx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edi],ebx
mov    edi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edi],ecx
mov    eax,0xffffffff
cmp    esi,0x6
je     804a7d8 <strcpy@plt+0x159c>
mov    eax,DWORD PTR [ebp-0x8]
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
push   0x804ff2b
call   8048f4c <getenv@plt>
mov    DWORD PTR [ebp-0xc],eax
add    esp,0x4
test   eax,eax
je     804aad8 <strcpy@plt+0x189c>
cmp    BYTE PTR [eax],0x0
je     804aad8 <strcpy@plt+0x189c>
xor    edi,edi
mov    al,BYTE PTR ds:0x804ff36
shl    ax,0x8
movzx  dx,BYTE PTR ds:0x804ff35
or     ax,dx
mov    WORD PTR [ebp-0x4],ax
mov    BYTE PTR [ebp-0x2],0x0
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804f420 <error_at_line@@Base+0x670>
mov    ds:0x8052270,eax
mov    DWORD PTR [ebp-0x8],eax
mov    esi,0x1
add    esp,0x4
lea    ecx,[ebp-0x4]
mov    DWORD PTR [ebp-0x10],ecx
cmp    esi,0x2
je     804a930 <strcpy@plt+0x16f4>
jg     804a870 <strcpy@plt+0x1634>
cmp    esi,0x1
je     804a890 <strcpy@plt+0x1654>
jmp    804aa55 <strcpy@plt+0x1819>
lea    esi,[esi+0x0]
cmp    esi,0x3
je     804a980 <strcpy@plt+0x1744>
cmp    esi,0x4
je     804aa20 <strcpy@plt+0x17e4>
jmp    804aa55 <strcpy@plt+0x1819>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0xc]
mov    al,BYTE PTR [eax]
cmp    al,0x2a
je     804a8c0 <strcpy@plt+0x1684>
jg     804a8b0 <strcpy@plt+0x1674>
test   al,al
je     804aad8 <strcpy@plt+0x189c>
jmp    804a910 <strcpy@plt+0x16d4>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    al,0x3a
jne    804a910 <strcpy@plt+0x16d4>
inc    DWORD PTR [ebp-0xc]
jmp    804aa55 <strcpy@plt+0x1819>
lea    esi,[esi+eiz*1+0x0]
push   0x14
call   804f3b0 <error_at_line@@Base+0x600>
mov    edi,eax
mov    eax,ds:0x8051fbc
mov    DWORD PTR [edi+0x10],eax
mov    DWORD PTR ds:0x8051fbc,edi
inc    DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [edi+0x4],eax
add    esp,0x4
push   0x1
lea    eax,[ebp-0xc]
push   eax
lea    eax,[ebp-0x8]
push   eax
call   804a220 <strcpy@plt+0xfe4>
add    esp,0xc
mov    DWORD PTR [edi],eax
mov    esi,0x4
jmp    804a858 <strcpy@plt+0x161c>
jmp    804a910 <strcpy@plt+0x16d4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp-0xc]
mov    al,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x4],al
inc    DWORD PTR [ebp-0xc]
mov    esi,0x2
jmp    804a858 <strcpy@plt+0x161c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0xc]
cmp    BYTE PTR [eax],0x0
je     804aa5f <strcpy@plt+0x1823>
mov    al,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x3],al
inc    DWORD PTR [ebp-0xc]
mov    esi,0x3
jmp    804a858 <strcpy@plt+0x161c>
mov    esi,esi
shl    ebx,0x3
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebx+0x8051f50],eax
push   0x0
lea    eax,[ebp-0xc]
push   eax
lea    eax,[ebp-0x8]
push   eax
call   804a220 <strcpy@plt+0xfe4>
add    esp,0xc
mov    DWORD PTR [ebx+0x8051f4c],eax
mov    esi,0x1
jmp    804a9c3 <strcpy@plt+0x1787>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,0xffffffff
mov    eax,DWORD PTR [ebp-0xc]
inc    DWORD PTR [ebp-0xc]
cmp    BYTE PTR [eax],0x3d
jne    804aa55 <strcpy@plt+0x1819>
xor    ebx,ebx
cmp    DWORD PTR ds:0x804f894,0x0
je     804a9c3 <strcpy@plt+0x1787>
nop
mov    eax,DWORD PTR [ebx*4+0x804f894]
push   eax
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804a950 <strcpy@plt+0x1714>
inc    ebx
cmp    DWORD PTR [ebx*4+0x804f894],0x0
jne    804a9a0 <strcpy@plt+0x1764>
cmp    esi,0xffffffff
jne    804aa55 <strcpy@plt+0x1819>
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
cmp    DWORD PTR ds:0x80521f8,0x0
je     804a9e6 <strcpy@plt+0x17aa>
mov    eax,ds:0x80521fc
cmp    DWORD PTR ds:0x8052348,eax
je     804aa06 <strcpy@plt+0x17ca>
push   0x5
push   0x804ff38
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x80521f8,eax
mov    eax,ds:0x8052348
mov    ds:0x80521fc,eax
mov    eax,ds:0x80521f8
push   eax
push   0x0
push   0x0
call   804ecf0 <error@@Base>
add    esp,0x10
jmp    804aa55 <strcpy@plt+0x1819>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0xc]
inc    DWORD PTR [ebp-0xc]
cmp    BYTE PTR [eax],0x3d
jne    804aa50 <strcpy@plt+0x1814>
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [edi+0xc],eax
push   0x0
lea    eax,[ebp-0xc]
push   eax
lea    eax,[ebp-0x8]
push   eax
call   804a220 <strcpy@plt+0xfe4>
add    esp,0xc
mov    DWORD PTR [edi+0x8],eax
mov    esi,0x1
jmp    804a858 <strcpy@plt+0x161c>
mov    esi,0xffffffff
test   esi,esi
jg     804a858 <strcpy@plt+0x161c>
jge    804aad8 <strcpy@plt+0x189c>
cmp    DWORD PTR ds:0x8052200,0x0
je     804aa75 <strcpy@plt+0x1839>
mov    eax,ds:0x8052204
cmp    DWORD PTR ds:0x8052348,eax
je     804aa95 <strcpy@plt+0x1859>
push   0x5
push   0x804ff50
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052200,eax
mov    eax,ds:0x8052348
mov    ds:0x8052204,eax
mov    eax,ds:0x8052200
push   eax
push   0x0
push   0x0
call   804ecf0 <error@@Base>
mov    eax,ds:0x8052270
push   eax
call   804919c <free@plt>
mov    ebx,DWORD PTR ds:0x8051fbc
add    esp,0x10
test   ebx,ebx
je     804aace <strcpy@plt+0x1892>
mov    eax,ebx
mov    ebx,DWORD PTR [ebx+0x10]
push   eax
call   804919c <free@plt>
add    esp,0x4
test   ebx,ebx
jne    804aabc <strcpy@plt+0x1880>
mov    DWORD PTR ds:0x805226c,0x0
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
push   0xc
call   804f3b0 <error_at_line@@Base+0x600>
mov    esi,eax
mov    eax,ds:0x805223c
mov    DWORD PTR [esi+0x8],eax
mov    DWORD PTR ds:0x805223c,esi
push   ebx
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [esi],eax
add    esp,0x8
test   edi,edi
je     804ab30 <strcpy@plt+0x18f4>
push   edi
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [esi+0x4],eax
jmp    804ab37 <strcpy@plt+0x18fb>
lea    esi,[esi+0x0]
mov    DWORD PTR [esi+0x4],0x0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
jmp    804ab50 <strcpy@plt+0x1914>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x20
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x20],0x0
call   8048fac <__errno_location@plt>
mov    ebx,eax
mov    DWORD PTR [ebx],0x0
push   esi
call   804913c <opendir@plt>
mov    edi,eax
add    esp,0x4
test   edi,edi
jne    804aba0 <strcpy@plt+0x1964>
push   esi
push   0x804ff84
mov    eax,DWORD PTR [ebx]
push   eax
push   0x0
call   804ecf0 <error@@Base>
mov    DWORD PTR ds:0x80522b0,0x1
jmp    804adf7 <strcpy@plt+0x1bbb>
mov    esi,esi
call   804aeb0 <strcpy@plt+0x1c74>
lea    esi,[esi+0x0]
push   edi
call   804920c <readdir@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     804abe0 <strcpy@plt+0x19a4>
push   ebx
call   804ae40 <strcpy@plt+0x1c04>
add    esp,0x4
test   eax,eax
je     804aba8 <strcpy@plt+0x196c>
push   esi
push   0x0
lea    eax,[ebx+0xb]
push   eax
call   804af20 <strcpy@plt+0x1ce4>
add    DWORD PTR [ebp-0x20],eax
add    esp,0xc
jmp    804aba8 <strcpy@plt+0x196c>
nop
lea    esi,[esi+eiz*1+0x0]
push   edi
call   804912c <closedir@plt>
add    esp,0x4
test   eax,eax
je     804ac0f <strcpy@plt+0x19d3>
push   esi
push   0x804ff84
call   8048fac <__errno_location@plt>
mov    eax,DWORD PTR [eax]
push   eax
push   0x0
call   804ecf0 <error@@Base>
mov    DWORD PTR ds:0x80522b0,0x1
add    esp,0x10
call   804b690 <strcpy@plt+0x2454>
cmp    DWORD PTR ds:0x805227c,0x0
je     804ac28 <strcpy@plt+0x19ec>
push   0x1
push   esi
call   804b480 <strcpy@plt+0x2244>
add    esp,0x8
cmp    DWORD PTR ds:0x80522a4,0x0
je     804ad54 <strcpy@plt+0x1b18>
cmp    DWORD PTR ds:0x8052264,0x0
je     804ac61 <strcpy@plt+0x1a25>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804ac61 <strcpy@plt+0x1a25>
mov    eax,ds:0x80521a4
push   eax
push   0x804ff87
call   804904c <fputs@plt>
add    DWORD PTR ds:0x80522bc,0x2
add    esp,0x8
mov    edi,DWORD PTR [ebp+0xc]
test   edi,edi
jne    804ac6a <strcpy@plt+0x1a2e>
mov    edi,esi
cmp    DWORD PTR ds:0x8052264,0x0
je     804acc0 <strcpy@plt+0x1a84>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804acc0 <strcpy@plt+0x1a84>
mov    ebx,0x80522ec
mov    esi,0x4
mov    eax,ds:0x80522f8
add    eax,0x4
cmp    DWORD PTR ds:0x80522fc,eax
jae    804aca5 <strcpy@plt+0x1a69>
push   0x4
push   0x80522ec
call   80491ac <_obstack_newchunk@plt>
add    esp,0x8
test   BYTE PTR [ebx+0x28],0x4
jne    804acc0 <strcpy@plt+0x1a84>
mov    eax,DWORD PTR [ebx+0xc]
push   esi
push   0x80522bc
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebx+0xc],esi
mov    eax,ds:0x80521a4
push   eax
push   edi
call   804904c <fputs@plt>
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
dec    eax
add    DWORD PTR ds:0x80522bc,eax
add    esp,0x8
cmp    DWORD PTR ds:0x8052264,0x0
je     804ad3a <strcpy@plt+0x1afe>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804ad3a <strcpy@plt+0x1afe>
mov    ebx,0x80522ec
mov    esi,0x4
mov    eax,ds:0x80522f8
add    eax,0x4
cmp    DWORD PTR ds:0x80522fc,eax
jae    804ad1f <strcpy@plt+0x1ae3>
push   0x4
push   0x80522ec
call   80491ac <_obstack_newchunk@plt>
add    esp,0x8
test   BYTE PTR [ebx+0x28],0x4
jne    804ad3a <strcpy@plt+0x1afe>
mov    eax,DWORD PTR [ebx+0xc]
push   esi
push   0x80522bc
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebx+0xc],esi
mov    eax,ds:0x80521a4
push   eax
push   0x804ff8a
call   804904c <fputs@plt>
add    DWORD PTR ds:0x80522bc,0x2
add    esp,0x8
cmp    DWORD PTR ds:0x8052248,0x0
je     804ad66 <strcpy@plt+0x1b2a>
cmp    DWORD PTR ds:0x805225c,0x0
je     804adcd <strcpy@plt+0x1b91>
cmp    DWORD PTR ds:0x8052264,0x0
je     804ad92 <strcpy@plt+0x1b56>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804ad92 <strcpy@plt+0x1b56>
mov    eax,ds:0x80521a4
push   eax
push   0x804ff87
call   804904c <fputs@plt>
add    DWORD PTR ds:0x80522bc,0x2
add    esp,0x8
mov    edx,DWORD PTR [ebp-0x20]
push   edx
push   0x804ff8d
lea    ebx,[ebp-0x1c]
push   ebx
call   80491fc <sprintf@plt>
add    esp,0xc
mov    eax,ds:0x80521a4
push   eax
push   ebx
call   804904c <fputs@plt>
xor    al,al
mov    edi,ebx
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
dec    eax
add    DWORD PTR ds:0x80522bc,eax
add    esp,0x8
cmp    DWORD PTR ds:0x8052238,0x0
je     804addb <strcpy@plt+0x1b9f>
call   804ba30 <strcpy@plt+0x27f4>
cmp    DWORD PTR ds:0x805223c,0x0
je     804adf7 <strcpy@plt+0x1bbb>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
inc    DWORD PTR ds:0x80522bc
lea    esp,[ebp-0x2c]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
jmp    804ae10 <strcpy@plt+0x1bd4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x8
call   804f3b0 <error_at_line@@Base+0x600>
mov    edx,eax
mov    DWORD PTR [edx],ebx
mov    eax,ds:0x805228c
mov    DWORD PTR [edx+0x4],eax
mov    DWORD PTR ds:0x805228c,edx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR ds:0x805228c
test   ebx,ebx
je     804ae71 <strcpy@plt+0x1c35>
lea    esi,[edi+0xb]
mov    esi,esi
push   0x4
push   esi
mov    eax,DWORD PTR [ebx]
push   eax
call   8048f0c <fnmatch@plt>
add    esp,0xc
test   eax,eax
je     804aea0 <strcpy@plt+0x1c64>
mov    ebx,DWORD PTR [ebx+0x4]
test   ebx,ebx
jne    804ae58 <strcpy@plt+0x1c1c>
cmp    DWORD PTR ds:0x8052288,0x0
jne    804ae96 <strcpy@plt+0x1c5a>
cmp    BYTE PTR [edi+0xb],0x2e
jne    804ae96 <strcpy@plt+0x1c5a>
cmp    DWORD PTR ds:0x8052284,0x0
je     804aea0 <strcpy@plt+0x1c64>
cmp    BYTE PTR [edi+0xc],0x0
je     804aea0 <strcpy@plt+0x1c64>
cmp    WORD PTR [edi+0xc],0x2e
je     804aea0 <strcpy@plt+0x1c64>
mov    eax,0x1
jmp    804aea2 <strcpy@plt+0x1c66>
lea    esi,[esi+0x0]
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
xor    esi,esi
cmp    DWORD PTR ds:0x8052238,esi
jle    804af00 <strcpy@plt+0x1cc4>
nop
mov    eax,ds:0x8052230
lea    edx,[esi+esi*2]
lea    edx,[edx+edx*8]
lea    ebx,[edx*4+0x0]
mov    eax,DWORD PTR [eax+ebx*1]
push   eax
call   804919c <free@plt>
mov    eax,ds:0x8052230
add    esp,0x4
cmp    DWORD PTR [eax+ebx*1+0x5c],0x0
je     804aef7 <strcpy@plt+0x1cbb>
mov    eax,DWORD PTR [eax+ebx*1+0x5c]
push   eax
call   804919c <free@plt>
add    esp,0x4
inc    esi
cmp    DWORD PTR ds:0x8052238,esi
jg     804aec0 <strcpy@plt+0x1c84>
mov    DWORD PTR ds:0x8052238,0x0
mov    DWORD PTR ds:0x8052244,0x4
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x5c
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804f7c0 <error_at_line@@Base+0xa10>
add    esp,0x4
test   eax,eax
je     804af40 <strcpy@plt+0x1d04>
xor    eax,eax
jmp    804b369 <strcpy@plt+0x212d>
mov    eax,ds:0x8052238
cmp    DWORD PTR ds:0x8052234,eax
jne    804af71 <strcpy@plt+0x1d35>
add    eax,eax
mov    ds:0x8052234,eax
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
push   eax
mov    eax,ds:0x8052230
push   eax
call   804f3e0 <error_at_line@@Base+0x630>
mov    ds:0x8052230,eax
add    esp,0x8
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
mov    DWORD PTR [edx+eax*1+0x5c],0x0
mov    DWORD PTR [edx+eax*1+0x60],0x0
cmp    DWORD PTR [ebp+0xc],0x0
jne    804afa8 <strcpy@plt+0x1d6c>
cmp    DWORD PTR ds:0x80522ac,0x0
je     804b340 <strcpy@plt+0x2104>
mov    ebx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ebx],0x2f
je     804afb8 <strcpy@plt+0x1d7c>
mov    ebx,DWORD PTR [ebp+0x10]
cmp    BYTE PTR [ebx],0x0
jne    804afc0 <strcpy@plt+0x1d84>
mov    esi,DWORD PTR [ebp+0x8]
jmp    804affb <strcpy@plt+0x1dbf>
lea    esi,[esi+0x0]
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edx,ecx
not    edx
mov    edi,DWORD PTR [ebp+0x10]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    eax,[edx+eax*1+0x3]
and    al,0xfc
sub    esp,eax
mov    esi,esp
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
push   ebx
push   esi
call   804cba0 <strcpy@plt+0x3964>
add    esp,0xc
cmp    DWORD PTR ds:0x8052278,0x0
je     804b02b <strcpy@plt+0x1def>
mov    eax,ds:0x8052238
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
add    eax,0x4
push   eax
push   esi
push   0x3
call   8048ffc <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804b080 <strcpy@plt+0x1e44>
mov    eax,ds:0x8052238
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
add    eax,0x4
push   eax
push   esi
push   0x3
call   804905c <__lxstat@plt>
add    esp,0xc
test   eax,eax
jge    804b080 <strcpy@plt+0x1e44>
push   esi
push   0x804ff84
call   8048fac <__errno_location@plt>
mov    eax,DWORD PTR [eax]
push   eax
push   0x0
call   804ecf0 <error@@Base>
mov    DWORD PTR ds:0x80522b0,0x1
xor    eax,eax
jmp    804b369 <strcpy@plt+0x212d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    eax,DWORD PTR [edx+eax*4+0x14]
and    eax,0xf000
cmp    eax,0xa000
jne    804b1da <strcpy@plt+0x1f9e>
cmp    DWORD PTR [ebp+0xc],0x0
jne    804b0b8 <strcpy@plt+0x1e7c>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804b1da <strcpy@plt+0x1f9e>
mov    eax,ds:0x8052238
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
push   esi
call   804b380 <strcpy@plt+0x2144>
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    eax,DWORD PTR [edx+eax*4+0x5c]
push   eax
push   esi
call   804b3f0 <strcpy@plt+0x21b4>
mov    DWORD PTR [ebp-0x5c],eax
add    esp,0x10
test   eax,eax
je     804b1da <strcpy@plt+0x1f9e>
cmp    DWORD PTR [ebp+0xc],0x0
je     804b10c <strcpy@plt+0x1ed0>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804b119 <strcpy@plt+0x1edd>
cmp    DWORD PTR ds:0x8052268,0x0
je     804b1c8 <strcpy@plt+0x1f8c>
lea    eax,[ebp-0x58]
push   eax
mov    ebx,DWORD PTR [ebp-0x5c]
push   ebx
push   0x3
call   8048ffc <__xstat@plt>
add    esp,0xc
test   eax,eax
jne    804b1c8 <strcpy@plt+0x1f8c>
cmp    DWORD PTR [ebp+0xc],0x0
je     804b1b0 <strcpy@plt+0x1f74>
cmp    DWORD PTR ds:0x8052248,0x0
je     804b1b0 <strcpy@plt+0x1f74>
mov    eax,DWORD PTR [ebp-0x48]
and    eax,0xf000
cmp    eax,0x4000
jne    804b1b0 <strcpy@plt+0x1f74>
cmp    DWORD PTR ds:0x8052280,0x0
jne    804b17f <strcpy@plt+0x1f43>
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp+0x8],ebx
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
mov    ebx,DWORD PTR [edx+eax*1+0x5c]
mov    DWORD PTR [ebp-0x5c],ebx
mov    DWORD PTR [edx+eax*1+0x5c],ecx
mov    eax,ds:0x8052238
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
mov    edi,eax
add    edi,DWORD PTR ds:0x8052230
add    edi,0x4
lea    esi,[ebp-0x58]
cld    
mov    ecx,0x16
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
jmp    804b1c8 <strcpy@plt+0x1f8c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    ecx,[eax+eax*2]
lea    ecx,[ecx+ecx*8]
mov    eax,DWORD PTR [ebp-0x48]
mov    DWORD PTR [edx+ecx*4+0x60],eax
cmp    DWORD PTR [ebp-0x5c],0x0
je     804b1da <strcpy@plt+0x1f9e>
mov    ebx,DWORD PTR [ebp-0x5c]
push   ebx
call   804919c <free@plt>
add    esp,0x4
mov    eax,ds:0x8052238
mov    ecx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ecx+edx*1+0x14]
and    eax,0xf000
cmp    eax,0xa000
jne    804b210 <strcpy@plt+0x1fd4>
mov    DWORD PTR [ecx+edx*1+0x68],0x0
jmp    804b299 <strcpy@plt+0x205d>
nop
mov    eax,ds:0x8052238
mov    ecx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ecx+edx*1+0x14]
and    eax,0xf000
cmp    eax,0x4000
jne    804b280 <strcpy@plt+0x2044>
cmp    DWORD PTR [ebp+0xc],0x0
je     804b260 <strcpy@plt+0x2024>
cmp    DWORD PTR ds:0x8052280,0x0
jne    804b260 <strcpy@plt+0x2024>
mov    DWORD PTR [ecx+edx*1+0x68],0x2
jmp    804b299 <strcpy@plt+0x205d>
jmp    804b260 <strcpy@plt+0x2024>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    DWORD PTR [edx+eax*4+0x68],0x1
jmp    804b299 <strcpy@plt+0x205d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    DWORD PTR [edx+eax*4+0x68],0x3
cmp    DWORD PTR ds:0x8052260,0x0
je     804b2d0 <strcpy@plt+0x2094>
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    esi,DWORD PTR [edx+eax*4+0x38]
inc    esi
mov    eax,esi
shr    eax,0x1f
add    eax,esi
mov    esi,eax
sar    esi,0x1
jmp    804b2e5 <strcpy@plt+0x20a9>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    esi,DWORD PTR [edx+eax*4+0x38]
cmp    esi,0x270f
jle    804b300 <strcpy@plt+0x20c4>
cmp    DWORD PTR ds:0x8052244,0x4
jg     804b300 <strcpy@plt+0x20c4>
mov    DWORD PTR ds:0x8052244,0x5
cmp    esi,0x1869f
jle    804b31b <strcpy@plt+0x20df>
cmp    DWORD PTR ds:0x8052244,0x5
jg     804b31b <strcpy@plt+0x20df>
mov    DWORD PTR ds:0x8052244,0x6
cmp    esi,0xf423f
jle    804b342 <strcpy@plt+0x2106>
cmp    DWORD PTR ds:0x8052244,0x6
jg     804b342 <strcpy@plt+0x2106>
mov    DWORD PTR ds:0x8052244,0x7
jmp    804b342 <strcpy@plt+0x2106>
nop
lea    esi,[esi+eiz*1+0x0]
xor    esi,esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804f420 <error_at_line@@Base+0x670>
mov    ecx,eax
mov    eax,ds:0x8052238
mov    edx,DWORD PTR ds:0x8052230
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*8]
mov    DWORD PTR [edx+eax*4],ecx
inc    DWORD PTR ds:0x8052238
mov    eax,esi
lea    esp,[ebp-0x68]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
add    esp,0xffffeffc
mov    ebx,esp
push   0x1000
push   ebx
push   esi
call   8048eac <readlink@plt>
add    esp,0xc
test   eax,eax
jge    804b3d0 <strcpy@plt+0x2194>
push   esi
push   0x804ff84
call   8048fac <__errno_location@plt>
mov    eax,DWORD PTR [eax]
push   eax
push   0x0
call   804ecf0 <error@@Base>
mov    DWORD PTR ds:0x80522b0,0x1
jmp    804b3dd <strcpy@plt+0x21a1>
nop
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [eax+ebx*1],0x0
push   ebx
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [edi+0x5c],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
test   esi,esi
jne    804b410 <strcpy@plt+0x21d4>
xor    eax,eax
jmp    804b476 <strcpy@plt+0x223a>
jmp    804b410 <strcpy@plt+0x21d4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [esi],0x2f
je     804b470 <strcpy@plt+0x2234>
push   0x2f
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   80490fc <strrchr@plt>
mov    edi,eax
add    esp,0x8
test   edi,edi
je     804b470 <strcpy@plt+0x2234>
mov    ebx,edi
sub    ebx,DWORD PTR [ebp+0x8]
inc    ebx
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    eax,ebx
push   eax
call   804f3b0 <error_at_line@@Base+0x600>
mov    edi,eax
add    esp,0x4
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
push   edi
call   80491dc <strncpy@plt>
add    esp,0xc
push   esi
add    ebx,edi
push   ebx
call   804923c <strcpy@plt>
mov    eax,edi
jmp    804b476 <strcpy@plt+0x223a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   esi
call   804f420 <error_at_line@@Base+0x670>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
xor    dl,dl
mov    edi,DWORD PTR [ebp+0x8]
mov    al,dl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    esi,ecx
inc    esi
mov    DWORD PTR [ebp-0x8],esi
mov    eax,ds:0x8052238
dec    eax
mov    DWORD PTR [ebp-0x4],eax
js     804b5d5 <strcpy@plt+0x2399>
nop
mov    ecx,DWORD PTR ds:0x8052230
mov    esi,DWORD PTR [ebp-0x4]
lea    esi,[esi+esi*2]
mov    DWORD PTR [ebp-0xc],esi
lea    eax,[esi+esi*8]
lea    edx,[eax*4+0x0]
mov    esi,DWORD PTR [ecx+edx*1+0x68]
dec    esi
cmp    esi,0x1
ja     804b5cc <strcpy@plt+0x2390>
cmp    DWORD PTR [ebp+0xc],0x0
je     804b4f1 <strcpy@plt+0x22b5>
mov    eax,DWORD PTR [ecx+edx*1]
push   eax
call   804b640 <strcpy@plt+0x2404>
add    esp,0x4
test   eax,eax
je     804b5cc <strcpy@plt+0x2390>
mov    eax,DWORD PTR [ebp-0x4]
lea    edx,[eax+eax*2]
lea    edx,[edx+edx*8]
mov    esi,DWORD PTR ds:0x8052230
mov    edx,DWORD PTR [esi+edx*4]
mov    DWORD PTR [ebp-0xc],edx
cmp    BYTE PTR [edx],0x2f
je     804b513 <strcpy@plt+0x22d7>
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x0
jne    804b540 <strcpy@plt+0x2304>
mov    ecx,DWORD PTR ds:0x8052230
mov    esi,DWORD PTR [ebp-0x4]
lea    edx,[esi+esi*2]
lea    edx,[edx+edx*8]
shl    edx,0x2
mov    eax,DWORD PTR [ecx+edx*1+0x5c]
push   eax
mov    edx,DWORD PTR [ecx+edx*1]
mov    DWORD PTR [ebp-0xc],edx
push   edx
call   804aaf0 <strcpy@plt+0x18b4>
add    esp,0x8
jmp    804b5a7 <strcpy@plt+0x236b>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x4]
lea    edx,[esi+esi*2]
lea    edx,[edx+edx*8]
lea    ebx,[edx*4+0x0]
xor    dl,dl
mov    eax,ds:0x8052230
mov    edi,DWORD PTR [eax+ebx*1]
mov    al,dl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0xc],ecx
mov    esi,DWORD PTR [ebp-0x8]
lea    esi,[esi+ecx*1-0x1]
push   esi
call   804f3b0 <error_at_line@@Base+0x600>
mov    edi,eax
mov    eax,ds:0x8052230
mov    eax,DWORD PTR [eax+ebx*1]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
push   esi
push   edi
call   804cba0 <strcpy@plt+0x3964>
mov    eax,ds:0x8052230
mov    ebx,DWORD PTR [eax+ebx*1+0x5c]
mov    DWORD PTR [ebp-0xc],ebx
push   ebx
push   edi
call   804aaf0 <strcpy@plt+0x18b4>
push   edi
call   804919c <free@plt>
add    esp,0x1c
mov    edx,DWORD PTR ds:0x8052230
mov    esi,DWORD PTR [ebp-0x4]
lea    ecx,[esi+esi*2]
lea    ecx,[ecx+ecx*8]
shl    ecx,0x2
cmp    DWORD PTR [edx+ecx*1+0x68],0x2
jne    804b5cc <strcpy@plt+0x2390>
mov    eax,DWORD PTR [edx+ecx*1]
push   eax
call   804919c <free@plt>
add    esp,0x4
dec    DWORD PTR [ebp-0x4]
jns    804b4b0 <strcpy@plt+0x2274>
mov    DWORD PTR [ebp-0x4],0x0
xor    ebx,ebx
cmp    DWORD PTR ds:0x8052238,ebx
jle    804b62b <strcpy@plt+0x23ef>
mov    esi,esi
mov    edx,DWORD PTR ds:0x8052230
mov    eax,DWORD PTR [ebp-0x4]
lea    eax,[eax+eax*2]
mov    DWORD PTR [ebp-0xc],eax
lea    esi,[eax+eax*8]
lea    ecx,[esi*4+0x0]
cmp    DWORD PTR [edx+ecx*1+0x68],0x2
je     804b61d <strcpy@plt+0x23e1>
lea    eax,[ebx+ebx*2]
lea    eax,[eax+eax*8]
lea    edi,[edx+eax*4]
lea    esi,[edx+ecx*1]
cld    
mov    ecx,0x1b
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
inc    ebx
inc    DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x4]
cmp    DWORD PTR ds:0x8052238,eax
jg     804b5e8 <strcpy@plt+0x23ac>
mov    DWORD PTR ds:0x8052238,ebx
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x2f
push   ebx
call   80490fc <strrchr@plt>
test   eax,eax
je     804b656 <strcpy@plt+0x241a>
lea    ebx,[eax+0x1]
cmp    BYTE PTR [ebx],0x2e
jne    804b680 <strcpy@plt+0x2444>
cmp    BYTE PTR [ebx+0x1],0x0
je     804b66d <strcpy@plt+0x2431>
cmp    BYTE PTR [ebx+0x1],0x2e
jne    804b680 <strcpy@plt+0x2444>
cmp    BYTE PTR [ebx+0x2],0x0
jne    804b680 <strcpy@plt+0x2444>
xor    eax,eax
jmp    804b685 <strcpy@plt+0x2449>
jmp    804b680 <strcpy@plt+0x2444>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,0x1
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x8052250,0x4
ja     804b7c0 <strcpy@plt+0x2584>
mov    eax,ds:0x8052250
jmp    DWORD PTR [eax*4+0x804b6b0]
lea    esi,[esi+eiz*1+0x0]
in     al,0xb7
add    al,0x8
pusha  
mov    bh,0x4
or     BYTE PTR [eax-0x2ff7fb49],al
mov    dh,0x4
or     BYTE PTR [eax-0x72f7fb49],ah
mov    dh,0x0
add    BYTE PTR [eax],al
add    BYTE PTR [ebp+0xbf],cl
add    BYTE PTR [ecx+0x805224c],ah
cmp    eax,0x1
je     804b6f0 <strcpy@plt+0x24b4>
jb     804b710 <strcpy@plt+0x24d4>
cmp    eax,0x2
je     804b730 <strcpy@plt+0x24f4>
jmp    804b750 <strcpy@plt+0x2514>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x804b7f0
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b810
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x804b830
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b850
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x804b870
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b890
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
call   8048fec <abort@plt>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x804b8f0
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b910
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x804b930
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b9b0
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x804b8b0
cmp    DWORD PTR ds:0x8052254,0x0
je     804b7d0 <strcpy@plt+0x2594>
mov    eax,0x804b8d0
jmp    804b7d0 <strcpy@plt+0x2594>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
call   8048fec <abort@plt>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   0x6c
mov    eax,ds:0x8052238
push   eax
mov    eax,ds:0x8052230
push   eax
call   804907c <qsort@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+0x4c]
sub    eax,DWORD PTR [edx+0x4c]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [edx+0x4c]
sub    edx,DWORD PTR [eax+0x4c]
mov    eax,edx
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+0x44]
sub    eax,DWORD PTR [edx+0x44]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [edx+0x44]
sub    edx,DWORD PTR [eax+0x44]
mov    eax,edx
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+0x3c]
sub    eax,DWORD PTR [edx+0x3c]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [edx+0x3c]
sub    edx,DWORD PTR [eax+0x3c]
mov    eax,edx
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+0x30]
sub    eax,DWORD PTR [edx+0x30]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [edx+0x30]
sub    edx,DWORD PTR [eax+0x30]
mov    eax,edx
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
push   eax
mov    eax,DWORD PTR [edx]
push   eax
call   8048f1c <strcmp@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
push   eax
mov    eax,DWORD PTR [edx]
push   eax
call   8048f1c <strcmp@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
push   0x2e
mov    eax,DWORD PTR [edi]
push   eax
call   80490fc <strrchr@plt>
mov    ebx,eax
push   0x2e
mov    eax,DWORD PTR [esi]
push   eax
call   80490fc <strrchr@plt>
add    esp,0x10
test   ebx,ebx
jne    804b970 <strcpy@plt+0x2734>
test   eax,eax
je     804b98e <strcpy@plt+0x2752>
test   ebx,ebx
jne    804b970 <strcpy@plt+0x2734>
mov    eax,0xffffffff
jmp    804b999 <strcpy@plt+0x275d>
nop
lea    esi,[esi+eiz*1+0x0]
test   eax,eax
jne    804b980 <strcpy@plt+0x2744>
mov    eax,0x1
jmp    804b999 <strcpy@plt+0x275d>
nop
lea    esi,[esi+eiz*1+0x0]
push   eax
push   ebx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804b999 <strcpy@plt+0x275d>
mov    eax,DWORD PTR [esi]
push   eax
mov    eax,DWORD PTR [edi]
push   eax
call   8048f1c <strcmp@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
push   0x2e
mov    eax,DWORD PTR [edi]
push   eax
call   80490fc <strrchr@plt>
mov    ebx,eax
push   0x2e
mov    eax,DWORD PTR [esi]
push   eax
call   80490fc <strrchr@plt>
add    esp,0x10
test   ebx,ebx
jne    804b9f0 <strcpy@plt+0x27b4>
test   eax,eax
je     804ba0e <strcpy@plt+0x27d2>
test   ebx,ebx
jne    804b9f0 <strcpy@plt+0x27b4>
mov    eax,0xffffffff
jmp    804ba19 <strcpy@plt+0x27dd>
nop
lea    esi,[esi+eiz*1+0x0]
test   eax,eax
jne    804ba00 <strcpy@plt+0x27c4>
mov    eax,0x1
jmp    804ba19 <strcpy@plt+0x27dd>
nop
lea    esi,[esi+eiz*1+0x0]
push   eax
push   ebx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804ba19 <strcpy@plt+0x27dd>
mov    eax,DWORD PTR [esi]
push   eax
mov    eax,DWORD PTR [edi]
push   eax
call   8048f1c <strcmp@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
cmp    DWORD PTR ds:0x8052248,0x4
ja     804bb33 <strcpy@plt+0x28f7>
mov    eax,ds:0x8052248
jmp    DWORD PTR [eax*4+0x804ba50]
lea    esi,[esi+0x0]
lock mov edx,0xba700804
add    al,0x8
sar    BYTE PTR [edx-0x452ff7fc],0x4
or     al,ah
mov    edx,0xb68d0804
add    BYTE PTR [eax],al
add    BYTE PTR [eax],al
lea    edi,[edi+0x0]
xor    ebx,ebx
cmp    DWORD PTR ds:0x8052238,ebx
jle    804bb33 <strcpy@plt+0x28f7>
mov    esi,esi
lea    eax,[ebx+ebx*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c390 <strcpy@plt+0x3154>
add    esp,0x4
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    ebx
cmp    DWORD PTR ds:0x8052238,ebx
jg     804ba80 <strcpy@plt+0x2844>
jmp    804bb33 <strcpy@plt+0x28f7>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
call   804c820 <strcpy@plt+0x35e4>
jmp    804bb33 <strcpy@plt+0x28f7>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
call   804c940 <strcpy@plt+0x3704>
jmp    804bb33 <strcpy@plt+0x28f7>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
call   804ca40 <strcpy@plt+0x3804>
jmp    804bb33 <strcpy@plt+0x28f7>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
xor    ebx,ebx
cmp    DWORD PTR ds:0x8052238,ebx
jle    804bb33 <strcpy@plt+0x28f7>
mov    esi,esi
lea    eax,[ebx+ebx*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804bb40 <strcpy@plt+0x2904>
add    esp,0x4
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
inc    ebx
cmp    DWORD PTR ds:0x8052238,ebx
jg     804bafc <strcpy@plt+0x28c0>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xf8
push   edi
push   esi
push   ebx
lea    eax,[ebp-0x14]
push   eax
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x14]
push   eax
call   804ef00 <error_at_line@@Base+0x150>
mov    BYTE PTR [ebp-0xa],0x0
add    esp,0x8
mov    eax,ds:0x805224c
cmp    eax,0x1
je     804bb80 <strcpy@plt+0x2944>
jb     804bb90 <strcpy@plt+0x2954>
cmp    eax,0x2
je     804bba0 <strcpy@plt+0x2964>
jmp    804bbac <strcpy@plt+0x2970>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x4c]
jmp    804bba6 <strcpy@plt+0x296a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x44]
jmp    804bba6 <strcpy@plt+0x296a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x3c]
mov    DWORD PTR [ebp-0xf8],eax
lea    eax,[ebp-0xf8]
push   eax
call   804910c <ctime@plt>
add    esp,0x4
push   eax
lea    eax,[ebp-0x3c]
push   eax
call   804923c <strcpy@plt>
add    esp,0x8
cmp    DWORD PTR ds:0x8052340,0x0
je     804bbe0 <strcpy@plt+0x29a4>
mov    BYTE PTR [ebp-0x24],0x0
jmp    804bc1a <strcpy@plt+0x29de>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0xf8]
add    eax,0xed4e00
cmp    DWORD PTR ds:0x8052240,eax
jg     804bc06 <strcpy@plt+0x29ca>
mov    eax,DWORD PTR [ebp-0xf8]
add    eax,0xfffff1f0
cmp    DWORD PTR ds:0x8052240,eax
jge    804bc16 <strcpy@plt+0x29da>
lea    eax,[ebp-0x29]
push   eax
lea    eax,[ebp-0x31]
push   eax
call   804923c <strcpy@plt>
add    esp,0x8
mov    BYTE PTR [ebp-0x2c],0x0
lea    esi,[ebp-0xf4]
cmp    DWORD PTR ds:0x8052274,0x0
je     804bc54 <strcpy@plt+0x2a18>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x10]
push   eax
push   0x7
push   0x804ff97
push   esi
call   80491fc <sprintf@plt>
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
add    esp,0x10
cmp    DWORD PTR ds:0x805225c,0x0
je     804bcaf <strcpy@plt+0x2a73>
cmp    DWORD PTR ds:0x8052260,0x0
je     804bc80 <strcpy@plt+0x2a44>
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [edx+0x38]
inc    ecx
mov    eax,ecx
shr    eax,0x1f
add    eax,ecx
mov    ecx,eax
sar    ecx,0x1
jmp    804bc86 <strcpy@plt+0x2a4a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [edx+0x38]
push   ecx
mov    eax,ds:0x8052244
push   eax
push   0x804ff9d
push   esi
call   80491fc <sprintf@plt>
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
add    esp,0x10
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x18]
push   eax
lea    eax,[ebp-0x14]
push   eax
push   0x804ffa2
push   esi
call   80491fc <sprintf@plt>
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
add    esp,0x10
cmp    DWORD PTR ds:0x8052258,0x0
je     804bd00 <strcpy@plt+0x2ac4>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x1c]
push   eax
push   0x804ffaa
push   esi
call   80491fc <sprintf@plt>
add    esp,0xc
jmp    804bd1b <strcpy@plt+0x2adf>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x1c]
push   eax
call   804f110 <error_at_line@@Base+0x360>
push   eax
push   0x804ffb0
push   esi
call   80491fc <sprintf@plt>
add    esp,0x10
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
cmp    DWORD PTR ds:0x8052338,0x0
jne    804bd8f <strcpy@plt+0x2b53>
cmp    DWORD PTR ds:0x8052258,0x0
je     804bd60 <strcpy@plt+0x2b24>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x20]
push   eax
push   0x804ffaa
push   esi
call   80491fc <sprintf@plt>
add    esp,0xc
jmp    804bd7b <strcpy@plt+0x2b3f>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x20]
push   eax
call   804f240 <error_at_line@@Base+0x490>
push   eax
push   0x804ffb0
push   esi
call   80491fc <sprintf@plt>
add    esp,0x10
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x14]
and    eax,0xf000
cmp    eax,0x2000
je     804bda8 <strcpy@plt+0x2b6c>
cmp    eax,0x6000
jne    804bdd0 <strcpy@plt+0x2b94>
mov    edx,DWORD PTR [ebp+0x8]
movzx  eax,BYTE PTR [edx+0x24]
push   eax
movzx  eax,BYTE PTR [edx+0x25]
push   eax
push   0x804ffb8
push   esi
call   80491fc <sprintf@plt>
add    esp,0x10
jmp    804bde5 <strcpy@plt+0x2ba9>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x30]
push   eax
push   0x804ffc2
push   esi
call   80491fc <sprintf@plt>
add    esp,0xc
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
cmp    DWORD PTR ds:0x8052340,0x0
je     804be10 <strcpy@plt+0x2bd4>
lea    eax,[ebp-0x3c]
jmp    804be13 <strcpy@plt+0x2bd7>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
lea    eax,[ebp-0x38]
push   eax
push   0x804ffc8
push   esi
call   80491fc <sprintf@plt>
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    esi,[esi+eax*1-0x1]
add    esp,0xc
cmp    DWORD PTR ds:0x8052264,0x0
je     804be62 <strcpy@plt+0x2c26>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804be62 <strcpy@plt+0x2c26>
mov    eax,ds:0x80521a4
push   eax
push   0x804ff87
call   804904c <fputs@plt>
add    DWORD PTR ds:0x80522bc,0x2
add    esp,0x8
mov    eax,ds:0x80521a4
push   eax
lea    ebx,[ebp-0xf4]
push   ebx
call   804904c <fputs@plt>
mov    eax,esi
sub    eax,ebx
add    DWORD PTR ds:0x80522bc,eax
add    esp,0x8
cmp    DWORD PTR ds:0x8052264,0x0
je     804bed7 <strcpy@plt+0x2c9b>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804bed7 <strcpy@plt+0x2c9b>
mov    ebx,0x80522c0
mov    esi,0x4
mov    eax,ds:0x80522cc
add    eax,0x4
cmp    DWORD PTR ds:0x80522d0,eax
jae    804bebc <strcpy@plt+0x2c80>
push   0x4
push   0x80522c0
call   80491ac <_obstack_newchunk@plt>
add    esp,0x8
test   BYTE PTR [ebx+0x28],0x4
jne    804bed7 <strcpy@plt+0x2c9b>
mov    eax,DWORD PTR [ebx+0xc]
push   esi
push   0x80522bc
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebx+0xc],esi
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x64]
push   eax
mov    eax,DWORD PTR [edx+0x14]
push   eax
mov    eax,DWORD PTR [edx]
push   eax
call   804c2e0 <strcpy@plt+0x30a4>
add    esp,0xc
cmp    DWORD PTR ds:0x8052264,0x0
je     804bf43 <strcpy@plt+0x2d07>
cmp    DWORD PTR ds:0x8052248,0x0
jne    804bf43 <strcpy@plt+0x2d07>
mov    ebx,0x80522c0
mov    esi,0x4
mov    eax,ds:0x80522cc
add    eax,0x4
cmp    DWORD PTR ds:0x80522d0,eax
jae    804bf28 <strcpy@plt+0x2cec>
push   0x4
push   0x80522c0
call   80491ac <_obstack_newchunk@plt>
add    esp,0x8
test   BYTE PTR [ebx+0x28],0x4
jne    804bf43 <strcpy@plt+0x2d07>
mov    eax,DWORD PTR [ebx+0xc]
push   esi
push   0x80522bc
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebx+0xc],esi
mov    edx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [edx+0x68],0x0
jne    804bfa0 <strcpy@plt+0x2d64>
cmp    DWORD PTR [edx+0x5c],0x0
je     804bfb5 <strcpy@plt+0x2d79>
mov    eax,ds:0x80521a4
push   eax
push   0x804ffcc
call   804904c <fputs@plt>
add    DWORD PTR ds:0x80522bc,0x4
add    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x64]
dec    eax
push   eax
mov    eax,DWORD PTR [edx+0x60]
push   eax
mov    eax,DWORD PTR [edx+0x5c]
push   eax
call   804c2e0 <strcpy@plt+0x30a4>
add    esp,0xc
cmp    DWORD PTR ds:0x8052268,0x0
je     804bfb5 <strcpy@plt+0x2d79>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x60]
jmp    804bfaf <strcpy@plt+0x2d73>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR ds:0x8052268,0x0
je     804bfb5 <strcpy@plt+0x2d79>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x14]
push   eax
call   804c430 <strcpy@plt+0x31f4>
lea    esp,[ebp-0x104]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
cmp    DWORD PTR ds:0x8052298,0x0
jne    804c020 <strcpy@plt+0x2de4>
cmp    DWORD PTR ds:0x8052290,0x0
jne    804c020 <strcpy@plt+0x2de4>
cmp    DWORD PTR ds:0x8052294,0x0
jne    804c020 <strcpy@plt+0x2de4>
xor    al,al
mov    edx,DWORD PTR [ebp+0x8]
mov    edi,edx
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
dec    eax
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx],eax
xor    eax,eax
jmp    804c2d2 <strcpy@plt+0x3096>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
xor    edx,edx
mov    edi,DWORD PTR [ebp+0x8]
mov    cl,BYTE PTR [edi]
test   cl,cl
je     804c0cf <strcpy@plt+0x2e93>
mov    ebx,DWORD PTR ds:0x80521ac
mov    DWORD PTR [ebp-0xc],ebx
cmp    DWORD PTR ds:0x8052290,0x0
je     804c0a0 <strcpy@plt+0x2e64>
movzx  eax,cl
cmp    eax,0xd
jg     804c070 <strcpy@plt+0x2e34>
cmp    eax,0xc
jge    804c0f0 <strcpy@plt+0x2eb4>
cmp    eax,0xa
jg     804c085 <strcpy@plt+0x2e49>
cmp    eax,0x8
jl     804c085 <strcpy@plt+0x2e49>
jmp    804c0f0 <strcpy@plt+0x2eb4>
jmp    804c070 <strcpy@plt+0x2e34>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    eax,0x22
je     804c0f0 <strcpy@plt+0x2eb4>
jg     804c080 <strcpy@plt+0x2e44>
cmp    eax,0x20
je     804c0f0 <strcpy@plt+0x2eb4>
jmp    804c085 <strcpy@plt+0x2e49>
mov    esi,esi
cmp    eax,0x5c
je     804c0f0 <strcpy@plt+0x2eb4>
movzx  eax,cl
mov    edi,DWORD PTR [ebp-0xc]
cmp    WORD PTR [edi+eax*2],0x0
jl     804c0bb <strcpy@plt+0x2e7f>
jmp    804c0f0 <strcpy@plt+0x2eb4>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
movzx  eax,cl
mov    ebx,DWORD PTR [ebp-0xc]
test   BYTE PTR [ebx+eax*2+0x1],0x40
jne    804c0bb <strcpy@plt+0x2e7f>
cmp    DWORD PTR ds:0x8052294,0x0
je     804c0bb <strcpy@plt+0x2e7f>
mov    edx,0x1
test   edx,edx
jne    804c0f0 <strcpy@plt+0x2eb4>
inc    DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0x8]
mov    cl,BYTE PTR [edi]
test   cl,cl
jne    804c038 <strcpy@plt+0x2dfc>
test   edx,edx
jne    804c0f0 <strcpy@plt+0x2eb4>
cmp    DWORD PTR ds:0x8052298,0x0
jne    804c0f0 <strcpy@plt+0x2eb4>
mov    edi,DWORD PTR [ebp+0x8]
sub    edi,esi
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx],edi
xor    eax,eax
jmp    804c2d2 <strcpy@plt+0x3096>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp+0x8],esi
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    eax,[eax*4-0x3]
push   eax
call   804f3b0 <error_at_line@@Base+0x600>
mov    DWORD PTR [ebp-0xc],eax
mov    esi,DWORD PTR [ebp-0xc]
add    esp,0x4
cmp    DWORD PTR ds:0x8052298,0x0
je     804c12a <strcpy@plt+0x2eee>
mov    BYTE PTR [esi],0x22
mov    esi,DWORD PTR [ebp-0xc]
inc    esi
mov    ebx,DWORD PTR [ebp+0x8]
mov    cl,BYTE PTR [ebx]
inc    ebx
mov    DWORD PTR [ebp+0x8],ebx
test   cl,cl
je     804c2b5 <strcpy@plt+0x3079>
nop
cmp    DWORD PTR ds:0x8052290,0x0
je     804c270 <strcpy@plt+0x3034>
movzx  eax,cl
cmp    eax,0xc
je     804c200 <strcpy@plt+0x2fc4>
jg     804c180 <strcpy@plt+0x2f44>
cmp    eax,0x9
je     804c1f0 <strcpy@plt+0x2fb4>
jg     804c170 <strcpy@plt+0x2f34>
cmp    eax,0x8
je     804c1d0 <strcpy@plt+0x2f94>
jmp    804c230 <strcpy@plt+0x2ff4>
lea    esi,[esi+eiz*1+0x0]
cmp    eax,0xa
je     804c1c0 <strcpy@plt+0x2f84>
jmp    804c230 <strcpy@plt+0x2ff4>
lea    esi,[esi+0x0]
cmp    eax,0x20
je     804c210 <strcpy@plt+0x2fd4>
jg     804c1a0 <strcpy@plt+0x2f64>
cmp    eax,0xd
je     804c1e0 <strcpy@plt+0x2fa4>
jmp    804c230 <strcpy@plt+0x2ff4>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,0x22
je     804c220 <strcpy@plt+0x2fe4>
cmp    eax,0x5c
jne    804c230 <strcpy@plt+0x2ff4>
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x5c
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x6e
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x62
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x72
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x74
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x66
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x20
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi],0x5c
inc    esi
mov    BYTE PTR [esi],0x22
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+eiz*1+0x0]
movzx  edx,cl
mov    eax,ds:0x80521ac
cmp    WORD PTR [eax+edx*2],0x0
jge    804c250 <strcpy@plt+0x3014>
mov    BYTE PTR [esi],cl
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
movzx  eax,cl
push   eax
push   0x804ffd1
lea    ebx,[ebp-0x8]
push   ebx
call   80491fc <sprintf@plt>
push   ebx
push   esi
call   804908c <stpcpy@plt>
mov    esi,eax
add    esp,0x14
jmp    804c2a4 <strcpy@plt+0x3068>
movzx  edx,cl
mov    eax,ds:0x80521ac
test   BYTE PTR [eax+edx*2+0x1],0x40
je     804c290 <strcpy@plt+0x3054>
mov    BYTE PTR [esi],cl
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR ds:0x8052294,0x0
jne    804c2a0 <strcpy@plt+0x3064>
mov    BYTE PTR [esi],cl
jmp    804c2a3 <strcpy@plt+0x3067>
lea    esi,[esi+0x0]
mov    BYTE PTR [esi],0x3f
inc    esi
mov    edi,DWORD PTR [ebp+0x8]
mov    cl,BYTE PTR [edi]
inc    edi
mov    DWORD PTR [ebp+0x8],edi
test   cl,cl
jne    804c13c <strcpy@plt+0x2f00>
cmp    DWORD PTR ds:0x8052298,0x0
je     804c2c2 <strcpy@plt+0x3086>
mov    BYTE PTR [esi],0x22
inc    esi
mov    edi,esi
sub    edi,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx],edi
mov    BYTE PTR [esi],0x0
mov    eax,DWORD PTR [ebp-0xc]
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
cmp    DWORD PTR ds:0x805226c,0x0
je     804c305 <strcpy@plt+0x30c9>
push   eax
push   edx
push   esi
call   804c500 <strcpy@plt+0x32c4>
add    esp,0xc
lea    eax,[ebp-0x4]
push   eax
push   esi
call   804bfd0 <strcpy@plt+0x2d94>
mov    ebx,eax
add    esp,0x8
mov    eax,ds:0x80521a4
push   eax
mov    eax,ebx
test   ebx,ebx
jne    804c322 <strcpy@plt+0x30e6>
mov    eax,esi
push   eax
call   804904c <fputs@plt>
mov    ecx,DWORD PTR [ebp-0x4]
add    DWORD PTR ds:0x80522bc,ecx
add    esp,0x8
test   ebx,ebx
je     804c341 <strcpy@plt+0x3105>
push   ebx
call   804919c <free@plt>
add    esp,0x4
cmp    DWORD PTR ds:0x805226c,0x0
je     804c37e <strcpy@plt+0x3142>
cmp    DWORD PTR ds:0x8051f60,0x0
je     804c360 <strcpy@plt+0x3124>
push   0x8051f5c
jmp    804c379 <strcpy@plt+0x313d>
lea    esi,[esi+0x0]
push   0x8051f4c
call   804c6b0 <strcpy@plt+0x3474>
push   0x8051f64
call   804c6b0 <strcpy@plt+0x3474>
push   0x8051f54
call   804c6b0 <strcpy@plt+0x3474>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR ds:0x8052274,0x0
je     804c3b3 <strcpy@plt+0x3177>
mov    eax,DWORD PTR [ebx+0x10]
push   eax
push   0x7
push   0x804ff97
call   80490cc <printf@plt>
add    esp,0xc
cmp    DWORD PTR ds:0x805225c,0x0
je     804c3f7 <strcpy@plt+0x31bb>
cmp    DWORD PTR ds:0x8052260,0x0
je     804c3e0 <strcpy@plt+0x31a4>
mov    edx,DWORD PTR [ebx+0x38]
inc    edx
mov    eax,edx
shr    eax,0x1f
add    eax,edx
mov    edx,eax
sar    edx,0x1
jmp    804c3e3 <strcpy@plt+0x31a7>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR [ebx+0x38]
push   edx
mov    eax,ds:0x8052244
push   eax
push   0x804ff9d
call   80490cc <printf@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebx+0x64]
push   eax
mov    eax,DWORD PTR [ebx+0x14]
push   eax
mov    eax,DWORD PTR [ebx]
push   eax
call   804c2e0 <strcpy@plt+0x30a4>
add    esp,0xc
cmp    DWORD PTR ds:0x8052268,0x0
je     804c41c <strcpy@plt+0x31e0>
mov    eax,DWORD PTR [ebx+0x14]
push   eax
call   804c430 <strcpy@plt+0x31f4>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,ebx
and    eax,0xf000
cmp    eax,0x4000
jne    804c45b <strcpy@plt+0x321f>
mov    eax,ds:0x80521a4
push   eax
push   0x2f
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
mov    eax,ebx
and    eax,0xf000
cmp    eax,0xa000
jne    804c47f <strcpy@plt+0x3243>
mov    eax,ds:0x80521a4
push   eax
push   0x40
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
mov    eax,ebx
and    eax,0xf000
cmp    eax,0x1000
jne    804c4a3 <strcpy@plt+0x3267>
mov    eax,ds:0x80521a4
push   eax
push   0x7c
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
mov    eax,ebx
and    eax,0xf000
cmp    eax,0xc000
jne    804c4c7 <strcpy@plt+0x328b>
mov    eax,ds:0x80521a4
push   eax
push   0x3d
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR ds:0x80522bc
mov    eax,ebx
and    eax,0xf000
cmp    eax,0x8000
jne    804c4f6 <strcpy@plt+0x32ba>
cmp    DWORD PTR ds:0x8052268,0x1
jne    804c4f6 <strcpy@plt+0x32ba>
test   bl,0x49
je     804c4f6 <strcpy@plt+0x32ba>
mov    eax,ds:0x80521a4
push   eax
push   0x2a
call   804918c <_IO_putc@plt>
inc    DWORD PTR ds:0x80522bc
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,0x4
cmp    DWORD PTR [ebp+0x10],0xffffffff
jne    804c530 <strcpy@plt+0x32f4>
cmp    DWORD PTR ds:0x8051fa8,0x0
je     804c530 <strcpy@plt+0x32f4>
xor    ebx,ebx
mov    esi,0xb
jmp    804c664 <strcpy@plt+0x3428>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
lea    edi,[eax-0x1]
add    DWORD PTR [ebp+0x8],edi
mov    ebx,DWORD PTR ds:0x8051fbc
test   ebx,ebx
je     804c580 <strcpy@plt+0x3344>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx],edi
ja     804c571 <strcpy@plt+0x3335>
mov    eax,DWORD PTR [ebx]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
sub    eax,DWORD PTR [ebx]
push   eax
call   804909c <strncmp@plt>
add    esp,0xc
test   eax,eax
je     804c578 <strcpy@plt+0x333c>
mov    ebx,DWORD PTR [ebx+0x10]
test   ebx,ebx
jne    804c554 <strcpy@plt+0x3318>
test   ebx,ebx
jne    804c664 <strcpy@plt+0x3428>
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0x4000
jne    804c5a0 <strcpy@plt+0x3364>
mov    esi,0x5
jmp    804c654 <strcpy@plt+0x3418>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0xa000
jne    804c5e0 <strcpy@plt+0x33a4>
mov    esi,0x6
cmp    DWORD PTR [ebp+0x10],0x0
jne    804c654 <strcpy@plt+0x3418>
cmp    DWORD PTR ds:0x8051fb0,0x0
je     804c654 <strcpy@plt+0x3418>
mov    esi,0xc
jmp    804c654 <strcpy@plt+0x3418>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0x1000
jne    804c600 <strcpy@plt+0x33c4>
mov    esi,0x7
jmp    804c654 <strcpy@plt+0x3418>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0xc000
jne    804c620 <strcpy@plt+0x33e4>
mov    esi,0x8
jmp    804c654 <strcpy@plt+0x3418>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0x6000
jne    804c640 <strcpy@plt+0x3404>
mov    esi,0x9
jmp    804c654 <strcpy@plt+0x3418>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0xf000
cmp    eax,0x2000
jne    804c654 <strcpy@plt+0x3418>
mov    esi,0xa
cmp    esi,0x4
jne    804c664 <strcpy@plt+0x3428>
test   BYTE PTR [ebp+0xc],0x49
je     804c664 <strcpy@plt+0x3428>
mov    esi,0xd
push   0x8051f4c
call   804c6b0 <strcpy@plt+0x3474>
add    esp,0x4
test   ebx,ebx
je     804c680 <strcpy@plt+0x3444>
lea    eax,[ebx+0x8]
jmp    804c687 <strcpy@plt+0x344b>
lea    esi,[esi+0x0]
lea    eax,[esi*8+0x8051f4c]
push   eax
call   804c6b0 <strcpy@plt+0x3474>
push   0x8051f54
call   804c6b0 <strcpy@plt+0x3474>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
jmp    804c6b0 <strcpy@plt+0x3474>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [eax+0x4]
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
jle    804c6dc <strcpy@plt+0x34a0>
lea    esi,[esi+0x0]
movsx  edx,BYTE PTR [esi]
inc    esi
mov    eax,ds:0x80521a4
push   eax
push   edx
call   804918c <_IO_putc@plt>
add    esp,0x8
dec    ebx
test   ebx,ebx
jg     804c6c4 <strcpy@plt+0x3488>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [esi]
xor    ecx,ecx
cmp    DWORD PTR ds:0x8052274,0x0
je     804c70a <strcpy@plt+0x34ce>
mov    ecx,0x8
cmp    DWORD PTR ds:0x805225c,0x0
je     804c71a <strcpy@plt+0x34de>
inc    ecx
add    ecx,DWORD PTR ds:0x8052244
cmp    DWORD PTR ds:0x8052298,0x0
je     804c7b1 <strcpy@plt+0x3575>
add    ecx,0x2
jmp    804c7b1 <strcpy@plt+0x3575>
nop
cmp    DWORD PTR ds:0x8052290,0x0
je     804c7b0 <strcpy@plt+0x3574>
movzx  eax,dl
cmp    eax,0xd
jg     804c760 <strcpy@plt+0x3524>
cmp    eax,0xc
jge    804c727 <strcpy@plt+0x34eb>
cmp    eax,0xa
jg     804c790 <strcpy@plt+0x3554>
cmp    eax,0x8
jl     804c790 <strcpy@plt+0x3554>
jmp    804c727 <strcpy@plt+0x34eb>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,0x22
je     804c780 <strcpy@plt+0x3544>
jg     804c770 <strcpy@plt+0x3534>
cmp    eax,0x20
je     804c727 <strcpy@plt+0x34eb>
jmp    804c790 <strcpy@plt+0x3554>
mov    esi,esi
cmp    eax,0x5c
jne    804c790 <strcpy@plt+0x3554>
jmp    804c727 <strcpy@plt+0x34eb>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR ds:0x8052298,0x0
jne    804c727 <strcpy@plt+0x34eb>
jmp    804c7b0 <strcpy@plt+0x3574>
nop
lea    esi,[esi+eiz*1+0x0]
and    edx,0xff
mov    eax,ds:0x80521ac
test   BYTE PTR [eax+edx*2+0x1],0x40
jne    804c7b0 <strcpy@plt+0x3574>
add    ecx,0x4
jmp    804c7b1 <strcpy@plt+0x3575>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
inc    ecx
mov    dl,BYTE PTR [ebx]
inc    ebx
test   dl,dl
jne    804c730 <strcpy@plt+0x34f4>
cmp    DWORD PTR ds:0x8052268,0x0
je     804c814 <strcpy@plt+0x35d8>
mov    edx,DWORD PTR [esi+0x14]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x8000
jne    804c7f0 <strcpy@plt+0x35b4>
cmp    DWORD PTR ds:0x8052268,0x1
jne    804c814 <strcpy@plt+0x35d8>
test   dl,0x49
je     804c814 <strcpy@plt+0x35d8>
jmp    804c813 <strcpy@plt+0x35d7>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x4000
je     804c813 <strcpy@plt+0x35d7>
cmp    eax,0xa000
je     804c813 <strcpy@plt+0x35d7>
cmp    eax,0x1000
je     804c813 <strcpy@plt+0x35d7>
cmp    eax,0xc000
jne    804c814 <strcpy@plt+0x35d8>
inc    ecx
mov    eax,ecx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x8],0x0
xor    esi,esi
mov    eax,DWORD PTR [ebp-0x8]
cmp    DWORD PTR ds:0x8052238,eax
jle    804c86b <strcpy@plt+0x362f>
lea    esi,[esi+0x0]
lea    eax,[esi+esi*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c6f0 <strcpy@plt+0x34b4>
mov    edx,eax
add    esp,0x4
cmp    DWORD PTR [ebp-0x8],edx
jge    804c862 <strcpy@plt+0x3626>
mov    DWORD PTR [ebp-0x8],edx
inc    esi
cmp    DWORD PTR ds:0x8052238,esi
jg     804c840 <strcpy@plt+0x3604>
add    DWORD PTR [ebp-0x8],0x2
mov    eax,ds:0x80522a8
cdq    
idiv   DWORD PTR [ebp-0x8]
mov    ecx,eax
test   ecx,ecx
jne    804c883 <strcpy@plt+0x3647>
mov    ecx,0x1
mov    edx,DWORD PTR ds:0x8052238
mov    eax,edx
cdq    
idiv   ecx
mov    DWORD PTR [ebp-0xc],eax
test   edx,edx
je     804c899 <strcpy@plt+0x365d>
inc    eax
mov    DWORD PTR [ebp-0xc],eax
mov    eax,ds:0x8052238
cdq    
idiv   DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x4],0x0
jmp    804c923 <strcpy@plt+0x36e7>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x4]
xor    edi,edi
lea    esi,[esi+0x0]
lea    ebx,[esi+esi*2]
lea    ebx,[ebx+ebx*8]
shl    ebx,0x2
mov    eax,ebx
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c390 <strcpy@plt+0x3154>
add    ebx,DWORD PTR ds:0x8052230
push   ebx
call   804c6f0 <strcpy@plt+0x34b4>
mov    edx,eax
add    esi,DWORD PTR [ebp-0xc]
add    esp,0x8
cmp    DWORD PTR ds:0x8052238,esi
jle    804c910 <strcpy@plt+0x36d4>
mov    ebx,DWORD PTR [ebp-0x8]
add    ebx,edi
push   ebx
lea    eax,[edx+edi*1]
push   eax
call   804cb10 <strcpy@plt+0x38d4>
mov    edi,ebx
add    esp,0x8
jmp    804c8b8 <strcpy@plt+0x367c>
jmp    804c910 <strcpy@plt+0x36d4>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0xc]
cmp    DWORD PTR [ebp-0x4],eax
jl     804c8b0 <strcpy@plt+0x3674>
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0x0
xor    esi,esi
cmp    DWORD PTR ds:0x8052238,esi
jle    804c987 <strcpy@plt+0x374b>
mov    esi,esi
lea    eax,[esi+esi*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c6f0 <strcpy@plt+0x34b4>
mov    ecx,eax
add    esp,0x4
cmp    DWORD PTR [ebp-0x4],ecx
jge    804c97e <strcpy@plt+0x3742>
mov    DWORD PTR [ebp-0x4],ecx
inc    esi
cmp    DWORD PTR ds:0x8052238,esi
jg     804c95c <strcpy@plt+0x3720>
add    DWORD PTR [ebp-0x4],0x2
mov    eax,ds:0x80522a8
cdq    
idiv   DWORD PTR [ebp-0x4]
mov    DWORD PTR [ebp-0x8],eax
test   eax,eax
jne    804c9a2 <strcpy@plt+0x3766>
mov    DWORD PTR [ebp-0x8],0x1
xor    edi,edi
xor    ecx,ecx
xor    esi,esi
cmp    DWORD PTR ds:0x8052238,esi
jle    804ca29 <strcpy@plt+0x37ed>
test   esi,esi
je     804c9f4 <strcpy@plt+0x37b8>
mov    eax,esi
cdq    
idiv   DWORD PTR [ebp-0x8]
test   edx,edx
jne    804c9e0 <strcpy@plt+0x37a4>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
xor    edi,edi
jmp    804c9f4 <strcpy@plt+0x37b8>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp-0x4]
add    ebx,edi
push   ebx
lea    eax,[ecx+edi*1]
push   eax
call   804cb10 <strcpy@plt+0x38d4>
mov    edi,ebx
add    esp,0x8
lea    eax,[esi+esi*2]
lea    eax,[eax+eax*8]
lea    ebx,[eax*4+0x0]
mov    eax,ebx
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c390 <strcpy@plt+0x3154>
add    ebx,DWORD PTR ds:0x8052230
push   ebx
call   804c6f0 <strcpy@plt+0x34b4>
mov    ecx,eax
add    esp,0x8
inc    esi
cmp    DWORD PTR ds:0x8052238,esi
jg     804c9b0 <strcpy@plt+0x3774>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
xor    esi,esi
xor    ebx,ebx
cmp    DWORD PTR ds:0x8052238,ebx
jle    804caf0 <strcpy@plt+0x38b4>
mov    esi,esi
mov    edi,esi
lea    eax,[ebx+ebx*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c6f0 <strcpy@plt+0x34b4>
add    esi,eax
lea    eax,[ebx+0x1]
add    esp,0x4
cmp    DWORD PTR ds:0x8052238,eax
jle    804ca82 <strcpy@plt+0x3846>
add    esi,0x2
test   edi,edi
je     804caa0 <strcpy@plt+0x3864>
cmp    DWORD PTR ds:0x80522a8,esi
jg     804caa0 <strcpy@plt+0x3864>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
add    esp,0x8
sub    esi,edi
lea    eax,[ebx+ebx*2]
lea    eax,[eax+eax*8]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8052230
push   eax
call   804c390 <strcpy@plt+0x3154>
lea    eax,[ebx+0x1]
add    esp,0x4
cmp    DWORD PTR ds:0x8052238,eax
jle    804cae3 <strcpy@plt+0x38a7>
mov    eax,ds:0x80521a4
push   eax
push   0x2c
call   804918c <_IO_putc@plt>
add    esp,0x8
mov    eax,ds:0x80521a4
push   eax
push   0x20
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    ebx
cmp    DWORD PTR ds:0x8052238,ebx
jg     804ca58 <strcpy@plt+0x381c>
mov    eax,ds:0x80521a4
push   eax
push   0xa
call   804918c <_IO_putc@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
cmp    ebx,esi
jge    804cb90 <strcpy@plt+0x3954>
cmp    DWORD PTR ds:0x805229c,0x0
jle    804cb70 <strcpy@plt+0x3934>
mov    eax,esi
cdq    
idiv   DWORD PTR ds:0x805229c
mov    DWORD PTR [ebp-0x4],eax
lea    ecx,[ebx+0x1]
mov    eax,ecx
cdq    
idiv   DWORD PTR ds:0x805229c
mov    edi,eax
cmp    DWORD PTR [ebp-0x4],edi
jle    804cb70 <strcpy@plt+0x3934>
mov    eax,ds:0x80521a4
push   eax
push   0x9
call   804918c <_IO_putc@plt>
add    esp,0x8
mov    eax,ebx
cdq    
idiv   DWORD PTR ds:0x805229c
mov    eax,ds:0x805229c
sub    eax,edx
add    ebx,eax
jmp    804cb1f <strcpy@plt+0x38e3>
nop
mov    eax,ds:0x80521a4
push   eax
push   0x20
call   804918c <_IO_putc@plt>
add    esp,0x8
inc    ebx
jmp    804cb1f <strcpy@plt+0x38e3>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    edx,esi
cmp    BYTE PTR [edx],0x2e
jne    804cbc6 <strcpy@plt+0x398a>
cmp    BYTE PTR [edx+0x1],0x0
je     804cbe6 <strcpy@plt+0x39aa>
jmp    804cbc6 <strcpy@plt+0x398a>
lea    esi,[esi+0x0]
mov    al,BYTE PTR [edx]
mov    BYTE PTR [ecx],al
inc    edx
inc    ecx
cmp    BYTE PTR [edx],0x0
jne    804cbc0 <strcpy@plt+0x3984>
cmp    edx,esi
jbe    804cbe6 <strcpy@plt+0x39aa>
cmp    BYTE PTR [edx-0x1],0x2f
je     804cbe6 <strcpy@plt+0x39aa>
mov    BYTE PTR [ecx],0x2f
jmp    804cbe5 <strcpy@plt+0x39a9>
lea    esi,[esi+0x0]
mov    al,BYTE PTR [ebx]
mov    BYTE PTR [ecx],al
inc    ebx
inc    ecx
cmp    BYTE PTR [ebx],0x0
jne    804cbe0 <strcpy@plt+0x39a4>
mov    BYTE PTR [ecx],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     804cc60 <strcpy@plt+0x3a24>
mov    eax,ds:0x805233c
push   eax
cmp    DWORD PTR ds:0x8052208,0x0
je     804cc27 <strcpy@plt+0x39eb>
mov    eax,ds:0x805220c
cmp    DWORD PTR ds:0x8052348,eax
je     804cc47 <strcpy@plt+0x3a0b>
push   0x5
push   0x804ffd7
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052208,eax
mov    eax,ds:0x8052348
mov    ds:0x805220c,eax
mov    eax,ds:0x8052208
push   eax
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0xc
jmp    804cd76 <strcpy@plt+0x3b3a>
mov    eax,ds:0x805233c
push   eax
cmp    DWORD PTR ds:0x8052210,0x0
je     804cc7c <strcpy@plt+0x3a40>
mov    eax,ds:0x8052214
cmp    DWORD PTR ds:0x8052348,eax
je     804cc9c <strcpy@plt+0x3a60>
push   0x5
push   0x804fffe
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052210,eax
mov    eax,ds:0x8052348
mov    ds:0x8052214,eax
mov    eax,ds:0x8052210
push   eax
call   80490cc <printf@plt>
add    esp,0x8
cmp    DWORD PTR ds:0x8052218,0x0
je     804ccc0 <strcpy@plt+0x3a84>
mov    eax,ds:0x805221c
cmp    DWORD PTR ds:0x8052348,eax
je     804cce0 <strcpy@plt+0x3aa4>
push   0x5
push   0x805001f
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052218,eax
mov    eax,ds:0x8052348
mov    ds:0x805221c,eax
mov    eax,ds:0x8052218
push   eax
call   80490cc <printf@plt>
add    esp,0x4
cmp    DWORD PTR ds:0x8052220,0x0
je     804cd04 <strcpy@plt+0x3ac8>
mov    eax,ds:0x8052224
cmp    DWORD PTR ds:0x8052348,eax
je     804cd24 <strcpy@plt+0x3ae8>
push   0x5
push   0x80504b9
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052220,eax
mov    eax,ds:0x8052348
mov    ds:0x8052224,eax
mov    eax,ds:0x8052220
push   eax
call   80490cc <printf@plt>
add    esp,0x4
cmp    DWORD PTR ds:0x8052228,0x0
je     804cd48 <strcpy@plt+0x3b0c>
mov    eax,ds:0x805222c
cmp    DWORD PTR ds:0x8052348,eax
je     804cd68 <strcpy@plt+0x3b2c>
push   0x5
push   0x8050952
push   0x0
call   804d010 <textdomain@@Base+0x220>
add    esp,0xc
mov    ds:0x8052228,eax
mov    eax,ds:0x8052348
mov    ds:0x805222c,eax
mov    eax,ds:0x8052228
push   eax
call   80490cc <printf@plt>
add    esp,0x4
push   ebx
call   804917c <exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edx
call   804ce00 <textdomain@@Base+0x10>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   edx
push   ecx
call   804d010 <textdomain@@Base+0x220>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edx
call   804d890 <textdomain@@Base+0xaa0>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804d8b0 <textdomain@@Base+0xac0>
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804e250 <textdomain@@Base+0x1460>
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
cmp    DWORD PTR [ebp+0x8],0x0
je     804cf71 <textdomain@@Base+0x181>
mov    edx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [edx],0x0
jne    804ce30 <textdomain@@Base+0x40>
jmp    804cf71 <textdomain@@Base+0x181>
lea    esi,[esi+0x0]
xor    ebx,ebx
jmp    804ce58 <textdomain@@Base+0x68>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    ebx,DWORD PTR ds:0x8052344
test   ebx,ebx
je     804ce58 <textdomain@@Base+0x68>
mov    esi,esi
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804ce58 <textdomain@@Base+0x68>
jl     804ce20 <textdomain@@Base+0x30>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804ce3c <textdomain@@Base+0x4c>
cmp    DWORD PTR [ebp+0xc],0x0
jne    804ce70 <textdomain@@Base+0x80>
mov    eax,0x8050e28
test   ebx,ebx
je     804d004 <textdomain@@Base+0x214>
jmp    804d001 <textdomain@@Base+0x211>
test   ebx,ebx
je     804cef0 <textdomain@@Base+0x100>
push   0x8050e28
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804ce90 <textdomain@@Base+0xa0>
mov    edi,0x8050e28
jmp    804cec2 <textdomain@@Base+0xd2>
xor    al,al
mov    edi,DWORD PTR [ebp+0xc]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    esi,ecx
not    esi
push   esi
call   8048fcc <malloc@plt>
mov    edi,eax
add    esp,0x4
test   edi,edi
je     804cf71 <textdomain@@Base+0x181>
push   esi
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   edi
call   80490dc <memcpy@plt>
add    esp,0xc
push   0x8050e28
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804cee0 <textdomain@@Base+0xf0>
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   804919c <free@plt>
mov    DWORD PTR [ebx+0x8],edi
jmp    804d001 <textdomain@@Base+0x211>
nop
lea    esi,[esi+eiz*1+0x0]
push   0xc
call   8048fcc <malloc@plt>
mov    esi,eax
add    esp,0x4
test   esi,esi
je     804cf71 <textdomain@@Base+0x181>
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    ebx,ecx
not    ebx
push   ebx
call   8048fcc <malloc@plt>
mov    DWORD PTR [esi+0x4],eax
add    esp,0x4
test   eax,eax
je     804cf71 <textdomain@@Base+0x181>
mov    eax,DWORD PTR [esi+0x4]
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
push   0x8050e28
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804cf50 <textdomain@@Base+0x160>
mov    DWORD PTR [esi+0x8],0x8050e28
jmp    804cf91 <textdomain@@Base+0x1a1>
xor    al,al
mov    edi,DWORD PTR [ebp+0xc]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    ebx,ecx
not    ebx
push   ebx
call   8048fcc <malloc@plt>
mov    DWORD PTR [esi+0x8],eax
add    esp,0x4
test   eax,eax
jne    804cf80 <textdomain@@Base+0x190>
xor    eax,eax
jmp    804d004 <textdomain@@Base+0x214>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0x8]
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   eax
call   80490dc <memcpy@plt>
add    esp,0xc
cmp    DWORD PTR ds:0x8052344,0x0
je     804cfb3 <textdomain@@Base+0x1c3>
mov    eax,ds:0x8052344
mov    eax,DWORD PTR [eax+0x4]
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jge    804cfd0 <textdomain@@Base+0x1e0>
mov    eax,ds:0x8052344
mov    DWORD PTR [esi],eax
mov    DWORD PTR ds:0x8052344,esi
jmp    804cfff <textdomain@@Base+0x20f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ebx,DWORD PTR ds:0x8052344
cmp    DWORD PTR [ebx],0x0
je     804cff9 <textdomain@@Base+0x209>
nop
mov    eax,DWORD PTR [ebx]
mov    eax,DWORD PTR [eax+0x4]
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jle    804cff9 <textdomain@@Base+0x209>
mov    ebx,DWORD PTR [ebx]
cmp    DWORD PTR [ebx],0x0
jne    804cfdc <textdomain@@Base+0x1ec>
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [esi],eax
mov    DWORD PTR [ebx],esi
mov    ebx,esi
mov    eax,DWORD PTR [ebx+0x8]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x20
push   edi
push   esi
push   ebx
call   8048fac <__errno_location@plt>
mov    edx,eax
mov    edx,DWORD PTR [edx]
mov    DWORD PTR [ebp-0x18],edx
cmp    DWORD PTR [ebp+0xc],0x0
jne    804d040 <textdomain@@Base+0x250>
xor    eax,eax
jmp    804d331 <textdomain@@Base+0x541>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebp+0x8],0x0
jne    804d04e <textdomain@@Base+0x25e>
mov    eax,ds:0x8051fc4
mov    DWORD PTR [ebp+0x8],eax
mov    eax,ds:0x8052344
mov    DWORD PTR [ebp-0x4],eax
test   eax,eax
je     804d089 <textdomain@@Base+0x299>
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [eax+0x4]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     804d083 <textdomain@@Base+0x293>
jl     804d089 <textdomain@@Base+0x299>
mov    eax,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x4],eax
test   eax,eax
jne    804d05c <textdomain@@Base+0x26c>
cmp    DWORD PTR [ebp-0x4],0x0
jne    804d0a0 <textdomain@@Base+0x2b0>
mov    DWORD PTR [ebp-0xc],0x8050e28
jmp    804d168 <textdomain@@Base+0x378>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x8]
cmp    BYTE PTR [edx],0x2f
jne    804d0c0 <textdomain@@Base+0x2d0>
mov    DWORD PTR [ebp-0xc],edx
jmp    804d168 <textdomain@@Base+0x378>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    dl,dl
mov    eax,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [eax+0x8]
mov    al,dl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edi,ecx
not    edi
mov    esi,0x1001
lea    eax,[edi+0x1004]
and    al,0xfc
sub    esp,eax
mov    DWORD PTR [ebp-0xc],esp
call   8048fac <__errno_location@plt>
mov    edx,eax
mov    DWORD PTR [edx],0x0
push   esi
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   80491bc <getcwd@plt>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804d138 <textdomain@@Base+0x348>
call   8048fac <__errno_location@plt>
mov    edx,eax
cmp    DWORD PTR [edx],0x22
jne    804d130 <textdomain@@Base+0x340>
add    esi,0x20
lea    eax,[edi+esi*1+0x3]
and    al,0xfc
sub    esp,eax
mov    DWORD PTR [ebp-0xc],esp
jmp    804d0ef <textdomain@@Base+0x2ff>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
test   ebx,ebx
je     804d2a4 <textdomain@@Base+0x4b4>
mov    eax,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [eax+0x8]
push   eax
push   0x8050e40
push   0x0
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   8048eec <__rawmemchr@plt>
add    esp,0x8
mov    edx,eax
push   edx
call   804908c <stpcpy@plt>
add    esp,0x8
mov    edx,eax
push   edx
call   804908c <stpcpy@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   804d760 <textdomain@@Base+0x970>
mov    ebx,eax
push   ebx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   804d820 <textdomain@@Base+0xa30>
mov    DWORD PTR [ebp-0x8],eax
mov    edi,ebx
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0x1c],ecx
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edx,ecx
not    edx
mov    eax,DWORD PTR [ebp-0x1c]
lea    edx,[eax+edx*1+0x6]
and    dl,0xfc
add    esp,0xc
sub    esp,edx
mov    DWORD PTR [ebp-0x10],esp
push   0x8050e42
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8050e40
push   ebx
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   804908c <stpcpy@plt>
add    esp,0x8
mov    edx,eax
push   edx
call   804908c <stpcpy@plt>
add    esp,0x8
mov    edx,eax
push   edx
call   804908c <stpcpy@plt>
add    esp,0x8
mov    edx,eax
push   edx
call   804908c <stpcpy@plt>
mov    edi,DWORD PTR [ebp-0x8]
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    eax,ecx
add    eax,0x3
and    al,0xfc
add    esp,0x8
sub    esp,eax
mov    DWORD PTR [ebp-0x14],esp
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x0
je     804d22d <textdomain@@Base+0x43d>
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x3a
jne    804d225 <textdomain@@Base+0x435>
inc    eax
mov    DWORD PTR [ebp-0x8],eax
cmp    BYTE PTR [eax],0x0
jne    804d214 <textdomain@@Base+0x424>
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x0
jne    804d240 <textdomain@@Base+0x450>
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax],0x43
mov    BYTE PTR [eax+0x1],0x0
jmp    804d26b <textdomain@@Base+0x47b>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp-0x14]
jmp    804d260 <textdomain@@Base+0x470>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x3a
je     804d268 <textdomain@@Base+0x478>
mov    al,BYTE PTR [eax]
mov    BYTE PTR [edx],al
inc    DWORD PTR [ebp-0x8]
inc    edx
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x0
jne    804d250 <textdomain@@Base+0x460>
mov    BYTE PTR [edx],0x0
mov    eax,DWORD PTR [ebp-0x14]
movzx  edx,BYTE PTR [eax]
movzx  eax,BYTE PTR ds:0x8050e46
sub    edx,eax
jne    804d28c <textdomain@@Base+0x49c>
mov    eax,DWORD PTR [ebp-0x14]
movzx  edx,BYTE PTR [eax+0x1]
movzx  eax,BYTE PTR ds:0x8050e47
sub    edx,eax
test   edx,edx
je     804d2a4 <textdomain@@Base+0x4b4>
mov    esi,DWORD PTR [ebp-0x14]
mov    edi,0x8050e48
mov    ecx,0x6
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    804d2c0 <textdomain@@Base+0x4d0>
call   8048fac <__errno_location@plt>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0xc]
jmp    804d331 <textdomain@@Base+0x541>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804d8d0 <textdomain@@Base+0xae0>
mov    esi,eax
add    esp,0xc
test   esi,esi
je     804d20c <textdomain@@Base+0x41c>
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
call   804d340 <textdomain@@Base+0x550>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804d323 <textdomain@@Base+0x533>
xor    edi,edi
cmp    DWORD PTR [esi+ebx*4+0x10],0x0
je     804d31b <textdomain@@Base+0x52b>
mov    esi,esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [esi+edi*4+0x10]
push   eax
call   804d340 <textdomain@@Base+0x550>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804d323 <textdomain@@Base+0x533>
inc    edi
cmp    DWORD PTR [esi+edi*4+0x10],0x0
jne    804d2fc <textdomain@@Base+0x50c>
test   ebx,ebx
je     804d20c <textdomain@@Base+0x41c>
call   8048fac <__errno_location@plt>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [edx],eax
mov    eax,ebx
lea    esp,[ebp-0x2c]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [ebx+0x4],0x0
jne    804d35b <textdomain@@Base+0x56b>
push   ebx
call   804dab0 <textdomain@@Base+0xcc0>
add    esp,0x4
cmp    DWORD PTR [ebx+0x8],0x0
je     804d740 <textdomain@@Base+0x950>
mov    esi,DWORD PTR [ebx+0x8]
cmp    DWORD PTR [esi+0x14],0x2
jbe    804d650 <textdomain@@Base+0x860>
cmp    DWORD PTR [esi+0x18],0x0
je     804d650 <textdomain@@Base+0x860>
xor    cl,cl
mov    edi,DWORD PTR [ebp+0xc]
mov    al,cl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    edx,ecx
dec    edx
mov    DWORD PTR [ebp-0x8],edx
mov    ebx,DWORD PTR [ebp+0xc]
xor    edi,edi
cmp    BYTE PTR [ebx],0x0
je     804d3c0 <textdomain@@Base+0x5d0>
shl    edi,0x4
movsx  eax,BYTE PTR [ebx]
add    edi,eax
inc    ebx
mov    ecx,edi
and    ecx,0xf0000000
je     804d398 <textdomain@@Base+0x5a8>
mov    eax,ecx
shr    eax,0x18
xor    edi,eax
xor    edi,ecx
jmp    804d398 <textdomain@@Base+0x5a8>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,edi
xor    edx,edx
div    DWORD PTR [esi+0x14]
mov    DWORD PTR [ebp-0xc],edx
mov    eax,DWORD PTR [esi+0x14]
add    eax,0xfffffffe
mov    DWORD PTR [ebp-0x18],eax
mov    eax,edi
xor    edx,edx
div    DWORD PTR [ebp-0x18]
mov    ebx,edx
inc    ebx
mov    DWORD PTR [ebp-0x10],ebx
cmp    DWORD PTR [esi+0x4],0x0
je     804d420 <textdomain@@Base+0x630>
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [esi+0x18]
mov    eax,DWORD PTR [edx+eax*4]
mov    DWORD PTR [ebp-0x1c],eax
mov    ecx,eax
shl    ecx,0x18
and    eax,0xff00
shl    eax,0x8
or     ecx,eax
mov    edx,DWORD PTR [ebp-0x1c]
shr    edx,0x8
and    edx,0xff00
or     ecx,edx
mov    eax,DWORD PTR [ebp-0x1c]
shr    eax,0x18
mov    ebx,eax
or     ebx,ecx
jmp    804d429 <textdomain@@Base+0x639>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [esi+0x18]
mov    ebx,DWORD PTR [eax+edx*4]
test   ebx,ebx
je     804d740 <textdomain@@Base+0x950>
cmp    DWORD PTR [esi+0x4],0x0
je     804d470 <textdomain@@Base+0x680>
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,DWORD PTR [eax+ebx*8-0x8]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
cmp    DWORD PTR [ebp-0x8],edx
je     804d480 <textdomain@@Base+0x690>
jmp    804d500 <textdomain@@Base+0x710>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
mov    edx,DWORD PTR [esi+0xc]
cmp    DWORD PTR [edx+ebx*8-0x8],eax
jne    804d500 <textdomain@@Base+0x710>
mov    edi,DWORD PTR [esi]
cmp    DWORD PTR [esi+0x4],0x0
je     804d4c0 <textdomain@@Base+0x6d0>
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,DWORD PTR [eax+ebx*8-0x4]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    ecx,[edx+edi*1]
jmp    804d4c9 <textdomain@@Base+0x6d9>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,edi
add    ecx,DWORD PTR [eax+ebx*8-0x4]
push   ecx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
mov    ecx,eax
test   ecx,ecx
jne    804d500 <textdomain@@Base+0x710>
mov    edi,DWORD PTR [esi]
cmp    DWORD PTR [esi+0x4],0x0
je     804d640 <textdomain@@Base+0x850>
mov    eax,DWORD PTR [esi+0x10]
mov    ecx,DWORD PTR [eax+ebx*8-0x4]
jmp    804d707 <textdomain@@Base+0x917>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    ecx,DWORD PTR [esi+0x14]
sub    ecx,DWORD PTR [ebp-0x10]
cmp    DWORD PTR [ebp-0xc],ecx
jb     804d510 <textdomain@@Base+0x720>
sub    DWORD PTR [ebp-0xc],ecx
jmp    804d516 <textdomain@@Base+0x726>
mov    eax,DWORD PTR [ebp-0x10]
add    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [esi+0x4],0x0
je     804d560 <textdomain@@Base+0x770>
mov    edx,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [esi+0x18]
mov    edx,DWORD PTR [eax+edx*4]
mov    DWORD PTR [ebp-0x1c],edx
mov    ecx,edx
shl    ecx,0x18
and    edx,0xff00
shl    edx,0x8
or     ecx,edx
mov    eax,DWORD PTR [ebp-0x1c]
shr    eax,0x8
and    eax,0xff00
or     ecx,eax
mov    edx,DWORD PTR [ebp-0x1c]
shr    edx,0x18
mov    ebx,edx
or     ebx,ecx
jmp    804d569 <textdomain@@Base+0x779>
jmp    804d560 <textdomain@@Base+0x770>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [esi+0x18]
mov    ebx,DWORD PTR [edx+eax*4]
test   ebx,ebx
je     804d740 <textdomain@@Base+0x950>
cmp    DWORD PTR [esi+0x4],0x0
je     804d5b0 <textdomain@@Base+0x7c0>
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,DWORD PTR [eax+ebx*8-0x8]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
cmp    DWORD PTR [ebp-0x8],edx
je     804d5c0 <textdomain@@Base+0x7d0>
jmp    804d500 <textdomain@@Base+0x710>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [esi+0xc]
cmp    DWORD PTR [eax+ebx*8-0x8],edx
jne    804d500 <textdomain@@Base+0x710>
mov    edi,DWORD PTR [esi]
cmp    DWORD PTR [esi+0x4],0x0
je     804d600 <textdomain@@Base+0x810>
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,DWORD PTR [eax+ebx*8-0x4]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    ecx,[edx+edi*1]
jmp    804d609 <textdomain@@Base+0x819>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,edi
add    ecx,DWORD PTR [eax+ebx*8-0x4]
push   ecx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
mov    ecx,eax
test   ecx,ecx
jne    804d500 <textdomain@@Base+0x710>
mov    edi,DWORD PTR [esi]
cmp    DWORD PTR [esi+0x4],0x0
je     804d640 <textdomain@@Base+0x850>
mov    eax,DWORD PTR [esi+0x10]
mov    ecx,DWORD PTR [eax+ebx*8-0x4]
jmp    804d707 <textdomain@@Base+0x917>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,DWORD PTR [esi+0x10]
mov    ecx,edi
add    ecx,DWORD PTR [eax+ebx*8-0x4]
jmp    804d752 <textdomain@@Base+0x962>
mov    esi,esi
mov    DWORD PTR [ebp-0x4],0x0
mov    edi,DWORD PTR [esi+0x8]
cmp    DWORD PTR [ebp-0x4],edi
jae    804d750 <textdomain@@Base+0x960>
nop
mov    edx,DWORD PTR [ebp-0x4]
add    edx,edi
mov    ebx,edx
shr    ebx,0x1
mov    eax,DWORD PTR [esi]
mov    DWORD PTR [ebp-0x14],eax
cmp    DWORD PTR [esi+0x4],0x0
je     804d6b0 <textdomain@@Base+0x8c0>
mov    eax,DWORD PTR [esi+0xc]
mov    ecx,DWORD PTR [eax+ebx*8+0x4]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
mov    ecx,DWORD PTR [ebp-0x14]
add    ecx,edx
jmp    804d6ba <textdomain@@Base+0x8ca>
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [esi+0xc]
add    ecx,DWORD PTR [edx+ebx*8+0x4]
push   ecx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
mov    ecx,eax
test   ecx,ecx
jge    804d6e0 <textdomain@@Base+0x8f0>
mov    edi,ebx
jmp    804d6ea <textdomain@@Base+0x8fa>
jmp    804d6e0 <textdomain@@Base+0x8f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test   ecx,ecx
jle    804d6f3 <textdomain@@Base+0x903>
lea    edx,[ebx+0x1]
mov    DWORD PTR [ebp-0x4],edx
cmp    DWORD PTR [ebp-0x4],edi
jb     804d664 <textdomain@@Base+0x874>
cmp    DWORD PTR [ebp-0x4],edi
jae    804d750 <textdomain@@Base+0x960>
mov    edi,DWORD PTR [esi]
cmp    DWORD PTR [esi+0x4],0x0
je     804d730 <textdomain@@Base+0x940>
mov    eax,DWORD PTR [esi+0x10]
mov    ecx,DWORD PTR [eax+ebx*8+0x4]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    ecx,[edx+edi*1]
jmp    804d752 <textdomain@@Base+0x962>
mov    esi,esi
mov    eax,DWORD PTR [esi+0x10]
mov    ecx,edi
add    ecx,DWORD PTR [eax+ebx*8+0x4]
jmp    804d752 <textdomain@@Base+0x962>
nop
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
jmp    804d754 <textdomain@@Base+0x964>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
xor    ecx,ecx
mov    eax,ecx
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
cmp    eax,0x6
ja     804d810 <textdomain@@Base+0xa20>
jmp    DWORD PTR [eax*4+0x804d780]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,0xd7
add    al,0x8
rcl    bh,1
add    al,0x8
loopne 804d761 <textdomain@@Base+0x971>
add    al,0x8
mov    al,ds:0xc00804d7
xlat   BYTE PTR ds:[ebx]
add    al,0x8
lock xlat BYTE PTR ds:[ebx]
add    al,0x8
add    al,bl
add    al,0x8
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e4e
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e59
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e62
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e6e
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e79
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e81
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e8d
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8050e94
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
push   0x8050e9b
call   8048f4c <getenv@plt>
add    esp,0x4
test   eax,eax
je     804d83d <textdomain@@Base+0xa4d>
cmp    BYTE PTR [eax],0x0
jne    804d87d <textdomain@@Base+0xa8d>
push   0x8050e8d
call   8048f4c <getenv@plt>
add    esp,0x4
test   eax,eax
je     804d853 <textdomain@@Base+0xa63>
cmp    BYTE PTR [eax],0x0
jne    804d87d <textdomain@@Base+0xa8d>
push   ebx
call   8048f4c <getenv@plt>
add    esp,0x4
test   eax,eax
je     804d865 <textdomain@@Base+0xa75>
cmp    BYTE PTR [eax],0x0
jne    804d87d <textdomain@@Base+0xa8d>
push   0x8050ea4
call   8048f4c <getenv@plt>
test   eax,eax
je     804d878 <textdomain@@Base+0xa88>
cmp    BYTE PTR [eax],0x0
jne    804d87d <textdomain@@Base+0xa8d>
mov    eax,0x8050e46
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   0x5
push   eax
push   edx
call   804d010 <textdomain@@Base+0x220>
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x0
call   804d890 <textdomain@@Base+0xaa0>
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x24
push   edi
push   esi
push   ebx
push   0x0
mov    edx,DWORD PTR [ebp+0x10]
push   edx
push   0x0
push   0x0
push   0x0
push   0x0
push   0x0
push   0x0
push   0x0
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   0x0
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
push   0x8052318
call   804e3e0 <textdomain@@Base+0x15f0>
mov    esi,eax
add    esp,0x38
test   esi,esi
je     804d980 <textdomain@@Base+0xb90>
cmp    DWORD PTR [esi+0x4],0x0
jne    804d92b <textdomain@@Base+0xb3b>
push   esi
call   804dab0 <textdomain@@Base+0xcc0>
add    esp,0x4
cmp    DWORD PTR [esi+0x8],0x0
jne    804daa4 <textdomain@@Base+0xcb4>
xor    ebx,ebx
cmp    DWORD PTR [esi+ebx*4+0x10],0x0
je     804d965 <textdomain@@Base+0xb75>
mov    esi,esi
mov    eax,DWORD PTR [esi+ebx*4+0x10]
cmp    DWORD PTR [eax+0x4],0x0
jne    804d953 <textdomain@@Base+0xb63>
push   eax
call   804dab0 <textdomain@@Base+0xcc0>
add    esp,0x4
mov    eax,DWORD PTR [esi+ebx*4+0x10]
cmp    DWORD PTR [eax+0x8],0x0
jne    804d965 <textdomain@@Base+0xb75>
inc    ebx
cmp    DWORD PTR [esi+ebx*4+0x10],0x0
jne    804d940 <textdomain@@Base+0xb50>
xor    eax,eax
test   ebx,ebx
jl     804daa6 <textdomain@@Base+0xcb6>
jmp    804daa4 <textdomain@@Base+0xcb4>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   804dde0 <textdomain@@Base+0xff0>
mov    DWORD PTR [ebp-0x24],eax
add    esp,0x4
test   eax,eax
je     804d9c9 <textdomain@@Base+0xbd9>
xor    al,al
mov    edi,DWORD PTR [ebp-0x24]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    ebx,ecx
not    ebx
push   ebx
call   8048fcc <malloc@plt>
mov    DWORD PTR [ebp+0xc],eax
add    esp,0x4
test   eax,eax
je     804da47 <textdomain@@Base+0xc57>
push   ebx
mov    edx,DWORD PTR [ebp-0x24]
push   edx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   80490dc <memcpy@plt>
add    esp,0xc
lea    eax,[ebp-0x20]
push   eax
lea    eax,[ebp-0x1c]
push   eax
lea    eax,[ebp-0x18]
push   eax
lea    eax,[ebp-0x14]
push   eax
lea    eax,[ebp-0x10]
push   eax
lea    eax,[ebp-0xc]
push   eax
lea    eax,[ebp-0x8]
push   eax
lea    eax,[ebp-0x4]
push   eax
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   804e960 <textdomain@@Base+0x1b70>
mov    ecx,eax
add    esp,0x24
push   0x1
mov    edx,DWORD PTR [ebp+0x10]
push   edx
mov    eax,DWORD PTR [ebp-0x20]
push   eax
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
push   ecx
xor    al,al
mov    edi,DWORD PTR [ebp+0x8]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
push   0x8052318
call   804e3e0 <textdomain@@Base+0x15f0>
mov    esi,eax
add    esp,0x38
test   esi,esi
jne    804da50 <textdomain@@Base+0xc60>
xor    eax,eax
jmp    804daa6 <textdomain@@Base+0xcb6>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [esi+0x4],0x0
jne    804da5f <textdomain@@Base+0xc6f>
push   esi
call   804dab0 <textdomain@@Base+0xcc0>
add    esp,0x4
cmp    DWORD PTR [esi+0x8],0x0
jne    804da95 <textdomain@@Base+0xca5>
xor    ebx,ebx
cmp    DWORD PTR [esi+ebx*4+0x10],0x0
je     804da95 <textdomain@@Base+0xca5>
mov    esi,esi
mov    eax,DWORD PTR [esi+ebx*4+0x10]
cmp    DWORD PTR [eax+0x4],0x0
jne    804da83 <textdomain@@Base+0xc93>
push   eax
call   804dab0 <textdomain@@Base+0xcc0>
add    esp,0x4
mov    eax,DWORD PTR [esi+ebx*4+0x10]
cmp    DWORD PTR [eax+0x8],0x0
jne    804da95 <textdomain@@Base+0xca5>
inc    ebx
cmp    DWORD PTR [esi+ebx*4+0x10],0x0
jne    804da70 <textdomain@@Base+0xc80>
cmp    DWORD PTR [ebp-0x24],0x0
je     804daa4 <textdomain@@Base+0xcb4>
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   804919c <free@plt>
mov    eax,esi
lea    esp,[ebp-0x30]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x64
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x60],0x0
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esi+0x4],0x1
mov    DWORD PTR [esi+0x8],0x0
cmp    DWORD PTR [esi],0x0
je     804ddd6 <textdomain@@Base+0xfe6>
push   0x0
mov    eax,DWORD PTR [esi]
push   eax
call   804914c <open@plt>
mov    DWORD PTR [ebp-0x5c],eax
add    esp,0x8
cmp    eax,0xffffffff
je     804ddd6 <textdomain@@Base+0xfe6>
lea    eax,[ebp-0x58]
push   eax
mov    esi,DWORD PTR [ebp-0x5c]
push   esi
push   0x3
call   804903c <__fxstat@plt>
add    esp,0xc
test   eax,eax
je     804db13 <textdomain@@Base+0xd23>
cmp    DWORD PTR [ebp-0x2c],0x1b
jle    804ddc3 <textdomain@@Base+0xfd3>
push   0x0
mov    esi,DWORD PTR [ebp-0x5c]
push   esi
push   0x2
push   0x1
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
push   0x0
call   8048f7c <mmap@plt>
mov    edi,eax
add    esp,0x18
cmp    edi,0xffffffff
je     804db50 <textdomain@@Base+0xd60>
push   esi
call   8048f2c <close@plt>
mov    DWORD PTR [ebp-0x60],0x1
jmp    804db95 <textdomain@@Base+0xda5>
jmp    804db50 <textdomain@@Base+0xd60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   8048fcc <malloc@plt>
mov    edi,eax
add    esp,0x4
test   edi,edi
je     804ddd6 <textdomain@@Base+0xfe6>
mov    ebx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x64],edi
push   ebx
mov    esi,DWORD PTR [ebp-0x64]
push   esi
mov    esi,DWORD PTR [ebp-0x5c]
push   esi
call   804922c <read@plt>
add    esp,0xc
cmp    eax,0xffffffff
je     804ddc0 <textdomain@@Base+0xfd0>
add    DWORD PTR [ebp-0x64],eax
sub    ebx,eax
test   ebx,ebx
jg     804db6c <textdomain@@Base+0xd7c>
push   esi
call   8048f2c <close@plt>
add    esp,0x4
cmp    DWORD PTR [edi],0x950412de
je     804dbd0 <textdomain@@Base+0xde0>
cmp    DWORD PTR [edi],0xde120495
je     804dbd0 <textdomain@@Base+0xde0>
cmp    DWORD PTR [ebp-0x60],0x0
je     804dbc0 <textdomain@@Base+0xdd0>
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
push   edi
call   8048fdc <munmap@plt>
jmp    804ddd6 <textdomain@@Base+0xfe6>
lea    esi,[esi+0x0]
push   edi
call   804919c <free@plt>
jmp    804ddd6 <textdomain@@Base+0xfe6>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x1c
call   8048fcc <malloc@plt>
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esi+0x8],eax
add    esp,0x4
test   eax,eax
je     804ddd6 <textdomain@@Base+0xfe6>
mov    ebx,eax
mov    DWORD PTR [ebx],edi
cmp    DWORD PTR [edi],0x950412de
setne  al
and    eax,0xff
mov    DWORD PTR [ebx+0x4],eax
test   eax,eax
je     804dc30 <textdomain@@Base+0xe40>
mov    edx,DWORD PTR [edi+0x4]
mov    ecx,edx
shl    ecx,0x18
mov    eax,edx
and    eax,0xff00
shl    eax,0x8
or     ecx,eax
mov    eax,edx
shr    eax,0x8
and    eax,0xff00
or     ecx,eax
shr    edx,0x18
mov    eax,ecx
or     eax,edx
jmp    804dc33 <textdomain@@Base+0xe43>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edi+0x4]
test   eax,eax
jne    804dd80 <textdomain@@Base+0xf90>
cmp    DWORD PTR [ebx+0x4],0x0
je     804dc70 <textdomain@@Base+0xe80>
mov    edx,DWORD PTR [edi+0x8]
mov    ecx,edx
shl    ecx,0x18
mov    eax,edx
and    eax,0xff00
shl    eax,0x8
or     ecx,eax
mov    eax,edx
shr    eax,0x8
and    eax,0xff00
or     ecx,eax
shr    edx,0x18
mov    eax,ecx
or     eax,edx
jmp    804dc73 <textdomain@@Base+0xe83>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [ebx+0x8],eax
cmp    DWORD PTR [ebx+0x4],0x0
je     804dcb0 <textdomain@@Base+0xec0>
mov    ecx,DWORD PTR [edi+0xc]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    eax,[edx+edi*1]
jmp    804dcb5 <textdomain@@Base+0xec5>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,edi
add    eax,DWORD PTR [edi+0xc]
mov    DWORD PTR [ebx+0xc],eax
cmp    DWORD PTR [ebx+0x4],0x0
je     804dcf0 <textdomain@@Base+0xf00>
mov    ecx,DWORD PTR [edi+0x10]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    eax,[edx+edi*1]
jmp    804dcf5 <textdomain@@Base+0xf05>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,edi
add    eax,DWORD PTR [edi+0x10]
mov    DWORD PTR [ebx+0x10],eax
cmp    DWORD PTR [ebx+0x4],0x0
je     804dd30 <textdomain@@Base+0xf40>
mov    edx,DWORD PTR [edi+0x14]
mov    ecx,edx
shl    ecx,0x18
mov    eax,edx
and    eax,0xff00
shl    eax,0x8
or     ecx,eax
mov    eax,edx
shr    eax,0x8
and    eax,0xff00
or     ecx,eax
shr    edx,0x18
mov    eax,ecx
or     eax,edx
jmp    804dd33 <textdomain@@Base+0xf43>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [edi+0x14]
mov    DWORD PTR [ebx+0x14],eax
cmp    DWORD PTR [ebx+0x4],0x0
je     804dd70 <textdomain@@Base+0xf80>
mov    ecx,DWORD PTR [edi+0x18]
mov    edx,ecx
shl    edx,0x18
mov    eax,ecx
and    eax,0xff00
shl    eax,0x8
or     edx,eax
mov    eax,ecx
shr    eax,0x8
and    eax,0xff00
or     edx,eax
shr    ecx,0x18
or     edx,ecx
lea    eax,[edx+edi*1]
jmp    804dd75 <textdomain@@Base+0xf85>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,edi
add    eax,DWORD PTR [edi+0x18]
mov    DWORD PTR [ebx+0x18],eax
jmp    804ddd0 <textdomain@@Base+0xfe0>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x60],0x0
je     804dda0 <textdomain@@Base+0xfb0>
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
push   edi
call   8048fdc <munmap@plt>
add    esp,0x8
jmp    804dda9 <textdomain@@Base+0xfb9>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   edi
call   804919c <free@plt>
add    esp,0x4
push   ebx
call   804919c <free@plt>
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esi+0x8],0x0
jmp    804ddd6 <textdomain@@Base+0xfe6>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x5c]
push   esi
call   8048f2c <close@plt>
jmp    804ddd6 <textdomain@@Base+0xfe6>
nop
lea    esi,[esi+eiz*1+0x0]
inc    DWORD PTR ds:0x8052348
lea    esp,[ebp-0x70]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,esi
mov    DWORD PTR [ebp-0x8],ebx
cmp    DWORD PTR ds:0x8051fc8,0x0
je     804de20 <textdomain@@Base+0x1030>
push   0x804e230
push   0x8
mov    eax,ds:0x8051fc8
push   eax
mov    eax,ds:0x805231c
push   eax
lea    eax,[ebp-0x8]
push   eax
call   804921c <bsearch@plt>
add    esp,0x14
jmp    804de22 <textdomain@@Base+0x1032>
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
test   eax,eax
je     804de30 <textdomain@@Base+0x1040>
mov    eax,DWORD PTR [eax+0x4]
jmp    804dea2 <textdomain@@Base+0x10b2>
nop
lea    esi,[esi+eiz*1+0x0]
xor    ecx,ecx
mov    esi,esi
mov    eax,ds:0x8051fd0
cmp    BYTE PTR [eax],0x0
je     804de98 <textdomain@@Base+0x10a8>
cmp    BYTE PTR [eax],0x3a
jne    804de54 <textdomain@@Base+0x1064>
nop
inc    DWORD PTR ds:0x8051fd0
mov    eax,ds:0x8051fd0
cmp    BYTE PTR [eax],0x3a
je     804de44 <textdomain@@Base+0x1054>
mov    edx,DWORD PTR ds:0x8051fd0
mov    eax,edx
cmp    BYTE PTR [edx],0x0
je     804de79 <textdomain@@Base+0x1089>
lea    esi,[esi+0x0]
cmp    BYTE PTR [eax],0x3a
je     804de79 <textdomain@@Base+0x1089>
inc    DWORD PTR ds:0x8051fd0
mov    eax,ds:0x8051fd0
cmp    BYTE PTR [eax],0x0
jne    804de64 <textdomain@@Base+0x1074>
cmp    DWORD PTR ds:0x8051fd0,edx
jbe    804de94 <textdomain@@Base+0x10a4>
mov    eax,ds:0x8051fd0
sub    eax,edx
push   eax
push   edx
call   804deb0 <textdomain@@Base+0x10c0>
mov    ecx,eax
add    esp,0x8
test   ecx,ecx
je     804de34 <textdomain@@Base+0x1044>
test   ecx,ecx
jne    804ddec <textdomain@@Base+0xffc>
xor    eax,eax
mov    ebx,DWORD PTR [ebp-0xc]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x2014
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
lea    eax,[esi+0x11]
and    al,0xfc
sub    esp,eax
mov    ebx,esp
push   esi
push   edx
push   ebx
call   80490dc <memcpy@plt>
add    esp,0xc
mov    eax,ds:0x8050ec3
mov    DWORD PTR [esi+ebx*1],eax
mov    eax,ds:0x8050ec7
mov    DWORD PTR [esi+ebx*1+0x4],eax
mov    eax,ds:0x8050ecb
mov    DWORD PTR [esi+ebx*1+0x8],eax
mov    ax,ds:0x8050ecf
mov    WORD PTR [esi+ebx*1+0xc],ax
push   0x8050ed1
push   ebx
call   80491ec <fopen@plt>
mov    DWORD PTR [ebp-0x2004],eax
add    esp,0x8
test   eax,eax
jne    804df20 <textdomain@@Base+0x1130>
xor    eax,eax
jmp    804e186 <textdomain@@Base+0x1396>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x2008],0x0
mov    esi,esi
mov    esi,DWORD PTR [ebp-0x2004]
push   esi
call   8048edc <feof@plt>
add    esp,0x4
test   eax,eax
jne    804e150 <textdomain@@Base+0x1360>
push   esi
push   0x2000
lea    ebx,[ebp-0x2000]
push   ebx
call   804902c <fgets@plt>
add    esp,0xc
test   eax,eax
je     804e150 <textdomain@@Base+0x1360>
movsx  edx,BYTE PTR [ebp-0x2000]
mov    eax,ds:0x80521ac
mov    ecx,eax
test   BYTE PTR [eax+edx*2+0x1],0x20
je     804df83 <textdomain@@Base+0x1193>
lea    esi,[esi+0x0]
inc    ebx
movsx  eax,BYTE PTR [ebx]
test   BYTE PTR [ecx+eax*2+0x1],0x20
jne    804df78 <textdomain@@Base+0x1188>
cmp    BYTE PTR [ebx],0x0
je     804e108 <textdomain@@Base+0x1318>
cmp    BYTE PTR [ebx],0x23
je     804e108 <textdomain@@Base+0x1318>
mov    DWORD PTR [ebp-0x200c],ebx
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804dfcd <textdomain@@Base+0x11dd>
movsx  edx,BYTE PTR [ebx]
mov    eax,ds:0x80521ac
mov    ecx,eax
test   BYTE PTR [eax+edx*2+0x1],0x20
jne    804dfc4 <textdomain@@Base+0x11d4>
mov    esi,esi
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804dfcd <textdomain@@Base+0x11dd>
movsx  eax,BYTE PTR [ebx]
test   BYTE PTR [ecx+eax*2+0x1],0x20
je     804dfb4 <textdomain@@Base+0x11c4>
cmp    BYTE PTR [ebx],0x0
je     804dfcd <textdomain@@Base+0x11dd>
mov    BYTE PTR [ebx],0x0
inc    ebx
movsx  edx,BYTE PTR [ebx]
mov    eax,ds:0x80521ac
mov    ecx,eax
test   BYTE PTR [eax+edx*2+0x1],0x20
je     804dfeb <textdomain@@Base+0x11fb>
mov    esi,esi
inc    ebx
movsx  eax,BYTE PTR [ebx]
test   BYTE PTR [ecx+eax*2+0x1],0x20
jne    804dfe0 <textdomain@@Base+0x11f0>
cmp    BYTE PTR [ebx],0x0
je     804e108 <textdomain@@Base+0x1318>
mov    DWORD PTR [ebp-0x2010],ebx
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804e024 <textdomain@@Base+0x1234>
movsx  edx,BYTE PTR [ebx]
mov    eax,ds:0x80521ac
mov    ecx,eax
test   BYTE PTR [eax+edx*2+0x1],0x20
jne    804e024 <textdomain@@Base+0x1234>
lea    esi,[esi+0x0]
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804e024 <textdomain@@Base+0x1234>
movsx  eax,BYTE PTR [ebx]
test   BYTE PTR [ecx+eax*2+0x1],0x20
je     804e014 <textdomain@@Base+0x1224>
cmp    BYTE PTR [ebx],0xa
jne    804e040 <textdomain@@Base+0x1250>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    BYTE PTR [ebx],0xa
jmp    804e049 <textdomain@@Base+0x1259>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     804e049 <textdomain@@Base+0x1259>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    eax,ds:0x8051fc8
cmp    DWORD PTR ds:0x8051fcc,eax
ja     804e05b <textdomain@@Base+0x126b>
call   804e1a0 <textdomain@@Base+0x13b0>
xor    al,al
mov    edi,DWORD PTR [ebp-0x200c]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edi,ecx
not    edi
push   edi
call   8048fcc <malloc@plt>
mov    DWORD PTR [ebp-0x2014],eax
add    esp,0x4
test   eax,eax
je     804e180 <textdomain@@Base+0x1390>
push   edi
mov    esi,DWORD PTR [ebp-0x200c]
push   esi
mov    esi,DWORD PTR [ebp-0x2014]
push   esi
call   80490dc <memcpy@plt>
add    esp,0xc
mov    edx,DWORD PTR ds:0x8051fc8
mov    eax,ds:0x805231c
mov    DWORD PTR [eax+edx*8],esi
xor    al,al
mov    edi,DWORD PTR [ebp-0x2010]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edi,ecx
not    edi
push   edi
call   8048fcc <malloc@plt>
mov    DWORD PTR [ebp-0x2014],eax
add    esp,0x4
test   eax,eax
je     804e180 <textdomain@@Base+0x1390>
push   edi
mov    esi,DWORD PTR [ebp-0x2010]
push   esi
mov    esi,DWORD PTR [ebp-0x2014]
push   esi
call   80490dc <memcpy@plt>
add    esp,0xc
mov    edx,DWORD PTR ds:0x8051fc8
mov    eax,ds:0x805231c
mov    DWORD PTR [eax+edx*8+0x4],esi
inc    DWORD PTR ds:0x8051fc8
inc    DWORD PTR [ebp-0x2008]
push   0xa
push   ebx
call   8048ecc <strchr@plt>
add    esp,0x8
test   eax,eax
jne    804df2c <textdomain@@Base+0x113c>
lea    ebx,[ebp-0x2000]
mov    esi,DWORD PTR [ebp-0x2004]
push   esi
push   0x2000
push   ebx
call   804902c <fgets@plt>
add    esp,0xc
test   eax,eax
jne    804e108 <textdomain@@Base+0x1318>
mov    BYTE PTR [ebp-0x2000],0xa
jmp    804e108 <textdomain@@Base+0x1318>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x2004]
push   esi
call   80490ec <fclose@plt>
add    esp,0x4
cmp    DWORD PTR [ebp-0x2008],0x0
je     804e180 <textdomain@@Base+0x1390>
push   0x804e230
push   0x8
mov    eax,ds:0x8051fc8
push   eax
mov    eax,ds:0x805231c
push   eax
call   804907c <qsort@plt>
mov    eax,DWORD PTR [ebp-0x2008]
lea    esp,[ebp-0x2020]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
cmp    DWORD PTR ds:0x8051fcc,0x0
je     804e1c0 <textdomain@@Base+0x13d0>
mov    ecx,DWORD PTR ds:0x8051fcc
mov    esi,ecx
add    esi,ecx
jmp    804e1c5 <textdomain@@Base+0x13d5>
lea    esi,[esi+0x0]
mov    esi,0x64
lea    eax,[esi*8+0x0]
push   eax
call   8048fcc <malloc@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     804e219 <textdomain@@Base+0x1429>
mov    edx,DWORD PTR ds:0x805231c
mov    ecx,DWORD PTR ds:0x8051fc8
lea    eax,[ecx*8+0x0]
push   eax
push   edx
push   ebx
call   80490dc <memcpy@plt>
add    esp,0xc
cmp    DWORD PTR ds:0x8051fcc,0x0
je     804e20d <textdomain@@Base+0x141d>
mov    eax,ds:0x805231c
push   eax
call   804919c <free@plt>
mov    DWORD PTR ds:0x805231c,ebx
mov    DWORD PTR ds:0x8051fcc,esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
push   eax
mov    eax,DWORD PTR [edx]
push   eax
call   804915c <strcasecmp@plt>
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
test   esi,esi
je     804e2d2 <textdomain@@Base+0x14e2>
mov    edx,DWORD PTR ds:0x8051fc4
mov    DWORD PTR [ebp-0x4],edx
cmp    BYTE PTR [esi],0x0
je     804e280 <textdomain@@Base+0x1490>
push   0x8050e1f
push   esi
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804e290 <textdomain@@Base+0x14a0>
mov    DWORD PTR ds:0x8051fc4,0x8050e1f
jmp    804e2c0 <textdomain@@Base+0x14d0>
lea    esi,[esi+eiz*1+0x0]
xor    al,al
mov    edi,esi
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    ebx,ecx
not    ebx
push   ebx
call   8048fcc <malloc@plt>
mov    edi,eax
add    esp,0x4
test   edi,edi
je     804e2ba <textdomain@@Base+0x14ca>
push   ebx
push   esi
push   edi
call   80490dc <memcpy@plt>
add    esp,0xc
mov    DWORD PTR ds:0x8051fc4,edi
cmp    DWORD PTR [ebp-0x4],0x8050e1f
je     804e2d2 <textdomain@@Base+0x14e2>
mov    edx,DWORD PTR [ebp-0x4]
push   edx
call   804919c <free@plt>
mov    eax,ds:0x8051fc4
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
xor    esi,esi
test   edx,edx
je     804e322 <textdomain@@Base+0x1532>
lea    esi,[esi+0x0]
mov    edi,ebx
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0x4],ecx
add    ebx,ecx
sub    edx,ecx
inc    esi
test   edx,edx
jne    804e308 <textdomain@@Base+0x1518>
mov    eax,esi
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
test   esi,esi
je     804e370 <textdomain@@Base+0x1580>
mov    al,BYTE PTR [ebp+0x10]
mov    BYTE PTR [ebp-0x4],al
lea    esi,[esi+0x0]
mov    edi,ebx
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edx,ecx
not    edx
dec    edx
add    ebx,edx
dec    esi
sub    esi,edx
je     804e370 <textdomain@@Base+0x1580>
mov    al,BYTE PTR [ebp-0x4]
mov    BYTE PTR [ebx],al
inc    ebx
jmp    804e34c <textdomain@@Base+0x155c>
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
test   edx,edx
je     804e3c0 <textdomain@@Base+0x15d0>
lea    eax,[ebx+esi*1]
cmp    edx,eax
jae    804e3a4 <textdomain@@Base+0x15b4>
push   0x0
push   edx
call   8048eec <__rawmemchr@plt>
lea    edx,[eax+0x1]
lea    eax,[ebx+esi*1]
xor    ecx,ecx
cmp    edx,eax
jae    804e3af <textdomain@@Base+0x15bf>
mov    ecx,edx
mov    eax,ecx
jmp    804e3d2 <textdomain@@Base+0x15e2>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
test   ebx,ebx
jne    804e3d0 <textdomain@@Base+0x15e0>
xor    eax,eax
jmp    804e3d2 <textdomain@@Base+0x15e2>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
xor    bl,bl
mov    edi,DWORD PTR [ebp+0x18]
mov    al,bl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0xc],ecx
mov    esi,DWORD PTR [ebp+0x10]
lea    edx,[esi+ecx*1-0x1]
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x20
je     804e41f <textdomain@@Base+0x162f>
mov    edi,DWORD PTR [ebp+0x1c]
mov    al,bl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0xc],ecx
add    edx,ecx
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x10
je     804e439 <textdomain@@Base+0x1649>
xor    al,al
mov    edi,DWORD PTR [ebp+0x20]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    edx,eax
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x8
je     804e453 <textdomain@@Base+0x1663>
xor    al,al
mov    edi,DWORD PTR [ebp+0x24]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    edx,eax
test   BYTE PTR [ebp+0x14],0xc0
je     804e46c <textdomain@@Base+0x167c>
xor    al,al
mov    edi,DWORD PTR [ebp+0x28]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    edx,eax
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x4
je     804e486 <textdomain@@Base+0x1696>
xor    al,al
mov    edi,DWORD PTR [ebp+0x2c]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    edx,eax
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x2
je     804e4b0 <textdomain@@Base+0x16c0>
xor    al,al
mov    edi,DWORD PTR [ebp+0x30]
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    eax,ecx
not    eax
add    eax,edx
mov    DWORD PTR [ebp-0x10],eax
jmp    804e4b3 <textdomain@@Base+0x16c3>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x10],edx
mov    edi,DWORD PTR [ebp+0x38]
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    ebx,ecx
not    ebx
lea    edx,[ebx-0x1]
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x1
je     804e4f0 <textdomain@@Base+0x1700>
mov    edi,DWORD PTR [ebp+0x34]
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edx,ebx
sub    edx,ecx
add    edx,DWORD PTR [ebp-0x10]
jmp    804e4f7 <textdomain@@Base+0x1707>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    esi,DWORD PTR [ebp-0x10]
lea    edx,[esi+edx*1+0x2]
push   edx
call   8048fcc <malloc@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    804e520 <textdomain@@Base+0x1730>
xor    eax,eax
jmp    804e86a <textdomain@@Base+0x1a7a>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x4],0x0
jmp    804e675 <textdomain@@Base+0x1885>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
push   ebx
call   80490dc <memcpy@plt>
add    esp,0xc
push   0x3a
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   ebx
call   804e330 <textdomain@@Base+0x1540>
mov    esi,DWORD PTR [ebp+0x10]
lea    edi,[ebx+esi*1-0x1]
mov    BYTE PTR [edi],0x2f
inc    edi
mov    eax,DWORD PTR [ebp+0x18]
push   eax
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x14
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x20
je     804e571 <textdomain@@Base+0x1781>
mov    BYTE PTR [edi],0x5f
inc    edi
mov    esi,DWORD PTR [ebp+0x1c]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x10
je     804e58b <textdomain@@Base+0x179b>
mov    BYTE PTR [edi],0x2e
inc    edi
mov    esi,DWORD PTR [ebp+0x20]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x8
je     804e5a5 <textdomain@@Base+0x17b5>
mov    BYTE PTR [edi],0x2e
inc    edi
mov    esi,DWORD PTR [ebp+0x24]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
test   BYTE PTR [ebp+0x14],0xc0
je     804e5ca <textdomain@@Base+0x17da>
mov    ecx,edi
inc    edi
mov    dl,0x40
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x40
je     804e5b9 <textdomain@@Base+0x17c9>
mov    dl,0x2b
mov    BYTE PTR [ecx],dl
mov    esi,DWORD PTR [ebp+0x28]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x4
je     804e5e4 <textdomain@@Base+0x17f4>
mov    BYTE PTR [edi],0x2b
inc    edi
mov    esi,DWORD PTR [ebp+0x2c]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x2
je     804e5fe <textdomain@@Base+0x180e>
mov    BYTE PTR [edi],0x2c
inc    edi
mov    esi,DWORD PTR [ebp+0x30]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
test   al,0x1
je     804e618 <textdomain@@Base+0x1828>
mov    BYTE PTR [edi],0x5f
inc    edi
mov    esi,DWORD PTR [ebp+0x34]
push   esi
push   edi
call   804908c <stpcpy@plt>
mov    edi,eax
add    esp,0x8
mov    BYTE PTR [edi],0x2f
inc    edi
mov    eax,DWORD PTR [ebp+0x38]
push   eax
push   edi
call   804908c <stpcpy@plt>
mov    DWORD PTR [ebp-0x10],0x0
mov    esi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [esi]
mov    DWORD PTR [ebp-0x4],esi
add    esp,0x8
test   esi,esi
je     804e675 <textdomain@@Base+0x1885>
mov    eax,DWORD PTR [ebp-0x4]
cmp    DWORD PTR [eax],0x0
je     804e662 <textdomain@@Base+0x1872>
push   ebx
mov    esi,DWORD PTR [eax]
push   esi
call   8048f1c <strcmp@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     804e66f <textdomain@@Base+0x187f>
jl     804e510 <textdomain@@Base+0x1720>
mov    eax,DWORD PTR [ebp-0x4]
mov    DWORD PTR [ebp-0x10],eax
mov    esi,DWORD PTR [ebp-0x4]
mov    esi,DWORD PTR [esi+0xc]
mov    DWORD PTR [ebp-0x4],esi
test   esi,esi
jne    804e63c <textdomain@@Base+0x184c>
cmp    DWORD PTR [ebp-0x4],0x0
jne    804e67b <textdomain@@Base+0x188b>
cmp    DWORD PTR [ebp+0x3c],0x0
jne    804e690 <textdomain@@Base+0x18a0>
push   ebx
call   804919c <free@plt>
jmp    804e867 <textdomain@@Base+0x1a77>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   804e2f0 <textdomain@@Base+0x1500>
mov    edi,eax
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
and    eax,0xffffaaaa
sar    eax,0x1
mov    edx,DWORD PTR [ebp+0x14]
and    edx,0x5555
mov    ecx,eax
add    ecx,edx
mov    esi,ecx
and    esi,0xffffcccc
sar    esi,0x2
mov    edx,ecx
and    edx,0x3333
mov    ecx,esi
add    ecx,edx
mov    eax,ecx
sar    eax,0x4
add    ecx,eax
and    ecx,0xf0f
mov    esi,ecx
sar    esi,0x8
add    ecx,esi
and    ecx,0xff
shl    edi,cl
mov    DWORD PTR [ebp-0xc],edi
lea    eax,[edi*4+0x14]
push   eax
call   8048fcc <malloc@plt>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x4
test   eax,eax
je     804e506 <textdomain@@Base+0x1716>
mov    esi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [esi],ebx
xor    ebx,ebx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   804e2f0 <textdomain@@Base+0x1500>
mov    edx,eax
add    esp,0x8
cmp    edx,0x1
jne    804e734 <textdomain@@Base+0x1944>
mov    eax,DWORD PTR [ebp+0x14]
and    eax,0x18
cmp    eax,0x18
jne    804e739 <textdomain@@Base+0x1949>
mov    ebx,0x1
mov    eax,DWORD PTR [ebp-0x4]
mov    DWORD PTR [eax+0x4],ebx
mov    DWORD PTR [eax+0x8],0x0
cmp    DWORD PTR [ebp-0x10],0x0
jne    804e760 <textdomain@@Base+0x1970>
mov    esi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [esi]
mov    DWORD PTR [eax+0xc],esi
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esi],eax
jmp    804e772 <textdomain@@Base+0x1982>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax+0xc]
mov    esi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [esi+0xc],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [eax+0xc],esi
mov    DWORD PTR [ebp-0x8],0x0
mov    esi,DWORD PTR [ebp+0x10]
push   esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804e2f0 <textdomain@@Base+0x1500>
add    esp,0x8
mov    edx,eax
mov    eax,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x10],eax
cmp    edx,0x1
jne    804e799 <textdomain@@Base+0x19a9>
dec    DWORD PTR [ebp-0x10]
cmp    DWORD PTR [ebp-0x10],0x0
jl     804e859 <textdomain@@Base+0x1a69>
nop
mov    eax,DWORD PTR [ebp+0x14]
not    eax
test   DWORD PTR [ebp-0x10],eax
jne    804e850 <textdomain@@Base+0x1a60>
test   BYTE PTR [ebp-0x10],0x47
je     804e7c2 <textdomain@@Base+0x19d2>
test   BYTE PTR [ebp-0x10],0x98
jne    804e850 <textdomain@@Base+0x1a60>
mov    eax,DWORD PTR [ebp-0x10]
and    eax,0x18
cmp    eax,0x18
je     804e850 <textdomain@@Base+0x1a60>
xor    ebx,ebx
nop
push   ebx
mov    esi,DWORD PTR [ebp+0x10]
push   esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804e380 <textdomain@@Base+0x1590>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
je     804e850 <textdomain@@Base+0x1a60>
push   0x1
mov    esi,DWORD PTR [ebp+0x38]
push   esi
mov    eax,DWORD PTR [ebp+0x34]
push   eax
mov    esi,DWORD PTR [ebp+0x30]
push   esi
mov    eax,DWORD PTR [ebp+0x2c]
push   eax
mov    esi,DWORD PTR [ebp+0x28]
push   esi
mov    eax,DWORD PTR [ebp+0x24]
push   eax
mov    esi,DWORD PTR [ebp+0x20]
push   esi
mov    eax,DWORD PTR [ebp+0x1c]
push   eax
mov    esi,DWORD PTR [ebp+0x18]
push   esi
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    edi,ebx
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0xc],ecx
push   ecx
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   804e3e0 <textdomain@@Base+0x15f0>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [esi+eax*4+0x10],edx
inc    eax
mov    DWORD PTR [ebp-0x8],eax
add    esp,0x38
jmp    804e7d4 <textdomain@@Base+0x19e4>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
dec    DWORD PTR [ebp-0x10]
jns    804e7a4 <textdomain@@Base+0x19b4>
mov    eax,DWORD PTR [ebp-0x8]
mov    esi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [esi+eax*4+0x10],0x0
mov    eax,DWORD PTR [ebp-0x4]
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
xor    ebx,ebx
mov    DWORD PTR [ebp-0x4],0x1
xor    ecx,ecx
cmp    DWORD PTR [ebp+0xc],ecx
jbe    804e8c2 <textdomain@@Base+0x1ad2>
mov    edx,DWORD PTR ds:0x80521ac
nop
mov    esi,DWORD PTR [ebp+0x8]
movsx  eax,BYTE PTR [ecx+esi*1]
test   BYTE PTR [edx+eax*2],0x8
je     804e8bc <textdomain@@Base+0x1acc>
inc    ebx
test   BYTE PTR [edx+eax*2+0x1],0x4
je     804e8bc <textdomain@@Base+0x1acc>
mov    DWORD PTR [ebp-0x4],0x0
inc    ecx
cmp    DWORD PTR [ebp+0xc],ecx
ja     804e8a0 <textdomain@@Base+0x1ab0>
cmp    DWORD PTR [ebp-0x4],0x0
je     804e8d0 <textdomain@@Base+0x1ae0>
lea    eax,[ebx+0x4]
jmp    804e8d3 <textdomain@@Base+0x1ae3>
lea    esi,[esi+0x0]
lea    eax,[ebx+0x1]
push   eax
call   8048fcc <malloc@plt>
mov    edi,eax
add    esp,0x4
test   edi,edi
je     804e952 <textdomain@@Base+0x1b62>
cmp    DWORD PTR [ebp-0x4],0x0
je     804e900 <textdomain@@Base+0x1b10>
push   0x8050ed3
push   edi
call   804908c <stpcpy@plt>
mov    ebx,eax
jmp    804e902 <textdomain@@Base+0x1b12>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    ebx,edi
xor    ecx,ecx
cmp    DWORD PTR [ebp+0xc],ecx
jbe    804e94f <textdomain@@Base+0x1b5f>
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebp+0x8]
movsx  edx,BYTE PTR [ecx+esi*1]
mov    eax,ds:0x80521ac
test   BYTE PTR [eax+edx*2+0x1],0x4
je     804e930 <textdomain@@Base+0x1b40>
mov    eax,ds:0x80521a0
mov    al,BYTE PTR [eax+edx*4]
jmp    804e946 <textdomain@@Base+0x1b56>
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp+0x8]
movsx  edx,BYTE PTR [ecx+esi*1]
mov    eax,ds:0x80521ac
test   BYTE PTR [eax+edx*2+0x1],0x8
je     804e949 <textdomain@@Base+0x1b59>
mov    al,BYTE PTR [ecx+esi*1]
mov    BYTE PTR [ebx],al
inc    ebx
inc    ecx
cmp    DWORD PTR [ebp+0xc],ecx
ja     804e90c <textdomain@@Base+0x1b1c>
mov    BYTE PTR [ebx],0x0
mov    eax,edi
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x20]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x24]
mov    DWORD PTR [ecx],0x0
mov    ecx,DWORD PTR [ebp+0x28]
mov    DWORD PTR [ecx],0x0
xor    esi,esi
xor    edi,edi
mov    ebx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edx],ebx
jmp    804e9c9 <textdomain@@Base+0x1bd9>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx]
add    al,0xd5
cmp    al,0x1
jbe    804e9d8 <textdomain@@Base+0x1be8>
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804e9d8 <textdomain@@Base+0x1be8>
cmp    BYTE PTR [ebx],0x5f
je     804e9d8 <textdomain@@Base+0x1be8>
cmp    BYTE PTR [ebx],0x40
jne    804e9c0 <textdomain@@Base+0x1bd0>
cmp    DWORD PTR [edx],ebx
jne    804e9f0 <textdomain@@Base+0x1c00>
push   0x0
push   ebx
call   8048eec <__rawmemchr@plt>
mov    ebx,eax
jmp    804eaa3 <textdomain@@Base+0x1cb3>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x5f
jne    804eaa3 <textdomain@@Base+0x1cb3>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ecx],ebx
jmp    804ea16 <textdomain@@Base+0x1c26>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    BYTE PTR [ebx],0x5f
je     804ea2d <textdomain@@Base+0x1c3d>
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804ea2d <textdomain@@Base+0x1c3d>
cmp    BYTE PTR [ebx],0x2e
je     804ea2d <textdomain@@Base+0x1c3d>
cmp    BYTE PTR [ebx],0x40
je     804ea2d <textdomain@@Base+0x1c3d>
mov    al,BYTE PTR [ebx]
add    al,0xd5
cmp    al,0x1
ja     804ea10 <textdomain@@Base+0x1c20>
or     esi,0x20
cmp    BYTE PTR [ebx],0x2e
jne    804eaa3 <textdomain@@Base+0x1cb3>
mov    edi,0x1
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x18]
mov    DWORD PTR [ecx],ebx
cmp    BYTE PTR [ebx],0x0
je     804ea53 <textdomain@@Base+0x1c63>
cmp    BYTE PTR [ebx],0x40
je     804ea53 <textdomain@@Base+0x1c63>
inc    ebx
cmp    BYTE PTR [ebx],0x0
jne    804ea48 <textdomain@@Base+0x1c58>
or     esi,0x10
mov    ecx,DWORD PTR [ebp+0x18]
cmp    DWORD PTR [ecx],ebx
je     804eaa3 <textdomain@@Base+0x1cb3>
mov    edx,DWORD PTR [ecx]
cmp    BYTE PTR [edx],0x0
je     804eaa3 <textdomain@@Base+0x1cb3>
mov    eax,ebx
sub    eax,DWORD PTR [ecx]
push   eax
push   edx
call   804e880 <textdomain@@Base+0x1a90>
mov    ecx,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ecx],eax
add    esp,0x8
push   eax
mov    ecx,DWORD PTR [ebp+0x18]
mov    eax,DWORD PTR [ecx]
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804eaa0 <textdomain@@Base+0x1cb0>
mov    ecx,DWORD PTR [ebp+0x1c]
mov    eax,DWORD PTR [ecx]
push   eax
call   804919c <free@plt>
jmp    804eaa3 <textdomain@@Base+0x1cb3>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
or     esi,0x8
cmp    BYTE PTR [ebx],0x40
je     804eab6 <textdomain@@Base+0x1cc6>
cmp    edi,0x1
je     804eb6c <textdomain@@Base+0x1d7c>
cmp    BYTE PTR [ebx],0x2b
jne    804eaee <textdomain@@Base+0x1cfe>
mov    edi,0x2
cmp    BYTE PTR [ebx],0x40
jne    804eac5 <textdomain@@Base+0x1cd5>
mov    edi,0x1
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ecx],ebx
jmp    804ead6 <textdomain@@Base+0x1ce6>
cmp    BYTE PTR [ebx],0x5f
je     804eae8 <textdomain@@Base+0x1cf8>
inc    ebx
cmp    edi,0x2
jne    804eae8 <textdomain@@Base+0x1cf8>
cmp    BYTE PTR [ebx],0x0
je     804eae8 <textdomain@@Base+0x1cf8>
mov    al,BYTE PTR [ebx]
add    al,0xd5
cmp    al,0x1
ja     804ead0 <textdomain@@Base+0x1ce0>
or     esi,0xc0
cmp    edi,0x1
je     804eb6c <textdomain@@Base+0x1d7c>
mov    al,BYTE PTR [ebx]
add    al,0xd5
cmp    al,0x1
jbe    804eb00 <textdomain@@Base+0x1d10>
cmp    BYTE PTR [ebx],0x5f
jne    804eb67 <textdomain@@Base+0x1d77>
mov    edi,0x2
cmp    BYTE PTR [ebx],0x2b
jne    804eb33 <textdomain@@Base+0x1d43>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x20]
mov    DWORD PTR [ecx],ebx
jmp    804eb26 <textdomain@@Base+0x1d36>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x5f
je     804eb30 <textdomain@@Base+0x1d40>
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     804eb30 <textdomain@@Base+0x1d40>
cmp    BYTE PTR [ebx],0x2c
jne    804eb20 <textdomain@@Base+0x1d30>
or     esi,0x4
cmp    BYTE PTR [ebx],0x2c
jne    804eb56 <textdomain@@Base+0x1d66>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x24]
mov    DWORD PTR [ecx],ebx
cmp    BYTE PTR [ebx],0x0
je     804eb53 <textdomain@@Base+0x1d63>
mov    esi,esi
cmp    BYTE PTR [ebx],0x5f
je     804eb53 <textdomain@@Base+0x1d63>
inc    ebx
cmp    BYTE PTR [ebx],0x0
jne    804eb48 <textdomain@@Base+0x1d58>
or     esi,0x2
cmp    BYTE PTR [ebx],0x5f
jne    804eb67 <textdomain@@Base+0x1d77>
mov    BYTE PTR [ebx],0x0
inc    ebx
mov    ecx,DWORD PTR [ebp+0x28]
mov    DWORD PTR [ecx],ebx
or     esi,0x1
cmp    edi,0x1
jne    804eba5 <textdomain@@Base+0x1db5>
mov    ecx,DWORD PTR [ebp+0x14]
cmp    DWORD PTR [ecx],0x0
je     804eb7e <textdomain@@Base+0x1d8e>
mov    eax,DWORD PTR [ecx]
cmp    BYTE PTR [eax],0x0
jne    804eb7e <textdomain@@Base+0x1d8e>
and    esi,0xffffffdf
mov    ecx,DWORD PTR [ebp+0x18]
cmp    DWORD PTR [ecx],0x0
je     804eb90 <textdomain@@Base+0x1da0>
mov    eax,DWORD PTR [ecx]
cmp    BYTE PTR [eax],0x0
jne    804eb90 <textdomain@@Base+0x1da0>
and    esi,0xffffffef
mov    ecx,DWORD PTR [ebp+0x10]
cmp    DWORD PTR [ecx],0x0
je     804eba5 <textdomain@@Base+0x1db5>
mov    eax,DWORD PTR [ecx]
cmp    BYTE PTR [eax],0x0
jne    804eba5 <textdomain@@Base+0x1db5>
and    esi,0xffffff7f
mov    eax,esi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0xffffffff
mov    DWORD PTR [ebp-0x8],0x0
xor    dl,dl
mov    edi,DWORD PTR [ebp+0x8]
mov    al,dl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    esi,ecx
dec    esi
xor    ebx,ebx
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax],0x0
je     804ec51 <textdomain@@Base+0x1e61>
lea    esi,[esi+0x0]
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+ebx*4]
push   eax
call   804909c <strncmp@plt>
mov    edx,eax
add    esp,0xc
test   edx,edx
jne    804ec47 <textdomain@@Base+0x1e57>
mov    eax,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [eax+ebx*4]
xor    al,al
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    eax,ecx
dec    eax
cmp    eax,esi
je     804ec60 <textdomain@@Base+0x1e70>
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    804ec40 <textdomain@@Base+0x1e50>
mov    DWORD PTR [ebp-0x4],ebx
jmp    804ec47 <textdomain@@Base+0x1e57>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x8],0x1
inc    ebx
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax+ebx*4],0x0
jne    804ebf8 <textdomain@@Base+0x1e08>
cmp    DWORD PTR [ebp-0x8],0x0
jne    804ec70 <textdomain@@Base+0x1e80>
mov    eax,DWORD PTR [ebp-0x4]
jmp    804ec75 <textdomain@@Base+0x1e85>
lea    esi,[esi+eiz*1+0x0]
mov    eax,ebx
jmp    804ec75 <textdomain@@Base+0x1e85>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,0xfffffffe
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    eax,ds:0x805233c
push   eax
push   0x8050ed7
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0xc
cmp    ebx,0xffffffff
jne    804ecc0 <textdomain@@Base+0x1ed0>
push   0x8050edc
jmp    804ecc5 <textdomain@@Base+0x1ed5>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   0x8050ee4
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x8
push   esi
push   edi
push   0x8050eee
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x10]
cmp    DWORD PTR ds:0x8052350,0x0
je     804ed20 <error@@Base+0x30>
mov    eax,ds:0x8052350
call   eax
jmp    804ed44 <error@@Base+0x54>
jmp    804ed20 <error@@Base+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x80521a4
push   eax
call   8048f5c <fflush@plt>
mov    eax,ds:0x805233c
push   eax
push   0x8050ef8
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x10
lea    eax,[ebp+0x14]
push   eax
push   esi
mov    eax,ds:0x80521a8
push   eax
call   804900c <vfprintf@plt>
inc    DWORD PTR ds:0x805234c
add    esp,0xc
test   ebx,ebx
je     804ed7b <error@@Base+0x8b>
push   ebx
call   8048f6c <strerror@plt>
push   eax
push   0x8050efd
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x10
mov    eax,ds:0x80521a8
push   eax
push   0xa
call   804918c <_IO_putc@plt>
mov    eax,ds:0x80521a8
push   eax
call   8048f5c <fflush@plt>
add    esp,0xc
test   edi,edi
je     804eda0 <error@@Base+0xb0>
push   edi
call   804917c <exit@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
cmp    DWORD PTR ds:0x8052354,0x0
je     804edff <error_at_line@@Base+0x4f>
cmp    DWORD PTR ds:0x8052324,esi
jne    804edf3 <error_at_line@@Base+0x43>
cmp    DWORD PTR ds:0x8052320,ebx
je     804eed0 <error_at_line@@Base+0x120>
push   ebx
mov    eax,ds:0x8052320
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804eed0 <error_at_line@@Base+0x120>
mov    DWORD PTR ds:0x8052320,ebx
mov    DWORD PTR ds:0x8052324,esi
cmp    DWORD PTR ds:0x8052350,0x0
je     804ee20 <error_at_line@@Base+0x70>
mov    eax,ds:0x8052350
call   eax
jmp    804ee44 <error_at_line@@Base+0x94>
jmp    804ee20 <error_at_line@@Base+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x80521a4
push   eax
call   8048f5c <fflush@plt>
mov    eax,ds:0x805233c
push   eax
push   0x8050f02
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x10
test   ebx,ebx
je     804ee5d <error_at_line@@Base+0xad>
push   esi
push   ebx
push   0x8050f06
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x10
lea    eax,[ebp+0x1c]
push   eax
mov    edx,DWORD PTR [ebp+0x18]
push   edx
mov    eax,ds:0x80521a8
push   eax
call   804900c <vfprintf@plt>
inc    DWORD PTR ds:0x805234c
add    esp,0xc
test   edi,edi
je     804ee97 <error_at_line@@Base+0xe7>
push   edi
call   8048f6c <strerror@plt>
push   eax
push   0x8050efd
mov    eax,ds:0x80521a8
push   eax
call   8048f3c <fprintf@plt>
add    esp,0x10
mov    eax,ds:0x80521a8
push   eax
push   0xa
call   804918c <_IO_putc@plt>
mov    eax,ds:0x80521a8
push   eax
call   8048f5c <fflush@plt>
add    esp,0xc
cmp    DWORD PTR [ebp+0x8],0x0
je     804eed0 <error_at_line@@Base+0x120>
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804917c <exit@plt>
jmp    804eed0 <error_at_line@@Base+0x120>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
push   edx
mov    eax,DWORD PTR [eax+0x10]
push   eax
call   804ef00 <error_at_line@@Base+0x150>
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
mov    bx,WORD PTR [ebp+0x8]
movzx  edi,bx
push   edi
call   804ef60 <error_at_line@@Base+0x1b0>
mov    BYTE PTR [esi],al
lea    eax,[esi+0x1]
push   eax
mov    eax,ebx
and    eax,0x1c0
push   eax
call   804f050 <error_at_line@@Base+0x2a0>
lea    eax,[esi+0x4]
push   eax
mov    eax,ebx
and    eax,0x38
shl    eax,0x3
push   eax
call   804f050 <error_at_line@@Base+0x2a0>
lea    eax,[esi+0x7]
push   eax
mov    eax,ebx
and    eax,0x7
shl    eax,0x6
push   eax
call   804f050 <error_at_line@@Base+0x2a0>
push   esi
push   edi
call   804f0a0 <error_at_line@@Base+0x2f0>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x6000
jne    804ef80 <error_at_line@@Base+0x1d0>
mov    eax,0x62
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x2000
jne    804efa0 <error_at_line@@Base+0x1f0>
mov    eax,0x63
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x4000
jne    804efc0 <error_at_line@@Base+0x210>
mov    eax,0x64
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x8000
jne    804efe0 <error_at_line@@Base+0x230>
mov    eax,0x2d
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0x1000
jne    804f000 <error_at_line@@Base+0x250>
mov    eax,0x70
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0xa000
jne    804f020 <error_at_line@@Base+0x270>
mov    eax,0x6c
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,edx
and    eax,0xf000
cmp    eax,0xc000
je     804f040 <error_at_line@@Base+0x290>
mov    eax,0x3f
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x73
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0xc]
mov    ax,WORD PTR [ebp+0x8]
test   ah,0x1
je     804f070 <error_at_line@@Base+0x2c0>
mov    BYTE PTR [edx],0x72
jmp    804f073 <error_at_line@@Base+0x2c3>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    BYTE PTR [edx],0x2d
test   al,al
jge    804f080 <error_at_line@@Base+0x2d0>
mov    BYTE PTR [edx+0x1],0x77
jmp    804f084 <error_at_line@@Base+0x2d4>
lea    esi,[esi+0x0]
mov    BYTE PTR [edx+0x1],0x2d
test   al,0x40
je     804f090 <error_at_line@@Base+0x2e0>
mov    BYTE PTR [edx+0x2],0x78
mov    esp,ebp
pop    ebp
ret    
mov    BYTE PTR [edx+0x2],0x2d
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
mov    dx,WORD PTR [ebp+0x8]
test   dh,0x8
je     804f0c4 <error_at_line@@Base+0x314>
cmp    BYTE PTR [eax+0x3],0x78
je     804f0c0 <error_at_line@@Base+0x310>
mov    BYTE PTR [eax+0x3],0x53
jmp    804f0c4 <error_at_line@@Base+0x314>
nop
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [eax+0x3],0x73
test   dh,0x4
je     804f0e4 <error_at_line@@Base+0x334>
cmp    BYTE PTR [eax+0x6],0x78
je     804f0e0 <error_at_line@@Base+0x330>
mov    BYTE PTR [eax+0x6],0x53
jmp    804f0e4 <error_at_line@@Base+0x334>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [eax+0x6],0x73
test   dh,0x2
je     804f104 <error_at_line@@Base+0x354>
cmp    BYTE PTR [eax+0x9],0x78
je     804f100 <error_at_line@@Base+0x350>
mov    BYTE PTR [eax+0x9],0x54
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [eax+0x9],0x74
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR ds:0x8052328
test   esi,esi
je     804f133 <error_at_line@@Base+0x383>
mov    esi,esi
cmp    DWORD PTR [esi],edi
je     804f179 <error_at_line@@Base+0x3c9>
mov    esi,DWORD PTR [esi+0x8]
test   esi,esi
jne    804f128 <error_at_line@@Base+0x378>
push   edi
call   8048f9c <getpwuid@plt>
mov    ebx,eax
push   0xc
call   804f3b0 <error_at_line@@Base+0x600>
mov    esi,eax
mov    DWORD PTR [esi],edi
add    esp,0x8
test   ebx,ebx
jne    804f160 <error_at_line@@Base+0x3b0>
push   edi
push   0x8050f0e
lea    ebx,[ebp-0x14]
push   ebx
call   80491fc <sprintf@plt>
push   ebx
jmp    804f163 <error_at_line@@Base+0x3b3>
nop
mov    eax,DWORD PTR [ebx]
push   eax
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [esi+0x4],eax
mov    eax,ds:0x8052328
mov    DWORD PTR [esi+0x8],eax
mov    DWORD PTR ds:0x8052328,esi
mov    eax,DWORD PTR [esi+0x4]
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR ds:0x8052328
test   ebx,ebx
je     804f1c2 <error_at_line@@Base+0x412>
nop
mov    edx,DWORD PTR [ebx+0x4]
mov    al,BYTE PTR [edx]
cmp    BYTE PTR [esi],al
jne    804f1bb <error_at_line@@Base+0x40b>
push   esi
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804f233 <error_at_line@@Base+0x483>
mov    ebx,DWORD PTR [ebx+0x8]
test   ebx,ebx
jne    804f1a4 <error_at_line@@Base+0x3f4>
mov    ebx,DWORD PTR ds:0x805232c
test   ebx,ebx
je     804f1ea <error_at_line@@Base+0x43a>
mov    edx,DWORD PTR [ebx+0x4]
mov    al,BYTE PTR [edx]
cmp    BYTE PTR [esi],al
jne    804f1e3 <error_at_line@@Base+0x433>
push   esi
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804f216 <error_at_line@@Base+0x466>
mov    ebx,DWORD PTR [ebx+0x8]
test   ebx,ebx
jne    804f1cc <error_at_line@@Base+0x41c>
push   esi
call   804916c <getpwnam@plt>
mov    edi,eax
push   0xc
call   804f3b0 <error_at_line@@Base+0x600>
mov    ebx,eax
push   esi
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [ebx+0x4],eax
test   edi,edi
jne    804f220 <error_at_line@@Base+0x470>
mov    eax,ds:0x805232c
mov    DWORD PTR [ebx+0x8],eax
mov    DWORD PTR ds:0x805232c,ebx
xor    eax,eax
jmp    804f235 <error_at_line@@Base+0x485>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [ebx],eax
mov    eax,ds:0x8052328
mov    DWORD PTR [ebx+0x8],eax
mov    DWORD PTR ds:0x8052328,ebx
mov    eax,ebx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR ds:0x8052330
test   esi,esi
je     804f263 <error_at_line@@Base+0x4b3>
mov    esi,esi
cmp    DWORD PTR [esi],edi
je     804f2a9 <error_at_line@@Base+0x4f9>
mov    esi,DWORD PTR [esi+0x8]
test   esi,esi
jne    804f258 <error_at_line@@Base+0x4a8>
push   edi
call   8048fbc <getgrgid@plt>
mov    ebx,eax
push   0xc
call   804f3b0 <error_at_line@@Base+0x600>
mov    esi,eax
mov    DWORD PTR [esi],edi
add    esp,0x8
test   ebx,ebx
jne    804f290 <error_at_line@@Base+0x4e0>
push   edi
push   0x8050f0e
lea    ebx,[ebp-0x14]
push   ebx
call   80491fc <sprintf@plt>
push   ebx
jmp    804f293 <error_at_line@@Base+0x4e3>
nop
mov    eax,DWORD PTR [ebx]
push   eax
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [esi+0x4],eax
mov    eax,ds:0x8052330
mov    DWORD PTR [esi+0x8],eax
mov    DWORD PTR ds:0x8052330,esi
mov    eax,DWORD PTR [esi+0x4]
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR ds:0x8052330
test   ebx,ebx
je     804f2f2 <error_at_line@@Base+0x542>
nop
mov    edx,DWORD PTR [ebx+0x4]
mov    al,BYTE PTR [edx]
cmp    BYTE PTR [esi],al
jne    804f2eb <error_at_line@@Base+0x53b>
push   esi
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804f363 <error_at_line@@Base+0x5b3>
mov    ebx,DWORD PTR [ebx+0x8]
test   ebx,ebx
jne    804f2d4 <error_at_line@@Base+0x524>
mov    ebx,DWORD PTR ds:0x8052334
test   ebx,ebx
je     804f31a <error_at_line@@Base+0x56a>
mov    edx,DWORD PTR [ebx+0x4]
mov    al,BYTE PTR [edx]
cmp    BYTE PTR [esi],al
jne    804f313 <error_at_line@@Base+0x563>
push   esi
push   edx
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804f346 <error_at_line@@Base+0x596>
mov    ebx,DWORD PTR [ebx+0x8]
test   ebx,ebx
jne    804f2fc <error_at_line@@Base+0x54c>
push   esi
call   8048ebc <getgrnam@plt>
mov    edi,eax
push   0xc
call   804f3b0 <error_at_line@@Base+0x600>
mov    ebx,eax
push   esi
call   804f420 <error_at_line@@Base+0x670>
mov    DWORD PTR [ebx+0x4],eax
test   edi,edi
jne    804f350 <error_at_line@@Base+0x5a0>
mov    eax,ds:0x8052334
mov    DWORD PTR [ebx+0x8],eax
mov    DWORD PTR ds:0x8052334,ebx
xor    eax,eax
jmp    804f365 <error_at_line@@Base+0x5b5>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edi+0x8]
mov    DWORD PTR [ebx],eax
mov    eax,ds:0x8052330
mov    DWORD PTR [ebx+0x8],eax
mov    DWORD PTR ds:0x8052330,ebx
mov    eax,ebx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
xor    ebx,ebx
cmp    DWORD PTR [ebp+0x8],0x0
jne    804f388 <error_at_line@@Base+0x5d8>
push   0x1
call   8048fcc <malloc@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    804f39e <error_at_line@@Base+0x5ee>
push   0x8050f11
push   0x0
mov    eax,ds:0x8051fd4
push   eax
call   804ecf0 <error@@Base>
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8048fcc <malloc@plt>
add    esp,0x4
test   eax,eax
jne    804f3ca <error_at_line@@Base+0x61a>
push   ebx
call   804f370 <error_at_line@@Base+0x5c0>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    804f3e0 <error_at_line@@Base+0x630>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
test   eax,eax
jne    804f400 <error_at_line@@Base+0x650>
push   ebx
call   804f3b0 <error_at_line@@Base+0x600>
jmp    804f414 <error_at_line@@Base+0x664>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebx
push   eax
call   80490bc <realloc@plt>
add    esp,0x8
test   eax,eax
jne    804f414 <error_at_line@@Base+0x664>
push   ebx
call   804f370 <error_at_line@@Base+0x5c0>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
xor    dl,dl
mov    edi,DWORD PTR [ebp+0x8]
mov    al,dl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [ebp-0x4],ecx
push   ecx
call   804f3b0 <error_at_line@@Base+0x600>
add    esp,0x4
mov    edx,eax
push   edx
call   804923c <strcpy@plt>
mov    edx,eax
mov    edi,DWORD PTR [ebp-0x8]
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0xc]
test   esi,esi
jne    804f476 <error_at_line@@Base+0x6c6>
lea    esi,[ebp-0x4]
call   8048fac <__errno_location@plt>
mov    edi,eax
mov    DWORD PTR [edi],0x0
push   0x0
push   ebx
push   esi
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804906c <__strtol_internal@plt>
mov    ebx,eax
add    esp,0x10
cmp    DWORD PTR [edi],0x0
je     804f4b0 <error_at_line@@Base+0x700>
mov    eax,0x3
jmp    804f6b7 <error_at_line@@Base+0x907>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    edx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [esi],edx
jne    804f4d0 <error_at_line@@Base+0x720>
mov    eax,0x1
jmp    804f6b7 <error_at_line@@Base+0x907>
jmp    804f4d0 <error_at_line@@Base+0x720>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    DWORD PTR [ebp+0x18],0x0
jne    804f4f0 <error_at_line@@Base+0x740>
mov    eax,DWORD PTR [esi]
cmp    BYTE PTR [eax],0x0
je     804f6b0 <error_at_line@@Base+0x900>
jmp    804f6a0 <error_at_line@@Base+0x8f0>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [esi]
cmp    BYTE PTR [eax],0x0
je     804f6b0 <error_at_line@@Base+0x900>
movsx  eax,BYTE PTR [eax]
push   eax
mov    edx,DWORD PTR [ebp+0x18]
push   edx
call   8048ecc <strchr@plt>
test   eax,eax
je     804f6b0 <error_at_line@@Base+0x900>
mov    eax,DWORD PTR [esi]
mov    al,BYTE PTR [eax]
add    al,0xbe
movsx  eax,al
cmp    eax,0x35
ja     804f6a0 <error_at_line@@Base+0x8f0>
jmp    DWORD PTR [eax*4+0x804f530]
lea    esi,[esi+eiz*1+0x0]
inc    eax
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0x10
test   BYTE PTR [eax+ecx*1],0x2e
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0x40
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0x60
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0xa0
test   BYTE PTR [eax+ecx*1],0x80
test   BYTE PTR [eax+ecx*1],0x90
lea    esi,[esi+eiz*1+0x0]
fld    QWORD PTR ds:0x8050f24
push   ebx
ficomp DWORD PTR [esp]
add    esp,0x4
fnstsw ax
and    ah,0x45
cmp    ah,0x1
je     804f49a <error_at_line@@Base+0x6ea>
shl    ebx,0x9
inc    DWORD PTR [esi]
jmp    804f6b0 <error_at_line@@Base+0x900>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
fld    QWORD PTR ds:0x8050f2c
push   ebx
ficomp DWORD PTR [esp]
add    esp,0x4
fnstsw ax
and    ah,0x45
cmp    ah,0x1
je     804f49a <error_at_line@@Base+0x6ea>
shl    ebx,0xa
jmp    804f62e <error_at_line@@Base+0x87e>
fld    QWORD PTR ds:0x8050f34
push   ebx
ficomp DWORD PTR [esp]
add    esp,0x4
fnstsw ax
and    ah,0x45
cmp    ah,0x1
je     804f49a <error_at_line@@Base+0x6ea>
shl    ebx,0x14
jmp    804f62e <error_at_line@@Base+0x87e>
fld    QWORD PTR ds:0x8050f3c
push   ebx
ficomp DWORD PTR [esp]
add    esp,0x4
fnstsw ax
and    ah,0x45
cmp    ah,0x1
je     804f49a <error_at_line@@Base+0x6ea>
add    ebx,ebx
jmp    804f62e <error_at_line@@Base+0x87e>
nop
mov    eax,0x2
jmp    804f6b7 <error_at_line@@Base+0x907>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [edx],ebx
xor    eax,eax
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x4
push   edi
push   ebx
push   0x13
push   0xd1
push   0x8051fd8
call   804f810 <error_at_line@@Base+0xa60>
push   0x84
call   8048fcc <malloc@plt>
mov    ds:0x80523f0,eax
mov    ds:0x8052360,eax
push   0x8050f44
push   0x8051fd8
call   80491ec <fopen@plt>
mov    ds:0x80523f4,eax
add    esp,0x18
test   eax,eax
je     804f7ae <error_at_line@@Base+0x9fe>
xor    bl,bl
nop
mov    eax,ds:0x80523f4
push   eax
push   0x7e
push   0x8052370
call   804902c <fgets@plt>
add    esp,0xc
test   eax,eax
je     804f7a0 <error_at_line@@Base+0x9f0>
push   0x84
call   8048fcc <malloc@plt>
mov    edx,eax
mov    eax,ds:0x80523f0
mov    DWORD PTR [esp+0xc],eax
mov    eax,DWORD PTR [esp+0xc]
mov    DWORD PTR [eax],edx
push   0x8052370
add    DWORD PTR [esp+0x10],0x4
mov    eax,DWORD PTR [esp+0x10]
push   eax
call   804923c <strcpy@plt>
mov    edx,DWORD PTR ds:0x80523f0
lea    edi,[edx+0x4]
mov    al,bl
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
mov    DWORD PTR [esp+0x14],ecx
mov    eax,DWORD PTR [esp+0x14]
mov    BYTE PTR [edx+eax*1+0x2],0x0
mov    eax,ds:0x80523f0
mov    eax,DWORD PTR [eax]
mov    ds:0x80523f0,eax
add    esp,0xc
jmp    804f71c <error_at_line@@Base+0x96c>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x80523f4
push   eax
call   80490ec <fclose@plt>
add    esp,0x4
mov    eax,ds:0x80523f0
mov    DWORD PTR [eax],0x0
pop    ebx
pop    edi
add    esp,0x4
ret    
nop
push   esi
push   ebx
mov    esi,DWORD PTR [esp+0xc]
xor    ebx,ebx
mov    eax,ds:0x8052360
mov    ds:0x80523f0,eax
cmp    DWORD PTR [eax],0x0
je     804f804 <error_at_line@@Base+0xa54>
nop
push   esi
mov    eax,ds:0x80523f0
add    eax,0x4
push   eax
call   8048f1c <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804f7ef <error_at_line@@Base+0xa3f>
inc    ebx
mov    eax,ds:0x80523f0
mov    eax,DWORD PTR [eax]
mov    ds:0x80523f0,eax
cmp    DWORD PTR [eax],0x0
je     804f804 <error_at_line@@Base+0xa54>
test   ebx,ebx
je     804f7d8 <error_at_line@@Base+0xa28>
mov    eax,ebx
pop    ebx
pop    esi
ret    
nop
nop
nop
nop
nop
nop
nop
push   ebx
mov    ecx,DWORD PTR [esp+0x10]
mov    bl,BYTE PTR [esp+0xc]
xor    edx,edx
cmp    edx,ecx
jge    804f82c <error_at_line@@Base+0xa7c>
mov    eax,DWORD PTR [esp+0x8]
nop
xor    BYTE PTR [eax],bl
inc    eax
inc    edx
cmp    edx,ecx
jl     804f824 <error_at_line@@Base+0xa74>
pop    ebx
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8051fec
cmp    DWORD PTR ds:0x8051fec,0xffffffff
je     804f850 <error_at_line@@Base+0xaa0>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    804f844 <error_at_line@@Base+0xa94>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
call   804f879 <error_at_line@@Base+0xac9>
pop    ebx
add    ebx,0x2783
call   8049280 <strcpy@plt+0x44>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
