push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048394 <printf@plt+0x38>
nop
call   8048430 <printf@plt+0xd4>
call   80484c0 <printf@plt+0x164>
leave  
ret    
push   DWORD PTR ds:0x8049624
jmp    DWORD PTR ds:0x8049628
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804962c
push   0x0
jmp    80482fc <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x8049630
push   0x8
jmp    80482fc <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x8049634
push   0x10
jmp    80482fc <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x8049638
push   0x18
jmp    80482fc <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804963c
push   0x20
jmp    80482fc <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x8049640
push   0x28
jmp    80482fc <__register_frame_info@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8048500
push   0x80482e4
push   ecx
push   esi
push   0x8048470
call   8046b06 <__register_frame_info@plt-0x1806>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   804839e <printf@plt+0x42>
pop    ebx
add    ebx,0x1282
mov    eax,DWORD PTR [ebx+0x24]
test   eax,eax
je     80483b1 <printf@plt+0x55>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x8049540
test   edx,edx
jne    8048419 <printf@plt+0xbd>
mov    edx,DWORD PTR ds:0x804953c
mov    eax,DWORD PTR [edx]
test   eax,eax
je     80483f6 <printf@plt+0x9a>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    ds:0x804953c,eax
call   DWORD PTR [edx]
mov    edx,DWORD PTR ds:0x804953c
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    80483e0 <printf@plt+0x84>
mov    eax,0x804832c
test   eax,eax
je     804840f <printf@plt+0xb3>
sub    esp,0xc
push   0x8049544
call   804832c <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x8049540,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    eax,0x804830c
mov    ebp,esp
sub    esp,0x8
test   eax,eax
je     8048454 <printf@plt+0xf8>
sub    esp,0x8
push   0x8049648
push   0x8049544
call   804830c <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1a4
lea    eax,[ebp-0x198]
push   eax
call   804833c <uname@plt>
add    esp,0x10
test   eax,eax
je     80484a0 <printf@plt+0x144>
sub    esp,0xc
push   0x8048528
call   804831c <perror@plt>
mov    eax,0x1
jmp    80484b6 <printf@plt+0x15a>
sub    esp,0x8
lea    eax,[ebp-0x94]
push   eax
push   0x804852d
call   804835c <printf@plt>
xor    eax,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x8049610
mov    ebx,0x8049610
cmp    eax,0xffffffff
je     80484ec <printf@plt+0x190>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    80484e0 <printf@plt+0x184>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   804850a <printf@plt+0x1ae>
pop    ebx
add    ebx,0x1116
lea    esi,[esi+0x0]
call   80483c0 <printf@plt+0x64>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
