push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048ba4 <strcpy@plt+0x40>
nop
call   8048c40 <strcpy@plt+0xdc>
call   804b3c0 <strcpy@plt+0x285c>
leave  
ret    
push   DWORD PTR ds:0x804c974
jmp    DWORD PTR ds:0x804c978
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804c97c
push   0x0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c980
push   0x8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c984
push   0x10
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c988
push   0x18
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c98c
push   0x20
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c990
push   0x28
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c994
push   0x30
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c998
push   0x38
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c99c
push   0x40
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9a0
push   0x48
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9a4
push   0x50
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9a8
push   0x58
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9ac
push   0x60
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9b0
push   0x68
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9b4
push   0x70
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9b8
push   0x78
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9bc
push   0x80
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9c0
push   0x88
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9c4
push   0x90
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9c8
push   0x98
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9cc
push   0xa0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9d0
push   0xa8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9d4
push   0xb0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9d8
push   0xb8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9dc
push   0xc0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9e0
push   0xc8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9e4
push   0xd0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9e8
push   0xd8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9ec
push   0xe0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9f0
push   0xe8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9f4
push   0xf0
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9f8
push   0xf8
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804c9fc
push   0x100
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca00
push   0x108
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca04
push   0x110
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca08
push   0x118
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca0c
push   0x120
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca10
push   0x128
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca14
push   0x130
jmp    80488e4 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804ca18
push   0x138
jmp    80488e4 <__register_frame_info@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x804b400
push   0x80488cc
push   ecx
push   esi
push   0x80493d0
call   8048a54 <__libc_start_main@plt>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   8048bae <strcpy@plt+0x4a>
pop    ebx
add    ebx,0x3dc2
mov    eax,DWORD PTR [ebx+0xac]
test   eax,eax
je     8048bc1 <strcpy@plt+0x5d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x804c860
test   edx,edx
jne    8048c29 <strcpy@plt+0xc5>
mov    edx,DWORD PTR ds:0x804c85c
mov    eax,DWORD PTR [edx]
test   eax,eax
je     8048c06 <strcpy@plt+0xa2>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    ds:0x804c85c,eax
call   DWORD PTR [edx]
mov    edx,DWORD PTR ds:0x804c85c
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    8048bf0 <strcpy@plt+0x8c>
mov    eax,0x80489f4
test   eax,eax
je     8048c1f <strcpy@plt+0xbb>
sub    esp,0xc
push   0x804c894
call   80489f4 <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x804c860,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    eax,0x80488f4
mov    ebp,esp
sub    esp,0x8
test   eax,eax
je     8048c64 <strcpy@plt+0x100>
sub    esp,0x8
push   0x804ca2c
push   0x804c894
call   80488f4 <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    DWORD PTR ds:0x804c890,0x1
push   0x8048c80
push   0xe
call   8048964 <signal@plt>
add    esp,0x10
mov    DWORD PTR [ebp+0x8],0x3c
leave  
jmp    8048b44 <alarm@plt>
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR ds:0x804c888,0x1
mov    DWORD PTR [ebp+0x8],0x0
leave  
jmp    8048b44 <alarm@plt>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    DWORD PTR ds:0x804c888,0x0
call   8048b44 <alarm@plt>
pop    eax
pop    edx
push   0x8048cac
push   0xe
call   8048964 <signal@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
push   0x804b440
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
mov    eax,0x1
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x28
xor    eax,eax
cld    
lea    edi,[ebp-0x28]
mov    ecx,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
rep stos DWORD PTR es:[edi],eax
push   ebx
call   8048a44 <inet_addr@plt>
mov    DWORD PTR [ebp-0x24],eax
mov    BYTE PTR [esi],0x0
mov    edi,DWORD PTR [ebp-0x24]
add    esp,0x10
cmp    edi,0xffffffff
jne    8048d6a <strcpy@plt+0x206>
sub    esp,0xc
push   ebx
call   8048aa4 <gethostbyname@plt>
add    esp,0x10
test   eax,eax
jne    8048d60 <strcpy@plt+0x1fc>
mov    eax,edi
jmp    8048d84 <strcpy@plt+0x220>
nop
mov    eax,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [eax]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x24],eax
sub    esp,0xc
push   DWORD PTR [ebp-0x24]
call   80489d4 <inet_ntoa@plt>
pop    ecx
pop    ebx
push   eax
push   esi
call   8048b64 <strcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x24]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1a4
mov    eax,DWORD PTR [ebp+0xc]
mov    WORD PTR [ebp-0x19a],ax
lea    eax,[ebp-0x58]
push   eax
mov    DWORD PTR [ebp-0x1a0],eax
push   0x0
call   8048b24 <tcgetattr@plt>
add    esp,0xc
cld    
mov    esi,DWORD PTR [ebp-0x1a0]
lea    eax,[ebp-0x98]
lea    edi,[ebp-0x98]
mov    ecx,0xf
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
push   eax
push   0x2
and    DWORD PTR [ebp-0x8c],0xfffffff4
and    DWORD PTR [ebp-0x98],0xffffebff
push   0x0
call   8048994 <tcsetattr@plt>
pop    edx
pop    ecx
push   0x804b727
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    eax
push   DWORD PTR ds:0x804ca20
call   8048974 <fflush@plt>
add    esp,0xc
push   DWORD PTR ds:0x804ca24
lea    ebx,[ebp-0x198]
push   0xff
push   ebx
call   8048a24 <fgets@plt>
add    esp,0xc
push   DWORD PTR [ebp-0x1a0]
push   0x2
push   0x0
call   8048994 <tcsetattr@plt>
add    esp,0xc
push   0x804cb1c
xor    eax,eax
cld    
mov    edi,ebx
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
push   ecx
push   ebx
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0xc
push   0x804cb1c
push   DWORD PTR [ebp+0x8]
mov    ax,WORD PTR [ebp-0x19a]
ror    ax,0x8
mov    WORD PTR [ebp-0x19a],ax
movzx  eax,ax
push   eax
call   804b120 <strcpy@plt+0x25bc>
pop    esi
pop    edi
push   0x804b74b
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp+0x8],0x1
leave  
jmp    8048ab4 <exit@plt>
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp+0x8],0x0
leave  
jmp    8048b54 <wait@plt>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x8]
push   0x804cae0
push   0x2
push   0x0
call   8048994 <tcsetattr@plt>
add    esp,0xc
push   ebx
push   0x804b732
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
add    esp,0x10
mov    DWORD PTR [ebp+0x8],0x0
mov    ebx,DWORD PTR [ebp-0x4]
leave  
jmp    8048ab4 <exit@plt>
nop
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x8048efc
push   0x1c
call   8048964 <signal@plt>
inc    DWORD PTR ds:0x804c88c
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x48a4
push   0x8048e94
mov    ebx,DWORD PTR [ebp+0xc]
push   0x11
mov    DWORD PTR [ebp-0x488c],0x10
call   8048964 <signal@plt>
add    esp,0xc
lea    eax,[ebp-0x488c]
push   eax
lea    eax,[ebp-0x28]
push   eax
push   ebx
call   80489c4 <accept@plt>
mov    DWORD PTR [esp],ebx
mov    DWORD PTR [ebp-0x489c],eax
call   8048914 <close@plt>
mov    esi,DWORD PTR [ebp-0x489c]
add    esp,0x10
test   esi,esi
jns    8048f84 <strcpy@plt+0x420>
sub    esp,0xc
push   0x804b74d
call   8048924 <perror@plt>
mov    eax,0x1
jmp    80493c6 <strcpy@plt+0x862>
nop
sub    esp,0x8
push   0x8048ea8
push   0x11
call   8048964 <signal@plt>
pop    ecx
pop    ebx
push   0xf
push   DWORD PTR [ebp+0x8]
call   8048af4 <kill@plt>
pop    eax
pop    edx
push   0x804b640
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    esi
pop    edi
push   0x804cae0
push   0x0
call   8048b24 <tcgetattr@plt>
pop    ecx
pop    ebx
push   0x8048ebc
push   0x1
call   8048964 <signal@plt>
pop    eax
pop    edx
push   0x8048ebc
push   0x2
call   8048964 <signal@plt>
pop    esi
pop    edi
push   0x8048ebc
push   0x3
call   8048964 <signal@plt>
pop    ecx
pop    ebx
push   0x8048ebc
push   0x4
call   8048964 <signal@plt>
pop    eax
pop    edx
push   0x8048ebc
push   0x6
call   8048964 <signal@plt>
pop    esi
pop    edi
push   0x8048ebc
push   0x7
call   8048964 <signal@plt>
pop    ecx
pop    ebx
push   0x8048ebc
push   0x8
call   8048964 <signal@plt>
pop    eax
pop    edx
push   0x8048ebc
push   0xb
call   8048964 <signal@plt>
pop    esi
pop    edi
push   0x8048ebc
push   0xf
call   8048964 <signal@plt>
pop    ecx
pop    ebx
push   0x8048ebc
push   0xd
call   8048964 <signal@plt>
pop    eax
pop    edx
push   0x8048ebc
push   0x1d
call   8048964 <signal@plt>
mov    DWORD PTR [esp],0x0
call   8048efc <strcpy@plt+0x398>
add    esp,0xc
cld    
mov    edi,0x804caa0
mov    esi,0x804cae0
mov    ecx,0xf
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
push   0x804caa0
push   0x2
and    DWORD PTR ds:0x804caac,0xfffffff4
and    DWORD PTR ds:0x804caa0,0xffffebff
push   0x0
call   8048994 <tcsetattr@plt>
pop    esi
pop    edi
lea    esi,[ebp-0x48]
push   esi
push   0x804cb1c
call   804b144 <strcpy@plt+0x25e0>
pop    ecx
pop    ebx
lea    eax,[ebp-0x68]
push   eax
push   0x804cb1c
call   804b144 <strcpy@plt+0x25e0>
mov    DWORD PTR [esp],0x804b754
mov    BYTE PTR [ebp-0x4068],0x0
call   8048954 <getenv@plt>
add    esp,0x10
test   eax,eax
je     80490e9 <strcpy@plt+0x585>
push   edx
push   eax
push   0x804b759
lea    eax,[ebp-0x4068]
push   eax
call   8048b04 <sprintf@plt>
add    esp,0x10
push   edi
push   0x40
lea    ebx,[ebp-0x4068]
push   ebx
push   esi
call   804b168 <strcpy@plt+0x2604>
add    esp,0xc
push   0x40
push   ebx
push   DWORD PTR [ebp-0x489c]
call   8048904 <write@plt>
mov    DWORD PTR [esp],0x0
call   8048c80 <strcpy@plt+0x11c>
lea    eax,[ebp-0x4868]
mov    DWORD PTR [ebp-0x48a0],eax
mov    eax,DWORD PTR [ebp-0x489c]
shr    eax,0x5
shl    eax,0x2
mov    DWORD PTR ds:0x804c890,0x0
add    esp,0x10
mov    DWORD PTR [ebp-0x48a4],eax
lea    esi,[esi+0x0]
mov    ecx,0x200
mov    edi,DWORD PTR [ebp-0x48a0]
xor    eax,eax
cld    
rep stos DWORD PTR es:[edi],eax
bts    DWORD PTR [ebp-0x4868],eax
mov    eax,DWORD PTR [ebp-0x489c]
and    eax,0x1f
mov    edx,DWORD PTR [ebp-0x48a0]
mov    ecx,DWORD PTR [ebp-0x48a4]
bts    DWORD PTR [ecx+edx*1],eax
mov    ebx,DWORD PTR ds:0x804c88c
test   ebx,ebx
je     8049209 <strcpy@plt+0x6a5>
push   ecx
lea    eax,[ebp-0x4898]
push   eax
push   0x5413
push   0x1
call   8048ad4 <ioctl@plt>
add    esp,0x10
test   eax,eax
jne    80491ff <strcpy@plt+0x69b>
movzx  ax,BYTE PTR [ebp-0x4895]
mov    BYTE PTR [ebp-0x4877],al
mov    al,BYTE PTR [ebp-0x4896]
push   edx
mov    BYTE PTR [ebp-0x4876],al
movzx  ax,BYTE PTR [ebp-0x4897]
push   0x5
mov    BYTE PTR [ebp-0x4875],al
lea    ebx,[ebp-0x4878]
mov    al,BYTE PTR [ebp-0x4898]
push   ebx
mov    BYTE PTR [ebp-0x4874],al
lea    eax,[ebp-0x48]
push   eax
mov    BYTE PTR [ebp-0x4878],0xb
call   804b168 <strcpy@plt+0x2604>
add    esp,0xc
push   0x5
push   ebx
push   DWORD PTR [ebp-0x489c]
call   8048904 <write@plt>
add    esp,0x10
mov    DWORD PTR ds:0x804c88c,0x0
call   80489a4 <__errno_location@plt>
mov    edi,eax
mov    DWORD PTR [edi],0x0
mov    eax,ds:0x804c890
test   eax,eax
je     8049268 <strcpy@plt+0x704>
push   esi
push   0x5
lea    ebx,[ebp-0x4888]
push   ebx
lea    eax,[ebp-0x48]
push   eax
mov    DWORD PTR [ebp-0x4888],0x0
mov    BYTE PTR [ebp-0x4884],0x0
mov    BYTE PTR [ebp-0x4888],0xb
mov    DWORD PTR ds:0x804c890,0x0
call   804b168 <strcpy@plt+0x2604>
add    esp,0xc
push   0x5
push   ebx
push   DWORD PTR [ebp-0x489c]
call   8048904 <write@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
push   0x0
push   0x0
mov    eax,DWORD PTR [ebp-0x489c]
push   DWORD PTR [ebp-0x48a0]
inc    eax
push   eax
call   8048984 <select@plt>
add    esp,0x20
test   eax,eax
jns    804929c <strcpy@plt+0x738>
cmp    DWORD PTR [edi],0x4
jne    804938c <strcpy@plt+0x828>
jmp    8049144 <strcpy@plt+0x5e0>
lea    esi,[esi+0x0]
xor    edx,edx
bt     DWORD PTR [ebp-0x4868],edx
setb   al
test   al,al
je     8049315 <strcpy@plt+0x7b1>
mov    DWORD PTR [edi],0x0
push   ebx
push   0x4000
lea    esi,[ebp-0x4068]
push   esi
push   0x0
call   8048b34 <read@plt>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
jg     80492d8 <strcpy@plt+0x774>
cmp    DWORD PTR [edi],0x4
jne    804938c <strcpy@plt+0x828>
push   ecx
push   ebx
push   0xb
push   esi
call   80489b4 <memchr@plt>
add    esp,0x10
test   eax,eax
jne    804938c <strcpy@plt+0x828>
push   edx
push   ebx
push   esi
lea    eax,[ebp-0x48]
push   eax
call   804b168 <strcpy@plt+0x2604>
add    esp,0xc
push   ebx
push   esi
push   DWORD PTR [ebp-0x489c]
call   8048904 <write@plt>
add    esp,0x10
test   eax,eax
jns    8049315 <strcpy@plt+0x7b1>
cmp    DWORD PTR [edi],0x4
jne    804938c <strcpy@plt+0x828>
mov    eax,DWORD PTR [ebp-0x489c]
and    eax,0x1f
mov    ecx,DWORD PTR [ebp-0x48a0]
mov    edx,DWORD PTR [ebp-0x48a4]
bt     DWORD PTR [edx+ecx*1],eax
setb   al
test   al,al
je     8049144 <strcpy@plt+0x5e0>
call   80489a4 <__errno_location@plt>
mov    edi,eax
mov    DWORD PTR [edi],0x0
push   eax
push   0x4000
lea    esi,[ebp-0x4068]
push   esi
push   DWORD PTR [ebp-0x489c]
call   8048b34 <read@plt>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
jg     804936c <strcpy@plt+0x808>
cmp    DWORD PTR [edi],0x4
jne    804938c <strcpy@plt+0x828>
push   edi
push   ebx
push   esi
lea    eax,[ebp-0x68]
push   eax
call   804b1c4 <strcpy@plt+0x2660>
add    esp,0xc
push   ebx
push   esi
push   0x1
call   8048904 <write@plt>
add    esp,0x10
jmp    8049144 <strcpy@plt+0x5e0>
push   esi
push   0x804cae0
push   0x2
push   0x0
call   8048994 <tcsetattr@plt>
add    esp,0x0
call   80489a4 <__errno_location@plt>
add    esp,0xc
push   DWORD PTR [eax]
push   0x804b680
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    ebx
push   DWORD PTR [ebp-0x489c]
call   8048914 <close@plt>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x178
cld    
xor    eax,eax
mov    ecx,0x5
lea    edi,[ebp-0x138]
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x174],0x0
mov    DWORD PTR [ebp-0x15c],0x0
mov    DWORD PTR [ebp-0x160],0x0
mov    DWORD PTR [ebp-0x164],0x2
mov    DWORD PTR [ebp-0x168],0x5
mov    DWORD PTR [ebp-0x16c],0xa
rep stos DWORD PTR es:[edi],eax
stos   WORD PTR es:[edi],ax
push   0x0
call   8048a04 <time@plt>
mov    DWORD PTR [esp],eax
call   8048a94 <srand@plt>
add    esp,0xc
push   0x804b761
push   0x804b76b
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
jmp    80494e6 <strcpy@plt+0x982>
mov    edx,DWORD PTR ds:0x804ca28
test   edx,edx
je     80496c4 <strcpy@plt+0xb60>
and    eax,0xdf
sub    eax,0x43
cmp    eax,0x11
ja     80494dc <strcpy@plt+0x978>
jmp    DWORD PTR [eax*4+0x804b800]
mov    esi,esi
mov    DWORD PTR [ebp-0x174],edx
jmp    80494e9 <strcpy@plt+0x985>
push   ecx
lea    eax,[ebp-0x15c]
push   eax
push   0x804b788
push   DWORD PTR ds:0x804ca28
call   8048ac4 <sscanf@plt>
add    esp,0x10
dec    eax
je     80494e9 <strcpy@plt+0x985>
jmp    80496c4 <strcpy@plt+0xb60>
nop
push   edx
lea    eax,[ebp-0x160]
jmp    804948f <strcpy@plt+0x92b>
lea    esi,[esi+0x0]
push   eax
lea    eax,[ebp-0x164]
jmp    804948f <strcpy@plt+0x92b>
lea    esi,[esi+0x0]
push   edi
lea    eax,[ebp-0x168]
jmp    804948f <strcpy@plt+0x92b>
lea    esi,[esi+0x0]
push   ecx
lea    eax,[ebp-0x16c]
jmp    804948f <strcpy@plt+0x92b>
lea    esi,[esi+0x0]
sub    esp,0xc
push   DWORD PTR [ebx]
call   8048cf8 <strcpy@plt+0x194>
add    esp,0x10
push   edx
push   0x804b76f
push   ebx
push   esi
call   8048a14 <getopt@plt>
add    esp,0x10
cmp    eax,0xffffffff
jne    804945c <strcpy@plt+0x8f8>
mov    eax,DWORD PTR [ebp-0x174]
test   eax,eax
je     80496c4 <strcpy@plt+0xb60>
cmp    DWORD PTR [ebp-0x15c],0xffff
jg     80496c4 <strcpy@plt+0xb60>
mov    eax,DWORD PTR [ebp-0x160]
cmp    eax,0xffff
jg     80496c4 <strcpy@plt+0xb60>
test   eax,eax
je     8049544 <strcpy@plt+0x9e0>
mov    ds:0x804c864,eax
mov    DWORD PTR ds:0x804c868,0x0
sub    esp,0x8
lea    eax,[ebp-0x118]
push   eax
push   DWORD PTR [ebp-0x174]
call   8048d18 <strcpy@plt+0x1b4>
mov    DWORD PTR [ebp-0x178],eax
add    esp,0x10
inc    eax
jne    8049578 <strcpy@plt+0xa14>
sub    esp,0xc
push   DWORD PTR [ebp-0x174]
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
push   edi
push   0x6
push   0x1
push   0x2
call   8048b14 <socket@plt>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
jns    80495a0 <strcpy@plt+0xa3c>
sub    esp,0xc
push   0x804b78c
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
nop
xor    eax,eax
lea    edi,[ebp-0x148]
cld    
mov    ecx,0x4
rep stos DWORD PTR es:[edi],eax
mov    eax,DWORD PTR [ebp-0x15c]
mov    WORD PTR [ebp-0x148],0x2
mov    DWORD PTR [ebp-0x144],0x0
ror    ax,0x8
push   esi
push   0x10
lea    esi,[ebp-0x148]
push   esi
push   ebx
mov    WORD PTR [ebp-0x146],ax
call   8048a74 <bind@plt>
add    esp,0x10
test   eax,eax
jns    8049600 <strcpy@plt+0xa9c>
sub    esp,0xc
push   0x804b793
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x1
push   ebx
call   80489e4 <listen@plt>
add    esp,0x10
test   eax,eax
jns    8049624 <strcpy@plt+0xac0>
sub    esp,0xc
push   0x804b798
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
push   ecx
lea    eax,[ebp-0x170]
push   eax
push   esi
push   ebx
mov    DWORD PTR [ebp-0x170],0x4
call   8048a84 <getsockname@plt>
add    esp,0x10
test   eax,eax
jns    8049658 <strcpy@plt+0xaf4>
sub    esp,0xc
push   0x804b79f
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
mov    esi,esi
mov    ax,WORD PTR [ebp-0x146]
ror    ax,0x8
sub    esp,0x8
movzx  eax,ax
push   eax
push   0x804b7ab
mov    DWORD PTR [ebp-0x15c],eax
call   8048a64 <printf@plt>
pop    eax
pop    edx
movzx  eax,WORD PTR [ebp-0x15c]
push   eax
lea    eax,[ebp-0x138]
push   eax
call   8048d8c <strcpy@plt+0x228>
call   8048944 <fork@plt>
add    esp,0x10
test   eax,eax
jns    80496b0 <strcpy@plt+0xb4c>
sub    esp,0xc
push   0x804b7c1
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
mov    esi,esi
test   eax,eax
je     80496e8 <strcpy@plt+0xb84>
push   edi
push   esi
push   ebx
push   eax
call   8048f18 <strcpy@plt+0x3b4>
jmp    8049888 <strcpy@plt+0xd24>
mov    esi,esi
sub    esp,0xc
push   DWORD PTR [ebx]
call   8048cf8 <strcpy@plt+0x194>
jmp    8049888 <strcpy@plt+0xd24>
nop
sub    esp,0xc
push   0x804b78c
call   8048924 <perror@plt>
jmp    8049883 <strcpy@plt+0xd1f>
mov    esi,esi
sub    esp,0xc
push   ebx
call   8048914 <close@plt>
mov    ecx,DWORD PTR ds:0x804c864
add    esp,0x10
test   ecx,ecx
je     804986c <strcpy@plt+0xd08>
mov    esi,0x804c864
nop
push   edx
push   0x0
push   0x1
push   0x2
call   8048b14 <socket@plt>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
js     80496d4 <strcpy@plt+0xb70>
xor    eax,eax
lea    edi,[ebp-0x158]
cld    
mov    ecx,0x4
rep stos DWORD PTR es:[edi],eax
mov    ax,WORD PTR [esi]
mov    WORD PTR [ebp-0x158],0x2
ror    ax,0x8
mov    WORD PTR [ebp-0x156],ax
mov    eax,DWORD PTR [ebp-0x178]
mov    DWORD PTR [ebp-0x154],eax
push   DWORD PTR [esi]
lea    eax,[ebp-0x118]
push   eax
push   0x804b7c6
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    eax
push   DWORD PTR [ebp-0x16c]
call   8048ccc <strcpy@plt+0x168>
add    esp,0xc
push   0x10
lea    eax,[ebp-0x158]
push   eax
push   ebx
call   8048ae4 <connect@plt>
mov    edi,DWORD PTR ds:0x804c888
add    esp,0x10
test   edi,edi
je     80497ac <strcpy@plt+0xc48>
sub    esp,0x8
push   0x804b7d7
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
jmp    804985c <strcpy@plt+0xcf8>
test   eax,eax
jns    80497c4 <strcpy@plt+0xc60>
sub    esp,0xc
push   0x804b7eb
call   8048924 <perror@plt>
jmp    804985c <strcpy@plt+0xcf8>
mov    esi,esi
sub    esp,0x8
push   0x804b7f3
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    ecx
push   DWORD PTR [ebp-0x168]
call   8048ccc <strcpy@plt+0x168>
jmp    8049814 <strcpy@plt+0xcb0>
lea    esi,[esi+0x0]
sub    esp,0xc
push   DWORD PTR [ebp-0x164]
call   8048a34 <sleep@plt>
pop    eax
pop    edx
push   0x804b7fb
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
pop    edi
push   DWORD PTR ds:0x804ca20
call   8048974 <fflush@plt>
add    esp,0x10
mov    ecx,DWORD PTR ds:0x804c888
test   ecx,ecx
jne    8049838 <strcpy@plt+0xcd4>
push   edx
push   0x16
lea    eax,[ebp-0x138]
push   eax
push   ebx
call   8048904 <write@plt>
add    esp,0x10
test   eax,eax
jns    80497e8 <strcpy@plt+0xc84>
push   DWORD PTR [ebp-0x168]
push   DWORD PTR [ebp-0x174]
push   0x804b6c0
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
mov    DWORD PTR [esp],ebx
call   8048914 <close@plt>
add    esp,0x10
add    esi,0x4
mov    eax,DWORD PTR [esi]
test   eax,eax
jne    8049708 <strcpy@plt+0xba4>
push   edi
push   DWORD PTR [ebp-0x174]
push   0x804b700
push   DWORD PTR ds:0x804ca20
call   8048934 <fprintf@plt>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x118
mov    ecx,0x40
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,0x804ca60
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    eax,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [eax+0x8]
mov    esi,DWORD PTR [eax]
mov    ebx,DWORD PTR [eax+0x4]
mov    eax,DWORD PTR [eax+0xc]
mov    DWORD PTR [ebp-0x24],ecx
xor    DWORD PTR [ebp-0x24],eax
and    DWORD PTR [ebp-0x24],ebx
xor    DWORD PTR [ebp-0x24],eax
mov    DWORD PTR [ebp-0x10],eax
mov    edx,DWORD PTR [ebp-0x24]
mov    eax,esi
mov    edi,DWORD PTR [ebp+0x8]
add    edx,DWORD PTR ds:0x804ca60
rol    eax,0x5
mov    edi,DWORD PTR [edi+0x10]
add    edx,eax
add    edx,edi
rol    ebx,0x1e
mov    DWORD PTR [ebp-0x28],edx
add    edx,0x5a827999
mov    DWORD PTR [ebp-0x14],edx
mov    edx,ebx
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    edi,DWORD PTR ds:0x804ca64
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x14]
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
rol    esi,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    DWORD PTR [ebp-0x10],edx
mov    edx,esi
xor    edx,ebx
and    edx,DWORD PTR [ebp-0x14]
xor    edx,ebx
mov    edi,DWORD PTR ds:0x804ca68
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x14],0x1e
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x14]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x10]
lea    ecx,[eax+ecx*1+0x5a827999]
xor    edx,esi
mov    edi,DWORD PTR ds:0x804ca6c
lea    eax,[edi+edx*1]
mov    edx,ecx
rol    DWORD PTR [ebp-0x10],0x1e
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
and    edx,ecx
lea    ebx,[eax+ebx*1+0x5a827999]
xor    edx,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR ds:0x804ca70
lea    eax,[edi+edx*1]
mov    edx,ebx
rol    ecx,0x1e
rol    edx,0x5
add    eax,edx
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
and    edx,ebx
lea    esi,[eax+esi*1+0x5a827999]
xor    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR ds:0x804ca74
lea    eax,[edi+edx*1]
mov    edx,esi
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    DWORD PTR [ebp-0x14],edx
mov    edx,ebx
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    edi,DWORD PTR ds:0x804ca78
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x14]
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
rol    esi,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    DWORD PTR [ebp-0x10],edx
mov    edx,esi
xor    edx,ebx
and    edx,DWORD PTR [ebp-0x14]
xor    edx,ebx
mov    edi,DWORD PTR ds:0x804ca7c
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x14],0x1e
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x14]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x10]
lea    ecx,[eax+ecx*1+0x5a827999]
xor    edx,esi
mov    edi,DWORD PTR ds:0x804ca80
lea    eax,[edi+edx*1]
mov    edx,ecx
rol    DWORD PTR [ebp-0x10],0x1e
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x14]
lea    ebx,[eax+ebx*1+0x5a827999]
mov    edi,DWORD PTR ds:0x804ca84
lea    eax,[edi+edx*1]
mov    edx,ebx
rol    ecx,0x1e
rol    edx,0x5
add    eax,edx
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
and    edx,ebx
xor    edx,DWORD PTR [ebp-0x10]
lea    esi,[eax+esi*1+0x5a827999]
mov    edi,DWORD PTR ds:0x804ca88
lea    eax,[edi+edx*1]
mov    edx,esi
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    DWORD PTR [ebp-0x14],edx
mov    edx,ebx
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    edi,DWORD PTR ds:0x804ca8c
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x14]
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
rol    esi,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    DWORD PTR [ebp-0x10],edx
mov    edx,esi
xor    edx,ebx
and    edx,DWORD PTR [ebp-0x14]
xor    edx,ebx
mov    edi,DWORD PTR ds:0x804ca90
lea    eax,[edi+edx*1]
mov    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x14],0x1e
rol    edx,0x5
add    eax,edx
mov    edx,DWORD PTR [ebp-0x14]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x10]
lea    ecx,[eax+ecx*1+0x5a827999]
xor    edx,esi
mov    edi,DWORD PTR ds:0x804ca94
lea    eax,[edi+edx*1]
mov    edx,ecx
rol    edx,0x5
rol    DWORD PTR [ebp-0x10],0x1e
add    eax,edx
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x14]
lea    ebx,[eax+ebx*1+0x5a827999]
mov    edi,DWORD PTR ds:0x804ca98
lea    eax,[edi+edx*1]
mov    edx,ebx
rol    ecx,0x1e
rol    edx,0x5
add    eax,edx
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
and    edx,ebx
xor    edx,DWORD PTR [ebp-0x10]
lea    esi,[eax+esi*1+0x5a827999]
mov    edi,DWORD PTR ds:0x804ca9c
lea    eax,[edi+edx*1]
mov    edx,esi
rol    edx,0x5
add    eax,edx
mov    edi,DWORD PTR ds:0x804ca94
mov    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x2c],edi
rol    ebx,0x1e
lea    edx,[eax+edx*1+0x5a827999]
mov    eax,ds:0x804ca80
xor    DWORD PTR [ebp-0x2c],eax
mov    DWORD PTR [ebp-0x14],edx
mov    edi,DWORD PTR ds:0x804ca68
mov    edx,ebx
xor    DWORD PTR [ebp-0x2c],edi
mov    eax,ds:0x804ca60
xor    edx,ecx
xor    DWORD PTR [ebp-0x2c],eax
and    edx,esi
rol    DWORD PTR [ebp-0x2c],1
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,ecx
add    edx,DWORD PTR [ebp-0x2c]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
rol    esi,0x1e
add    edx,eax
lea    edi,[edx+edi*1+0x5a827999]
mov    eax,ds:0x804ca98
mov    edx,esi
mov    DWORD PTR [ebp-0x30],eax
mov    DWORD PTR [ebp-0x10],edi
xor    edx,ebx
mov    edi,DWORD PTR ds:0x804ca84
mov    eax,ds:0x804ca6c
and    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x30],edi
xor    DWORD PTR [ebp-0x30],eax
mov    edi,DWORD PTR ds:0x804ca64
xor    DWORD PTR [ebp-0x30],edi
mov    eax,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x30],1
xor    edx,ebx
add    edx,DWORD PTR [ebp-0x30]
rol    eax,0x5
add    edx,eax
mov    eax,ds:0x804ca9c
mov    DWORD PTR [ebp-0x34],eax
rol    DWORD PTR [ebp-0x14],0x1e
mov    edi,DWORD PTR ds:0x804ca88
xor    DWORD PTR [ebp-0x34],edi
lea    ecx,[edx+ecx*1+0x5a827999]
mov    eax,ds:0x804ca70
mov    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x34],eax
mov    edi,DWORD PTR ds:0x804ca68
xor    edx,esi
xor    DWORD PTR [ebp-0x34],edi
and    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x34],1
xor    edx,esi
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x34]
rol    eax,0x5
add    edx,eax
rol    DWORD PTR [ebp-0x10],0x1e
lea    ebx,[edx+ebx*1+0x5a827999]
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x2c]
and    edx,ecx
mov    edi,DWORD PTR ds:0x804ca8c
xor    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x38],eax
xor    DWORD PTR [ebp-0x38],edi
mov    eax,ds:0x804ca74
xor    DWORD PTR [ebp-0x38],eax
mov    edi,DWORD PTR ds:0x804ca6c
xor    DWORD PTR [ebp-0x38],edi
rol    DWORD PTR [ebp-0x38],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x38]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x30]
mov    DWORD PTR [ebp-0x3c],eax
mov    edi,DWORD PTR ds:0x804ca90
xor    DWORD PTR [ebp-0x3c],edi
mov    eax,ds:0x804ca78
xor    DWORD PTR [ebp-0x3c],eax
lea    esi,[edx+esi*1+0x5a827999]
rol    ecx,0x1e
mov    edi,DWORD PTR ds:0x804ca70
mov    edx,ebx
xor    DWORD PTR [ebp-0x3c],edi
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x3c],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0x3c]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x34]
lea    eax,[edx+eax*1+0x6ed9eba1]
mov    DWORD PTR [ebp-0x40],edi
mov    DWORD PTR [ebp-0x14],eax
mov    edi,DWORD PTR ds:0x804ca7c
mov    eax,ds:0x804ca94
rol    ebx,0x1e
xor    DWORD PTR [ebp-0x40],eax
mov    edx,esi
xor    DWORD PTR [ebp-0x40],edi
mov    eax,ds:0x804ca74
xor    DWORD PTR [ebp-0x40],eax
xor    edx,ebx
mov    eax,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x40],1
xor    edx,ecx
add    edx,DWORD PTR [ebp-0x40]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
lea    edi,[edx+edi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x38]
mov    DWORD PTR [ebp-0x44],eax
mov    DWORD PTR [ebp-0x10],edi
mov    edi,DWORD PTR ds:0x804ca98
xor    DWORD PTR [ebp-0x44],edi
mov    eax,ds:0x804ca80
xor    DWORD PTR [ebp-0x44],eax
mov    edx,DWORD PTR [ebp-0x14]
rol    esi,0x1e
mov    edi,DWORD PTR ds:0x804ca78
xor    DWORD PTR [ebp-0x44],edi
xor    edx,esi
rol    DWORD PTR [ebp-0x44],1
mov    eax,DWORD PTR [ebp-0x10]
xor    edx,ebx
add    edx,DWORD PTR [ebp-0x44]
rol    eax,0x5
add    edx,eax
lea    ecx,[edx+ecx*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x3c]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR ds:0x804ca9c
xor    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x48],eax
xor    DWORD PTR [ebp-0x48],edi
mov    eax,ds:0x804ca84
xor    DWORD PTR [ebp-0x48],eax
mov    edi,DWORD PTR ds:0x804ca7c
xor    DWORD PTR [ebp-0x48],edi
rol    DWORD PTR [ebp-0x48],1
xor    edx,esi
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x48]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x40]
mov    DWORD PTR [ebp-0x4c],eax
mov    edi,DWORD PTR [ebp-0x2c]
xor    DWORD PTR [ebp-0x4c],edi
mov    eax,ds:0x804ca88
xor    DWORD PTR [ebp-0x4c],eax
lea    ebx,[edx+ebx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edi,DWORD PTR ds:0x804ca80
mov    edx,ecx
xor    DWORD PTR [ebp-0x4c],edi
xor    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x4c],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x4c]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x44]
rol    ecx,0x1e
mov    edx,ebx
mov    DWORD PTR [ebp-0x50],eax
mov    edi,DWORD PTR [ebp-0x30]
xor    edx,ecx
mov    eax,ds:0x804ca8c
xor    edx,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0x50],edi
xor    DWORD PTR [ebp-0x50],eax
mov    edi,DWORD PTR ds:0x804ca84
xor    DWORD PTR [ebp-0x50],edi
rol    DWORD PTR [ebp-0x50],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0x50]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x48]
lea    eax,[edx+eax*1+0x6ed9eba1]
mov    DWORD PTR [ebp-0x54],edi
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0x34]
xor    DWORD PTR [ebp-0x54],eax
mov    edi,DWORD PTR ds:0x804ca90
xor    DWORD PTR [ebp-0x54],edi
rol    ebx,0x1e
mov    eax,ds:0x804ca88
mov    edx,esi
xor    DWORD PTR [ebp-0x54],eax
xor    edx,ebx
rol    DWORD PTR [ebp-0x54],1
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,ecx
add    edx,DWORD PTR [ebp-0x54]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
lea    edi,[edx+edi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x4c]
mov    DWORD PTR [ebp-0x58],eax
mov    DWORD PTR [ebp-0x10],edi
mov    eax,ds:0x804ca94
mov    edi,DWORD PTR [ebp-0x38]
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x58],edi
xor    DWORD PTR [ebp-0x58],eax
mov    edi,DWORD PTR ds:0x804ca8c
xor    DWORD PTR [ebp-0x58],edi
xor    edx,esi
mov    eax,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x58],1
xor    edx,ebx
add    edx,DWORD PTR [ebp-0x58]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x50]
mov    DWORD PTR [ebp-0x5c],eax
mov    edi,DWORD PTR [ebp-0x3c]
xor    DWORD PTR [ebp-0x5c],edi
mov    eax,ds:0x804ca98
xor    DWORD PTR [ebp-0x5c],eax
lea    ecx,[edx+ecx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR ds:0x804ca90
xor    DWORD PTR [ebp-0x5c],edi
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x5c],1
xor    edx,esi
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x5c]
rol    eax,0x5
add    edx,eax
lea    ebx,[edx+ebx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
mov    eax,DWORD PTR [ebp-0x54]
xor    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0x40]
xor    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x60],eax
xor    DWORD PTR [ebp-0x60],edi
mov    eax,ds:0x804ca9c
xor    DWORD PTR [ebp-0x60],eax
mov    edi,DWORD PTR ds:0x804ca94
xor    DWORD PTR [ebp-0x60],edi
rol    DWORD PTR [ebp-0x60],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x60]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x58]
mov    DWORD PTR [ebp-0x64],eax
mov    edi,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x64],edi
mov    eax,DWORD PTR [ebp-0x2c]
xor    DWORD PTR [ebp-0x64],eax
lea    esi,[edx+esi*1+0x6ed9eba1]
rol    ecx,0x1e
mov    edi,DWORD PTR ds:0x804ca98
mov    edx,ebx
xor    DWORD PTR [ebp-0x64],edi
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x64],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0x64]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x5c]
lea    eax,[edx+eax*1+0x6ed9eba1]
mov    DWORD PTR [ebp-0x68],edi
mov    DWORD PTR [ebp-0x14],eax
mov    edi,DWORD PTR [ebp-0x30]
mov    eax,DWORD PTR [ebp-0x48]
rol    ebx,0x1e
xor    DWORD PTR [ebp-0x68],eax
mov    edx,esi
xor    DWORD PTR [ebp-0x68],edi
mov    eax,ds:0x804ca9c
xor    DWORD PTR [ebp-0x68],eax
xor    edx,ebx
mov    eax,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x68],1
xor    edx,ecx
add    edx,DWORD PTR [ebp-0x68]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
lea    edi,[edx+edi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x60]
mov    DWORD PTR [ebp-0x6c],eax
mov    DWORD PTR [ebp-0x10],edi
mov    edi,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x6c],edi
mov    eax,DWORD PTR [ebp-0x34]
xor    DWORD PTR [ebp-0x6c],eax
mov    edx,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x2c]
rol    esi,0x1e
xor    DWORD PTR [ebp-0x6c],edi
xor    edx,esi
rol    DWORD PTR [ebp-0x6c],1
mov    eax,DWORD PTR [ebp-0x10]
xor    edx,ebx
add    edx,DWORD PTR [ebp-0x6c]
rol    eax,0x5
add    edx,eax
lea    ecx,[edx+ecx*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x64]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0x50]
xor    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x70],eax
xor    DWORD PTR [ebp-0x70],edi
mov    eax,DWORD PTR [ebp-0x38]
xor    DWORD PTR [ebp-0x70],eax
mov    edi,DWORD PTR [ebp-0x30]
xor    DWORD PTR [ebp-0x70],edi
rol    DWORD PTR [ebp-0x70],1
xor    edx,esi
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x70]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x68]
mov    DWORD PTR [ebp-0x74],eax
mov    edi,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x74],edi
mov    eax,DWORD PTR [ebp-0x3c]
xor    DWORD PTR [ebp-0x74],eax
lea    ebx,[edx+ebx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edi,DWORD PTR [ebp-0x34]
mov    edx,ecx
xor    DWORD PTR [ebp-0x74],edi
xor    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x74],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x74]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x6c]
rol    ecx,0x1e
mov    edx,ebx
mov    DWORD PTR [ebp-0x78],eax
mov    edi,DWORD PTR [ebp-0x58]
mov    eax,DWORD PTR [ebp-0x40]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0x78],edi
xor    DWORD PTR [ebp-0x78],eax
mov    edi,DWORD PTR [ebp-0x38]
xor    DWORD PTR [ebp-0x78],edi
rol    DWORD PTR [ebp-0x78],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0x78]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x70]
lea    eax,[edx+eax*1+0x6ed9eba1]
mov    DWORD PTR [ebp-0x7c],edi
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x7c],eax
mov    edi,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x7c],edi
mov    eax,DWORD PTR [ebp-0x3c]
rol    ebx,0x1e
mov    edx,esi
xor    DWORD PTR [ebp-0x7c],eax
xor    edx,ebx
rol    DWORD PTR [ebp-0x7c],1
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,ecx
add    edx,DWORD PTR [ebp-0x7c]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
lea    edi,[edx+edi*1+0x6ed9eba1]
mov    eax,DWORD PTR [ebp-0x74]
mov    DWORD PTR [ebp-0x80],eax
mov    DWORD PTR [ebp-0x10],edi
mov    eax,DWORD PTR [ebp-0x48]
mov    edi,DWORD PTR [ebp-0x60]
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x80],edi
xor    DWORD PTR [ebp-0x80],eax
mov    edi,DWORD PTR [ebp-0x40]
xor    DWORD PTR [ebp-0x80],edi
xor    edx,esi
mov    eax,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x80],1
xor    edx,ebx
add    edx,DWORD PTR [ebp-0x80]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x78]
mov    DWORD PTR [ebp-0x84],eax
mov    edi,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0x84],edi
mov    eax,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x84],eax
lea    ecx,[edx+ecx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x84],edi
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x84],1
xor    edx,esi
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x84]
rol    eax,0x5
add    edx,eax
lea    ebx,[edx+ebx*1+0x6ed9eba1]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
mov    eax,DWORD PTR [ebp-0x7c]
xor    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0x68]
xor    edx,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x88],eax
xor    DWORD PTR [ebp-0x88],edi
mov    eax,DWORD PTR [ebp-0x50]
xor    DWORD PTR [ebp-0x88],eax
mov    edi,DWORD PTR [ebp-0x48]
xor    DWORD PTR [ebp-0x88],edi
rol    DWORD PTR [ebp-0x88],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x88]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1+0x6ed9eba1]
rol    ecx,0x1e
mov    edx,ebx
or     edx,ecx
mov    eax,ebx
and    edx,DWORD PTR [ebp-0x10]
and    eax,ecx
or     edx,eax
mov    eax,DWORD PTR [ebp-0x80]
mov    DWORD PTR [ebp-0x8c],eax
mov    edi,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0x8c],edi
mov    eax,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x8c],eax
mov    edi,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x8c],edi
rol    DWORD PTR [ebp-0x8c],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0x8c]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    eax,[edx+eax*1-0x70e44324]
mov    edx,esi
mov    DWORD PTR [ebp-0x14],eax
or     edx,ebx
mov    eax,esi
mov    edi,DWORD PTR [ebp-0x84]
and    eax,ebx
and    edx,ecx
mov    DWORD PTR [ebp-0x90],edi
or     edx,eax
mov    edi,DWORD PTR [ebp-0x58]
mov    eax,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0x90],eax
xor    DWORD PTR [ebp-0x90],edi
mov    eax,DWORD PTR [ebp-0x50]
xor    DWORD PTR [ebp-0x90],eax
rol    DWORD PTR [ebp-0x90],1
mov    eax,DWORD PTR [ebp-0x14]
add    edx,DWORD PTR [ebp-0x90]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
rol    esi,0x1e
lea    edi,[edx+edi*1-0x70e44324]
mov    edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x14]
or     edx,esi
and    eax,esi
and    edx,ebx
or     edx,eax
mov    eax,DWORD PTR [ebp-0x88]
mov    DWORD PTR [ebp-0x94],eax
mov    DWORD PTR [ebp-0x10],edi
mov    edi,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0x94],edi
mov    eax,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x94],eax
mov    edi,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x94],edi
rol    DWORD PTR [ebp-0x94],1
mov    eax,DWORD PTR [ebp-0x10]
add    edx,DWORD PTR [ebp-0x94]
rol    eax,0x5
add    edx,eax
lea    ecx,[edx+ecx*1-0x70e44324]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
or     edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x10]
and    eax,DWORD PTR [ebp-0x14]
and    edx,esi
or     edx,eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    DWORD PTR [ebp-0x98],eax
mov    edi,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0x98],edi
mov    eax,DWORD PTR [ebp-0x60]
xor    DWORD PTR [ebp-0x98],eax
mov    edi,DWORD PTR [ebp-0x58]
xor    DWORD PTR [ebp-0x98],edi
rol    DWORD PTR [ebp-0x98],1
mov    eax,ecx
add    edx,DWORD PTR [ebp-0x98]
rol    eax,0x5
add    edx,eax
lea    ebx,[edx+ebx*1-0x70e44324]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x10]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x10]
and    edx,DWORD PTR [ebp-0x14]
or     edx,eax
mov    eax,DWORD PTR [ebp-0x90]
mov    DWORD PTR [ebp-0x9c],eax
mov    edi,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0x9c],edi
mov    eax,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0x9c],eax
mov    edi,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x9c],edi
rol    DWORD PTR [ebp-0x9c],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0x9c]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1-0x70e44324]
rol    ecx,0x1e
mov    edx,ebx
or     edx,ecx
mov    eax,ebx
and    edx,DWORD PTR [ebp-0x10]
and    eax,ecx
or     edx,eax
mov    eax,DWORD PTR [ebp-0x94]
mov    DWORD PTR [ebp-0xa0],eax
mov    edi,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0xa0],edi
mov    eax,DWORD PTR [ebp-0x68]
xor    DWORD PTR [ebp-0xa0],eax
mov    edi,DWORD PTR [ebp-0x60]
xor    DWORD PTR [ebp-0xa0],edi
rol    DWORD PTR [ebp-0xa0],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0xa0]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    eax,[edx+eax*1-0x70e44324]
mov    edx,esi
mov    DWORD PTR [ebp-0x14],eax
or     edx,ebx
mov    eax,esi
mov    edi,DWORD PTR [ebp-0x98]
and    eax,ebx
and    edx,ecx
mov    DWORD PTR [ebp-0xa4],edi
or     edx,eax
mov    eax,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xa4],eax
mov    edi,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0xa4],edi
mov    eax,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0xa4],eax
rol    DWORD PTR [ebp-0xa4],1
mov    eax,DWORD PTR [ebp-0x14]
add    edx,DWORD PTR [ebp-0xa4]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
rol    esi,0x1e
lea    edi,[edx+edi*1-0x70e44324]
mov    edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x14]
or     edx,esi
and    eax,esi
and    edx,ebx
or     edx,eax
mov    eax,DWORD PTR [ebp-0x9c]
mov    DWORD PTR [ebp-0x10],edi
mov    DWORD PTR [ebp-0xa8],eax
mov    edi,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0xa8],edi
mov    eax,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0xa8],eax
mov    edi,DWORD PTR [ebp-0x68]
xor    DWORD PTR [ebp-0xa8],edi
rol    DWORD PTR [ebp-0xa8],1
mov    eax,DWORD PTR [ebp-0x10]
add    edx,DWORD PTR [ebp-0xa8]
rol    eax,0x5
add    edx,eax
lea    ecx,[edx+ecx*1-0x70e44324]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
or     edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x10]
and    eax,DWORD PTR [ebp-0x14]
and    edx,esi
or     edx,eax
mov    eax,DWORD PTR [ebp-0xa0]
mov    DWORD PTR [ebp-0xac],eax
mov    edi,DWORD PTR [ebp-0x8c]
xor    DWORD PTR [ebp-0xac],edi
mov    eax,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0xac],eax
mov    edi,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0xac],edi
rol    DWORD PTR [ebp-0xac],1
mov    eax,ecx
add    edx,DWORD PTR [ebp-0xac]
rol    eax,0x5
add    edx,eax
lea    ebx,[edx+ebx*1-0x70e44324]
mov    edx,ecx
rol    DWORD PTR [ebp-0x10],0x1e
mov    eax,ecx
or     edx,DWORD PTR [ebp-0x10]
and    eax,DWORD PTR [ebp-0x10]
and    edx,DWORD PTR [ebp-0x14]
or     edx,eax
mov    eax,DWORD PTR [ebp-0xa4]
mov    DWORD PTR [ebp-0xb0],eax
mov    edi,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xb0],edi
mov    eax,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0xb0],eax
mov    edi,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0xb0],edi
rol    DWORD PTR [ebp-0xb0],1
mov    eax,ebx
add    edx,DWORD PTR [ebp-0xb0]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1-0x70e44324]
rol    ecx,0x1e
mov    edx,ebx
or     edx,ecx
mov    eax,ebx
and    edx,DWORD PTR [ebp-0x10]
and    eax,ecx
or     edx,eax
mov    eax,DWORD PTR [ebp-0xa8]
mov    DWORD PTR [ebp-0xb4],eax
mov    edi,DWORD PTR [ebp-0x94]
xor    DWORD PTR [ebp-0xb4],edi
mov    eax,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0xb4],eax
mov    edi,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0xb4],edi
rol    DWORD PTR [ebp-0xb4],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0xb4]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    eax,[edx+eax*1-0x70e44324]
mov    edx,esi
mov    DWORD PTR [ebp-0x14],eax
or     edx,ebx
mov    eax,esi
mov    edi,DWORD PTR [ebp-0xac]
and    eax,ebx
and    edx,ecx
mov    DWORD PTR [ebp-0xb8],edi
or     edx,eax
mov    eax,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xb8],eax
mov    edi,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0xb8],edi
mov    eax,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0xb8],eax
rol    DWORD PTR [ebp-0xb8],1
mov    eax,DWORD PTR [ebp-0x14]
add    edx,DWORD PTR [ebp-0xb8]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
rol    esi,0x1e
lea    edi,[edx+edi*1-0x70e44324]
mov    edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x14]
or     edx,esi
and    eax,esi
and    edx,ebx
or     edx,eax
mov    eax,DWORD PTR [ebp-0xb0]
mov    DWORD PTR [ebp-0xbc],eax
mov    DWORD PTR [ebp-0x10],edi
mov    edi,DWORD PTR [ebp-0x9c]
xor    DWORD PTR [ebp-0xbc],edi
mov    eax,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xbc],eax
mov    edi,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0xbc],edi
rol    DWORD PTR [ebp-0xbc],1
mov    eax,DWORD PTR [ebp-0x10]
add    edx,DWORD PTR [ebp-0xbc]
rol    eax,0x5
add    edx,eax
rol    DWORD PTR [ebp-0x14],0x1e
lea    ecx,[edx+ecx*1-0x70e44324]
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
or     edx,DWORD PTR [ebp-0x14]
and    eax,DWORD PTR [ebp-0x14]
and    edx,esi
or     edx,eax
mov    eax,DWORD PTR [ebp-0xb4]
mov    DWORD PTR [ebp-0xc0],eax
mov    edi,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0xc0],edi
mov    eax,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0xc0],eax
mov    edi,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0xc0],edi
rol    DWORD PTR [ebp-0xc0],1
mov    eax,ecx
add    edx,DWORD PTR [ebp-0xc0]
rol    eax,0x5
add    edx,eax
lea    ebx,[edx+ebx*1-0x70e44324]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x10]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x10]
and    edx,DWORD PTR [ebp-0x14]
or     edx,eax
mov    eax,DWORD PTR [ebp-0xb8]
mov    DWORD PTR [ebp-0xc4],eax
mov    edi,DWORD PTR [ebp-0xa4]
xor    DWORD PTR [ebp-0xc4],edi
mov    eax,DWORD PTR [ebp-0x8c]
mov    edi,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xc4],eax
xor    DWORD PTR [ebp-0xc4],edi
mov    eax,ebx
rol    DWORD PTR [ebp-0xc4],1
add    edx,DWORD PTR [ebp-0xc4]
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1-0x70e44324]
rol    ecx,0x1e
mov    edx,ebx
or     edx,ecx
mov    eax,ebx
and    edx,DWORD PTR [ebp-0x10]
and    eax,ecx
or     edx,eax
mov    eax,DWORD PTR [ebp-0xbc]
mov    DWORD PTR [ebp-0xc8],eax
mov    edi,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xc8],edi
mov    eax,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xc8],eax
mov    edi,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0xc8],edi
rol    DWORD PTR [ebp-0xc8],1
mov    eax,esi
add    edx,DWORD PTR [ebp-0xc8]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    ebx,0x1e
lea    eax,[edx+eax*1-0x70e44324]
mov    edx,esi
mov    DWORD PTR [ebp-0x14],eax
or     edx,ebx
mov    eax,esi
mov    edi,DWORD PTR [ebp-0xc0]
and    eax,ebx
and    edx,ecx
mov    DWORD PTR [ebp-0xcc],edi
or     edx,eax
mov    eax,DWORD PTR [ebp-0xac]
xor    DWORD PTR [ebp-0xcc],eax
mov    edi,DWORD PTR [ebp-0x94]
xor    DWORD PTR [ebp-0xcc],edi
mov    eax,DWORD PTR [ebp-0x8c]
xor    DWORD PTR [ebp-0xcc],eax
rol    DWORD PTR [ebp-0xcc],1
mov    eax,DWORD PTR [ebp-0x14]
add    edx,DWORD PTR [ebp-0xcc]
rol    eax,0x5
add    edx,eax
mov    edi,DWORD PTR [ebp-0x10]
lea    edi,[edx+edi*1-0x70e44324]
mov    DWORD PTR [ebp-0x10],edi
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x14]
or     edx,esi
and    eax,esi
and    edx,ebx
or     edx,eax
mov    eax,DWORD PTR [ebp-0xc4]
mov    DWORD PTR [ebp-0xd0],eax
mov    edi,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xd0],edi
mov    eax,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xd0],eax
mov    edi,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xd0],edi
rol    DWORD PTR [ebp-0xd0],1
mov    eax,DWORD PTR [ebp-0x10]
add    edx,DWORD PTR [ebp-0xd0]
rol    eax,0x5
add    edx,eax
lea    ecx,[edx+ecx*1-0x70e44324]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
or     edx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x10]
and    eax,DWORD PTR [ebp-0x14]
and    edx,esi
or     edx,eax
mov    eax,DWORD PTR [ebp-0xc8]
mov    DWORD PTR [ebp-0xd4],eax
mov    edi,DWORD PTR [ebp-0xb4]
xor    DWORD PTR [ebp-0xd4],edi
mov    eax,DWORD PTR [ebp-0x9c]
xor    DWORD PTR [ebp-0xd4],eax
mov    edi,DWORD PTR [ebp-0x94]
mov    eax,ecx
xor    DWORD PTR [ebp-0xd4],edi
rol    eax,0x5
rol    DWORD PTR [ebp-0xd4],1
add    edx,DWORD PTR [ebp-0xd4]
add    edx,eax
rol    DWORD PTR [ebp-0x10],0x1e
lea    ebx,[edx+ebx*1-0x70e44324]
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x10]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x10]
and    edx,DWORD PTR [ebp-0x14]
or     edx,eax
mov    eax,DWORD PTR [ebp-0xcc]
mov    DWORD PTR [ebp-0xd8],eax
mov    edi,DWORD PTR [ebp-0xb8]
xor    DWORD PTR [ebp-0xd8],edi
mov    eax,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0xd8],eax
mov    edi,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xd8],edi
rol    DWORD PTR [ebp-0xd8],1
mov    eax,DWORD PTR [ebp-0xd8]
add    edx,eax
mov    eax,ebx
mov    edi,DWORD PTR [ebp-0xd0]
rol    eax,0x5
mov    DWORD PTR [ebp-0xdc],edi
add    edx,eax
mov    eax,DWORD PTR [ebp-0xbc]
xor    DWORD PTR [ebp-0xdc],eax
lea    esi,[edx+esi*1-0x70e44324]
mov    edi,DWORD PTR [ebp-0xa4]
rol    ecx,0x1e
mov    edx,ebx
xor    DWORD PTR [ebp-0xdc],edi
mov    eax,DWORD PTR [ebp-0x9c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0xdc],eax
rol    DWORD PTR [ebp-0xdc],1
mov    eax,esi
mov    edi,DWORD PTR [ebp-0xdc]
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0xd4]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR [ebp-0xe0],edi
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0xe0],eax
mov    edi,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xe0],edi
mov    eax,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0xe0],eax
rol    ebx,0x1e
mov    edx,esi
rol    DWORD PTR [ebp-0xe0],1
xor    edx,ebx
mov    edi,DWORD PTR [ebp-0xe0]
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,ecx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0xd8]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR [ebp-0xe4],edi
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0xc4]
xor    DWORD PTR [ebp-0xe4],eax
mov    edi,DWORD PTR [ebp-0xac]
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0xe4],edi
mov    eax,DWORD PTR [ebp-0xa4]
xor    edx,esi
xor    DWORD PTR [ebp-0xe4],eax
xor    edx,ebx
rol    DWORD PTR [ebp-0xe4],1
mov    edi,DWORD PTR [ebp-0xe4]
mov    eax,DWORD PTR [ebp-0x10]
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0xdc]
mov    DWORD PTR [ebp-0xe8],eax
mov    edi,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0xe8],edi
mov    eax,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xe8],eax
mov    edi,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xe8],edi
lea    ecx,[edx+ecx*1-0x359d3e2a]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0xe8],1
mov    eax,DWORD PTR [ebp-0xe8]
xor    edx,esi
add    edx,eax
mov    eax,ecx
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0xe0]
add    edx,eax
mov    DWORD PTR [ebp-0xec],edi
lea    ebx,[edx+ebx*1-0x359d3e2a]
mov    eax,DWORD PTR [ebp-0xcc]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
xor    DWORD PTR [ebp-0xec],eax
mov    edi,DWORD PTR [ebp-0xb4]
xor    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0xac]
xor    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0xec],edi
xor    DWORD PTR [ebp-0xec],eax
rol    DWORD PTR [ebp-0xec],1
mov    edi,DWORD PTR [ebp-0xec]
mov    eax,ebx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0xe4]
mov    DWORD PTR [ebp-0xf0],eax
mov    DWORD PTR ds:0x804ca60,edi
mov    edi,DWORD PTR [ebp-0xd0]
xor    DWORD PTR [ebp-0xf0],edi
mov    eax,DWORD PTR [ebp-0xb8]
xor    DWORD PTR [ebp-0xf0],eax
mov    edi,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xf0],edi
lea    esi,[edx+esi*1-0x359d3e2a]
rol    ecx,0x1e
mov    edx,ebx
rol    DWORD PTR [ebp-0xf0],1
xor    edx,ecx
mov    eax,DWORD PTR [ebp-0xf0]
xor    edx,DWORD PTR [ebp-0x10]
mov    ds:0x804ca64,eax
add    edx,eax
mov    eax,esi
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x14]
add    edx,eax
lea    edi,[edx+edi*1-0x359d3e2a]
mov    eax,DWORD PTR [ebp-0xe8]
mov    DWORD PTR [ebp-0xf4],eax
mov    DWORD PTR [ebp-0x14],edi
mov    edi,DWORD PTR [ebp-0xd4]
xor    DWORD PTR [ebp-0xf4],edi
mov    eax,DWORD PTR [ebp-0xbc]
rol    ebx,0x1e
mov    edx,esi
xor    DWORD PTR [ebp-0xf4],eax
mov    edi,DWORD PTR [ebp-0xb4]
xor    edx,ebx
xor    DWORD PTR [ebp-0xf4],edi
xor    edx,ecx
rol    DWORD PTR [ebp-0xf4],1
mov    eax,DWORD PTR [ebp-0xf4]
mov    ds:0x804ca68,eax
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x10]
add    edx,eax
lea    edi,[edx+edi*1-0x359d3e2a]
mov    eax,DWORD PTR [ebp-0xec]
mov    DWORD PTR [ebp-0xf8],eax
mov    DWORD PTR [ebp-0x10],edi
mov    edi,DWORD PTR [ebp-0xd8]
xor    DWORD PTR [ebp-0xf8],edi
mov    eax,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0xf8],eax
mov    edi,DWORD PTR [ebp-0xb8]
xor    DWORD PTR [ebp-0xf8],edi
mov    edx,DWORD PTR [ebp-0x14]
rol    esi,0x1e
rol    DWORD PTR [ebp-0xf8],1
xor    edx,esi
mov    eax,DWORD PTR [ebp-0xf8]
xor    edx,ebx
mov    ds:0x804ca6c,eax
add    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0xf0]
add    edx,eax
lea    ecx,[edx+ecx*1-0x359d3e2a]
mov    DWORD PTR [ebp-0xfc],edi
mov    eax,DWORD PTR [ebp-0xdc]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebp-0xc4]
xor    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0xfc],eax
xor    DWORD PTR [ebp-0xfc],edi
mov    eax,DWORD PTR [ebp-0xbc]
xor    DWORD PTR [ebp-0xfc],eax
rol    DWORD PTR [ebp-0xfc],1
mov    edi,DWORD PTR [ebp-0xfc]
xor    edx,esi
mov    eax,ecx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0xf4]
mov    DWORD PTR [ebp-0x100],eax
mov    DWORD PTR ds:0x804ca70,edi
mov    edi,DWORD PTR [ebp-0xe0]
xor    DWORD PTR [ebp-0x100],edi
mov    eax,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0x100],eax
mov    edi,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0x100],edi
lea    ebx,[edx+ebx*1-0x359d3e2a]
rol    DWORD PTR [ebp-0x10],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
rol    DWORD PTR [ebp-0x100],1
mov    eax,DWORD PTR [ebp-0x100]
xor    edx,DWORD PTR [ebp-0x14]
mov    ds:0x804ca74,eax
add    edx,eax
mov    eax,ebx
rol    eax,0x5
add    edx,eax
lea    esi,[edx+esi*1-0x359d3e2a]
mov    edi,DWORD PTR [ebp-0xf8]
rol    ecx,0x1e
mov    edx,ebx
mov    DWORD PTR [ebp-0x104],edi
mov    eax,DWORD PTR [ebp-0xe4]
mov    edi,DWORD PTR [ebp-0xcc]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0x104],eax
xor    DWORD PTR [ebp-0x104],edi
mov    eax,DWORD PTR [ebp-0xc4]
xor    DWORD PTR [ebp-0x104],eax
rol    DWORD PTR [ebp-0x104],1
mov    edi,DWORD PTR [ebp-0x104]
mov    eax,esi
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR ds:0x804ca78,edi
mov    edi,DWORD PTR [ebp-0xfc]
mov    DWORD PTR [ebp-0x108],edi
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0xe8]
xor    DWORD PTR [ebp-0x108],eax
mov    edi,DWORD PTR [ebp-0xd0]
xor    DWORD PTR [ebp-0x108],edi
mov    eax,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0x108],eax
rol    ebx,0x1e
mov    edx,esi
rol    DWORD PTR [ebp-0x108],1
xor    edx,ebx
mov    edi,DWORD PTR [ebp-0x108]
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,ecx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR ds:0x804ca7c,edi
mov    edi,DWORD PTR [ebp-0x100]
mov    DWORD PTR [ebp-0x10c],edi
mov    DWORD PTR [ebp-0x10],eax
mov    edi,DWORD PTR [ebp-0xd4]
mov    eax,DWORD PTR [ebp-0xec]
mov    edx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x10c],eax
xor    DWORD PTR [ebp-0x10c],edi
mov    eax,DWORD PTR [ebp-0xcc]
xor    DWORD PTR [ebp-0x10c],eax
rol    esi,0x1e
rol    DWORD PTR [ebp-0x10c],1
xor    edx,esi
mov    edi,DWORD PTR [ebp-0x10c]
mov    eax,DWORD PTR [ebp-0x10]
xor    edx,ebx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x104]
mov    DWORD PTR [ebp-0x110],eax
mov    DWORD PTR ds:0x804ca80,edi
mov    edi,DWORD PTR [ebp-0xf0]
xor    DWORD PTR [ebp-0x110],edi
mov    eax,DWORD PTR [ebp-0xd8]
xor    DWORD PTR [ebp-0x110],eax
mov    edi,DWORD PTR [ebp-0xd0]
xor    DWORD PTR [ebp-0x110],edi
lea    ecx,[edx+ecx*1-0x359d3e2a]
rol    DWORD PTR [ebp-0x14],0x1e
mov    edx,DWORD PTR [ebp-0x10]
xor    edx,DWORD PTR [ebp-0x14]
rol    DWORD PTR [ebp-0x110],1
mov    eax,DWORD PTR [ebp-0x110]
xor    edx,esi
mov    ds:0x804ca84,eax
add    edx,eax
mov    eax,ecx
mov    edi,DWORD PTR [ebp-0x108]
rol    eax,0x5
add    edx,eax
xor    edi,DWORD PTR [ebp-0xf4]
lea    ebx,[edx+ebx*1-0x359d3e2a]
rol    DWORD PTR [ebp-0x10],0x1e
xor    edi,DWORD PTR [ebp-0xdc]
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x10]
xor    edi,DWORD PTR [ebp-0xd4]
xor    edx,DWORD PTR [ebp-0x14]
rol    edi,1
mov    eax,ebx
add    edx,edi
rol    eax,0x5
mov    DWORD PTR ds:0x804ca88,edi
add    edx,eax
mov    eax,DWORD PTR [ebp-0x10c]
xor    eax,DWORD PTR [ebp-0xf8]
mov    DWORD PTR [ebp-0x114],eax
mov    eax,DWORD PTR [ebp-0xe0]
xor    DWORD PTR [ebp-0x114],eax
mov    eax,DWORD PTR [ebp-0xd8]
lea    esi,[edx+esi*1-0x359d3e2a]
xor    DWORD PTR [ebp-0x114],eax
rol    ecx,0x1e
mov    edx,ebx
rol    DWORD PTR [ebp-0x114],1
xor    edx,ecx
mov    eax,DWORD PTR [ebp-0x114]
xor    edx,DWORD PTR [ebp-0x10]
mov    ds:0x804ca8c,eax
add    edx,eax
mov    eax,esi
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0x110]
xor    eax,DWORD PTR [ebp-0xfc]
mov    DWORD PTR [ebp-0x118],eax
mov    eax,DWORD PTR [ebp-0xe4]
xor    DWORD PTR [ebp-0x118],eax
mov    eax,DWORD PTR [ebp-0xdc]
xor    DWORD PTR [ebp-0x118],eax
rol    ebx,0x1e
mov    edx,esi
rol    DWORD PTR [ebp-0x118],1
xor    edx,ebx
mov    eax,DWORD PTR [ebp-0x118]
xor    edx,ecx
mov    ds:0x804ca90,eax
add    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
rol    eax,0x5
add    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
lea    eax,[edx+eax*1-0x359d3e2a]
mov    DWORD PTR [ebp-0x10],eax
xor    edi,DWORD PTR [ebp-0x100]
mov    eax,DWORD PTR [ebp-0xe8]
xor    edi,eax
mov    eax,DWORD PTR [ebp-0xe0]
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x14]
xor    edi,eax
rol    edi,1
xor    edx,esi
mov    DWORD PTR [ebp-0x11c],edi
xor    edx,ebx
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR ds:0x804ca94,edi
add    edx,edi
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x114]
xor    edi,DWORD PTR [ebp-0x104]
add    edx,eax
mov    eax,DWORD PTR [ebp-0xec]
rol    DWORD PTR [ebp-0x14],0x1e
lea    ecx,[edx+ecx*1-0x359d3e2a]
xor    edi,eax
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0xe4]
xor    edx,DWORD PTR [ebp-0x14]
xor    edi,eax
rol    edi,1
xor    edx,esi
mov    eax,ecx
mov    DWORD PTR [ebp-0x120],edi
mov    DWORD PTR ds:0x804ca98,edi
add    edx,edi
rol    eax,0x5
mov    edi,DWORD PTR [ebp-0x118]
xor    edi,DWORD PTR [ebp-0x108]
add    edx,eax
mov    eax,DWORD PTR [ebp-0xf0]
rol    DWORD PTR [ebp-0x10],0x1e
lea    ebx,[edx+ebx*1-0x359d3e2a]
xor    edi,eax
mov    edx,ecx
mov    eax,DWORD PTR [ebp-0xe8]
xor    edx,DWORD PTR [ebp-0x10]
xor    edi,eax
xor    edx,DWORD PTR [ebp-0x14]
rol    edi,1
mov    eax,ebx
add    edx,edi
rol    eax,0x5
add    edx,eax
mov    DWORD PTR [ebp-0x124],edi
mov    DWORD PTR ds:0x804ca9c,edi
lea    esi,[edx+esi*1-0x359d3e2a]
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp+0x8]
add    DWORD PTR [edx+0x4],ebx
add    DWORD PTR [edx],esi
add    DWORD PTR [edx+0x8],ecx
mov    ecx,DWORD PTR [ebp-0x10]
add    DWORD PTR [edx+0xc],ecx
mov    esi,DWORD PTR [ebp-0x14]
add    DWORD PTR [edx+0x10],esi
add    esp,0x118
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x67452301
mov    DWORD PTR [eax+0x4],0xefcdab89
mov    DWORD PTR [eax+0x8],0x98badcfe
mov    DWORD PTR [eax+0xc],0x10325476
mov    DWORD PTR [eax+0x10],0xc3d2e1f0
mov    DWORD PTR [eax+0x18],0x0
mov    DWORD PTR [eax+0x14],0x0
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x14]
mov    edx,DWORD PTR [ebp+0x10]
mov    ecx,eax
shl    edx,0x3
shr    ecx,0x3
add    eax,edx
and    ecx,0x3f
mov    ebx,DWORD PTR [ebp+0x8]
cmp    eax,edx
mov    DWORD PTR [ebx+0x14],eax
jae    804af84 <strcpy@plt+0x2420>
inc    DWORD PTR [ebx+0x18]
mov    eax,DWORD PTR [ebp+0x10]
shr    eax,0x1d
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x10]
add    DWORD PTR [edx+0x18],eax
lea    eax,[ebx+ecx*1]
cmp    eax,0x3f
jbe    804afe0 <strcpy@plt+0x247c>
mov    ebx,0x40
sub    ebx,ecx
lea    edi,[ecx+edx*1+0x1c]
mov    esi,DWORD PTR [ebp+0xc]
mov    ecx,ebx
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    eax,edx
sub    esp,0x8
add    eax,0x1c
push   eax
push   edx
jmp    804afcb <strcpy@plt+0x2467>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp+0xc]
sub    esp,0x8
add    eax,ebx
push   eax
add    ebx,0x40
push   DWORD PTR [ebp+0x8]
call   8049890 <strcpy@plt+0xd2c>
lea    eax,[ebx+0x3f]
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x10]
jb     804afbc <strcpy@plt+0x2458>
xor    ecx,ecx
jmp    804afe2 <strcpy@plt+0x247e>
nop
xor    ebx,ebx
sub    DWORD PTR [ebp+0x10],ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
lea    edi,[ecx+eax*1+0x1c]
add    esi,ebx
mov    ecx,DWORD PTR [ebp+0x10]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1c
mov    ebx,DWORD PTR [ebp+0xc]
lea    eax,[ebx+0x4]
xor    edi,edi
lea    esi,[ebp-0x18]
mov    DWORD PTR [ebp-0x1c],eax
nop
cmp    edi,0x4
mov    eax,edi
sbb    edx,edx
mov    ecx,0x3
and    eax,0x3
sub    ecx,eax
shl    ecx,0x3
mov    DWORD PTR [ebp-0x24],ecx
and    edx,0x4
mov    ecx,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [ecx+edx*1+0x10]
mov    cl,BYTE PTR [ebp-0x24]
shr    eax,cl
mov    BYTE PTR [edi+ebp*1-0x18],al
inc    edi
cmp    edi,0x7
jbe    804b018 <strcpy@plt+0x24b4>
push   ecx
push   0x1
push   0x804b850
jmp    804b05c <strcpy@plt+0x24f8>
mov    esi,esi
push   edx
push   0x1
push   0x804b852
push   ebx
call   804af58 <strcpy@plt+0x23f4>
mov    eax,DWORD PTR [ebx+0x14]
and    eax,0x1f8
add    esp,0x10
cmp    eax,0x1c0
jne    804b054 <strcpy@plt+0x24f0>
push   eax
push   0x8
push   esi
push   ebx
call   804af58 <strcpy@plt+0x23f4>
xor    edi,edi
add    esp,0x10
nop
mov    eax,edi
and    eax,0x3
mov    edx,edi
mov    ecx,0x3
and    edx,0xfffffffc
sub    ecx,eax
shl    ecx,0x3
mov    eax,DWORD PTR [edx+ebx*1]
shr    eax,cl
mov    edx,DWORD PTR [ebp+0x8]
mov    BYTE PTR [edi+edx*1],al
inc    edi
cmp    edi,0x13
jbe    804b084 <strcpy@plt+0x2520>
lea    edx,[ebx+0x1c]
xor    eax,eax
mov    ecx,0x40
mov    edi,edx
rep stos BYTE PTR es:[edi],al
mov    edi,ebx
mov    ecx,0x14
rep stos BYTE PTR es:[edi],al
lea    edi,[ebx+0x14]
mov    ecx,0x8
rep stos BYTE PTR es:[edi],al
mov    edi,esi
mov    ecx,0x8
rep stos BYTE PTR es:[edi],al
sub    esp,0x8
push   edx
push   ebx
call   8049890 <strcpy@plt+0xd2c>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x78
lea    ebx,[ebp-0x78]
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
push   ebx
call   804af20 <strcpy@plt+0x23bc>
add    esp,0xc
push   esi
push   edi
push   ebx
call   804af58 <strcpy@plt+0x23f4>
pop    eax
pop    edx
push   ebx
push   DWORD PTR [ebp+0x10]
call   804b000 <strcpy@plt+0x249c>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
push   ecx
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
push   0x14
push   DWORD PTR [ebp+0x10]
call   804b0e8 <strcpy@plt+0x2584>
mov    WORD PTR [ebx+0x14],si
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   edi
mov    esi,DWORD PTR [ebp+0x8]
mov    ecx,0x14
mov    edi,DWORD PTR [ebp+0xc]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax+0x14],0x0
pop    esi
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x10]
test   edx,edx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
je     804b1b9 <strcpy@plt+0x2655>
mov    esi,esi
mov    dl,BYTE PTR [edi]
mov    ecx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [ecx+esi*1]
mov    bl,dl
xor    ebx,eax
add    eax,edx
mov    BYTE PTR [ecx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [esi+0x14],eax
jne    804b1b1 <strcpy@plt+0x264d>
push   eax
push   esi
push   0x14
push   esi
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [esi+0x14],0x0
mov    BYTE PTR [edi],bl
inc    edi
dec    DWORD PTR [ebp+0x10]
jne    804b180 <strcpy@plt+0x261c>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x10]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
je     804b213 <strcpy@plt+0x26af>
mov    esi,esi
mov    eax,DWORD PTR [esi+0x14]
mov    dl,BYTE PTR [eax+esi*1]
mov    bl,dl
xor    bl,BYTE PTR [edi]
add    edx,ebx
mov    BYTE PTR [eax+esi*1],dl
mov    eax,DWORD PTR [esi+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [esi+0x14],eax
jne    804b20b <strcpy@plt+0x26a7>
push   ecx
push   esi
push   0x14
push   esi
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [esi+0x14],0x0
mov    BYTE PTR [edi],bl
inc    edi
dec    DWORD PTR [ebp+0x10]
jne    804b1dc <strcpy@plt+0x2678>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
xor    edi,edi
cmp    edi,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
jge    804b295 <strcpy@plt+0x2731>
lea    eax,[ebp-0xd]
mov    DWORD PTR [ebp-0x14],eax
lea    esi,[esi+0x0]
mov    ecx,DWORD PTR [ebp+0xc]
mov    dl,BYTE PTR [ecx]
mov    ecx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [ecx+esi*1]
mov    bl,dl
xor    ebx,eax
add    eax,edx
mov    BYTE PTR [ecx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [esi+0x14],eax
jne    804b26c <strcpy@plt+0x2708>
push   eax
push   esi
push   0x14
push   esi
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [esi+0x14],0x0
mov    BYTE PTR [ebp-0xd],bl
mov    eax,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp-0x14]
mov    edx,0x1
int    0x80
test   eax,eax
jns    804b28c <strcpy@plt+0x2728>
mov    eax,0xffffffff
jmp    804b297 <strcpy@plt+0x2733>
inc    edi
inc    DWORD PTR [ebp+0xc]
cmp    edi,DWORD PTR [ebp+0x10]
jl     804b238 <strcpy@plt+0x26d4>
mov    eax,edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
xor    edi,edi
cmp    edi,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
jge    804b31b <strcpy@plt+0x27b7>
lea    eax,[ebp-0xd]
mov    DWORD PTR [ebp-0x14],eax
lea    esi,[esi+0x0]
mov    eax,0x3
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp-0x14]
mov    edx,0x1
int    0x80
test   eax,eax
jns    804b2dc <strcpy@plt+0x2778>
mov    eax,0xffffffff
jmp    804b31d <strcpy@plt+0x27b9>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [esi+0x14]
mov    dl,BYTE PTR [eax+esi*1]
mov    bl,dl
xor    bl,BYTE PTR [ebp-0xd]
add    edx,ebx
mov    BYTE PTR [eax+esi*1],dl
mov    eax,DWORD PTR [esi+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [esi+0x14],eax
jne    804b30c <strcpy@plt+0x27a8>
push   edx
push   esi
push   0x14
push   esi
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [esi+0x14],0x0
mov    eax,DWORD PTR [ebp+0xc]
mov    BYTE PTR [eax],bl
inc    edi
inc    eax
cmp    edi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp+0xc],eax
jl     804b2bc <strcpy@plt+0x2758>
mov    eax,edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    dl,BYTE PTR [ebp+0xc]
mov    ecx,DWORD PTR [ebx+0x14]
mov    al,BYTE PTR [ecx+ebx*1]
mov    esi,edx
xor    esi,eax
add    eax,edx
mov    BYTE PTR [ecx+ebx*1],al
mov    eax,DWORD PTR [ebx+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [ebx+0x14],eax
jne    804b362 <strcpy@plt+0x27fe>
push   ecx
push   ebx
push   0x14
push   ebx
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [ebx+0x14],0x0
lea    esp,[ebp-0x8]
mov    edx,esi
pop    ebx
movzx  eax,dl
pop    esi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebx+0x14]
mov    dl,BYTE PTR [eax+ebx*1]
mov    esi,edx
mov    cl,BYTE PTR [ebp+0xc]
xor    esi,ecx
add    edx,esi
mov    BYTE PTR [eax+ebx*1],dl
mov    eax,DWORD PTR [ebx+0x14]
inc    eax
cmp    eax,0x14
mov    DWORD PTR [ebx+0x14],eax
jne    804b3aa <strcpy@plt+0x2846>
push   eax
push   ebx
push   0x14
push   ebx
call   804b0e8 <strcpy@plt+0x2584>
add    esp,0x10
mov    DWORD PTR [ebx+0x14],0x0
lea    esp,[ebp-0x8]
mov    edx,esi
pop    ebx
movzx  eax,dl
pop    esi
pop    ebp
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x804c960
mov    ebx,0x804c960
cmp    eax,0xffffffff
je     804b3ec <strcpy@plt+0x2888>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    804b3e0 <strcpy@plt+0x287c>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   804b40a <strcpy@plt+0x28a6>
pop    ebx
add    ebx,0x1566
lea    esi,[esi+0x0]
call   8048bd0 <strcpy@plt+0x6c>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
