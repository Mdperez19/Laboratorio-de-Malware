push   ebp
mov    ebp,esp
push   ebx
call   804838d <_init+0x9>
pop    ebx
add    ebx,0x12ef
cmp    DWORD PTR [ebx+0x34],0x0
je     80483a2 <_init+0x1e>
call   8048454 <__gmon_start__@plt>
mov    esi,esi
call   80484f0 <frame_dummy>
call   80485d0 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x8049680
jmp    DWORD PTR ds:0x8049684
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049688
push   0x0
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x804968c
push   0x8
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049690
push   0x10
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049694
push   0x18
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049698
push   0x20
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x804969c
push   0x28
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x80496a0
push   0x30
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x80496a4
push   0x38
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x80496a8
push   0x40
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x80496ac
push   0x48
jmp    80483b4 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x80485fc
push   0x8048384
push   ecx
push   esi
push   0x8048520
call   8048424 <__libc_start_main@plt>
hlt    
nop
nop
............
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x8049664,0x0
jne    80484e4 <__do_global_dtors_aux+0x44>
jmp    80484bd <__do_global_dtors_aux+0x1d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049660,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049660
cmp    DWORD PTR [eax],0x0
jne    80484b0 <__do_global_dtors_aux+0x10>
mov    eax,0x8048414
test   eax,eax
je     80484da <__do_global_dtors_aux+0x3a>
push   0x8049668
call   8048414 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049664,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x80483c4
test   eax,eax
je     804850b <frame_dummy+0x1b>
push   0x804975c
push   0x8049668
call   80483c4 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
push   0x8048620
call   80483e4 <getenv@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0x0
jne    8048560 <main+0x40>
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x8048628
call   80483f4 <execve@plt>
add    esp,0xc
push   0x1
call   8048434 <exit@plt>
add    esp,0x4
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804863f
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   8048444 <crypt@plt>
add    esp,0x8
mov    DWORD PTR [ebp-0x4],eax
push   0x8048642
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   80483d4 <strcmp@plt>
add    esp,0x8
mov    eax,eax
test   eax,eax
jne    80485a2 <main+0x82>
push   0x8048650
call   8048404 <system@plt>
add    esp,0x4
push   0x1
call   8048434 <exit@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x8048628
call   80483f4 <execve@plt>
add    esp,0xc
push   0x1
call   8048434 <exit@plt>
add    esp,0x4
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x804966c
cmp    DWORD PTR ds:0x804966c,0xffffffff
je     80485ee <__do_global_ctors_aux+0x1e>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    80485e2 <__do_global_ctors_aux+0x12>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048605 <_fini+0x9>
pop    ebx
add    ebx,0x1077
call   80484a0 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
