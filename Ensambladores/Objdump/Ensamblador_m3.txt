push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048a04 <call_gmon_start>
call   8048a70 <frame_dummy>
call   80495f0 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x804a800
jmp    DWORD PTR ds:0x804a804
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a808
push   0x0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a80c
push   0x8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a810
push   0x10
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a814
push   0x18
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a818
push   0x20
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a81c
push   0x28
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a820
push   0x30
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a824
push   0x38
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a828
push   0x40
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a82c
push   0x48
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a830
push   0x50
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a834
push   0x58
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a838
push   0x60
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a83c
push   0x68
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a840
push   0x70
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a844
push   0x78
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a848
push   0x80
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a84c
push   0x88
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a850
push   0x90
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a854
push   0x98
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a858
push   0xa0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a85c
push   0xa8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a860
push   0xb0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a864
push   0xb8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a868
push   0xc0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a86c
push   0xc8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a870
push   0xd0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a874
push   0xd8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a878
push   0xe0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a87c
push   0xe8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a880
push   0xf0
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a884
push   0xf8
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a888
push   0x100
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a88c
push   0x108
jmp    80487a0 <.plt>
jmp    DWORD PTR ds:0x804a890
push   0x110
jmp    80487a0 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8049580
push   0x8049520
push   ecx
push   esi
push   0x8048cab
call   80488f0 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048a0d <call_gmon_start+0x9>
pop    ebx
add    ebx,0x1def
push   edx
mov    eax,DWORD PTR [ebx+0x98]
test   eax,eax
je     8048a21 <call_gmon_start+0x1d>
call   eax
pop    eax
pop    ebx
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   eax
push   eax
cmp    BYTE PTR ds:0x804a89c,0x0
jne    8048a6c <__do_global_dtors_aux+0x3c>
mov    eax,ds:0x804a718
mov    edx,DWORD PTR [eax]
test   edx,edx
je     8048a65 <__do_global_dtors_aux+0x35>
lea    esi,[esi+eiz*1+0x0]
add    eax,0x4
mov    ds:0x804a718,eax
call   edx
mov    eax,ds:0x804a718
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    8048a50 <__do_global_dtors_aux+0x20>
mov    BYTE PTR ds:0x804a89c,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ecx
push   ecx
mov    edx,DWORD PTR ds:0x804a7f8
test   edx,edx
je     8048a98 <frame_dummy+0x28>
mov    eax,0x0
test   eax,eax
je     8048a98 <frame_dummy+0x28>
sub    esp,0xc
push   0x804a7f8
call   0 <_init-0x8048788>
add    esp,0x10
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x58
mov    eax,ds:0x8049638
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804963c
mov    DWORD PTR [ebp-0x24],eax
mov    eax,ds:0x8049640
mov    DWORD PTR [ebp-0x20],eax
mov    eax,ds:0x8049644
mov    DWORD PTR [ebp-0x1c],eax
mov    al,ds:0x8049648
mov    BYTE PTR [ebp-0x18],al
mov    eax,ds:0x8049649
mov    DWORD PTR [ebp-0x48],eax
mov    eax,ds:0x804964d
mov    DWORD PTR [ebp-0x44],eax
mov    eax,ds:0x8049651
mov    DWORD PTR [ebp-0x40],eax
mov    eax,ds:0x8049655
mov    DWORD PTR [ebp-0x3c],eax
mov    al,ds:0x8049659
mov    BYTE PTR [ebp-0x38],al
sub    esp,0xc
push   DWORD PTR [ebp+0xc]
call   80488d0 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4c],eax
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x10]
call   80489d0 <strcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4c]
mov    edx,DWORD PTR [ebp+0x10]
add    edx,eax
mov    eax,DWORD PTR [ebp+0x8]
sar    eax,0x4
and    eax,0xf
mov    al,BYTE PTR [eax+ebp*1-0x28]
mov    BYTE PTR [edx],al
mov    eax,DWORD PTR [ebp-0x4c]
add    eax,DWORD PTR [ebp+0x10]
lea    edx,[eax+0x1]
mov    eax,DWORD PTR [ebp+0x8]
and    eax,0xf
mov    al,BYTE PTR [eax+ebp*1-0x48]
mov    BYTE PTR [edx],al
mov    eax,DWORD PTR [ebp-0x4c]
add    eax,DWORD PTR [ebp+0x10]
add    eax,0x2
mov    BYTE PTR [eax],0x0
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x218
sub    esp,0x8
push   0x2
push   0x804965a
call   8048940 <open@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x210],eax
sub    esp,0xc
push   DWORD PTR [ebp-0x210]
call   80487d0 <close@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x20c],0x0
cmp    DWORD PTR [ebp-0x20c],0xff
jle    8048b9b <open_tty+0x4d>
jmp    8048c48 <open_tty+0xfa>
sub    esp,0x4
lea    eax,[ebp-0x208]
push   eax
push   0x8049664
push   DWORD PTR [ebp-0x20c]
call   8048a9c <get_tty>
add    esp,0x10
sub    esp,0x8
push   0x2
lea    eax,[ebp-0x208]
push   eax
call   8048940 <open@plt>
add    esp,0x10
mov    edx,eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax],0x0
jns    8048bdd <open_tty+0x8f>
jmp    8048c3b <open_tty+0xed>
sub    esp,0x4
lea    eax,[ebp-0x208]
push   eax
push   0x804966d
push   DWORD PTR [ebp-0x20c]
call   8048a9c <get_tty>
add    esp,0x10
sub    esp,0x8
push   0x2
lea    eax,[ebp-0x208]
push   eax
call   8048940 <open@plt>
add    esp,0x10
mov    edx,eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [eax],0x0
jns    8048c2f <open_tty+0xe1>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   80487d0 <close@plt>
add    esp,0x10
jmp    8048c3b <open_tty+0xed>
mov    DWORD PTR [ebp-0x214],0x1
jmp    8048c52 <open_tty+0x104>
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
jmp    8048b8a <open_tty+0x3c>
mov    DWORD PTR [ebp-0x214],0x0
mov    eax,DWORD PTR [ebp-0x214]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   0x8048c5a
push   0x11
call   8048800 <signal@plt>
add    esp,0x10
sub    esp,0x4
push   0x1
push   0x0
push   0xffffffff
call   80488b0 <waitpid@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   0x1
push   0x0
call   8048990 <kill@plt>
add    esp,0x10
sub    esp,0x8
push   0xf
push   0x0
call   8048990 <kill@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
sub    esp,0x18864
and    esp,0xfffffff0
mov    eax,0x0
sub    esp,eax
sub    esp,0x4
push   0x6
push   0x1
push   0x2
call   80489b0 <socket@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x3c],eax
cmp    DWORD PTR [ebp-0x3c],0x0
jns    8048cf8 <main+0x4d>
sub    esp,0xc
push   0x8049676
call   80487e0 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1885c],0x1
jmp    8049507 <main+0x85c>
sub    esp,0x8
push   0x10
lea    eax,[ebp-0x28]
push   eax
call   8048950 <bzero@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x28],0x2
sub    esp,0xc
push   0x0
call   8048830 <htonl@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x24],eax
sub    esp,0xc
push   0x15b3
call   8048980 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x26],ax
sub    esp,0x4
push   0x10
lea    eax,[ebp-0x28]
push   eax
push   DWORD PTR [ebp-0x3c]
call   8048920 <bind@plt>
add    esp,0x10
test   eax,eax
jns    8048d6a <main+0xbf>
sub    esp,0xc
push   0x804967d
call   80487e0 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1885c],0x1
jmp    8049507 <main+0x85c>
sub    esp,0x8
push   0x5
push   DWORD PTR [ebp-0x3c]
call   8048870 <listen@plt>
add    esp,0x10
test   eax,eax
jns    8048d9d <main+0xf2>
sub    esp,0xc
push   0x8049682
call   80487e0 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1885c],0x1
jmp    8049507 <main+0x85c>
sub    esp,0xc
push   0x8049689
call   8048910 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804a898
call   8048810 <fflush@plt>
add    esp,0x10
call   80487f0 <fork@plt>
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
je     8048dee <main+0x143>
sub    esp,0x8
push   DWORD PTR [ebp-0xc]
push   0x804969f
call   8048910 <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1885c],0x0
jmp    8049507 <main+0x85c>
call   8048880 <setsid@plt>
sub    esp,0xc
push   0x80496ad
call   80488c0 <chdir@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   0x80496af
call   8048940 <open@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],eax
sub    esp,0x8
push   0x0
push   DWORD PTR [ebp-0xc]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   DWORD PTR [ebp-0xc]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   DWORD PTR [ebp-0xc]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   0x1
call   8048800 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048c5a
push   0x11
call   8048800 <signal@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x44],0x10
sub    esp,0x4
lea    eax,[ebp-0x44]
push   eax
lea    eax,[ebp-0x38]
push   eax
push   DWORD PTR [ebp-0x3c]
call   8048860 <accept@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x40],eax
cmp    DWORD PTR [ebp-0x40],0x0
jns    8048e9f <main+0x1f4>
jmp    8048e77 <main+0x1cc>
call   80487f0 <fork@plt>
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jne    80494f4 <main+0x849>
mov    DWORD PTR [ebp-0x80e8],0x80496b9
mov    DWORD PTR [ebp-0x80e4],0x80496bc
mov    DWORD PTR [ebp-0x80e0],0x0
lea    eax,[ebp-0x187f8]
mov    DWORD PTR [ebp-0x84e8],eax
sub    esp,0x4
push   0x80496ad
push   0x80496bf
lea    eax,[ebp-0x187f8]
push   eax
call   80489a0 <sprintf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x186ec],0x0
sub    esp,0x4
push   0x100
lea    edx,[ebp-0x186e8]
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    eax,[eax+edx*1]
push   eax
push   DWORD PTR [ebp-0x40]
call   80489c0 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x186f0],eax
mov    ecx,DWORD PTR [ebp-0x186ec]
lea    edx,[ebp-0x186e8]
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    eax,[eax+edx*1]
mov    DWORD PTR [ebp+ecx*4-0x84e4],eax
lea    eax,[ebp-0x186ec]
inc    DWORD PTR [eax]
cmp    DWORD PTR [ebp-0x186ec],0xff
jg     8048f88 <main+0x2dd>
cmp    DWORD PTR [ebp-0x186f0],0xff
jle    8048f88 <main+0x2dd>
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    edx,[ebp-0x8]
add    eax,edx
sub    eax,0x187e0
cmp    BYTE PTR [eax],0xa
jne    8048f01 <main+0x256>
mov    eax,DWORD PTR [ebp-0x186ec]
mov    DWORD PTR [ebp+eax*4-0x84e4],0x0
sub    esp,0x8
push   0x0
push   0x0
call   80488e0 <setpgid@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0x50]
push   eax
lea    eax,[ebp-0x4c]
push   eax
call   8048b4e <open_tty>
add    esp,0x10
test   eax,eax
jne    8049047 <main+0x39c>
mov    eax,ds:0x80496c7
mov    DWORD PTR [ebp-0x18818],eax
mov    eax,ds:0x80496cb
mov    DWORD PTR [ebp-0x18814],eax
mov    eax,ds:0x80496cf
mov    DWORD PTR [ebp-0x18810],eax
mov    eax,ds:0x80496d3
mov    DWORD PTR [ebp-0x1880c],eax
mov    eax,ds:0x80496d7
mov    DWORD PTR [ebp-0x18808],eax
mov    ax,ds:0x80496db
mov    WORD PTR [ebp-0x18804],ax
sub    esp,0x4
lea    eax,[ebp-0x18818]
sub    esp,0x8
push   eax
call   80488d0 <strlen@plt>
add    esp,0xc
push   eax
lea    eax,[ebp-0x18818]
push   eax
push   DWORD PTR [ebp-0x40]
call   80487b0 <write@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   8048960 <exit@plt>
call   80487f0 <fork@plt>
mov    DWORD PTR [ebp-0x48],eax
cmp    DWORD PTR [ebp-0x48],0x0
jne    8049157 <main+0x4ac>
sub    esp,0xc
push   DWORD PTR [ebp-0x50]
call   80487d0 <close@plt>
add    esp,0x10
call   8048880 <setsid@plt>
sub    esp,0x8
push   0x540e
push   DWORD PTR [ebp-0x4c]
call   8048970 <ioctl@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x3c]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x1
call   8048800 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x11
call   8048800 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   DWORD PTR [ebp-0x4c]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   DWORD PTR [ebp-0x4c]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   DWORD PTR [ebp-0x4c]
call   8048900 <dup2@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4c]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x80496dd
call   8048910 <printf@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0x18828]
push   eax
push   0x80496f4
call   80488a0 <scanf@plt>
add    esp,0x10
lea    eax,[ebp-0x18828]
sub    esp,0x8
push   0x80496f7
push   eax
call   80487c0 <strcmp@plt>
add    esp,0x10
test   eax,eax
jne    80490f7 <main+0x44c>
sub    esp,0x4
lea    eax,[ebp-0x84e8]
push   eax
lea    eax,[ebp-0x80e8]
push   eax
push   0x8049706
call   8048840 <execve@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4c]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048c85
push   0x1
call   8048800 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048c85
push   0xf
call   8048800 <signal@plt>
add    esp,0x10
mov    eax,0x0
mov    ecx,0x20
lea    edi,[ebp-0xd8]
cld    
rep stos DWORD PTR es:[edi],eax
mov    eax,ecx
mov    DWORD PTR [ebp-0x1882c],eax
mov    eax,edi
mov    DWORD PTR [ebp-0x18830],eax
mov    eax,DWORD PTR [ebp-0x50]
mov    edx,eax
shr    edx,0x5
mov    eax,DWORD PTR [ebp-0x50]
and    eax,0x1f
bts    DWORD PTR [ebp+edx*4-0xd8],eax
mov    eax,DWORD PTR [ebp-0x40]
mov    edx,eax
shr    edx,0x5
mov    eax,DWORD PTR [ebp-0x40]
and    eax,0x1f
bts    DWORD PTR [ebp+edx*4-0xd8],eax
sub    esp,0xc
push   0x0
push   0x0
push   0x0
lea    eax,[ebp-0xd8]
push   eax
mov    eax,DWORD PTR [ebp-0x50]
cmp    eax,DWORD PTR [ebp-0x40]
jle    80491fc <main+0x551>
mov    eax,DWORD PTR [ebp-0x50]
inc    eax
mov    DWORD PTR [ebp-0x18860],eax
jmp    8049206 <main+0x55b>
mov    eax,DWORD PTR [ebp-0x40]
inc    eax
mov    DWORD PTR [ebp-0x18860],eax
push   DWORD PTR [ebp-0x18860]
call   8048820 <select@plt>
add    esp,0x20
test   eax,eax
jns    804921d <main+0x572>
jmp    80494a9 <main+0x7fe>
mov    eax,DWORD PTR [ebp-0x50]
mov    edx,eax
and    edx,0x1f
mov    eax,DWORD PTR [ebp-0x50]
shr    eax,0x5
bt     DWORD PTR [ebp+eax*4-0xd8],edx
setb   al
test   al,al
je     804928c <main+0x5e1>
sub    esp,0x4
push   0x8000
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x50]
call   80489c0 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x18830],eax
cmp    DWORD PTR [ebp-0x18830],0x0
jg     8049268 <main+0x5bd>
jmp    80494a9 <main+0x7fe>
sub    esp,0x4
push   DWORD PTR [ebp-0x18830]
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x40]
call   80487b0 <write@plt>
add    esp,0x10
test   eax,eax
jg     804928c <main+0x5e1>
jmp    80494a9 <main+0x7fe>
mov    eax,DWORD PTR [ebp-0x40]
mov    edx,eax
and    edx,0x1f
mov    eax,DWORD PTR [ebp-0x40]
shr    eax,0x5
bt     DWORD PTR [ebp+eax*4-0xd8],edx
setb   al
test   al,al
je     8049189 <main+0x4de>
lea    eax,[ebp-0x80d8]
mov    DWORD PTR [ebp-0x18834],eax
sub    esp,0x4
push   0x8000
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x40]
call   80489c0 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x18830],eax
cmp    DWORD PTR [ebp-0x18830],0x0
jg     80492e7 <main+0x63c>
jmp    80494a9 <main+0x7fe>
lea    eax,[ebp-0x80d8]
sub    esp,0x4
push   DWORD PTR [ebp-0x18830]
push   0x1d
push   eax
call   8048850 <memchr@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1882c],eax
cmp    DWORD PTR [ebp-0x1882c],0x0
je     8049487 <main+0x7dc>
lea    edx,[ebp-0x80d8]
mov    eax,DWORD PTR [ebp-0x1882c]
sub    eax,edx
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x18830]
sub    eax,edx
mov    DWORD PTR [ebp-0x1884c],eax
cmp    DWORD PTR [ebp-0x1884c],0x5
jle    8049345 <main+0x69a>
mov    DWORD PTR [ebp-0x1884c],0x5
sub    esp,0x4
push   DWORD PTR [ebp-0x1884c]
push   DWORD PTR [ebp-0x1882c]
lea    eax,[ebp-0x18848]
push   eax
call   8048930 <memcpy@plt>
add    esp,0x10
cmp    DWORD PTR [ebp-0x1884c],0x4
jg     8049393 <main+0x6e8>
sub    esp,0x4
mov    eax,0x5
sub    eax,DWORD PTR [ebp-0x1884c]
push   eax
lea    eax,[ebp-0x18848]
add    eax,DWORD PTR [ebp-0x1884c]
push   eax
push   DWORD PTR [ebp-0x40]
call   80489c0 <read@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x18852],0x0
mov    WORD PTR [ebp-0x18854],0x0
mov    eax,0x0
mov    al,BYTE PTR [ebp-0x18847]
mov    edx,eax
shl    edx,0x8
mov    eax,0x0
mov    al,BYTE PTR [ebp-0x18846]
lea    eax,[eax+edx*1]
mov    WORD PTR [ebp-0x18856],ax
mov    eax,0x0
mov    al,BYTE PTR [ebp-0x18845]
mov    edx,eax
shl    edx,0x8
mov    eax,0x0
mov    al,BYTE PTR [ebp-0x18844]
lea    eax,[eax+edx*1]
mov    WORD PTR [ebp-0x18858],ax
sub    esp,0x4
lea    eax,[ebp-0x18858]
push   eax
push   0x5414
push   DWORD PTR [ebp-0x50]
call   8048970 <ioctl@plt>
add    esp,0x10
sub    esp,0x8
push   0x1c
push   0x0
call   8048990 <kill@plt>
add    esp,0x10
sub    esp,0x4
lea    edx,[ebp-0x80d8]
mov    eax,DWORD PTR [ebp-0x1882c]
sub    eax,edx
push   eax
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x50]
call   80487b0 <write@plt>
add    esp,0x10
lea    eax,[ebp-0x80d8]
add    eax,DWORD PTR [ebp-0x18830]
sub    eax,DWORD PTR [ebp-0x1882c]
sub    eax,0x5
mov    DWORD PTR [ebp-0x1884c],eax
cmp    DWORD PTR [ebp-0x1884c],0x0
jle    8049189 <main+0x4de>
sub    esp,0x4
push   DWORD PTR [ebp-0x1884c]
mov    eax,DWORD PTR [ebp-0x1882c]
add    eax,0x5
push   eax
push   DWORD PTR [ebp-0x50]
call   80487b0 <write@plt>
add    esp,0x10
jmp    8049189 <main+0x4de>
sub    esp,0x4
push   DWORD PTR [ebp-0x18830]
push   DWORD PTR [ebp-0x18834]
push   DWORD PTR [ebp-0x50]
call   80487b0 <write@plt>
add    esp,0x10
test   eax,eax
jg     8049189 <main+0x4de>
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x3c]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x50]
call   80487d0 <close@plt>
add    esp,0x10
sub    esp,0x4
push   0x0
push   0x0
push   DWORD PTR [ebp-0x48]
call   80488b0 <waitpid@plt>
add    esp,0x10
call   8048890 <vhangup@plt>
sub    esp,0xc
push   0x0
call   8048960 <exit@plt>
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   80487d0 <close@plt>
add    esp,0x10
jmp    8048e77 <main+0x1cc>
mov    eax,DWORD PTR [ebp-0x1885c]
mov    edi,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
mov    DWORD PTR [ebp-0x8],esi
xor    esi,esi
call   80495e0 <__i686.get_pc_thunk.bx>
add    ebx,0x12c9
mov    DWORD PTR [ebp-0x4],edi
call   8048788 <_init>
lea    edx,[ebx-0xec]
lea    eax,[ebx-0xec]
sub    edx,eax
sar    edx,0x2
cmp    esi,edx
jae    804956b <__libc_csu_init+0x4b>
mov    DWORD PTR [ebp-0x10],eax
mov    edi,edx
nop
lea    esi,[esi+eiz*1+0x0]
call   DWORD PTR [eax+esi*4]
inc    esi
mov    eax,DWORD PTR [ebp-0x10]
cmp    esi,edi
jb     8049560 <__libc_csu_init+0x40>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
call   80495e0 <__i686.get_pc_thunk.bx>
add    ebx,0x126e
mov    DWORD PTR [ebp-0x4],edi
lea    eax,[ebx-0xec]
lea    edi,[ebx-0xec]
mov    DWORD PTR [ebp-0x8],esi
sub    eax,edi
sar    eax,0x2
test   eax,eax
lea    esi,[eax-0x1]
jne    80495c4 <__libc_csu_fini+0x44>
call   8049614 <_fini>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
call   DWORD PTR [edi+esi*4]
mov    eax,esi
dec    esi
test   eax,eax
jne    80495c4 <__libc_csu_fini+0x44>
call   8049614 <_fini>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    ebx,DWORD PTR [esp]
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   edx
mov    ebx,0x804a7e8
mov    eax,ds:0x804a7e8
cmp    eax,0xffffffff
je     8049610 <__do_global_ctors_aux+0x20>
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    8049604 <__do_global_ctors_aux+0x14>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   ebx
call   804961d <_fini+0x9>
pop    ebx
add    ebx,0x11df
push   eax
call   8048a30 <__do_global_dtors_aux>
pop    ecx
pop    ebx
leave  
ret    
