push   ebp
mov    ebp,esp
push   ebx
call   8048471 <_init+0x9>
pop    ebx
add    ebx,0x15ff
cmp    DWORD PTR [ebx+0x48],0x0
je     8048486 <_init+0x1e>
call   0 <_init-0x8048468>
mov    esi,esi
call   804860c <frame_dummy>
call   8048808 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x8049a74
jmp    DWORD PTR ds:0x8049a78
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049a7c
push   0x0
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a80
push   0x8
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a84
push   0x10
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a88
push   0x18
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a8c
push   0x20
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a90
push   0x28
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a94
push   0x30
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a98
push   0x38
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049a9c
push   0x40
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049aa0
push   0x48
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049aa4
push   0x50
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049aa8
push   0x58
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049aac
push   0x60
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049ab0
push   0x68
jmp    8048498 <.plt>
jmp    DWORD PTR ds:0x8049ab4
push   0x70
jmp    8048498 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x8048838
push   0x8048468
push   ecx
push   esi
push   0x8048748
call   80484d8 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x8049a58,0x0
jne    8048600 <__do_global_dtors_aux+0x44>
jmp    80485d9 <__do_global_dtors_aux+0x1d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049a54,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049a54
cmp    DWORD PTR [eax],0x0
jne    80485cc <__do_global_dtors_aux+0x10>
mov    eax,0x80484c8
test   eax,eax
je     80485f6 <__do_global_dtors_aux+0x3a>
push   0x8049a5c
call   80484c8 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049a58,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x80484a8
test   eax,eax
je     8048627 <frame_dummy+0x1b>
push   0x8049b5c
push   0x8049a5c
call   80484a8 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   0x8048880
call   80484e8 <printf@plt>
add    esp,0x4
push   0x804889c
push   0x80488a4
call   80484e8 <printf@plt>
add    esp,0x8
push   0x80488c0
call   80484e8 <printf@plt>
add    esp,0x4
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
mov    eax,DWORD PTR [ebp+0xc]
mov    WORD PTR [ebp-0x2],ax
call   8048634 <banner>
mov    eax,ds:0x8049b74
push   eax
movsx  eax,WORD PTR [ebp-0x2]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048900
call   80484e8 <printf@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048508 <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x18],eax
cmp    DWORD PTR [ebp-0x18],0x0
jne    80486c8 <echo_connect+0x60>
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048939
call   80484e8 <printf@plt>
add    esp,0x8
push   0x0
call   8048528 <exit@plt>
add    esp,0x4
push   0x10
lea    eax,[ebp-0x14]
push   eax
call   8048518 <bzero@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x18]
mov    edx,DWORD PTR [eax+0xc]
push   edx
lea    eax,[ebp-0x14]
lea    edx,[eax+0x4]
push   edx
mov    eax,DWORD PTR [ebp-0x18]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
call   80484b8 <bcopy@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x18]
mov    dx,WORD PTR [eax+0x8]
mov    WORD PTR [ebp-0x14],dx
movzx  eax,WORD PTR [ebp-0x2]
push   eax
call   8048558 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0x12],ax
push   0x0
push   0x2
push   0x2
call   8048578 <socket@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x1c],eax
push   0x10
lea    edx,[ebp-0x14]
mov    eax,edx
push   eax
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
call   8048568 <connect@plt>
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x1c]
mov    eax,edx
jmp    8048744 <echo_connect+0xdc>
lea    esi,[esi+0x0]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
cmp    DWORD PTR [ebp+0x8],0x4
je     80487a0 <main+0x58>
call   8048634 <banner>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048960
call   80484e8 <printf@plt>
add    esp,0x8
push   0x80489a0
call   80484e8 <printf@plt>
add    esp,0x4
push   0x80489e0
call   80484e8 <printf@plt>
add    esp,0x4
push   0x8048a20
call   80484e8 <printf@plt>
add    esp,0x4
push   0x0
call   8048528 <exit@plt>
add    esp,0x4
lea    esi,[esi+0x0]
call   80484f8 <getuid@plt>
mov    eax,eax
push   eax
call   8048588 <setuid@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
mov    edx,DWORD PTR [eax]
mov    DWORD PTR ds:0x8049b74,edx
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
call   8048538 <atoi@plt>
add    esp,0x4
mov    eax,eax
movsx  edx,ax
push   edx
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   8048668 <echo_connect>
add    esp,0x8
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
nop
push   0x0
push   0xa
push   0x8048a43
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048548 <send@plt>
add    esp,0x10
jmp    80487ec <main+0xa4>
nop
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049a60
cmp    DWORD PTR ds:0x8049a60,0xffffffff
je     8048828 <__do_global_ctors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    804881c <__do_global_ctors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048841 <_fini+0x9>
pop    ebx
add    ebx,0x122f
call   80485bc <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
