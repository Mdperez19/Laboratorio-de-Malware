mov 0, fp
ld [sp+0x40], l0
add sp, 0x44, l1
sub sp, 0x20, sp
orcc g0, g1, g0
be 0x10a34
mov g1, o0
call sym.imp.atexit
nop
sethi 0x47, o0
or o0, 0x54, o0
call sym.imp.atexit
nop
call sym._init
nop
mov l0, o0
mov l1, o1
sll l0, 2, o2
add o2, 4, o2
add l1, o2, o2
sethi 0x88, o3
or o3, 0xe8, o3
st o2, [o3]
call main
nop
call sym.imp.exit
nop
sethi 0x30, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x3c, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x48, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x54, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x60, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
save sp, -0x60, sp
call sym.frame_dummy
nop
call sym.__do_global_ctors_aux
nop
ret
restore
save sp, -0x70, sp
call 0x10b18
sethi 0x44, l7
or l7, 0x25c, l7
add l7, o7, l7
sethi 0, o0
or o0, 8, o0
sethi 0, o1
ld [l7+o0], o0
or o1, 0xc, o1
call sym.__register_frame_info
ld [l7+o1], o1
ret
restore
save sp, -0x70, sp
call 0x119ac
sethi 0x40, l7
or l7, 0x3c8, l7
add l7, o7, l7
st i0, [i1+8]
st g0, [i1+4]
st g0, [i1]
sethi 0, o0
or o0, 0x18, o0
ld [l7+o0], o1
st g0, [i1+0xc]
ld [o1], o0
st g0, [i1+0x10]
st o0, [i1+0x14]
st i1, [o1]
ret
restore
save sp, -0x70, sp
call 0x11be4
sethi 0x40, l7
or l7, 0x190, l7
add l7, o7, l7
sethi 0, o0
or o0, 0x1c, o0
ld [l7+o0], o0
ld [o0+-4], o1
cmp o1, -1
be 0x11c24
add o0, -4, l0
ld [l0], o0
call o0
add l0, -4, l0
ld [l0], o0
cmp o0, -1
bne 0x11c08
nop
ret
restore
sethi 0x3ffff6, g1
or g1, 0x40, g1
save sp, g1, sp
st i0, [fp+0x44]
st i1, [fp+0x48]
sethi 0x47, o1
or o1, 0x70, o0
call sym.imp.printf
nop
sethi 0x47, o1
or o1, 0xb8, o0
call sym.imp.printf
nop
ld argv, o0
cmp o0, 1
bne 0x10bb8
nop
ld envp, o1
sethi 0x47, o2
or o2, 0xe8, o0
ld [o1], o1
call sym.imp.printf
nop
mov -1, o0
call sym.imp.exit
nop
call obj.jump
nop
sethi 0x3ffff6, o2
or o2, 0xe8, o1
sethi 8, o3
or o3, 0x3a4, o2
add o0, o2, o0
add fp, -0x10, o2
st o0, [o2+o1]
sethi 0x3ffff6, o1
or o1, 0xd8, o0
sethi 0x3ffff6, o2
or o2, 0xf0, o1
add fp, -0x10, o2
add o2, o1, o1
add fp, -0x10, o2
st o1, [o2+o0]
sethi 0x3ffff6, o1
or o1, 0xd8, o0
add fp, -0x10, o1
add o1, o0, o0
st g0, [o0+4]
sethi 0x3ffff6, o1
or o1, 0xe4, o0
sethi 0x3ffff6, o2
or o2, 0xf0, o1
add fp, -0x10, o2
add o2, o1, o1
add fp, -0x10, o2
st o1, [o2+o0]
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
ld [o1+o0], o0
sethi 0x47, o2
or o2, 0x100, o1
call sym.imp.sprintf
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
sethi 0x3ffff6, o2
or o2, 0xe4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 4, o2
add fp, -0x10, o1
st o2, [o1+o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
st g0, [o1+o0]
sethi 0x3ffff6, o0
or o0, 0xd4, l0
mov 4, o0
ld envp, o2
add o0, o2, o1
ld [o1], o0
call sym.imp.strlen
nop
and o0, 3, o1
mov 5, o2
sub o2, o1, o0
add fp, -0x10, o2
ld [o2+l0], o1
cmp o1, o0
bcs 0x10ccc
nop
ba 0x10d24
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
add o1, o0, o0
ld [o0], o1
mov -1, o2
stb o2, [o1]
add o1, 1, o1
st o1, [o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 1, o2
add fp, -0x10, o1
st o2, [o1+o0]
ba 0x10c84
nop
nop
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
st g0, [o1+o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
ld [o1+o0], o0
cmp o0, 0xf9f
ble 0x10d5c
nop
ba 0x10df8
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
add o1, o0, o3
ld [o3], o4
sethi 0x87, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o5
ld [o5+o1], o2
mov o2, o5
mov o4, o1
add o4, 1, o4
st o4, [o3]
cmp o5, 0
bge 0x10da4
nop
add o5, 3, o5
sra o5, 2, o3
mov o3, o4
sll o4, 2, o3
sub o2, o3, o2
or o0, 0x360, o3
add o2, o3, o0
ldub [o0], o2
stb o2, [o1]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 1, o2
add fp, -0x10, o1
st o2, [o1+o0]
ba 0x10d38
nop
nop
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
st g0, [o1+o0]
sethi 0x3ffff6, o0
or o0, 0xd4, l0
sethi 0x87, o1
or o1, 0x318, o0
call sym.imp.strlen
nop
add fp, -0x10, o2
ld [o2+l0], o1
cmp o1, o0
bcs 0x10e40
nop
ba 0x10eb4
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
add o1, o0, o0
ld [o0], o1
sethi 0x87, o2
sethi 0x3ffff6, o4
or o4, 0xd4, o3
add fp, -0x10, o4
ld [o4+o3], o3
or o2, 0x318, o4
add o3, o4, o2
ldub [o2], o3
stb o3, [o1]
add o1, 1, o1
st o1, [o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 1, o2
add fp, -0x10, o1
st o2, [o1+o0]
ba 0x10e0c
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
ld [o1+o0], o0
stb g0, [o0]
sethi 0x3ffff6, o1
or o1, 0xe4, o0
sethi 0x3ffff6, o2
or o2, 0xf0, o1
add fp, -0x10, o2
add o2, o1, o1
sethi 4, o3
or o3, 0x388, o2
add o1, o2, o1
add fp, -0x10, o2
st o1, [o2+o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
st g0, [o1+o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
ld [o1+o0], o0
cmp o0, 2
ble 0x10f28
nop
ba 0x10f80
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
add o1, o0, o0
ld [o0], o1
mov -1, o2
stb o2, [o1]
add o1, 1, o1
st o1, [o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 1, o2
add fp, -0x10, o1
st o2, [o1+o0]
ba 0x10f04
nop
nop
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
st g0, [o1+o0]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
add fp, -0x10, o1
ld [o1+o0], o0
cmp o0, 0x4af
ble 0x10fb8
nop
ba 0x11058
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
add o1, o0, o3
ld [o3], o4
sethi 0x3ffff6, o1
or o1, 0xe8, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o5
ld [o5+o1], o2
mov o2, o5
mov o4, o1
add o4, 1, o4
st o4, [o3]
cmp o5, 0
bge 0x11004
nop
add o5, 3, o5
sra o5, 2, o3
mov o3, o4
sll o4, 2, o3
sub o2, o3, o2
add fp, -0x10, o3
add o3, o0, o0
ldub [o0+o2], o2
stb o2, [o1]
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o1
or o1, 0xd4, o0
sethi 0x3ffff6, o2
or o2, 0xd4, o1
add fp, -0x10, o2
ld [o2+o1], o1
add o1, 1, o2
add fp, -0x10, o1
st o2, [o1+o0]
ba 0x10f94
nop
sethi 0x3ffff6, o1
or o1, 0xe4, o0
add fp, -0x10, o1
ld [o1+o0], o0
stb g0, [o0]
sethi 0x47, o1
or o1, 0x148, o0
st o0, [sp+0x5c]
mov 4, o0
ld envp, o1
add o0, o1, o0
ld [o0], o1
st o1, [sp+0x60]
sethi 0x47, o1
or o1, 0x150, o0
st o0, [sp+0x64]
sethi 0x3ffff6, o1
or o1, 0xf0, o0
add fp, -0x10, o1
add o1, o0, o0
sethi 4, o2
or o2, 0x388, o1
add o0, o1, o0
st o0, [sp+0x68]
sethi 0x47, o1
or o1, 0x158, o0
st o0, [sp+0x6c]
st g0, [sp+0x70]
sethi 0x3ffff6, o1
or o1, 0xd8, o0
add fp, -0x10, o1
add o1, o0, o0
st o0, [sp+0x74]
sethi 0x47, o1
or o1, 0x108, o0
sethi 0x47, o2
or o2, 0x120, o1
sethi 0x47, o3
or o3, 0x128, o2
sethi 0x47, o4
or o4, 0x130, o3
sethi 0x47, o5
or o5, 0x138, o4
sethi 0x47, g2
or g2, 0x140, o5
call sym.imp.execle
nop
ret
restore
sethi 0x54, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x3c, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
retl
mov sp, o0
sethi 0x60, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x6c, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x78, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
save sp, -0x70, sp
call 0x119f4
sethi 0x40, l7
or l7, 0x380, l7
add l7, o7, l7
st i0, [i1+8]
st i0, [i1+0xc]
st g0, [i1+4]
sethi 0, o0
or o0, 0x18, o0
ld [l7+o0], o1
st g0, [i1]
ld [o1], o0
st g0, [i1+0x10]
st o0, [i1+0x14]
st i1, [o1]
ret
restore
save sp, -0x2a8, sp
call sym.find_fde
mov i0, o0
orcc o0, 0, l2
be 0x11adc
mov l2, o0
call sym.extract_cie_info
add fp, -0x28, o1
orcc o0, 0, l0
bne 0x11ae4
add fp, -0x240, o0
ba 0x11bd0
mov 0, i0
mov 0, o1
call sym.imp.memset
mov 0x218, o2
lduh [fp+-0x16], o0
ld [fp+-0x24], o1
sth o0, [fp+-0x96]
st o1, [fp+-0x23c]
ld [l2+4], o0
add o0, -4, o0
sub l2, o0, o0
ld [o0], o1
add o0, o1, o0
add o0, 4, l1
cmp l0, l1
bcc 0x11b4c
ld [fp+-0x28], o0
mov l0, o0
add fp, -0x240, o1
add fp, -0x28, o2
call sym.execute_cfa_insn
mov 0, o3
mov o0, l0
cmp l0, l1
bcs 0x11b28
mov l0, o0
ld [fp+-0x28], o0
ldsb [o0], o0
cmp o0, 0x7a
bne 0x11b70
add l2, 0x10, l0
mov l0, o0
call sym.decode_uleb128
add fp, -0x244, o1
ld [fp+-0x244], o1
add o0, o1, l0
ld [l2], o0
ld [l2+8], o1
add l2, o0, o0
add o0, 4, l1
cmp l0, l1
bcc 0x11bbc
st o1, [fp+-0x248]
ld [fp+-0x248], o0
cmp o0, i0
bgu 0x11bbc
mov l0, o0
add fp, -0x240, o1
add fp, -0x28, o2
call sym.execute_cfa_insn
add fp, -0x248, o3
mov o0, l0
cmp l0, l1
bcs 0x11b90
ld [fp+-0x248], o0
mov i1, o0
add fp, -0x240, o1
call sym.imp.memcpy
mov 0x214, o2
mov i1, i0
ret
restore
save sp, -0x70, sp
call 0x11a3c
sethi 0x40, l7
or l7, 0x338, l7
add l7, o7, l7
sethi 0, o0
or o0, 0x18, o0
ld [l7+o0], o2
ld [o2], o0
cmp o0, 0
be 0x11aa0
nop
ld [o2], o1
ld [o1+8], o0
cmp o0, i0
bne 0x11a94
ld [o1+0x14], o0
st o0, [o2]
ld [o1], o0
cmp o0, 0
be 0x11aa8
nop
call sym.imp.free
ld [o1+0xc], o0
ba,a 0x11aa8
cmp o0, 0
bne 0x11a60
add o1, 0x14, o2
call sym.imp.abort
nop
ret
restore
save sp, -0x60, sp
call sym.__do_global_dtors_aux
nop
ret
restore
save sp, -0x70, sp
call 0x10a90
sethi 0x44, l7
or l7, 0x2e4, l7
add l7, o7, l7
sethi 0, o0
or o0, 4, o0
ld [l7+o0], o1
ld [o1], o0
ld [o0], o0
cmp o0, 0
be 0x10aec
sethi 0, o0
mov o1, l0
ld [l0], o0
add o0, 4, o0
st o0, [l0]
ld [o0+-4], o0
call o0
nop
ld [l0], o0
ld [o0], o0
cmp o0, 0
bne,a 0x10ac0
ld [l0], o0
sethi 0, o0
or o0, 8, o0
call sym.__deregister_frame_info
ld [l7+o0], o0
ret
restore
save sp, -0x70, sp
ret
restore
save sp, -0x70, sp
ret
restore
sll o1, 2, g2
cmp o1, 0
be 0x111dc
st o2, [o0+g2]
add g2, o0, o0
ld [o0], o3
ld [o0+-4], o2
ld [o3+8], g3
ld [o2+8], g2
cmp g3, g2
bpos 0x111dc
addcc o1, -1, o1
st o2, [o0]
st o3, [o0+-4]
bne 0x111b0
add o0, -4, o0
retl
nop
mov 0, g3
mov g3, o2
ldub [o0], o3
add o0, 1, o0
and o3, 0x7f, g2
sll g2, g3, g2
or o2, g2, o2
andcc o3, 0x80, g0
bne 0x11158
add g3, 7, g3
cmp g3, 0x1f
bgu 0x11194
andcc o3, 0x40, g0
be 0x11194
mov -1, g2
sll g2, g3, g2
or o2, g2, o2
retl
st o2, [o1]
mov 0, o2
mov o2, o3
ldub [o0], g3
add o0, 1, o0
and g3, 0x7f, g2
sll g2, o2, g2
andcc g3, 0x80, g0
be 0x11148
or o3, g2, o3
ba 0x11124
add o2, 7, o2
retl
st o3, [o1]
save sp, -0x80, sp
ldub [i0], o2
andcc o2, 0x40, g0
be 0x11624
add i0, 1, i0
ld [i2+8], o1
call sym.imp..umul
and o2, 0x3f, o0
ld [i3], o1
add o1, o0, o1
ba 0x11998
st o1, [i3]
andcc o2, 0x80, g0
be 0x1163c
and o2, 0x3f, o0
st o0, [fp+-0x18]
ba 0x117e0
mov i0, o0
andcc o2, 0xc0, g0
be 0x11658
cmp o2, 0x2e
st o0, [fp+-0x18]
add i1, o0, o0
ba 0x11998
stb g0, [o0+0x1ac]
bgu 0x11990
sll o2, 2, o1
call 0x11668
add o7, 0x14, o0
ld [o0+o1], o0
jmp o7+o0
nop
unimp 0x338
unimp 0xd0
unimp 0xfc
unimp 0x114
unimp 0x138
unimp 0x174
unimp 0x1c4
unimp 0x338
unimp 0x338
unimp 0x1e4
unimp 0x290
unimp 0x2b0
unimp 0x224
unimp 0x254
unimp 0x274
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x330
unimp 0x2d0
unimp 0x314
ldub [i0], o0
ldub [i0+1], o2
ldub [i0+2], o1
sll o0, 0x18, o0
sll o2, 0x10, o2
or o2, o0, o2
sll o1, 8, o1
ldub [i0+3], o0
or o1, o2, o1
ba 0x117c8
or o0, o1, o0
ldub [i0], o1
ld [i3], o0
add o0, o1, o0
st o0, [i3]
ba 0x11998
add i0, 1, i0
ldub [i0], o0
ldub [i0+1], o2
ld [i3], o1
sll o0, 8, o0
or o2, o0, o2
add o1, o2, o1
st o1, [i3]
ba 0x11998
add i0, 2, i0
ldub [i0], o2
ldub [i0+1], o0
ldub [i0+2], o1
sll o2, 0x18, o2
sll o0, 0x10, o0
or o0, o2, o0
sll o1, 8, o1
ldub [i0+3], o2
or o1, o0, o1
ld [i3], o0
or o2, o1, o2
add o0, o2, o0
st o0, [i3]
ba 0x11998
add i0, 4, i0
mov i0, o0
call sym.decode_uleb128
add fp, -0x18, o1
call sym.decode_uleb128
add fp, -0x14, o1
ld [fp+-0x14], o2
mov o0, i0
ld [i2+0xc], o1
call sym.imp..umul
mov o2, o0
st o0, [fp+-0x14]
ld [fp+-0x18], o1
mov 1, o0
add i1, o1, o1
stb o0, [o1+0x1ac]
invalid
unaligned
unaligned
unaligned
sll o0, 2, o0
add i1, o0, o0
ba 0x11998
st o1, [o0+0x10]
mov i0, o0
call sym.decode_uleb128
add fp, -0x18, o1
ld [fp+-0x18], o1
mov o0, i0
add i1, o1, o1
ba 0x11998
stb g0, [o1+0x1ac]
mov i0, o0
call sym.decode_uleb128
add fp, -0x18, o1
call sym.decode_uleb128
add fp, -0x1c, o1
ld [fp+-0x18], o1
mov 2, o2
add i1, o1, o1
stb o2, [o1+0x1ac]
ld [fp+-0x18], o1
mov o0, i0
ld [fp+-0x1c], o0
sll o1, 2, o1
add i1, o1, o1
ba 0x11998
st o0, [o1+0x10]
mov i0, o0
add fp, -0x18, l0
call sym.decode_uleb128
mov l0, o1
call sym.decode_uleb128
add fp, -0x14, o1
lduh [l0+2], o1
mov o0, i0
ld [fp+-0x14], o0
sth o1, [i1+0x1a8]
ba 0x11998
st o0, [i1+8]
mov i0, o0
add fp, -0x18, l0
call sym.decode_uleb128
mov l0, o1
lduh [l0+2], o1
mov o0, i0
ba 0x11998
sth o1, [i1+0x1a8]
mov i0, o0
call sym.decode_uleb128
add fp, -0x14, o1
ld [fp+-0x14], o1
mov o0, i0
ba 0x11998
st o1, [i1+8]
call sym.imp.malloc
mov 0x218, o0
mov o0, l0
mov i1, o1
call sym.imp.memcpy
mov 0x218, o2
ba 0x11998
st l0, [i1+0x214]
mov i1, o0
ld [o0+0x214], l0
mov 0x218, o2
call sym.imp.memcpy
mov l0, o1
call sym.imp.free
mov l0, o0
ba,a 0x11998
mov 0x10, o0
st o0, [fp+-0x18]
mov 1, o3
ld [fp+-0x18], o0
add i1, o0, o0
stb o3, [o0+0x1ac]
ld [fp+-0x18], o2
sll o2, 2, o1
add i1, o1, o1
add o2, -0x10, o0
sll o0, 2, o0
st o0, [o1+0x10]
add o2, 1, o2
cmp o2, 0x1f
bleu 0x1193c
st o2, [fp+-0x18]
ba,a 0x11998
mov i0, o0
call sym.decode_uleb128
add fp, -0x14, o1
ld [fp+-0x14], o1
mov o0, i0
ba 0x11998
st o1, [i1+0xc]
call sym.imp.abort
nop
ret
restore
save sp, -0x78, sp
call 0x114d8
sethi 0x42, l7
or l7, 0x9c, l7
add l7, o7, l7
sethi 0, o0
or o0, 0x10, o0
ld [l7+o0], o1
mov i0, o0
ld [o0+4], o2
sub o0, o2, o0
add o0, 0xd, o0
call sym.imp.strcmp
st o0, [i1]
cmp o0, 0
be 0x11540
sethi 0, o1
ld [i1], o0
or o1, 0x14, o1
call sym.imp.strcmp
ld [l7+o1], o1
cmp o0, 0
be 0x11540
nop
ld [i1], o0
ldsb [o0], o0
cmp o0, 0x7a
bne 0x115ec
mov 0, i0
call sym.imp.strlen
ld [i1], o0
sethi 0, o1
ld [i1], o2
or o1, 0x14, o1
ld [l7+o1], o1
add o2, o0, l0
add l0, 1, i0
call sym.imp.strcmp
mov o2, o0
cmp o0, 0
bne,a 0x115a4
st g0, [i1+4]
ldub [l0+1], o0
ldub [i0+1], o2
ldub [i0+2], o1
sll o0, 0x18, o0
sll o2, 0x10, o2
or o2, o0, o2
sll o1, 8, o1
ldub [i0+3], o0
or o1, o2, o1
or o0, o1, o0
st o0, [i1+4]
add l0, 5, i0
mov i0, o0
call sym.decode_uleb128
add i1, 8, o1
call sym.decode_sleb128
add i1, 0xc, o1
mov o0, i0
ldub [i0], o0
ld [i1], o1
st o0, [i1+0x10]
ldsb [o1], o0
cmp o0, 0x7a
bne 0x115ec
add i0, 1, i0
mov i0, o0
call sym.decode_uleb128
add fp, -0x14, o1
ld [fp+-0x14], o1
add o0, o1, i0
ret
restore
ld [o0], g2
mov 0, o1
cmp g2, o1
be 0x11230
nop
ld [o0+4], g2
cmp g2, 0
be,a 0x1121c
ld [o0], g2
ld [o0+8], g2
cmp g2, 0
bne,a 0x11218
add o1, 1, o1
ld [o0], g2
add o0, g2, g2
ld [g2+4], g3
cmp g3, 0
bne 0x111f8
add g2, 4, o0
retl
mov o1, o0
save sp, -0x80, sp
ld [i0+0xc], o0
cmp o0, 0
be 0x1132c
mov o0, l0
st g0, [fp+-0x14]
ld [l0], o0
cmp o0, 0
be 0x1133c
ld [fp+-0x14], o0
call sym.count_fdes
ld [l0], o0
ld [fp+-0x14], o1
add l0, 4, l0
add o1, o0, o1
st o1, [fp+-0x14]
ld [l0], o0
cmp o0, 0
bne 0x112fc
ld [fp+-0x14], o0
ba 0x11340
st o0, [i0+0x10]
call sym.count_fdes
ld [i0+8], o0
st o0, [fp+-0x14]
ld [fp+-0x14], o0
st o0, [i0+0x10]
call sym.imp.malloc
sll o0, 2, o0
mov -1, o1
st o1, [fp+-0x18]
st g0, [fp+-0x1c]
st g0, [fp+-0x14]
ld [i0+0xc], o1
cmp o1, 0
be 0x113b0
mov o0, l1
mov o1, l0
ld [l0], o0
cmp o0, 0
be 0x113cc
ld [fp+-0x18], o1
mov l1, o1
add fp, -0x14, o2
add fp, -0x18, o3
ld [l0], o0
call sym.add_fdes
add fp, -0x1c, o4
add l0, 4, l0
ld [l0], o0
cmp o0, 0
bne 0x11380
mov l1, o1
ba 0x113cc
ld [fp+-0x18], o1
ld [i0+8], o0
mov l1, o1
add fp, -0x14, o2
add fp, -0x18, o3
call sym.add_fdes
add fp, -0x1c, o4
ld [fp+-0x18], o1
st l1, [i0+0xc]
ld [fp+-0x1c], o0
st o1, [i0]
st o0, [i0+4]
ret
restore
save sp, -0x70, sp
ld [i2], l0
ld [i3], l2
ld [i0], o0
cmp o0, 0
be 0x112c0
ld [i4], l1
ld [i0+4], o0
cmp o0, 0
be,a 0x112ac
ld [i0], o0
ld [i0+8], o0
cmp o0, 0
be 0x112a8
mov l0, o1
mov i1, o0
call sym.fde_insert
mov i0, o2
ld [i0+8], o1
cmp o1, l2
bcc 0x11294
add l0, 1, l0
mov o1, l2
ld [i0+0xc], o0
add o1, o0, o0
cmp o0, l1
bgu,a 0x112a8
mov o0, l1
ld [i0], o0
add i0, o0, o0
ld [o0+4], o1
cmp o1, 0
bne 0x11254
add o0, 4, i0
st l0, [i2]
st l2, [i3]
st l1, [i4]
ret
restore
save sp, -0x70, sp
call 0x113f0
sethi 0x42, l7
or l7, 0x184, l7
add l7, o7, l7
sethi 0, o0
or o0, 0x18, o0
ld [l7+o0], o0
ld [o0], l0
cmp l0, 0
be 0x11460
mov i0, l1
ld [l0], o0
cmp o0, 0
bne 0x11434
cmp l1, o0
call sym.frame_init
mov l0, o0
ld [l0], o0
cmp l1, o0
bcs,a 0x11450
ld [l0+0x14], l0
ld [l0+4], o0
cmp l1, o0
bcs 0x11460
cmp l0, 0
ld [l0+0x14], l0
cmp l0, 0
bne,a 0x11418
ld [l0], o0
cmp l0, 0
be 0x114c4
mov 0, i0
ld [l0+0x10], o4
mov 0, o3
cmp o3, o4
bcc 0x114c4
add o3, o4, o0
ld [l0+0xc], o5
srl o0, 1, o2
sll o2, 2, o0
ld [o5+o0], i0
ld [i0+8], o1
cmp l1, o1
bcc,a 0x114a4
ld [i0+0xc], o0
ba 0x114b4
mov o2, o4
add o1, o0, o0
cmp l1, o0
bleu 0x114c4
add o2, 1, o3
cmp o3, o4
bcs 0x11480
add o3, o4, o0
mov 0, i0
ret
restore
save sp, -0x70, sp
ret
restore
sethi 0xc0, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x84, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x9c, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x48, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0xb4, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0x90, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0xcc, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
sethi 0xa8, g1
ba,a obj._PROCEDURE_LINKAGE_TABLE_
nop
bn,a obj.shellcode
call fcn.00021f1c
add o7, 0x20, o0
add o0, 0x10, o1
st g0, [o0+8]
st o0, [o0+0x10]
st g0, [o0+0x14]
mov 0xb, g1
ta icc, g0 + 8
unaligned
unaligned
fbu,a,pn fcc2, 0xbc4f8
fbu,a fcc2, 0xfece4
unimp 0
unimp 0
