push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048904 <call_gmon_start>
call   8048970 <frame_dummy>
call   80492f0 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x804a644
jmp    DWORD PTR ds:0x804a648
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a64c
push   0x0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a650
push   0x8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a654
push   0x10
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a658
push   0x18
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a65c
push   0x20
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a660
push   0x28
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a664
push   0x30
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a668
push   0x38
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a66c
push   0x40
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a670
push   0x48
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a674
push   0x50
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a678
push   0x58
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a67c
push   0x60
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a680
push   0x68
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a684
push   0x70
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a688
push   0x78
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a68c
push   0x80
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a690
push   0x88
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a694
push   0x90
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a698
push   0x98
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a69c
push   0xa0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6a0
push   0xa8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6a4
push   0xb0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6a8
push   0xb8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6ac
push   0xc0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6b0
push   0xc8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6b4
push   0xd0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6b8
push   0xd8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6bc
push   0xe0
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6c0
push   0xe8
jmp    80486e0 <.plt>
jmp    DWORD PTR ds:0x804a6c4
push   0xf0
jmp    80486e0 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8049240
push   0x80491e0
push   ecx
push   esi
push   0x8048ccc
call   80487f0 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   804890d <call_gmon_start+0x9>
pop    ebx
add    ebx,0x1d33
push   edx
mov    eax,DWORD PTR [ebx+0x88]
test   eax,eax
je     8048921 <call_gmon_start+0x1d>
call   eax
pop    eax
pop    ebx
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   eax
push   eax
cmp    BYTE PTR ds:0x804a6d0,0x0
jne    804896c <__do_global_dtors_aux+0x3c>
mov    eax,ds:0x804a55c
mov    edx,DWORD PTR [eax]
test   edx,edx
je     8048965 <__do_global_dtors_aux+0x35>
lea    esi,[esi+eiz*1+0x0]
add    eax,0x4
mov    ds:0x804a55c,eax
call   edx
mov    eax,ds:0x804a55c
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    8048950 <__do_global_dtors_aux+0x20>
mov    BYTE PTR ds:0x804a6d0,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ecx
push   ecx
mov    edx,DWORD PTR ds:0x804a63c
test   edx,edx
je     8048998 <frame_dummy+0x28>
mov    eax,0x0
test   eax,eax
je     8048998 <frame_dummy+0x28>
sub    esp,0xc
push   0x804a63c
call   0 <_init-0x80486c8>
add    esp,0x10
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x128
sub    esp,0x4
push   0x100
push   0x0
lea    eax,[ebp-0x108]
push   eax
call   80488a0 <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x100
push   DWORD PTR [ebp+0x8]
lea    eax,[ebp-0x108]
push   eax
call   80488b0 <strncpy@plt>
add    esp,0x10
lea    eax,[ebp-0x108]
mov    DWORD PTR [ebp-0x10c],eax
mov    eax,DWORD PTR [ebp-0x10c]
cmp    BYTE PTR [eax],0x0
jne    80489f1 <changeown+0x55>
jmp    8048a19 <changeown+0x7d>
mov    eax,DWORD PTR [ebp-0x10c]
cmp    BYTE PTR [eax],0x3a
jne    8048a0f <changeown+0x73>
mov    eax,DWORD PTR [ebp-0x10c]
mov    BYTE PTR [eax],0x0
lea    eax,[ebp-0x10c]
inc    DWORD PTR [eax]
jmp    8048a19 <changeown+0x7d>
lea    eax,[ebp-0x10c]
inc    DWORD PTR [eax]
jmp    80489e4 <changeown+0x48>
sub    esp,0xc
lea    eax,[ebp-0x108]
push   eax
call   8048850 <getpwnam@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x110],eax
cmp    DWORD PTR [ebp-0x110],0x0
je     8048a5a <changeown+0xbe>
mov    eax,DWORD PTR [ebp-0x110]
mov    eax,DWORD PTR [eax+0x8]
mov    DWORD PTR [ebp-0x118],eax
mov    eax,DWORD PTR [ebp-0x110]
mov    eax,DWORD PTR [eax+0xc]
mov    DWORD PTR [ebp-0x11c],eax
jmp    8048a72 <changeown+0xd6>
sub    esp,0xc
lea    eax,[ebp-0x108]
push   eax
call   8048870 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x118],eax
mov    eax,DWORD PTR [ebp-0x10c]
cmp    BYTE PTR [eax],0x0
je     8048ac5 <changeown+0x129>
sub    esp,0xc
push   DWORD PTR [ebp-0x10c]
call   80486f0 <getgrnam@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x114],eax
cmp    DWORD PTR [ebp-0x114],0x0
je     8048aae <changeown+0x112>
mov    eax,DWORD PTR [ebp-0x114]
mov    eax,DWORD PTR [eax+0x8]
mov    DWORD PTR [ebp-0x11c],eax
jmp    8048ac5 <changeown+0x129>
sub    esp,0xc
push   DWORD PTR [ebp-0x10c]
call   8048870 <atoi@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x11c],eax
sub    esp,0xc
push   DWORD PTR [ebp-0x11c]
call   8048780 <setgid@plt>
add    esp,0x10
test   eax,eax
je     8048af6 <changeown+0x15a>
sub    esp,0xc
push   0x8049360
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x120],0x0
jmp    8048b31 <changeown+0x195>
sub    esp,0xc
push   DWORD PTR [ebp-0x118]
call   80488d0 <setuid@plt>
add    esp,0x10
test   eax,eax
je     8048b27 <changeown+0x18b>
sub    esp,0xc
push   0x8049375
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x120],0x0
jmp    8048b31 <changeown+0x195>
mov    DWORD PTR [ebp-0x120],0x1
mov    eax,DWORD PTR [ebp-0x120]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x88
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x2f
jne    8048b55 <fullpath+0x1c>
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x7c],eax
jmp    8048c9e <fullpath+0x165>
sub    esp,0xc
push   0x100
call   8048790 <malloc@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x2e
jne    8048bc2 <fullpath+0x89>
sub    esp,0x8
push   0xff
push   DWORD PTR [ebp-0x14]
call   8048890 <getcwd@plt>
add    esp,0x10
test   eax,eax
je     8048bb6 <fullpath+0x7d>
sub    esp,0x8
push   0x804938a
push   DWORD PTR [ebp-0x14]
call   8048810 <strcat@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   DWORD PTR [ebp-0x14]
call   8048810 <strcat@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x7c],eax
jmp    8048c9e <fullpath+0x165>
mov    DWORD PTR [ebp-0x7c],0x0
jmp    8048c9e <fullpath+0x165>
sub    esp,0xc
push   0x804938c
call   8048760 <getenv@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0x10],0x0
jne    8048be6 <fullpath+0xad>
jmp    8048c89 <fullpath+0x150>
sub    esp,0x8
push   0x3a
push   DWORD PTR [ebp-0x10]
call   8048700 <strchr@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x10],eax
cmp    DWORD PTR [ebp-0x10],0x0
je     8048c05 <fullpath+0xcc>
mov    eax,DWORD PTR [ebp-0x10]
mov    BYTE PTR [eax],0x0
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
push   DWORD PTR [ebp-0xc]
push   0x8049391
push   0x100
push   DWORD PTR [ebp-0x14]
call   8048830 <snprintf@plt>
add    esp,0x20
sub    esp,0x8
lea    eax,[ebp-0x78]
push   eax
push   DWORD PTR [ebp-0x14]
call   80492b0 <__stat>
add    esp,0x10
cmp    eax,0xffffffff
je     8048c71 <fullpath+0x138>
mov    eax,DWORD PTR [ebp-0x68]
and    eax,0xf000
cmp    eax,0x8000
jne    8048c71 <fullpath+0x138>
mov    eax,DWORD PTR [ebp-0x68]
and    eax,0x40
test   eax,eax
jne    8048c69 <fullpath+0x130>
mov    eax,DWORD PTR [ebp-0x68]
and    eax,0x8
test   eax,eax
jne    8048c69 <fullpath+0x130>
mov    eax,DWORD PTR [ebp-0x68]
and    eax,0x1
test   eax,eax
jne    8048c69 <fullpath+0x130>
jmp    8048c71 <fullpath+0x138>
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x7c],eax
jmp    8048c9e <fullpath+0x165>
cmp    DWORD PTR [ebp-0x10],0x0
jne    8048c79 <fullpath+0x140>
jmp    8048c89 <fullpath+0x150>
lea    eax,[ebp-0x10]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0xc],eax
jmp    8048bdb <fullpath+0xa2>
sub    esp,0xc
push   DWORD PTR [ebp-0x14]
call   8048880 <free@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x7c],0x0
mov    eax,DWORD PTR [ebp-0x7c]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x4
push   DWORD PTR [ebp+0x8]
push   0x80493a0
push   DWORD PTR ds:0x804a6cc
call   8048740 <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048860 <exit@plt>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x164
and    esp,0xfffffff0
mov    eax,0x0
sub    esp,eax
mov    DWORD PTR [ebp-0x134],0x0
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x11c],eax
cmp    DWORD PTR [ebp+0x8],0x1
jg     8048d0c <main+0x40>
sub    esp,0xc
push   DWORD PTR [ebp-0x11c]
call   8048ca3 <usage>
add    esp,0x10
mov    DWORD PTR [ebp-0x140],0x1
mov    eax,DWORD PTR [ebp-0x140]
cmp    eax,DWORD PTR [ebp+0x8]
jl     8048d26 <main+0x5a>
jmp    8048e34 <main+0x168>
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
cmp    BYTE PTR [eax],0x2d
jne    8048e34 <main+0x168>
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
inc    eax
mov    al,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x9],al
movsx  eax,al
mov    DWORD PTR [ebp-0x154],eax
cmp    DWORD PTR [ebp-0x154],0x70
je     8048de7 <main+0x11b>
cmp    DWORD PTR [ebp-0x154],0x70
jg     8048d88 <main+0xbc>
cmp    DWORD PTR [ebp-0x154],0x64
je     8048e0a <main+0x13e>
jmp    8048e16 <main+0x14a>
cmp    DWORD PTR [ebp-0x154],0x73
je     8048d9c <main+0xd0>
cmp    DWORD PTR [ebp-0x154],0x75
je     8048dbf <main+0xf3>
jmp    8048e16 <main+0x14a>
lea    eax,[ebp-0x140]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
mov    DWORD PTR [ebp-0x120],eax
jmp    8048e27 <main+0x15b>
sub    esp,0xc
lea    eax,[ebp-0x140]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax+edx*1]
call   804899c <changeown>
add    esp,0x10
jmp    8048e27 <main+0x15b>
lea    eax,[ebp-0x140]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
mov    DWORD PTR [ebp-0x124],eax
jmp    8048e27 <main+0x15b>
mov    DWORD PTR [ebp-0x134],0x1
jmp    8048e27 <main+0x15b>
sub    esp,0xc
push   DWORD PTR [ebp-0x11c]
call   8048ca3 <usage>
add    esp,0x10
lea    eax,[ebp-0x140]
inc    DWORD PTR [eax]
jmp    8048d16 <main+0x4a>
mov    edx,DWORD PTR [ebp-0x140]
mov    eax,DWORD PTR [ebp+0x8]
sub    eax,edx
mov    DWORD PTR [ebp-0x144],eax
mov    eax,DWORD PTR [ebp-0x144]
test   eax,eax
je     8048e58 <main+0x18c>
cmp    DWORD PTR [ebp-0x120],0x0
jne    8048e69 <main+0x19d>
sub    esp,0xc
push   DWORD PTR [ebp-0x11c]
call   8048ca3 <usage>
add    esp,0x10
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x144]
shl    eax,0x2
inc    eax
push   eax
call   8048790 <malloc@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x14c],eax
mov    DWORD PTR [ebp-0x13c],0x0
mov    eax,DWORD PTR [ebp-0x13c]
cmp    eax,DWORD PTR [ebp-0x144]
jl     8048e9f <main+0x1d3>
jmp    8048eda <main+0x20e>
mov    eax,DWORD PTR [ebp-0x13c]
lea    ecx,[eax*4+0x0]
mov    ebx,DWORD PTR [ebp-0x14c]
mov    eax,DWORD PTR [ebp-0x140]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax+edx*1]
mov    DWORD PTR [ebx+ecx*1],eax
lea    eax,[ebp-0x140]
inc    DWORD PTR [eax]
lea    eax,[ebp-0x13c]
inc    DWORD PTR [eax]
jmp    8048e8f <main+0x1c3>
mov    eax,DWORD PTR [ebp-0x13c]
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp-0x14c]
mov    DWORD PTR [eax+edx*1],0x0
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x14c]
push   DWORD PTR [eax]
call   8048b39 <fullpath>
add    esp,0x10
mov    DWORD PTR [ebp-0x128],eax
cmp    DWORD PTR [ebp-0x128],0x0
jne    8048f30 <main+0x264>
sub    esp,0xc
push   0x80494d7
call   8048730 <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048860 <exit@plt>
mov    eax,DWORD PTR [ebp-0x128]
mov    DWORD PTR [ebp-0x12c],eax
cmp    DWORD PTR [ebp-0x144],0x1
jle    8048f9c <main+0x2d0>
sub    esp,0x4
push   0xff
push   0x20
lea    eax,[ebp-0x118]
push   eax
call   80488a0 <memset@plt>
add    esp,0x10
mov    BYTE PTR [ebp-0x19],0x0
sub    esp,0x4
sub    esp,0x8
push   DWORD PTR [ebp-0x120]
call   80487e0 <strlen@plt>
add    esp,0xc
push   eax
push   DWORD PTR [ebp-0x120]
lea    eax,[ebp-0x118]
push   eax
call   80488b0 <strncpy@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x14c]
lea    eax,[ebp-0x118]
mov    DWORD PTR [edx],eax
jmp    8048faa <main+0x2de>
mov    edx,DWORD PTR [ebp-0x14c]
mov    eax,DWORD PTR [ebp-0x120]
mov    DWORD PTR [edx],eax
cmp    DWORD PTR [ebp-0x134],0x0
je     804910b <main+0x43f>
sub    esp,0x8
push   0x2
push   0x80494e6
call   8048840 <open@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x138],eax
cmp    DWORD PTR [ebp-0x138],0xffffffff
jne    8048ff7 <main+0x32b>
sub    esp,0xc
push   0x80494f0
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x150],0xffffffff
jmp    80491d2 <main+0x506>
call   8048750 <fork@plt>
mov    DWORD PTR [ebp-0x15c],eax
cmp    DWORD PTR [ebp-0x15c],0xffffffff
je     8049019 <main+0x34d>
cmp    DWORD PTR [ebp-0x15c],0x0
je     8049038 <main+0x36c>
jmp    80490fc <main+0x430>
sub    esp,0xc
push   0x8049501
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x150],0xffffffff
jmp    80491d2 <main+0x506>
call   80487a0 <setsid@plt>
call   8048750 <fork@plt>
mov    DWORD PTR [ebp-0x158],eax
cmp    DWORD PTR [ebp-0x158],0xffffffff
je     804905f <main+0x393>
cmp    DWORD PTR [ebp-0x158],0x0
je     804907e <main+0x3b2>
jmp    80490ed <main+0x421>
sub    esp,0xc
push   0x804950f
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x150],0xffffffff
jmp    80491d2 <main+0x506>
sub    esp,0xc
push   0x0
call   8048770 <umask@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   8048720 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048720 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x2
call   8048720 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   DWORD PTR [ebp-0x138]
call   8048800 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   DWORD PTR [ebp-0x138]
call   8048800 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   DWORD PTR [ebp-0x138]
call   8048800 <dup2@plt>
add    esp,0x10
jmp    804910b <main+0x43f>
mov    DWORD PTR [ebp-0x150],0x0
jmp    80491d2 <main+0x506>
mov    DWORD PTR [ebp-0x150],0x0
jmp    80491d2 <main+0x506>
sub    esp,0x4
push   0x0
push   0x0
push   0xffffffff
call   80487d0 <waitpid@plt>
add    esp,0x10
call   8048710 <getpid@plt>
mov    DWORD PTR [ebp-0x148],eax
cmp    DWORD PTR [ebp-0x124],0x0
je     8049182 <main+0x4b6>
sub    esp,0x8
push   0x804951d
push   DWORD PTR [ebp-0x124]
call   80488c0 <fopen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x130],eax
cmp    DWORD PTR [ebp-0x130],0x0
je     8049182 <main+0x4b6>
sub    esp,0x4
push   DWORD PTR [ebp-0x148]
push   0x804951f
push   DWORD PTR [ebp-0x130]
call   8048740 <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x130]
call   8048820 <fclose@plt>
add    esp,0x10
push   DWORD PTR [ebp-0x148]
push   DWORD PTR [ebp-0x120]
push   0x8049523
push   DWORD PTR ds:0x804a6cc
call   8048740 <fprintf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp-0x14c]
push   DWORD PTR [ebp-0x12c]
call   80487c0 <execv@plt>
add    esp,0x10
sub    esp,0xc
push   0x8049540
call   8048730 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x150],0xffffffff
mov    eax,DWORD PTR [ebp-0x150]
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
mov    DWORD PTR [ebp-0x8],esi
xor    esi,esi
call   80492a0 <__i686.get_pc_thunk.bx>
add    ebx,0x144d
mov    DWORD PTR [ebp-0x4],edi
call   80486c8 <_init>
lea    edx,[ebx-0xec]
lea    eax,[ebx-0xec]
sub    edx,eax
sar    edx,0x2
cmp    esi,edx
jae    804922b <__libc_csu_init+0x4b>
mov    DWORD PTR [ebp-0x10],eax
mov    edi,edx
nop
lea    esi,[esi+eiz*1+0x0]
call   DWORD PTR [eax+esi*4]
inc    esi
mov    eax,DWORD PTR [ebp-0x10]
cmp    esi,edi
jb     8049220 <__libc_csu_init+0x40>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],ebx
call   80492a0 <__i686.get_pc_thunk.bx>
add    ebx,0x13f2
mov    DWORD PTR [ebp-0x4],edi
lea    eax,[ebx-0xec]
lea    edi,[ebx-0xec]
mov    DWORD PTR [ebp-0x8],esi
sub    eax,edi
sar    eax,0x2
test   eax,eax
lea    esi,[eax-0x1]
jne    8049284 <__libc_csu_fini+0x44>
call   8049314 <_fini>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
call   DWORD PTR [edi+esi*4]
mov    eax,esi
dec    esi
test   eax,eax
jne    8049284 <__libc_csu_fini+0x44>
call   8049314 <_fini>
mov    ebx,DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    ebx,DWORD PTR [esp]
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
mov    eax,DWORD PTR [ebp+0xc]
call   80492a0 <__i686.get_pc_thunk.bx>
add    ebx,0x1381
mov    DWORD PTR [esp+0x8],eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp],0x3
mov    DWORD PTR [esp+0x4],eax
call   80487b0 <__xstat@plt>
add    esp,0x14
pop    ebx
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   edx
mov    ebx,0x804a62c
mov    eax,ds:0x804a62c
cmp    eax,0xffffffff
je     8049310 <__do_global_ctors_aux+0x20>
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    8049304 <__do_global_ctors_aux+0x14>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   ebx
call   804931d <_fini+0x9>
pop    ebx
add    ebx,0x1323
push   eax
call   8048930 <__do_global_dtors_aux>
pop    ecx
pop    ebx
leave  
ret    
