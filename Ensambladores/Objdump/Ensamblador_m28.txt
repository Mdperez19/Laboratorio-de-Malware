push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048634 <call_gmon_start>
call   80486a0 <frame_dummy>
call   8048ec0 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x804a19c
jmp    DWORD PTR ds:0x804a1a0
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a1a4
push   0x0
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1a8
push   0x8
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1ac
push   0x10
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1b0
push   0x18
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1b4
push   0x20
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1b8
push   0x28
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1bc
push   0x30
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1c0
push   0x38
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1c4
push   0x40
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1c8
push   0x48
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1cc
push   0x50
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1d0
push   0x58
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1d4
push   0x60
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1d8
push   0x68
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1dc
push   0x70
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1e0
push   0x78
jmp    80484f0 <.plt>
jmp    DWORD PTR ds:0x804a1e4
push   0x80
jmp    80484f0 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8048e80
push   0x8048e50
push   ecx
push   esi
push   0x8048b78
call   8048570 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   804863e <call_gmon_start+0xa>
pop    ebx
add    ebx,0x1b5a
mov    eax,DWORD PTR [ebx+0x50]
test   eax,eax
je     8048651 <call_gmon_start+0x1d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   eax
push   eax
cmp    BYTE PTR ds:0x804a1f4,0x0
jne    804869c <__do_global_dtors_aux+0x3c>
mov    eax,ds:0x804a0b4
mov    edx,DWORD PTR [eax]
test   edx,edx
je     8048695 <__do_global_dtors_aux+0x35>
lea    esi,[esi+eiz*1+0x0]
add    eax,0x4
mov    ds:0x804a0b4,eax
call   edx
mov    eax,ds:0x804a0b4
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    8048680 <__do_global_dtors_aux+0x20>
mov    BYTE PTR ds:0x804a1f4,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ecx
push   ecx
mov    edx,DWORD PTR ds:0x804a194
test   edx,edx
je     80486c8 <frame_dummy+0x28>
mov    eax,0x0
test   eax,eax
je     80486c8 <frame_dummy+0x28>
sub    esp,0xc
push   0x804a194
call   0 <_init-0x80484d8>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0xc
push   0x8048f20
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x8048f60
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x8048fa0
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   80485c0 <exit@plt>
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x8],eax
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0xc],edx
mov    DWORD PTR [ebp-0x10],0x0
mov    WORD PTR [ebp-0x2],0x0
cmp    DWORD PTR [ebp-0x8],0x1
jg     8048736 <in_cksum+0x27>
jmp    804874e <in_cksum+0x3f>
mov    eax,DWORD PTR [ebp-0xc]
mov    ax,WORD PTR [eax]
and    eax,0xffff
add    DWORD PTR [ebp-0x10],eax
add    DWORD PTR [ebp-0xc],0x2
sub    DWORD PTR [ebp-0x8],0x2
jmp    804872e <in_cksum+0x1f>
cmp    DWORD PTR [ebp-0x8],0x1
jne    8048768 <in_cksum+0x59>
mov    edx,DWORD PTR [ebp-0xc]
mov    al,BYTE PTR [edx]
mov    BYTE PTR [ebp-0x2],al
mov    ax,WORD PTR [ebp-0x2]
and    eax,0xffff
add    DWORD PTR [ebp-0x10],eax
mov    edx,DWORD PTR [ebp-0x10]
sar    edx,0x10
movzx  eax,WORD PTR [ebp-0x10]
add    edx,eax
mov    DWORD PTR [ebp-0x10],edx
mov    eax,DWORD PTR [ebp-0x10]
sar    eax,0x10
add    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x10]
not    eax
mov    WORD PTR [ebp-0x2],ax
mov    ax,WORD PTR [ebp-0x2]
and    eax,0xffff
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
sub    esp,0x8
push   0x10
push   DWORD PTR [ebp+0xc]
call   80485b0 <bzero@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp+0x8]
call   80485a0 <gethostbyname@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0x0
jne    80487f4 <resolve+0x60>
sub    esp,0x4
push   DWORD PTR [ebp+0x8]
push   0x8048fd6
push   DWORD PTR ds:0x804a1f0
call   8048520 <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   0x8048ff1
call   8048510 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],0xffffffff
jmp    8048843 <resolve+0xaf>
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp-0x8]
mov    ax,WORD PTR [eax+0x8]
mov    WORD PTR [edx],ax
sub    esp,0x4
mov    eax,DWORD PTR [ebp-0x8]
push   DWORD PTR [eax+0xc]
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [eax+0x10]
push   DWORD PTR [eax]
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
push   eax
call   8048590 <memcpy@plt>
add    esp,0x10
mov    ebx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp+0x10]
and    eax,0xffff
sub    esp,0xc
push   eax
call   80485e0 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebx+0x2],ax
mov    DWORD PTR [ebp-0xc],0x0
mov    eax,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x4]
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x28
sub    esp,0x4
push   0x0
lea    eax,[ebp-0x18]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048794 <resolve>
add    esp,0x10
cmp    eax,0xffffffff
jne    8048891 <resolve_one+0x3b>
sub    esp,0x8
push   DWORD PTR [ebp+0x10]
push   0x8048ff2
call   8048580 <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1c],0xffffffff
jmp    80488a0 <resolve_one+0x4a>
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x1c],0x0
mov    eax,DWORD PTR [ebp-0x1c]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x4
push   0x804900e
push   0x804a200
push   DWORD PTR [ebp+0x8]
call   8048856 <resolve_one>
add    esp,0x10
test   eax,eax
je     80488d0 <resolve_all+0x2b>
mov    DWORD PTR [ebp-0x4],0xffffffff
jmp    8048921 <resolve_all+0x7c>
cmp    DWORD PTR [ebp+0xc],0x0
je     80488fb <resolve_all+0x56>
sub    esp,0x4
push   0x804901b
push   0x804a1f8
push   DWORD PTR [ebp+0xc]
call   8048856 <resolve_one>
add    esp,0x10
test   eax,eax
je     80488fb <resolve_all+0x56>
mov    DWORD PTR [ebp-0x4],0xffffffff
jmp    8048921 <resolve_all+0x7c>
mov    eax,ds:0x804a1f8
mov    ds:0x804a20c,eax
mov    WORD PTR ds:0x804a208,0x2
mov    eax,ds:0x804a200
mov    ds:0x804a220,eax
mov    WORD PTR ds:0x804a21c,0x2
mov    eax,DWORD PTR [ebp-0x4]
leave  
ret    
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x1430
lea    eax,[ebp-0x1418]
mov    DWORD PTR [ebp-0x141c],eax
lea    eax,[ebp-0x1418]
add    eax,0x14
mov    DWORD PTR [ebp-0x1420],eax
lea    eax,[ebp-0x1418]
add    eax,0x1c
mov    DWORD PTR [ebp-0x1424],eax
lea    eax,[ebp-0x1418]
add    eax,DWORD PTR [ebp+0x14]
add    eax,0x30
mov    DWORD PTR [ebp-0x1428],eax
sub    esp,0x4
push   0x1402
push   0x0
lea    eax,[ebp-0x1418]
push   eax
call   80485f0 <memset@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x141c]
mov    al,BYTE PTR [edx]
and    eax,0xf
or     eax,0x40
mov    BYTE PTR [edx],al
mov    edx,DWORD PTR [ebp-0x141c]
mov    al,BYTE PTR [edx]
and    eax,0xfffffff0
or     eax,0x5
mov    BYTE PTR [edx],al
mov    esi,DWORD PTR [ebp-0x141c]
mov    bl,0xff
call   8048550 <random@plt>
mov    edx,eax
mov    eax,0xf
mov    ecx,eax
mov    eax,edx
sar    edx,0x1f
idiv   ecx
mov    al,bl
sub    al,dl
mov    BYTE PTR [esi+0x8],al
mov    eax,DWORD PTR [ebp-0x141c]
mov    BYTE PTR [eax+0x9],0x1
mov    ebx,DWORD PTR [ebp-0x141c]
mov    eax,DWORD PTR [ebp+0x14]
add    eax,0x38
and    eax,0xffff
sub    esp,0xc
push   eax
call   80485e0 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebx+0x2],ax
sub    esp,0x4
push   0x4
mov    eax,DWORD PTR [ebp-0x141c]
add    eax,0x10
push   eax
push   0x804a220
call   8048540 <bcopy@plt>
add    esp,0x10
sub    esp,0x4
push   0x4
mov    eax,DWORD PTR [ebp-0x141c]
add    eax,0xc
push   eax
push   0x804a20c
call   8048540 <bcopy@plt>
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x141c]
sub    esp,0x8
push   0x14
lea    eax,[ebp-0x1418]
push   eax
call   804870f <in_cksum>
add    esp,0x10
mov    WORD PTR [ebx+0xa],ax
mov    edx,DWORD PTR [ebp-0x1424]
mov    al,BYTE PTR [edx]
and    eax,0xf
or     eax,0x40
mov    BYTE PTR [edx],al
mov    edx,DWORD PTR [ebp-0x1424]
mov    al,BYTE PTR [edx]
and    eax,0xfffffff0
or     eax,0x5
mov    BYTE PTR [edx],al
mov    esi,DWORD PTR [ebp-0x1424]
mov    ebx,DWORD PTR [ebp-0x141c]
call   8048550 <random@plt>
mov    edx,eax
mov    eax,0xf
mov    ecx,eax
mov    eax,edx
sar    edx,0x1f
idiv   ecx
mov    al,BYTE PTR [ebx+0x8]
sub    al,dl
mov    BYTE PTR [esi+0x8],al
mov    eax,DWORD PTR [ebp-0x1424]
mov    BYTE PTR [eax+0x9],0x6
mov    ebx,DWORD PTR [ebp-0x1424]
call   8048550 <random@plt>
mov    edx,eax
mov    eax,0x45
mov    ecx,eax
mov    eax,edx
sar    edx,0x1f
idiv   ecx
mov    WORD PTR [ebx+0x2],dx
sub    esp,0x4
push   0x4
mov    eax,DWORD PTR [ebp-0x1424]
add    eax,0xc
push   eax
push   0x804a220
call   8048540 <bcopy@plt>
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x1424]
sub    esp,0x8
push   0x14
push   DWORD PTR [ebp-0x1424]
call   804870f <in_cksum>
add    esp,0x10
mov    WORD PTR [ebx+0xa],ax
mov    ebx,DWORD PTR [ebp-0x1428]
mov    eax,DWORD PTR [ebp+0x14]
and    eax,0xffff
sub    esp,0xc
push   eax
call   80485e0 <htons@plt>
add    esp,0x10
and    eax,0xffff
mov    DWORD PTR [ebx],eax
mov    eax,DWORD PTR [ebp-0x1420]
mov    BYTE PTR [eax],0x8
mov    eax,DWORD PTR [ebp-0x1420]
mov    BYTE PTR [eax+0x1],0x0
mov    ebx,DWORD PTR [ebp-0x1420]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
add    eax,0x24
push   eax
push   DWORD PTR [ebp-0x1420]
call   804870f <in_cksum>
add    esp,0x10
mov    WORD PTR [ebx+0x2],ax
sub    esp,0x8
push   0x10
push   0x804a21c
push   0x0
mov    eax,DWORD PTR [ebp+0x14]
add    eax,0x38
push   eax
lea    eax,[ebp-0x1418]
push   eax
push   DWORD PTR [ebp+0x8]
call   8048560 <sendto@plt>
add    esp,0x20
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x18
and    esp,0xfffffff0
mov    eax,0x0
sub    esp,eax
cmp    DWORD PTR [ebp+0x8],0x5
jg     8048b9e <main+0x26>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   80486cc <usage>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    eax,DWORD PTR [eax]
mov    ds:0x804a0b8,eax
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    eax,DWORD PTR [eax]
mov    ds:0x804a1fc,eax
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
sub    esp,0xc
push   DWORD PTR [eax]
call   80485d0 <atoi@plt>
add    esp,0x10
mov    ds:0x804a218,eax
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x10
sub    esp,0xc
push   DWORD PTR [eax]
call   80485d0 <atoi@plt>
add    esp,0x10
mov    ds:0x804a204,eax
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x14
sub    esp,0xc
push   DWORD PTR [eax]
call   80485d0 <atoi@plt>
add    esp,0x10
mov    ds:0x804a22c,eax
sub    esp,0x8
push   DWORD PTR ds:0x804a0b8
push   DWORD PTR ds:0x804a1fc
call   80488a5 <resolve_all>
add    esp,0x10
sub    esp,0x4
push   0xff
push   0x3
push   0x2
call   8048600 <socket@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4],eax
push   DWORD PTR ds:0x804a204
push   DWORD PTR ds:0x804a200
push   DWORD PTR ds:0x804a1f8
push   DWORD PTR [ebp-0x4]
call   8048926 <icmp_send>
add    esp,0x10
cmp    eax,0xffffffff
jne    8048c75 <main+0xfd>
sub    esp,0xc
push   0x8049029
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x8048ff1
call   8048510 <perror@plt>
add    esp,0x10
jmp    8048e41 <main+0x2c9>
mov    DWORD PTR [ebp-0xc],0x0
cmp    DWORD PTR ds:0x804a218,0x0
je     8048d84 <main+0x20c>
cmp    DWORD PTR ds:0x804a218,0x0
je     8048d84 <main+0x20c>
sub    esp,0xc
push   0x804903f
call   8048580 <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],0x0
mov    eax,DWORD PTR [ebp-0x8]
cmp    eax,DWORD PTR ds:0x804a218
jb     8048cbd <main+0x145>
jmp    8048d69 <main+0x1f1>
push   DWORD PTR ds:0x804a204
push   DWORD PTR ds:0x804a200
push   DWORD PTR ds:0x804a1f8
push   DWORD PTR [ebp-0x4]
call   8048926 <icmp_send>
add    esp,0x10
cmp    eax,0xffffffff
jne    8048cef <main+0x177>
sub    esp,0xc
push   0x8049052
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0xc
mov    edx,DWORD PTR ds:0x804a22c
mov    eax,edx
shl    eax,0x2
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
shl    eax,0x3
push   eax
call   8048500 <usleep@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0xc]
inc    edx
mov    eax,0x19
mov    ecx,eax
mov    eax,edx
sar    edx,0x1f
idiv   ecx
mov    eax,edx
mov    DWORD PTR [ebp-0xc],eax
test   eax,eax
jne    8048d5f <main+0x1e7>
sub    esp,0x8
push   0x804906b
push   DWORD PTR ds:0x804a1ec
call   8048520 <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804a1ec
call   8048530 <fflush@plt>
add    esp,0x10
lea    eax,[ebp-0x8]
inc    DWORD PTR [eax]
jmp    8048cad <main+0x135>
sub    esp,0x8
push   DWORD PTR ds:0x804a218
push   0x804906d
call   8048580 <printf@plt>
add    esp,0x10
jmp    8048e41 <main+0x2c9>
sub    esp,0xc
push   0x8049089
call   8048580 <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],0x0
cmp    DWORD PTR [ebp-0x8],0x0
jle    8048da6 <main+0x22e>
jmp    8048e41 <main+0x2c9>
push   DWORD PTR ds:0x804a204
push   DWORD PTR ds:0x804a200
push   DWORD PTR ds:0x804a1f8
push   DWORD PTR [ebp-0x4]
call   8048926 <icmp_send>
add    esp,0x10
cmp    eax,0xffffffff
jne    8048dea <main+0x272>
sub    esp,0xc
push   0x8049029
call   8048580 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x8048ff1
call   8048510 <perror@plt>
add    esp,0x10
jmp    8048e41 <main+0x2c9>
sub    esp,0xc
push   0x384
call   8048500 <usleep@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0xc]
inc    edx
mov    eax,0x19
mov    ecx,eax
mov    eax,edx
sar    edx,0x1f
idiv   ecx
mov    eax,edx
mov    DWORD PTR [ebp-0xc],eax
test   eax,eax
jne    8048d9b <main+0x223>
sub    esp,0x8
push   0x804906b
push   DWORD PTR ds:0x804a1ec
call   8048520 <fprintf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804a1ec
call   8048530 <fflush@plt>
add    esp,0x10
jmp    8048d9b <main+0x223>
mov    eax,DWORD PTR [ebp-0x10]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
xor    ebx,ebx
call   80484d8 <_init>
mov    eax,0x804a0ac
sub    eax,0x804a0ac
sar    eax,0x2
cmp    ebx,eax
jae    8048e7c <__libc_csu_init+0x2c>
mov    esi,eax
nop
call   DWORD PTR [ebx*4+0x804a0ac]
inc    ebx
cmp    ebx,esi
jb     8048e70 <__libc_csu_init+0x20>
pop    ebx
pop    esi
pop    ebp
ret    
mov    eax,0x804a0ac
push   ebp
sub    eax,0x804a0ac
mov    ebp,esp
sar    eax,0x2
push   ebx
test   eax,eax
push   edx
lea    ebx,[eax-0x1]
jne    8048ea1 <__libc_csu_fini+0x21>
pop    eax
pop    ebx
pop    ebp
jmp    8048ee4 <_fini>
call   DWORD PTR [ebx*4+0x804a0ac]
mov    edx,ebx
dec    ebx
test   edx,edx
jne    8048ea1 <__libc_csu_fini+0x21>
jmp    8048e99 <__libc_csu_fini+0x19>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   edx
mov    ebx,0x804a184
mov    eax,ds:0x804a184
cmp    eax,0xffffffff
je     8048ee0 <__do_global_ctors_aux+0x20>
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    8048ed4 <__do_global_ctors_aux+0x14>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   8048eee <_fini+0xa>
pop    ebx
add    ebx,0x12aa
call   8048660 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
