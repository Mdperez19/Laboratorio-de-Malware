push   ebp
mov    ebp,esp
sub    esp,0x8
call   80484a4 <call_gmon_start>
nop
call   8048540 <frame_dummy>
call   8048780 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x8049960
jmp    DWORD PTR ds:0x8049964
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049968
push   0x0
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x804996c
push   0x8
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049970
push   0x10
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049974
push   0x18
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049978
push   0x20
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x804997c
push   0x28
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049980
push   0x30
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049984
push   0x38
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049988
push   0x40
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x804998c
push   0x48
jmp    80483b4 <.plt>
jmp    DWORD PTR ds:0x8049990
push   0x50
jmp    80483b4 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x80487c0
push   0x804839c
push   ecx
push   esi
push   0x8048588
call   8048424 <__libc_start_main@plt>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   80484ae <call_gmon_start+0xa>
pop    ebx
add    ebx,0x14ae
mov    eax,DWORD PTR [ebx+0x38]
test   eax,eax
je     80484c1 <call_gmon_start+0x1d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x804982c
test   edx,edx
jne    8048529 <__do_global_dtors_aux+0x59>
mov    edx,DWORD PTR ds:0x8049828
mov    eax,DWORD PTR [edx]
test   eax,eax
je     8048506 <__do_global_dtors_aux+0x36>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    ds:0x8049828,eax
call   DWORD PTR [edx]
mov    edx,DWORD PTR ds:0x8049828
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    80484f0 <__do_global_dtors_aux+0x20>
mov    eax,0x8048404
test   eax,eax
je     804851f <__do_global_dtors_aux+0x4f>
sub    esp,0xc
push   0x8049880
call   8048404 <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x804982c,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    eax,0x80483c4
mov    ebp,esp
sub    esp,0x8
test   eax,eax
je     8048564 <frame_dummy+0x24>
sub    esp,0x8
push   0x8049998
push   0x8049880
call   80483c4 <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,esp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x248
mov    DWORD PTR [ebp-0x234],0x809f544
mov    DWORD PTR [ebp-0x238],0x80baf20
sub    esp,0xc
push   0x8049840
call   8048414 <strlen@plt>
add    esp,0x4
mov    eax,eax
add    eax,0x405
push   eax
call   80483f4 <malloc@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jne    80485ec <main+0x64>
sub    esp,0xc
push   0x80487e8
call   80483d4 <perror@plt>
add    esp,0x10
sub    esp,0xc
push   0xffffffff
call   8048444 <exit@plt>
mov    esi,esi
sub    esp,0x8
push   0x80487f1
push   DWORD PTR [ebp-0xc]
call   8048464 <sprintf@plt>
add    esp,0x10
sub    esp,0x4
push   0x400
push   0x90
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x4
push   eax
call   8048454 <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x8049840
push   0x80487f6
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x404
push   eax
call   8048464 <sprintf@plt>
add    esp,0x10
call   8048580 <get_esp>
mov    eax,eax
add    eax,0x3e8
mov    DWORD PTR [ebp-0x23c],eax
sub    esp,0x8
push   0x80487f9
lea    eax,[ebp-0x118]
push   eax
call   8048464 <sprintf@plt>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x238]
mov    eax,DWORD PTR [ebp-0x234]
sub    eax,edx
mov    DWORD PTR [ebp-0x240],eax
mov    eax,DWORD PTR [ebp-0x240]
mov    DWORD PTR [ebp-0x244],eax
mov    esi,esi
cmp    DWORD PTR [ebp-0x23c],0x0
jne    8048690 <main+0x108>
jmp    8048700 <main+0x178>
nop
movzx  eax,BYTE PTR [ebp-0x23c]
mov    DWORD PTR [ebp-0x248],eax
sub    esp,0xc
push   DWORD PTR [ebp-0x248]
push   DWORD PTR [ebp-0x244]
push   DWORD PTR [ebp-0x240]
push   0x80487fc
lea    eax,[ebp-0x218]
push   eax
call   8048464 <sprintf@plt>
add    esp,0x20
sub    esp,0x8
lea    eax,[ebp-0x218]
push   eax
lea    eax,[ebp-0x118]
push   eax
call   8048434 <strcat@plt>
add    esp,0x10
lea    eax,[ebp-0x240]
inc    DWORD PTR [eax]
mov    eax,DWORD PTR [ebp-0x240]
mov    DWORD PTR [ebp-0x244],eax
lea    eax,[ebp-0x23c]
shr    DWORD PTR [eax],0x8
jmp    8048684 <main+0xfc>
mov    esi,esi
sub    esp,0xc
lea    eax,[ebp-0x118]
push   eax
call   8048414 <strlen@plt>
add    esp,0x10
mov    eax,eax
lea    edx,[eax-0x1]
lea    eax,[ebp-0x118]
mov    eax,eax
mov    BYTE PTR [edx+eax*1],0x0
mov    DWORD PTR [ebp-0x228],0x8048806
lea    eax,[ebp-0x118]
mov    DWORD PTR [ebp-0x224],eax
mov    DWORD PTR [ebp-0x220],0x0
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x230],eax
mov    DWORD PTR [ebp-0x22c],0x0
sub    esp,0x4
lea    eax,[ebp-0x230]
push   eax
lea    eax,[ebp-0x228]
push   eax
push   DWORD PTR [ebp-0x228]
call   80483e4 <execve@plt>
add    esp,0x10
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x804994c
mov    ebx,0x804994c
cmp    eax,0xffffffff
je     80487ac <__do_global_ctors_aux+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    80487a0 <__do_global_ctors_aux+0x20>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   80487ca <_fini+0xa>
pop    ebx
add    ebx,0x1192
lea    esi,[esi+0x0]
call   80484d0 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
