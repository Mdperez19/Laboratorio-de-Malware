push   ebp
mov    ebp,esp
sub    esp,0x8
call   804891c <call_gmon_start>
call   804897c <frame_dummy>
call   80493b4 <__do_global_ctors_aux>
leave  
ret    
push   DWORD PTR ds:0x804a57c
jmp    DWORD PTR ds:0x804a580
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804a584
push   0x0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a588
push   0x8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a58c
push   0x10
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a590
push   0x18
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a594
push   0x20
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a598
push   0x28
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a59c
push   0x30
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5a0
push   0x38
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5a4
push   0x40
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5a8
push   0x48
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5ac
push   0x50
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5b0
push   0x58
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5b4
push   0x60
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5b8
push   0x68
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5bc
push   0x70
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5c0
push   0x78
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5c4
push   0x80
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5c8
push   0x88
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5cc
push   0x90
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5d0
push   0x98
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5d4
push   0xa0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5d8
push   0xa8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5dc
push   0xb0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5e0
push   0xb8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5e4
push   0xc0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5e8
push   0xc8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5ec
push   0xd0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5f0
push   0xd8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5f4
push   0xe0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5f8
push   0xe8
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a5fc
push   0xf0
jmp    80486e8 <.plt>
jmp    DWORD PTR ds:0x804a600
push   0xf8
jmp    80486e8 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8049380
push   0x8049350
push   ecx
push   esi
push   0x8048b8e
call   8048818 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   8048926 <call_gmon_start+0xa>
pop    ebx
add    ebx,0x1c52
mov    eax,DWORD PTR [ebx+0x8c]
test   eax,eax
je     8048939 <call_gmon_start+0x1d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    BYTE PTR ds:0x804a60c,0x0
jne    8048978 <__do_global_dtors_aux+0x38>
mov    eax,ds:0x804a498
mov    edx,DWORD PTR [eax]
test   edx,edx
je     8048971 <__do_global_dtors_aux+0x31>
mov    esi,esi
add    eax,0x4
mov    ds:0x804a498,eax
call   edx
mov    eax,ds:0x804a498
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    804895c <__do_global_dtors_aux+0x1c>
mov    BYTE PTR ds:0x804a60c,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x804a574
test   eax,eax
je     80489a4 <frame_dummy+0x28>
mov    eax,0x0
test   eax,eax
je     80489a4 <frame_dummy+0x28>
sub    esp,0xc
push   0x804a574
call   0 <_init-0x80486d0>
add    esp,0x10
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
sub    esp,0x50
lea    edi,[ebp-0x28]
mov    esi,0x80493fc
cld    
mov    ecx,0x11
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    edi,[ebp-0x48]
mov    esi,0x804940d
cld    
mov    ecx,0x11
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
sub    esp,0xc
push   DWORD PTR [ebp+0xc]
call   80487f8 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x4c],eax
sub    esp,0x8
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x10]
call   80488e8 <strcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4c]
mov    edx,DWORD PTR [ebp+0x10]
add    edx,eax
mov    eax,DWORD PTR [ebp+0x8]
sar    eax,0x4
and    eax,0xf
mov    al,BYTE PTR [eax+ebp*1-0x28]
mov    BYTE PTR [edx],al
mov    eax,DWORD PTR [ebp-0x4c]
add    eax,DWORD PTR [ebp+0x10]
lea    edx,[eax+0x1]
mov    eax,DWORD PTR [ebp+0x8]
and    eax,0xf
mov    al,BYTE PTR [eax+ebp*1-0x48]
mov    BYTE PTR [edx],al
mov    eax,DWORD PTR [ebp-0x4c]
add    eax,DWORD PTR [ebp+0x10]
add    eax,0x2
mov    BYTE PTR [eax],0x0
lea    esp,[ebp-0x8]
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x218
sub    esp,0x8
push   0x2
push   0x804941e
call   8048858 <open@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x210],eax
sub    esp,0xc
push   DWORD PTR [ebp-0x210]
call   8048708 <close@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x20c],0x0
cmp    DWORD PTR [ebp-0x20c],0xff
jle    8048a7e <open_tty+0x4d>
jmp    8048b2b <open_tty+0xfa>
sub    esp,0x4
lea    eax,[ebp-0x208]
push   eax
push   0x8049428
push   DWORD PTR [ebp-0x20c]
call   80489a8 <get_tty>
add    esp,0x10
sub    esp,0x8
push   0x2
lea    eax,[ebp-0x208]
push   eax
call   8048858 <open@plt>
add    esp,0x10
mov    edx,eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax],0x0
jns    8048ac0 <open_tty+0x8f>
jmp    8048b1e <open_tty+0xed>
sub    esp,0x4
lea    eax,[ebp-0x208]
push   eax
push   0x8049431
push   DWORD PTR [ebp-0x20c]
call   80489a8 <get_tty>
add    esp,0x10
sub    esp,0x8
push   0x2
lea    eax,[ebp-0x208]
push   eax
call   8048858 <open@plt>
add    esp,0x10
mov    edx,eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [eax],0x0
jns    8048b12 <open_tty+0xe1>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   8048708 <close@plt>
add    esp,0x10
jmp    8048b1e <open_tty+0xed>
mov    DWORD PTR [ebp-0x214],0x1
jmp    8048b35 <open_tty+0x104>
lea    eax,[ebp-0x20c]
inc    DWORD PTR [eax]
jmp    8048a6d <open_tty+0x3c>
mov    DWORD PTR [ebp-0x214],0x0
mov    eax,DWORD PTR [ebp-0x214]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   0x8048b3d
push   0x11
call   8048738 <signal@plt>
add    esp,0x10
sub    esp,0x4
push   0x1
push   0x0
push   0xffffffff
call   80487d8 <waitpid@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   0x1
push   0x0
call   80488a8 <kill@plt>
add    esp,0x10
sub    esp,0x8
push   0xf
push   0x0
call   80488a8 <kill@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
sub    esp,0x18850
and    esp,0xfffffff0
mov    eax,0x0
sub    esp,eax
sub    esp,0x4
push   0x6
push   0x1
push   0x2
call   80488c8 <socket@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x3c],eax
cmp    DWORD PTR [ebp-0x3c],0x0
jns    8048bdc <main+0x4e>
sub    esp,0xc
push   0x804943a
call   8048718 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1884c],0x1
jmp    8049343 <main+0x7b5>
sub    esp,0x8
push   0x10
lea    eax,[ebp-0x28]
push   eax
call   8048868 <bzero@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x28],0x2
sub    esp,0xc
push   0x0
call   8048768 <htonl@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x24],eax
sub    esp,0xc
push   0x1f22
call   8048898 <htons@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x26],ax
sub    esp,0x4
push   0x10
lea    eax,[ebp-0x28]
push   eax
push   DWORD PTR [ebp-0x3c]
call   8048838 <bind@plt>
add    esp,0x10
test   eax,eax
jns    8048c4e <main+0xc0>
sub    esp,0xc
push   0x8049441
call   8048718 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1884c],0x1
jmp    8049343 <main+0x7b5>
sub    esp,0x8
push   0x5
push   DWORD PTR [ebp-0x3c]
call   80487a8 <listen@plt>
add    esp,0x10
test   eax,eax
jns    8048c81 <main+0xf3>
sub    esp,0xc
push   0x8049446
call   8048718 <perror@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1884c],0x1
jmp    8049343 <main+0x7b5>
sub    esp,0xc
push   DWORD PTR ds:0x804a608
call   8048748 <fflush@plt>
add    esp,0x10
call   8048728 <fork@plt>
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
je     8048caf <main+0x121>
mov    DWORD PTR [ebp-0x1884c],0x0
jmp    8049343 <main+0x7b5>
call   80487b8 <setsid@plt>
sub    esp,0xc
push   0x804944d
call   80487e8 <chdir@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   0x804944f
call   8048858 <open@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0xc],eax
sub    esp,0x8
push   0x0
push   DWORD PTR [ebp-0xc]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   DWORD PTR [ebp-0xc]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   DWORD PTR [ebp-0xc]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0xc]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   0x1
call   8048738 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048b3d
push   0x11
call   8048738 <signal@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x44],0x10
sub    esp,0x4
lea    eax,[ebp-0x44]
push   eax
lea    eax,[ebp-0x38]
push   eax
push   DWORD PTR [ebp-0x3c]
call   8048798 <accept@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x40],eax
cmp    DWORD PTR [ebp-0x40],0x0
jns    8048d60 <main+0x1d2>
jmp    8048d38 <main+0x1aa>
call   8048728 <fork@plt>
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x0
jne    8049330 <main+0x7a2>
mov    DWORD PTR [ebp-0x80e8],0x8049459
mov    DWORD PTR [ebp-0x80e4],0x804945c
mov    DWORD PTR [ebp-0x80e0],0x0
lea    eax,[ebp-0x187f8]
mov    DWORD PTR [ebp-0x84e8],eax
sub    esp,0x4
push   0x804945f
push   0x8049464
lea    eax,[ebp-0x187f8]
push   eax
call   80488b8 <sprintf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x186ec],0x0
sub    esp,0x4
push   0x100
lea    edx,[ebp-0x186e8]
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    eax,[eax+edx*1]
push   eax
push   DWORD PTR [ebp-0x40]
call   80488d8 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x186f0],eax
mov    ecx,DWORD PTR [ebp-0x186ec]
lea    edx,[ebp-0x186e8]
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    eax,[eax+edx*1]
mov    DWORD PTR [ebp+ecx*4-0x84e4],eax
lea    eax,[ebp-0x186ec]
inc    DWORD PTR [eax]
cmp    DWORD PTR [ebp-0x186ec],0xff
jg     8048e49 <main+0x2bb>
cmp    DWORD PTR [ebp-0x186f0],0xff
jle    8048e49 <main+0x2bb>
mov    eax,DWORD PTR [ebp-0x186ec]
shl    eax,0x8
lea    edx,[ebp-0x8]
add    eax,edx
sub    eax,0x187e0
cmp    BYTE PTR [eax],0xa
jne    8048dc2 <main+0x234>
mov    eax,DWORD PTR [ebp-0x186ec]
mov    DWORD PTR [ebp+eax*4-0x84e4],0x0
sub    esp,0x8
push   0x0
push   0x0
call   8048808 <setpgid@plt>
add    esp,0x10
sub    esp,0x8
lea    eax,[ebp-0x50]
push   eax
lea    eax,[ebp-0x4c]
push   eax
call   8048a31 <open_tty>
add    esp,0x10
test   eax,eax
jne    8048ed3 <main+0x345>
lea    edi,[ebp-0x18818]
mov    esi,0x804946e
cld    
mov    ecx,0x16
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
sub    esp,0x4
lea    eax,[ebp-0x18818]
sub    esp,0x8
push   eax
call   80487f8 <strlen@plt>
add    esp,0xc
push   eax
lea    eax,[ebp-0x18818]
push   eax
push   DWORD PTR [ebp-0x40]
call   80486f8 <write@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   8048878 <exit@plt>
call   8048728 <fork@plt>
mov    DWORD PTR [ebp-0x48],eax
cmp    DWORD PTR [ebp-0x48],0x0
jne    8048fa1 <main+0x413>
sub    esp,0xc
push   DWORD PTR [ebp-0x50]
call   8048708 <close@plt>
add    esp,0x10
call   80487b8 <setsid@plt>
sub    esp,0x8
push   0x540e
push   DWORD PTR [ebp-0x4c]
call   8048888 <ioctl@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x3c]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x1
call   8048738 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x11
call   8048738 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   DWORD PTR [ebp-0x4c]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   DWORD PTR [ebp-0x4c]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0x8
push   0x2
push   DWORD PTR [ebp-0x4c]
call   8048828 <dup2@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4c]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0x4
lea    eax,[ebp-0x84e8]
push   eax
lea    eax,[ebp-0x80e8]
push   eax
push   0x8049484
call   8048778 <execve@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4c]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048b68
push   0x1
call   8048738 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8048b68
push   0xf
call   8048738 <signal@plt>
add    esp,0x10
mov    eax,0x0
mov    ecx,0x20
lea    edi,[ebp-0xd8]
cld    
rep stos DWORD PTR es:[edi],eax
mov    eax,ecx
mov    DWORD PTR [ebp-0x1881c],eax
mov    eax,edi
mov    DWORD PTR [ebp-0x18820],eax
mov    eax,DWORD PTR [ebp-0x50]
mov    edx,eax
shr    edx,0x5
mov    eax,DWORD PTR [ebp-0x50]
and    eax,0x1f
bts    DWORD PTR [ebp+edx*4-0xd8],eax
mov    eax,DWORD PTR [ebp-0x40]
mov    edx,eax
shr    edx,0x5
mov    eax,DWORD PTR [ebp-0x40]
and    eax,0x1f
bts    DWORD PTR [ebp+edx*4-0xd8],eax
sub    esp,0xc
push   0x0
push   0x0
push   0x0
lea    eax,[ebp-0xd8]
push   eax
mov    eax,DWORD PTR [ebp-0x50]
cmp    eax,DWORD PTR [ebp-0x40]
jle    8049046 <main+0x4b8>
mov    eax,DWORD PTR [ebp-0x50]
inc    eax
mov    DWORD PTR [ebp-0x18850],eax
jmp    8049050 <main+0x4c2>
mov    edx,DWORD PTR [ebp-0x40]
inc    edx
mov    DWORD PTR [ebp-0x18850],edx
push   DWORD PTR [ebp-0x18850]
call   8048758 <select@plt>
add    esp,0x20
test   eax,eax
jns    8049067 <main+0x4d9>
jmp    80492e5 <main+0x757>
mov    eax,DWORD PTR [ebp-0x50]
mov    edx,eax
and    edx,0x1f
mov    eax,DWORD PTR [ebp-0x50]
shr    eax,0x5
bt     DWORD PTR [ebp+eax*4-0xd8],edx
setb   al
test   al,al
je     80490d6 <main+0x548>
sub    esp,0x4
push   0x8000
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x50]
call   80488d8 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x18820],eax
cmp    DWORD PTR [ebp-0x18820],0x0
jg     80490b2 <main+0x524>
jmp    80492e5 <main+0x757>
sub    esp,0x4
push   DWORD PTR [ebp-0x18820]
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x40]
call   80486f8 <write@plt>
add    esp,0x10
test   eax,eax
jg     80490d6 <main+0x548>
jmp    80492e5 <main+0x757>
mov    eax,DWORD PTR [ebp-0x40]
mov    edx,eax
and    edx,0x1f
mov    eax,DWORD PTR [ebp-0x40]
shr    eax,0x5
bt     DWORD PTR [ebp+eax*4-0xd8],edx
setb   al
test   al,al
je     8048fd3 <main+0x445>
lea    eax,[ebp-0x80d8]
mov    DWORD PTR [ebp-0x18824],eax
sub    esp,0x4
push   0x8000
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x40]
call   80488d8 <read@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x18820],eax
cmp    DWORD PTR [ebp-0x18820],0x0
jg     8049131 <main+0x5a3>
jmp    80492e5 <main+0x757>
lea    eax,[ebp-0x80d8]
sub    esp,0x4
push   DWORD PTR [ebp-0x18820]
push   0x1d
push   eax
call   8048788 <memchr@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x1881c],eax
cmp    DWORD PTR [ebp-0x1881c],0x0
je     80492c3 <main+0x735>
lea    edx,[ebp-0x80d8]
mov    eax,DWORD PTR [ebp-0x1881c]
sub    eax,edx
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x18820]
sub    eax,edx
mov    DWORD PTR [ebp-0x1883c],eax
cmp    DWORD PTR [ebp-0x1883c],0x5
jle    804918f <main+0x601>
mov    DWORD PTR [ebp-0x1883c],0x5
sub    esp,0x4
push   DWORD PTR [ebp-0x1883c]
push   DWORD PTR [ebp-0x1881c]
lea    eax,[ebp-0x18838]
push   eax
call   8048848 <memcpy@plt>
add    esp,0x10
cmp    DWORD PTR [ebp-0x1883c],0x4
jg     80491dd <main+0x64f>
sub    esp,0x4
mov    eax,0x5
sub    eax,DWORD PTR [ebp-0x1883c]
push   eax
lea    eax,[ebp-0x18838]
add    eax,DWORD PTR [ebp-0x1883c]
push   eax
push   DWORD PTR [ebp-0x40]
call   80488d8 <read@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x18842],0x0
mov    WORD PTR [ebp-0x18844],0x0
movzx  eax,BYTE PTR [ebp-0x18837]
mov    edx,eax
shl    edx,0x8
movzx  ax,BYTE PTR [ebp-0x18836]
lea    eax,[eax+edx*1]
mov    WORD PTR [ebp-0x18846],ax
movzx  eax,BYTE PTR [ebp-0x18835]
mov    edx,eax
shl    edx,0x8
movzx  ax,BYTE PTR [ebp-0x18834]
lea    eax,[eax+edx*1]
mov    WORD PTR [ebp-0x18848],ax
sub    esp,0x4
lea    eax,[ebp-0x18848]
push   eax
push   0x5414
push   DWORD PTR [ebp-0x50]
call   8048888 <ioctl@plt>
add    esp,0x10
sub    esp,0x8
push   0x1c
push   0x0
call   80488a8 <kill@plt>
add    esp,0x10
sub    esp,0x4
lea    edx,[ebp-0x80d8]
mov    eax,DWORD PTR [ebp-0x1881c]
sub    eax,edx
push   eax
lea    eax,[ebp-0x80d8]
push   eax
push   DWORD PTR [ebp-0x50]
call   80486f8 <write@plt>
add    esp,0x10
lea    eax,[ebp-0x80d8]
add    eax,DWORD PTR [ebp-0x18820]
sub    eax,DWORD PTR [ebp-0x1881c]
sub    eax,0x5
mov    DWORD PTR [ebp-0x1883c],eax
cmp    DWORD PTR [ebp-0x1883c],0x0
jle    8048fd3 <main+0x445>
sub    esp,0x4
push   DWORD PTR [ebp-0x1883c]
mov    eax,DWORD PTR [ebp-0x1881c]
add    eax,0x5
push   eax
push   DWORD PTR [ebp-0x50]
call   80486f8 <write@plt>
add    esp,0x10
jmp    8048fd3 <main+0x445>
sub    esp,0x4
push   DWORD PTR [ebp-0x18820]
push   DWORD PTR [ebp-0x18824]
push   DWORD PTR [ebp-0x50]
call   80486f8 <write@plt>
add    esp,0x10
test   eax,eax
jg     8048fd3 <main+0x445>
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x3c]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x50]
call   8048708 <close@plt>
add    esp,0x10
sub    esp,0x4
push   0x0
push   0x0
push   DWORD PTR [ebp-0x48]
call   80487d8 <waitpid@plt>
add    esp,0x10
call   80487c8 <vhangup@plt>
sub    esp,0xc
push   0x0
call   8048878 <exit@plt>
sub    esp,0xc
push   DWORD PTR [ebp-0x40]
call   8048708 <close@plt>
add    esp,0x10
jmp    8048d38 <main+0x1aa>
mov    eax,DWORD PTR [ebp-0x1884c]
lea    esp,[ebp-0x8]
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   esi
push   ebx
call   80486d0 <_init>
mov    eax,0x804a490
sub    eax,0x804a490
sar    eax,0x2
xor    ebx,ebx
cmp    ebx,eax
jae    804937c <__libc_csu_init+0x2c>
mov    esi,eax
nop
call   DWORD PTR [ebx*4+0x804a490]
inc    ebx
cmp    ebx,esi
jb     8049370 <__libc_csu_init+0x20>
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,0x804a490
sub    eax,0x804a490
sar    eax,0x2
test   eax,eax
lea    ebx,[eax-0x1]
jne    80493a4 <__libc_csu_fini+0x24>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
jmp    80493d8 <_fini>
mov    esi,esi
call   DWORD PTR [ebx*4+0x804a490]
mov    edx,ebx
dec    ebx
test   edx,edx
jne    80493a4 <__libc_csu_fini+0x24>
jmp    8049399 <__libc_csu_fini+0x19>
push   ebp
mov    ebp,esp
push   ebx
push   edx
mov    eax,ds:0x804a564
cmp    eax,0xffffffff
mov    ebx,0x804a564
je     80493d4 <__do_global_ctors_aux+0x20>
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    80493c8 <__do_global_ctors_aux+0x14>
pop    eax
pop    ebx
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   80493e2 <_fini+0xa>
pop    ebx
add    ebx,0x1196
call   8048940 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
