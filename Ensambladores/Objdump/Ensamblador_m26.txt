push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048500 <_init+0xc>
pop    ebx
add    ebx,0x1840
call   8048684 <call_gmon_start>
call   8048708 <frame_dummy>
call   8048bb0 <__do_global_ctors_aux>
pop    ebx
leave  
ret    
push   DWORD PTR ds:0x8049d44
jmp    DWORD PTR ds:0x8049d48
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049d4c
push   0x0
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d50
push   0x8
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d54
push   0x10
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d58
push   0x18
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d5c
push   0x20
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d60
push   0x28
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d64
push   0x30
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d68
push   0x38
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d6c
push   0x40
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d70
push   0x48
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d74
push   0x50
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d78
push   0x58
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d7c
push   0x60
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d80
push   0x68
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d84
push   0x70
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d88
push   0x78
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d8c
push   0x80
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d90
push   0x88
jmp    804851c <.plt>
jmp    DWORD PTR ds:0x8049d94
push   0x90
jmp    804851c <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8048bdc
push   0x80484f4
push   ecx
push   esi
push   0x8048740
call   80485cc <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048690 <call_gmon_start+0xc>
pop    ebx
add    ebx,0x16b0
mov    eax,DWORD PTR [ebx+0x58]
test   eax,eax
je     80486a3 <call_gmon_start+0x1f>
call   eax
pop    ebx
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x8049d28,0x0
jne    80486fd <__do_global_dtors_aux+0x4d>
jmp    80486d3 <__do_global_dtors_aux+0x23>
mov    eax,ds:0x8049d24
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049d24,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049d24
cmp    DWORD PTR [eax],0x0
jne    80486c1 <__do_global_dtors_aux+0x11>
mov    eax,0x804858c
test   eax,eax
je     80486f3 <__do_global_dtors_aux+0x43>
add    esp,0xfffffff4
push   0x8049d2c
call   804858c <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049d28,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x804853c
test   eax,eax
je     8048729 <frame_dummy+0x21>
add    esp,0xfffffff8
push   0x8049e3c
push   0x8049d2c
call   804853c <__register_frame_info@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x848
add    esp,0xfffffffc
push   0x0
push   0x1
push   0x2
call   804863c <socket@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
mov    WORD PTR [ebp-0x82c],0x2
add    esp,0xfffffff4
push   0x4652
call   804861c <htons@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    WORD PTR [ebp-0x82a],dx
mov    DWORD PTR [ebp-0x828],0x0
add    esp,0xfffffffc
push   0x10
lea    eax,[ebp-0x82c]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   80485ec <bind@plt>
add    esp,0x10
add    esp,0xfffffff8
push   0x2
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804857c <listen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x830],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x830]
push   eax
lea    eax,[ebp-0x82c]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   80485fc <getsockname@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jne    8048829 <main+0xe9>
add    esp,0xfffffffc
movzx  eax,WORD PTR [ebp-0x82a]
add    esp,0xfffffff4
push   eax
call   804859c <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
movzx  eax,WORD PTR [ebp-0x82a]
add    esp,0xfffffff4
push   eax
call   804859c <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
push   0x8048c20
call   80485dc <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x830],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x830]
push   eax
lea    eax,[ebp-0x81c]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804856c <accept@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
add    esp,0xfffffff8
movzx  eax,WORD PTR [ebp-0x81a]
add    esp,0xfffffff4
push   eax
call   804859c <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
and    eax,0xff
push   eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x8
mov    edx,eax
movzx  edx,dl
push   edx
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x10
mov    edx,eax
movzx  edx,dl
push   edx
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x18
mov    edx,eax
movzx  edx,dl
push   edx
push   0x8048c40
call   80485dc <printf@plt>
add    esp,0x20
mov    DWORD PTR [ebp-0x830],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x830]
push   eax
lea    eax,[ebp-0x81c]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804856c <accept@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffffff
je     8048940 <main+0x200>
cmp    DWORD PTR [ebp-0x4],0xffffffff
je     8048940 <main+0x200>
jmp    8048945 <main+0x205>
nop
lea    esi,[esi+eiz*1+0x0]
jmp    8048b69 <main+0x429>
add    esp,0xfffffff8
movzx  eax,WORD PTR [ebp-0x81a]
add    esp,0xfffffff4
push   eax
call   804859c <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
and    eax,0xff
push   eax
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x8
mov    edx,eax
movzx  edx,dl
push   edx
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x10
mov    edx,eax
movzx  edx,dl
push   edx
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x818]
push   eax
call   804852c <ntohl@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
mov    eax,edx
shr    eax,0x18
mov    edx,eax
movzx  edx,dl
push   edx
push   0x8048c80
call   80485dc <printf@plt>
add    esp,0x20
add    esp,0xfffffff4
push   0x8048cc0
call   80485dc <printf@plt>
add    esp,0x10
mov    BYTE PTR [ebp-0xd],0x0
mov    BYTE PTR [ebp-0x80c],0x0
lea    esi,[esi+eiz*1+0x0]
jmp    8048a17 <main+0x2d7>
jmp    8048b68 <main+0x428>
push   0x40
add    esp,0xfffffff4
lea    eax,[ebp-0x80c]
push   eax
call   80485ac <strlen@plt>
add    esp,0x10
mov    eax,eax
push   eax
lea    eax,[ebp-0x80c]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804860c <send@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x834],eax
cmp    DWORD PTR [ebp-0x834],0xffffffff
jne    8048a62 <main+0x322>
add    esp,0xfffffff4
push   0x8048d0f
call   804855c <perror@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x1
call   80485bc <sleep@plt>
add    esp,0x10
push   0x40
push   0x3ff
lea    eax,[ebp-0x40c]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804862c <recv@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x834],eax
cmp    DWORD PTR [ebp-0x834],0x0
jne    8048aa0 <main+0x360>
jmp    8048b69 <main+0x429>
nop
cmp    DWORD PTR [ebp-0x834],0xffffffff
je     8048b16 <main+0x3d6>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[ebp-0x40c]
mov    edx,DWORD PTR [ebp-0x834]
mov    BYTE PTR [edx+eax*1],0x0
add    esp,0xfffffff8
lea    eax,[ebp-0x40c]
push   eax
push   0x8048d10
call   80485dc <printf@plt>
add    esp,0x10
push   0x40
push   0x3ff
lea    eax,[ebp-0x40c]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804862c <recv@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x834],eax
cmp    DWORD PTR [ebp-0x834],0x0
jg     8048b04 <main+0x3c4>
jmp    8048b06 <main+0x3c6>
jmp    8048ab0 <main+0x370>
add    esp,0xfffffff4
push   0x8048d13
call   80485dc <printf@plt>
add    esp,0x10
add    esp,0xfffffffc
push   0x3fe
lea    eax,[ebp-0x80c]
push   eax
push   0x0
call   804864c <read@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x834],eax
cmp    DWORD PTR [ebp-0x834],0x0
jge    8048b42 <main+0x402>
jmp    8048b69 <main+0x429>
mov    eax,DWORD PTR [ebp-0x834]
inc    eax
lea    edx,[ebp-0x80c]
mov    BYTE PTR [eax+edx*1],0xa
lea    eax,[ebp-0x80c]
mov    edx,DWORD PTR [ebp-0x834]
mov    BYTE PTR [edx+eax*1],0x0
jmp    8048a10 <main+0x2d0>
nop
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0xc]
push   eax
call   804854c <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804854c <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804854c <close@plt>
add    esp,0x10
xor    eax,eax
jmp    8048ba0 <main+0x460>
lea    esi,[esi+0x0]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    ebx,0x8049d30
cmp    DWORD PTR ds:0x8049d30,0xffffffff
je     8048bd1 <__do_global_ctors_aux+0x21>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048bc5 <__do_global_ctors_aux+0x15>
pop    ebx
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048be8 <_fini+0xc>
pop    ebx
add    ebx,0x1158
nop
call   80486b0 <__do_global_dtors_aux>
pop    ebx
leave  
ret    
