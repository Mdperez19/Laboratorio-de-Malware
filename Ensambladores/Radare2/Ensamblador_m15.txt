xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff8
push eax
push esp
push edx
push loc.gcc2_compiled._3
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
cmp dword [obj.completed.3], 0
jne 0x80484e4
jmp 0x80484bd
mov esi, esi
lea edx, [eax + 4]
mov dword [obj.p.2], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.2]
cmp dword [eax], 0
jne 0x80484b0
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x80484da
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.3], 1
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x804850b
push obj.object.8
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x80485ee
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x80485e2
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push ebx
call 0x804838d
pop ebx
add ebx, 0x12ef
cmp dword [ebx + 0x34], 0
je 0x80483a2
call loc.imp.__gmon_start__
mov esi, esi
call sym.frame_dummy
call loc.gcc2_compiled._2
mov ebx, dword [var_4h]
leave
ret
jmp dword [0x80496ac]
push ebp
mov ebp, esp
sub esp, 8
push str.DISPLAY
call sym.imp.getenv
add esp, 4
mov dword [var_8h], eax
cmp dword [var_8h], 0
jne 0x8048560
mov eax, dword [argv]
push eax
mov eax, dword [envp]
push eax
push str._usr_lib_ldliblogin.so
call sym.imp.execve
add esp, 0xc
push 1
call sym.imp.exit
add esp, 4
nop
lea esi, [esi]
push 0x804863f
mov eax, dword [var_8h]
push eax
call sym.imp.crypt
add esp, 8
mov dword [s1], eax
push str.65K.ghcxLunpw
mov eax, dword [s1]
push eax
call sym.imp.strcmp
add esp, 8
mov eax, eax
test eax, eax
jne 0x80485a2
push str._bin_tcsh
call sym.imp.system
add esp, 4
push 1
call sym.imp.exit
add esp, 4
mov eax, dword [argv]
push eax
mov eax, dword [envp]
push eax
push str._usr_lib_ldliblogin.so
call sym.imp.execve
add esp, 0xc
push 1
call sym.imp.exit
jmp dword [reloc.getenv]
jmp dword [reloc.execve]
jmp dword [reloc.exit]
jmp dword [reloc.crypt]
jmp dword [reloc.strcmp]
jmp dword [reloc.system]
push ebp
mov ebp, esp
push ebx
call 0x8048605
pop ebx
add ebx, 0x1077
call loc.gcc2_compiled._1
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.__deregister_frame_info]
