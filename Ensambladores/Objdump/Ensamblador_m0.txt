call   8049110 <frame_dummy>
call   8067140 <__do_global_ctors_aux>
ret    
push   DWORD PTR ds:0x80719a4
jmp    DWORD PTR ds:0x80719a8
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x80719ac
push   0x0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719b0
push   0x8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719b4
push   0x10
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719b8
push   0x18
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719bc
push   0x20
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719c0
push   0x28
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719c4
push   0x30
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719c8
push   0x38
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719cc
push   0x40
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719d0
push   0x48
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719d4
push   0x50
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719d8
push   0x58
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719dc
push   0x60
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719e0
push   0x68
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719e4
push   0x70
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719e8
push   0x78
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719ec
push   0x80
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719f0
push   0x88
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719f4
push   0x90
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719f8
push   0x98
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x80719fc
push   0xa0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a00
push   0xa8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a04
push   0xb0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a08
push   0xb8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a0c
push   0xc0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a10
push   0xc8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a14
push   0xd0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a18
push   0xd8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a1c
push   0xe0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a20
push   0xe8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a24
push   0xf0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a28
push   0xf8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a2c
push   0x100
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a30
push   0x108
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a34
push   0x110
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a38
push   0x118
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a3c
push   0x120
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a40
push   0x128
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a44
push   0x130
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a48
push   0x138
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a4c
push   0x140
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a50
push   0x148
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a54
push   0x150
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a58
push   0x158
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a5c
push   0x160
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a60
push   0x168
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a64
push   0x170
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a68
push   0x178
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a6c
push   0x180
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a70
push   0x188
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a74
push   0x190
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a78
push   0x198
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a7c
push   0x1a0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a80
push   0x1a8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a84
push   0x1b0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a88
push   0x1b8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a8c
push   0x1c0
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a90
push   0x1c8
jmp    8048c58 <.plt>
jmp    DWORD PTR ds:0x8071a94
push   0x1d0
jmp    8048c58 <.plt>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ecx,edx
lea    edi,[ebp+0x8]
mov    ebx,DWORD PTR [edi-0x4]
lea    esi,[edi+ebx*4+0x4]
mov    DWORD PTR ds:0x8074440,esi
test   ebx,ebx
jle    8049073 <_start+0x53>
cmp    DWORD PTR [ebp+0x8],0x0
je     8049073 <_start+0x53>
mov    eax,DWORD PTR [ebp+0x8]
mov    ds:0x8070000,eax
mov    edx,eax
cmp    BYTE PTR [eax],0x0
je     8049073 <_start+0x53>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    BYTE PTR [edx],0x2f
jne    804906d <_start+0x4d>
lea    eax,[edx+0x1]
mov    ds:0x8070000,eax
inc    edx
cmp    BYTE PTR [edx],0x0
jne    8049060 <_start+0x40>
mov    eax,0x80718dc
test   eax,eax
je     8049084 <_start+0x64>
mov    DWORD PTR [esp],ecx
call   8048f28 <atexit@plt>
mov    DWORD PTR [esp],0x8067174
call   8048f28 <atexit@plt>
call   8048c4c <_init>
mov    DWORD PTR [esp+0x8],esi
mov    DWORD PTR [esp+0x4],edi
mov    DWORD PTR [esp],ebx
call   805e980 <main>
mov    DWORD PTR [esp],eax
call   8048f48 <exit@plt>
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    BYTE PTR ds:0x80726f8,0x0
jne    8049100 <__do_global_dtors_aux+0x50>
mov    eax,ds:0x8070008
mov    eax,DWORD PTR [eax]
test   eax,eax
je     80490e4 <__do_global_dtors_aux+0x34>
lea    esi,[esi+0x0]
add    DWORD PTR ds:0x8070008,0x4
call   eax
mov    eax,ds:0x8070008
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    80490d0 <__do_global_dtors_aux+0x20>
mov    eax,0x0
test   eax,eax
je     80490f9 <__do_global_dtors_aux+0x49>
mov    DWORD PTR [esp],0x80718d8
call   0 <_init-0x8048c4c>
mov    BYTE PTR ds:0x80726f8,0x1
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x0
test   eax,eax
je     8049133 <frame_dummy+0x23>
mov    DWORD PTR [esp+0x4],0x80726fc
mov    DWORD PTR [esp],0x80718d8
call   0 <_init-0x8048c4c>
cmp    DWORD PTR ds:0x807199c,0x0
je     8049151 <frame_dummy+0x41>
mov    eax,0x0
test   eax,eax
je     8049151 <frame_dummy+0x41>
mov    DWORD PTR [esp],0x807199c
call   0 <_init-0x8048c4c>
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
push   0x80671ce
call   8048c88 <printf@plt>
mov    edx,DWORD PTR ds:0x8076fa8
add    esp,0x10
test   edx,edx
je     8049191 <cfg_die+0x31>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     804919f <cfg_die+0x3f>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f48 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
test   eax,eax
je     80491d0 <cfg_userslave+0x20>
or     BYTE PTR [eax+0x3ac],0x1
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x80712b2
push   0x8067380
call   8048c88 <printf@plt>
jmp    80491c6 <cfg_userslave+0x16>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
test   eax,eax
je     8049210 <cfg_usermaster+0x20>
or     BYTE PTR [eax+0x3ac],0x2
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x80712b2
push   0x80673c0
call   8048c88 <printf@plt>
jmp    8049206 <cfg_usermaster+0x16>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     80492b9 <cfg_linkconf+0x89>
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     80492b9 <cfg_linkconf+0x89>
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
mov    ebx,eax
pop    eax
pop    edx
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80492d0 <cfg_linkconf+0xa0>
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
add    esp,0x10
test   ebx,ebx
je     80492a9 <cfg_linkconf+0x79>
cmp    BYTE PTR [ebx],0x0
jne    80492b0 <cfg_linkconf+0x80>
mov    ebx,0x80671de
xor    eax,eax
push   eax
push   ebx
push   edi
push   esi
call   8059d50 <addlinkconf>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    80492d0 <cfg_linkconf+0xa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor    eax,eax
jmp    80492a0 <cfg_linkconf+0x70>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
or     BYTE PTR ds:0x8076f04,0x20
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
and    BYTE PTR ds:0x8076f04,0xfb
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
or     BYTE PTR ds:0x8076f04,0x8
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
and    BYTE PTR ds:0x8076f04,0xfd
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
and    BYTE PTR ds:0x8076f04,0xfe
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     804935f <cfg_usersfile+0x2f>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x724
push   eax
call   8048c68 <strcpy@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   ebx
mov    eax,ds:0x8075e74
test   eax,eax
je     804938c <cfg_nickname+0x1c>
mov    ecx,DWORD PTR [eax+0xb34]
test   ecx,ecx
je     8049440 <cfg_nickname+0xd0>
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
mov    DWORD PTR ds:0x8074448,0x0
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80493b5 <cfg_nickname+0x45>
cmp    BYTE PTR [eax],0x0
jne    80493c0 <cfg_nickname+0x50>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
je     804942b <cfg_nickname+0xbb>
sub    esp,0xc
push   ebx
call   8050070 <add_bot>
add    esp,0x10
test   eax,eax
je     80493e7 <cfg_nickname+0x77>
mov    ds:0x8075e74,eax
jmp    80493b5 <cfg_nickname+0x45>
sub    esp,0x8
push   ebx
push   0x80671e3
call   8048c88 <printf@plt>
mov    ebx,DWORD PTR ds:0x8076fa8
add    esp,0x10
test   ebx,ebx
je     8049412 <cfg_nickname+0xa2>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    ecx,DWORD PTR ds:0x8075e7c
test   ecx,ecx
je     8049421 <cfg_nickname+0xb1>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
sub    esp,0x8
push   ebx
push   0x8067201
jmp    80493f0 <cfg_nickname+0x80>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   edx
add    eax,0x22d
push   eax
push   0x80712b2
push   0x8067400
call   8048c88 <printf@plt>
add    esp,0x10
jmp    804938c <cfg_nickname+0x1c>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8075e74
test   ecx,ecx
jne    8049490 <cfg_login+0x30>
sub    esp,0x8
push   0x80712b2
push   0x8067440
call   8048c88 <printf@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80494d0 <cfg_login+0x70>
push   edx
push   0xb
push   eax
mov    eax,ds:0x8075e74
add    eax,0x23a
push   eax
call   8048e38 <strncpy@plt>
mov    eax,ds:0x8075e74
mov    BYTE PTR [eax+0x245],0x0
add    esp,0x10
jmp    8049482 <cfg_login+0x22>
lea    esi,[esi+0x0]
cmp    BYTE PTR ds:0x0,0x0
jne    80494a8 <cfg_login+0x48>
jmp    8049482 <cfg_login+0x22>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
test   eax,eax
mov    edx,DWORD PTR [ebp+0x8]
je     8049520 <cfg_ircname+0x40>
test   edx,edx
je     80494fb <cfg_ircname+0x1b>
cmp    BYTE PTR [edx],0x0
jne    8049500 <cfg_ircname+0x20>
mov    esp,ebp
pop    ebp
ret    
nop
push   ecx
push   0x4f
push   edx
add    eax,0x246
push   eax
call   8048e38 <strncpy@plt>
mov    eax,ds:0x8075e74
mov    BYTE PTR [eax+0x295],0x0
add    esp,0x10
jmp    80494fb <cfg_ircname+0x1b>
sub    esp,0x8
push   0x80712b2
push   0x8067480
call   8048c88 <printf@plt>
jmp    80494fb <cfg_ircname+0x1b>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804958b <cfg_channel+0x4b>
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
cmp    BYTE PTR [ebx],0x23
mov    edx,eax
je     80495a0 <cfg_channel+0x60>
sub    esp,0x8
push   0x80712b2
push   0x806721f
call   8048c88 <printf@plt>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
test   eax,eax
je     80495b2 <cfg_channel+0x72>
cmp    BYTE PTR [eax],0x0
sete   al
and    eax,0xff
dec    eax
and    edx,eax
push   ecx
push   0x0
push   edx
push   ebx
call   804b200 <join_channel>
pop    eax
pop    edx
push   0x3
push   ebx
call   804b050 <find_channel>
mov    ds:0x8074448,eax
jmp    804958b <cfg_channel+0x4b>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80495f5 <cfg_server+0x25>
cmp    BYTE PTR [eax],0x0
jne    8049600 <cfg_server+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
mov    edi,eax
pop    eax
pop    edx
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   edi,edi
mov    esi,eax
je     8049631 <cfg_server+0x61>
cmp    BYTE PTR [edi],0x23
je     8049668 <cfg_server+0x98>
test   esi,esi
je     8049643 <cfg_server+0x73>
cmp    BYTE PTR [esi],0x23
sete   al
and    eax,0xff
dec    eax
and    esi,eax
sub    esp,0xc
push   edi
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
mov    edx,0x1a0b
je     804965a <cfg_server+0x8a>
mov    edx,DWORD PTR [eax]
push   edi
push   esi
push   edx
push   ebx
call   80509f0 <add_server>
add    esp,0x10
jmp    80495f5 <cfg_server+0x25>
xor    esi,esi
xor    edi,edi
jmp    8049631 <cfg_server+0x61>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075d24
test   eax,eax
jne    80496d0 <cfg_sigmaster+0x60>
mov    ecx,DWORD PTR ds:0x8075e74
test   ecx,ecx
setne  al
and    eax,0xff
dec    eax
and    eax,0x80674c0
test   eax,eax
je     80496b0 <cfg_sigmaster+0x40>
sub    esp,0x8
push   0x80712b2
push   eax
call   8048c88 <printf@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x8075e74
or     BYTE PTR [eax+0x3ac],0x4
inc    DWORD PTR ds:0x8075d24
jmp    80496a7 <cfg_sigmaster+0x37>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,0x8067500
jmp    8049695 <cfg_sigmaster+0x25>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8074448
test   eax,eax
jne    8049700 <cfg_enftopic+0x20>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80496ef <cfg_enftopic+0xf>
cmp    BYTE PTR [eax],0x0
je     80496ef <cfg_enftopic+0xf>
sub    esp,0x8
push   eax
mov    eax,ds:0x8074448
mov    eax,DWORD PTR [eax+0x4]
push   eax
call   804bad0 <set_enftopic>
add    esp,0x10
jmp    80496ef <cfg_enftopic+0xf>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x8075e74
test   edx,edx
mov    eax,DWORD PTR [ebp+0x8]
je     8049770 <cfg_cmdchar+0x30>
test   eax,eax
je     8049763 <cfg_cmdchar+0x23>
mov    al,BYTE PTR [eax]
test   al,al
je     8049763 <cfg_cmdchar+0x23>
mov    BYTE PTR [edx+0x380],al
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80712b2
push   0x8067540
call   8048c88 <printf@plt>
jmp    8049763 <cfg_cmdchar+0x23>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    eax,ds:0x8075e74
mov    ebp,esp
test   eax,eax
push   esi
push   ebx
jne    80497c0 <cfg_set+0x30>
sub    esp,0x8
push   0x80712b2
push   0x8067580
call   8048c88 <printf@plt>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80497b0 <cfg_set+0x20>
sub    esp,0x8
push   0x3
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8063f20 <find_var_name>
add    esp,0x10
cmp    eax,0xffffffff
mov    edx,eax
je     8049895 <cfg_set+0x105>
test   esi,esi
je     80497b0 <cfg_set+0x20>
cmp    BYTE PTR [esi],0x0
je     80497b0 <cfg_set+0x20>
lea    eax,[eax+eax*4]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8075e74
test   BYTE PTR [eax+0x3c0],0x8
lea    ecx,[eax+0x3c0]
je     8049867 <cfg_set+0xd7>
mov    ebx,ecx
test   ebx,ebx
je     80497b0 <cfg_set+0x20>
test   BYTE PTR [ebx],0x1
je     804984b <cfg_set+0xbb>
sub    esp,0xc
push   esi
call   8048f58 <atoi@plt>
add    esp,0x10
cmp    eax,DWORD PTR [ebx+0xc]
jl     80497b0 <cfg_set+0x20>
cmp    eax,DWORD PTR [ebx+0x10]
jg     80497b0 <cfg_set+0x20>
mov    DWORD PTR [ebx+0x4],eax
jmp    80497b0 <cfg_set+0x20>
sub    esp,0x8
push   esi
lea    eax,[ebx+0x8]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8049790
call   80579d0 <mstrcpy>
jmp    80497b0 <cfg_set+0x20>
mov    eax,ds:0x8074448
test   eax,eax
jne    8049881 <cfg_set+0xf1>
push   eax
push   ebx
push   0x80712b2
push   0x80675a0
jmp    80497ab <cfg_set+0x1b>
sub    esp,0x8
push   edx
mov    eax,DWORD PTR [eax+0x4]
push   eax
call   8064090 <find_var>
mov    ebx,eax
add    esp,0x10
jmp    804981c <cfg_set+0x8c>
push   0x8075ea0
push   ebx
push   0x80712b2
push   0x8067238
jmp    80497ab <cfg_set+0x1b>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR ds:0x8075e74
test   ebx,ebx
jne    80498e0 <cfg_tog+0x30>
sub    esp,0x8
push   0x80712b2
push   0x80675e0
call   8048c88 <printf@plt>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80498d1 <cfg_tog+0x21>
sub    esp,0x8
push   0x4
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8063f20 <find_var_name>
add    esp,0x10
cmp    eax,0xffffffff
mov    edx,eax
je     804998e <cfg_tog+0xde>
lea    eax,[eax+eax*4]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8075e74
test   BYTE PTR [eax+0x3c0],0x8
lea    ecx,[eax+0x3c0]
je     8049960 <cfg_tog+0xb0>
mov    ebx,ecx
test   ebx,ebx
je     80498d1 <cfg_tog+0x21>
test   esi,esi
je     804993c <cfg_tog+0x8c>
cmp    BYTE PTR [esi],0x0
jne    804994f <cfg_tog+0x9f>
mov    eax,0x1
test   eax,eax
je     804994a <cfg_tog+0x9a>
mov    eax,0x1
mov    DWORD PTR [ebx+0x4],eax
jmp    80498d1 <cfg_tog+0x21>
sub    esp,0xc
push   esi
call   8048f58 <atoi@plt>
add    esp,0x10
jmp    8049941 <cfg_tog+0x91>
lea    esi,[esi+0x0]
mov    eax,ds:0x8074448
test   eax,eax
jne    804997a <cfg_tog+0xca>
push   ecx
push   ebx
push   0x80712b2
push   0x8067600
jmp    80498cc <cfg_tog+0x1c>
sub    esp,0x8
push   edx
mov    edx,DWORD PTR [eax+0x4]
push   edx
call   8064090 <find_var>
mov    ebx,eax
add    esp,0x10
jmp    804992f <cfg_tog+0x7f>
push   0x8075ea0
push   ebx
push   0x80712b2
push   0x8067253
jmp    80498cc <cfg_tog+0x1c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
test   eax,eax
jne    80499e0 <cfg_modes+0x30>
sub    esp,0x8
push   0x80712b2
push   0x8067640
call   8048c88 <printf@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80499d1 <cfg_modes+0x21>
cmp    BYTE PTR [eax],0x0
je     80499d1 <cfg_modes+0x21>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x381
push   eax
call   8048c68 <strcpy@plt>
jmp    80499d1 <cfg_modes+0x21>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
test   eax,eax
jne    8049a50 <cfg_virtual+0x30>
sub    esp,0x8
push   0x80712b2
push   0x8067680
call   8048c88 <printf@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     8049a41 <cfg_virtual+0x21>
cmp    BYTE PTR [eax],0x0
je     8049a41 <cfg_virtual+0x21>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x296
push   eax
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x2dc],0x0
jmp    8049a41 <cfg_virtual+0x21>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ecx,DWORD PTR ds:0x8075e74
mov    ebp,esp
test   ecx,ecx
push   esi
push   ebx
jne    8049ad0 <cfg_wingate+0x30>
sub    esp,0x8
push   0x80712b2
push   0x80676c0
call   8048c88 <printf@plt>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
mov    esi,eax
pop    eax
pop    edx
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     8049ac1 <cfg_wingate+0x21>
sub    esp,0xc
push   eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049b12 <cfg_wingate+0x72>
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    8049b24 <cfg_wingate+0x84>
sub    esp,0xc
push   0x8067700
call   8048d38 <puts@plt>
add    esp,0x10
jmp    8049ac1 <cfg_wingate+0x21>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   esi
add    eax,0x296
push   eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [edx+0x2d8],eax
mov    DWORD PTR [edx+0x2dc],0x1
jmp    8049b1f <cfg_wingate+0x7f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     8049b80 <cfg_linkport+0x20>
cmp    BYTE PTR [eax],0x0
jne    8049b90 <cfg_linkport+0x30>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
mov    ds:0x8075d2c,eax
jmp    8049b80 <cfg_linkport+0x20>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049bcf <cfg_linkpass+0x2f>
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
jbe    8049be0 <cfg_linkpass+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
push   0x8076ee0
call   8048c68 <strcpy@plt>
jmp    8049bcf <cfg_linkpass+0x2f>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049c1f <cfg_entity+0x2f>
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
jbe    8049c30 <cfg_entity+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
push   0x8075d40
call   8048c68 <strcpy@plt>
jmp    8049c1f <cfg_entity+0x2f>
push   ebp
mov    ebp,esp
push   edi
push   ebx
sub    esp,0x58
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8049cc1 <cfg_addhandle+0x81>
cld    
xor    eax,eax
lea    edi,[ebp-0x58]
mov    ecx,0x12
rep stos DWORD PTR es:[edi],eax
push   edi
push   0xd
push   edx
lea    eax,[ebp-0x50]
push   eax
call   8048e38 <strncpy@plt>
mov    eax,ds:0x8075e20
mov    ds:0x8074444,eax
mov    DWORD PTR [ebp-0x54],eax
inc    eax
mov    ds:0x8075e20,eax
mov    al,BYTE PTR [ebp-0x1a]
and    eax,0xfffffff1
or     eax,0x2
mov    BYTE PTR [ebp-0x1a],al
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
lea    ebx,[ebp-0x58]
push   ebx
add    eax,0x720
push   eax
mov    BYTE PTR [ebp-0x43],0x0
mov    BYTE PTR [ebp-0x58],0x1
or     BYTE PTR [ebp-0x1c],0x20
call   8059260 <addstruct>
lea    esp,[ebp-0x8]
pop    ebx
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049d20 <cfg_addmask+0x50>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     8049d20 <cfg_addmask+0x50>
sub    esp,0x8
push   ebx
push   eax
call   80620b0 <addmasktouser>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049d8d <cfg_uchannel+0x5d>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     8049d8d <cfg_uchannel+0x5d>
sub    esp,0x8
push   ebx
add    eax,0x2c
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8049d30
call   80579d0 <mstrcpy>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8049e10 <cfg_access+0x70>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    ebx,DWORD PTR [eax+0x720]
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049e10 <cfg_access+0x70>
sub    esp,0xc
push   esi
call   8048f58 <atoi@plt>
add    esp,0x10
test   eax,eax
js     8049e10 <cfg_access+0x70>
cmp    eax,0x64
jle    8049e20 <cfg_access+0x80>
cmp    eax,0xc8
je     8049e20 <cfg_access+0x80>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
movzx  edx,al
mov    eax,DWORD PTR [ebx+0x3c]
shl    edx,0x9
and    eax,0xfffe01ff
or     eax,edx
mov    DWORD PTR [ebx+0x3c],eax
jmp    8049e10 <cfg_access+0x70>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   ebx
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    ebx,DWORD PTR [eax+0x720]
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049ea0 <cfg_aop+0x60>
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     8049eb0 <cfg_aop+0x70>
cmp    BYTE PTR [eax+0x1],0x0
jne    8049ea0 <cfg_aop+0x60>
movsx  eax,BYTE PTR [eax]
cmp    eax,0x30
je     8049eb6 <cfg_aop+0x76>
cmp    eax,0x31
je     8049eb0 <cfg_aop+0x70>
lea    esi,[esi+0x0]
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
or     BYTE PTR [ebx+0x3c],0x2
jmp    8049ea0 <cfg_aop+0x60>
and    BYTE PTR [ebx+0x3c],0xfd
jmp    8049ea0 <cfg_aop+0x60>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     8049ef2 <cfg_echo+0x32>
or     BYTE PTR [eax+0x3c],0x1
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     8049f32 <cfg_shared+0x32>
or     BYTE PTR [eax+0x3c],0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8049fb5 <cfg_prot+0x75>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    ebx,DWORD PTR [eax+0x720]
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8049fb5 <cfg_prot+0x75>
sub    esp,0xc
push   esi
call   8048f58 <atoi@plt>
add    esp,0x10
test   eax,eax
js     8049fb5 <cfg_prot+0x75>
cmp    eax,0x4
jg     8049fb5 <cfg_prot+0x75>
mov    edx,eax
and    edx,0x7
mov    ax,WORD PTR [ebx+0x3c]
shl    edx,0x6
and    eax,0xfffffe3f
or     eax,edx
mov    WORD PTR [ebx+0x3c],ax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804a01a <cfg_passwd+0x5a>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804a01a <cfg_passwd+0x5a>
push   eax
push   0x14
push   esi
lea    eax,[ebx+0x15]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [ebx+0x29],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
jmp    804a030 <cfg_addks>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   ebx
cld    
lea    edi,[ebp-0x58]
xor    eax,eax
mov    ecx,0x12
sub    esp,0x58
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8075e20
mov    DWORD PTR [ebp-0x54],eax
mov    ds:0x8074444,eax
inc    eax
mov    ds:0x8075e20,eax
mov    al,BYTE PTR [ebp-0x1a]
and    eax,0xfffffff1
mov    edi,DWORD PTR [ebp+0x8]
or     eax,0x6
push   edi
mov    BYTE PTR [ebp-0x1a],al
lea    eax,[ebp-0x20]
push   eax
mov    BYTE PTR [ebp-0x58],0x1
mov    DWORD PTR ds:0x8075d6c,0x804a030
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
lea    ebx,[ebp-0x58]
push   ebx
add    eax,0x720
push   eax
call   8059260 <addstruct>
lea    esp,[ebp-0x8]
pop    ebx
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   ebx
sub    esp,0x58
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804a133 <cfg_addshit+0x83>
cld    
xor    eax,eax
lea    edi,[ebp-0x58]
mov    ecx,0x12
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8075e20
mov    ds:0x8074444,eax
mov    DWORD PTR [ebp-0x54],eax
inc    eax
mov    ds:0x8075e20,eax
mov    al,BYTE PTR [ebp-0x1a]
and    eax,0xfffffff1
sub    esp,0x8
or     eax,0x4
push   edx
mov    BYTE PTR [ebp-0x1a],al
lea    eax,[ebp-0x20]
push   eax
mov    BYTE PTR [ebp-0x58],0x1
mov    DWORD PTR ds:0x8075d6c,0x804a0b0
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
lea    ebx,[ebp-0x58]
push   ebx
add    eax,0x720
push   eax
call   8059260 <addstruct>
lea    esp,[ebp-0x8]
pop    ebx
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804a1ad <cfg_who+0x6d>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804a1ad <cfg_who+0x6d>
mov    al,BYTE PTR [eax+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     804a1ad <cfg_who+0x6d>
sub    esp,0x8
push   ebx
lea    eax,[edx+0x30]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x804a140
call   80579d0 <mstrcpy>
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804a223 <cfg_time+0x63>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    ebx,DWORD PTR [eax+0x720]
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804a223 <cfg_time+0x63>
mov    al,BYTE PTR [eax+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     804a223 <cfg_time+0x63>
sub    esp,0xc
push   esi
call   8048cd8 <atol@plt>
mov    DWORD PTR [ebx+0x40],eax
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     804a241 <cfg_reason+0x11>
cmp    BYTE PTR [ebx],0x0
jne    804a250 <cfg_reason+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804a241 <cfg_reason+0x11>
mov    al,BYTE PTR [eax+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     804a241 <cfg_reason+0x11>
sub    esp,0x8
push   ebx
lea    eax,[edx+0x34]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x804a230
call   80579d0 <mstrcpy>
add    esp,0x10
jmp    804a241 <cfg_reason+0x11>
jmp    804a2b0 <cfg_expire>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x8067271
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804a313 <cfg_expire+0x63>
mov    ecx,DWORD PTR ds:0x8074444
push   ecx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804a313 <cfg_expire+0x63>
mov    al,BYTE PTR [eax+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     804a313 <cfg_expire+0x63>
sub    esp,0xc
push   esi
call   8048cd8 <atol@plt>
mov    DWORD PTR [ebx+0x44],eax
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
pop    ebx
pop    esi
push   0x80671d8
mov    edi,eax
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804a420 <cfg_alias+0x100>
mov    ebx,eax
mov    al,BYTE PTR [eax]
test   al,al
je     804a384 <cfg_alias+0x64>
mov    esi,esi
movsx  edx,al
cmp    edx,0xff
ja     804a490 <cfg_alias+0x170>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x834]
mov    BYTE PTR [ebx],al
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
jne    804a360 <cfg_alias+0x40>
mov    ecx,DWORD PTR ds:0x8070260
test   ecx,ecx
je     804a420 <cfg_alias+0x100>
xor    ebx,ebx
sub    esp,0x8
push   esi
mov    edx,DWORD PTR [ebx+0x8070260]
push   edx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804a472 <cfg_alias+0x152>
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [ebx+0x8070264]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804a462 <cfg_alias+0x142>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804a394 <cfg_alias+0x74>
mov    eax,ds:0x8070260
test   eax,eax
je     804a420 <cfg_alias+0x100>
xor    ebx,ebx
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804a428 <cfg_alias+0x108>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804a3f0 <cfg_alias+0xd0>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,DWORD PTR [ebx+0x8070264]
test   eax,eax
jne    804a44e <cfg_alias+0x12e>
add    ebx,0x8070264
sub    esp,0x8
push   esi
push   ebx
mov    DWORD PTR ds:0x8075d6c,0x804a320
call   80579d0 <mstrcpy>
jmp    804a420 <cfg_alias+0x100>
sub    esp,0xc
add    ebx,0x8070264
push   ebx
call   8057920 <MyFree>
add    esp,0x10
jmp    804a438 <cfg_alias+0x118>
sub    esp,0x8
push   esi
push   0x8067740
call   8048c88 <printf@plt>
jmp    804a420 <cfg_alias+0x100>
sub    esp,0xc
push   0x8067780
call   8048d38 <puts@plt>
jmp    804a420 <cfg_alias+0x100>
jmp    804a490 <cfg_alias+0x170>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   edx
call   8048cc8 <___toupper@plt>
add    esp,0x10
jmp    804a37b <cfg_alias+0x5b>
jmp    804a4b0 <readuserlist_callback>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
mov    edi,eax
mov    eax,ds:0x8070180
xor    esi,esi
add    esp,0x10
test   eax,eax
je     804a4fd <readuserlist_callback+0x4d>
mov    ebx,0x8070180
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804a4fd <readuserlist_callback+0x4d>
add    ebx,0xc
mov    eax,DWORD PTR [ebx]
inc    esi
test   eax,eax
jne    804a4e0 <readuserlist_callback+0x30>
lea    eax,[esi+esi*2]
lea    ebx,[eax*4+0x0]
mov    eax,DWORD PTR [ebx+0x8070180]
test   eax,eax
je     804a52a <readuserlist_callback+0x7a>
cmp    BYTE PTR [ebx+0x8070188],0x0
jne    804a534 <readuserlist_callback+0x84>
sub    esp,0xc
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   DWORD PTR [ebx+0x8070184]
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
xor    eax,eax
pop    ebp
ret    
sub    esp,0x8
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
mov    DWORD PTR [ebp+0x8],eax
add    esp,0x10
jmp    804a51a <readuserlist_callback+0x6a>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    eax,ds:0x8075e74
push   0x0
add    eax,0x724
push   eax
call   8048f88 <open@plt>
mov    edi,eax
add    esp,0x10
xor    eax,eax
test   edi,edi
js     804a5d8 <readuserlist+0x88>
mov    edx,DWORD PTR ds:0x8075e74
xor    esi,esi
cmp    esi,DWORD PTR [edx+0x71c]
mov    ebx,DWORD PTR [edx+0x720]
jge    804a5bd <readuserlist+0x6d>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     804a59f <readuserlist+0x4f>
mov    al,BYTE PTR [ebx+0x3c]
and    eax,0x30
cmp    al,0x30
je     804a5e0 <readuserlist+0x90>
sub    esp,0xc
push   ebx
call   80629d0 <remove_user>
add    ebx,0x48
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
inc    esi
cmp    esi,DWORD PTR [edx+0x71c]
jl     804a590 <readuserlist+0x40>
sub    esp,0x8
push   0x804a4b0
push   edi
call   80618f0 <readline>
mov    DWORD PTR [esp],edi
call   8048fc8 <close@plt>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
add    ebx,0x48
jmp    804a5b4 <readuserlist+0x64>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x80671d8
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804a678 <readcfgfile_callback+0x88>
mov    al,BYTE PTR [eax]
test   al,al
je     804a678 <readcfgfile_callback+0x88>
cmp    al,0x23
je     804a678 <readcfgfile_callback+0x88>
mov    eax,ds:0x8070020
xor    edi,edi
test   eax,eax
je     804a64d <readcfgfile_callback+0x5d>
mov    ebx,0x8070020
lea    esi,[esi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804a64d <readcfgfile_callback+0x5d>
add    ebx,0xc
mov    eax,DWORD PTR [ebx]
inc    edi
test   eax,eax
jne    804a630 <readcfgfile_callback+0x40>
lea    eax,[edi+edi*2]
shl    eax,0x2
mov    ecx,DWORD PTR [eax+0x8070020]
test   ecx,ecx
je     804a667 <readcfgfile_callback+0x77>
mov    eax,DWORD PTR [eax+0x8070024]
test   eax,eax
jne    804a682 <readcfgfile_callback+0x92>
sub    esp,0x8
push   esi
push   0x80677c0
call   8048c88 <printf@plt>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
xor    eax,eax
pop    ebp
ret    
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   eax
jmp    804a675 <readcfgfile_callback+0x85>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
mov    edx,0x8
push   ebx
xor    eax,eax
cld    
mov    edi,0x8075d40
mov    ecx,edx
sub    esp,0xc
mov    DWORD PTR ds:0x8074448,0x0
mov    DWORD PTR ds:0x8075e74,0x0
mov    DWORD PTR ds:0x8074444,0x0
rep stos DWORD PTR es:[edi],eax
mov    edi,0x8076ee0
mov    ecx,edx
rep stos DWORD PTR es:[edi],eax
mov    eax,0x8067344
mov    DWORD PTR [ebp-0x14],0x1
mov    edi,0x8075ea0
mov    ecx,0xb
mov    esi,eax
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
mov    ebx,0xffffffff
je     804a8e0 <readcfgfile+0x250>
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
jne    804a8b0 <readcfgfile+0x220>
sub    esp,0x8
push   0x804a5f0
push   ebx
call   80618f0 <readline>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
je     804a868 <readcfgfile+0x1d8>
mov    edi,DWORD PTR ds:0x8075d24
test   edi,edi
jne    804a73e <readcfgfile+0xae>
or     BYTE PTR [eax+0x3ac],0x4
inc    DWORD PTR ds:0x8075d24
cmp    DWORD PTR ds:0x8075d2c,0xffffffff
je     804a754 <readcfgfile+0xc4>
cmp    BYTE PTR ds:0x8075d40,0x0
je     804a844 <readcfgfile+0x1b4>
mov    eax,ds:0x8075e74
test   eax,eax
je     804a76b <readcfgfile+0xdb>
mov    esi,DWORD PTR [eax+0xb34]
test   esi,esi
je     804a826 <readcfgfile+0x196>
sub    esp,0xc
push   0x806734f
mov    DWORD PTR [ebp-0x14],0x0
call   8048c88 <printf@plt>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
je     804a7f8 <readcfgfile+0x168>
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [ebp-0x14],0x1e
jg     804a814 <readcfgfile+0x184>
mov    edx,DWORD PTR [ebp-0x14]
push   ecx
lea    edi,[ebx+0x220]
test   edx,edx
push   edi
mov    eax,0x8067271
jle    804a80d <readcfgfile+0x17d>
push   eax
push   0x8069e64
call   8048c88 <printf@plt>
mov    ecx,edi
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     804a7c0 <readcfgfile+0x130>
test   edx,0x8080
jne    804a7e5 <readcfgfile+0x155>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,edi
mov    ebx,DWORD PTR [ebx]
add    DWORD PTR [ebp-0x14],ecx
add    esp,0x10
test   ebx,ebx
jne    804a790 <readcfgfile+0x100>
sub    esp,0xc
push   0x8067366
call   8048d38 <puts@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,0x8067180
jmp    804a7aa <readcfgfile+0x11a>
sub    esp,0xc
push   0x8067369
call   8048c88 <printf@plt>
add    esp,0x10
jmp    804a7f8 <readcfgfile+0x168>
push   ebx
add    eax,0x220
push   eax
push   0x80712b2
push   0x8067400
call   8048c88 <printf@plt>
add    esp,0x10
jmp    804a76b <readcfgfile+0xdb>
sub    esp,0x8
push   0x80712b2
push   0x8067800
call   8048c88 <printf@plt>
mov    DWORD PTR ds:0x8075d2c,0xffffffff
add    esp,0x10
jmp    804a754 <readcfgfile+0xc4>
sub    esp,0xc
push   0x8067840
call   8048d38 <puts@plt>
mov    eax,ds:0x8076fa8
add    esp,0x10
test   eax,eax
je     804a891 <readcfgfile+0x201>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     804a89f <readcfgfile+0x20f>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x0
push   0x8075ea0
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
jns    804a701 <readcfgfile+0x71>
sub    esp,0x8
push   0x8075ea0
push   0x8067880
call   8048c88 <printf@plt>
jmp    804a875 <readcfgfile+0x1e5>
sub    esp,0x8
push   0x0
push   0x806736f
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     804a6f6 <readcfgfile+0x66>
sub    esp,0xc
push   0x80678c0
call   8048d38 <puts@plt>
mov    DWORD PTR [ebp-0x14],0x0
add    esp,0x10
jmp    804a6f6 <readcfgfile+0x66>
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   ecx
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
je     804a955 <check_all_steal+0x35>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     804a960 <check_all_steal+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804a940 <check_all_steal+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebx+0x1c]
test   eax,eax
je     804a94f <check_all_steal+0x2f>
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    804a94f <check_all_steal+0x2f>
test   BYTE PTR [eax+0x4],0x2
jne    804a94f <check_all_steal+0x2f>
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   804b600 <cycle_channel>
add    esp,0x10
jmp    804a94f <check_all_steal+0x2f>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,0xffffffff
je     804a9d5 <get_idletime+0x45>
sub    esp,0x8
push   edi
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
je     804a9cf <get_idletime+0x3f>
cmp    esi,0xffffffff
je     804a9e0 <get_idletime+0x50>
mov    eax,DWORD PTR [eax+0x38]
cmp    eax,esi
jge    804a9cf <get_idletime+0x3f>
mov    esi,eax
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804a9b0 <get_idletime+0x20>
lea    esp,[ebp-0xc]
pop    ebx
mov    eax,esi
pop    esi
pop    edi
pop    ebp
ret    
nop
mov    eax,DWORD PTR [eax+0x38]
jmp    804a9cd <get_idletime+0x3d>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
mov    edi,DWORD PTR [ebp+0x10]
push   0x1
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804aaad <show_idletimes+0xbd>
sub    esp,0xc
cmp    edi,0x1
mov    eax,0x8067180
je     804aa2c <show_idletimes+0x3c>
mov    eax,0x806a12e
push   eax
push   edi
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x8067a40
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80614d0 <send_to_user>
mov    esi,DWORD PTR [ebx+0x1c]
add    esp,0x20
test   esi,esi
je     804aa63 <show_idletimes+0x73>
lea    esi,[esi+0x0]
mov    ebx,DWORD PTR ds:0x8075d20
sub    ebx,DWORD PTR [esi+0x38]
cmp    ebx,edi
jg     804aa80 <show_idletimes+0x90>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804aa50 <show_idletimes+0x60>
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp+0xc],0x80678ec
mov    DWORD PTR [ebp+0x8],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   804ce40 <get_nuh>
add    esp,0x10
push   eax
push   eax
push   0x1
push   ebx
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   0x806ed2a
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804aa5d <show_idletimes+0x6d>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     804aaf5 <is_present+0x35>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     804ab00 <is_present+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804aae0 <is_present+0x20>
xor    edx,edx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
sub    esp,0x8
push   esi
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    edx,0x1
je     804aaef <is_present+0x2f>
jmp    804aaf7 <is_present+0x37>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     804ab4f <op_all_chan+0x2f>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
test   BYTE PTR [ebx+0x38d],0x8
jne    804ab60 <op_all_chan+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804ab40 <op_all_chan+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x11
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804ab49 <op_all_chan+0x29>
sub    esp,0x8
push   esi
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
je     804ab49 <op_all_chan+0x29>
test   BYTE PTR [eax+0x4],0x2
jne    804ab49 <op_all_chan+0x29>
sub    esp,0x8
mov    edx,DWORD PTR [ebx+0x4]
push   edx
push   eax
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804ab49 <op_all_chan+0x29>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
test   al,al
je     804ab49 <op_all_chan+0x29>
test   BYTE PTR [edx+0x3c],0x2
je     804ab49 <op_all_chan+0x29>
push   eax
push   esi
push   0x8067900
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   80613b0 <sendmode>
add    esp,0x10
jmp    804ab49 <op_all_chan+0x29>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb34]
test   esi,esi
je     804ac21 <check_shit+0x51>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    ebx,DWORD PTR [esi+0x1c]
test   ebx,ebx
je     804ac1b <check_shit+0x4b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
push   ebx
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   80583e0 <shit_action>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    804ac00 <check_shit+0x30>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804abf0 <check_shit+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x1
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     804ac67 <update_idletime+0x37>
sub    esp,0x8
push   0x8075da0
push   eax
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804ac67 <update_idletime+0x37>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0x38],eax
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb34]
test   esi,esi
je     804aca8 <check_idlekick+0x38>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x17
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    804acb0 <check_idlekick+0x40>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804ac90 <check_idlekick+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
mov    eax,DWORD PTR [esi+0x4]
push   eax
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     804aca2 <check_idlekick+0x32>
sub    esp,0x8
push   0xa
push   esi
call   8063d20 <get_int_varc>
lea    eax,[eax+eax*2]
mov    ebx,DWORD PTR [esi+0x1c]
lea    eax,[eax+eax*4]
add    esp,0x10
test   ebx,ebx
lea    edi,[eax*4+0x0]
je     804aca2 <check_idlekick+0x32>
jmp    804ad00 <check_idlekick+0x90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x38]
cmp    eax,edi
jge    804ad20 <check_idlekick+0xb0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804ad00 <check_idlekick+0x90>
jmp    804aca2 <check_idlekick+0x32>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [esi+0x4]
push   eax
push   ebx
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   8062fb0 <is_user>
add    esp,0x10
test   eax,eax
je     804ad0c <check_idlekick+0x9c>
test   BYTE PTR [ebx+0x4],0x2
jne    804ad0c <check_idlekick+0x9c>
sub    esp,0x8
push   0xa
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
push   eax
push   0x8067906
mov    eax,DWORD PTR [ebx+0x3c]
push   eax
mov    eax,DWORD PTR [esi+0x4]
push   eax
call   80613f0 <sendkick>
add    esp,0x10
jmp    804ad0c <check_idlekick+0x9c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x10]
push   0x8075da0
push   edi
call   804cc30 <find_chanuser>
add    esp,0x10
xor    edx,edx
test   eax,eax
mov    ebx,eax
je     804ada5 <check_mass+0x35>
test   esi,0x3
je     804add0 <check_mass+0x60>
test   BYTE PTR [eax+0x4],0x2
je     804adb0 <check_mass+0x40>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
nop
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x4]
push   eax
push   ebx
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   8062c50 <get_userlevel>
add    esp,0x10
test   eax,eax
jne    804ada3 <check_mass+0x33>
lea    esi,[esi+eiz*1+0x0]
cmp    esi,0x10
ja     804ada3 <check_mass+0x33>
jmp    DWORD PTR [esi*4+0x8067c50]
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [ebx+0x34]
cmp    eax,0xa
jle    804adf6 <check_mass+0x86>
mov    DWORD PTR [ebx+0x34],edx
mov    DWORD PTR [ebx+0x1c],0x0
sub    esp,0x8
inc    DWORD PTR [ebx+0x1c]
push   0x2
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [ebx+0x1c],eax
jl     804ada3 <check_mass+0x33>
sub    esp,0x8
push   0x10
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
mov    edx,0x1
jne    804ada5 <check_mass+0x35>
jmp    804ada3 <check_mass+0x33>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [ebx+0x20]
cmp    eax,0xa
jle    804ae42 <check_mass+0xd2>
mov    DWORD PTR [ebx+0x20],edx
mov    DWORD PTR [ebx+0x8],0x0
sub    esp,0x8
inc    DWORD PTR [ebx+0x8]
push   0x7
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [ebx+0x8],eax
jl     804ada3 <check_mass+0x33>
mov    DWORD PTR [ebp+0xc],0x8
mov    DWORD PTR [ebp+0x8],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    8063d20 <get_int_varc>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [ebx+0x28]
cmp    eax,0xa
jle    804ae8c <check_mass+0x11c>
mov    DWORD PTR [ebx+0x28],edx
mov    DWORD PTR [ebx+0x10],0x0
sub    esp,0x8
inc    DWORD PTR [ebx+0x10]
push   0x3
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [ebx+0x10],eax
jl     804ada3 <check_mass+0x33>
mov    edx,0x1
jmp    804ada5 <check_mass+0x35>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [ebx+0x24]
cmp    eax,0xa
jle    804aeca <check_mass+0x15a>
mov    DWORD PTR [ebx+0x24],edx
mov    DWORD PTR [ebx+0xc],0x0
sub    esp,0x8
inc    DWORD PTR [ebx+0xc]
push   0x4
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [ebx+0xc],eax
jmp    804aea0 <check_mass+0x130>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [ebx+0x2c]
cmp    eax,0xa
jle    804aefa <check_mass+0x18a>
mov    DWORD PTR [ebx+0x2c],edx
mov    DWORD PTR [ebx+0x14],0x0
sub    esp,0x8
inc    DWORD PTR [ebx+0x14]
push   0x5
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [ebx+0x14],eax
jmp    804aea0 <check_mass+0x130>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    DWORD PTR [ebp-0x10],0x0
je     804af3f <check_nickflood+0x2f>
nop
test   BYTE PTR [ebx+0x38d],0x8
jne    804af50 <check_nickflood+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804af30 <check_nickflood+0x20>
mov    eax,DWORD PTR [ebp-0x10]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x8075da0
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804af39 <check_nickflood+0x29>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [esi+0x30]
cmp    eax,0xa
jle    804af81 <check_nickflood+0x71>
mov    DWORD PTR [esi+0x30],edx
mov    DWORD PTR [esi+0x18],0x0
sub    esp,0x8
inc    DWORD PTR [esi+0x18]
push   0x9
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    DWORD PTR [esi+0x18],eax
jl     804af39 <check_nickflood+0x29>
sub    esp,0x8
push   0x1
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
mov    DWORD PTR [ebp-0x10],0x1
call   80589d0 <format_uh>
mov    edi,eax
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062fb0 <is_user>
add    esp,0x10
test   eax,eax
jne    804afca <check_nickflood+0xba>
test   BYTE PTR [esi+0x4],0x2
je     804b00d <check_nickflood+0xfd>
push   eax
push   edi
push   0x8075da0
mov    esi,DWORD PTR [ebx+0x4]
push   esi
call   8058ad0 <deop_ban>
add    esp,0xc
push   0x8067a80
push   0x8075da0
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
call   80613f0 <sendkick>
add    esp,0xc
mov    edx,DWORD PTR [ebx+0x4]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8067ac0
call   804b700 <send_statmsg>
add    esp,0x10
jmp    804af39 <check_nickflood+0x29>
sub    esp,0x8
push   0x15
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804afca <check_nickflood+0xba>
mov    edx,DWORD PTR ds:0x8075d20
push   eax
lea    eax,[edx+0x15180]
push   eax
push   edx
push   0x8067b00
push   0x806791a
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x2
push   edi
call   8063410 <add_to_shitlist>
add    esp,0x20
jmp    804afca <check_nickflood+0xba>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
je     804b086 <find_channel+0x36>
mov    esi,esi
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
test   esi,eax
jne    804b0a0 <find_channel+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804b070 <find_channel+0x20>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,ebx
jne    804b080 <find_channel+0x30>
jmp    804b088 <find_channel+0x38>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx]
test   eax,eax
je     804b0ec <delete_channel+0x2c>
mov    ecx,DWORD PTR [ebp+0xc]
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,ecx
je     804b0f0 <delete_channel+0x30>
mov    edx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    804b0e0 <delete_channel+0x20>
xor    eax,eax
leave  
ret    
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [edx],eax
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804cde0 <delete_chanusers>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x18
mov    DWORD PTR [esp],eax
call   804c2f0 <delete_bans>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x14
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x24
mov    DWORD PTR [esp],eax
call   8064030 <free_strvars>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,0x1
jmp    804b0ee <delete_channel+0x2e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0xb34]
test   edx,edx
je     804b1b1 <delete_all_channels+0x41>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edx
add    eax,0xb34
push   eax
call   804b0c0 <delete_channel>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0xb34]
add    esp,0x10
test   edx,edx
jne    804b190 <delete_all_channels+0x20>
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     804b1f8 <copy_channellist+0x38>
lea    esi,[esi+eiz*1+0x0]
push   eax
push   0x0
mov    eax,DWORD PTR [ebx+0x8]
push   eax
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
call   804b200 <join_channel>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0xc]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   804bad0 <set_enftopic>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    804b1d0 <copy_channellist+0x10>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
cmp    BYTE PTR [esi],0x23
mov    ebx,DWORD PTR [ebp+0x10]
je     804b230 <join_channel+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x3
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     804b335 <join_channel+0x135>
mov    al,BYTE PTR [eax+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     804b2e5 <join_channel+0xe5>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     804b295 <join_channel+0x95>
mov    eax,DWORD PTR [ebp-0x10]
cmp    eax,DWORD PTR [edi+0x8]
je     804b295 <join_channel+0x95>
lea    eax,[edi+0x8]
sub    esp,0xc
mov    DWORD PTR [ebp-0x14],eax
push   eax
call   8057920 <MyFree>
mov    DWORD PTR ds:0x8075d6c,0x804b200
pop    ecx
pop    eax
mov    edx,DWORD PTR [ebp-0x10]
push   edx
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   80579d0 <mstrcpy>
add    esp,0x10
mov    al,BYTE PTR [edi+0x38d]
or     eax,0xffffff80
test   ebx,ebx
mov    BYTE PTR [edi+0x38d],al
je     804b21a <join_channel+0x1a>
and    eax,0x2
je     804b21a <join_channel+0x1a>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     804b2c5 <join_channel+0xc5>
mov    eax,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [eax],0x0
jne    804b2ca <join_channel+0xca>
mov    eax,0x8067180
push   eax
push   esi
push   0x8067939
call   8061640 <send_to_server>
and    BYTE PTR [edi+0x38d],0xfd
add    esp,0x10
jmp    804b21a <join_channel+0x1a>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xb38],edi
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     804b21a <join_channel+0x1a>
mov    eax,DWORD PTR [ebp-0x10]
cmp    eax,DWORD PTR [edi+0x8]
je     804b21a <join_channel+0x1a>
lea    esi,[edi+0x8]
sub    esp,0xc
push   esi
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR ds:0x8075d6c,0x804b200
add    esp,0x10
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80579d0 <mstrcpy>
sub    esp,0xc
mov    DWORD PTR ds:0x8075d6c,0x804b200
push   0x390
call   8057860 <MyMalloc>
mov    DWORD PTR ds:0x8075d6c,0x804b200
pop    ecx
mov    edi,eax
pop    eax
push   esi
lea    eax,[edi+0x4]
push   eax
call   80579d0 <mstrcpy>
mov    DWORD PTR ds:0x8075d6c,0x804b200
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
lea    eax,[edi+0x8]
push   eax
call   80579d0 <mstrcpy>
pop    eax
mov    eax,ds:0x8075e74
pop    edx
add    eax,0x3c0
push   eax
lea    eax,[edi+0x24]
push   eax
call   8063f90 <copy_vars>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0xb34]
mov    DWORD PTR [edi],eax
mov    DWORD PTR [edx+0xb34],edi
mov    al,BYTE PTR [edi+0x38d]
and    eax,0xffffffef
or     eax,0xffffffa0
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [edi+0x388],0x0
mov    BYTE PTR [edi+0x38d],al
jne    804b2b5 <join_channel+0xb5>
or     eax,0x2
mov    BYTE PTR [edi+0x38d],al
jmp    804b21a <join_channel+0x1a>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
push   0x1
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804b4c0 <reverse_topic+0xe0>
sub    esp,0x8
push   0xf
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804b490 <reverse_topic+0xb0>
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x4f
jg     804b490 <reverse_topic+0xb0>
mov    eax,DWORD PTR [ebx+0xc]
test   eax,eax
je     804b44c <reverse_topic+0x6c>
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebx+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804b46b <reverse_topic+0x8b>
lea    eax,[ebx+0xc]
mov    DWORD PTR ds:0x8075d6c,0x804b3e0
mov    DWORD PTR [ebp+0xc],edi
mov    DWORD PTR [ebp+0x8],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80579d0 <mstrcpy>
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],esi
mov    DWORD PTR [ebp+0x8],0x8067924
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    8061640 <send_to_server>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
add    ebx,0xc
push   ebx
call   8057920 <MyFree>
add    esp,0x10
mov    DWORD PTR ds:0x8075d6c,0x804b3e0
mov    DWORD PTR [ebp+0xc],edi
mov    DWORD PTR [ebp+0x8],ebx
jmp    804b45f <reverse_topic+0x7f>
jmp    804b4c0 <reverse_topic+0xe0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x8c
mov    ebx,DWORD PTR [ebp+0xc]
test   BYTE PTR [ebx+0x38d],0x8
je     804b500 <reverse_mode+0x30>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x1a
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804b4e8 <reverse_mode+0x18>
sub    esp,0x8
push   0x1c
push   ebx
call   8063d80 <get_str_varc>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804b4e8 <reverse_mode+0x18>
mov    al,BYTE PTR [ebp+0x10]
mov    BYTE PTR [ebp-0x89],al
sub    esp,0x8
movsx  edi,BYTE PTR [ebp-0x89]
push   edi
mov    al,BYTE PTR [ebp+0x14]
push   esi
mov    BYTE PTR [ebp-0x8a],al
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     804b55b <reverse_mode+0x8b>
xor    eax,eax
cmp    BYTE PTR [ebp-0x8a],0x2b
je     804b4ea <reverse_mode+0x1a>
sub    esp,0x8
push   edi
push   esi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    804b57b <reverse_mode+0xab>
xor    eax,eax
cmp    BYTE PTR [ebp-0x8a],0x2d
je     804b4ea <reverse_mode+0x1a>
sub    esp,0x8
mov    edx,DWORD PTR [ebx+0x4]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x4f
jle    804b5f0 <reverse_mode+0x120>
lea    edx,[ebp-0x88]
cmp    BYTE PTR [ebp-0x8a],0x2d
mov    edi,edx
je     804b5d3 <reverse_mode+0x103>
sub    esp,0x8
push   esi
mov    al,BYTE PTR [ebp-0x89]
push   edx
mov    BYTE PTR [ebp-0x88],al
mov    BYTE PTR [ebp-0x87],0x0
call   8057c30 <Strcat>
add    esp,0x10
push   eax
push   edi
push   0x1c
push   ebx
call   8063ec0 <set_str_varc>
jmp    804b4e8 <reverse_mode+0x18>
mov    al,BYTE PTR [esi]
test   al,al
je     804b5eb <reverse_mode+0x11b>
cmp    al,BYTE PTR [ebp-0x89]
je     804b5e4 <reverse_mode+0x114>
mov    BYTE PTR [edx],al
inc    edx
inc    esi
mov    al,BYTE PTR [esi]
test   al,al
jne    804b5d9 <reverse_mode+0x109>
mov    BYTE PTR [edx],0x0
jmp    804b5c4 <reverse_mode+0xf4>
mov    eax,0x1
jmp    804b4ea <reverse_mode+0x1a>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x1
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804b645 <cycle_channel+0x45>
test   BYTE PTR [eax+0x38d],0x2
je     804b645 <cycle_channel+0x45>
mov    eax,DWORD PTR [eax+0x8]
test   eax,eax
jne    804b631 <cycle_channel+0x31>
mov    eax,0x8067180
push   eax
push   esi
push   esi
push   0x8067931
call   8061640 <send_to_server>
or     BYTE PTR [ebx+0x38d],0x80
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x810
lea    eax,[ebp+0xc]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
lea    edi,[ebp-0x818]
push   edi
call   8048c98 <vsprintf@plt>
xor    esi,esi
mov    eax,ds:0x8075e74
add    esp,0x10
cmp    esi,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
jge    804b6a4 <send_spymsg+0x54>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
jne    804b6b0 <send_spymsg+0x60>
inc    esi
add    ebx,0xa1
cmp    esi,DWORD PTR [eax+0xb24]
jl     804b690 <send_spymsg+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x8067944
lea    eax,[ebx+0x1]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804b6cf <send_spymsg+0x7f>
mov    eax,ds:0x8075e74
jmp    804b695 <send_spymsg+0x45>
sub    esp,0x8
push   edi
lea    eax,[ebx+0x51]
push   eax
call   8055c40 <send_chat>
add    esp,0x10
test   eax,eax
jne    804b6c8 <send_spymsg+0x78>
push   ecx
push   0xa1
push   0x0
push   ebx
call   8048eb8 <memset@plt>
add    esp,0x10
jmp    804b6c8 <send_spymsg+0x78>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1010
lea    eax,[ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    ebx,[ebp-0x818]
push   ebx
call   8048c98 <vsprintf@plt>
push   ebx
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806794b
lea    edi,[ebp-0x1018]
push   edi
call   8048f18 <sprintf@plt>
xor    esi,esi
mov    eax,ds:0x8075e74
add    esp,0x20
cmp    esi,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
jge    804b774 <send_statmsg+0x74>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
jne    804b780 <send_statmsg+0x80>
inc    esi
add    ebx,0xa1
cmp    esi,DWORD PTR [eax+0xb24]
jl     804b760 <send_statmsg+0x60>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x8067953
lea    eax,[ebx+0x1]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804b79f <send_statmsg+0x9f>
mov    eax,ds:0x8075e74
jmp    804b765 <send_statmsg+0x65>
sub    esp,0x8
push   edi
lea    eax,[ebx+0x51]
push   eax
call   8055c40 <send_chat>
add    esp,0x10
test   eax,eax
jne    804b798 <send_statmsg+0x98>
push   eax
push   0xa1
push   0x0
push   ebx
call   8048eb8 <memset@plt>
add    esp,0x10
jmp    804b798 <send_statmsg+0x98>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1010
lea    eax,[ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    ebx,[ebp-0x818]
push   ebx
call   8048c98 <vsprintf@plt>
push   ebx
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806794b
lea    eax,[ebp-0x1018]
push   eax
call   8048f18 <sprintf@plt>
mov    esi,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
add    esp,0x20
test   esi,esi
mov    ds:0x8076f00,eax
je     804b86f <send_global_statmsg+0x9f>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0xb28]
test   eax,eax
je     804b869 <send_global_statmsg+0x99>
xor    edi,edi
cmp    edi,DWORD PTR [esi+0xb24]
mov    DWORD PTR ds:0x8075e74,esi
mov    ebx,eax
jge    804b869 <send_global_statmsg+0x99>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
jne    804b890 <send_global_statmsg+0xc0>
inc    edi
mov    eax,ds:0x8075e74
add    ebx,0xa1
cmp    edi,DWORD PTR [eax+0xb24]
jl     804b850 <send_global_statmsg+0x80>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804b830 <send_global_statmsg+0x60>
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    804b890 <send_global_statmsg+0xc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   0x8067953
lea    eax,[ebx+0x1]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804b855 <send_global_statmsg+0x85>
sub    esp,0x8
lea    eax,[ebp-0x1018]
push   eax
lea    eax,[ebx+0x51]
push   eax
call   8055c40 <send_chat>
add    esp,0x10
test   eax,eax
jne    804b855 <send_global_statmsg+0x85>
push   eax
push   0xa1
push   0x0
push   ebx
call   8048eb8 <memset@plt>
add    esp,0x10
jmp    804b855 <send_global_statmsg+0x85>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x804
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
lea    esi,[ebp-0x808]
push   esi
call   8048c98 <vsprintf@plt>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
add    esp,0x10
test   ebx,ebx
je     804b93b <send_common_spy+0x5b>
jmp    804b920 <send_common_spy+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   0x8075da0
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
jne    804b950 <send_common_spy+0x70>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804b920 <send_common_spy+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   edx
push   esi
push   0x806a12d
push   ebx
call   804b970 <send_spy>
add    esp,0x10
jmp    804b935 <send_common_spy+0x55>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc10
lea    eax,[ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
lea    eax,[ebp-0x818]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
call   8048c98 <vsprintf@plt>
pop    edx
pop    ecx
push   0x28
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    804ba3b <send_spy+0xcb>
mov    eax,ds:0x8075e74
xor    esi,esi
cmp    esi,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
jge    804b9d4 <send_spy+0x64>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebx],0x0
jne    804b9e0 <send_spy+0x70>
inc    esi
add    ebx,0xa1
cmp    esi,DWORD PTR [eax+0xb24]
jl     804b9c0 <send_spy+0x50>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x4]
push   eax
lea    eax,[ebx+0x1]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804ba19 <send_spy+0xa9>
cmp    BYTE PTR [ebx+0x51],0x23
je     804ba20 <send_spy+0xb0>
lea    eax,[ebp-0x818]
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
push   0x806794b
lea    eax,[ebx+0x51]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,ds:0x8075e74
jmp    804b9c5 <send_spy+0x55>
lea    eax,[ebp-0x818]
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
push   0x806794b
lea    eax,[ebx+0x51]
push   eax
call   8061360 <sendprivmsg>
jmp    804ba16 <send_spy+0xa6>
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x4]
push   eax
lea    ebx,[ebp-0xc18]
push   ebx
call   8048c68 <strcpy@plt>
mov    al,BYTE PTR [ebp-0xc18]
add    esp,0x10
test   al,al
mov    edx,ebx
je     804ba74 <send_spy+0x104>
lea    esi,[esi+0x0]
and    eax,0xff
mov    al,BYTE PTR [eax+0x8071340]
mov    BYTE PTR [edx],al
inc    edx
mov    al,BYTE PTR [edx]
test   al,al
jne    804ba60 <send_spy+0xf0>
push   eax
push   0x1b6
push   0x209
push   ebx
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     804b9a8 <send_spy+0x38>
lea    eax,[ebp-0x818]
push   eax
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806795b
push   ebx
call   8061260 <send_to_socket>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
add    esp,0x10
jmp    804b9a8 <send_spy+0x38>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x1
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     804bb20 <set_enftopic+0x50>
lea    ebx,[eax+0xc]
sub    esp,0xc
push   ebx
call   8057920 <MyFree>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
mov    DWORD PTR ds:0x8075d6c,0x804bad0
call   80579d0 <mstrcpy>
mov    eax,0x1
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
xor    eax,eax
jmp    804bb10 <set_enftopic+0x40>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    BYTE PTR ds:0x8072720,0x2b
mov    al,BYTE PTR [esi+0x38c]
test   eax,0x1
mov    ebx,0x8072721
je     804bb63 <chan_modestr+0x33>
mov    BYTE PTR ds:0x8072721,0x70
mov    ebx,0x8072722
mov    al,BYTE PTR [esi+0x38c]
test   eax,0x2
je     804bb74 <chan_modestr+0x44>
mov    BYTE PTR [ebx],0x73
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x4
je     804bb85 <chan_modestr+0x55>
mov    BYTE PTR [ebx],0x6d
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x8
je     804bb96 <chan_modestr+0x66>
mov    BYTE PTR [ebx],0x74
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x20
je     804bba7 <chan_modestr+0x77>
mov    BYTE PTR [ebx],0x69
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x40
je     804bbb8 <chan_modestr+0x88>
mov    BYTE PTR [ebx],0x6e
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x10
je     804bbd0 <chan_modestr+0xa0>
mov    edx,DWORD PTR [esi+0x10]
test   edx,edx
je     804bbd0 <chan_modestr+0xa0>
mov    BYTE PTR [ebx],0x6c
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x80
je     804bbe1 <chan_modestr+0xb1>
mov    BYTE PTR [ebx],0x6b
mov    al,BYTE PTR [esi+0x38c]
inc    ebx
test   eax,0x10
je     804bbef <chan_modestr+0xbf>
mov    edx,DWORD PTR [esi+0x10]
test   edx,edx
jne    804bc35 <chan_modestr+0x105>
test   eax,0x80
je     804bc26 <chan_modestr+0xf6>
push   eax
mov    eax,DWORD PTR [esi+0x8]
test   eax,eax
jne    804bc03 <chan_modestr+0xd3>
mov    eax,0x8067964
push   eax
push   0x806a12c
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
je     804bc26 <chan_modestr+0xf6>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
inc    ebx
cmp    BYTE PTR [ebx],0x0
jne    804bc20 <chan_modestr+0xf0>
mov    BYTE PTR [ebx],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,0x8072720
pop    ebp
ret    
push   eax
push   edx
push   0x806a469
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
je     804bc56 <chan_modestr+0x126>
lea    esi,[esi+0x0]
inc    ebx
cmp    BYTE PTR [ebx],0x0
jne    804bc50 <chan_modestr+0x120>
mov    al,BYTE PTR [esi+0x38c]
jmp    804bbef <chan_modestr+0xbf>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x41c
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb34]
test   esi,esi
jne    804bc94 <do_channels+0x34>
sub    esp,0x8
push   0x80712e0
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x8067b20
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
add    esp,0x10
test   ebx,ebx
je     804bd63 <do_channels+0x103>
nop
lea    esi,[esi+eiz*1+0x0]
mov    dl,BYTE PTR [ebx+0x38d]
mov    al,dl
shr    al,0x4
and    eax,0x3
dec    eax
je     804bd80 <do_channels+0x120>
and    edx,0x80
push   eax
mov    eax,0x8067968
jne    804bce8 <do_channels+0x88>
mov    eax,0x806797e
push   eax
push   0x8067b80
lea    eax,[ebp-0x418]
push   eax
call   8048f18 <sprintf@plt>
mov    BYTE PTR [ebp-0x419],0x20
add    esp,0x10
mov    eax,ds:0x8075e74
sub    esp,0xc
cmp    ebx,DWORD PTR [eax+0xb38]
je     804bd70 <do_channels+0x110>
mov    eax,0x8067180
push   eax
mov    edi,DWORD PTR [ebx+0x4]
push   edi
movsx  eax,BYTE PTR [ebp-0x419]
push   eax
push   0x8067989
lea    eax,[ebp-0x218]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x20
lea    eax,[ebp-0x418]
push   eax
lea    eax,[ebp-0x218]
push   eax
push   0x8067990
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    804bcc0 <do_channels+0x60>
sub    esp,0x8
push   0x806799b
jmp    804bc83 <do_channels+0x23>
mov    eax,0x80679b0
jmp    804bd19 <do_channels+0xb9>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
and    edx,0x8
mov    BYTE PTR [ebp-0x419],0x40
jne    804bd93 <do_channels+0x133>
mov    BYTE PTR [ebp-0x419],0x20
mov    edx,DWORD PTR [ebx+0x1c]
xor    edi,edi
xor    esi,esi
test   edx,edx
mov    DWORD PTR [ebp-0x420],0x0
je     804bdc2 <do_channels+0x162>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [edx+0x4]
inc    esi
test   eax,0x2
je     804bdf0 <do_channels+0x190>
inc    edi
mov    edx,DWORD PTR [edx]
test   edx,edx
jne    804bdb0 <do_channels+0x150>
sub    esp,0xc
push   ebx
call   804bb30 <chan_modestr>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp-0x420]
push   eax
push   edi
push   esi
push   0x80679bb
lea    eax,[ebp-0x418]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x20
jmp    804bd04 <do_channels+0xa4>
and    eax,0x1
je     804bdbc <do_channels+0x15c>
inc    DWORD PTR [ebp-0x420]
jmp    804bdbc <do_channels+0x15c>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
je     804be3f <rejoin_channels+0x3f>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    dl,BYTE PTR [ebx+0x38d]
mov    al,dl
shr    al,0x4
and    eax,0x3
dec    eax
je     804be39 <rejoin_channels+0x39>
and    edx,0x80
jne    804be50 <rejoin_channels+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804be20 <rejoin_channels+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   eax
push   0x1
mov    eax,DWORD PTR [ebx+0x8]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   804b200 <join_channel>
add    esp,0x10
jmp    804be39 <rejoin_channels+0x39>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x824
push   0x1
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804bfc0 <show_names_on_channel+0x150>
push   eax
push   esi
push   0x80679cc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx+0x1c]
add    esp,0x10
test   ebx,ebx
je     804bf98 <show_names_on_channel+0x128>
mov    DWORD PTR [ebp-0x81c],0x0
mov    BYTE PTR [ebp-0x818],0x0
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
test   ebx,ebx
je     804bf86 <show_names_on_channel+0x116>
lea    ecx,[ebp-0x818]
mov    esi,ecx
mov    edi,ecx
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     804bef0 <show_names_on_channel+0x80>
test   edx,0x8080
jne    804bf15 <show_names_on_channel+0xa5>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,edi
cmp    ecx,0x18f
ja     804bf86 <show_names_on_channel+0x116>
mov    eax,DWORD PTR [ebx+0x4]
inc    DWORD PTR [ebp-0x81c]
test   eax,0x1
jne    804bf70 <show_names_on_channel+0x100>
and    eax,0x2
jne    804bf5d <show_names_on_channel+0xed>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x3c]
push   eax
push   esi
call   8057c30 <Strcat>
pop    ecx
pop    edi
push   0x8067364
push   esi
call   8057c30 <Strcat>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
jmp    804bed0 <show_names_on_channel+0x60>
sub    esp,0x8
push   0x806a108
push   esi
call   8057c30 <Strcat>
add    esp,0x10
jmp    804bf39 <show_names_on_channel+0xc9>
sub    esp,0x8
push   0x8069001
push   esi
call   8057c30 <Strcat>
add    esp,0x10
mov    eax,DWORD PTR [ebx+0x4]
jmp    804bf34 <show_names_on_channel+0xc4>
mov    edx,DWORD PTR [ebp-0x81c]
test   edx,edx
jne    804bfa5 <show_names_on_channel+0x135>
test   ebx,ebx
jne    804beb2 <show_names_on_channel+0x42>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   eax
lea    eax,[ebp-0x818]
push   eax
push   0x806a12d
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804bf90 <show_names_on_channel+0x120>
push   ebx
push   esi
push   0x8067ba0
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
pop    eax
pop    edx
push   0x2
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804bfef <show_names_on_channel+0x17f>
push   eax
push   esi
push   0x8067be0
jmp    804be9b <show_names_on_channel+0x2b>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   0x80679d9
push   eax
call   80614d0 <send_to_user>
xor    eax,eax
jmp    804bf9d <show_names_on_channel+0x12d>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     804c047 <find_nuh+0x37>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
push   ebx
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
jne    804c050 <find_nuh+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804c030 <find_nuh+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
xor    eax,eax
pop    ebp
ret    
mov    DWORD PTR [ebp+0x8],eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    804ce40 <get_nuh>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x1
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   804b050 <find_channel>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     804c093 <usermode+0x33>
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   eax
call   804cc30 <find_chanuser>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     804c093 <usermode+0x33>
mov    edx,DWORD PTR [eax+0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b050 <find_channel>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     804c0d7 <num_banned+0x37>
mov    eax,DWORD PTR [eax+0x18]
xor    edx,edx
test   eax,eax
je     804c0d7 <num_banned+0x37>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [eax]
inc    edx
test   eax,eax
jne    804c0d0 <num_banned+0x30>
mov    eax,edx
leave  
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
push   ebp
sub    eax,DWORD PTR ds:0x8070240
mov    ebp,esp
cmp    eax,0x1d
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
jle    804c139 <auto_unban+0x59>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    DWORD PTR ds:0x8070240,edx
je     804c139 <auto_unban+0x59>
lea    eax,[ecx+ecx*2]
lea    eax,[eax+eax*4]
lea    esi,[eax*4+0x0]
lea    esi,[esi+0x0]
push   eax
push   esi
push   0x80679ea
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   804c9e0 <channel_massunban>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    804c120 <auto_unban+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0xc]
je     804c17c <find_ban+0x3c>
jmp    804c160 <find_ban+0x20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,ebx
je     804c17e <find_ban+0x3e>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804c160 <find_ban+0x20>
xor    edx,edx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0x10]
push   edi
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   804c140 <find_ban>
add    esp,0x10
test   eax,eax
je     804c1c0 <make_ban+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   0x14
mov    DWORD PTR ds:0x8075d6c,0x804c190
call   8057860 <MyMalloc>
pop    ecx
mov    ebx,eax
pop    eax
push   edi
lea    eax,[ebx+0x8]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x804c190
call   80579d0 <mstrcpy>
pop    eax
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
mov    DWORD PTR ds:0x8075d6c,0x804c190
pop    edx
je     804c22a <make_ban+0x9a>
push   eax
lea    eax,[ebx+0xc]
push   eax
call   80579d0 <mstrcpy>
mov    eax,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebx+0x4],0x0
mov    DWORD PTR [ebx+0x10],eax
mov    eax,DWORD PTR [esi]
add    esp,0x10
test   eax,eax
je     804c224 <make_ban+0x94>
mov    DWORD PTR [eax+0x4],ebx
mov    eax,DWORD PTR [esi]
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [esi],ebx
jmp    804c1ad <make_ban+0x1d>
mov    eax,0x80679f0
jmp    804c1ff <make_ban+0x6f>
jmp    804c240 <remove_ban>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [edx+0x4]
test   ecx,ecx
je     804c290 <remove_ban+0x50>
mov    eax,DWORD PTR [edx]
mov    DWORD PTR [ecx],eax
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
je     804c263 <remove_ban+0x23>
mov    eax,DWORD PTR [edx+0x4]
mov    DWORD PTR [ecx+0x4],eax
mov    edx,DWORD PTR [ebp+0xc]
sub    esp,0xc
lea    eax,[edx+0x8]
push   eax
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR [edx]
mov    eax,DWORD PTR [ebp+0x8]
test   ecx,ecx
mov    DWORD PTR [eax],ecx
je     804c254 <remove_ban+0x14>
mov    DWORD PTR [ecx+0x4],0x0
jmp    804c254 <remove_ban+0x14>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804c140 <find_ban>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     804c2dc <delete_ban+0x2c>
sub    esp,0x8
push   eax
push   ebx
call   804c240 <remove_ban>
mov    edx,0x1
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [esi]
test   eax,eax
je     804c315 <delete_bans+0x25>
mov    esi,esi
sub    esp,0x8
mov    ebx,DWORD PTR [eax]
push   eax
push   esi
call   804c240 <remove_ban>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
jne    804c300 <delete_bans+0x10>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc38
mov    al,BYTE PTR [ebp+0x14]
mov    BYTE PTR [ebp-0xc19],al
mov    al,BYTE PTR [ebp+0x18]
mov    BYTE PTR [ebp-0xc1a],al
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0xc24],eax
je     804c359 <channel_massmode+0x39>
cmp    BYTE PTR [eax],0x0
jne    804c361 <channel_massmode+0x41>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x2a
push   eax
call   8048f98 <strchr@plt>
test   eax,eax
setne  al
pop    edx
pop    ecx
and    eax,0xff
push   0x1
mov    DWORD PTR [ebp-0xc38],eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0xc20],eax
je     804c359 <channel_massmode+0x39>
sub    esp,0x8
push   0xd
push   0x0
call   8063d20 <get_int_varc>
pop    edi
mov    DWORD PTR [ebp-0xc2c],eax
pop    eax
push   0xb
mov    esi,DWORD PTR [ebp-0xc20]
push   esi
call   8063d20 <get_int_varc>
mov    DWORD PTR [ebp-0xc30],eax
movsx  eax,BYTE PTR [ebp-0xc19]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
push   0x80679fa
lea    eax,[ebp-0xc18]
push   eax
mov    BYTE PTR [ebp-0x418],0x0
call   8048f18 <sprintf@plt>
add    esp,0x20
cmp    BYTE PTR [ebp-0xc18],0x0
lea    edi,[ebp-0xc18]
je     804c406 <channel_massmode+0xe6>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
inc    edi
cmp    BYTE PTR [edi],0x0
jne    804c400 <channel_massmode+0xe0>
mov    ecx,DWORD PTR [ebp-0xc2c]
test   ecx,ecx
jle    804c431 <channel_massmode+0x111>
mov    eax,DWORD PTR [ebp-0xc2c]
mov    DWORD PTR [ebp-0xc28],eax
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ebp-0xc1a]
mov    BYTE PTR [edi],al
inc    edi
dec    DWORD PTR [ebp-0xc28]
jne    804c420 <channel_massmode+0x100>
mov    BYTE PTR [edi],0x0
mov    eax,DWORD PTR [ebp-0xc20]
mov    esi,DWORD PTR [eax+0x1c]
test   esi,esi
je     804c5e8 <channel_massmode+0x2c8>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
lea    eax,[ebp-0xc18]
push   eax
lea    eax,[ebp-0x818]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
test   esi,esi
mov    DWORD PTR [ebp-0xc28],0x0
je     804c524 <channel_massmode+0x204>
mov    eax,DWORD PTR [ebp-0xc2c]
cmp    DWORD PTR [ebp-0xc28],eax
jge    804c524 <channel_massmode+0x204>
lea    esi,[esi+0x0]
xor    ebx,ebx
cmp    BYTE PTR [ebp-0xc19],0x2b
je     804c8a0 <channel_massmode+0x580>
cmp    BYTE PTR [ebp-0xc19],0x2d
je     804c880 <channel_massmode+0x560>
sub    esp,0xc
push   esi
call   804ce40 <get_nuh>
add    esp,0x10
test   ebx,ebx
mov    edi,eax
mov    DWORD PTR [ebp-0xc34],0x0
jne    804c790 <channel_massmode+0x470>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0xc24]
push   eax
mov    ecx,DWORD PTR [ebp-0xc34]
push   ecx
test   ebx,ebx
push   edi
mov    eax,0x8067a05
jne    804c4ec <channel_massmode+0x1cc>
mov    eax,0x8067a0a
push   eax
push   0x8067c20
call   80576b0 <debug>
add    esp,0x20
test   ebx,ebx
je     804c508 <channel_massmode+0x1e8>
test   BYTE PTR [esi+0x5],0x8
je     804c750 <channel_massmode+0x430>
mov    esi,DWORD PTR [esi]
test   esi,esi
je     804c6f0 <channel_massmode+0x3d0>
mov    eax,DWORD PTR [ebp-0xc2c]
cmp    DWORD PTR [ebp-0xc28],eax
jl     804c490 <channel_massmode+0x170>
mov    eax,DWORD PTR [ebp-0xc28]
test   eax,eax
je     804c5e0 <channel_massmode+0x2c0>
lea    ecx,[ebp-0x818]
mov    ebx,ecx
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     804c540 <channel_massmode+0x220>
test   edx,0x8080
jne    804c565 <channel_massmode+0x245>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
lea    edi,[ebp-0x418]
sub    ecx,ebx
mov    ebx,edi
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,DWORD PTR [ebx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ebx,0x4
and    edx,0x80808080
je     804c580 <channel_massmode+0x260>
test   edx,0x8080
jne    804c5a5 <channel_massmode+0x285>
shr    edx,0x10
add    ebx,0x2
add    dl,dl
sbb    ebx,0x3
lea    eax,[ebp-0x418]
sub    ebx,eax
lea    eax,[ebx+ecx*1]
cmp    eax,0x1df
ja     804c681 <channel_massmode+0x361>
sub    esp,0x8
lea    eax,[ebp-0x818]
push   eax
push   edi
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x806b2d9
push   edi
call   8057c30 <Strcat>
add    esp,0x10
test   esi,esi
jne    804c450 <channel_massmode+0x130>
cmp    BYTE PTR [ebp-0x418],0x0
jne    804c622 <channel_massmode+0x302>
mov    eax,DWORD PTR [ebp-0xc20]
mov    esi,DWORD PTR [eax+0x1c]
test   esi,esi
je     804c359 <channel_massmode+0x39>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
and    DWORD PTR [esi+0x4],0xfffff7ff
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804c610 <channel_massmode+0x2f0>
jmp    804c359 <channel_massmode+0x39>
sub    esp,0x8
lea    ebx,[ebp-0x418]
push   ebx
push   0x8067a10
call   80576b0 <debug>
mov    esi,ebx
add    esp,0xc
mov    ecx,ebx
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     804c63d <channel_massmode+0x31d>
test   edx,0x8080
jne    804c662 <channel_massmode+0x342>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,esi
push   ecx
push   ebx
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048d98 <write@plt>
add    esp,0x10
jmp    804c5f1 <channel_massmode+0x2d1>
sub    esp,0x8
push   edi
push   0x8067a1a
call   80576b0 <debug>
mov    ebx,edi
add    esp,0xc
mov    ecx,edi
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     804c6a0 <channel_massmode+0x380>
test   edx,0x8080
jne    804c6c5 <channel_massmode+0x3a5>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,ebx
push   ecx
push   edi
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048d98 <write@plt>
pop    ecx
pop    ebx
lea    eax,[ebp-0x818]
push   eax
push   edi
call   8048c68 <strcpy@plt>
jmp    804c5d0 <channel_massmode+0x2b0>
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0xc24],eax
je     804c70e <channel_massmode+0x3ee>
cmp    BYTE PTR [eax],0x0
jne    804c71b <channel_massmode+0x3fb>
test   esi,esi
jne    804c512 <channel_massmode+0x1f2>
jmp    804c524 <channel_massmode+0x204>
sub    esp,0x8
push   0x2a
push   eax
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
setne  al
and    eax,0xff
mov    DWORD PTR [ebp-0xc38],eax
mov    eax,DWORD PTR [ebp-0xc20]
mov    esi,DWORD PTR [eax+0x1c]
jmp    804c70e <channel_massmode+0x3ee>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x8067364
lea    eax,[ebp-0x818]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
mov    eax,DWORD PTR [esi+0x3c]
push   eax
lea    eax,[ebp-0x818]
push   eax
call   8057c30 <Strcat>
or     DWORD PTR [esi+0x4],0x800
inc    DWORD PTR [ebp-0xc28]
add    esp,0x10
jmp    804c508 <channel_massmode+0x1e8>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
push   edx
push   eax
call   8062c50 <get_userlevel>
mov    DWORD PTR [ebp-0xc34],eax
mov    eax,DWORD PTR [ebp-0xc38]
xor    ebx,ebx
add    esp,0x10
test   eax,eax
je     804c830 <channel_massmode+0x510>
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebp-0xc24]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804c4cc <channel_massmode+0x1ac>
cmp    BYTE PTR [ebp-0xc1a],0x76
je     804c81d <channel_massmode+0x4fd>
cmp    BYTE PTR [ebp-0xc19],0x2b
je     804c808 <channel_massmode+0x4e8>
cmp    BYTE PTR [ebp-0xc19],0x2d
jne    804c4cc <channel_massmode+0x1ac>
mov    eax,DWORD PTR [ebp-0xc30]
cmp    DWORD PTR [ebp-0xc34],eax
jge    804c4cc <channel_massmode+0x1ac>
mov    ebx,0x1
jmp    804c4cc <channel_massmode+0x1ac>
mov    eax,DWORD PTR [ebp-0xc30]
cmp    DWORD PTR [ebp-0xc34],eax
jl     804c7df <channel_massmode+0x4bf>
mov    ebx,0x1
jmp    804c7df <channel_massmode+0x4bf>
mov    ebx,0x1
jmp    804c7d6 <channel_massmode+0x4b6>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [esi+0x3c]
push   eax
mov    eax,DWORD PTR [ebp-0xc24]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804c4cc <channel_massmode+0x1ac>
cmp    BYTE PTR [ebp-0xc19],0x2d
jne    804c7fe <channel_massmode+0x4de>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0xc24]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804c4cc <channel_massmode+0x1ac>
jmp    804c7fe <channel_massmode+0x4de>
mov    esi,esi
mov    eax,DWORD PTR [ebp+0x10]
test   DWORD PTR [esi+0x4],eax
je     804c4ac <channel_massmode+0x18c>
mov    ebx,0x1
jmp    804c4ac <channel_massmode+0x18c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x10]
test   DWORD PTR [esi+0x4],eax
jne    804c49f <channel_massmode+0x17f>
mov    ebx,0x1
jmp    804c49f <channel_massmode+0x17f>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x434
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b050 <find_channel>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
je     804c94d <channel_massunbanfrom+0x8d>
sub    esp,0x8
push   0xc
push   0x0
call   8063d20 <get_int_varc>
mov    ebx,DWORD PTR [ebx+0x18]
add    esp,0x10
test   ebx,ebx
mov    edi,eax
mov    DWORD PTR [ebp-0x42c],0x0
je     804c947 <channel_massunbanfrom+0x87>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
xor    esi,esi
test   ebx,ebx
mov    WORD PTR [ebp-0x28],0x2d
mov    BYTE PTR [ebp-0x428],0x0
je     804c927 <channel_massunbanfrom+0x67>
cmp    esi,edi
jl     804c960 <channel_massunbanfrom+0xa0>
lea    eax,[ebp-0x428]
push   eax
lea    eax,[ebp-0x28]
push   eax
push   0x806e50a
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80613b0 <sendmode>
add    esp,0x10
test   ebx,ebx
jne    804c910 <channel_massunbanfrom+0x50>
mov    eax,DWORD PTR [ebp-0x42c]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804c9cb <channel_massunbanfrom+0x10b>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     804c98b <channel_massunbanfrom+0xcb>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x10]
cmp    eax,DWORD PTR [ebp+0x10]
jle    804c9cb <channel_massunbanfrom+0x10b>
sub    esp,0x8
push   0x806e330
lea    eax,[ebp-0x28]
push   eax
call   8057c30 <Strcat>
pop    ecx
pop    eax
push   0x8067364
lea    eax,[ebp-0x428]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x8]
push   eax
lea    eax,[ebp-0x428]
push   eax
call   8057c30 <Strcat>
inc    esi
inc    DWORD PTR [ebp-0x42c]
add    esp,0x10
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
je     804c927 <channel_massunbanfrom+0x67>
cmp    esi,edi
jl     804c960 <channel_massunbanfrom+0xa0>
jmp    804c927 <channel_massunbanfrom+0x67>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x434
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b050 <find_channel>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
je     804ca6b <channel_massunban+0x8b>
sub    esp,0x8
push   0xc
push   0x0
call   8063d20 <get_int_varc>
mov    ebx,DWORD PTR [ebx+0x18]
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [ebp-0x430],eax
mov    DWORD PTR [ebp-0x42c],0x0
je     804ca65 <channel_massunban+0x85>
lea    edi,[ebp-0x428]
mov    esi,esi
xor    esi,esi
test   ebx,ebx
mov    WORD PTR [ebp-0x28],0x2d
mov    BYTE PTR [ebp-0x428],0x0
je     804ca4b <channel_massunban+0x6b>
cmp    esi,DWORD PTR [ebp-0x430]
jl     804ca80 <channel_massunban+0xa0>
push   edi
lea    eax,[ebp-0x28]
push   eax
push   0x806e50a
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80613b0 <sendmode>
add    esp,0x10
test   ebx,ebx
jne    804ca30 <channel_massunban+0x50>
mov    eax,DWORD PTR [ebp-0x42c]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804cb00 <channel_massunban+0x120>
mov    ecx,DWORD PTR [ebp+0x10]
test   ecx,ecx
je     804caab <channel_massunban+0xcb>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x10]
cmp    eax,DWORD PTR [ebp+0x10]
jle    804cadf <channel_massunban+0xff>
sub    esp,0x8
push   0x806e330
lea    eax,[ebp-0x28]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8067364
push   edi
call   8057c30 <Strcat>
pop    ecx
pop    eax
mov    edx,DWORD PTR [ebx+0x8]
push   edx
push   edi
call   8057c30 <Strcat>
inc    esi
inc    DWORD PTR [ebp-0x42c]
add    esp,0x10
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
je     804ca4b <channel_massunban+0x6b>
cmp    esi,DWORD PTR [ebp-0x430]
jl     804ca80 <channel_massunban+0xa0>
jmp    804ca4b <channel_massunban+0x6b>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804cadf <channel_massunban+0xff>
jmp    804ca97 <channel_massunban+0xb7>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x434
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b050 <find_channel>
mov    edi,eax
add    esp,0x10
xor    eax,eax
test   edi,edi
je     804cc1c <channel_unban+0xfc>
mov    ebx,DWORD PTR [edi+0x18]
test   ebx,ebx
mov    DWORD PTR [ebp-0x42c],0x0
je     804cc16 <channel_unban+0xf6>
xor    esi,esi
mov    WORD PTR [ebp-0x28],0x2d
mov    BYTE PTR [ebp-0x428],0x0
lea    esi,[esi+0x0]
test   ebx,ebx
je     804cbf2 <channel_unban+0xd2>
sub    esp,0x8
push   0xc
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    esi,eax
jge    804cbf2 <channel_unban+0xd2>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    ecx,DWORD PTR [ebx+0x8]
push   ecx
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     804cbb0 <channel_unban+0x90>
mov    ebx,DWORD PTR [ebx]
jmp    804cb70 <channel_unban+0x50>
jmp    804cbb0 <channel_unban+0x90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   0x806e330
lea    eax,[ebp-0x28]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8067364
lea    eax,[ebp-0x428]
push   eax
call   8057c30 <Strcat>
pop    ecx
pop    eax
mov    edx,DWORD PTR [ebx+0x8]
push   edx
lea    eax,[ebp-0x428]
push   eax
call   8057c30 <Strcat>
inc    esi
inc    DWORD PTR [ebp-0x42c]
add    esp,0x10
jmp    804cb9d <channel_unban+0x7d>
lea    eax,[ebp-0x428]
push   eax
lea    eax,[ebp-0x28]
push   eax
push   0x806e50a
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80613b0 <sendmode>
add    esp,0x10
test   ebx,ebx
jne    804cb5b <channel_unban+0x3b>
mov    eax,DWORD PTR [ebp-0x42c]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [esi+0x20]
test   eax,eax
mov    edi,DWORD PTR [ebp+0xc]
jne    804cc80 <find_chanuser+0x50>
mov    ebx,DWORD PTR [esi+0x1c]
test   ebx,ebx
je     804cc6f <find_chanuser+0x3f>
lea    esi,[esi+0x0]
cmp    ebx,DWORD PTR [esi+0x20]
je     804cc69 <find_chanuser+0x39>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x3c]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804cc79 <find_chanuser+0x49>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804cc50 <find_chanuser+0x20>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,ebx
mov    DWORD PTR [esi+0x20],ebx
jmp    804cc71 <find_chanuser+0x41>
sub    esp,0x8
mov    eax,DWORD PTR [eax+0x3c]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804cc46 <find_chanuser+0x16>
mov    eax,DWORD PTR [esi+0x20]
jmp    804cc71 <find_chanuser+0x41>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
mov    esi,DWORD PTR [ebp+0xc]
push   esi
mov    edi,DWORD PTR [ebp+0x10]
mov    DWORD PTR ds:0x8075d6c,0x804cca0
call   8048f78 <strlen@plt>
mov    ebx,eax
mov    DWORD PTR [esp],edi
call   8048f78 <strlen@plt>
lea    eax,[eax+ebx*1+0x48]
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    ebx,eax
mov    DWORD PTR [esp],esi
call   8048f78 <strlen@plt>
lea    eax,[eax+ebx*1+0x45]
mov    DWORD PTR [ebx+0x40],eax
pop    eax
pop    edx
push   esi
lea    eax,[ebx+0x44]
push   eax
call   8048c68 <strcpy@plt>
pop    esi
pop    eax
push   edi
mov    ecx,DWORD PTR [ebx+0x40]
push   ecx
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    eax,[ebx+0x3c]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x804cca0
call   80579d0 <mstrcpy>
mov    edx,DWORD PTR ds:0x8075c80
mov    eax,DWORD PTR [edx+0x1c]
mov    DWORD PTR [ebx],eax
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x38],eax
mov    DWORD PTR [ebx+0x34],eax
mov    DWORD PTR [ebx+0x30],eax
mov    DWORD PTR [ebx+0x2c],eax
mov    DWORD PTR [ebx+0x28],eax
mov    DWORD PTR [ebx+0x24],eax
mov    DWORD PTR [ebx+0x20],eax
mov    DWORD PTR [edx+0x1c],ebx
lea    esp,[ebp-0xc]
mov    eax,ebx
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edi+0x1c]
test   eax,eax
mov    esi,DWORD PTR [ebp+0xc]
lea    ebx,[edi+0x1c]
je     804cda0 <remove_chanuser+0x50>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR [eax+0x3c]
push   ecx
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804cda0 <remove_chanuser+0x50>
mov    ebx,DWORD PTR [ebx]
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    804cd70 <remove_chanuser+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,0x1
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     804cd8c <remove_chanuser+0x3c>
cmp    eax,DWORD PTR [edi+0x20]
mov    DWORD PTR [ebp-0x10],eax
je     804cdd3 <remove_chanuser+0x83>
mov    eax,DWORD PTR [ebx]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebx],eax
mov    eax,DWORD PTR [ebp-0x10]
sub    esp,0xc
add    eax,0x3c
push   eax
call   8057920 <MyFree>
lea    eax,[ebp-0x10]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
add    esp,0x10
jmp    804cd8c <remove_chanuser+0x3c>
mov    DWORD PTR [edi+0x20],0x0
jmp    804cdae <remove_chanuser+0x5e>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edi+0x1c]
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     804ce22 <delete_chanusers+0x42>
lea    esi,[ebp-0x10]
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [eax]
sub    esp,0xc
add    eax,0x3c
push   eax
call   8057920 <MyFree>
mov    DWORD PTR [esp],esi
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0x10],ebx
jne    804ce00 <delete_chanusers+0x20>
mov    DWORD PTR [edi+0x20],0x0
mov    DWORD PTR [edi+0x1c],0x0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x40]
push   eax
lea    eax,[edx+0x44]
push   eax
mov    eax,DWORD PTR [edx+0x3c]
push   eax
push   0x8067a31
push   0x8072920
call   8048f18 <sprintf@plt>
mov    esp,ebp
mov    eax,0x8072920
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804ce92 <add_mode+0x22>
mov    eax,DWORD PTR [ebp+0xc]
or     DWORD PTR [edx+0x4],eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
je     804cec3 <del_mode+0x23>
not    ebx
and    DWORD PTR [eax+0x4],ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x21c
test   BYTE PTR ds:0x8076f04,0x1
jne    804cef0 <do_seen+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
lea    ebx,[ebp+0x10]
push   ebx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80587f0 <get_channel>
mov    DWORD PTR [ebp-0x21c],eax
mov    eax,DWORD PTR [ebp+0x10]
add    esp,0x10
test   eax,eax
je     804cf15 <do_seen+0x45>
cmp    BYTE PTR [eax],0x0
jne    804cf28 <do_seen+0x58>
sub    esp,0x8
push   0x8068277
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
jmp    804cee5 <do_seen+0x15>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],eax
mov    esi,eax
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
jne    804cf4c <do_seen+0x7c>
sub    esp,0x8
push   0x8068294
jmp    804cf1d <do_seen+0x4d>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   esi
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804cfbc <do_seen+0xec>
mov    eax,ds:0x8075e74
push   esi
add    eax,0x220
push   eax
push   0x80682a1
lea    ebx,[ebp-0x218]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x23
je     804cfa7 <do_seen+0xd7>
push   edx
push   ebx
push   0x806a12d
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804cee5 <do_seen+0x15>
push   esi
push   ebx
push   0x806a12d
mov    ecx,DWORD PTR [ebp-0x21c]
push   ecx
call   8061360 <sendprivmsg>
jmp    804cf9f <do_seen+0xcf>
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   esi
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     804d130 <do_seen+0x260>
xor    eax,eax
mov    al,BYTE PTR [esi]
mov    al,BYTE PTR [eax+0x8071340]
mov    BYTE PTR [ebp-0x21d],al
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0xb44]
test   edi,edi
je     804d020 <do_seen+0x150>
xor    eax,eax
mov    al,BYTE PTR [edi+0x18]
mov    bl,BYTE PTR [eax+0x8071340]
cmp    BYTE PTR [ebp-0x21d],bl
je     804d110 <do_seen+0x240>
cmp    BYTE PTR [ebp-0x21d],bl
ja     804d02c <do_seen+0x15c>
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    804cffb <do_seen+0x12b>
push   eax
push   esi
push   0x80682b5
jmp    804cf78 <do_seen+0xa8>
xor    edi,edi
test   edi,edi
je     804d020 <do_seen+0x150>
mov    eax,DWORD PTR [edi+0x14]
cmp    eax,0x4
lea    ebx,[ebp-0x218]
ja     804cf87 <do_seen+0xb7>
jmp    DWORD PTR [eax*4+0x8068d10]
push   eax
push   esi
push   0x80682cc
jmp    804cf78 <do_seen+0xa8>
sub    esp,0x18
push   0x0
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edi+0x10]
push   eax
call   8057f50 <idle2str>
add    esp,0x14
push   eax
mov    eax,DWORD PTR [edi+0x8]
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
push   0x80682e4
lea    ebx,[ebp-0x218]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x20
jmp    804cf87 <do_seen+0xb7>
mov    eax,DWORD PTR [edi+0x8]
sub    esp,0xc
push   eax
sub    esp,0x8
push   0x0
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edi+0x10]
push   eax
call   8057f50 <idle2str>
add    esp,0x10
push   eax
mov    edi,DWORD PTR [edi+0x4]
push   edi
push   0x8068940
jmp    804d07b <do_seen+0x1ab>
sub    esp,0x18
push   0x0
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edi+0x10]
push   eax
call   8057f50 <idle2str>
add    esp,0x14
push   eax
mov    esi,DWORD PTR [edi+0x8]
push   esi
mov    ebx,DWORD PTR [edi+0x4]
push   ebx
push   0x8068980
jmp    804d07b <do_seen+0x1ab>
sub    esp,0x8
push   0x0
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edi+0x10]
push   eax
call   8057f50 <idle2str>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [edi+0x8]
push   eax
mov    eax,DWORD PTR [edi+0xc]
push   eax
mov    edi,DWORD PTR [edi+0x4]
push   edi
push   0x80689a0
jmp    804d07b <do_seen+0x1ab>
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[edi+0x18]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804d012 <do_seen+0x142>
jmp    804d02e <do_seen+0x15e>
lea    esi,[esi+0x0]
push   eax
push   esi
push   0x80682fd
jmp    804cf78 <do_seen+0xa8>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   8048f78 <strlen@plt>
add    eax,DWORD PTR [ebp+0x10]
add    esp,0x10
cmp    eax,0x46
mov    ebx,0x1
jbe    804d1a4 <print_help+0x64>
mov    al,BYTE PTR [esi]
test   al,al
mov    ecx,esi
je     804d18e <print_help+0x4e>
mov    dl,al
nop
lea    esi,[esi+eiz*1+0x0]
cmp    dl,0x1f
je     804d1b0 <print_help+0x70>
test   ebx,ebx
je     804d185 <print_help+0x45>
xor    eax,eax
mov    al,dl
mov    al,BYTE PTR [eax+0x8071340]
mov    BYTE PTR [ecx],al
inc    ecx
mov    al,BYTE PTR [ecx]
test   al,al
mov    dl,al
jne    804d170 <print_help+0x30>
push   eax
push   esi
push   0x806a12d
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    BYTE PTR [esi],0x0
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
test   ebx,ebx
sete   al
xor    ebx,ebx
mov    bl,al
jmp    804d175 <print_help+0x35>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   ecx
mov    ebx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ebx],0x3a
je     804d200 <do_help_callback+0x40>
mov    eax,ds:0x8074450
test   eax,eax
jne    804d1e0 <do_help_callback+0x20>
xor    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
push   eax
push   ebx
push   0x806a12d
mov    eax,ds:0x807444c
push   eax
call   80614d0 <send_to_user>
inc    DWORD PTR ds:0x8074458
add    esp,0x10
jmp    804d1d6 <do_help_callback+0x16>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8074450
test   edx,edx
je     804d245 <do_help_callback+0x85>
mov    eax,ds:0x8074458
test   eax,eax
je     804d22d <do_help_callback+0x6d>
sub    esp,0x8
mov    eax,ds:0x807444c
push   0x8068319
push   eax
call   80614d0 <send_to_user>
mov    eax,0x1
jmp    804d1d8 <do_help_callback+0x18>
sub    esp,0x8
push   0x806832a
mov    eax,ds:0x807444c
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804d213 <do_help_callback+0x53>
sub    esp,0x8
inc    ebx
push   ebx
mov    eax,ds:0x8074454
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804d1d6 <do_help_callback+0x16>
push   eax
push   ebx
push   0x8068347
mov    eax,ds:0x807444c
push   eax
call   80614d0 <send_to_user>
mov    DWORD PTR [esp],ebx
call   804f620 <level_needed>
add    esp,0x10
test   eax,eax
jle    804d297 <do_help_callback+0xd7>
push   ecx
push   eax
push   0x8068357
mov    edx,DWORD PTR ds:0x807444c
push   edx
call   80614d0 <send_to_user>
add    esp,0x10
inc    DWORD PTR ds:0x8074450
jmp    804d1d6 <do_help_callback+0x16>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x228
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8062d80 <max_userlevel>
mov    edx,DWORD PTR [ebp+0x10]
add    esp,0x10
test   edx,edx
mov    DWORD PTR [ebp-0x21c],eax
je     804d2de <do_help+0x2e>
cmp    BYTE PTR [edx],0x0
jne    804d4b2 <do_help+0x202>
sub    esp,0x8
push   0x80689e0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
xor    esi,esi
mov    BYTE PTR [ebp-0x218],0x0
add    esp,0x10
nop
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR ds:0x8070260
xor    edi,edi
test   ecx,ecx
mov    DWORD PTR [ebp-0x220],0x64
je     804d348 <do_help+0x98>
mov    ebx,0x8070260
nop
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
mov    al,BYTE PTR [ebx+0xc]
cmp    eax,DWORD PTR [ebp-0x220]
jge    804d337 <do_help+0x87>
cmp    eax,esi
jle    804d337 <do_help+0x87>
mov    DWORD PTR [ebp-0x220],eax
cmp    eax,esi
je     804d490 <do_help+0x1e0>
add    ebx,0x10
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    804d320 <do_help+0x70>
test   edi,edi
je     804d47b <do_help+0x1cb>
sub    esp,0x8
push   esi
push   0x8068a00
call   80576b0 <debug>
mov    eax,ds:0x8070260
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x224],edi
je     804d399 <do_help+0xe9>
xor    ebx,ebx
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    eax,eax
mov    al,BYTE PTR [ebx+0x807026c]
cmp    eax,esi
je     804d3f0 <do_help+0x140>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804d380 <do_help+0xd0>
push   ecx
push   0x1f4
lea    eax,[ebp-0x218]
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804d140 <print_help>
add    esp,0x10
cmp    esi,0x64
je     804d3c9 <do_help+0x119>
mov    esi,DWORD PTR [ebp-0x220]
cmp    esi,DWORD PTR [ebp-0x21c]
jle    804d300 <do_help+0x50>
sub    esp,0x8
push   0x8068319
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebp-0x224],edi
je     804d40f <do_help+0x15f>
sub    esp,0x8
push   0x8067271
lea    edx,[ebp-0x218]
push   edx
call   8057c30 <Strcat>
add    esp,0x10
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
call   8048f78 <strlen@plt>
add    esp,0xc
push   eax
lea    eax,[ebp-0x218]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804d140 <print_help>
add    esp,0x10
cmp    BYTE PTR [ebp-0x218],0x0
jne    804d45c <do_help+0x1ac>
mov    DWORD PTR [ebp-0x218],0x20202020
mov    DWORD PTR [ebp-0x214],0x20202020
mov    DWORD PTR [ebp-0x210],0x202020
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
lea    edx,[ebp-0x218]
push   edx
call   8057c30 <Strcat>
dec    edi
add    esp,0x10
jmp    804d38c <do_help+0xdc>
mov    esi,DWORD PTR [ebp-0x220]
jmp    804d300 <do_help+0x50>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
test   edi,edi
je     804d49a <do_help+0x1ea>
inc    edi
jmp    804d33f <do_help+0x8f>
push   edx
push   esi
push   0x8068368
lea    eax,[ebp-0x218]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    804d494 <do_help+0x1e4>
movsx  eax,BYTE PTR [edx]
cmp    eax,0xff
ja     804d794 <do_help+0x4e4>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     804d5fe <do_help+0x34e>
sub    esp,0xc
push   edx
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     804d5e7 <do_help+0x337>
mov    esi,DWORD PTR [eax]
cmp    esi,DWORD PTR [ebp-0x21c]
jle    804d4fc <do_help+0x24c>
mov    esi,DWORD PTR [ebp-0x21c]
test   esi,esi
jle    804d5dc <do_help+0x32c>
push   eax
push   esi
push   0x8068a40
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,ds:0x8070260
add    esp,0x10
test   eax,eax
mov    BYTE PTR [ebp-0x218],0x0
mov    DWORD PTR [ebp-0x224],0x0
je     804d597 <do_help+0x2e7>
xor    ebx,ebx
xor    eax,eax
mov    al,BYTE PTR [ebx+0x807026c]
cmp    eax,esi
jg     804d58a <do_help+0x2da>
mov    eax,DWORD PTR [ebp-0x224]
test   eax,eax
jne    804d5c0 <do_help+0x310>
sub    esp,0xc
mov    edi,DWORD PTR [ebx+0x8070260]
push   edi
inc    DWORD PTR [ebp-0x224]
call   8048f78 <strlen@plt>
add    esp,0xc
push   eax
lea    eax,[ebp-0x218]
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   804d140 <print_help>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
lea    edx,[ebp-0x218]
push   edx
call   8057c30 <Strcat>
add    esp,0x10
add    ebx,0x10
mov    edi,DWORD PTR [ebx+0x8070260]
test   edi,edi
jne    804d533 <do_help+0x283>
mov    ecx,DWORD PTR [ebp-0x224]
test   ecx,ecx
je     804d3c9 <do_help+0x119>
push   edx
push   0x3a
lea    eax,[ebp-0x218]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804d140 <print_help>
add    esp,0x10
jmp    804d3c9 <do_help+0x119>
sub    esp,0x8
push   0x8067271
lea    edx,[ebp-0x218]
push   edx
call   8057c30 <Strcat>
add    esp,0x10
jmp    804d549 <do_help+0x299>
mov    esi,DWORD PTR [ebp-0x21c]
jmp    804d504 <do_help+0x254>
sub    esp,0x8
mov    eax,ds:0x8070430
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    804d3da <do_help+0x12a>
sub    esp,0x8
push   0x2a
push   edx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     804d717 <do_help+0x467>
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   0x8068a80
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    BYTE PTR [ebp-0x218],0x0
mov    DWORD PTR [ebp-0x224],0x0
call   80614d0 <send_to_user>
mov    eax,ds:0x8070260
add    esp,0x10
test   eax,eax
je     804d6d0 <do_help+0x420>
xor    ebx,ebx
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    804d6bf <do_help+0x40f>
xor    eax,eax
mov    al,BYTE PTR [ebx+0x807026c]
cmp    eax,DWORD PTR [ebp-0x21c]
jg     804d6bf <do_help+0x40f>
mov    edi,DWORD PTR [ebp-0x224]
test   edi,edi
jne    804d6fb <do_help+0x44b>
sub    esp,0xc
mov    esi,DWORD PTR [ebx+0x8070260]
push   esi
inc    DWORD PTR [ebp-0x224]
call   8048f78 <strlen@plt>
add    esp,0xc
push   eax
lea    edx,[ebp-0x218]
push   edx
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   804d140 <print_help>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
lea    eax,[ebp-0x218]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804d64a <do_help+0x39a>
mov    eax,DWORD PTR [ebp-0x224]
test   eax,eax
je     804d6e5 <do_help+0x435>
push   eax
push   0x1f4
jmp    804d5a8 <do_help+0x2f8>
sub    esp,0x8
push   0x806f231
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
jmp    804d5b8 <do_help+0x308>
sub    esp,0x8
push   0x8067271
lea    eax,[ebp-0x218]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
jmp    804d67e <do_help+0x3ce>
sub    esp,0x8
push   0x0
push   0x8068376
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     804d784 <do_help+0x4d4>
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    DWORD PTR ds:0x8074450,0x0
mov    DWORD PTR ds:0x8074458,0x0
call   8057b00 <chop>
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR ds:0x807444c,edx
pop    edx
pop    ecx
push   eax
push   0x8068ac0
mov    ds:0x8074454,eax
call   80576b0 <debug>
pop    esi
pop    edi
push   0x804d1c0
push   ebx
call   80618f0 <readline>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
jmp    804d3da <do_help+0x12a>
push   esi
push   0x8068376
push   0x8071298
jmp    804d3d1 <do_help+0x121>
xor    eax,eax
jmp    804d4d0 <do_help+0x220>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    edi,eax
pop    eax
pop    edx
push   0x1
push   edi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804d882 <on_kick+0xe2>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    ebx,eax
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
test   eax,eax
je     804d7e9 <on_kick+0x49>
cmp    BYTE PTR [eax],0x3a
je     804da10 <on_kick+0x270>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
pop    eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   0x8075da0
push   ebx
push   0x8068382
push   esi
call   804b970 <send_spy>
add    esp,0x18
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804d960 <on_kick+0x1c0>
test   BYTE PTR [esi+0x38d],0x8
jne    804d890 <on_kick+0xf0>
sub    esp,0x8
push   ebx
push   esi
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
je     804d878 <on_kick+0xd8>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   0x4
mov    edx,DWORD PTR ds:0x8075d20
push   edx
mov    edi,DWORD PTR [ebp+0x8]
push   edi
push   ecx
push   eax
call   804ce40 <get_nuh>
pop    edi
pop    edx
push   eax
push   ebx
call   8063ba0 <make_seen>
add    esp,0x20
sub    esp,0x8
push   ebx
push   esi
call   804cd50 <remove_chanuser>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   edi
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
mov    ds:0x80762a4,eax
je     804d8b9 <on_kick+0x119>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x4f
jg     804d8cd <on_kick+0x12d>
sub    esp,0xc
push   0x8075da0
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
je     804d936 <on_kick+0x196>
sub    esp,0xc
push   ebx
call   804c010 <find_nuh>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     804d840 <on_kick+0xa0>
sub    esp,0x8
push   edi
push   eax
call   8063010 <get_protlevel>
add    esp,0x10
test   eax,eax
je     804d840 <on_kick+0xa0>
sub    esp,0xc
push   0x8075da0
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
je     804d922 <on_kick+0x182>
push   eax
push   edi
push   ebx
push   0x806839f
call   8061640 <send_to_server>
add    esp,0x10
jmp    804d840 <on_kick+0xa0>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058500 <prot_action>
add    esp,0x10
jmp    804d90d <on_kick+0x16d>
push   edx
push   0x10
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
je     804d8cd <on_kick+0x12d>
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058260 <mass_action>
add    esp,0x10
jmp    804d8cd <on_kick+0x12d>
nop
sub    esp,0xc
lea    ebx,[esi+0x14]
push   ebx
call   8057920 <MyFree>
pop    eax
pop    edx
mov    edi,DWORD PTR [ebp+0x8]
push   edi
push   ebx
mov    DWORD PTR ds:0x8075d6c,0x804d7a0
call   80579d0 <mstrcpy>
mov    al,BYTE PTR [esi+0x38d]
or     eax,0x22
and    eax,0xffffffe7
add    esp,0xc
mov    BYTE PTR [esi+0x38d],al
push   0x1
mov    eax,DWORD PTR [esi+0x8]
test   eax,eax
je     804d9a5 <on_kick+0x205>
cmp    BYTE PTR [eax],0x0
jne    804d9a7 <on_kick+0x207>
xor    eax,eax
push   eax
mov    ebx,DWORD PTR [esi+0x4]
push   ebx
call   804b200 <join_channel>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0xb38]
add    esp,0x10
test   eax,eax
je     804d882 <on_kick+0xe2>
mov    al,BYTE PTR [eax+0x38d]
shr    al,0x4
and    eax,0x3
cmp    eax,0x2
jne    804d882 <on_kick+0xe2>
mov    esi,DWORD PTR [edx+0xb34]
test   esi,esi
je     804da05 <on_kick+0x265>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [esi+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     804da05 <on_kick+0x265>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804d9f0 <on_kick+0x250>
mov    DWORD PTR [edx+0xb38],esi
jmp    804d882 <on_kick+0xe2>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    804d7e9 <on_kick+0x49>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8057d10 <getuh>
add    esp,0x10
push   eax
push   0x8075da0
push   0x80683ac
mov    ecx,DWORD PTR ds:0x8075c80
push   ecx
call   804b970 <send_spy>
mov    eax,ds:0x8075c80
add    esp,0x10
test   BYTE PTR [eax+0x38d],0x8
je     804da86 <on_join+0x66>
mov    edx,DWORD PTR ds:0x80762a4
test   edx,edx
mov    edi,DWORD PTR [eax+0x4]
je     804dbe0 <on_join+0x1c0>
mov    eax,ds:0x80766c4
test   eax,eax
je     804da90 <on_join+0x70>
sub    esp,0x8
mov    eax,ds:0x8075c80
push   eax
push   esi
call   80583e0 <shit_action>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
push   0x11
mov    eax,ds:0x8075c80
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804dabc <on_join+0x9c>
sub    esp,0x8
push   edi
push   esi
call   8062f10 <is_aop>
add    esp,0x10
test   eax,eax
jne    804dba0 <on_join+0x180>
sub    esp,0x8
push   0x29
mov    eax,ds:0x8075c80
push   eax
mov    DWORD PTR [ebp-0x14],0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804da86 <on_join+0x66>
dec    eax
je     804db7f <on_join+0x15f>
sub    esp,0xc
push   0x8075da0
mov    DWORD PTR ds:0x8075d6c,0x804da20
call   8048f78 <strlen@plt>
add    eax,0x5
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
pop    edi
mov    ebx,eax
pop    eax
push   0x8075da0
lea    eax,[ebx+0x4]
push   eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR ds:0x8075c80
mov    esi,DWORD PTR [edx+0x384]
or     DWORD PTR ds:0x8075460,0x1
add    esp,0x10
test   esi,esi
jne    804db3d <on_join+0x11d>
mov    eax,ds:0x8075d20
sub    eax,0x3
mov    DWORD PTR [edx+0x384],eax
mov    ecx,DWORD PTR [ebp-0x14]
test   ecx,ecx
jne    804db4e <on_join+0x12e>
mov    eax,DWORD PTR [edx+0x380]
test   eax,eax
jne    804db61 <on_join+0x141>
mov    eax,DWORD PTR [edx+0x380]
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [edx+0x380],ebx
jmp    804da86 <on_join+0x66>
mov    edx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
je     804db78 <on_join+0x158>
lea    esi,[esi+eiz*1+0x0]
mov    edx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    804db70 <on_join+0x150>
mov    DWORD PTR [edx],ebx
jmp    804da86 <on_join+0x66>
sub    esp,0x8
push   edi
push   esi
call   8062f80 <is_avoice>
add    esp,0x10
test   eax,eax
je     804da86 <on_join+0x66>
mov    DWORD PTR [ebp-0x14],0x1
jmp    804dae1 <on_join+0xc1>
sub    esp,0xc
push   esi
call   8063280 <password_needed>
add    esp,0x10
test   eax,eax
je     804dbc4 <on_join+0x1a4>
sub    esp,0xc
push   esi
call   8063210 <verified>
add    esp,0x10
test   eax,eax
je     804dabc <on_join+0x9c>
push   eax
push   0x8075da0
push   0x8067900
push   edi
call   80613b0 <sendmode>
jmp    804da86 <on_join+0x66>
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x16
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804dc39 <on_join+0x219>
mov    eax,ds:0x8075c80
mov    ebx,DWORD PTR [eax+0x18]
test   ebx,ebx
mov    DWORD PTR [ebp-0x10],0x0
je     804dc2e <on_join+0x20e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     804dced <on_join+0x2cd>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804dc10 <on_join+0x1f0>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
jne    804dce0 <on_join+0x2c0>
sub    esp,0x8
push   0x20
mov    eax,ds:0x8075c80
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804da6e <on_join+0x4e>
sub    esp,0x8
push   0x19
push   esi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    804dc78 <on_join+0x258>
sub    esp,0x8
push   0x2
push   esi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     804dca7 <on_join+0x287>
push   eax
push   esi
push   ebx
push   esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   edi
call   8058b10 <deop_siteban>
add    esp,0xc
push   0x80683bf
push   ebx
push   esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   edi
call   80613f0 <sendkick>
jmp    804da86 <on_join+0x66>
sub    esp,0x8
push   0x12
push   esi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    804dc78 <on_join+0x258>
sub    esp,0x8
push   0x16
push   esi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     804da6e <on_join+0x4e>
jmp    804dc78 <on_join+0x258>
jmp    804dce0 <on_join+0x2c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   eax
push   0x80683dc
push   0x8075da0
jmp    804dc9c <on_join+0x27c>
mov    DWORD PTR [ebp-0x10],0x1
jmp    804dc2e <on_join+0x20e>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x78
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
sub    esp,0x8
push   0x21
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x8069e64
lea    esi,[ebp-0x68]
push   esi
call   8048f18 <sprintf@plt>
add    esp,0x18
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x3
mov    eax,ds:0x8075d20
push   eax
push   0x80671de
push   ebx
push   0x8075da0
call   8063ba0 <make_seen>
add    esp,0x18
push   0x80683fa
push   0x0
mov    eax,ds:0x8075d20
push   eax
push   0x80671de
push   esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8063ba0 <make_seen>
add    esp,0x14
push   ebx
call   804af10 <check_nickflood>
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x8075da0
push   0x8068402
push   ebx
call   804b8e0 <send_common_spy>
add    esp,0x18
push   esi
push   ebx
call   80552b0 <change_dccnick>
pop    ecx
pop    edi
mov    eax,ds:0x8075e74
push   ebx
add    eax,0xb2c
push   eax
call   8063790 <find_time>
add    esp,0x10
test   eax,eax
je     804dde1 <on_nick+0xe1>
lea    ebx,[eax+0x8]
sub    esp,0xc
push   ebx
call   8057920 <MyFree>
pop    eax
pop    edx
push   esi
push   ebx
mov    DWORD PTR ds:0x8075d6c,0x804dd00
call   80579d0 <mstrcpy>
add    esp,0x10
sub    esp,0x8
mov    eax,ds:0x8075e74
push   0x8075da0
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
sete   al
and    eax,0xff
test   eax,eax
mov    DWORD PTR [ebp-0x6c],eax
jne    804dec4 <on_nick+0x1c4>
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0xb34]
test   edi,edi
je     804de76 <on_nick+0x176>
sub    esp,0x8
push   0x8075da0
push   edi
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804de70 <on_nick+0x170>
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x3c]
push   eax
call   8048f78 <strlen@plt>
mov    ebx,eax
pop    eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    ebx,eax
jb     804dea0 <on_nick+0x1a0>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
mov    ecx,DWORD PTR [esi+0x3c]
push   ecx
call   8048c68 <strcpy@plt>
mov    ebx,DWORD PTR [ebp-0x6c]
add    esp,0x10
test   ebx,ebx
je     804de80 <on_nick+0x180>
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    804de20 <on_nick+0x120>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
push   edi
push   esi
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   80583e0 <shit_action>
add    esp,0x10
jmp    804de70 <on_nick+0x170>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    ebx,[esi+0x3c]
push   ebx
call   8057920 <MyFree>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
mov    DWORD PTR ds:0x8075d6c,0x804dd00
call   80579d0 <mstrcpy>
jmp    804de66 <on_nick+0x166>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,ds:0x8075e74
push   eax
call   80595b0 <setbotnick>
add    esp,0x10
jmp    804de11 <on_nick+0x111>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1c
mov    eax,ds:0x80766c4
test   eax,eax
mov    edi,DWORD PTR [ebp+0x8]
je     804df00 <on_msg+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
mov    eax,ds:0x8075e74
push   edi
add    eax,0xb2c
push   eax
call   8063790 <find_time>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804df25 <on_msg+0x45>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xc],eax
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x23
sete   al
and    eax,0xff
test   eax,eax
mov    DWORD PTR [ebp-0x1c],eax
je     804df53 <on_msg+0x73>
sub    esp,0x8
push   0x13
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8063dc0 <get_int_var>
add    esp,0x10
test   eax,eax
je     804e538 <on_msg+0x658>
sub    esp,0xc
push   edi
call   8062d80 <max_userlevel>
add    esp,0x10
cmp    eax,0x64
mov    DWORD PTR [ebp-0x20],eax
jg     804def5 <on_msg+0x15>
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0x10]
push   esi
push   0x8072980
call   8048c68 <strcpy@plt>
pop    ecx
pop    ebx
push   0x1
push   edi
call   8055250 <search_list>
mov    DWORD PTR [ebp-0x10],eax
pop    eax
pop    edx
push   0x1d
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x18],0x1
je     804dfa7 <on_msg+0xc7>
mov    edx,DWORD PTR ds:0x8075d80
mov    DWORD PTR [ebp-0x18],edx
sub    esp,0xc
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     804def5 <on_msg+0x15>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804e515 <on_msg+0x635>
mov    eax,DWORD PTR [ebp-0x14]
mov    dl,BYTE PTR [eax]
mov    eax,ds:0x8075e74
cmp    dl,BYTE PTR [eax+0x380]
je     804e501 <on_msg+0x621>
test   dl,dl
mov    esi,DWORD PTR [ebp-0x14]
je     804e024 <on_msg+0x144>
mov    al,BYTE PTR [esi]
nop
movsx  edx,al
cmp    edx,0xff
ja     804e4f0 <on_msg+0x610>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x834]
mov    BYTE PTR [esi],al
inc    esi
mov    al,BYTE PTR [esi]
test   al,al
jne    804e000 <on_msg+0x120>
mov    eax,ds:0x8070260
test   eax,eax
je     804e079 <on_msg+0x199>
xor    ebx,ebx
nop
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
jne    804e040 <on_msg+0x160>
test   BYTE PTR [ebx+0x807026d],0x2
jne    804e06c <on_msg+0x18c>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804e283 <on_msg+0x3a3>
mov    eax,DWORD PTR [ebx+0x8070264]
test   eax,eax
jne    804e26b <on_msg+0x38b>
add    ebx,0x10
mov    esi,DWORD PTR [ebx+0x8070260]
test   esi,esi
jne    804e030 <on_msg+0x150>
mov    ecx,DWORD PTR [ebp-0x1c]
test   ecx,ecx
jne    804e256 <on_msg+0x376>
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
je     804e09e <on_msg+0x1be>
mov    eax,DWORD PTR [ebp-0x14]
cmp    BYTE PTR [eax],0x0
je     804e09e <on_msg+0x1be>
mov    eax,DWORD PTR [ebp-0x20]
test   eax,eax
jne    804e246 <on_msg+0x366>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     804e1f6 <on_msg+0x316>
mov    edx,DWORD PTR [ebp-0x10]
test   BYTE PTR [edx+0x208],0x1
je     804e1f6 <on_msg+0x316>
mov    esi,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
test   esi,esi
mov    ds:0x8076f00,eax
je     804e11e <on_msg+0x23e>
lea    esi,[esi+0x0]
mov    ecx,DWORD PTR [esi+0x3b0]
test   ecx,ecx
mov    DWORD PTR ds:0x8075e74,esi
jne    804e1cd <on_msg+0x2ed>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
je     804e118 <on_msg+0x238>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x208]
and    eax,0x21
cmp    eax,0x21
je     804e190 <on_msg+0x2b0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804e100 <on_msg+0x220>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804e0d0 <on_msg+0x1f0>
xor    esi,esi
mov    eax,ds:0x8076f08
mov    edx,DWORD PTR ds:0x8076f00
cmp    esi,eax
mov    DWORD PTR ds:0x8075e74,edx
mov    ebx,DWORD PTR ds:0x8075d68
jge    804def5 <on_msg+0x15>
cmp    BYTE PTR [ebx],0x0
je     804e14a <on_msg+0x26a>
cmp    BYTE PTR [ebx+0x8],0x3
je     804e15a <on_msg+0x27a>
inc    esi
add    ebx,0x258
cmp    esi,eax
jl     804e13f <on_msg+0x25f>
jmp    804def5 <on_msg+0x15>
sub    esp,0xc
mov    eax,ds:0x8075e74
push   0x8072980
add    eax,0x220
push   eax
push   0x8075da0
push   0x806841c
push   ebx
call   805a590 <send_to_link>
add    esp,0x20
mov    eax,ds:0x8076f08
jmp    804e14a <on_msg+0x26a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    ebx,DWORD PTR [ebp-0x10]
je     804e1b8 <on_msg+0x2d8>
push   0x8072980
push   0x8075da0
push   0x806844f
lea    eax,[ebx+0x20c]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804e112 <on_msg+0x232>
mov    eax,ds:0x80762a4
test   eax,eax
je     804e195 <on_msg+0x2b5>
test   BYTE PTR [eax+0x3c],0x1
je     804e112 <on_msg+0x232>
jmp    804e195 <on_msg+0x2b5>
sub    esp,0xc
push   0x8072980
lea    eax,[esi+0x220]
push   eax
push   0x806cb93
push   0x806842b
mov    edi,DWORD PTR [ecx]
push   edi
call   8061260 <send_to_socket>
add    esp,0x20
jmp    804e0e4 <on_msg+0x204>
sub    esp,0x8
push   0x22
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804e229 <on_msg+0x349>
sub    esp,0x8
movsx  eax,BYTE PTR ds:0x8072980
push   eax
push   0x806843f
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    804def5 <on_msg+0x15>
push   ebx
push   0x8072980
push   0x8075da0
push   0x8068445
call   804b650 <send_spymsg>
add    esp,0x10
jmp    804def5 <on_msg+0x15>
sub    esp,0x8
push   0x8068457
push   edi
call   80614d0 <send_to_user>
jmp    804e23e <on_msg+0x35e>
push   edx
push   0x8072980
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edi
call   804f340 <on_public>
jmp    804def5 <on_msg+0x15>
sub    esp,0x8
mov    esi,DWORD PTR [ebp-0x14]
push   esi
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804e06c <on_msg+0x18c>
mov    eax,DWORD PTR [ebx+0x807026c]
movzx  esi,al
test   eax,0x1000
je     804e29e <on_msg+0x3be>
mov    ecx,DWORD PTR [ebp-0x1c]
test   ecx,ecx
jne    804e4d0 <on_msg+0x5f0>
cmp    DWORD PTR [ebp-0x20],esi
jge    804e2ce <on_msg+0x3ee>
mov    edx,DWORD PTR [ebp-0x1c]
test   edx,edx
je     804def5 <on_msg+0x15>
test   eax,0x200
jne    804def5 <on_msg+0x15>
push   eax
push   0x8072980
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edi
call   804f340 <on_public>
jmp    804e23e <on_msg+0x35e>
sub    esp,0xc
push   edi
call   8063280 <password_needed>
add    esp,0x10
test   eax,eax
je     804e2eb <on_msg+0x40b>
test   BYTE PTR [ebx+0x807026d],0x4
jne    804e498 <on_msg+0x5b8>
mov    eax,DWORD PTR [ebx+0x807026c]
and    eax,0x100
mov    ds:0x8075e78,eax
cmp    BYTE PTR [edi],0x24
je     804e489 <on_msg+0x5a9>
mov    eax,ds:0x8075e78
test   eax,eax
je     804e33c <on_msg+0x45c>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     804e320 <on_msg+0x440>
mov    edx,DWORD PTR [ebp-0x10]
test   BYTE PTR [edx+0x208],0x10
je     804e33c <on_msg+0x45c>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0x10]
push   ecx
push   edi
mov    DWORD PTR ds:0x8075e78,0x1
call   8055b40 <dcc_chat>
jmp    804def5 <on_msg+0x15>
sub    esp,0x8
push   0x21
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    804e466 <on_msg+0x586>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     804e35f <on_msg+0x47f>
cmp    BYTE PTR [eax],0x0
jne    804e361 <on_msg+0x481>
xor    eax,eax
test   eax,eax
je     804e447 <on_msg+0x567>
push   esi
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edi
call   DWORD PTR [ebx+0x8070268]
mov    eax,ds:0x8075e74
add    eax,0xb94
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    ecx,0x12
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+ecx*4+0xb48]
mov    DWORD PTR [edx+ecx*4+0xb4c],eax
dec    ecx
jns    804e396 <on_msg+0x4b6>
sub    esp,0xc
push   edi
call   8057cb0 <gethost>
mov    esi,eax
mov    ebx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [esp],eax
mov    DWORD PTR ds:0x8075d6c,0x804dee0
call   8048f78 <strlen@plt>
add    eax,0x2d
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    edx,DWORD PTR ds:0x80762a4
add    esp,0xc
test   edx,edx
mov    DWORD PTR [ebx+0xb48],eax
push   esi
je     804e443 <on_msg+0x563>
mov    eax,DWORD PTR [edx+0x4]
test   eax,eax
je     804e443 <on_msg+0x563>
mov    eax,DWORD PTR [edx+0x3c]
shr    eax,0x9
and    eax,0xff
test   edx,edx
push   eax
je     804e43c <on_msg+0x55c>
mov    eax,DWORD PTR [edx+0x4]
test   eax,eax
je     804e43c <on_msg+0x55c>
lea    eax,[edx+0x8]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x8068463
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0xb48]
push   edi
call   8048f18 <sprintf@plt>
jmp    804def5 <on_msg+0x15>
mov    eax,0x806847e
jmp    804e40a <on_msg+0x52a>
xor    eax,eax
jmp    804e3fb <on_msg+0x51b>
test   BYTE PTR [ebx+0x807026d],0x8
je     804e369 <on_msg+0x489>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   edi
call   804f840 <usage>
jmp    804def5 <on_msg+0x15>
sub    esp,0xc
push   esi
mov    edx,DWORD PTR [ebp-0x14]
push   edx
mov    eax,DWORD PTR [ebp-0x20]
push   eax
push   0x8075da0
push   0x8068486
call   804b700 <send_statmsg>
add    esp,0x20
jmp    804e353 <on_msg+0x473>
mov    DWORD PTR ds:0x8075e78,0x0
jmp    804e304 <on_msg+0x424>
sub    esp,0xc
push   edi
call   8063210 <verified>
add    esp,0x10
test   eax,eax
jne    804e2eb <on_msg+0x40b>
test   BYTE PTR [ebx+0x807026d],0x2
jne    804e4c0 <on_msg+0x5e0>
mov    eax,DWORD PTR [ebp-0x1c]
test   eax,eax
jne    804def5 <on_msg+0x15>
sub    esp,0x8
push   0x8068b00
jmp    804e24e <on_msg+0x36e>
lea    esi,[esi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   0x8068b40
call   80576b0 <debug>
jmp    804def5 <on_msg+0x15>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edx
call   8048cc8 <___toupper@plt>
add    esp,0x10
jmp    804e01b <on_msg+0x13b>
inc    DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x18],0x1
mov    eax,DWORD PTR [ebp-0x14]
mov    dl,BYTE PTR [eax]
jmp    804dff6 <on_msg+0x116>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     804def5 <on_msg+0x15>
mov    DWORD PTR [ebp-0x18],0x1
jmp    804dfe0 <on_msg+0x100>
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
jmp    804e25c <on_msg+0x37c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ecx,DWORD PTR ds:0x80766c4
test   ecx,ecx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
je     804e580 <on_actionmsg+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   ebx
mov    eax,ds:0x8075e74
add    eax,0xb2c
push   eax
call   8063790 <find_time>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804e5a5 <on_actionmsg+0x55>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xc],eax
cmp    BYTE PTR [esi],0x23
je     804e658 <on_actionmsg+0x108>
sub    esp,0x8
push   0x1
push   ebx
call   8055250 <search_list>
add    esp,0x10
test   eax,eax
je     804e60c <on_actionmsg+0xbc>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
je     804e56c <on_actionmsg+0x1c>
nop
test   BYTE PTR [ebx+0x208],0x1
jne    804e5f0 <on_actionmsg+0xa0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804e5d0 <on_actionmsg+0x80>
jmp    804e56c <on_actionmsg+0x1c>
jmp    804e5f0 <on_actionmsg+0xa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   edi
push   0x8075da0
push   0x80684aa
lea    eax,[ebx+0x20c]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    804e5d9 <on_actionmsg+0x89>
sub    esp,0x8
push   0x22
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804e63b <on_actionmsg+0xeb>
sub    esp,0x8
movsx  eax,BYTE PTR [edi]
push   eax
push   0x806843f
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    804e56c <on_actionmsg+0x1c>
mov    DWORD PTR [ebp+0x10],edi
mov    DWORD PTR [ebp+0xc],0x8075da0
mov    DWORD PTR [ebp+0x8],0x80684a0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    804b650 <send_spymsg>
sub    esp,0x8
push   0x1
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     804e56c <on_actionmsg+0x1c>
push   edi
push   0x8075da0
push   0x80684aa
push   eax
call   804b970 <send_spy>
pop    eax
pop    edx
push   esi
push   ebx
call   804ac30 <update_idletime>
mov    DWORD PTR [esp],edi
call   8058f00 <capslevel>
add    esp,0x10
cmp    eax,0x31
jle    804e6b3 <on_actionmsg+0x163>
push   eax
push   0x1
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   ebx
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
jne    804e77a <on_actionmsg+0x22a>
push   eax
push   0x2
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   ebx
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
jle    804e709 <on_actionmsg+0x1b9>
dec    eax
jg     804e6f7 <on_actionmsg+0x1a7>
push   edx
push   0x80684b2
push   0x8075da0
push   esi
call   80613f0 <sendkick>
mov    DWORD PTR [ebp+0x10],esi
mov    DWORD PTR [ebp+0xc],ebx
mov    DWORD PTR [ebp+0x8],0x8068b80
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    804b700 <send_statmsg>
push   ecx
push   ebx
push   0x8075da0
push   esi
call   8058ad0 <deop_ban>
add    esp,0x10
jmp    804e6ca <on_actionmsg+0x17a>
sub    esp,0x8
push   0x1e
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804e56c <on_actionmsg+0x1c>
sub    esp,0x8
push   esi
push   edi
call   8061eb0 <check_kicksay>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804e56c <on_actionmsg+0x1c>
mov    eax,ds:0x80762a4
test   eax,eax
je     804e750 <on_actionmsg+0x200>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
test   al,al
jne    804e56c <on_actionmsg+0x1c>
sub    esp,0x8
push   0x8075da0
mov    eax,DWORD PTR [edx+0x34]
push   eax
call   8057760 <formatgreet>
push   eax
push   0x806a12d
push   0x8075da0
push   esi
call   80613f0 <sendkick>
add    esp,0x20
jmp    804e56c <on_actionmsg+0x1c>
mov    DWORD PTR [ebp+0x10],0x80684c7
mov    DWORD PTR [ebp+0xc],0x8075da0
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80613f0 <sendkick>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1034
push   0x1
mov    esi,DWORD PTR [ebp+0xc]
push   esi
mov    BYTE PTR [ebp-0x102d],0x2b
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804e884 <on_mode+0xe4>
sub    esp,0x8
push   0x14
push   eax
call   8063d20 <get_int_varc>
mov    ebx,DWORD PTR [ebp+0x10]
push   ebx
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
mov    DWORD PTR [ebp-0x1034],eax
mov    BYTE PTR [ebp-0x418],0x0
mov    BYTE PTR [ebp-0x818],0x0
mov    BYTE PTR [ebp-0xc18],0x0
mov    BYTE PTR [ebp-0x1018],0x0
call   8057c60 <getnick>
add    esp,0xc
push   eax
push   0x80684df
push   esi
call   804b970 <send_spy>
add    esp,0x14
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
mov    edi,eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x101c],eax
mov    dl,BYTE PTR [edi]
add    esp,0x10
test   dl,dl
je     804e869 <on_mode+0xc9>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
movsx  eax,dl
sub    eax,0x2b
cmp    eax,0x4b
ja     804e860 <on_mode+0xc0>
jmp    DWORD PTR [eax*4+0x8068d24]
mov    BYTE PTR [ebp-0x102d],dl
nop
lea    esi,[esi+eiz*1+0x0]
inc    edi
mov    al,BYTE PTR [edi]
test   al,al
mov    dl,al
jne    804e840 <on_mode+0xa0>
cmp    BYTE PTR [ebp-0xc18],0x0
jne    804e87b <on_mode+0xdb>
cmp    BYTE PTR [ebp-0x418],0x0
je     804e884 <on_mode+0xe4>
test   BYTE PTR [esi+0x38d],0x8
jne    804e88c <on_mode+0xec>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
lea    eax,[ebp-0x818]
push   eax
lea    eax,[ebp-0x1018]
push   eax
lea    eax,[ebp-0x418]
push   eax
lea    eax,[ebp-0xc18]
push   eax
push   0x80684f4
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
call   80613b0 <sendmode>
add    esp,0x20
jmp    804e884 <on_mode+0xe4>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057b00 <chop>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
mov    DWORD PTR [ebp-0x1028],eax
je     804e9d7 <on_mode+0x237>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp-0x1028]
push   ebx
lea    eax,[esi+0x18]
push   eax
call   804c2b0 <delete_ban>
pop    edx
pop    ecx
push   0x12
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
call   8063130 <get_shituser>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x1020],eax
je     804e9d0 <on_mode+0x230>
mov    ebx,DWORD PTR [eax+0x3c]
shr    ebx,0x9
and    ebx,0xff
cmp    ebx,0x2
jle    804e992 <on_mode+0x1f2>
mov    eax,DWORD PTR [ebp-0x1020]
mov    eax,DWORD PTR [eax+0x38]
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x806e330
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
pop    ebx
mov    edx,DWORD PTR [ebp-0x1020]
pop    eax
mov    ecx,DWORD PTR [edx+0x38]
push   ecx
lea    ebx,[ebp-0x1018]
push   ebx
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8067364
push   ebx
call   8057c30 <Strcat>
add    esp,0x10
jmp    804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
call   8063320 <find_shit>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x1020],eax
je     804e9cc <on_mode+0x22c>
mov    ebx,DWORD PTR [eax+0x3c]
shr    ebx,0x9
and    ebx,0xff
cmp    ebx,0x2
jle    804e860 <on_mode+0xc0>
jmp    804e940 <on_mode+0x1a0>
xor    ebx,ebx
jmp    804e9be <on_mode+0x21e>
xor    ebx,ebx
jmp    804e93b <on_mode+0x19b>
mov    ebx,DWORD PTR ds:0x8075d20
push   ebx
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[esi+0x18]
push   eax
call   804c190 <make_ban>
pop    eax
pop    edx
push   0x0
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    804eb20 <on_mode+0x380>
mov    eax,ds:0x80762a4
test   eax,eax
je     804ea18 <on_mode+0x278>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
cmp    al,0xc8
je     804e860 <on_mode+0xc0>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
jne    804e860 <on_mode+0xc0>
push   eax
push   0x8
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
je     804ea6f <on_mode+0x2cf>
mov    eax,ds:0x80762a4
test   eax,eax
je     804ea5c <on_mode+0x2bc>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x4f
jg     804ea6f <on_mode+0x2cf>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   8058260 <mass_action>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x1034]
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
call   8063080 <get_protuseraccess>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
call   8063130 <get_shituser>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x1020],eax
je     804eac9 <on_mode+0x329>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
test   al,al
jne    804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x806e330
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
pop    ebx
pop    eax
mov    ecx,DWORD PTR [ebp-0x1028]
push   ecx
lea    ebx,[ebp-0x818]
push   ebx
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8067364
push   ebx
call   8057c30 <Strcat>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058500 <prot_action>
jmp    804e98a <on_mode+0x1ea>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804c0a0 <num_banned>
add    esp,0x10
cmp    eax,0x14
jne    804ea01 <on_mode+0x261>
sub    esp,0x8
push   0x0
push   esi
call   8063d20 <get_int_varc>
lea    eax,[eax+eax*2]
lea    eax,[eax+eax*4]
add    esp,0xc
shl    eax,0x2
push   eax
push   0x80679ea
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804c8c0 <channel_massunbanfrom>
add    esp,0x10
jmp    804ea01 <on_mode+0x261>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x69
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804ebab <on_mode+0x40b>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804ebce <on_mode+0x42e>
sub    esp,0x8
push   0x806f5ac
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
sete   dl
mov    al,BYTE PTR [esi+0x38c]
shl    edx,0x5
and    eax,0xffffffdf
or     eax,edx
mov    BYTE PTR [esi+0x38c],al
jmp    804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x806f5ac
lea    eax,[ebp-0x418]
jmp    804eba2 <on_mode+0x402>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x1028],eax
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x6b
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x20
cmp    BYTE PTR [ebp-0x102d],0x2b
mov    ecx,eax
je     804ec54 <on_mode+0x4b4>
and    BYTE PTR [esi+0x38c],0x7f
test   eax,eax
je     804e860 <on_mode+0xc0>
mov    eax,DWORD PTR [ebp-0x1028]
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x806a2cd
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
pop    ebx
pop    eax
mov    ecx,DWORD PTR [ebp-0x1028]
push   ecx
jmp    804e971 <on_mode+0x1d1>
or     BYTE PTR [esi+0x38c],0x80
mov    ebx,DWORD PTR [ebp-0x1028]
test   ebx,ebx
mov    al,BYTE PTR [esi+0x38d]
sete   dl
and    eax,0xfffffffe
or     eax,edx
test   ecx,ecx
mov    BYTE PTR [esi+0x38d],al
je     804ecbe <on_mode+0x51e>
mov    ecx,DWORD PTR [ebp-0x1028]
test   ecx,ecx
je     804ecbe <on_mode+0x51e>
sub    esp,0x8
push   0x806a2cd
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp-0x1028]
push   eax
lea    ebx,[ebp-0x818]
push   ebx
call   8057c30 <Strcat>
pop    ecx
pop    eax
push   0x8067364
push   ebx
call   8057c30 <Strcat>
add    esp,0x10
sub    esp,0xc
lea    ebx,[esi+0x8]
push   ebx
call   8057920 <MyFree>
pop    eax
mov    eax,DWORD PTR [ebp-0x1028]
test   eax,eax
mov    DWORD PTR ds:0x8075d6c,0x804e7a0
pop    edx
je     804ecec <on_mode+0x54c>
push   eax
push   ebx
call   80579d0 <mstrcpy>
jmp    804e98a <on_mode+0x1ea>
mov    eax,0x8067964
jmp    804ece0 <on_mode+0x540>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804ed7e <on_mode+0x5de>
and    BYTE PTR [esi+0x38c],0xef
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x6c
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804ed6a <on_mode+0x5ca>
sub    esp,0x8
push   0x8068575
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
mov    eax,DWORD PTR [esi+0x10]
push   eax
lea    eax,[ebp-0x1018]
push   eax
push   0x8068501
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x20
jmp    804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x8068575
lea    eax,[ebp-0x418]
push   eax
jmp    804e985 <on_mode+0x1e5>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057b00 <chop>
mov    DWORD PTR [esp],eax
call   8059370 <Atoi>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     804eda0 <on_mode+0x600>
mov    edx,DWORD PTR [eax]
or     BYTE PTR [esi+0x38c],0x10
mov    DWORD PTR [esi+0x10],edx
jmp    804ed10 <on_mode+0x570>
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x6d
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804edea <on_mode+0x64a>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804ee05 <on_mode+0x665>
sub    esp,0x8
push   0x806b8d1
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
sete   dl
mov    al,BYTE PTR [esi+0x38c]
shl    edx,0x2
and    eax,0xfffffffb
jmp    804ebc1 <on_mode+0x421>
sub    esp,0x8
push   0x806b8d1
lea    eax,[ebp-0x418]
jmp    804ede1 <on_mode+0x641>
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x6e
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804ee50 <on_mode+0x6b0>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804ee6b <on_mode+0x6cb>
sub    esp,0x8
push   0x806a72f
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
sete   dl
mov    al,BYTE PTR [esi+0x38c]
shl    edx,0x6
and    eax,0xffffffbf
jmp    804ebc1 <on_mode+0x421>
sub    esp,0x8
push   0x806a72f
lea    eax,[ebp-0x418]
jmp    804ee47 <on_mode+0x6a7>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057b00 <chop>
mov    DWORD PTR [esp],eax
mov    DWORD PTR [ebp-0x1024],eax
call   804c010 <find_nuh>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x102c],eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
mov    ebx,eax
je     804f071 <on_mode+0x8d1>
push   eax
mov    eax,DWORD PTR [ebp-0x1024]
push   eax
push   0x102
push   esi
call   804cea0 <del_mode>
add    esp,0x10
cmp    ebx,0xc8
je     804f040 <on_mode+0x8a0>
sub    esp,0x8
mov    edx,DWORD PTR [ebp-0x1024]
push   edx
push   0x8075da0
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0xc8
je     804e860 <on_mode+0xc0>
cmp    eax,0x4f
jle    804f010 <on_mode+0x870>
mov    ebx,DWORD PTR [ebp-0x1034]
test   ebx,ebx
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edx,DWORD PTR [ebp-0x102c]
push   edx
call   8063010 <get_protlevel>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x102c]
push   eax
call   8063690 <get_shitlevel>
add    esp,0x10
test   eax,eax
jne    804e860 <on_mode+0xc0>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x102c]
push   eax
call   8063280 <password_needed>
add    esp,0x10
test   eax,eax
je     804efa6 <on_mode+0x806>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x102c]
push   eax
call   8063210 <verified>
add    esp,0x10
test   eax,eax
je     804efeb <on_mode+0x84b>
sub    esp,0x8
push   0x80682fb
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
pop    ebx
pop    eax
mov    ecx,DWORD PTR [ebp-0x1024]
push   ecx
lea    ebx,[ebp-0x1018]
push   ebx
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8067364
push   ebx
call   8057c30 <Strcat>
add    esp,0xc
mov    ecx,DWORD PTR [ebp-0x1024]
push   ecx
jmp    804eb09 <on_mode+0x369>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x102c]
push   eax
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
jmp    804efa6 <on_mode+0x806>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   eax
push   0x4
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
je     804ef30 <on_mode+0x790>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058260 <mass_action>
add    esp,0x10
jmp    804ef30 <on_mode+0x790>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp-0x1024]
mov    eax,ds:0x8075e74
push   ecx
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804e860 <on_mode+0xc0>
and    BYTE PTR [esi+0x38d],0xf7
jmp    804e860 <on_mode+0xc0>
push   eax
mov    ecx,DWORD PTR [ebp-0x1024]
push   ecx
push   0x2
push   esi
call   804ce70 <add_mode>
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x1024]
push   edx
push   0x100
push   esi
call   804cea0 <del_mode>
add    esp,0x10
cmp    ebx,0xc8
je     804f12c <on_mode+0x98c>
test   ebx,ebx
jne    804e860 <on_mode+0xc0>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    ebx,DWORD PTR [ebp-0x102c]
push   ebx
call   8063690 <get_shitlevel>
add    esp,0x10
test   eax,eax
jne    804f104 <on_mode+0x964>
sub    esp,0x8
push   0x18
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804f0ee <on_mode+0x94e>
sub    esp,0x8
push   0x40
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     804f104 <on_mode+0x964>
sub    esp,0x8
push   0x19
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804e860 <on_mode+0xc0>
sub    esp,0x8
push   0x80682fb
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp-0x1024]
push   eax
lea    ebx,[ebp-0x818]
jmp    804e977 <on_mode+0x1d7>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x1024]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804f0a5 <on_mode+0x905>
or     BYTE PTR [esi+0x38d],0x8
call   804abd0 <check_shit>
mov    eax,DWORD PTR [esi+0x14]
test   eax,eax
jne    804f175 <on_mode+0x9d5>
sub    esp,0xc
lea    eax,[esi+0x14]
push   eax
call   8057920 <MyFree>
jmp    804e98a <on_mode+0x1ea>
sub    esp,0x8
push   0xe
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804f164 <on_mode+0x9c4>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [esi+0x14]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x4f
jg     804f164 <on_mode+0x9c4>
push   eax
push   0x8068508
push   eax
mov    ebx,DWORD PTR [esi+0x14]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80613f0 <sendkick>
add    esp,0x10
jmp    804f164 <on_mode+0x9c4>
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x70
push   esi
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804f1fb <on_mode+0xa5b>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804f213 <on_mode+0xa73>
sub    esp,0x8
push   0x806d473
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
mov    al,BYTE PTR [esi+0x38c]
sete   dl
and    eax,0xfffffffe
jmp    804ebc1 <on_mode+0x421>
sub    esp,0x8
push   0x806d473
lea    eax,[ebp-0x418]
jmp    804f1f2 <on_mode+0xa52>
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x73
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804f25e <on_mode+0xabe>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804f278 <on_mode+0xad8>
sub    esp,0x8
push   0x806a12e
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
sete   dl
mov    al,BYTE PTR [esi+0x38c]
add    edx,edx
and    eax,0xfffffffd
jmp    804ebc1 <on_mode+0x421>
sub    esp,0x8
push   0x806a12e
lea    eax,[ebp-0x418]
jmp    804f255 <on_mode+0xab5>
movsx  eax,BYTE PTR [ebp-0x102d]
push   eax
push   0x74
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804b4d0 <reverse_mode>
add    esp,0x10
test   eax,eax
je     804f2c3 <on_mode+0xb23>
cmp    BYTE PTR [ebp-0x102d],0x2b
je     804f2de <on_mode+0xb3e>
sub    esp,0x8
push   0x806d170
lea    eax,[ebp-0xc18]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
sete   dl
mov    al,BYTE PTR [esi+0x38c]
shl    edx,0x3
and    eax,0xfffffff7
jmp    804ebc1 <on_mode+0x421>
sub    esp,0x8
push   0x806d170
lea    eax,[ebp-0x418]
jmp    804f2ba <on_mode+0xb1a>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057b00 <chop>
add    esp,0x10
cmp    BYTE PTR [ebp-0x102d],0x2b
mov    DWORD PTR [ebp-0x1024],eax
je     804f324 <on_mode+0xb84>
push   eax
mov    eax,DWORD PTR [ebp-0x1024]
push   eax
push   0x1
push   esi
call   804cea0 <del_mode>
jmp    804e98a <on_mode+0x1ea>
push   edx
push   eax
push   0x1
push   esi
call   804ce70 <add_mode>
jmp    804e98a <on_mode+0x1ea>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x1
mov    esi,DWORD PTR [ebp+0xc]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804f389 <on_public+0x49>
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   0x8075da0
push   0x806844f
push   ebx
call   804b970 <send_spy>
pop    ecx
pop    eax
push   esi
push   edi
call   804ac30 <update_idletime>
add    esp,0x10
test   BYTE PTR [ebx+0x38d],0x8
jne    804f3a0 <on_public+0x60>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    804f3a0 <on_public+0x60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x10]
push   edx
call   8058f00 <capslevel>
add    esp,0x10
cmp    eax,0x31
jg     804f475 <on_public+0x135>
push   eax
push   0x2
push   ebx
push   edi
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
jle    804f3f3 <on_public+0xb3>
dec    eax
jg     804f460 <on_public+0x120>
push   eax
push   0x80684b2
push   0x8075da0
push   esi
call   80613f0 <sendkick>
add    esp,0xc
push   esi
push   edi
push   0x8068b80
call   804b700 <send_statmsg>
add    esp,0x10
sub    esp,0x8
push   0x1e
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     804f389 <on_public+0x49>
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   8061eb0 <check_kicksay>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     804f389 <on_public+0x49>
mov    eax,ds:0x80762a4
test   eax,eax
je     804f436 <on_public+0xf6>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
test   al,al
jne    804f389 <on_public+0x49>
sub    esp,0x8
push   0x8075da0
mov    edi,DWORD PTR [edx+0x34]
push   edi
call   8057760 <formatgreet>
push   eax
push   0x806a12d
push   0x8075da0
push   esi
call   80613f0 <sendkick>
add    esp,0x20
jmp    804f389 <on_public+0x49>
push   eax
push   edi
push   0x8075da0
push   esi
call   8058ad0 <deop_ban>
add    esp,0x10
jmp    804f3d0 <on_public+0x90>
push   eax
push   0x1
push   ebx
push   edi
call   804ad70 <check_mass>
add    esp,0x10
test   eax,eax
je     804f3b8 <on_public+0x78>
push   eax
push   0x80684c7
push   0x8075da0
push   esi
call   80613f0 <sendkick>
add    esp,0x10
jmp    804f3b8 <on_public+0x78>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     804f5f0 <do_chaccess+0x140>
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
add    esp,0x10
cmp    eax,0x64
mov    esi,eax
ja     804f5e0 <do_chaccess+0x130>
sub    esp,0x8
push   0x0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    esi,eax
jg     804f5d3 <do_chaccess+0x123>
mov    ecx,DWORD PTR ds:0x8070260
test   ecx,ecx
je     804f544 <do_chaccess+0x94>
xor    ebx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edi
mov    edx,DWORD PTR [ebx+0x8070260]
push   edx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804f55d <do_chaccess+0xad>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804f520 <do_chaccess+0x70>
sub    esp,0x8
push   0x8068525
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    al,BYTE PTR [ebx+0x807026c]
and    eax,0xff
cmp    esi,0xffffffff
mov    edi,eax
je     804f5b7 <do_chaccess+0x107>
sub    esp,0x8
push   0x0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    edi,eax
jg     804f5ad <do_chaccess+0xfd>
cmp    edi,esi
je     804f5a3 <do_chaccess+0xf3>
push   esi
push   edi
push   0x8068ba0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
mov    DWORD PTR [ebx+0x807026c],esi
jmp    804f555 <do_chaccess+0xa5>
sub    esp,0x8
push   0x806853f
jmp    804f58f <do_chaccess+0xdf>
sub    esp,0x8
push   0x8068be0
jmp    804f54c <do_chaccess+0x9c>
push   eax
push   edi
push   0x8068c20
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
pop    ebx
pop    esi
push   0x8068559
jmp    804f54c <do_chaccess+0x9c>
sub    esp,0x8
push   0x8068c60
jmp    804f54c <do_chaccess+0x9c>
push   eax
push   0x64
push   0x8068ca0
jmp    804f54c <do_chaccess+0x9c>
lea    esi,[esi+0x0]
test   edi,edi
je     804f5fe <do_chaccess+0x14e>
mov    esi,0xffffffff
jmp    804f4ee <do_chaccess+0x3e>
sub    esp,0x8
mov    eax,ds:0x80702e0
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    804f555 <do_chaccess+0xa5>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ecx,DWORD PTR ds:0x8070260
mov    ebp,esp
test   ecx,ecx
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
je     804f664 <level_needed+0x44>
xor    ebx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   esi
mov    edx,DWORD PTR [ebx+0x8070260]
push   edx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804f670 <level_needed+0x50>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804f640 <level_needed+0x20>
mov    eax,0xffffffff
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
xor    edx,edx
mov    dl,BYTE PTR [ebx+0x807026c]
mov    eax,edx
shr    eax,0x1f
dec    eax
and    eax,edx
jmp    804f669 <level_needed+0x49>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10
push   0x1b6
push   0x601
push   0x8068577
call   8048f88 <open@plt>
mov    esi,eax
add    esp,0x10
xor    eax,eax
test   esi,esi
js     804f71f <write_levelfile+0x8f>
mov    eax,ds:0x8070260
test   eax,eax
mov    edi,DWORD PTR ds:0x8075e80
mov    DWORD PTR ds:0x8075e80,0x0
je     804f70b <write_levelfile+0x7b>
xor    ebx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    eax,eax
mov    al,BYTE PTR [ebx+0x807026c]
push   eax
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
push   0x8068585
push   esi
add    ebx,0x10
call   8061260 <send_to_socket>
mov    eax,DWORD PTR [ebx+0x8070260]
add    esp,0x10
test   eax,eax
jne    804f6e0 <write_levelfile+0x50>
sub    esp,0xc
push   esi
call   8048fc8 <close@plt>
mov    DWORD PTR ds:0x8075e80,edi
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     804f760 <read_levelfile_callback+0x30>
cmp    BYTE PTR [eax],0x0
je     804f760 <read_levelfile_callback+0x30>
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
je     804f760 <read_levelfile_callback+0x30>
cmp    BYTE PTR [eax],0x0
jne    804f76a <read_levelfile_callback+0x3a>
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
xor    eax,eax
pop    ebp
ret    
sub    esp,0xc
push   eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     804f760 <read_levelfile_callback+0x30>
mov    eax,DWORD PTR [eax]
test   eax,eax
js     804f760 <read_levelfile_callback+0x30>
cmp    eax,0x65
jg     804f760 <read_levelfile_callback+0x30>
mov    eax,ds:0x8070260
test   eax,eax
je     804f760 <read_levelfile_callback+0x30>
xor    esi,esi
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [esi+0x8070260]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804f7ca <read_levelfile_callback+0x9a>
mov    eax,DWORD PTR [esi+0x807026c]
and    eax,0xff00
or     eax,DWORD PTR [edi]
mov    DWORD PTR [esi+0x807026c],eax
add    esi,0x10
mov    eax,DWORD PTR [esi+0x8070260]
test   eax,eax
jne    804f7a0 <read_levelfile_callback+0x70>
jmp    804f760 <read_levelfile_callback+0x30>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x0
push   0x8068577
call   8048f88 <open@plt>
mov    esi,eax
add    esp,0x10
xor    eax,eax
test   esi,esi
js     804f830 <read_levelfile+0x50>
sub    esp,0x8
push   0x804f730
mov    ebx,DWORD PTR ds:0x8075e80
push   esi
mov    DWORD PTR ds:0x8075e80,0x0
call   80618f0 <readline>
mov    DWORD PTR [esp],esi
call   8048fc8 <close@plt>
mov    DWORD PTR ds:0x8075e80,ebx
mov    eax,0x1
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
mov    eax,ds:0x8070960
xor    ebx,ebx
test   eax,eax
mov    esi,DWORD PTR [ebp+0xc]
je     804f890 <usage+0x50>
mov    edi,0x8070960
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [edi+ebx*8]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804f8c7 <usage+0x87>
inc    ebx
mov    edx,DWORD PTR [ebx*8+0x8070960]
test   edx,edx
jne    804f870 <usage+0x30>
sub    esp,0x8
push   0x806858c
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    804f8be <usage+0x7e>
mov    DWORD PTR [ebp+0xc],0x8068ce0
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp+0x8],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
mov    DWORD PTR [ebp+0xc],0x8068590
jmp    804f8ac <usage+0x6c>
mov    eax,DWORD PTR [edi+ebx*8+0x4]
mov    dl,BYTE PTR [eax]
cmp    dl,0x40
je     804f8fd <usage+0xbd>
cmp    dl,0x40
push   eax
mov    eax,0x8067180
je     804f8f4 <usage+0xb4>
push   eax
push   0x80685a1
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,DWORD PTR [ebx*8+0x8070960]
jmp    804f8dd <usage+0x9d>
inc    eax
jmp    804f8d2 <usage+0x92>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x10]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     804f923 <do_usage+0x23>
cmp    BYTE PTR [eax],0x0
jne    804f940 <do_usage+0x40>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x8070860
push   ebx
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8070260
test   edx,edx
je     804f987 <do_usage+0x87>
xor    ebx,ebx
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804f996 <do_usage+0x96>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8070264]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804f996 <do_usage+0x96>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    804f94c <do_usage+0x4c>
push   eax
push   esi
push   0x80685ad
push   edi
call   80614d0 <send_to_user>
jmp    804f933 <do_usage+0x33>
sub    esp,0x8
mov    ecx,DWORD PTR [ebx+0x8070260]
push   ecx
jmp    804f92d <do_usage+0x2d>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x20
push   0x1b6
push   0x601
push   0x806736f
call   8048f88 <open@plt>
mov    DWORD PTR [ebp-0x14],eax
mov    edx,DWORD PTR [ebp-0x14]
add    esp,0x10
xor    eax,eax
test   edx,edx
js     804fd82 <savesession+0x3d2>
cmp    BYTE PTR ds:0x8075d40,0x0
jne    805004c <savesession+0x69c>
cmp    BYTE PTR ds:0x8076ee0,0x0
jne    8050030 <savesession+0x680>
mov    eax,ds:0x8075d2c
test   eax,eax
jne    8050018 <savesession+0x668>
xor    esi,esi
mov    eax,ds:0x8075d88
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075464
jge    804fa2c <savesession+0x7c>
cmp    BYTE PTR [ebx],0x0
jne    804ffe7 <savesession+0x637>
inc    esi
add    ebx,0xa0
cmp    esi,eax
jl     804fa18 <savesession+0x68>
mov    al,ds:0x8076f04
test   eax,0x1
je     804ffc9 <savesession+0x619>
test   eax,0x4
je     804ffab <savesession+0x5fb>
test   eax,0x2
je     804ff8d <savesession+0x5dd>
test   eax,0x8
jne    804ff6f <savesession+0x5bf>
and    eax,0x20
jne    804ff56 <savesession+0x5a6>
sub    esp,0x8
push   0x806b2d9
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     804fccb <savesession+0x31b>
mov    eax,DWORD PTR [ebp-0x10]
push   edi
add    eax,0x22d
push   eax
push   0x8067216
mov    esi,DWORD PTR [ebp-0x14]
push   esi
call   8061260 <send_to_socket>
mov    eax,DWORD PTR [ebp-0x10]
add    esp,0xc
add    eax,0x23a
push   eax
push   0x8068e54
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
call   8061260 <send_to_socket>
mov    edx,DWORD PTR [ebp-0x10]
add    esp,0x10
cmp    BYTE PTR [edx+0x296],0x0
je     804faf5 <savesession+0x145>
mov    eax,DWORD PTR [edx+0x2dc]
cmp    eax,0x1
je     804ff16 <savesession+0x566>
cmp    eax,0x1
jle    804ff4d <savesession+0x59d>
cmp    eax,0x64
je     804ff3c <savesession+0x58c>
cmp    eax,0x65
je     804ff16 <savesession+0x566>
mov    eax,DWORD PTR [ebp-0x10]
push   edi
add    eax,0x246
push   eax
push   0x8068e5e
mov    esi,DWORD PTR [ebp-0x14]
push   esi
call   8061260 <send_to_socket>
mov    edx,DWORD PTR [ebp-0x10]
add    esp,0x10
cmp    BYTE PTR [edx+0x360],0x0
jne    804fef7 <savesession+0x547>
mov    edx,DWORD PTR [ebp-0x10]
mov    al,BYTE PTR [edx+0x380]
cmp    al,0x2d
je     804fb43 <savesession+0x193>
push   edx
movsx  eax,al
push   eax
push   0x8068e6a
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x10]
push   edi
add    eax,0x724
push   eax
push   0x8068e76
mov    esi,DWORD PTR [ebp-0x14]
push   esi
call   8061260 <send_to_socket>
mov    eax,ds:0x8075e74
add    esp,0x10
test   BYTE PTR [eax+0x3ac],0x1
jne    804fed9 <savesession+0x529>
test   BYTE PTR [eax+0x3ac],0x2
jne    804febb <savesession+0x50b>
mov    edx,DWORD PTR ds:0x806cf20
add    eax,0x3c0
xor    edi,edi
test   edx,edx
je     804fbf1 <savesession+0x241>
mov    DWORD PTR [ebp-0x1c],0x0
mov    ebx,eax
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
test   eax,0x8
je     804fbde <savesession+0x22e>
test   eax,0x1
mov    edx,eax
je     804fe3b <savesession+0x48b>
mov    eax,DWORD PTR [ebx+0x4]
mov    edx,DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [edx+0x806cbc4],eax
je     804fbde <savesession+0x22e>
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf20]
push   eax
push   0x8068e84
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
inc    edi
mov    esi,DWORD PTR [edi*8+0x806cf20]
add    ebx,0x14
add    DWORD PTR [ebp-0x1c],0x14
test   esi,esi
jne    804fba0 <savesession+0x1f0>
mov    eax,DWORD PTR [ebp-0x10]
mov    esi,DWORD PTR [eax+0xb34]
test   esi,esi
je     804fcbb <savesession+0x30b>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [esi+0x38d]
and    eax,0xffffffb0
cmp    al,0x20
je     804fcb1 <savesession+0x301>
mov    eax,DWORD PTR [esi+0x8]
test   eax,eax
je     804fc2d <savesession+0x27d>
cmp    BYTE PTR [eax],0x0
jne    804fc32 <savesession+0x282>
mov    eax,0x8067180
push   eax
mov    ebx,DWORD PTR [esi+0x4]
push   ebx
push   0x8068e8f
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
call   8061260 <send_to_socket>
mov    edx,DWORD PTR ds:0x806cf20
xor    edi,edi
add    esp,0x10
test   edx,edx
lea    eax,[esi+0x24]
je     804fcb1 <savesession+0x301>
mov    DWORD PTR [ebp-0x18],0x0
mov    ebx,eax
mov    eax,DWORD PTR [ebx]
test   eax,0x8
jne    804fc9e <savesession+0x2ee>
test   eax,0x1
mov    edx,eax
je     804fdb0 <savesession+0x400>
mov    eax,DWORD PTR [ebx+0x4]
mov    edx,DWORD PTR [ebp-0x18]
cmp    eax,DWORD PTR [edx+0x806cbc4]
je     804fc9e <savesession+0x2ee>
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf20]
push   eax
push   0x8068e84
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
inc    edi
mov    eax,DWORD PTR [edi*8+0x806cf20]
add    ebx,0x14
add    DWORD PTR [ebp-0x18],0x14
test   eax,eax
jne    804fc60 <savesession+0x2b0>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    804fc10 <savesession+0x260>
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
jne    804fa8a <savesession+0xda>
sub    esp,0x8
push   0x806b2d9
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
mov    eax,ds:0x8070260
add    esp,0x10
test   eax,eax
je     804fd05 <savesession+0x355>
xor    ebx,ebx
mov    eax,DWORD PTR [ebx+0x8070264]
test   eax,eax
jne    804fd91 <savesession+0x3e1>
add    ebx,0x10
mov    esi,DWORD PTR [ebx+0x8070260]
test   esi,esi
jne    804fcea <savesession+0x33a>
sub    esp,0x8
push   0x806b2d9
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
call   8061260 <send_to_socket>
xor    esi,esi
mov    eax,ds:0x8075e34
add    esp,0x10
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d28
jge    804fd71 <savesession+0x3c1>
cmp    BYTE PTR [ebx],0x0
je     804fd66 <savesession+0x3b6>
sub    esp,0xc
cmp    BYTE PTR [ebx+0x58],0x0
je     804fd8a <savesession+0x3da>
lea    eax,[ebx+0x58]
push   eax
mov    eax,DWORD PTR [ebx+0x100]
test   eax,eax
jne    804fd4b <savesession+0x39b>
mov    eax,0x1a0b
push   eax
lea    eax,[ebx+0x8]
push   eax
push   0x8068e9b
mov    edx,DWORD PTR [ebp-0x14]
push   edx
call   8061260 <send_to_socket>
add    esp,0x20
mov    eax,ds:0x8075e34
inc    esi
add    ebx,0x114
cmp    esi,eax
jl     804fd2a <savesession+0x37a>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8048fc8 <close@plt>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,0x8067180
jmp    804fd3b <savesession+0x38b>
push   eax
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
push   0x8068eac
mov    edi,DWORD PTR [ebp-0x14]
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804fcf8 <savesession+0x348>
nop
and    edx,0x2
je     804fe00 <savesession+0x450>
mov    eax,DWORD PTR [ebx+0x8]
test   eax,eax
je     804fc9e <savesession+0x2ee>
sub    esp,0x8
push   eax
mov    eax,DWORD PTR [ebp-0x18]
mov    eax,DWORD PTR [eax+0x806cbc8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804fc9e <savesession+0x2ee>
mov    ecx,DWORD PTR [ebx+0x8]
push   ecx
mov    edx,DWORD PTR [edi*8+0x806cf20]
push   edx
push   0x8068eb9
jmp    804fc92 <savesession+0x2e2>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
and    eax,0x4
je     804fc9e <savesession+0x2ee>
mov    eax,DWORD PTR [ebx+0x4]
mov    edx,DWORD PTR [ebp-0x18]
cmp    eax,DWORD PTR [edx+0x806cbc4]
je     804fc9e <savesession+0x2ee>
test   eax,eax
setne  al
and    eax,0xff
add    eax,0x30
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf20]
push   eax
push   0x8068ec4
jmp    804fc92 <savesession+0x2e2>
and    edx,0x2
je     804fe80 <savesession+0x4d0>
mov    eax,DWORD PTR [ebx+0x8]
test   eax,eax
je     804fbde <savesession+0x22e>
sub    esp,0x8
push   eax
mov    eax,DWORD PTR [ebp-0x1c]
mov    eax,DWORD PTR [eax+0x806cbc8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     804fbde <savesession+0x22e>
mov    eax,DWORD PTR [ebx+0x8]
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf20]
push   eax
push   0x8068eb9
jmp    804fbd2 <savesession+0x222>
nop
and    eax,0x4
je     804fbde <savesession+0x22e>
mov    eax,DWORD PTR [ebx+0x4]
mov    edx,DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [edx+0x806cbc4],eax
je     804fbde <savesession+0x22e>
test   eax,eax
setne  al
and    eax,0xff
add    eax,0x30
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf20]
push   eax
push   0x8068ec4
jmp    804fbd2 <savesession+0x222>
sub    esp,0x8
push   0x8068ecf
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
call   8061260 <send_to_socket>
add    esp,0x10
mov    eax,ds:0x8075e74
jmp    804fb7d <savesession+0x1cd>
sub    esp,0x8
push   0x8068edb
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
call   8061260 <send_to_socket>
add    esp,0x10
mov    eax,ds:0x8075e74
jmp    804fb70 <savesession+0x1c0>
mov    eax,edx
push   ebx
add    eax,0x360
push   eax
push   0x8068ee6
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804fb20 <savesession+0x170>
mov    eax,DWORD PTR [ebp-0x10]
mov    edx,DWORD PTR [eax+0x2d8]
push   edx
add    eax,0x296
push   eax
push   0x8068ef0
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804faf5 <savesession+0x145>
mov    eax,DWORD PTR [ebp-0x10]
push   ecx
add    eax,0x296
push   eax
push   0x8068eff
jmp    804ff2b <savesession+0x57b>
test   eax,eax
je     804ff3c <savesession+0x58c>
jmp    804faf5 <savesession+0x145>
sub    esp,0x8
push   0x8068f0b
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804fa66 <savesession+0xb6>
sub    esp,0x8
push   0x8068f15
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,ds:0x8076f04
jmp    804fa5d <savesession+0xad>
sub    esp,0x8
push   0x8068f21
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,ds:0x8076f04
jmp    804fa52 <savesession+0xa2>
sub    esp,0x8
push   0x8068f2d
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,ds:0x8076f04
jmp    804fa47 <savesession+0x97>
sub    esp,0x8
push   0x8068f38
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,ds:0x8076f04
jmp    804fa3c <savesession+0x8c>
sub    esp,0x8
mov    ecx,DWORD PTR [ebx+0x98]
push   ecx
lea    eax,[ebx+0x48]
push   eax
lea    eax,[ebx+0x28]
push   eax
lea    eax,[ebx+0x8]
push   eax
push   0x8068f40
mov    edx,DWORD PTR [ebp-0x14]
push   edx
call   8061260 <send_to_socket>
add    esp,0x20
mov    eax,ds:0x8075d88
jmp    804fa21 <savesession+0x71>
push   esi
push   eax
push   0x8068f52
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804fa07 <savesession+0x57>
push   eax
push   0x8076ee0
push   0x8068f5f
mov    edi,DWORD PTR [ebp-0x14]
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804f9fa <savesession+0x4a>
push   eax
push   0x8075d40
push   0x8068f6c
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
jmp    804f9ed <savesession+0x3d>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x40c
push   0xbc0
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR ds:0x8075d6c,0x8050070
call   8057860 <MyMalloc>
mov    DWORD PTR [eax+0x4],0x0
mov    DWORD PTR [eax+0x8],0xffffffff
mov    BYTE PTR [eax+0x380],0x2d
mov    ebx,eax
pop    eax
pop    edx
push   esi
lea    eax,[ebx+0x220]
push   eax
call   8048c68 <strcpy@plt>
pop    ecx
pop    eax
push   esi
lea    eax,[ebx+0x22d]
push   eax
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x807127d
lea    eax,[ebx+0x23a]
push   eax
call   8048c68 <strcpy@plt>
push   0x807125b
push   0x8071272
push   0x806e50a
lea    eax,[ebx+0x246]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x18
lea    eax,[ebx+0x3c0]
push   0x806cbc0
push   eax
call   8063f90 <copy_vars>
add    esp,0xc
push   esi
push   0x8068f77
lea    esi,[ebp-0x408]
push   esi
call   8048f18 <sprintf@plt>
pop    ecx
pop    eax
push   esi
lea    eax,[ebx+0xb40]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8050070
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0xbb8],eax
mov    eax,ds:0x8076f0c
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x8076f0c,ebx
lea    esp,[ebp-0x8]
mov    eax,ebx
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
mov    eax,DWORD PTR [ebp+0x10]
xor    esi,esi
test   eax,eax
mov    edi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x30],0x0
mov    DWORD PTR [ebp-0x2c],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x24],0x0
je     80501e1 <forkbot+0x81>
cmp    BYTE PTR [eax],0x0
je     80501e1 <forkbot+0x81>
lea    ebx,[ebp+0x10]
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
cmp    BYTE PTR [eax],0x2d
je     8050480 <forkbot+0x320>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     80501e1 <forkbot+0x81>
cmp    BYTE PTR [eax],0x0
jne    80501c0 <forkbot+0x60>
test   esi,esi
je     8050210 <forkbot+0xb0>
sub    esp,0x8
mov    eax,ds:0x8070790
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8050210 <forkbot+0xb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   edi
call   8050070 <add_bot>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     80501f7 <forkbot+0x97>
sub    esp,0x8
mov    eax,ds:0x8075e74
mov    ds:0x8076f00,eax
mov    DWORD PTR ds:0x8075e74,esi
lea    ebx,[esi+0x220]
mov    BYTE PTR [edi+0xc],0x0
push   edi
push   ebx
call   8048c68 <strcpy@plt>
pop    ecx
pop    eax
push   edi
lea    eax,[esi+0x22d]
push   eax
call   8048c68 <strcpy@plt>
pop    eax
mov    eax,ds:0x8075e74
pop    edx
add    eax,0x381
push   eax
lea    eax,[esi+0x381]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0xc
push   ebx
push   0x8068f81
lea    eax,[esi+0x724]
push   eax
call   8048f18 <sprintf@plt>
mov    edi,DWORD PTR [ebp-0x10]
add    esp,0x10
test   edi,edi
je     8050299 <forkbot+0x139>
mov    edx,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [edx],0x0
jne    805045d <forkbot+0x2fd>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x23a
push   eax
lea    eax,[esi+0x23a]
push   eax
call   8048c68 <strcpy@plt>
mov    ecx,DWORD PTR [ebp-0x20]
add    esp,0x10
test   ecx,ecx
je     80502c9 <forkbot+0x169>
mov    eax,DWORD PTR [ebp-0x20]
cmp    BYTE PTR [eax],0x0
jne    8050441 <forkbot+0x2e1>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x246
push   eax
lea    eax,[esi+0x246]
push   eax
call   8048c68 <strcpy@plt>
mov    eax,DWORD PTR [ebp-0x24]
add    esp,0x10
test   eax,eax
je     8050422 <forkbot+0x2c2>
mov    edx,DWORD PTR [ebp-0x24]
cmp    BYTE PTR [edx],0x0
je     8050422 <forkbot+0x2c2>
cmp    DWORD PTR [ebp-0x2c],0x1
je     8050414 <forkbot+0x2b4>
push   eax
push   0x3f
mov    eax,DWORD PTR [ebp-0x24]
push   eax
lea    eax,[esi+0x296]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [esi+0x2d5],0x0
mov    edx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [esi+0x2dc],edx
mov    edi,DWORD PTR [ebp-0x1c]
add    esp,0x10
test   edi,edi
je     805033d <forkbot+0x1dd>
mov    edx,DWORD PTR [ebp-0x1c]
mov    al,BYTE PTR [edx]
test   al,al
jne    8050348 <forkbot+0x1e8>
mov    eax,ds:0x8075e74
mov    al,BYTE PTR [eax+0x380]
mov    BYTE PTR [esi+0x380],al
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [eax+0x10]
test   ebx,ebx
mov    DWORD PTR [esi+0x10],eax
je     805036c <forkbot+0x20c>
mov    eax,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [eax],0x0
jne    8050403 <forkbot+0x2a3>
mov    eax,0x1a0b
mov    ecx,DWORD PTR [ebp-0x18]
test   ecx,ecx
je     8050388 <forkbot+0x228>
push   edx
push   0x0
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
call   80509f0 <add_server>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
je     80503b1 <forkbot+0x251>
push   ebx
push   0x0
push   0x0
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
call   804b200 <join_channel>
add    esp,0x10
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
mov    eax,esi
jmp    80501f9 <forkbot+0x99>
mov    eax,ds:0x8076f00
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
je     80503a5 <forkbot+0x245>
mov    dl,BYTE PTR [ebx+0x38d]
mov    al,dl
shr    al,0x4
and    eax,0x3
dec    eax
je     80503d9 <forkbot+0x279>
and    edx,0x80
je     80503fb <forkbot+0x29b>
push   eax
push   0x0
mov    edi,DWORD PTR [ebx+0x8]
push   edi
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
call   804b200 <join_channel>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0xc]
push   eax
mov    edi,DWORD PTR [ebx+0x4]
push   edi
call   804bad0 <set_enftopic>
add    esp,0x10
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80503c0 <forkbot+0x260>
jmp    80503a0 <forkbot+0x240>
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
add    esp,0x10
jmp    8050371 <forkbot+0x211>
mov    eax,DWORD PTR [ebp-0x30]
mov    DWORD PTR [esi+0x2d8],eax
jmp    8050307 <forkbot+0x1a7>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x296
push   eax
lea    eax,[esi+0x296]
push   eax
call   8048c68 <strcpy@plt>
jmp    805032a <forkbot+0x1ca>
push   edx
push   0x4f
push   eax
lea    eax,[esi+0x246]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [esi+0x295],0x0
jmp    80502e3 <forkbot+0x183>
push   ebx
push   0xb
push   edx
lea    eax,[esi+0x23a]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [esi+0x245],0x0
jmp    80502b3 <forkbot+0x153>
lea    esi,[esi+eiz*1+0x0]
movsx  eax,BYTE PTR [eax+0x1]
sub    eax,0x63
cmp    eax,0x17
ja     80504f0 <forkbot+0x390>
jmp    DWORD PTR [eax*4+0x80690cc]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
add    esp,0x10
jmp    80501d5 <forkbot+0x75>
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x20],eax
mov    DWORD PTR [ebp+0x10],0x0
jmp    80501d5 <forkbot+0x75>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
jmp    805049f <forkbot+0x33f>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],eax
mov    DWORD PTR [ebp-0x28],eax
call   8048f58 <atoi@plt>
add    esp,0x10
test   eax,eax
jne    80501d5 <forkbot+0x75>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    esi
jmp    80501d5 <forkbot+0x75>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x18],eax
jmp    805049f <forkbot+0x33f>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x24],eax
mov    DWORD PTR [ebp-0x2c],0x0
jmp    805049f <forkbot+0x33f>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
pop    edx
pop    ecx
push   0x3a
push   eax
mov    DWORD PTR [ebp-0x24],eax
mov    DWORD PTR [ebp-0x2c],0x1
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     80504f0 <forkbot+0x390>
sub    esp,0xc
mov    BYTE PTR [eax],0x0
inc    eax
push   eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     80504f0 <forkbot+0x390>
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x30],eax
jmp    80501d5 <forkbot+0x75>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x1c],eax
jmp    805049f <forkbot+0x33f>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0xc]
je     80505aa <signoff+0x3a>
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   0x8068f8a
push   ebx
call   80614d0 <send_to_user>
pop    edi
pop    eax
push   0x8068f9b
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
call   8061c10 <saveuserlist>
test   eax,eax
jne    80505d1 <signoff+0x61>
test   ebx,ebx
je     80505d1 <signoff+0x61>
mov    eax,ds:0x8075e74
push   ecx
add    eax,0x724
push   eax
push   0x8071300
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,ds:0x8075e74
sub    esp,0x8
mov    edx,DWORD PTR [eax+0xb40]
push   edx
add    eax,0xb44
push   eax
call   8063980 <write_seenlist>
add    esp,0x10
test   eax,eax
jne    8050611 <signoff+0xa1>
test   ebx,ebx
je     8050611 <signoff+0xa1>
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb40]
push   eax
push   0x8069140
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
call   804f690 <write_levelfile>
test   eax,eax
jne    8050632 <signoff+0xc2>
test   ebx,ebx
je     8050647 <signoff+0xd7>
push   eax
push   0x8068577
push   0x8069180
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
test   ebx,ebx
je     8050647 <signoff+0xd7>
sub    esp,0x8
push   0x8068faf
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
call   8055480 <close_all_dcc>
call   804b170 <delete_all_channels>
mov    eax,ds:0x8075e74
cmp    DWORD PTR [eax+0x8],0xffffffff
je     80506b6 <signoff+0x146>
test   esi,esi
je     8050665 <signoff+0xf5>
cmp    BYTE PTR [esi],0x0
jne    8050677 <signoff+0x107>
sub    esp,0xc
push   0x8068fc1
call   805d660 <randstring>
mov    esi,eax
add    esp,0x10
sub    esp,0x8
test   esi,esi
je     80509a2 <signoff+0x432>
cmp    BYTE PTR [esi],0x0
je     80509a2 <signoff+0x432>
mov    eax,esi
push   eax
push   0x8068fdb
call   8061640 <send_to_server>
pop    eax
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0x8]
push   edi
call   8061980 <killsock>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
add    esp,0x10
sub    esp,0xc
push   0x80691a0
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x3b0]
add    esp,0x10
test   edx,edx
je     80506ec <signoff+0x17c>
mov    edx,DWORD PTR [edx]
test   edx,edx
js     80506ec <signoff+0x17c>
sub    esp,0xc
push   edx
call   8061980 <killsock>
add    esp,0x10
mov    eax,ds:0x8075e74
sub    esp,0xc
add    eax,0x3b0
push   eax
call   8057920 <MyFree>
mov    eax,ds:0x8075e74
add    eax,0x3b4
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,ds:0x8075e74
add    eax,0x3b8
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,ds:0x8075e74
add    eax,0x3bc
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    DWORD PTR [esp],0x80691e0
call   80576b0 <debug>
call   8063b50 <delete_seen>
mov    eax,ds:0x8075e74
add    eax,0xb40
mov    DWORD PTR [esp],eax
xor    esi,esi
call   8057920 <MyFree>
mov    DWORD PTR [esp],0x8069200
call   80576b0 <debug>
mov    eax,ds:0x8075e74
add    esp,0x10
cmp    esi,DWORD PTR [eax+0x71c]
mov    edi,DWORD PTR [eax+0x720]
jl     80508d0 <signoff+0x360>
sub    esp,0xc
add    eax,0x720
push   eax
call   8057920 <MyFree>
xor    esi,esi
mov    DWORD PTR [esp],0x8069220
call   80576b0 <debug>
add    esp,0x10
lea    esi,[esi+0x0]
mov    eax,ds:0x8075e74
sub    esp,0xc
lea    eax,[eax+esi*4+0xb48]
push   eax
inc    esi
call   8057920 <MyFree>
add    esp,0x10
cmp    esi,0x13
jle    80507a0 <signoff+0x230>
mov    eax,ds:0x8075e74
sub    esp,0xc
add    eax,0xb30
push   eax
call   80638f0 <delete_time>
mov    eax,ds:0x8075e74
add    eax,0x3a4
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    eax,ds:0x8075e74
add    eax,0x3a8
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    DWORD PTR [esp],0x8069260
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR ds:0x8076f0c
add    esp,0x10
cmp    eax,edx
mov    ecx,eax
je     80508b9 <signoff+0x349>
test   edx,edx
je     8050830 <signoff+0x2c0>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edx]
cmp    eax,ecx
je     80508b0 <signoff+0x340>
test   eax,eax
mov    edx,eax
jne    8050820 <signoff+0x2b0>
sub    esp,0xc
push   0x8075e74
call   8057920 <MyFree>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    ds:0x8075e74,eax
je     8050863 <signoff+0x2f3>
sub    esp,0xc
push   0x8068fe4
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   0xfffffffe
call   8061980 <killsock>
add    esp,0x10
test   eax,eax
jne    8050863 <signoff+0x2f3>
mov    esi,DWORD PTR ds:0x8076fa8
test   esi,esi
je     805088e <signoff+0x31e>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    ebx,DWORD PTR ds:0x8075e7c
test   ebx,ebx
je     805089d <signoff+0x32d>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f48 <exit@plt>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [edx],eax
jmp    8050830 <signoff+0x2c0>
mov    eax,DWORD PTR [eax]
mov    ds:0x8076f0c,eax
jmp    8050830 <signoff+0x2c0>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[edi+0x2c]
push   eax
call   8057920 <MyFree>
mov    dl,BYTE PTR [edi+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
add    esp,0x10
dec    eax
je     8050971 <signoff+0x401>
mov    al,dl
shr    al,1
and    eax,0x7
sub    eax,0x2
cmp    eax,0x1
jbe    8050952 <signoff+0x3e2>
mov    al,dl
shr    al,1
and    eax,0x7
cmp    eax,0x2
je     805093e <signoff+0x3ce>
shr    dl,1
mov    eax,edx
and    eax,0x7
cmp    eax,0x3
je     805092d <signoff+0x3bd>
inc    esi
mov    eax,ds:0x8075e74
add    edi,0x48
cmp    esi,DWORD PTR [eax+0x71c]
jl     80508d0 <signoff+0x360>
jmp    805077b <signoff+0x20b>
sub    esp,0xc
lea    eax,[edi+0x38]
push   eax
call   8057920 <MyFree>
add    esp,0x10
jmp    8050917 <signoff+0x3a7>
sub    esp,0xc
lea    eax,[edi+0x38]
push   eax
call   8057920 <MyFree>
add    esp,0x10
mov    dl,BYTE PTR [edi+0x3e]
jmp    805090b <signoff+0x39b>
sub    esp,0xc
lea    eax,[edi+0x30]
push   eax
call   8057920 <MyFree>
lea    eax,[edi+0x34]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
add    esp,0x10
mov    dl,BYTE PTR [edi+0x3e]
jmp    80508ff <signoff+0x38f>
mov    eax,DWORD PTR [edi+0x38]
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     805099a <signoff+0x42a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [eax]
sub    esp,0xc
lea    eax,[ebp-0x10]
push   eax
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0x10],ebx
jne    8050980 <signoff+0x410>
mov    dl,BYTE PTR [edi+0x3e]
jmp    80508f0 <signoff+0x380>
mov    eax,0x8067180
jmp    805068d <signoff+0x11d>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8076f0c
test   eax,eax
mov    ebx,DWORD PTR [ebp+0x8]
jne    80509d0 <kill_all_bots+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
push   0x0
mov    ds:0x8075e74,eax
call   8050570 <signoff>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
jne    80509d0 <kill_all_bots+0x20>
jmp    80509c1 <kill_all_bots+0x11>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x12c
xor    ebx,ebx
mov    eax,ds:0x8075e34
cmp    ebx,eax
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR ds:0x8075d28
jge    8050a2f <add_server+0x3f>
cmp    BYTE PTR [edi],0x0
je     8050a24 <add_server+0x34>
mov    edx,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [edi+0x100],edx
je     8050abc <add_server+0xcc>
inc    ebx
add    edi,0x114
cmp    ebx,eax
jl     8050a10 <add_server+0x20>
lea    ebx,[ebp-0x138]
xor    eax,eax
cld    
mov    ecx,0x45
mov    edi,ebx
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8075d70
sub    esp,0x8
mov    DWORD PTR [ebp-0x134],eax
inc    eax
push   esi
mov    ds:0x8075d70,eax
lea    eax,[ebp-0x130]
push   eax
mov    BYTE PTR [ebp-0x138],0x1
call   8048c68 <strcpy@plt>
mov    eax,DWORD PTR [ebp+0x10]
add    esp,0x10
test   eax,eax
je     8050a7b <add_server+0x8b>
mov    eax,DWORD PTR [ebp+0x10]
cmp    BYTE PTR [eax],0x0
jne    8050aa7 <add_server+0xb7>
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
jne    8050a87 <add_server+0x97>
mov    eax,0x1a0b
push   0x114
push   0x8075e34
push   ebx
push   0x8075d28
mov    DWORD PTR [ebp-0x38],eax
call   8059260 <addstruct>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   eax
lea    eax,[ebp-0xe0]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    8050a7b <add_server+0x8b>
sub    esp,0x8
lea    eax,[edi+0x8]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8050af1 <add_server+0x101>
sub    esp,0x8
lea    eax,[edi+0xa8]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8050af1 <add_server+0x101>
mov    eax,ds:0x8075e34
jmp    8050a24 <add_server+0x34>
mov    eax,edi
jmp    8050a9f <add_server+0xaf>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,ds:0x8075d20
mov    DWORD PTR [esi+0x10c],eax
mov    ebx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [esi+0x4]
inc    DWORD PTR [esi+0xfc]
mov    DWORD PTR [ebx+0x10],eax
push   eax
push   0x1
mov    eax,DWORD PTR [esi+0x100]
push   eax
lea    eax,[esi+0x8]
push   eax
call   8060fc0 <SockConnect>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebx+0x8],eax
js     8050b80 <try_server+0x80>
mov    eax,ds:0x8075e74
and    BYTE PTR [eax+0x3ac],0xf7
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR ds:0x8075d20
mov    DWORD PTR [eax+0x4],0x2
mov    DWORD PTR [eax+0xbb0],edx
mov    DWORD PTR [eax+0xbb4],edx
mov    eax,DWORD PTR [eax+0x8]
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0xffffffff
mov    DWORD PTR [esi+0x104],0x5
jmp    8050b6f <try_server+0x6f>
jmp    8050ba0 <connect_to_server>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
mov    esi,DWORD PTR ds:0x8075d28
mov    ecx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
test   esi,esi
push   ebx
mov    DWORD PTR [ecx+0xbb0],eax
je     8050c2a <connect_to_server+0x8a>
mov    ebx,DWORD PTR [ecx+0xb34]
test   ebx,ebx
jne    8050c78 <connect_to_server+0xd8>
mov    eax,DWORD PTR [ecx+0x14]
test   eax,eax
jne    8050c31 <connect_to_server+0x91>
xor    ebx,ebx
mov    eax,ds:0x8075e34
cmp    ebx,eax
mov    edx,DWORD PTR ds:0x8075d28
jge    8050c1a <connect_to_server+0x7a>
mov    esi,DWORD PTR ds:0x8075d20
mov    ecx,eax
mov    esi,esi
cmp    BYTE PTR [edx],0x0
je     8050c11 <connect_to_server+0x71>
cmp    DWORD PTR [edx+0x10c],esi
je     8050c11 <connect_to_server+0x71>
test   ebx,ebx
je     8050c0f <connect_to_server+0x6f>
mov    eax,DWORD PTR [ebx+0xfc]
cmp    DWORD PTR [edx+0xfc],eax
jge    8050c11 <connect_to_server+0x71>
mov    ebx,edx
add    edx,0x114
dec    ecx
jne    8050bf0 <connect_to_server+0x50>
test   ebx,ebx
je     8050c2a <connect_to_server+0x8a>
sub    esp,0xc
push   ebx
call   8050b00 <try_server>
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
push   eax
push   0x114
mov    ecx,DWORD PTR ds:0x8075e34
push   ecx
mov    edx,DWORD PTR ds:0x8075d28
push   edx
call   8059220 <findstruct>
mov    edx,eax
add    esp,0x10
mov    eax,ds:0x8075e74
test   edx,edx
mov    DWORD PTR [eax+0x14],0x0
je     8050bd5 <connect_to_server+0x35>
sub    esp,0xc
push   edx
call   8050b00 <try_server>
add    esp,0x10
test   eax,eax
jns    8050c2a <connect_to_server+0x8a>
jmp    8050bd5 <connect_to_server+0x35>
sub    esp,0xc
push   0x80692a0
call   80576b0 <debug>
mov    ecx,DWORD PTR ds:0x8075e74
mov    edx,DWORD PTR [ecx+0xb34]
add    esp,0x10
test   edx,edx
je     8050bce <connect_to_server+0x2e>
lea    esi,[esi+eiz*1+0x0]
mov    cl,BYTE PTR [edx+0x38d]
mov    al,cl
shr    al,0x4
and    eax,0x3
dec    eax
je     8050ce0 <connect_to_server+0x140>
mov    al,BYTE PTR [edx+0x38d]
or     eax,0x2
and    eax,0xfffffff7
mov    BYTE PTR [edx+0x38d],al
mov    edx,DWORD PTR [edx]
test   edx,edx
jne    8050ca0 <connect_to_server+0x100>
mov    ecx,DWORD PTR ds:0x8075e74
jmp    8050bce <connect_to_server+0x2e>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
and    ecx,0xffffffcf
or     ecx,0xffffffa0
mov    BYTE PTR [edx+0x38d],cl
jmp    8050cb1 <connect_to_server+0x111>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x424
mov    edi,DWORD PTR [ebp+0x8]
mov    eax,ds:0x8075d20
mov    DWORD PTR [edi+0x384],eax
push   0xd
push   0x0
call   8063d20 <get_int_varc>
mov    DWORD PTR [ebp-0x424],eax
add    esp,0xc
mov    eax,DWORD PTR [edi+0x4]
push   eax
push   0x8068ff9
lea    eax,[ebp-0x218]
push   eax
call   8048f18 <sprintf@plt>
mov    BYTE PTR [ebp-0x418],0x0
mov    eax,DWORD PTR [edi+0x380]
xor    esi,esi
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x420],0x0
mov    DWORD PTR [ebp-0x41c],eax
je     8050d9e <parse_avoice+0xae>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    esi,DWORD PTR [ebp-0x424]
jge    8050eaa <parse_avoice+0x1ba>
sub    esp,0x8
add    eax,0x4
push   eax
push   edi
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8050d8c <parse_avoice+0x9c>
cmp    BYTE PTR [eax+0x4],0x0
je     8050e50 <parse_avoice+0x160>
mov    eax,DWORD PTR [ebp-0x41c]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x41c],eax
jne    8050d60 <parse_avoice+0x70>
push   eax
lea    eax,[ebp-0x418]
push   eax
lea    eax,[ebp-0x218]
push   eax
push   0x8069003
call   80576b0 <debug>
mov    eax,DWORD PTR [edi+0x380]
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x41c],eax
je     8050df2 <parse_avoice+0x102>
lea    esi,[ebp-0x41c]
sub    esp,0xc
mov    ebx,DWORD PTR [eax]
push   esi
call   8057920 <MyFree>
add    esp,0x10
cmp    ebx,DWORD PTR [ebp-0x420]
je     8050df2 <parse_avoice+0x102>
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0x41c],ebx
jne    8050dd0 <parse_avoice+0xe0>
mov    eax,DWORD PTR [ebp-0x420]
mov    DWORD PTR [edi+0x380],eax
push   eax
lea    eax,[ebp-0x418]
push   eax
lea    eax,[ebp-0x218]
push   eax
push   0x8069012
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [edi+0x1c]
add    esp,0x10
test   ebx,ebx
je     8050e3a <parse_avoice+0x14a>
jmp    8050e30 <parse_avoice+0x140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and    DWORD PTR [ebx+0x4],0xfffffffb
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8050e30 <parse_avoice+0x140>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x806b7f5
lea    eax,[ebp-0x218]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
test   esi,esi
jne    8050e91 <parse_avoice+0x1a1>
mov    eax,DWORD PTR [ebp-0x41c]
sub    esp,0x8
add    eax,0x4
push   eax
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
inc    esi
or     DWORD PTR [ebx+0x4],0x4
add    esp,0x10
jmp    8050d8c <parse_avoice+0x9c>
sub    esp,0x8
push   0x8067364
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
jmp    8050e6b <parse_avoice+0x17b>
mov    DWORD PTR [ebp-0x420],eax
jmp    8050d9e <parse_avoice+0xae>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
push   0x8075d20
call   8048ea8 <localtime@plt>
mov    esi,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   esi,esi
mov    DWORD PTR [ebp-0x10],eax
je     8050efc <reset_botstate+0x3c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [esi+0x4],0x4
je     8050f70 <reset_botstate+0xb0>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8050ef0 <reset_botstate+0x30>
mov    ebx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebx+0x4]
test   eax,eax
jne    8050f19 <reset_botstate+0x59>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR ds:0x8076fac
cmp    eax,0x78
jg     8050f21 <reset_botstate+0x61>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    DWORD PTR ds:0x8076fac,edx
call   804f9b0 <savesession>
test   eax,eax
je     8050f50 <reset_botstate+0x90>
call   804f690 <write_levelfile>
test   eax,eax
jne    8050f19 <reset_botstate+0x59>
sub    esp,0x8
push   0x8068577
push   0x8069180
call   804b7d0 <send_global_statmsg>
add    esp,0x10
jmp    8050f19 <reset_botstate+0x59>
sub    esp,0x8
push   0x806736f
push   0x80692e0
call   804b7d0 <send_global_statmsg>
add    esp,0x10
jmp    8050f30 <reset_botstate+0x70>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR [esi+0xba0]
cmp    eax,0x8
mov    DWORD PTR ds:0x8075e74,esi
jg     8051327 <reset_botstate+0x467>
mov    edx,DWORD PTR ds:0x8075e74
mov    ebx,DWORD PTR [edx+0xb34]
xor    edi,edi
test   ebx,ebx
je     8050fe0 <reset_botstate+0x120>
nop
mov    edx,DWORD PTR [ebx+0x380]
test   edx,edx
je     8050fc3 <reset_botstate+0x103>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x384]
cmp    eax,0x5
jg     8051310 <reset_botstate+0x450>
test   edx,edx
je     8050fc3 <reset_botstate+0x103>
inc    edi
mov    al,BYTE PTR [ebx+0x38d]
and    eax,0x38
cmp    al,0x10
je     80512f0 <reset_botstate+0x430>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8050fa0 <reset_botstate+0xe0>
mov    edx,DWORD PTR ds:0x8075e74
test   edi,edi
jne    8050feb <reset_botstate+0x12b>
and    DWORD PTR ds:0x8075460,0xfffffffe
mov    ecx,DWORD PTR ds:0x8075d20
mov    eax,ecx
sub    eax,DWORD PTR [edx+0xb98]
cmp    eax,0x5a
jg     80511dc <reset_botstate+0x31c>
mov    eax,DWORD PTR [ebp-0x10]
mov    ecx,DWORD PTR [eax+0x4]
mov    edx,0xa
mov    eax,ecx
mov    ebx,edx
cdq    
idiv   ebx
test   edx,edx
jne    8051103 <reset_botstate+0x243>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edx+0xba8]
cmp    eax,0x78
jle    8051103 <reset_botstate+0x243>
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     8051063 <reset_botstate+0x1a3>
sub    esp,0x8
push   0x1
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    80511c0 <reset_botstate+0x300>
mov    ebx,DWORD PTR [ebx]
inc    edi
test   ebx,ebx
jne    8051040 <reset_botstate+0x180>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0xb38]
test   eax,eax
mov    ebx,0x806f231
je     8051075 <reset_botstate+0x1b5>
mov    ebx,DWORD PTR [eax+0x4]
mov    eax,DWORD PTR [edx+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    ecx,DWORD PTR ds:0x8075d28
push   ecx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     805119c <reset_botstate+0x2dc>
sub    esp,0xc
mov    edx,DWORD PTR [eax+0x100]
push   edx
cmp    BYTE PTR [eax+0xa8],0x0
je     8051194 <reset_botstate+0x2d4>
add    eax,0xa8
push   eax
push   edi
push   ebx
push   0x8069019
call   804b700 <send_statmsg>
add    esp,0x20
mov    eax,ds:0x8075e74
sub    esp,0x8
mov    edx,DWORD PTR [eax+0xb40]
push   edx
add    eax,0xb44
push   eax
call   8063980 <write_seenlist>
add    esp,0x10
test   eax,eax
je     8051173 <reset_botstate+0x2b3>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR ds:0x8075d20
mov    DWORD PTR [eax+0xba8],edx
mov    eax,DWORD PTR [ebp-0x10]
mov    ecx,DWORD PTR [eax+0x4]
test   ecx,ecx
jne    8050ef6 <reset_botstate+0x36>
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR ds:0x8075e74
sub    eax,DWORD PTR [edx+0xba4]
cmp    eax,0x78
jle    8050ef6 <reset_botstate+0x36>
sub    esp,0xc
push   0x806902d
call   804b700 <send_statmsg>
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0xba4],eax
call   8061c10 <saveuserlist>
add    esp,0x10
test   eax,eax
jne    8050ef6 <reset_botstate+0x36>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x724
push   eax
push   0x8071300
call   804b700 <send_statmsg>
add    esp,0x10
jmp    8050ef6 <reset_botstate+0x36>
mov    eax,ds:0x8075e74
sub    esp,0x8
mov    eax,DWORD PTR [eax+0xb40]
push   eax
push   0x8069140
call   804b700 <send_statmsg>
add    esp,0x10
jmp    80510ec <reset_botstate+0x22c>
add    eax,0x8
jmp    80510b7 <reset_botstate+0x1f7>
push   ecx
push   edi
push   ebx
push   0x8069320
call   804b700 <send_statmsg>
add    esp,0x10
jmp    80510c7 <reset_botstate+0x207>
jmp    80511c0 <reset_botstate+0x300>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x18
push   0x1
push   ebx
call   8063d20 <get_int_varc>
add    esp,0x14
push   eax
call   804c0e0 <auto_unban>
add    esp,0x10
jmp    8051056 <reset_botstate+0x196>
sub    esp,0x8
lea    eax,[ecx-0x708]
push   eax
lea    eax,[edx+0xb30]
push   eax
call   8063930 <uptime_time>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xb98],eax
pop    eax
pop    ecx
lea    eax,[edx+0x22d]
push   eax
add    edx,0x220
push   edx
call   8048ef8 <strcmp@plt>
add    esp,0x10
test   eax,eax
jne    80512cc <reset_botstate+0x40c>
call   804ac70 <check_idlekick>
sub    esp,0x8
push   0x26
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
setne  al
and    eax,0xff
test   eax,eax
mov    edi,eax
je     8051002 <reset_botstate+0x142>
mov    eax,ds:0x8075e74
test   BYTE PTR [eax+0x3ac],0x8
jne    8051002 <reset_botstate+0x142>
mov    edx,DWORD PTR ds:0x8075d20
sub    edx,DWORD PTR [eax+0xbb4]
lea    eax,[edi+edi*1]
add    eax,edi
lea    eax,[eax+eax*4]
shl    eax,0x2
cmp    edx,eax
jle    8051002 <reset_botstate+0x142>
sub    esp,0xc
push   0x806903a
call   805d660 <randstring>
mov    ebx,eax
pop    eax
mov    eax,ds:0x8075d20
push   eax
call   8057de0 <time2away>
add    esp,0xc
test   ebx,ebx
push   eax
je     80512c5 <reset_botstate+0x405>
cmp    BYTE PTR [ebx],0x0
je     80512c5 <reset_botstate+0x405>
mov    eax,ebx
push   eax
push   0x8069051
call   8061640 <send_to_server>
mov    eax,ds:0x8075e74
or     BYTE PTR [eax+0x3ac],0x8
add    esp,0x10
jmp    8051002 <reset_botstate+0x142>
mov    eax,0x806905a
jmp    80512a6 <reset_botstate+0x3e6>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x22d
push   eax
push   0x8069064
call   8061640 <send_to_server>
add    esp,0x10
jmp    8051223 <reset_botstate+0x363>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   8059620 <needop>
add    esp,0x10
jmp    8050fd4 <reset_botstate+0x114>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   ebx
call   8050cf0 <parse_avoice>
add    esp,0x10
mov    edx,DWORD PTR [ebx+0x380]
jmp    8050fbe <reset_botstate+0xfe>
mov    DWORD PTR [esi+0xba0],edx
call   804be00 <rejoin_channels>
jmp    8050f8d <reset_botstate+0xcd>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x20c
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x8]
mov    ebx,eax
mov    esi,eax
shr    ebx,0x5
and    esi,0x1f
mov    eax,DWORD PTR [ebx*4+0x8076f20]
mov    ecx,esi
shr    eax,cl
and    eax,0x1
jne    80515d9 <parse_server_input+0x299>
mov    eax,DWORD PTR [ebx*4+0x8075ca0]
mov    ecx,esi
shr    eax,cl
and    eax,0x1
je     80514e0 <parse_server_input+0x1a0>
lea    ebx,[ebp-0x218]
lea    esi,[esi+0x0]
call   8048de8 <__error@plt>
mov    DWORD PTR [eax],0x23
mov    edx,DWORD PTR ds:0x8075e74
push   esi
push   ebx
lea    eax,[edx+0x18]
push   eax
mov    ecx,DWORD PTR [edx+0x8]
push   ecx
call   8061780 <sockread>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8051562 <parse_server_input+0x222>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x3b0]
test   eax,eax
jne    80514f0 <parse_server_input+0x1b0>
cmp    DWORD PTR [edx+0x4],0x8
jne    80513e8 <parse_server_input+0xa8>
mov    esi,0x806906c
mov    edi,ebx
mov    ecx,0x13
cld    
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     80513f6 <parse_server_input+0xb6>
sub    esp,0xc
push   ebx
call   8060d50 <parseline>
add    esp,0x10
jmp    8051390 <parse_server_input+0x50>
sub    esp,0x8
push   ebx
push   0x8069080
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    80514b5 <parse_server_input+0x175>
sub    esp,0xc
push   0x806908b
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0x10]
push   esi
push   0x114
mov    ecx,DWORD PTR ds:0x8075e34
push   ecx
mov    edx,DWORD PTR ds:0x8075d28
push   edx
call   8059220 <findstruct>
xor    edi,edi
add    esp,0x20
test   eax,eax
mov    esi,eax
je     8051453 <parse_server_input+0x113>
cmp    BYTE PTR [eax+0x58],0x0
je     8051453 <parse_server_input+0x113>
mov    edi,0x1
mov    eax,ds:0x8075e74
sub    esp,0x8
lea    edx,[eax+0x246]
push   edx
lea    edx,[eax+0x23a]
push   edx
add    eax,0x22d
test   edi,edi
push   eax
mov    eax,0x8067180
je     805147b <parse_server_input+0x13b>
lea    eax,[esi+0x58]
test   edi,edi
push   eax
mov    eax,0x80690a7
jne    805148a <parse_server_input+0x14a>
mov    eax,0x8067180
push   eax
push   0x80690ae
call   8061640 <send_to_server>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
add    esp,0x20
mov    DWORD PTR [edx+0x4],0x3
mov    DWORD PTR [edx+0xbb0],eax
jmp    8051390 <parse_server_input+0x50>
mov    eax,ds:0x8075e74
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   edx
push   ebx
push   0x806726d
mov    eax,DWORD PTR [eax]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
test   eax,eax
js     8051511 <parse_server_input+0x1d1>
mov    edx,DWORD PTR ds:0x8075e74
jmp    80513d1 <parse_server_input+0x91>
sub    esp,0x10
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
add    esp,0xc
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3b0]
mov    eax,DWORD PTR [eax]
push   eax
push   0x8069360
call   80576b0 <debug>
pop    eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3b0]
mov    edi,DWORD PTR [eax]
push   edi
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
add    eax,0x3b0
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
add    esp,0x10
jmp    8051506 <parse_server_input+0x1c6>
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
cmp    eax,0x4
je     80514e0 <parse_server_input+0x1a0>
cmp    eax,0x23
je     80514e0 <parse_server_input+0x1a0>
sub    esp,0x10
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
add    esp,0xc
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
push   0x80693a0
call   80576b0 <debug>
mov    edi,DWORD PTR ds:0x8075e74
cld    
mov    eax,esi
add    edi,0x18
mov    ecx,0x80
rep stos DWORD PTR es:[edi],eax
pop    eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
mov    DWORD PTR [eax+0x4],0x0
add    esp,0x10
jmp    80514e0 <parse_server_input+0x1a0>
sub    esp,0x8
lea    eax,[edx+0x22d]
push   eax
push   edx
call   80595b0 <setbotnick>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0xc
lea    eax,[edx+0x22d]
push   eax
mov    eax,DWORD PTR [edx+0x8]
push   eax
push   0x80693e0
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR ds:0x8075d20
mov    DWORD PTR [eax+0xbb0],edx
mov    DWORD PTR [eax+0x4],0x3
mov    eax,DWORD PTR [eax+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    eax,ds:0x8075d28
push   eax
call   8059220 <findstruct>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x20
cmp    edx,0xfffffd6a
mov    esi,eax
mov    ecx,edx
je     8051657 <parse_server_input+0x317>
cmp    DWORD PTR [edx+0x2dc],0x1
je     80516ab <parse_server_input+0x36b>
xor    edi,edi
test   esi,esi
je     8051668 <parse_server_input+0x328>
cmp    BYTE PTR [esi+0x58],0x0
je     8051668 <parse_server_input+0x328>
mov    edi,0x1
sub    esp,0x8
lea    eax,[ecx+0x246]
push   eax
lea    eax,[ecx+0x23a]
push   eax
test   edi,edi
lea    eax,[ecx+0x22d]
push   eax
mov    eax,0x8067180
je     805168c <parse_server_input+0x34c>
lea    eax,[esi+0x58]
test   edi,edi
push   eax
mov    eax,0x80690a7
jne    805169b <parse_server_input+0x35b>
mov    eax,0x8067180
push   eax
push   0x80690ae
call   8061640 <send_to_server>
jmp    80514e0 <parse_server_input+0x1a0>
test   eax,eax
je     8051701 <parse_server_input+0x3c1>
sub    esp,0xc
push   0x8069420
call   80576b0 <debug>
add    esp,0xc
mov    edi,DWORD PTR [esi+0x100]
push   edi
lea    eax,[esi+0x8]
push   eax
push   0x8068f4b
call   8061640 <send_to_server>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    DWORD PTR [edx+0x8],0xffffffff
je     80516ef <parse_server_input+0x3af>
mov    DWORD PTR [edx+0x4],0x8
jmp    80514e0 <parse_server_input+0x1a0>
mov    eax,DWORD PTR [esi+0x4]
mov    DWORD PTR [edx+0x14],eax
mov    DWORD PTR [edx+0x2dc],0x65
jmp    80516e3 <parse_server_input+0x3a3>
sub    esp,0xc
mov    eax,DWORD PTR [edx+0x8]
push   eax
jmp    80514c1 <parse_server_input+0x181>
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80587f0 <get_channel>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8051ac0 <do_stats+0x3b0>
sub    esp,0xc
push   eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8051a9c <do_stats+0x38c>
test   edi,edi
je     8051a07 <do_stats+0x2f7>
sub    esp,0xc
push   edi
call   8063280 <password_needed>
add    esp,0x10
test   eax,eax
jne    8051a7b <do_stats+0x36b>
mov    DWORD PTR [ebp-0x18],0x0
test   esi,esi
je     8051a64 <do_stats+0x354>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
push   edi
call   8063320 <find_shit>
add    esp,0x10
test   esi,esi
mov    DWORD PTR [ebp-0x10],eax
je     8051933 <do_stats+0x223>
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
push   edi
mov    edx,DWORD PTR [ebp+0x8]
push   0x8069460
push   edx
call   80614d0 <send_to_user>
add    esp,0xc
lea    eax,[esi+0x8]
push   eax
push   0x8069e06
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    edx,DWORD PTR [esi+0x3c]
mov    eax,edx
shr    eax,0x9
cmp    al,0xc8
mov    ecx,0x8069e1b
je     80517d8 <do_stats+0xc8>
mov    ecx,0x8067180
shr    edx,0x9
push   ecx
movzx  eax,dl
push   eax
push   0x8069e22
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [esi+0x38]
add    esp,0x20
test   ebx,ebx
je     805185b <do_stats+0x14b>
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     8051a5a <do_stats+0x34a>
mov    eax,0x8069e39
push   eax
lea    eax,[ebx+0x4]
push   eax
push   0x8069e3b
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
je     805185b <do_stats+0x14b>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     8051a50 <do_stats+0x340>
mov    eax,0x8069e39
push   eax
lea    eax,[ebx+0x4]
push   eax
push   0x8069e52
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8051830 <do_stats+0x120>
mov    ecx,DWORD PTR [ebp-0x18]
test   ecx,ecx
push   ebx
mov    eax,0x8069e69
je     8051878 <do_stats+0x168>
cmp    DWORD PTR [ebp-0x18],0x1
mov    eax,0x8069e79
je     8051878 <do_stats+0x168>
mov    eax,0x8069e7d
push   eax
mov    edx,DWORD PTR [ebp+0x8]
push   0x8069e80
push   edx
call   80614d0 <send_to_user>
sub    esp,0x8
push   0x14
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8063dc0 <get_int_var>
add    esp,0x10
test   eax,eax
mov    edx,0x8067180
jne    80518a6 <do_stats+0x196>
mov    edx,0x8069e95
test   esi,esi
push   edx
je     8051a3e <do_stats+0x32e>
mov    ax,WORD PTR [esi+0x3c]
shr    ax,0x6
and    eax,0x7
push   eax
push   0x8069eb1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x18
push   0x11
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8063dc0 <get_int_var>
add    esp,0x10
test   eax,eax
mov    edx,0x8067180
jne    80518e8 <do_stats+0x1d8>
mov    edx,0x8069eca
test   esi,esi
push   edx
je     8051a34 <do_stats+0x324>
test   BYTE PTR [esi+0x3c],0x2
je     8051a34 <do_stats+0x324>
mov    eax,0x8069e79
push   eax
push   0x8069ee6
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0xc
test   BYTE PTR [esi+0x3c],0x1
je     8051a2a <do_stats+0x31a>
mov    eax,0x806f388
push   eax
push   0x8069efd
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     80519f6 <do_stats+0x2e6>
test   esi,esi
je     8051a0f <do_stats+0x2ff>
push   ecx
mov    eax,DWORD PTR [ebp-0x10]
mov    edx,DWORD PTR [eax+0x38]
push   edx
push   0x8069f12
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [edx+0x30]
add    esp,0xc
push   eax
push   0x8069f27
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
pop    eax
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax+0x40]
push   eax
call   8057d60 <time2str>
add    esp,0xc
push   eax
push   0x8069f3c
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [edx+0x3c]
shr    eax,0x9
add    esp,0xc
and    eax,0xff
push   eax
push   0x8069f51
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x10]
pop    esi
mov    ebx,DWORD PTR [eax+0x44]
push   ebx
call   8057d60 <time2str>
add    esp,0xc
push   eax
push   0x8069f66
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [edx+0x34]
add    esp,0xc
test   eax,eax
jne    80519e4 <do_stats+0x2d4>
mov    eax,0x8069f7b
push   eax
push   0x8069f87
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   80614d0 <send_to_user>
add    esp,0x10
sub    esp,0x8
push   0x8069f9c
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,DWORD PTR [ebp-0x14]
push   esi
push   edi
push   0x80694a0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8051946 <do_stats+0x236>
mov    eax,0x806f3a1
jmp    8051921 <do_stats+0x211>
mov    eax,0x8069fae
jmp    8051900 <do_stats+0x1f0>
xor    eax,eax
jmp    80518ba <do_stats+0x1aa>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x8067180
jmp    805183f <do_stats+0x12f>
mov    eax,0x8067180
jmp    8051807 <do_stats+0xf7>
sub    esp,0x8
mov    esi,DWORD PTR [ebp-0x14]
push   esi
push   edi
call   8062b00 <find_user>
mov    esi,eax
add    esp,0x10
jmp    805177f <do_stats+0x6f>
sub    esp,0xc
push   edi
call   8063210 <verified>
add    esp,0x10
test   eax,eax
sete   al
and    eax,0xff
mov    DWORD PTR [ebp-0x18],eax
inc    DWORD PTR [ebp-0x18]
jmp    8051777 <do_stats+0x67>
push   eax
push   0x0
push   edi
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80588c0 <nick2uh>
mov    edi,eax
add    esp,0x10
jmp    8051754 <do_stats+0x44>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    esi,esi
mov    edi,DWORD PTR [ebp+0x8]
jmp    8051754 <do_stats+0x44>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8051bb0 <do_access+0xe0>
mov    eax,ds:0x8075e74
mov    al,BYTE PTR [eax+0x380]
cmp    BYTE PTR [ebx],al
je     8051b80 <do_access+0xb0>
push   eax
push   0x0
push   ebx
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8051b4e <do_access+0x7e>
cmp    BYTE PTR [ebx],0x24
je     8051b60 <do_access+0x90>
push   eax
push   ebx
push   0x8069fb2
push   edi
call   80614d0 <send_to_user>
sub    esp,0x8
push   esi
push   ebx
call   8062c50 <get_userlevel>
add    esp,0x10
push   eax
push   esi
push   0x8069fcb
push   edi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
je     8051b6e <do_access+0x9e>
cmp    al,0x40
jne    8051b60 <do_access+0x90>
inc    ebx
jmp    8051b27 <do_access+0x57>
cmp    al,0x40
jne    8051b27 <do_access+0x57>
jmp    8051b6b <do_access+0x9b>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
inc    ebx
push   ebx
call   804f620 <level_needed>
add    esp,0x10
test   eax,eax
js     8051b4e <do_access+0x7e>
push   edx
push   eax
push   0x80694c0
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8051b4e <do_access+0x7e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ebx,edi
jmp    8051b22 <do_access+0x52>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x118
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],esi
call   8063280 <password_needed>
mov    ebx,eax
mov    DWORD PTR [esp],esi
call   8063210 <verified>
add    esp,0x10
test   ebx,ebx
je     8051cf0 <do_auth+0x130>
test   eax,eax
jne    8051cd0 <do_auth+0x110>
test   edi,edi
je     8051c08 <do_auth+0x48>
cmp    BYTE PTR [edi],0x0
jne    8051c30 <do_auth+0x70>
sub    esp,0x8
push   0x8069500
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8051c30 <do_auth+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   edi
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x32
jbe    8051c45 <do_auth+0x85>
mov    BYTE PTR [edi+0x32],0x0
sub    esp,0x8
push   edi
push   esi
call   80632b0 <correct_password>
add    esp,0x10
test   eax,eax
je     8051cb8 <do_auth+0xf8>
sub    esp,0x8
push   0x8069520
push   esi
call   80614d0 <send_to_user>
pop    ebx
pop    eax
mov    eax,ds:0x8075e74
push   esi
add    eax,0xb2c
push   eax
call   8063800 <make_time>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8051c88 <do_auth+0xc8>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xc],eax
sub    esp,0xc
push   0x8075da0
call   804ab20 <op_all_chan>
push   edi
push   esi
push   0x806e50a
lea    ebx,[ebp-0x118]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x18
push   ebx
push   0x0
call   805b930 <Link_userverify>
jmp    8051c16 <do_auth+0x56>
sub    esp,0x8
push   0x8069540
jmp    8051c10 <do_auth+0x50>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x8069580
push   esi
call   80614d0 <send_to_user>
jmp    8051c19 <do_auth+0x59>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80695c0
jmp    8051cd8 <do_auth+0x118>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075d20
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
push   eax
call   8057de0 <time2away>
add    esp,0x10
cmp    BYTE PTR [ebx],0x23
je     8051d40 <do_time+0x40>
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x8069fe3
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x8069fe3
mov    DWORD PTR [ebp+0x8],ebx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    8061360 <sendprivmsg>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
push   0x0
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR ds:0x8075e74
sub    eax,DWORD PTR [edx+0xbb8]
push   eax
call   8057f50 <idle2str>
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0x8],ebx
mov    DWORD PTR [ebp+0xc],0x8069ff7
mov    ebx,DWORD PTR [ebp-0x4]
add    esp,0x10
mov    esp,ebp
pop    ebp
jmp    80614d0 <send_to_user>
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
push   0x0
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR ds:0x8075e74
sub    eax,DWORD PTR [edx+0xbbc]
push   eax
call   8057f50 <idle2str>
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0x8],ebx
mov    DWORD PTR [ebp+0xc],0x806a002
mov    ebx,DWORD PTR [ebp-0x4]
add    esp,0x10
mov    esp,ebp
pop    ebp
jmp    80614d0 <send_to_user>
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x10]
push   esi
test   eax,eax
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
je     8051df4 <do_cchan+0x14>
cmp    BYTE PTR [eax],0x0
jne    8051e20 <do_cchan+0x40>
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb38]
test   eax,eax
mov    edx,0x806f231
je     8051e0c <do_cchan+0x2c>
mov    edx,DWORD PTR [eax+0x4]
push   edx
push   0x806a00d
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
pop    edx
pop    ecx
push   0x1
push   eax
mov    esi,eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8051e61 <do_cchan+0x81>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xb38],edx
push   eax
mov    eax,DWORD PTR [edx+0x4]
push   eax
push   0x806a021
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8051e18 <do_cchan+0x38>
push   eax
push   esi
push   0x807128a
jmp    8051e56 <do_cchan+0x76>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8051eb0 <do_opme+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    8051eb0 <do_opme+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8051e9a <do_opme+0x2a>
push   eax
push   0x8075da0
push   0x8067900
push   ebx
call   80613b0 <sendmode>
add    esp,0x10
jmp    8051e9a <do_opme+0x2a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8051f30 <do_deopme+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    8051f30 <do_deopme+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8051f1a <do_deopme+0x2a>
push   eax
push   0x8075da0
push   0x806a03b
push   ebx
call   80613b0 <sendmode>
add    esp,0x10
jmp    8051f1a <do_deopme+0x2a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8051fb0 <do_op+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    8051fb0 <do_op+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8051f9a <do_op+0x2a>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8051fe5 <do_op+0x75>
sub    esp,0xc
push   0x6f
push   0x2b
push   0x2
push   eax
push   ebx
call   804c320 <channel_massmode>
jmp    8051f9a <do_op+0x2a>
push   eax
push   0x8075da0
push   0x8067900
push   ebx
call   80613b0 <sendmode>
jmp    8051f9a <do_op+0x2a>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052040 <do_voice+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    8052040 <do_voice+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     805202a <do_voice+0x2a>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8052075 <do_voice+0x75>
sub    esp,0xc
push   0x76
push   0x2b
push   0x3
push   eax
push   ebx
call   804c320 <channel_massmode>
jmp    805202a <do_voice+0x2a>
push   eax
push   0x8075da0
push   0x806a041
push   ebx
call   80613b0 <sendmode>
jmp    805202a <do_voice+0x2a>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    80520d0 <do_deop+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     80520bb <do_deop+0x2b>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8052105 <do_deop+0x75>
sub    esp,0xc
push   0x6f
push   0x2d
push   0x2
push   eax
push   ebx
call   804c320 <channel_massmode>
jmp    80520bb <do_deop+0x2b>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x80703c0
push   ebx
push   esi
call   804f840 <usage>
jmp    80520bb <do_deop+0x2b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052160 <do_unvoice+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     805214b <do_unvoice+0x2b>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8052195 <do_unvoice+0x75>
sub    esp,0xc
push   0x76
push   0x2d
push   0x3
push   eax
push   ebx
call   804c320 <channel_massmode>
jmp    805214b <do_unvoice+0x2b>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x8070830
push   ebx
push   esi
call   804f840 <usage>
jmp    805214b <do_unvoice+0x2b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8052252 <do_invite+0xa2>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
mov    DWORD PTR [ebp-0x10],0x8075da0
je     80521f2 <do_invite+0x42>
cmp    BYTE PTR [eax],0x0
je     80521f2 <do_invite+0x42>
mov    DWORD PTR [ebp-0x10],eax
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     8052260 <do_invite+0xb0>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     8052245 <do_invite+0x95>
cmp    BYTE PTR [eax],0x0
je     8052245 <do_invite+0x95>
lea    edi,[ebp-0x10]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   ebx
push   eax
push   edi
call   8057b00 <chop>
pop    edx
pop    ecx
push   eax
push   0x806839f
call   8061640 <send_to_server>
mov    eax,DWORD PTR [ebp-0x10]
add    esp,0x10
test   eax,eax
je     8052245 <do_invite+0x95>
cmp    BYTE PTR [eax],0x0
jne    8052220 <do_invite+0x70>
push   edi
push   ebx
push   0x806a047
push   esi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   eax
push   ebx
push   0x807128a
jmp    805224c <do_invite+0x9c>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0x10]
push   0x1
push   ebx
call   8055250 <search_list>
add    esp,0x10
test   eax,eax
je     80522b0 <do_chat+0x40>
mov    DWORD PTR [ebp+0xc],0x8069600
mov    DWORD PTR [ebp+0x8],ebx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp+0xc],esi
mov    DWORD PTR [ebp+0x8],ebx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    8055b40 <dcc_chat>
jmp    80522d0 <do_say>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8052311 <do_say+0x41>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8052320 <do_say+0x50>
sub    esp,0x8
mov    eax,ds:0x80706b0
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   esi
push   eax
push   0x806a12d
push   ebx
call   8061360 <sendprivmsg>
jmp    8052311 <do_say+0x41>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8052371 <do_me+0x41>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8052380 <do_me+0x50>
sub    esp,0x8
mov    eax,ds:0x8070530
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   esi
push   eax
push   0x806a05d
push   ebx
call   8061490 <send_ctcp>
jmp    8052371 <do_me+0x41>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    ebx,eax
mov    eax,DWORD PTR [ebp+0x10]
add    esp,0x10
test   eax,eax
je     80523b5 <do_msg+0x25>
cmp    BYTE PTR [eax],0x0
jne    80523d0 <do_msg+0x40>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070550
push   ecx
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x23
je     8052450 <do_msg+0xc0>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8052446 <do_msg+0xb6>
cmp    BYTE PTR [ebx],0x3d
je     8052416 <do_msg+0x86>
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   0x806a12d
push   ebx
call   8061360 <sendprivmsg>
add    esp,0xc
push   ebx
push   0x806a067
push   esi
call   80614d0 <send_to_user>
jmp    80523c5 <do_msg+0x35>
sub    esp,0x8
push   0x1
inc    ebx
push   ebx
call   8055250 <search_list>
add    esp,0x10
test   eax,eax
je     805243d <do_msg+0xad>
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x10]
push   edx
add    eax,0x20c
push   eax
call   8055c40 <send_chat>
jmp    8052405 <do_msg+0x75>
push   ecx
push   ebx
push   0x8069620
jmp    805240e <do_msg+0x7e>
sub    esp,0x8
push   0x8069640
jmp    805240e <do_msg+0x7e>
mov    edx,DWORD PTR [ebp+0x14]
push   edx
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
push   esi
call   80522d0 <do_say>
jmp    80523c5 <do_msg+0x35>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
mov    edx,DWORD PTR [ebp+0x8]
je     8052490 <do_do+0x20>
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x806a12d
pop    ebp
jmp    8061640 <send_to_server>
lea    esi,[esi+0x0]
mov    eax,ds:0x80703e0
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],edx
pop    ebp
jmp    804f840 <usage>
jmp    80524b0 <do_join>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8052520 <do_join+0x70>
cmp    BYTE PTR [eax],0x23
je     80524f0 <do_join+0x40>
sub    esp,0x8
push   0x806a07a
push   esi
call   80614d0 <send_to_user>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     80524e0 <do_join+0x30>
push   eax
push   ebx
push   0x806a08f
push   esi
call   80614d0 <send_to_user>
add    esp,0xc
push   0x1
mov    esi,DWORD PTR [ebp+0x10]
push   esi
push   ebx
call   804b200 <join_channel>
jmp    80524e0 <do_join+0x30>
sub    esp,0x8
mov    eax,ds:0x8070480
push   eax
push   esi
call   804f840 <usage>
jmp    80524e0 <do_join+0x30>
jmp    8052540 <do_part>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052580 <do_part+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x1
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8052600 <do_part+0xc0>
push   ecx
push   esi
push   0x806a0a9
push   edi
call   80614d0 <send_to_user>
mov    al,BYTE PTR [ebx+0x38d]
and    eax,0x4f
or     eax,0x20
mov    BYTE PTR [ebx+0x38d],al
pop    eax
pop    edx
push   esi
push   0x806a0b4
call   8061640 <send_to_server>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    ebx,DWORD PTR [edx+0xb38]
jne    805256c <do_part+0x2c>
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     80525f5 <do_part+0xb5>
nop
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     80525f5 <do_part+0xb5>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80525e0 <do_part+0xa0>
mov    DWORD PTR [edx+0xb38],ebx
jmp    805256c <do_part+0x2c>
push   ebx
push   esi
push   0x807128a
push   edi
call   80614d0 <send_to_user>
jmp    805256c <do_part+0x2c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8052642 <do_nick+0x22>
cmp    BYTE PTR [eax],0x0
jne    8052660 <do_nick+0x40>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x8070580
push   ebx
push   esi
call   804f840 <usage>
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
jne    8052680 <do_nick+0x60>
push   eax
push   ebx
push   0x80712c1
push   esi
call   80614d0 <send_to_user>
jmp    8052655 <do_nick+0x35>
nop
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0xc
jbe    805269a <do_nick+0x7a>
push   eax
push   ebx
push   0x806a0bc
jmp    8052677 <do_nick+0x57>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x22d
push   eax
call   8048c68 <strcpy@plt>
pop    esi
pop    eax
mov    eax,ds:0x8075e74
add    eax,0x22d
push   eax
push   0x8069064
call   8061640 <send_to_server>
jmp    8052652 <do_nick+0x32>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052700 <do_die+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    8052700 <do_die+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call   804f9b0 <savesession>
mov    ecx,DWORD PTR [ebp+0x10]
test   ecx,ecx
je     8052714 <do_die+0x44>
mov    eax,DWORD PTR [ebp+0x10]
cmp    BYTE PTR [eax],0x0
jne    8052780 <do_die+0xb0>
sub    esp,0xc
push   0x8068fc1
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
je     8052774 <do_die+0xa4>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x3a4
push   eax
mov    DWORD PTR ds:0x8075d6c,0x80526d0
call   80579d0 <mstrcpy>
pop    eax
pop    edx
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x3a8
push   eax
mov    DWORD PTR ds:0x8075d6c,0x80526d0
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x4],0x6
jmp    80526ea <do_die+0x1a>
mov    eax,0x806a0d2
jmp    8052728 <do_die+0x58>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x10]
jmp    8052728 <do_die+0x58>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x68
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x3c],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,ebx
mov    ebx,eax
je     8052980 <do_add+0x1f0>
mov    al,BYTE PTR [eax]
test   al,al
je     8052980 <do_add+0x1f0>
cmp    al,0x23
je     80527e5 <do_add+0x55>
sub    esp,0x8
push   0x806e306
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8052980 <do_add+0x1f0>
mov    al,BYTE PTR [ebx]
cmp    al,0x2a
je     8052b50 <do_add+0x3c0>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
mov    edi,eax
jge    8052810 <do_add+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0xc
jbe    8052837 <do_add+0xa7>
push   ebx
push   0xc
push   0x8069660
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8052804 <do_add+0x74>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp-0x3c]
push   ecx
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
je     8052856 <do_add+0xc6>
push   edx
add    eax,0x8
push   eax
push   0x806a0eb
jmp    805282c <do_add+0x9c>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x40],eax
je     8052b3e <do_add+0x3ae>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x44],eax
je     8052b31 <do_add+0x3a1>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x48],eax
je     8052b25 <do_add+0x395>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
je     8052b19 <do_add+0x389>
sub    esp,0xc
push   esi
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x50],eax
mov    esi,DWORD PTR [ebp-0x44]
pop    eax
push   esi
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     8052980 <do_add+0x1f0>
mov    eax,DWORD PTR [eax]
cmp    eax,0xc8
mov    DWORD PTR [ebp-0x54],eax
je     80528e8 <do_add+0x158>
cmp    eax,0x64
ja     8052b0c <do_add+0x37c>
cmp    edi,0x64
je     80528f6 <do_add+0x166>
cmp    DWORD PTR [ebp-0x54],edi
jg     8052b00 <do_add+0x370>
push   eax
push   0x1
mov    eax,DWORD PTR [ebp-0x40]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8052804 <do_add+0x74>
sub    esp,0x8
push   0x806a107
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    8052934 <do_add+0x1a4>
push   eax
push   esi
push   0x80696a0
jmp    805282c <do_add+0x9c>
sub    esp,0x8
push   esi
push   0x806a10a
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     8052955 <do_add+0x1c5>
push   eax
push   esi
push   0x80696c0
jmp    805282c <do_add+0x9c>
sub    esp,0xc
mov    edi,DWORD PTR [ebp-0x4c]
push   edi
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     8052980 <do_add+0x1f0>
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x58],eax
js     8052980 <do_add+0x1f0>
cmp    eax,0x4
jle    8052998 <do_add+0x208>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    esi,DWORD PTR ds:0x8070270
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804f840 <usage>
jmp    8052804 <do_add+0x74>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp-0x48]
push   ecx
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     8052980 <do_add+0x1f0>
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x5c],eax
js     8052980 <do_add+0x1f0>
dec    eax
jg     8052980 <do_add+0x1f0>
sub    esp,0x8
push   ebx
push   esi
call   8062fb0 <is_user>
add    esp,0x10
test   eax,eax
jne    8052ada <do_add+0x34a>
cmp    DWORD PTR [ebp-0x54],0xc8
sete   al
and    eax,0xff
dec    eax
and    DWORD PTR [ebp-0x50],eax
je     80529ed <do_add+0x25d>
mov    eax,DWORD PTR [ebp-0x50]
cmp    BYTE PTR [eax],0x0
jne    8052ac5 <do_add+0x335>
mov    BYTE PTR [ebp-0x38],0x0
lea    edi,[ebp-0x38]
sub    esp,0x8
cmp    BYTE PTR [ebp-0x38],0x0
sete   al
and    eax,0xff
dec    eax
and    edi,eax
push   edi
push   ebx
mov    eax,DWORD PTR [ebp-0x58]
push   eax
mov    eax,DWORD PTR [ebp-0x5c]
push   eax
mov    eax,DWORD PTR [ebp-0x54]
push   eax
mov    eax,DWORD PTR [ebp-0x3c]
push   eax
call   8062370 <add_to_userlist>
add    esp,0x20
test   eax,eax
je     8052aac <do_add+0x31c>
sub    esp,0x8
push   esi
push   eax
call   80620b0 <addmasktouser>
mov    DWORD PTR [esp],ebx
mov    eax,DWORD PTR [ebp-0x3c]
push   esi
push   eax
push   0x806a112
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
mov    esi,DWORD PTR [ebp-0x50]
add    esp,0x1c
test   esi,esi
je     8052a5a <do_add+0x2ca>
mov    eax,DWORD PTR [ebp-0x50]
cmp    BYTE PTR [eax],0x0
jne    8052a5f <do_add+0x2cf>
mov    eax,0x8067180
mov    ebx,DWORD PTR [ebp-0x50]
test   ebx,ebx
push   eax
je     8052aa5 <do_add+0x315>
mov    eax,DWORD PTR [ebp-0x50]
cmp    BYTE PTR [eax],0x0
je     8052aa5 <do_add+0x315>
mov    eax,0x806a130
mov    edx,DWORD PTR [ebp-0x5c]
push   eax
mov    ecx,DWORD PTR [ebp-0x58]
test   edx,edx
push   ecx
mov    eax,0x8069e79
jne    8052a8a <do_add+0x2fa>
mov    eax,0x8069e7d
push   eax
mov    eax,DWORD PTR [ebp-0x54]
push   eax
push   0x8069700
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x20
jmp    8052804 <do_add+0x74>
mov    eax,0x8067180
jmp    8052a74 <do_add+0x2e4>
sub    esp,0x8
push   0x806a13a
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8052804 <do_add+0x74>
sub    esp,0x8
push   eax
lea    edi,[ebp-0x38]
push   edi
call   8059150 <makepass>
add    esp,0x10
jmp    80529f4 <do_add+0x264>
sub    esp,0xc
push   ebx
push   esi
mov    edx,DWORD PTR [ebp-0x40]
push   edx
push   0x806a152
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8052804 <do_add+0x74>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   edx
push   ebx
push   0x8069740
jmp    805282c <do_add+0x9c>
push   ecx
push   0x64
push   0x8069780
jmp    805282c <do_add+0x9c>
mov    DWORD PTR [ebp-0x4c],0x806d397
jmp    80528b2 <do_add+0x122>
mov    DWORD PTR [ebp-0x48],0x806d397
jmp    805289b <do_add+0x10b>
sub    esp,0x8
push   0x806a170
jmp    805282c <do_add+0x9c>
sub    esp,0x8
push   0x806a183
jmp    805282c <do_add+0x9c>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x0
jmp    80527f1 <do_add+0x61>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052b90 <do_del+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8052c2d <do_del+0xcd>
sub    esp,0xc
push   eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8052c23 <do_del+0xc3>
sub    esp,0x8
mov    eax,DWORD PTR [eax+0x2c]
push   eax
push   esi
call   8062c50 <get_userlevel>
mov    edx,DWORD PTR [ebx+0x3c]
mov    ecx,eax
mov    eax,edx
shr    eax,0x9
add    esp,0x10
cmp    al,0xc8
je     8052c0c <do_del+0xac>
shr    edx,0x9
movzx  eax,dl
cmp    ecx,eax
jl     8052c00 <do_del+0xa0>
sub    esp,0xc
push   ebx
call   80629d0 <remove_user>
add    esp,0xc
push   edi
push   0x806a1a1
push   esi
call   80614d0 <send_to_user>
jmp    8052b7c <do_del+0x1c>
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
push   edi
push   0x80697a0
jmp    8052bf5 <do_del+0x95>
cmp    ecx,0x64
jne    8052bd9 <do_del+0x79>
push   eax
push   edi
push   0x806a1b9
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8052be3 <do_del+0x83>
sub    esp,0x8
push   0x806a1c9
jmp    8052bf5 <do_del+0x95>
sub    esp,0x8
mov    eax,ds:0x80703a0
push   eax
push   esi
call   804f840 <usage>
jmp    8052b7c <do_del+0x1c>
jmp    8052c50 <do_savelevels>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   ecx
mov    ebx,DWORD PTR [ebp+0x8]
call   804f690 <write_levelfile>
test   eax,eax
jne    8052c80 <do_savelevels+0x30>
mov    DWORD PTR [ebp+0x10],0x8068577
mov    DWORD PTR [ebp+0xc],0x8069180
mov    DWORD PTR [ebp+0x8],ebx
pop    edx
pop    ebx
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp+0x10],0x8068577
mov    DWORD PTR [ebp+0xc],0x806a1d8
jmp    8052c6f <do_savelevels+0x1f>
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
call   804f7e0 <read_levelfile>
test   eax,eax
jne    8052cc0 <do_loadlevels+0x30>
mov    DWORD PTR [ebp+0x10],0x8068577
mov    DWORD PTR [ebp+0xc],0x80697e0
mov    DWORD PTR [ebp+0x8],ebx
pop    ebx
pop    ebx
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp+0x10],0x8068577
mov    DWORD PTR [ebp+0xc],0x806a1f2
jmp    8052caf <do_loadlevels+0x1f>
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
add    eax,0x724
mov    DWORD PTR [ebp+0x14],eax
mov    ebx,DWORD PTR [ebp+0x8]
call   8061c10 <saveuserlist>
test   eax,eax
mov    edx,0x8067180
jne    8052cf8 <do_savelists+0x28>
mov    edx,0x806a20b
mov    DWORD PTR [ebp+0x10],edx
mov    DWORD PTR [ebp+0xc],0x806a219
mov    DWORD PTR [ebp+0x8],ebx
pop    eax
pop    ebx
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
add    eax,0x724
mov    DWORD PTR [ebp+0x14],eax
mov    ebx,DWORD PTR [ebp+0x8]
call   804a550 <readuserlist>
test   eax,eax
mov    edx,0x8067180
jne    8052d38 <do_loadlists+0x28>
mov    edx,0x806a20c
mov    DWORD PTR [ebp+0x10],edx
mov    DWORD PTR [ebp+0xc],0x806a232
mov    DWORD PTR [ebp+0x8],ebx
pop    eax
pop    ebx
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
mov    edi,eax
jge    8052d90 <do_ban+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8052e04 <do_ban+0xb4>
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8052d7e <do_ban+0x2e>
sub    esp,0x8
push   esi
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,edi
jle    8052de0 <do_ban+0x90>
push   ebx
push   0x806a24c
push   0x8075da0
push   esi
call   80613f0 <sendkick>
jmp    8052d7e <do_ban+0x2e>
push   edi
push   ebx
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
push   esi
call   8058ad0 <deop_ban>
push   esi
mov    edx,DWORD PTR [ebp-0x10]
push   edx
push   0x806a25e
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8052d7e <do_ban+0x2e>
sub    esp,0x8
push   0x806a26e
jmp    8052df6 <do_ban+0xa6>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052e50 <do_siteban+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8052ed2 <do_siteban+0xc2>
push   edi
push   0x0
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8052e3c <do_siteban+0x2c>
sub    esp,0x8
push   esi
push   eax
call   8062c50 <get_userlevel>
mov    ebx,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    ebx,eax
jle    8052eae <do_siteban+0x9e>
push   edi
push   0x806a280
push   0x8075da0
push   esi
call   80613f0 <sendkick>
jmp    8052e3c <do_siteban+0x2c>
push   eax
push   edi
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   esi
call   8058b10 <deop_siteban>
push   esi
mov    esi,DWORD PTR [ebp-0x10]
push   esi
push   0x806a296
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    8052e3c <do_siteban+0x2c>
sub    esp,0x8
push   0x806a26e
jmp    8052ec4 <do_siteban+0xb4>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8052f20 <do_kickban+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8052fc5 <do_kickban+0xe5>
push   edi
push   0x0
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8052f0c <do_kickban+0x2c>
sub    esp,0x8
push   esi
push   eax
call   8062c50 <get_userlevel>
mov    ebx,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    ebx,eax
jle    8052f82 <do_kickban+0xa2>
push   edi
push   0x806a2aa
push   0x8075da0
push   esi
call   80613f0 <sendkick>
jmp    8052f0c <do_kickban+0x2c>
push   eax
push   edi
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   esi
call   8058ad0 <deop_ban>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8052f9a <do_kickban+0xba>
mov    eax,0x806a2c0
push   eax
push   0x806a12d
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   esi
call   80613f0 <sendkick>
add    esp,0x20
push   esi
mov    esi,DWORD PTR [ebp-0x10]
push   esi
push   0x806a2cf
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    8052f0c <do_kickban+0x2c>
sub    esp,0x8
push   0x806a26e
jmp    8052fb7 <do_kickban+0xd7>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8053010 <do_sitekickban+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     80530b5 <do_sitekickban+0xe5>
push   edi
push   0x0
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8052ffc <do_sitekickban+0x2c>
sub    esp,0x8
push   esi
push   eax
call   8062c50 <get_userlevel>
mov    ebx,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    ebx,eax
jle    8053072 <do_sitekickban+0xa2>
push   edi
push   0x806a2e3
push   0x8075da0
push   esi
call   80613f0 <sendkick>
jmp    8052ffc <do_sitekickban+0x2c>
push   eax
push   edi
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   esi
call   8058b10 <deop_siteban>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    805308a <do_sitekickban+0xba>
mov    eax,0x806a2c0
push   eax
push   0x806a12d
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   esi
call   80613f0 <sendkick>
add    esp,0x20
push   esi
mov    esi,DWORD PTR [ebp-0x10]
push   esi
push   0x806a2fd
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    8052ffc <do_sitekickban+0x2c>
sub    esp,0x8
push   0x806a26e
jmp    80530a7 <do_sitekickban+0xd7>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8053100 <do_kick+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     80531a6 <do_kick+0xe6>
push   edi
push   0x0
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     80530ec <do_kick+0x2c>
sub    esp,0x8
push   esi
push   eax
call   8062c50 <get_userlevel>
mov    ebx,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    ebx,eax
jg     8053190 <do_kick+0xd0>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     805317e <do_kick+0xbe>
push   eax
push   0x806a12d
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   esi
call   80613f0 <sendkick>
push   esi
mov    esi,DWORD PTR [ebp-0x10]
push   esi
push   0x806a315
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    80530ec <do_kick+0x2c>
sub    esp,0xc
push   0x806a327
call   805d660 <randstring>
add    esp,0x10
jmp    8053156 <do_kick+0x96>
push   edi
push   0x806a33f
push   0x8075da0
push   esi
call   80613f0 <sendkick>
jmp    80530ec <do_kick+0x2c>
sub    esp,0x8
push   0x806a26e
jmp    8053170 <do_kick+0xb0>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x24
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
pop    edi
pop    edx
push   eax
mov    esi,DWORD PTR [ebp+0x8]
push   esi
mov    DWORD PTR [ebp-0x10],eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    80531f0 <do_showusers+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
xor    edi,edi
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     805320e <do_showusers+0x5e>
cmp    BYTE PTR [eax],0x2d
je     80534a0 <do_showusers+0x2f0>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     805321e <do_showusers+0x6e>
cmp    BYTE PTR [eax],0x2d
je     805348d <do_showusers+0x2dd>
test   edi,edi
mov    DWORD PTR [ebp-0x1c],0x0
mov    DWORD PTR [ebp-0x20],0x0
je     8053268 <do_showusers+0xb8>
sub    esp,0x8
push   0x806a352
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805324c <do_showusers+0x9c>
mov    DWORD PTR [ebp-0x1c],0x1
sub    esp,0x8
push   0x806a357
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8053268 <do_showusers+0xb8>
mov    DWORD PTR [ebp-0x1c],0x2
sub    esp,0x8
push   0x3
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805347e <do_showusers+0x2ce>
mov    al,BYTE PTR [eax+0x38d]
shr    al,0x4
and    eax,0x3
cmp    eax,0x2
mov    edx,0x806a35f
je     805329e <do_showusers+0xee>
mov    edx,0x8067180
push   edx
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806a36e
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebx+0x1c]
add    esp,0x10
test   eax,eax
je     8053471 <do_showusers+0x2c1>
mov    esi,eax
jmp    80532d0 <do_showusers+0x120>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   esi
call   804ce40 <get_nuh>
add    esp,0x10
cmp    DWORD PTR [ebp-0x1c],0x1
mov    edi,eax
mov    ebx,DWORD PTR [esi+0x4]
je     8053460 <do_showusers+0x2b0>
cmp    DWORD PTR [ebp-0x1c],0x2
je     8053440 <do_showusers+0x290>
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
je     8053308 <do_showusers+0x158>
mov    eax,DWORD PTR [ebp-0x14]
cmp    BYTE PTR [eax],0x0
jne    8053420 <do_showusers+0x270>
test   ebx,0x2
mov    BYTE PTR [ebp-0x15],0x20
je     8053400 <do_showusers+0x250>
mov    BYTE PTR [ebp-0x15],0x40
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   edi
mov    BYTE PTR [ebp-0x16],0x75
call   8062c50 <get_userlevel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80533d0 <do_showusers+0x220>
cmp    ebx,0xc8
je     80533c0 <do_showusers+0x210>
sub    esp,0x8
push   0x21
push   edi
call   8048f98 <strchr@plt>
inc    eax
add    esp,0xc
push   eax
push   eax
push   edi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
movsx  eax,BYTE PTR [ebp-0x15]
push   eax
movsx  eax,BYTE PTR [ebp-0x16]
push   eax
push   ebx
push   0x806a381
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
inc    DWORD PTR [ebp-0x20]
add    esp,0x20
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    80532d0 <do_showusers+0x120>
mov    edi,DWORD PTR [ebp-0x20]
test   edi,edi
je     80533a2 <do_showusers+0x1f2>
sub    esp,0x8
push   0x806a393
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    80531dd <do_showusers+0x2d>
sub    esp,0x8
push   0x806a3a8
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805338c <do_showusers+0x1dc>
nop
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [ebp-0x16],0x62
jmp    8053342 <do_showusers+0x192>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   edi
call   8063690 <get_shitlevel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805333a <do_showusers+0x18a>
mov    BYTE PTR [ebp-0x16],0x73
jmp    805333a <do_showusers+0x18a>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
and    ebx,0x1
je     805331c <do_showusers+0x16c>
mov    BYTE PTR [ebp-0x15],0x2b
jmp    805331c <do_showusers+0x16c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edi
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    805337b <do_showusers+0x1cb>
jmp    8053308 <do_showusers+0x158>
lea    esi,[esi+0x0]
test   ebx,0x2
jne    805337b <do_showusers+0x1cb>
jmp    80532f5 <do_showusers+0x145>
jmp    8053460 <do_showusers+0x2b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test   ebx,0x2
je     805337b <do_showusers+0x1cb>
jmp    80532eb <do_showusers+0x13b>
sub    esp,0x8
push   0x806a3c0
jmp    80533aa <do_showusers+0x1fa>
push   ecx
mov    edx,DWORD PTR [ebp-0x10]
push   edx
push   0x806a3cf
jmp    8053394 <do_showusers+0x1e4>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    edi,eax
add    esp,0x10
jmp    805321e <do_showusers+0x6e>
sub    esp,0xc
push   ebx
mov    edi,eax
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
jmp    8053498 <do_showusers+0x2e8>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x138
lea    esi,[ebp+0x10]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x128],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80534fa <do_shit+0x4a>
mov    al,BYTE PTR [eax]
test   al,al
je     80534fa <do_shit+0x4a>
cmp    al,0x23
je     8053520 <do_shit+0x70>
sub    esp,0x8
push   0x806e306
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8053520 <do_shit+0x70>
sub    esp,0x8
mov    eax,ds:0x8070720
push   eax
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8053520 <do_shit+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   ebx
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x130],eax
jl     8053509 <do_shit+0x59>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x11c],eax
je     80537be <do_shit+0x30e>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x120],eax
je     80537b1 <do_shit+0x301>
mov    edx,DWORD PTR [ebp+0x10]
test   edx,edx
je     80535a2 <do_shit+0xf2>
movsx  eax,BYTE PTR [edx]
cmp    eax,0xff
ja     80537aa <do_shit+0x2fa>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
jne    8053790 <do_shit+0x2e0>
test   edx,edx
je     80535a2 <do_shit+0xf2>
cmp    BYTE PTR [edx],0x0
jne    80535b5 <do_shit+0x105>
sub    esp,0x8
push   0x806a3eb
push   edi
call   80614d0 <send_to_user>
jmp    8053509 <do_shit+0x59>
push   eax
push   0x0
mov    esi,DWORD PTR [ebp-0x11c]
push   esi
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8053509 <do_shit+0x59>
sub    esp,0x8
push   ebx
push   eax
call   8063660 <is_shitted>
add    esp,0x10
test   eax,eax
je     80535ec <do_shit+0x13c>
push   ecx
push   esi
push   0x8069820
jmp    80535aa <do_shit+0xfa>
sub    esp,0x8
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp-0x130]
jle    8053613 <do_shit+0x163>
cmp    DWORD PTR [ebp-0x130],0x64
je     8053613 <do_shit+0x163>
push   ebx
push   esi
push   0x8069860
jmp    80535aa <do_shit+0xfa>
sub    esp,0x8
push   0x1
push   esi
call   80589d0 <format_uh>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x124],eax
je     8053509 <do_shit+0x59>
sub    esp,0x8
push   eax
push   0x80679ea
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8053651 <do_shit+0x1a1>
sub    esp,0x8
push   0x80698a0
jmp    80535aa <do_shit+0xfa>
sub    esp,0x8
mov    edx,DWORD PTR [ebp-0x120]
push   edx
push   edi
call   80591b0 <check_for_number>
add    esp,0x10
test   eax,eax
jne    8053509 <do_shit+0x59>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x120]
push   eax
call   8048f58 <atoi@plt>
mov    DWORD PTR [ebp-0x12c],eax
dec    eax
add    esp,0x10
cmp    eax,0x2
ja     805377b <do_shit+0x2cb>
mov    eax,DWORD PTR [ebp-0x128]
test   eax,eax
je     8053771 <do_shit+0x2c1>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x128]
push   eax
call   8048cd8 <atol@plt>
mov    esi,eax
add    esp,0x10
sub    esp,0x8
push   edi
lea    eax,[ebp-0x118]
push   eax
call   8048c68 <strcpy@plt>
lea    eax,[esi+esi*4]
lea    eax,[esi+eax*4]
lea    eax,[esi+eax*8]
shl    eax,0x2
sub    eax,esi
shl    eax,0x7
mov    edx,DWORD PTR ds:0x8075d20
add    esp,0xc
lea    eax,[eax+edx*1]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
push   edx
je     80536eb <do_shit+0x23b>
cmp    BYTE PTR [eax],0x0
jne    80536f0 <do_shit+0x240>
mov    eax,0x8067180
push   eax
lea    eax,[ebp-0x118]
push   eax
push   ebx
mov    eax,DWORD PTR [ebp-0x12c]
push   eax
mov    eax,DWORD PTR [ebp-0x124]
push   eax
call   8063410 <add_to_shitlist>
add    esp,0x20
test   eax,eax
je     8053761 <do_shit+0x2b1>
push   ebx
mov    ebx,DWORD PTR [ebp-0x124]
push   ebx
push   0x80698e0
push   edi
call   80614d0 <send_to_user>
lea    eax,[esi+esi*4]
lea    eax,[esi+eax*4]
lea    eax,[esi+eax*8]
shl    eax,0x2
sub    eax,esi
shl    eax,0x7
add    eax,DWORD PTR ds:0x8075d20
mov    DWORD PTR [esp],eax
call   8057d60 <time2str>
add    esp,0xc
push   eax
push   0x806a3ff
push   edi
call   80614d0 <send_to_user>
call   804abd0 <check_shit>
add    esp,0x10
jmp    8053509 <do_shit+0x59>
sub    esp,0x8
push   0x806a41c
push   edi
call   80614d0 <send_to_user>
jmp    8053759 <do_shit+0x2a9>
mov    esi,0x1e
jmp    80536b0 <do_shit+0x200>
push   eax
push   0x3
push   0x8069920
jmp    80535aa <do_shit+0xfa>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x128],eax
add    esp,0x10
mov    edx,DWORD PTR [ebp+0x10]
jmp    8053599 <do_shit+0xe9>
xor    eax,eax
jmp    8053591 <do_shit+0xe1>
sub    esp,0x8
push   0x806a170
jmp    80535aa <do_shit+0xfa>
sub    esp,0x8
push   0x806a183
jmp    80535aa <do_shit+0xfa>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    esi,[ebp+0x10]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80537fc <do_rshit+0x2c>
mov    al,BYTE PTR [eax]
test   al,al
je     80537fc <do_rshit+0x2c>
cmp    al,0x23
je     8053820 <do_rshit+0x50>
cmp    al,0x2a
je     8053820 <do_rshit+0x50>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070630
push   ecx
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   ebx
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x14],eax
jl     805380c <do_rshit+0x3c>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     80538b5 <do_rshit+0xe5>
push   edx
push   0x0
push   eax
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     805380c <do_rshit+0x3c>
sub    esp,0x8
push   ebx
push   eax
call   8063320 <find_shit>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     80538a9 <do_rshit+0xd9>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [eax+0x30]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp-0x14]
jle    8053894 <do_rshit+0xc4>
sub    esp,0x8
push   0x8069940
push   edi
call   80614d0 <send_to_user>
jmp    805380c <do_rshit+0x3c>
sub    esp,0xc
push   esi
call   80629d0 <remove_user>
push   ebx
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x8069980
jmp    8053889 <do_rshit+0xb9>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x80699c0
jmp    8053889 <do_rshit+0xb9>
sub    esp,0x8
push   0x806a183
jmp    8053889 <do_rshit+0xb9>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   80587f0 <get_channel>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   esi,esi
mov    ebx,eax
je     80539f0 <do_clvl+0x130>
test   eax,eax
je     80539f0 <do_clvl+0x130>
sub    esp,0xc
push   esi
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     80539e0 <do_clvl+0x120>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
mov    esi,eax
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
add    esp,0x10
cmp    esi,eax
jl     80539d0 <do_clvl+0x110>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80591b0 <check_for_number>
add    esp,0x10
test   eax,eax
je     8053968 <do_clvl+0xa8>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   ebx
call   8048f58 <atoi@plt>
add    esp,0x10
cmp    esi,eax
mov    ebx,eax
jl     80539d0 <do_clvl+0x110>
cmp    eax,0x64
jbe    805399b <do_clvl+0xdb>
push   eax
push   0x64
push   0x806a436
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
jmp    8053960 <do_clvl+0xa0>
push   eax
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
push   0x806a451
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [edi+0x3c]
movzx  edx,bl
shl    edx,0x9
and    eax,0xfffe01ff
or     eax,edx
mov    DWORD PTR [edi+0x3c],eax
jmp    8053960 <do_clvl+0xa0>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x806a46d
jmp    8053990 <do_clvl+0xd0>
lea    esi,[esi+0x0]
push   eax
push   esi
push   0x806a47b
jmp    8053990 <do_clvl+0xd0>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    edx,DWORD PTR ds:0x8070320
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    8053960 <do_clvl+0xa0>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    ebx,eax
pop    eax
mov    eax,ds:0x8075e74
pop    edx
add    eax,0x220
push   eax
push   esi
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8053a70 <do_unban+0x60>
test   ebx,ebx
je     8053aac <do_unban+0x9c>
sub    esp,0x8
push   0x2a
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8053a80 <do_unban+0x70>
push   eax
push   0x0
push   ebx
push   esi
call   804c9e0 <channel_massunban>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   eax
push   0x0
push   ebx
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8053a70 <do_unban+0x60>
sub    esp,0x8
push   eax
push   esi
call   804cb20 <channel_unban>
push   esi
push   ebx
push   0x806a48c
push   edi
call   80614d0 <send_to_user>
jmp    8053a70 <do_unban+0x60>
sub    esp,0x8
push   edi
push   esi
call   804cb20 <channel_unban>
add    esp,0xc
push   esi
push   0x806a49e
jmp    8053aa4 <do_unban+0x94>
jmp    8053ad0 <do_spawn>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x408
push   0x0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8053b00 <do_spawn+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8053b74 <do_spawn+0xa4>
sub    esp,0xc
push   ebx
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
jne    8053b40 <do_spawn+0x70>
push   eax
push   ebx
push   0x80712c1
push   esi
call   80614d0 <send_to_user>
jmp    8053aee <do_spawn+0x1e>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   ebx
push   esi
call   8050160 <forkbot>
add    esp,0x10
test   eax,eax
je     8053b6a <do_spawn+0x9a>
push   ebx
add    eax,0x22d
push   eax
push   0x806a4bb
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8053aee <do_spawn+0x1e>
sub    esp,0x8
push   0x806a4cf
jmp    8053b5f <do_spawn+0x8f>
sub    esp,0xc
push   0x806a4e6
call   805d660 <randstring>
mov    ebx,eax
pop    eax
pop    edx
push   0x806a4fe
push   ebx
call   8057a20 <terminate>
add    esp,0x10
test   ebx,ebx
je     8053baf <do_spawn+0xdf>
sub    esp,0x8
push   ebx
lea    ebx,[ebp-0x408]
push   ebx
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    8053b15 <do_spawn+0x45>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x22d
push   eax
jmp    8053b9b <do_spawn+0xcb>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8053c01 <do_topic+0x41>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8053c10 <do_topic+0x50>
sub    esp,0x8
mov    eax,ds:0x8070810
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     8053c71 <do_topic+0xb1>
test   BYTE PTR [eax+0x38c],0x8
je     8053c47 <do_topic+0x87>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8053c68 <do_topic+0xa8>
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   ebx
push   0x8067924
call   8061640 <send_to_server>
add    esp,0xc
push   ebx
push   0x806a502
push   esi
call   80614d0 <send_to_user>
jmp    8053c01 <do_topic+0x41>
push   ecx
push   ebx
push   0x8071324
jmp    8053c60 <do_topic+0xa0>
push   eax
push   ebx
push   0x807128a
jmp    8053c60 <do_topic+0xa0>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xcc
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x24
je     8053d7d <do_spymsg+0xfd>
mov    edx,DWORD PTR ds:0x8075e74
xor    eax,eax
cmp    eax,DWORD PTR [edx+0xb24]
mov    DWORD PTR [ebp-0xd0],edx
mov    ebx,DWORD PTR [edx+0xb28]
mov    DWORD PTR [ebp-0xcc],0x0
jge    8053cfb <do_spymsg+0x7b>
mov    esi,esi
cmp    BYTE PTR [ebx],0x0
je     8053cdb <do_spymsg+0x5b>
lea    esi,[ebx+0x1]
mov    edi,0x8067944
mov    ecx,0x7
cld    
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     8053d90 <do_spymsg+0x110>
inc    DWORD PTR [ebp-0xcc]
mov    edx,DWORD PTR [ebp-0xcc]
mov    eax,DWORD PTR [ebp-0xd0]
add    ebx,0xa1
cmp    edx,DWORD PTR [eax+0xb24]
jl     8053cc0 <do_spymsg+0x40>
cld    
xor    eax,eax
lea    edi,[ebp-0xc8]
mov    ecx,0x28
rep stos DWORD PTR es:[edi],eax
mov    BYTE PTR [edi],0x0
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0x8]
push   esi
lea    eax,[ebp-0x77]
push   eax
mov    BYTE PTR [ebp-0xc8],0x1
mov    esi,0x8067944
call   8048c68 <strcpy@plt>
lea    edi,[ebp-0xc7]
cld    
mov    ecx,0x1
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
mov    ax,ds:0x8067948
mov    WORD PTR [edi],ax
mov    al,ds:0x806794a
mov    BYTE PTR [edi+0x2],al
mov    eax,ds:0x8075e74
push   0xa1
lea    edx,[eax+0xb24]
push   edx
lea    ebx,[ebp-0xc8]
push   ebx
add    eax,0xb28
push   eax
call   8059260 <addstruct>
add    esp,0x18
push   0x8069a00
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    edi,DWORD PTR [ebp+0x8]
push   edi
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8053db8 <do_spymsg+0x138>
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [ebp-0xd0],edx
jmp    8053cdb <do_spymsg+0x5b>
sub    esp,0x8
push   0x8069a20
jmp    8053d74 <do_spymsg+0xf4>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xcc
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x24
je     8053ec5 <do_statmsg+0xf5>
mov    edx,DWORD PTR ds:0x8075e74
xor    eax,eax
cmp    eax,DWORD PTR [edx+0xb24]
mov    DWORD PTR [ebp-0xd0],edx
mov    ebx,DWORD PTR [edx+0xb28]
mov    DWORD PTR [ebp-0xcc],0x0
jge    8053e4b <do_statmsg+0x7b>
mov    esi,esi
cmp    BYTE PTR [ebx],0x0
je     8053e2b <do_statmsg+0x5b>
lea    esi,[ebx+0x1]
mov    edi,0x8067953
mov    ecx,0x8
cld    
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     8053ed0 <do_statmsg+0x100>
inc    DWORD PTR [ebp-0xcc]
mov    edx,DWORD PTR [ebp-0xcc]
mov    eax,DWORD PTR [ebp-0xd0]
add    ebx,0xa1
cmp    edx,DWORD PTR [eax+0xb24]
jl     8053e10 <do_statmsg+0x40>
cld    
xor    eax,eax
lea    edi,[ebp-0xc8]
mov    ecx,0x28
rep stos DWORD PTR es:[edi],eax
mov    BYTE PTR [edi],0x0
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0x8]
push   esi
lea    eax,[ebp-0x77]
push   eax
mov    BYTE PTR [ebp-0xc8],0x1
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075e74
push   0xa1
lea    edx,[eax+0xb24]
push   edx
lea    ebx,[ebp-0xc8]
push   ebx
add    eax,0xb28
push   eax
mov    DWORD PTR [ebp-0xc7],0x74617473
mov    DWORD PTR [ebp-0xc3],0x67736d
call   8059260 <addstruct>
add    esp,0x14
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x806a516
call   804b700 <send_statmsg>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
mov    edi,DWORD PTR [ebp+0x8]
push   edi
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8053ec5 <do_statmsg+0xf5>
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [ebp-0xd0],edx
jmp    8053e2b <do_statmsg+0x5b>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
cmp    BYTE PTR [eax],0x24
je     8053f70 <do_rspymsg+0x70>
mov    edx,DWORD PTR ds:0x8075e74
xor    edi,edi
cmp    edi,DWORD PTR [edx+0xb24]
mov    DWORD PTR [ebp-0x18],edx
mov    ebx,DWORD PTR [edx+0xb28]
mov    DWORD PTR [ebp-0x14],0x0
jge    8053f70 <do_rspymsg+0x70>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    BYTE PTR [ebx],0x0
je     8053f59 <do_rspymsg+0x59>
mov    eax,0x8067944
lea    esi,[ebx+0x1]
mov    ecx,0x7
cld    
mov    edi,eax
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     8053f80 <do_rspymsg+0x80>
inc    DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x18]
add    ebx,0xa1
cmp    eax,DWORD PTR [edi+0xb24]
jl     8053f40 <do_rspymsg+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8053fa2 <do_rspymsg+0xa2>
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [ebp-0x18],edx
jmp    8053f59 <do_rspymsg+0x59>
push   eax
push   0xa1
push   0x0
push   ebx
call   8048eb8 <memset@plt>
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp+0xc],0x8069a60
mov    DWORD PTR [ebp+0x8],eax
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],eax
cmp    BYTE PTR [eax],0x24
je     8054040 <do_rstatmsg+0x70>
mov    edx,DWORD PTR ds:0x8075e74
xor    edi,edi
cmp    edi,DWORD PTR [edx+0xb24]
mov    DWORD PTR [ebp-0x18],edx
mov    ebx,DWORD PTR [edx+0xb28]
mov    DWORD PTR [ebp-0x14],0x0
jge    8054040 <do_rstatmsg+0x70>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    BYTE PTR [ebx],0x0
je     8054029 <do_rstatmsg+0x59>
mov    eax,0x8067953
lea    esi,[ebx+0x1]
mov    ecx,0x8
cld    
mov    edi,eax
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     8054050 <do_rstatmsg+0x80>
inc    DWORD PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebp-0x18]
add    ebx,0xa1
cmp    edi,DWORD PTR [edx+0xb24]
jl     8054010 <do_rstatmsg+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    edi,DWORD PTR [ebp-0x10]
push   edi
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8054071 <do_rstatmsg+0xa1>
mov    eax,ds:0x8075e74
mov    DWORD PTR [ebp-0x18],eax
jmp    8054029 <do_rstatmsg+0x59>
mov    esi,DWORD PTR [ebp-0x10]
sub    esp,0xc
push   esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x806a52e
call   804b700 <send_statmsg>
mov    DWORD PTR [ebp+0x10],0xa1
mov    DWORD PTR [ebp+0xc],0x0
mov    DWORD PTR [ebp+0x8],ebx
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    8048eb8 <memset@plt>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    esi,[ebp+0x10]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80540d3 <do_server+0x23>
cmp    BYTE PTR [eax],0x0
jne    80540f0 <do_server+0x40>
sub    esp,0x8
mov    eax,ds:0x80706e0
push   eax
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x3f
jbe    8054120 <do_server+0x70>
sub    esp,0x8
push   0x8069aa0
push   edi
call   80614d0 <send_to_user>
jmp    80540e2 <do_server+0x32>
jmp    8054120 <do_server+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edx,eax
mov    DWORD PTR [ebp-0x10],0x1a0b
je     805415f <do_server+0xaf>
movsx  eax,BYTE PTR [eax]
cmp    eax,0xff
ja     8054276 <do_server+0x1c6>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
jne    8054249 <do_server+0x199>
test   edx,edx
mov    esi,DWORD PTR [ebp+0x10]
je     805416f <do_server+0xbf>
cmp    BYTE PTR [edx],0x0
jne    805422d <do_server+0x17d>
test   esi,esi
je     805417c <do_server+0xcc>
cmp    BYTE PTR [esi],0x0
jne    8054211 <do_server+0x161>
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   ebx
call   80509f0 <add_server>
add    esp,0x10
test   eax,eax
je     8054204 <do_server+0x154>
mov    eax,DWORD PTR [eax+0x4]
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0x14],eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   ebx
push   0x8069ac0
push   edi
call   80614d0 <send_to_user>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x4]
sub    eax,0x3
add    esp,0x10
cmp    eax,0x1
jbe    80541e6 <do_server+0x136>
mov    eax,DWORD PTR [edx+0x8]
cmp    eax,0xffffffff
je     80541da <do_server+0x12a>
sub    esp,0xc
push   eax
call   8048fc8 <close@plt>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0x8],0xffffffff
jmp    80540e2 <do_server+0x32>
sub    esp,0xc
push   0x8069b00
call   8061640 <send_to_server>
pop    eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8061980 <killsock>
jmp    80541d1 <do_server+0x121>
sub    esp,0x8
push   0x806a54a
jmp    8054109 <do_server+0x59>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   esi
add    eax,0x246
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    805417c <do_server+0xcc>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   edx
add    eax,0x23a
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    805416f <do_server+0xbf>
sub    esp,0xc
push   edx
call   8048f58 <atoi@plt>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
jne    8054263 <do_server+0x1b3>
mov    DWORD PTR [ebp-0x10],0x1a0b
sub    esp,0xc
push   esi
call   8057b00 <chop>
mov    edx,eax
add    esp,0x10
jmp    805415f <do_server+0xaf>
xor    eax,eax
jmp    8054157 <do_server+0xa7>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
lea    eax,[ebp+0x10]
sub    esp,0x14
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     805429f <do_nextserver+0x1f>
cmp    BYTE PTR [eax],0x0
jne    8054340 <do_nextserver+0xc0>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     80542ab <do_nextserver+0x2b>
cmp    BYTE PTR [eax],0x0
jne    8054320 <do_nextserver+0xa0>
sub    esp,0x8
push   0x806a56a
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x4]
sub    eax,0x3
add    esp,0x10
cmp    eax,0x1
jbe    8054300 <do_nextserver+0x80>
mov    eax,DWORD PTR [edx+0x8]
cmp    eax,0xffffffff
je     80542ea <do_nextserver+0x6a>
sub    esp,0xc
push   eax
call   8048fc8 <close@plt>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0x8],0xffffffff
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   0x806a564
call   8061640 <send_to_server>
mov    eax,ds:0x8075e74
pop    ecx
mov    edx,DWORD PTR [eax+0x8]
push   edx
call   8061980 <killsock>
jmp    80542e1 <do_nextserver+0x61>
mov    esi,esi
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x246
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    80542ab <do_nextserver+0x2b>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x23a
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    805429f <do_nextserver+0x1f>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    80543a0 <do_cycle+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
jne    80543d0 <do_cycle+0x70>
push   eax
push   ebx
push   0x807128a
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805438b <do_cycle+0x2b>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   eax
push   ebx
push   0x806a57f
push   esi
call   80614d0 <send_to_user>
mov    DWORD PTR [esp],ebx
call   804b600 <cycle_channel>
jmp    80543bf <do_cycle+0x5f>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xe8
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0xdc],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp-0xdc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8054485 <do_spy+0x95>
test   esi,esi
je     8054441 <do_spy+0x51>
cmp    BYTE PTR [esi],0x0
sete   al
and    eax,0xff
dec    eax
and    esi,eax
mov    eax,DWORD PTR [ebp-0xdc]
test   eax,eax
je     80545fd <do_spy+0x20d>
sub    esp,0x8
push   0x1
mov    edi,DWORD PTR [ebp-0xdc]
push   edi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     80545f0 <do_spy+0x200>
test   esi,esi
je     80544c6 <do_spy+0xd6>
cmp    BYTE PTR [esi],0x23
je     805448d <do_spy+0x9d>
sub    esp,0x8
push   0x806a592
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x1
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
jne    80544a8 <do_spy+0xb8>
push   ecx
push   esi
push   0x807128a
jmp    805447c <do_spy+0x8c>
sub    esp,0x8
push   esi
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     80545da <do_spy+0x1ea>
cmp    BYTE PTR [esi],0x0
jne    80544c9 <do_spy+0xd9>
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,ds:0x8075e74
xor    edx,edx
cmp    edx,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
mov    DWORD PTR [ebp-0xcc],0x0
jge    8054513 <do_spy+0x123>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
jne    8054590 <do_spy+0x1a0>
inc    DWORD PTR [ebp-0xcc]
mov    edi,DWORD PTR [ebp-0xcc]
add    ebx,0xa1
cmp    edi,DWORD PTR [eax+0xb24]
jl     80544f0 <do_spy+0x100>
lea    edx,[ebp-0xc8]
cld    
mov    edi,edx
xor    eax,eax
mov    ecx,0x28
rep stos DWORD PTR es:[edi],eax
mov    BYTE PTR [edi],0x0
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0xdc]
push   eax
lea    eax,[ebp-0xc7]
push   eax
mov    BYTE PTR [ebp-0xc8],0x1
call   8048c68 <strcpy@plt>
pop    edi
pop    eax
push   esi
lea    eax,[ebp-0x77]
push   eax
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075e74
push   0xa1
lea    edx,[eax+0xb24]
push   edx
lea    ebx,[ebp-0xc8]
push   ebx
add    eax,0xb28
push   eax
call   8059260 <addstruct>
add    esp,0x1c
mov    esi,DWORD PTR [ebp-0xdc]
push   esi
push   0x806a5ab
jmp    805447c <do_spy+0x8c>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0xdc]
push   eax
lea    eax,[ebx+0x1]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80545b4 <do_spy+0x1c4>
mov    eax,ds:0x8075e74
jmp    80544f9 <do_spy+0x109>
sub    esp,0x8
push   esi
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80545aa <do_spy+0x1ba>
push   eax
mov    eax,DWORD PTR [ebp-0xdc]
push   eax
push   0x806a5bc
jmp    805447c <do_spy+0x8c>
push   eax
push   esi
push   0x8069b20
jmp    805447c <do_spy+0x8c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   esi
mov    ebx,DWORD PTR [ebp-0xdc]
push   ebx
jmp    80544a1 <do_spy+0xb1>
sub    esp,0x8
mov    eax,ds:0x80707a0
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    8054485 <do_spy+0x95>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    esi,[ebp+0x10]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8054643 <do_rspy+0x23>
cmp    BYTE PTR [eax],0x23
je     8054660 <do_rspy+0x40>
sub    esp,0x8
mov    edx,DWORD PTR ds:0x8070640
push   edx
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8054653 <do_rspy+0x33>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     80547b0 <do_rspy+0x190>
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   ebx
push   edi
push   0x806a5d9
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0xb28]
mov    DWORD PTR [ebp-0x10],edx
xor    edx,edx
add    esp,0x10
cmp    edx,DWORD PTR [eax+0xb24]
mov    DWORD PTR [ebp-0x18],0x0
jge    80546f6 <do_rspy+0xd6>
mov    esi,DWORD PTR [ebp-0x10]
add    esi,0x51
jmp    80546d0 <do_rspy+0xb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [esi-0x51],0x0
jne    8054708 <do_rspy+0xe8>
inc    DWORD PTR [ebp-0x18]
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [ebp-0x18]
add    esi,0xa1
add    DWORD PTR [ebp-0x10],0xa1
cmp    edx,DWORD PTR [eax+0xb24]
jl     80546d0 <do_rspy+0xb0>
push   ecx
push   ebx
push   0x806a5ef
push   edi
call   80614d0 <send_to_user>
jmp    8054653 <do_rspy+0x33>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   esi
inc    eax
push   eax
push   0x806a608
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR [esi-0x51],0x0
je     80546d6 <do_rspy+0xb6>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   ebx
inc    eax
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80546d6 <do_rspy+0xb6>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805476b <do_rspy+0x14b>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   esi
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80546d6 <do_rspy+0xb6>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80547a4 <do_rspy+0x184>
push   eax
push   ebx
push   0x8069b60
push   edi
call   80614d0 <send_to_user>
add    esp,0xc
push   0xa1
push   0x0
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
call   8048eb8 <memset@plt>
jmp    8054653 <do_rspy+0x33>
mov    esi,DWORD PTR [ebp-0x14]
push   esi
push   ebx
push   0x806a61f
jmp    8054786 <do_rspy+0x166>
mov    DWORD PTR [ebp-0x14],edi
jmp    8054689 <do_rspy+0x69>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0x8]
push   0x806a63d
push   edi
call   80614d0 <send_to_user>
xor    esi,esi
mov    eax,ds:0x8075e74
add    esp,0x10
cmp    esi,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
jge    8054804 <do_spylist+0x44>
nop
cmp    BYTE PTR [ebx],0x0
jne    8054820 <do_spylist+0x60>
inc    esi
add    ebx,0xa1
cmp    esi,DWORD PTR [eax+0xb24]
jl     80547f0 <do_spylist+0x30>
mov    DWORD PTR [ebp+0xc],0x806a64b
mov    DWORD PTR [ebp+0x8],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
lea    eax,[ebx+0x51]
push   eax
lea    eax,[ebx+0x1]
push   eax
push   0x806a65c
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,ds:0x8075e74
jmp    80547f5 <do_spylist+0x35>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8054880 <do_banlist+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8054909 <do_banlist+0xc9>
mov    eax,DWORD PTR [eax+0x18]
test   eax,eax
je     8054900 <do_banlist+0xc0>
push   0x806a665
push   ebx
push   0x8069b80
push   edi
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [esi+0x18]
add    esp,0x10
test   ebx,ebx
je     80548dc <do_banlist+0x9c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0xc]
push   eax
mov    esi,DWORD PTR [ebx+0x8]
push   esi
push   0x806a66e
push   edi
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    80548c0 <do_banlist+0x80>
sub    esp,0x8
push   0x806a679
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805486c <do_banlist+0x2c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ecx
push   ebx
push   0x8069bc0
jmp    80548e4 <do_banlist+0xa4>
push   eax
push   ebx
push   0x807128a
push   edi
call   80614d0 <send_to_user>
jmp    805486c <do_banlist+0x2c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    edi,[ebp+0x10]
push   edi
mov    DWORD PTR [ebp-0x10],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8054947 <do_passwd+0x27>
cmp    BYTE PTR [eax],0x0
jne    8054970 <do_passwd+0x50>
sub    esp,0x8
mov    eax,ds:0x80705c0
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8054970 <do_passwd+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   0x0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8054959 <do_passwd+0x39>
cmp    BYTE PTR [eax+0x15],0x0
je     80549a7 <do_passwd+0x87>
sub    esp,0xc
push   edi
mov    DWORD PTR [ebp-0x10],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8054947 <do_passwd+0x27>
cmp    BYTE PTR [eax],0x0
je     8054947 <do_passwd+0x27>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x3
ja     80549cb <do_passwd+0xab>
push   eax
push   0x4
push   0x8069be0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
jmp    8054959 <do_passwd+0x39>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x32
jbe    80549e0 <do_passwd+0xc0>
mov    BYTE PTR [ebx+0x32],0x0
cmp    BYTE PTR [esi+0x15],0x0
jne    80549fc <do_passwd+0xdc>
add    esi,0x15
sub    esp,0x8
push   ebx
push   esi
call   8059150 <makepass>
pop    esi
pop    edi
push   0x806a68d
jmp    80549c0 <do_passwd+0xa0>
sub    esp,0x8
add    esi,0x15
push   esi
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8059180 <passmatch>
add    esp,0x10
test   eax,eax
jne    80549e9 <do_passwd+0xc9>
sub    esp,0x8
push   0x806a6a7
jmp    80549c0 <do_passwd+0xa0>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   edi,edi
mov    ebx,eax
je     8054a56 <do_setpass+0x36>
cmp    BYTE PTR [edi],0x0
je     8054a56 <do_setpass+0x36>
test   eax,eax
je     8054a56 <do_setpass+0x36>
cmp    BYTE PTR [eax],0x0
jne    8054a70 <do_setpass+0x50>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x8070710
push   ebx
push   esi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x4
ja     8054a91 <do_setpass+0x71>
push   ecx
push   0x4
push   0x8069be0
push   esi
call   80614d0 <send_to_user>
jmp    8054a66 <do_setpass+0x46>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x31
jbe    8054aa6 <do_setpass+0x86>
mov    BYTE PTR [ebx+0x32],0x0
sub    esp,0xc
push   edi
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8054b4f <do_setpass+0x12f>
mov    eax,DWORD PTR [ebp-0x10]
sub    esp,0x8
mov    edx,DWORD PTR [eax+0x2c]
push   edx
push   esi
call   8062c50 <get_userlevel>
mov    edx,DWORD PTR [ebp-0x10]
mov    edi,eax
mov    eax,DWORD PTR [edx+0x3c]
shr    eax,0x9
and    eax,0xff
add    esp,0x10
cmp    edi,eax
jl     8054afe <do_setpass+0xde>
sub    esp,0x8
push   0x80671de
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8054b2b <do_setpass+0x10b>
cmp    edi,0x4f
jg     8054b08 <do_setpass+0xe8>
sub    esp,0x8
push   0x806a6c3
jmp    8054a89 <do_setpass+0x69>
mov    edi,DWORD PTR [ebp-0x10]
add    edi,0x15
cld    
mov    ecx,0x5
rep stos DWORD PTR es:[edi],eax
mov    BYTE PTR [edi],0x0
push   eax
mov    eax,DWORD PTR [ebp-0x10]
add    eax,0x8
push   eax
push   0x8069c20
jmp    8054a89 <do_setpass+0x69>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   ebx
add    eax,0x15
push   eax
call   8059150 <makepass>
mov    eax,DWORD PTR [ebp-0x10]
add    esp,0xc
add    eax,0x8
push   eax
push   0x8069c60
jmp    8054a89 <do_setpass+0x69>
sub    esp,0x8
push   0x806a1c9
jmp    8054a89 <do_setpass+0x69>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    ebx,[ebp+0x10]
push   ebx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80587f0 <get_channel>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     8054b8b <do_showidle+0x2b>
cmp    BYTE PTR [eax],0x0
jne    8054b90 <do_showidle+0x30>
mov    eax,0x806a6d1
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
add    esp,0xc
push   eax
push   esi
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   804a9f0 <show_idletimes>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    esi,[ebp+0x10]
push   esi
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8054bed <do_cslvl+0x3d>
mov    al,BYTE PTR [eax]
test   al,al
je     8054bed <do_cslvl+0x3d>
cmp    al,0x23
je     8054c10 <do_cslvl+0x60>
sub    esp,0x8
push   0x806e306
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8054c10 <do_cslvl+0x60>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070740
push   ecx
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8054bfd <do_cslvl+0x4d>
sub    esp,0xc
push   esi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     8054d1e <do_cslvl+0x16e>
push   edx
push   0x0
push   eax
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8054bfd <do_cslvl+0x4d>
sub    esp,0x8
push   ebx
push   eax
call   8063320 <find_shit>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     8054d12 <do_cslvl+0x162>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8054c6d <do_cslvl+0xbd>
cmp    BYTE PTR [eax],0x0
jne    8054c7d <do_cslvl+0xcd>
sub    esp,0x8
push   0x806a6d3
push   edi
call   80614d0 <send_to_user>
jmp    8054bfd <do_cslvl+0x4d>
sub    esp,0x8
push   eax
push   edi
call   80591b0 <check_for_number>
add    esp,0x10
test   eax,eax
jne    8054bfd <do_cslvl+0x4d>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   8048f58 <atoi@plt>
mov    DWORD PTR [ebp-0x10],eax
dec    eax
add    esp,0x10
cmp    eax,0x2
jbe    8054cb4 <do_cslvl+0x104>
push   eax
push   0x3
push   0x8069920
jmp    8054c75 <do_cslvl+0xc5>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [eax+0x30]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x63
mov    esi,eax
jle    8054cd3 <do_cslvl+0x123>
mov    esi,0x63
sub    esp,0x8
push   ebx
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    esi,eax
jle    8054cee <do_cslvl+0x13e>
sub    esp,0x8
push   0x8069940
jmp    8054c75 <do_cslvl+0xc5>
mov    ecx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ecx+0x3c]
movzx  edx,BYTE PTR [ebp-0x10]
shl    edx,0x9
and    eax,0xfffe01ff
or     eax,edx
sub    esp,0x8
mov    DWORD PTR [ecx+0x3c],eax
push   0x806a6e2
jmp    8054c75 <do_cslvl+0xc5>
push   eax
push   esi
push   0x80699c0
jmp    8054c75 <do_cslvl+0xc5>
sub    esp,0x8
push   0x806a183
jmp    8054c75 <do_cslvl+0xc5>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x8]
push   ebx
call   804aac0 <is_present>
add    esp,0x10
test   eax,eax
jne    8054d60 <do_idle+0x30>
mov    DWORD PTR [ebp+0xc],0x8069ca0
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
sub    esp,0x8
push   0x0
push   ebx
call   804a990 <get_idletime>
mov    edx,DWORD PTR ds:0x8075d20
sub    edx,eax
mov    DWORD PTR [esp],edx
call   8057f50 <idle2str>
mov    DWORD PTR [ebp+0x14],eax
mov    DWORD PTR [ebp+0x10],ebx
mov    DWORD PTR [ebp+0xc],0x806a6fd
mov    DWORD PTR [ebp+0x8],esi
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x10],eax
mov    esi,DWORD PTR [ebp+0x10]
mov    edi,DWORD PTR [ebp+0xc]
push   ebx
push   esi
push   edi
push   eax
call   8052cd0 <do_savelists>
push   ebx
push   esi
push   edi
mov    esi,DWORD PTR [ebp-0x10]
push   esi
call   8052c50 <do_savelevels>
mov    eax,ds:0x8075e74
add    esp,0x18
mov    ebx,DWORD PTR [eax+0xb40]
push   ebx
add    eax,0xb44
push   eax
call   8063980 <write_seenlist>
add    esp,0x10
test   eax,eax
je     8054e00 <do_saveall+0x60>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb40]
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x8069140
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
jmp    8054e30 <do_loadall>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x10],eax
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x10]
push   ebx
push   esi
push   edi
push   eax
call   8052d10 <do_loadlists>
push   ebx
push   esi
push   edi
mov    edi,DWORD PTR [ebp-0x10]
push   edi
call   8052c90 <do_loadlevels>
add    esp,0x20
call   8063b00 <read_seenlist>
test   eax,eax
je     8054e80 <do_loadall+0x50>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8054e80 <do_loadall+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb40]
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x8069ce0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
jmp    8054eb0 <do_names>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
lea    eax,[ebp+0x10]
sub    esp,0x10
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80587f0 <get_channel>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804be70 <show_names_on_channel>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8054f70 <do_forget+0x90>
sub    esp,0x8
push   0x2
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     8054f60 <do_forget+0x80>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0xb34
push   eax
call   804b0c0 <delete_channel>
add    esp,0x10
test   eax,eax
je     8054f50 <do_forget+0x70>
push   eax
push   ebx
push   0x806a715
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
jmp    8054f50 <do_forget+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   eax
push   ebx
push   0x8069d20
jmp    8054f31 <do_forget+0x51>
lea    esi,[esi+eiz*1+0x0]
push   eax
push   ebx
push   0x806a731
push   esi
call   80614d0 <send_to_user>
jmp    8054f3a <do_forget+0x5a>
nop
sub    esp,0x8
mov    eax,ds:0x8070420
push   eax
push   esi
call   804f840 <usage>
jmp    8054f3a <do_forget+0x5a>
jmp    8054f90 <do_kicksay>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x78
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8055050 <do_kicksay+0xc0>
mov    al,BYTE PTR [eax]
test   al,al
je     8055050 <do_kicksay+0xc0>
cmp    al,0x23
je     8054fd2 <do_kicksay+0x42>
mov    esi,ebx
mov    edi,0x806e306
mov    ecx,0x2
cld    
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8055050 <do_kicksay+0xc0>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8055050 <do_kicksay+0xc0>
mov    dl,BYTE PTR [eax]
test   dl,dl
je     8055050 <do_kicksay+0xc0>
cmp    dl,0x22
je     8055018 <do_kicksay+0x88>
sub    esp,0x8
push   0x8069d60
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
pop    ecx
pop    ebx
push   0x8069da0
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
inc    eax
push   0x806bb1e
mov    DWORD PTR [ebp+0x10],eax
lea    eax,[ebp+0x10]
push   eax
call   8057a60 <get_token>
add    esp,0x10
cmp    BYTE PTR [eax],0x0
mov    esi,eax
je     8055050 <do_kicksay+0xc0>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8055047 <do_kicksay+0xb7>
cmp    BYTE PTR [eax],0x20
je     805517d <do_kicksay+0x1ed>
test   eax,eax
je     8055069 <do_kicksay+0xd9>
cmp    BYTE PTR [eax],0x22
je     8055065 <do_kicksay+0xd5>
sub    esp,0x8
mov    edx,DWORD PTR ds:0x80704b0
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    8055010 <do_kicksay+0x80>
inc    eax
mov    DWORD PTR [ebp+0x10],eax
test   eax,eax
je     8055050 <do_kicksay+0xc0>
sub    esp,0x8
push   0x806bb1e
lea    eax,[ebp+0x10]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x6c],eax
je     8055050 <do_kicksay+0xc0>
cmp    BYTE PTR [eax],0x0
je     8055050 <do_kicksay+0xc0>
sub    esp,0x8
push   ebx
push   esi
call   8061f60 <find_kicksay>
add    esp,0x10
test   eax,eax
je     80550ad <do_kicksay+0x11d>
push   edx
mov    eax,DWORD PTR [eax+0x38]
push   eax
push   0x806a74d
jmp    8054ffc <do_kicksay+0x6c>
cld    
lea    edi,[ebp-0x68]
mov    ecx,0x12
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8075e20
mov    DWORD PTR [ebp-0x64],eax
inc    eax
mov    ds:0x8075e20,eax
mov    al,BYTE PTR [ebp-0x2a]
sub    esp,0xc
and    eax,0xfffffff1
push   esi
or     eax,0x6
mov    BYTE PTR [ebp-0x68],0x1
mov    BYTE PTR [ebp-0x2a],al
mov    DWORD PTR ds:0x8075d6c,0x8054f90
call   8048f78 <strlen@plt>
add    eax,0x3
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
add    esp,0xc
push   esi
push   0x806a769
push   eax
mov    DWORD PTR [ebp-0x30],eax
call   8048f18 <sprintf@plt>
pop    esi
pop    eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[ebp-0x38]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8054f90
call   80579d0 <mstrcpy>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp-0x6c]
push   eax
lea    eax,[ebp-0x34]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8054f90
call   80579d0 <mstrcpy>
pop    esi
pop    eax
push   ebx
lea    eax,[ebp-0x3c]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8054f90
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
lea    edi,[ebp-0x68]
push   edi
add    eax,0x720
push   eax
call   8059260 <addstruct>
add    esp,0x20
push   ebx
mov    ebx,DWORD PTR [ebp-0x30]
push   ebx
push   0x806a76e
jmp    8054ffc <do_kicksay+0x6c>
inc    eax
mov    DWORD PTR [ebp+0x10],eax
jmp    8055047 <do_kicksay+0xb7>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     80551b5 <do_rkicksay+0x25>
mov    al,BYTE PTR [eax]
test   al,al
jne    80551d0 <do_rkicksay+0x40>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070620
push   ecx
push   ebx
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
cmp    al,0x23
je     80551e8 <do_rkicksay+0x58>
mov    eax,0x2
mov    esi,DWORD PTR [ebp-0x10]
mov    edi,0x806e306
cld    
mov    ecx,eax
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    805523e <do_rkicksay+0xae>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     80551f4 <do_rkicksay+0x64>
cmp    BYTE PTR [eax],0x0
jne    8055204 <do_rkicksay+0x74>
sub    esp,0x8
push   0x806a788
push   ebx
call   80614d0 <send_to_user>
jmp    80551c5 <do_rkicksay+0x35>
sub    esp,0x8
mov    edx,DWORD PTR [ebp-0x10]
push   edx
push   eax
call   8061f60 <find_kicksay>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8055234 <do_rkicksay+0xa4>
push   eax
mov    edi,DWORD PTR [esi+0x38]
push   edi
push   0x806a7a4
push   ebx
call   80614d0 <send_to_user>
mov    DWORD PTR [esp],esi
call   80629d0 <remove_user>
jmp    80551c5 <do_rkicksay+0x35>
sub    esp,0x8
push   0x806a7bc
jmp    80551fc <do_rkicksay+0x6c>
sub    esp,0x8
push   0x8069de0
jmp    80551fc <do_rkicksay+0x6c>
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
je     8055282 <search_list+0x32>
mov    esi,esi
mov    eax,DWORD PTR [ebx+0x208]
and    eax,esi
cmp    eax,esi
je     8055290 <search_list+0x40>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8055270 <search_list+0x20>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
lea    eax,[ebx+0x20c]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,ebx
jne    805527c <search_list+0x2c>
jmp    8055284 <search_list+0x34>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0x8]
je     80552ed <change_dccnick+0x3d>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
lea    esi,[ebx+0x20c]
push   esi
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8055300 <change_dccnick+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80552d0 <change_dccnick+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    80552e7 <change_dccnick+0x37>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR ds:0x8075e74
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0xb3c]
mov    DWORD PTR [ecx],eax
mov    DWORD PTR [edx+0xb3c],ecx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x0
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebx]
add    eax,0x20c
push   eax
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   80596e0 <link_dccuser>
mov    edi,DWORD PTR ds:0x8075e74
mov    ecx,DWORD PTR [ebx]
mov    eax,DWORD PTR [edi+0xb3c]
add    esp,0x10
cmp    ecx,eax
mov    DWORD PTR [ebp-0x10],ecx
mov    DWORD PTR [ebp-0x14],edi
je     805546a <delete_client+0x12a>
mov    edx,eax
mov    eax,DWORD PTR [eax]
cmp    eax,ecx
je     8055398 <delete_client+0x58>
lea    esi,[esi+0x0]
mov    edx,eax
mov    eax,DWORD PTR [eax]
cmp    eax,ecx
jne    8055390 <delete_client+0x50>
mov    eax,DWORD PTR [ecx]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp-0x14]
xor    esi,esi
cmp    esi,DWORD PTR [eax+0xb24]
mov    ebx,DWORD PTR [eax+0xb28]
jge    80553c4 <delete_client+0x84>
nop
cmp    BYTE PTR [ebx],0x0
jne    8055430 <delete_client+0xf0>
inc    esi
add    ebx,0xa1
cmp    esi,DWORD PTR [edi+0xb24]
jl     80553b0 <delete_client+0x70>
mov    eax,DWORD PTR [ebp-0x10]
sub    esp,0xc
add    eax,0x20c
push   eax
call   8062d80 <max_userlevel>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
sub    esp,0x8
add    eax,0x20c
push   eax
call   8057c60 <getnick>
add    esp,0xc
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   0x806a7d4
call   804b7d0 <send_global_statmsg>
mov    eax,DWORD PTR [ebp-0x10]
add    esp,0x14
mov    edx,DWORD PTR [eax+0x4]
push   edx
call   8048fc8 <close@plt>
lea    eax,[ebp-0x10]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x10]
sub    esp,0x8
add    eax,0x20c
push   eax
lea    eax,[ebx+0x51]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8055457 <delete_client+0x117>
mov    edi,DWORD PTR ds:0x8075e74
jmp    80553b5 <delete_client+0x75>
push   ecx
push   0xa1
push   0x0
push   ebx
call   8048eb8 <memset@plt>
add    esp,0x10
jmp    805544c <delete_client+0x10c>
mov    eax,DWORD PTR [ecx]
mov    DWORD PTR [edi+0xb3c],eax
jmp    805539c <delete_client+0x5c>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
mov    ecx,DWORD PTR [eax+0xb3c]
test   ecx,ecx
jne    80554a0 <close_all_dcc+0x20>
leave  
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
add    eax,0xb3c
push   eax
call   8055340 <delete_client>
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0xb3c]
add    esp,0x10
test   edx,edx
jne    80554a0 <close_all_dcc+0x20>
jmp    8055495 <close_all_dcc+0x15>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x22c
mov    edi,DWORD PTR [ebp+0x8]
test   BYTE PTR [edi+0x208],0x10
je     8055650 <process_incoming_chat+0x180>
sub    esp,0xc
push   0x806a8c0
call   80576b0 <debug>
add    esp,0xc
lea    eax,[ebp-0x22c]
push   eax
lea    eax,[ebp-0x28]
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
mov    DWORD PTR [ebp-0x22c],0x10
call   8048d78 <accept@plt>
pop    esi
mov    ecx,DWORD PTR [edi+0x4]
mov    ebx,eax
push   ecx
call   8048fc8 <close@plt>
add    esp,0x10
cmp    ebx,0xffffffff
je     8055640 <process_incoming_chat+0x170>
sub    esp,0x8
mov    DWORD PTR [edi+0x4],ebx
push   0x3
push   ebx
call   8048fb8 <fcntl@plt>
or     eax,0x4
add    esp,0xc
push   eax
push   0x4
push   ebx
call   8048fb8 <fcntl@plt>
mov    eax,DWORD PTR [edi+0x208]
and    eax,0xffffffef
or     eax,0x20
mov    DWORD PTR [edi+0x208],eax
mov    eax,ds:0x8075d20
lea    esi,[edi+0x20c]
mov    DWORD PTR [edi+0x260],eax
mov    DWORD PTR [esp],esi
call   8062d80 <max_userlevel>
mov    DWORD PTR [ebp-0x234],eax
pop    eax
pop    edx
push   0x1
push   esi
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   80596e0 <link_dccuser>
pop    eax
mov    eax,DWORD PTR [ebp-0x234]
push   eax
sub    esp,0xc
push   esi
call   8057c60 <getnick>
add    esp,0x10
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   0x806a7f1
lea    ebx,[ebp-0x228]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x20
push   ebx
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806795b
mov    eax,DWORD PTR [edi+0x4]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
test   eax,eax
js     8055640 <process_incoming_chat+0x170>
sub    esp,0xc
push   ebx
call   804b7d0 <send_global_statmsg>
add    esp,0x10
cmp    DWORD PTR [ebp-0x234],0x64
je     8055618 <process_incoming_chat+0x148>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   0x64
mov    eax,ds:0x8075e74
push   0x0
add    eax,0x220
push   eax
push   esi
call   8053dd0 <do_statmsg>
add    esp,0x10
jmp    8055610 <process_incoming_chat+0x140>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [edi+0x208],0x80
jmp    8055610 <process_incoming_chat+0x140>
lea    esi,[esi+eiz*1+0x0]
call   8048de8 <__error@plt>
mov    DWORD PTR [eax],0x23
push   ebx
lea    eax,[ebp-0x228]
push   eax
lea    eax,[edi+0x8]
push   eax
mov    ecx,DWORD PTR [edi+0x4]
push   ecx
call   8061780 <sockread>
mov    esi,eax
call   8048de8 <__error@plt>
add    esp,0x10
test   esi,esi
mov    eax,DWORD PTR [eax]
je     80557d0 <process_incoming_chat+0x300>
cmp    BYTE PTR [esi],0x0
je     80557d0 <process_incoming_chat+0x300>
mov    ebx,DWORD PTR ds:0x8075d20
sub    ebx,DWORD PTR [edi+0x260]
cmp    ebx,0xa
jle    8055790 <process_incoming_chat+0x2c0>
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [edi+0x25c],eax
sub    esp,0x8
mov    eax,ds:0x8075d20
mov    DWORD PTR [edi+0x260],eax
push   0x0
lea    eax,[edi+0x20c]
push   eax
mov    DWORD PTR [ebp-0x238],eax
call   8062b00 <find_user>
mov    ds:0x80762a4,eax
pop    eax
pop    edx
push   0x0
mov    eax,DWORD PTR [ebp-0x238]
push   eax
call   8063320 <find_shit>
mov    ds:0x80766c4,eax
pop    eax
mov    eax,DWORD PTR [ebp-0x238]
push   eax
call   8057c60 <getnick>
pop    ecx
pop    ebx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
add    esp,0x10
cmp    BYTE PTR [esi],0x1
je     805575c <process_incoming_chat+0x28c>
push   eax
mov    eax,ds:0x8075e74
push   esi
add    eax,0x220
push   eax
mov    ebx,DWORD PTR [ebp-0x238]
push   ebx
mov    DWORD PTR ds:0x8075e28,0x1
call   804dee0 <on_msg>
add    esp,0x10
cmp    DWORD PTR ds:0x8075e28,0x2
je     8055750 <process_incoming_chat+0x280>
mov    DWORD PTR ds:0x8075e28,0x0
jmp    8055610 <process_incoming_chat+0x140>
mov    DWORD PTR [edi+0x208],0x80
jmp    8055741 <process_incoming_chat+0x271>
sub    esp,0xc
lea    ebx,[ebp-0x230]
push   ebx
mov    DWORD PTR [ebp-0x230],esi
call   8057b00 <chop>
pop    eax
pop    edx
push   0x806e6c6
push   ebx
call   8057a60 <get_token>
mov    esi,eax
add    esp,0x10
jmp    8055712 <process_incoming_chat+0x242>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
lea    edx,[ebx+ebx*4]
lea    edx,[edx+edx*4]
add    eax,DWORD PTR [edi+0x25c]
shl    edx,0x3
mov    DWORD PTR [edi+0x25c],eax
sub    eax,edx
add    esp,0x10
cmp    eax,0x7d0
jg     8055640 <process_incoming_chat+0x170>
jmp    80556b4 <process_incoming_chat+0x1e4>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,0x4
je     8055610 <process_incoming_chat+0x140>
cmp    eax,0x23
jne    8055640 <process_incoming_chat+0x170>
jmp    8055610 <process_incoming_chat+0x140>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x21c
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
je     8055884 <parse_dcc_input+0x94>
nop
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebx+0x208]
test   esi,0x200
je     805598d <parse_dcc_input+0x19d>
mov    edx,DWORD PTR [ebx+0x4]
cmp    edx,0xffffffff
je     8055869 <parse_dcc_input+0x79>
mov    eax,edx
shr    eax,0x5
mov    ecx,edx
and    ecx,0x1f
mov    eax,DWORD PTR [eax*4+0x8076f20]
shr    eax,cl
and    eax,0x1
jne    80558c0 <parse_dcc_input+0xd0>
cmp    edx,0xffffffff
je     8055869 <parse_dcc_input+0x79>
mov    ecx,edx
shr    edx,0x5
and    ecx,0x1f
mov    eax,DWORD PTR [edx*4+0x8075ca0]
shr    eax,cl
and    eax,0x1
je     8055869 <parse_dcc_input+0x79>
test   esi,0x1
jne    80558ac <parse_dcc_input+0xbc>
and    esi,0x10
je     805587e <parse_dcc_input+0x8e>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x260]
cmp    eax,0x1d
jg     805588c <parse_dcc_input+0x9c>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8055810 <parse_dcc_input+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
lea    eax,[ebx+0x20c]
push   eax
push   0x806a900
call   80576b0 <debug>
mov    DWORD PTR [ebx+0x208],0x80
jmp    8055884 <parse_dcc_input+0x94>
sub    esp,0xc
push   ebx
call   80554d0 <process_incoming_chat>
add    esp,0x10
mov    esi,DWORD PTR [ebx+0x208]
jmp    8055869 <parse_dcc_input+0x79>
sub    esp,0xc
push   0x806a940
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x208]
and    eax,0xfffffdef
or     eax,0x20
mov    DWORD PTR [ebx+0x208],eax
mov    eax,ds:0x8075d20
lea    edi,[ebx+0x20c]
mov    DWORD PTR [ebx+0x260],eax
mov    DWORD PTR [esp],edi
call   8062d80 <max_userlevel>
mov    DWORD PTR [ebp-0x21c],eax
pop    eax
pop    edx
push   0x1
push   edi
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   80596e0 <link_dccuser>
pop    eax
mov    eax,DWORD PTR [ebp-0x21c]
push   eax
sub    esp,0xc
push   edi
call   8057c60 <getnick>
add    esp,0x10
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   0x806a7f1
lea    esi,[ebp-0x218]
push   esi
call   8048f18 <sprintf@plt>
add    esp,0x20
push   esi
sub    esp,0x8
mov    eax,ds:0x8075d20
push   eax
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806795b
mov    eax,DWORD PTR [ebx+0x4]
push   eax
call   8061260 <send_to_socket>
add    esp,0x10
test   eax,eax
js     80558a0 <parse_dcc_input+0xb0>
sub    esp,0xc
push   esi
call   804b7d0 <send_global_statmsg>
add    esp,0x10
cmp    DWORD PTR [ebp-0x21c],0x64
je     8055995 <parse_dcc_input+0x1a5>
mov    esi,DWORD PTR [ebx+0x208]
mov    edx,DWORD PTR [ebx+0x4]
jmp    8055846 <parse_dcc_input+0x56>
push   0x64
mov    eax,ds:0x8075e74
push   0x0
add    eax,0x220
push   eax
push   edi
call   8053dd0 <do_statmsg>
add    esp,0x10
jmp    8055987 <parse_dcc_input+0x197>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x44
push   0x1
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   8055250 <search_list>
add    esp,0x10
test   eax,eax
je     80559e0 <dcc_connect+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8063280 <password_needed>
add    esp,0x10
test   eax,eax
je     8055a04 <dcc_connect+0x54>
sub    esp,0xc
push   edi
call   8063210 <verified>
add    esp,0x10
test   eax,eax
je     8055b20 <dcc_connect+0x170>
sub    esp,0xc
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x40],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     80559cb <dcc_connect+0x1b>
cmp    BYTE PTR [eax],0x0
je     80559cb <dcc_connect+0x1b>
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
mov    DWORD PTR [ebp-0x44],eax
sub    eax,0x400
add    esp,0x10
cmp    eax,0xfbff
ja     80559cb <dcc_connect+0x1b>
push   ebx
lea    eax,[ebp-0x3c]
push   eax
push   0x806b738
mov    ecx,DWORD PTR [ebp-0x40]
push   ecx
call   8048e88 <sscanf@plt>
add    esp,0x10
dec    eax
jne    80559cb <dcc_connect+0x1b>
push   esi
sub    esp,0x8
mov    ebx,DWORD PTR [ebp-0x3c]
xchg   bl,bh
ror    ebx,0x10
xchg   bl,bh
push   ebx
call   8048e98 <__inet_ntoa@plt>
add    esp,0xc
push   eax
push   edi
push   0x806a80b
call   80576b0 <debug>
mov    DWORD PTR [esp],0x264
mov    DWORD PTR ds:0x8075d6c,0x80559b0
call   8057860 <MyMalloc>
mov    esi,eax
pop    eax
pop    edx
push   edi
lea    eax,[esi+0x20c]
push   eax
call   8048c68 <strcpy@plt>
mov    DWORD PTR [esp],ebx
call   8048e98 <__inet_ntoa@plt>
pop    ebx
pop    edi
push   eax
lea    ebx,[ebp-0x38]
push   ebx
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075d20
mov    DWORD PTR [esi+0x260],eax
mov    DWORD PTR [esi+0x4],0xffffffff
mov    DWORD PTR [esi+0x208],0x211
mov    DWORD PTR [esp],esi
call   8055320 <add_client>
add    esp,0xc
push   0x0
mov    ecx,DWORD PTR [ebp-0x44]
push   ecx
push   ebx
call   8060fc0 <SockConnect>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [esi+0x4],eax
jns    80559cb <dcc_connect+0x1b>
mov    DWORD PTR [esi+0x208],0x80
jmp    80559cb <dcc_connect+0x1b>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x8068b00
push   edi
call   80614d0 <send_to_user>
jmp    80559cb <dcc_connect+0x1b>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x28
push   0x1
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8055250 <search_list>
add    esp,0x10
test   eax,eax
je     8055b70 <dcc_chat+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
jmp    8055b70 <dcc_chat+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   0x264
mov    DWORD PTR ds:0x8075d6c,0x8055b40
call   8057860 <MyMalloc>
mov    ebx,eax
pop    eax
pop    edx
push   esi
lea    esi,[ebx+0x20c]
push   esi
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x260],eax
mov    DWORD PTR [ebx+0x4],0xffffffff
mov    DWORD PTR [ebx+0x208],0x11
mov    DWORD PTR [esp],ebx
call   8055320 <add_client>
or     DWORD PTR [ebx+0x208],0x10
mov    DWORD PTR [esp],0x0
call   8060f40 <SockListener>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebx+0x4],eax
js     8055c30 <dcc_chat+0xf0>
push   eax
lea    eax,[ebp-0x1c]
push   eax
lea    eax,[ebp-0x18]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    DWORD PTR [ebp-0x1c],0x10
call   8049008 <getsockname@plt>
add    esp,0x10
test   eax,eax
js     8055c30 <dcc_chat+0xf0>
mov    dx,WORD PTR [ebp-0x16]
xchg   dl,dh
and    edx,0xffff
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xc]
push   edx
xchg   al,ah
ror    eax,0x10
xchg   al,ah
push   eax
push   0x806a825
push   esi
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8061490 <send_ctcp>
jmp    8055b5a <dcc_chat+0x1a>
mov    esi,esi
mov    DWORD PTR [ebx+0x208],0x80
jmp    8055b5a <dcc_chat+0x1a>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8055250 <search_list>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
je     8055c68 <send_chat+0x28>
test   BYTE PTR [ebx+0x208],0x20
jne    8055c70 <send_chat+0x30>
xor    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x806726d
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
call   8061260 <send_to_socket>
add    esp,0x10
cmp    eax,0xffffffff
je     8055ca1 <send_chat+0x61>
test   eax,eax
je     8055c9a <send_chat+0x5a>
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x260],eax
mov    eax,0x1
jmp    8055c68 <send_chat+0x28>
mov    DWORD PTR [ebx+0x208],0x80
jmp    8055c66 <send_chat+0x26>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8062d80 <max_userlevel>
add    esp,0xc
push   eax
push   0x8075da0
push   0x806a980
call   804b700 <send_statmsg>
pop    eax
pop    edx
push   0x23
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8055cf0 <ctcp_version+0x40>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x24
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8055d30 <ctcp_version+0x80>
sub    esp,0xc
push   0x806a83a
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
je     8055d30 <ctcp_version+0x80>
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x806a855
mov    DWORD PTR [ebp+0x8],0x8075da0
mov    esp,ebp
pop    ebp
jmp    8061430 <send_ctcp_reply>
mov    DWORD PTR [ebp+0x10],0x806a9c0
jmp    8055d1a <ctcp_version+0x6a>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8062d80 <max_userlevel>
add    esp,0xc
push   eax
push   0x8075da0
push   0x806aa00
call   804b700 <send_statmsg>
pop    eax
pop    edx
push   0x23
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8055d80 <ctcp_finger+0x40>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x25
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8055dc0 <ctcp_finger+0x80>
sub    esp,0xc
push   0x806a83a
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
je     8055dc0 <ctcp_finger+0x80>
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x806a860
mov    DWORD PTR [ebp+0x8],0x8075da0
mov    esp,ebp
pop    ebp
jmp    8061430 <send_ctcp_reply>
mov    DWORD PTR [ebp+0x10],0x806a86a
jmp    8055daa <ctcp_finger+0x6a>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
mov    edi,DWORD PTR [ebp+0x8]
je     8055de8 <ctcp_dcc+0x18>
cmp    BYTE PTR [eax],0x0
jne    8055df0 <ctcp_dcc+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
mov    esi,eax
mov    ebx,eax
add    esp,0x10
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx]
test   al,al
je     8055e36 <ctcp_dcc+0x66>
movsx  edx,al
cmp    edx,0xff
ja     8055ea0 <ctcp_dcc+0xd0>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x834]
test   al,al
mov    BYTE PTR [ebx],al
je     8055e36 <ctcp_dcc+0x66>
inc    ebx
jmp    8055e10 <ctcp_dcc+0x40>
sub    esp,0xc
push   edi
call   8062d80 <max_userlevel>
mov    ebx,eax
pop    eax
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8055e4e <ctcp_dcc+0x7e>
mov    eax,0x8071283
push   eax
push   esi
push   ebx
push   0x8075da0
push   0x806aa40
call   804b700 <send_statmsg>
add    esp,0x20
cmp    ebx,0x9
jle    8055de8 <ctcp_dcc+0x18>
cmp    ebx,0xc8
je     8055de8 <ctcp_dcc+0x18>
sub    esp,0x8
push   0x8067cc2
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8055de8 <ctcp_dcc+0x18>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x10]
push   ebx
push   edi
call   80559b0 <dcc_connect>
jmp    8055de8 <ctcp_dcc+0x18>
nop
sub    esp,0xc
push   edx
call   8048cc8 <___toupper@plt>
add    esp,0x10
jmp    8055e2d <ctcp_dcc+0x5d>
jmp    8055ec0 <ctcp_ping>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x10]
test   esi,esi
mov    ebx,DWORD PTR [ebp+0x8]
je     8055ed4 <ctcp_ping+0x14>
cmp    BYTE PTR [esi],0x0
jne    8055ee0 <ctcp_ping+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x64
ja     8055ed4 <ctcp_ping+0x14>
sub    esp,0xc
push   ebx
call   8062d80 <max_userlevel>
add    esp,0xc
push   eax
push   0x8075da0
mov    ebx,eax
push   0x806aa80
call   804b700 <send_statmsg>
add    esp,0x10
cmp    ebx,0x4f
jg     8055f2a <ctcp_ping+0x6a>
sub    esp,0x8
push   0x23
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
jne    8055ed4 <ctcp_ping+0x14>
mov    DWORD PTR [ebp+0x10],esi
mov    DWORD PTR [ebp+0xc],0x806a87c
mov    DWORD PTR [ebp+0x8],0x8075da0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    8061430 <send_ctcp_reply>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8055fbd <on_ctcp+0x6d>
mov    edi,DWORD PTR ds:0x8070ce0
xor    ebx,ebx
test   edi,edi
je     8055fa0 <on_ctcp+0x50>
mov    edi,0x8070ce0
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   esi
mov    ecx,DWORD PTR [edi+ebx*8]
push   ecx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8055fc5 <on_ctcp+0x75>
inc    ebx
mov    eax,DWORD PTR [ebx*8+0x8070ce0]
test   eax,eax
jne    8055f80 <on_ctcp+0x30>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062d80 <max_userlevel>
push   esi
push   eax
push   0x8075da0
push   0x806a89f
call   804b700 <send_statmsg>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   edx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   DWORD PTR [edi+ebx*8+0x4]
jmp    8055fbd <on_ctcp+0x6d>
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    edx,DWORD PTR ds:0x8070e04
mov    ebp,esp
xor    eax,eax
test   edx,edx
mov    ecx,DWORD PTR [ebp+0x8]
je     805600d <proc_lookup+0x2d>
mov    edx,0x8070e00
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [edx+eax*8],ecx
je     8056011 <proc_lookup+0x31>
inc    eax
cmp    DWORD PTR [edx+eax*8+0x4],0x0
jne    8056000 <proc_lookup+0x20>
xor    eax,eax
pop    ebp
ret    
mov    eax,DWORD PTR [edx+eax*8+0x4]
jmp    805600f <proc_lookup+0x2f>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
xor    eax,eax
cmp    DWORD PTR [edx+0x4],0x0
mov    ecx,DWORD PTR [ebp+0xc]
je     805604d <strdef+0x2d>
jmp    8056040 <strdef+0x20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    DWORD PTR [edx+eax*8],ecx
je     8056054 <strdef+0x34>
inc    eax
cmp    DWORD PTR [edx+eax*8+0x4],0x0
jne    8056040 <strdef+0x20>
mov    eax,0x806ad28
pop    ebp
ret    
mov    eax,DWORD PTR [edx+eax*8+0x4]
jmp    8056052 <strdef+0x32>
lea    esi,[esi+0x0]
mov    ecx,DWORD PTR ds:0x8076fa4
push   ebp
test   ecx,ecx
mov    ebp,esp
je     805608f <memreset+0x2f>
lea    eax,[ecx+0x14]
mov    edx,0xc7
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [eax],0x0
add    eax,0x14
dec    edx
jns    8056080 <memreset+0x20>
mov    ecx,DWORD PTR [ecx]
test   ecx,ecx
jne    805606d <memreset+0xd>
pop    ebp
ret    
jmp    80560a0 <memtouch>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
test   ecx,ecx
push   ebx
je     80560d7 <memtouch+0x37>
mov    ebx,DWORD PTR ds:0x8076fa4
test   ebx,ebx
je     80560d7 <memtouch+0x37>
xor    edx,edx
mov    eax,ebx
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [eax+0x4],ecx
je     80560da <memtouch+0x3a>
inc    edx
add    eax,0x14
cmp    edx,0xc7
jle    80560c0 <memtouch+0x20>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80560b5 <memtouch+0x15>
pop    ebx
pop    ebp
ret    
mov    BYTE PTR [eax+0x14],0x1
jmp    80560d7 <memtouch+0x37>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0x8]
push   eax
call   8048da8 <ctime@plt>
mov    ebx,eax
pop    eax
pop    edx
push   0xa
push   ebx
call   8048f98 <strchr@plt>
mov    BYTE PTR [eax],0x0
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0xc]
je     8056149 <debug_server+0x39>
push   eax
cmp    BYTE PTR [ebx],0x0
je     8056300 <debug_server+0x1f0>
mov    eax,0x8067a05
push   eax
push   esi
push   0x806ae06
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
jne    8056160 <debug_server+0x50>
mov    DWORD PTR [ebp+0xc],esi
mov    DWORD PTR [ebp+0x8],0x806ae14
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80576b0 <debug>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
add    esp,0xc
cmp    eax,0x2
sete   al
and    eax,0xff
mov    edi,eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   esi
push   0x806ae1d
call   80576b0 <debug>
add    esp,0xc
cmp    BYTE PTR [ebx+0x8],0x0
je     80562f0 <debug_server+0x1e0>
lea    eax,[ebx+0x8]
push   eax
push   esi
push   0x806ae2c
call   80576b0 <debug>
add    esp,0xc
cmp    BYTE PTR [ebx+0x58],0x0
je     80562e0 <debug_server+0x1d0>
lea    eax,[ebx+0x58]
push   eax
push   esi
push   0x806ae3c
call   80576b0 <debug>
add    esp,0xc
cmp    BYTE PTR [ebx+0xa8],0x0
je     80562d0 <debug_server+0x1c0>
lea    eax,[ebx+0xa8]
push   eax
push   esi
push   0x806ae4c
call   80576b0 <debug>
add    esp,0xc
mov    ecx,DWORD PTR [ebx+0xfc]
push   ecx
push   esi
push   0x806ae60
call   80576b0 <debug>
add    esp,0xc
mov    edx,DWORD PTR [ebx+0x100]
push   edx
push   esi
push   0x806ae70
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x104]
test   edi,edi
push   eax
mov    eax,0x806ae7e
jne    8056221 <debug_server+0x111>
mov    eax,0x8067180
push   eax
push   esi
push   0x806ae80
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x108]
add    esp,0x14
push   eax
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x108]
push   eax
call   80560e0 <atime>
add    esp,0x10
test   edi,edi
push   eax
mov    eax,0x806ae7e
jne    8056258 <debug_server+0x148>
mov    eax,0x8067180
push   eax
push   esi
push   0x806ae8f
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x10c]
add    esp,0x14
push   eax
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x10c]
push   eax
call   80560e0 <atime>
add    esp,0x10
test   edi,edi
push   eax
mov    eax,0x806ae7e
jne    805628f <debug_server+0x17f>
mov    eax,0x8067180
push   eax
push   esi
push   0x806aeab
call   80576b0 <debug>
add    esp,0x20
mov    eax,DWORD PTR [ebx+0x110]
push   eax
push   edi
push   0x0
mov    ecx,DWORD PTR [ebx+0x110]
push   ecx
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   esi
push   0x806aec7
call   80576b0 <debug>
add    esp,0x10
jmp    8056146 <debug_server+0x36>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8071283
jmp    80561d6 <debug_server+0xc6>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    80561b4 <debug_server+0xa4>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    8056198 <debug_server+0x88>
lea    esi,[esi+0x0]
mov    eax,0x8067a0a
jmp    8056132 <debug_server+0x22>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x8c
call   8056060 <memreset>
sub    esp,0xc
mov    eax,ds:0x8075d28
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,ds:0x8075d68
push   eax
call   80560a0 <memtouch>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x8c],eax
je     8056520 <debug_memory+0x210>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x8c]
push   eax
call   80560a0 <memtouch>
mov    eax,DWORD PTR [ebp-0x8c]
mov    esi,DWORD PTR [eax+0xb34]
add    esp,0x10
test   esi,esi
je     80563f7 <debug_memory+0xe7>
sub    esp,0xc
push   esi
call   80560a0 <memtouch>
pop    edi
mov    ebx,DWORD PTR [esi+0x4]
push   ebx
call   80560a0 <memtouch>
pop    ecx
mov    edx,DWORD PTR [esi+0x8]
push   edx
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [esi+0xc]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [esi+0x14]
push   eax
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [esi+0x1c]
add    esp,0x10
test   ebx,ebx
je     80563c4 <debug_memory+0xb4>
sub    esp,0xc
push   ebx
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    80563b2 <debug_memory+0xa2>
mov    ebx,DWORD PTR [esi+0x18]
test   ebx,ebx
je     80563f1 <debug_memory+0xe1>
sub    esp,0xc
push   ebx
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80560a0 <memtouch>
pop    edi
mov    ecx,DWORD PTR [ebx+0xc]
push   ecx
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    80563cb <debug_memory+0xbb>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8056377 <debug_memory+0x67>
mov    eax,DWORD PTR [ebp-0x8c]
mov    ebx,DWORD PTR [eax+0xb3c]
test   ebx,ebx
je     8056419 <debug_memory+0x109>
sub    esp,0xc
push   ebx
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8056407 <debug_memory+0xf7>
xor    edi,edi
mov    eax,DWORD PTR [ebp-0x8c]
sub    esp,0xc
mov    edx,DWORD PTR [eax+edi*4+0xb48]
push   edx
inc    edi
call   80560a0 <memtouch>
add    esp,0x10
cmp    edi,0x13
jle    805641b <debug_memory+0x10b>
mov    eax,DWORD PTR [ebp-0x8c]
sub    esp,0xc
mov    eax,DWORD PTR [eax+0xb28]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   80560a0 <memtouch>
xor    edi,edi
mov    eax,DWORD PTR [ebp-0x8c]
add    esp,0x10
cmp    edi,DWORD PTR [eax+0x71c]
mov    esi,DWORD PTR [eax+0x720]
jl     805666d <debug_memory+0x35d>
mov    eax,DWORD PTR [ebp-0x8c]
sub    esp,0xc
mov    edx,DWORD PTR [eax+0xb40]
push   edx
call   80560a0 <memtouch>
mov    eax,DWORD PTR [ebp-0x8c]
mov    ebx,DWORD PTR [eax+0xb44]
add    esp,0x10
test   ebx,ebx
je     80564b9 <debug_memory+0x1a9>
sub    esp,0xc
push   ebx
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    80564a7 <debug_memory+0x197>
mov    eax,DWORD PTR [ebp-0x8c]
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x3b0]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    eax,DWORD PTR [eax+0x3b4]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    eax,DWORD PTR [eax+0x3b8]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    eax,DWORD PTR [ebp-0x8c]
mov    edi,DWORD PTR [eax+0x3bc]
push   edi
call   80560a0 <memtouch>
mov    eax,DWORD PTR [ebp-0x8c]
mov    eax,DWORD PTR [eax]
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x8c],eax
jne    8056351 <debug_memory+0x41>
sub    esp,0xc
push   0x806aee0
call   80576b0 <debug>
mov    eax,ds:0x8076fa4
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x90],eax
je     805656f <debug_memory+0x25f>
mov    ebx,DWORD PTR [ebp-0x90]
mov    edi,0xc7
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebx+0x4]
test   esi,esi
jne    8056590 <debug_memory+0x280>
add    ebx,0x14
dec    edi
jns    8056550 <debug_memory+0x240>
mov    eax,DWORD PTR [ebp-0x90]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x90],eax
jne    805653f <debug_memory+0x22f>
sub    esp,0xc
push   0x806b21f
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
mov    ecx,DWORD PTR [ebx+0x8]
push   ecx
call   8055fe0 <proc_lookup>
add    esp,0x10
test   eax,eax
je     8056652 <debug_memory+0x342>
sub    esp,0x8
push   eax
lea    eax,[ebp-0x88]
push   eax
call   8048c68 <strcpy@plt>
lea    ecx,[ebp-0x88]
add    esp,0x10
mov    esi,ecx
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     80565d0 <debug_memory+0x2c0>
test   edx,0x8080
jne    80565f5 <debug_memory+0x2e5>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,esi
mov    eax,0x17
sub    eax,ecx
shr    eax,0x3
mov    esi,0x8071022
sub    esp,0xc
sub    esi,eax
mov    eax,DWORD PTR [ebx+0x10]
push   eax
call   80560e0 <atime>
add    esp,0xc
push   eax
cmp    BYTE PTR [ebx+0x14],0x0
je     805664b <debug_memory+0x33b>
mov    eax,0x8067180
push   eax
mov    eax,DWORD PTR [ebx+0xc]
push   eax
push   esi
lea    eax,[ebp-0x88]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806aef6
call   80576b0 <debug>
add    esp,0x20
jmp    8056557 <debug_memory+0x247>
mov    eax,0x806af0f
jmp    8056628 <debug_memory+0x318>
push   edx
mov    eax,DWORD PTR [ebx+0x8]
push   eax
push   0x806af16
lea    eax,[ebp-0x88]
push   eax
call   8048f18 <sprintf@plt>
jmp    80565b7 <debug_memory+0x2a7>
sub    esp,0xc
mov    eax,DWORD PTR [esi+0x2c]
push   eax
call   80560a0 <memtouch>
mov    dl,BYTE PTR [esi+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
sub    eax,0x2
add    esp,0x10
cmp    eax,0x1
jbe    80566e5 <debug_memory+0x3d5>
shr    dl,1
mov    eax,edx
and    eax,0x7
cmp    eax,0x3
je     80566d4 <debug_memory+0x3c4>
cmp    eax,0x2
je     80566d4 <debug_memory+0x3c4>
dec    eax
je     80566b9 <debug_memory+0x3a9>
inc    edi
mov    eax,DWORD PTR [ebp-0x8c]
add    esi,0x48
cmp    edi,DWORD PTR [eax+0x71c]
jl     805666d <debug_memory+0x35d>
jmp    805647f <debug_memory+0x16f>
mov    ebx,DWORD PTR [esi+0x38]
test   ebx,ebx
je     80566a2 <debug_memory+0x392>
sub    esp,0xc
push   ebx
call   80560a0 <memtouch>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    80566c0 <debug_memory+0x3b0>
jmp    80566a2 <debug_memory+0x392>
sub    esp,0xc
mov    ecx,DWORD PTR [esi+0x38]
push   ecx
call   80560a0 <memtouch>
add    esp,0x10
jmp    80566a2 <debug_memory+0x392>
sub    esp,0xc
mov    eax,DWORD PTR [esi+0x30]
push   eax
call   80560a0 <memtouch>
pop    eax
mov    ebx,DWORD PTR [esi+0x34]
push   ebx
call   80560a0 <memtouch>
add    esp,0x10
mov    dl,BYTE PTR [esi+0x3e]
jmp    805668e <debug_memory+0x37e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x807125b
push   0x806af1b
call   80576b0 <debug>
pop    esi
pop    edi
push   0x807125f
push   0x806af2c
call   80576b0 <debug>
pop    ecx
pop    ebx
push   0x807127d
push   0x806af3d
call   80576b0 <debug>
pop    eax
pop    edx
push   0x8071272
push   0x806af4f
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806af61
call   80576b0 <debug>
mov    eax,ds:0x8070d20
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],0x0
je     80567a6 <debug_core+0x96>
mov    ebx,0x8070d20
push   eax
mov    eax,DWORD PTR [ebp-0x10]
mov    edi,DWORD PTR [ebx+eax*8+0x4]
push   edi
mov    esi,DWORD PTR [ebx+eax*8]
push   esi
push   0x806af6f
call   80576b0 <debug>
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
mov    ecx,DWORD PTR [ebx+eax*8]
add    esp,0x10
test   ecx,ecx
jne    805677f <debug_core+0x6f>
sub    esp,0xc
push   0x806b21f
call   80576b0 <debug>
pop    eax
pop    edx
mov    edi,DWORD PTR ds:0x8075e74
push   edi
push   0x806af7b
call   80576b0 <debug>
pop    ebx
mov    ecx,DWORD PTR ds:0x8076f00
pop    esi
push   ecx
push   0x806af8c
call   80576b0 <debug>
pop    eax
pop    edx
push   0x80762c0
push   0x806af9c
call   80576b0 <debug>
pop    esi
pop    edi
push   0x8075ea0
push   0x806afb0
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806afc4
call   80576b0 <debug>
pop    ecx
test   BYTE PTR ds:0x8076f04,0x1
pop    ebx
je     80571f0 <debug_core+0xae0>
mov    eax,0x8067a05
push   eax
push   0x806afcc
call   80576b0 <debug>
pop    eax
test   BYTE PTR ds:0x8076f04,0x2
pop    edx
je     80571e6 <debug_core+0xad6>
mov    eax,0x8067a05
push   eax
push   0x806afda
call   80576b0 <debug>
pop    esi
test   BYTE PTR ds:0x8076f04,0x4
pop    edi
je     80571dc <debug_core+0xacc>
mov    eax,0x8067a05
push   eax
push   0x806afec
call   80576b0 <debug>
pop    ecx
test   BYTE PTR ds:0x8076f04,0x8
pop    ebx
je     80571d2 <debug_core+0xac2>
mov    eax,0x8067a05
push   eax
push   0x806affd
call   80576b0 <debug>
pop    eax
test   BYTE PTR ds:0x8076f04,0x10
pop    edx
je     80571c8 <debug_core+0xab8>
mov    eax,0x8067a05
push   eax
push   0x806b00e
call   80576b0 <debug>
pop    edi
test   BYTE PTR ds:0x8076f04,0x20
pop    eax
je     80571be <debug_core+0xaae>
mov    eax,0x8067a05
push   eax
push   0x806b020
call   80576b0 <debug>
add    esp,0xc
mov    esi,DWORD PTR ds:0x8075e84
push   esi
push   ebx
mov    ecx,DWORD PTR ds:0x8075e84
push   ecx
call   80560e0 <atime>
pop    edi
pop    edx
push   eax
push   0x806b404
call   80576b0 <debug>
mov    edx,DWORD PTR ds:0x8075460
add    esp,0xc
test   edx,edx
sete   al
and    eax,0xff
dec    eax
and    eax,0xffffffe3
add    eax,0x1e
test   edx,edx
push   eax
mov    eax,0x8067a05
jne    805690e <debug_core+0x1fe>
mov    eax,0x8067a0a
push   eax
push   0x806b032
call   80576b0 <debug>
pop    ebx
pop    esi
mov    ecx,DWORD PTR ds:0x8075e20
push   ecx
push   0x806b04d
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,ds:0x8075e34
push   eax
push   0x806b05e
call   80576b0 <debug>
pop    esi
pop    edi
mov    ebx,DWORD PTR ds:0x8075d28
push   ebx
push   0x806b070
call   80576b0 <debug>
xor    eax,eax
add    esp,0x10
cmp    eax,DWORD PTR ds:0x8075e34
mov    ebx,DWORD PTR ds:0x8075d28
mov    DWORD PTR [ebp-0x10],0x0
jl     8057194 <debug_core+0xa84>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8076f0c
push   ecx
push   0x806b084
call   80576b0 <debug>
mov    edi,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   edi,edi
je     8056f3a <debug_core+0x82a>
sub    esp,0x8
push   edi
push   0x806b095
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [edi]
push   eax
push   0x806b1dc
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0x4]
push   eax
mov    esi,DWORD PTR [edi+0x4]
push   esi
push   0x8070fe0
call   8056020 <strdef>
pop    ecx
pop    ebx
push   eax
push   0x806b0a5
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [edi+0x8]
push   eax
push   0x806b0bb
call   80576b0 <debug>
pop    eax
mov    esi,DWORD PTR [edi+0xc]
push   esi
call   8048e98 <__inet_ntoa@plt>
pop    ecx
pop    ebx
push   eax
push   0x806b0c9
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [edi+0x10]
push   eax
push   0x806b0d6
call   80576b0 <debug>
mov    esi,DWORD PTR [edi+0x10]
push   esi
push   0x114
mov    ebx,DWORD PTR ds:0x8075e34
push   ebx
mov    ecx,DWORD PTR ds:0x8075d28
push   ecx
call   8059220 <findstruct>
add    esp,0x20
test   eax,eax
mov    ebx,eax
je     8056a4d <debug_core+0x33d>
sub    esp,0x8
push   eax
push   0x806b0e6
call   80576b0 <debug>
pop    eax
pop    edx
push   0x806b0fa
push   ebx
call   8056110 <debug_server>
add    esp,0x10
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x14]
push   eax
push   0x806b0ff
call   80576b0 <debug>
mov    eax,DWORD PTR [edi+0x14]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    eax,ds:0x8075d28
push   eax
call   8059220 <findstruct>
add    esp,0x20
test   eax,eax
mov    ebx,eax
je     8056a9f <debug_core+0x38f>
sub    esp,0x8
push   eax
push   0x806b0e6
call   80576b0 <debug>
pop    esi
pop    eax
push   0x806b0fa
push   ebx
call   8056110 <debug_server>
add    esp,0x10
sub    esp,0x8
lea    eax,[edi+0x220]
push   eax
push   0x806b1f0
call   80576b0 <debug>
pop    ecx
pop    ebx
lea    eax,[edi+0x22d]
push   eax
push   0x806b113
call   80576b0 <debug>
pop    eax
pop    edx
lea    eax,[edi+0x23a]
push   eax
push   0x806b127
call   80576b0 <debug>
pop    esi
pop    eax
lea    eax,[edi+0x246]
push   eax
push   0x806b138
call   80576b0 <debug>
pop    ecx
pop    ebx
movsx  eax,BYTE PTR [edi+0x380]
push   eax
push   0x806b14b
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [edi+0x71c]
push   eax
push   0x806b15e
call   80576b0 <debug>
pop    ebx
pop    esi
mov    ecx,DWORD PTR [edi+0x720]
push   ecx
push   0x806b173
call   80576b0 <debug>
xor    eax,eax
add    esp,0x10
cmp    eax,DWORD PTR [edi+0x71c]
mov    ebx,DWORD PTR [edi+0x720]
mov    DWORD PTR [ebp-0x10],0x0
jl     8056f4e <debug_core+0x83e>
sub    esp,0x8
mov    ecx,DWORD PTR [edi+0xb34]
push   ecx
push   0x806b18a
call   80576b0 <debug>
mov    esi,DWORD PTR [edi+0xb34]
add    esp,0x10
test   esi,esi
je     8056c30 <debug_core+0x520>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   esi
push   0x806b19e
call   80576b0 <debug>
pop    eax
pop    edx
mov    ebx,DWORD PTR [esi+0x4]
push   ebx
push   0x806b1b3
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806b1c5
call   80576b0 <debug>
mov    ebx,DWORD PTR [esi+0x1c]
add    esp,0x10
test   ebx,ebx
je     8056c16 <debug_core+0x506>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR [ebx]
push   ecx
push   0x806b1d8
call   80576b0 <debug>
pop    eax
mov    eax,DWORD PTR [ebx+0x3c]
test   eax,eax
pop    edx
jne    8056bce <debug_core+0x4be>
mov    eax,0x8071283
push   eax
push   0x806b1ec
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x40]
add    esp,0xc
test   eax,eax
jne    8056be8 <debug_core+0x4d8>
mov    eax,0x8071283
cmp    ebx,0xffffffbc
push   eax
mov    eax,0x8071283
je     8056bf6 <debug_core+0x4e6>
lea    eax,[ebx+0x44]
push   eax
push   0x806b200
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806b21b
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8056bb0 <debug_core+0x4a0>
sub    esp,0xc
push   0x806b21d
call   80576b0 <debug>
mov    esi,DWORD PTR [esi]
add    esp,0x10
test   esi,esi
jne    8056b70 <debug_core+0x460>
sub    esp,0x8
mov    eax,DWORD PTR [edi+0xb38]
push   eax
push   0x806b228
call   80576b0 <debug>
pop    ebx
pop    esi
mov    ecx,DWORD PTR [edi+0xb3c]
push   ecx
push   0x806b23f
call   80576b0 <debug>
mov    ebx,DWORD PTR [edi+0xb3c]
add    esp,0x10
test   ebx,ebx
je     8056c93 <debug_core+0x583>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   ebx
push   0x806b255
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806b21d
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8056c70 <debug_core+0x560>
mov    eax,DWORD PTR [edi+0xb40]
sub    esp,0x8
test   eax,eax
jne    8056ca5 <debug_core+0x595>
mov    eax,0x8071283
push   eax
push   0x806b269
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [edi+0xb44]
push   eax
push   0x806b27d
call   80576b0 <debug>
mov    ebx,DWORD PTR [edi+0xb44]
add    esp,0x10
test   ebx,ebx
je     8056dbb <debug_core+0x6ab>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   ebx
push   0x806b291
call   80576b0 <debug>
pop    ecx
pop    esi
mov    edx,DWORD PTR [ebx]
push   edx
push   0x806b1da
call   80576b0 <debug>
add    esp,0xc
cmp    ebx,0xffffffe8
je     8056f42 <debug_core+0x832>
lea    eax,[ebx+0x18]
mov    edx,eax
push   eax
push   edx
push   0x806b2a3
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x4]
add    esp,0xc
test   eax,eax
jne    8056d29 <debug_core+0x619>
mov    eax,0x8071283
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806b2bd
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x8]
add    esp,0xc
test   eax,eax
jne    8056d47 <debug_core+0x637>
mov    eax,0x8071283
push   eax
mov    eax,DWORD PTR [ebx+0x8]
push   eax
push   0x806b2db
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0xc]
add    esp,0xc
test   eax,eax
jne    8056d65 <debug_core+0x655>
mov    eax,0x8071283
push   eax
mov    eax,DWORD PTR [ebx+0xc]
push   eax
push   0x806b2f8
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x10]
add    esp,0xc
push   eax
push   eax
mov    eax,DWORD PTR [ebx+0x10]
push   eax
call   80560e0 <atime>
pop    ecx
pop    esi
push   eax
push   0x806b314
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x14]
push   eax
push   0x806b32a
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806b21d
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8056ce0 <debug_core+0x5d0>
push   eax
mov    eax,DWORD PTR [edi+0xb98]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xb98]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b33e
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xb9c]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xb9c]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b357
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xba0]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xba0]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b36f
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xba4]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xba4]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b389
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xba8]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xba8]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b3a1
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xbac]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xbac]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b3bb
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xbb0]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xbb0]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b3d3
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xbb4]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xbb4]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b3ea
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xbb8]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xbb8]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b402
call   80576b0 <debug>
add    esp,0xc
mov    eax,DWORD PTR [edi+0xbbc]
push   eax
push   esi
mov    ebx,DWORD PTR [edi+0xbbc]
push   ebx
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b418
call   80576b0 <debug>
mov    DWORD PTR [esp],0x806b21f
call   80576b0 <debug>
mov    edi,DWORD PTR [edi]
add    esp,0x10
test   edi,edi
jne    8056994 <debug_core+0x284>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,0x8071283
xor    edx,edx
jmp    8056d0e <debug_core+0x5fe>
sub    esp,0x8
push   ebx
push   0x806b42e
call   80576b0 <debug>
pop    eax
cmp    BYTE PTR [ebx],0x0
pop    edx
je     805718a <debug_core+0xa7a>
mov    eax,0x8067a05
push   eax
push   0x806b440
call   80576b0 <debug>
mov    dl,BYTE PTR [ebx+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
add    esp,0x10
cmp    eax,0x2
mov    ecx,0x806b450
je     8056fa4 <debug_core+0x894>
cmp    eax,0x2
jg     805717d <debug_core+0xa6d>
mov    ecx,0x806b45e
dec    eax
je     8056fa4 <debug_core+0x894>
mov    ecx,0x806b46c
shr    dl,1
mov    eax,edx
push   esi
and    eax,0x7
push   eax
push   ecx
push   0x806b476
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
jne    8056fea <debug_core+0x8da>
sub    esp,0xc
push   0x806b21d
call   80576b0 <debug>
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
add    ebx,0x48
add    esp,0x10
cmp    eax,DWORD PTR [edi+0x71c]
jl     8056f4e <debug_core+0x83e>
jmp    8056b44 <debug_core+0x434>
sub    esp,0x8
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
push   0x806b48b
call   80576b0 <debug>
pop    eax
mov    eax,DWORD PTR [ebx+0x2c]
test   eax,eax
pop    edx
jne    8057009 <debug_core+0x8f9>
mov    eax,0x8071283
push   eax
push   0x806b49c
call   80576b0 <debug>
mov    dl,BYTE PTR [ebx+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
add    esp,0x10
dec    eax
je     8057101 <debug_core+0x9f1>
mov    al,dl
shr    al,1
and    eax,0x7
sub    eax,0x2
cmp    eax,0x1
ja     8057070 <debug_core+0x960>
mov    eax,DWORD PTR [ebx+0x30]
sub    esp,0x8
test   eax,eax
jne    8057046 <debug_core+0x936>
mov    eax,0x8071283
push   eax
push   0x806b4ae
call   80576b0 <debug>
pop    eax
mov    eax,DWORD PTR [ebx+0x34]
test   eax,eax
pop    edx
jne    805705f <debug_core+0x94f>
mov    eax,0x8071283
push   eax
push   0x806b4c2
call   80576b0 <debug>
add    esp,0x10
mov    dl,BYTE PTR [ebx+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
cmp    eax,0x3
je     80570dc <debug_core+0x9cc>
shr    dl,1
mov    eax,edx
and    eax,0x7
cmp    eax,0x2
jne    8056fc0 <debug_core+0x8b0>
mov    eax,DWORD PTR [ebx+0x38]
sub    esp,0x8
test   eax,eax
jne    805709b <debug_core+0x98b>
mov    eax,0x8071283
push   eax
push   0x806b4d6
call   80576b0 <debug>
pop    eax
mov    esi,DWORD PTR [ebx+0x40]
push   esi
call   80560e0 <atime>
pop    edx
pop    ecx
push   eax
push   0x806b4f0
call   80576b0 <debug>
pop    esi
mov    ecx,DWORD PTR [ebx+0x44]
push   ecx
call   80560e0 <atime>
pop    esi
pop    edx
push   eax
push   0x806b500
call   80576b0 <debug>
add    esp,0x10
jmp    8056fc0 <debug_core+0x8b0>
mov    eax,DWORD PTR [ebx+0x38]
sub    esp,0x8
test   eax,eax
jne    80570eb <debug_core+0x9db>
mov    eax,0x8071283
push   eax
push   0x806b512
call   80576b0 <debug>
add    esp,0x10
mov    dl,BYTE PTR [ebx+0x3e]
jmp    805707c <debug_core+0x96c>
sub    esp,0x8
lea    eax,[ebx+0x8]
push   eax
push   0x806b1b3
call   80576b0 <debug>
pop    ecx
pop    esi
lea    eax,[ebx+0x15]
push   eax
push   0x806b52b
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x38]
push   eax
push   0x806b53d
call   80576b0 <debug>
mov    esi,DWORD PTR [ebx+0x38]
add    esp,0x10
test   esi,esi
je     8057165 <debug_core+0xa55>
sub    esp,0x8
mov    eax,DWORD PTR [esi]
push   eax
push   0x806b1d8
call   80576b0 <debug>
pop    ecx
pop    eax
lea    eax,[esi+0x4]
push   eax
push   0x806b554
call   80576b0 <debug>
mov    esi,DWORD PTR [esi]
add    esp,0x10
test   esi,esi
jne    805713c <debug_core+0xa2c>
sub    esp,0xc
push   0x806b21b
call   80576b0 <debug>
add    esp,0x10
mov    dl,BYTE PTR [ebx+0x3e]
jmp    8057028 <debug_core+0x918>
mov    ecx,0x806b568
cmp    eax,0x3
jmp    8056f9d <debug_core+0x88d>
mov    eax,0x8067a0a
jmp    8056f6c <debug_core+0x85c>
sub    esp,0x8
push   0x806b0fc
push   ebx
call   8056110 <debug_server>
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
add    ebx,0x114
add    esp,0x10
cmp    eax,DWORD PTR ds:0x8075e34
jl     8057194 <debug_core+0xa84>
jmp    805696f <debug_core+0x25f>
mov    eax,0x8067a0a
jmp    80568b6 <debug_core+0x1a6>
mov    eax,0x8067a0a
jmp    8056897 <debug_core+0x187>
mov    eax,0x8067a0a
jmp    8056878 <debug_core+0x168>
mov    eax,0x8067a0a
jmp    8056859 <debug_core+0x149>
mov    eax,0x8067a0a
jmp    805683a <debug_core+0x12a>
mov    eax,0x8067a0a
jmp    805681b <debug_core+0x10b>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
cmp    BYTE PTR ds:0x8075d40,0x0
je     80575c0 <debug_links+0x3c0>
mov    eax,0x8075d40
push   eax
push   0x806b579
call   80576b0 <debug>
pop    eax
cmp    BYTE PTR ds:0x8076ee0,0x0
pop    edx
je     80575b0 <debug_links+0x3b0>
mov    eax,0x8076ee0
push   eax
push   0x806b58c
call   80576b0 <debug>
pop    ebx
pop    esi
mov    ecx,DWORD PTR ds:0x8075d2c
push   ecx
push   0x806b59d
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,ds:0x8075e2c
push   eax
push   0x806b5ad
call   80576b0 <debug>
add    esp,0xc
mov    eax,ds:0x8075d84
push   eax
push   eax
mov    esi,DWORD PTR ds:0x8075d84
push   esi
call   80560e0 <atime>
pop    ecx
pop    ebx
push   eax
push   0x806b5bd
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,ds:0x80766c0
push   eax
push   0x806b5d8
call   80576b0 <debug>
pop    ebx
pop    esi
mov    ecx,DWORD PTR ds:0x8075d68
push   ecx
push   0x806b5ec
xor    esi,esi
call   80576b0 <debug>
add    esp,0x10
cmp    esi,DWORD PTR ds:0x8076f08
mov    ebx,DWORD PTR ds:0x8075d68
jl     8057410 <debug_links+0x210>
sub    esp,0x8
mov    eax,ds:0x8075464
push   eax
push   0x806b601
xor    esi,esi
call   80576b0 <debug>
add    esp,0x10
cmp    esi,DWORD PTR ds:0x8075d88
mov    ebx,DWORD PTR ds:0x8075464
jl     8057300 <debug_links+0x100>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   ebx
push   esi
push   0x806b617
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
je     80573f0 <debug_links+0x1f0>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806b630
call   80576b0 <debug>
pop    ecx
cmp    BYTE PTR [ebx+0x8],0x0
pop    eax
je     80573e0 <debug_links+0x1e0>
lea    eax,[ebx+0x8]
push   eax
push   0x806b640
call   80576b0 <debug>
pop    eax
cmp    BYTE PTR [ebx+0x28],0x0
pop    edx
je     80573d0 <debug_links+0x1d0>
lea    eax,[ebx+0x28]
push   eax
push   0x806b652
call   80576b0 <debug>
pop    ecx
cmp    BYTE PTR [ebx+0x48],0x0
pop    eax
je     80573c0 <debug_links+0x1c0>
lea    eax,[ebx+0x48]
push   eax
push   0x806b664
call   80576b0 <debug>
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebx+0x98]
push   ecx
push   0x806b676
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x9c]
push   eax
push   0x806b686
inc    esi
call   80576b0 <debug>
add    ebx,0xa0
add    esp,0x10
cmp    esi,DWORD PTR ds:0x8075d88
jl     8057300 <debug_links+0x100>
jmp    80572ee <debug_links+0xee>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x8071283
jmp    8057369 <debug_links+0x169>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x8071283
jmp    8057353 <debug_links+0x153>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    8057339 <debug_links+0x139>
lea    esi,[esi+0x0]
sub    esp,0xc
push   0x806b696
call   80576b0 <debug>
add    esp,0x10
jmp    8057319 <debug_links+0x119>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   ebx
push   0x806b69f
call   80576b0 <debug>
pop    eax
cmp    BYTE PTR [ebx],0x0
pop    edx
je     80575a0 <debug_links+0x3a0>
mov    eax,0x8067a05
push   eax
push   0x806b442
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR [ebx],0x0
jne    8057470 <debug_links+0x270>
sub    esp,0xc
push   0x806b21f
inc    esi
call   80576b0 <debug>
add    ebx,0x258
add    esp,0x10
cmp    esi,DWORD PTR ds:0x8076f08
jl     8057410 <debug_links+0x210>
jmp    80572c8 <debug_links+0xc8>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x244]
push   eax
push   0x806b0bb
call   80576b0 <debug>
pop    ecx
cmp    BYTE PTR [ebx+0xc],0x0
pop    eax
je     8057590 <debug_links+0x390>
lea    eax,[ebx+0xc]
push   eax
push   0x806b1f0
call   80576b0 <debug>
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
push   0x806b48d
call   80576b0 <debug>
add    esp,0xc
movsx  eax,BYTE PTR [ebx+0x8]
push   eax
movsx  eax,BYTE PTR [ebx+0x8]
push   eax
push   0x8070f60
call   8056020 <strdef>
pop    ecx
pop    edx
push   eax
push   0x806b6af
call   80576b0 <debug>
add    esp,0xc
movsx  eax,BYTE PTR [ebx+0x9]
push   eax
movsx  eax,BYTE PTR [ebx+0x9]
push   eax
push   0x8070f60
call   8056020 <strdef>
pop    ecx
pop    edx
push   eax
push   0x806b6c6
call   80576b0 <debug>
mov    edx,DWORD PTR [ebx+0x250]
push   edx
push   0x258
mov    eax,ds:0x8076f08
push   eax
mov    eax,ds:0x8075d68
push   eax
call   8059220 <findstruct>
add    esp,0x1c
test   eax,eax
mov    edx,0x8071283
je     8057522 <debug_links+0x322>
lea    edx,[eax+0xc]
push   edx
mov    eax,DWORD PTR [ebx+0x250]
push   eax
push   0x806b6dd
call   80576b0 <debug>
mov    eax,DWORD PTR [ebx+0x254]
push   eax
push   0x258
mov    eax,ds:0x8076f08
push   eax
mov    eax,ds:0x8075d68
push   eax
call   8059220 <findstruct>
add    esp,0x1c
test   eax,eax
mov    edx,0x8071283
je     8057560 <debug_links+0x360>
lea    edx,[eax+0xc]
push   edx
mov    ecx,DWORD PTR [ebx+0x254]
push   ecx
push   0x806b6f3
call   80576b0 <debug>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebx+0x23c]
push   eax
push   0x806b70b
call   80576b0 <debug>
add    esp,0x10
jmp    8057441 <debug_links+0x241>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    8057493 <debug_links+0x293>
lea    esi,[esi+0x0]
mov    eax,0x8067a0a
jmp    805742e <debug_links+0x22e>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    8057239 <debug_links+0x39>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    805721a <debug_links+0x1a>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x418
push   0x806b71e
call   80576b0 <debug>
add    esp,0xc
mov    eax,ds:0x8075d20
push   eax
push   0x806b732
lea    ebx,[ebp-0x418]
push   ebx
mov    edi,DWORD PTR ds:0x8075e80
mov    esi,DWORD PTR ds:0x8075d7c
call   8048f18 <sprintf@plt>
add    esp,0xc
push   0x1b6
push   0x601
push   ebx
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     8057690 <do_debug+0xc0>
mov    ds:0x8075d7c,eax
mov    DWORD PTR ds:0x8075e80,0x1
call   8056710 <debug_core>
call   8057200 <debug_links>
call   8056310 <debug_memory>
sub    esp,0xc
push   ebx
call   8048fc8 <close@plt>
mov    DWORD PTR [esp],0x806b73c
mov    DWORD PTR ds:0x8075d7c,esi
mov    DWORD PTR ds:0x8075e80,edi
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebp+0x8]
add    esp,0x10
test   ebx,ebx
je     8057685 <do_debug+0xb5>
sub    esp,0x8
push   0x806b760
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebp+0x8]
test   esi,esi
je     8057685 <do_debug+0xb5>
sub    esp,0x8
push   0x806b7a0
jmp    8057679 <do_debug+0xa9>
jmp    80576b0 <debug>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e80
test   eax,eax
je     8057702 <debug+0x52>
cmp    DWORD PTR ds:0x8075d7c,0xffffffff
je     8057720 <debug+0x70>
push   edx
lea    eax,[ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x80766e0
call   8048c98 <vsprintf@plt>
mov    DWORD PTR [esp],0x80766e0
call   8048f78 <strlen@plt>
add    esp,0xc
push   eax
push   0x80766e0
mov    eax,ds:0x8075d7c
push   eax
call   8048d98 <write@plt>
add    esp,0x10
test   eax,eax
js     8057710 <debug+0x60>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR ds:0x8075e80,0x0
jmp    8057702 <debug+0x52>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR ds:0x8075480,0x0
jne    8057735 <debug+0x85>
mov    DWORD PTR ds:0x8075d7c,0x0
jmp    80576c8 <debug+0x18>
push   ecx
push   0x180
push   0x601
push   0x8075480
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ds:0x8075d7c,eax
jns    80576c8 <debug+0x18>
jmp    8057710 <debug+0x60>
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
push   esi
test   edx,edx
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
je     80577d2 <formatgreet+0x72>
test   esi,esi
je     80577d2 <formatgreet+0x72>
mov    al,BYTE PTR [edx]
test   al,al
mov    ebx,0x8072b80
je     805778e <formatgreet+0x2e>
mov    esi,esi
cmp    al,0x25
je     80577a0 <formatgreet+0x40>
mov    BYTE PTR [ebx],al
inc    edx
inc    ebx
mov    al,BYTE PTR [edx]
test   al,al
jne    8057780 <formatgreet+0x20>
mov    BYTE PTR [ebx],0x0
mov    eax,0x8072b80
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
inc    edx
movsx  eax,BYTE PTR [edx]
cmp    eax,0x25
je     80577cd <formatgreet+0x6d>
cmp    eax,0x6e
je     80577b6 <formatgreet+0x56>
mov    BYTE PTR [ebx],0x25
mov    al,BYTE PTR [edx]
inc    ebx
jmp    8057784 <formatgreet+0x24>
mov    al,BYTE PTR [esi]
test   al,al
mov    ecx,esi
je     80577ca <formatgreet+0x6a>
mov    esi,esi
mov    BYTE PTR [ebx],al
inc    ecx
mov    al,BYTE PTR [ecx]
inc    ebx
test   al,al
jne    80577c0 <formatgreet+0x60>
inc    edx
jmp    8057788 <formatgreet+0x28>
mov    BYTE PTR [ebx],0x25
jmp    8057788 <formatgreet+0x28>
xor    eax,eax
jmp    8057796 <formatgreet+0x36>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb2c]
test   ebx,ebx
je     8057817 <update_auths+0x37>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0xc]
cmp    eax,0x258
mov    esi,DWORD PTR [ebx]
jg     8057820 <update_auths+0x40>
test   esi,esi
mov    ebx,esi
jne    8057800 <update_auths+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   804aac0 <is_present>
add    esp,0x10
test   eax,eax
je     8057845 <update_auths+0x65>
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0xc],eax
jmp    8057811 <update_auths+0x31>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   ebx
add    eax,0xb2c
push   eax
call   8063890 <remove_time>
add    esp,0x10
jmp    8057811 <update_auths+0x31>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edi,DWORD PTR [ebp+0x8]
xor    esi,esi
mov    ebx,DWORD PTR ds:0x8076fa4
xor    edx,edx
mov    eax,ebx
nop
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [eax+0x4],0x0
lea    ecx,[eax+0x4]
je     80578fb <MyMalloc+0x9b>
inc    edx
add    eax,0x14
cmp    edx,0xc7
jle    8057880 <MyMalloc+0x20>
test   esi,esi
jne    80578a5 <MyMalloc+0x45>
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     80578e2 <MyMalloc+0x82>
mov    ebx,eax
test   esi,esi
je     8057874 <MyMalloc+0x14>
sub    esp,0x8
push   0x1
push   edi
call   8048d88 <calloc@plt>
add    esp,0x10
test   eax,eax
mov    edx,eax
mov    DWORD PTR [esi],eax
je     80578ff <MyMalloc+0x9f>
mov    eax,ds:0x8075d20
mov    DWORD PTR [esi+0xc],eax
mov    eax,ds:0x8075d6c
mov    DWORD PTR [esi+0x4],eax
mov    DWORD PTR [esi+0x8],edi
mov    DWORD PTR ds:0x8075d6c,0x0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
sub    esp,0x8
push   0x1
push   0xfa4
call   8048d88 <calloc@plt>
lea    esi,[eax+0x4]
add    esp,0x10
mov    DWORD PTR [ebx],eax
jmp    80578a1 <MyMalloc+0x41>
mov    esi,ecx
jmp    8057895 <MyMalloc+0x35>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
mov    DWORD PTR [esp],0x1
call   8048f48 <exit@plt>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0x8]
test   ecx,ecx
je     805799d <MyFree+0x7d>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
je     805799d <MyFree+0x7d>
xor    edi,edi
mov    esi,DWORD PTR ds:0x8076fa4
xor    edx,edx
mov    eax,esi
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [eax+0x4],ebx
lea    ecx,[eax+0x4]
je     80579a5 <MyFree+0x85>
inc    edx
add    eax,0x14
cmp    edx,0xc7
jle    8057950 <MyFree+0x30>
test   edi,edi
jne    8057972 <MyFree+0x52>
mov    eax,DWORD PTR [esi]
test   eax,eax
je     80579a9 <MyFree+0x89>
mov    esi,eax
jmp    8057941 <MyFree+0x21>
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax]
sub    esp,0xc
mov    DWORD PTR [edi],0x0
mov    DWORD PTR [edi+0x8],0x0
mov    DWORD PTR [edi+0xc],0x0
push   eax
call   8048ff8 <free@plt>
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    edi,ecx
jmp    8057964 <MyFree+0x44>
mov    eax,DWORD PTR [ebp+0x8]
sub    esp,0x8
mov    edx,DWORD PTR [eax]
push   edx
push   0x806b8e0
call   80576b0 <debug>
mov    DWORD PTR [esp],0x1
call   8048f48 <exit@plt>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     8057a10 <mstrcpy+0x40>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
inc    eax
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    DWORD PTR [esi],eax
pop    edx
pop    ecx
push   ebx
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
mov    eax,DWORD PTR [esi]
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esi],0x0
jmp    80579ff <mstrcpy+0x2f>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    eax,DWORD PTR [ebp+0xc]
je     8057a50 <terminate+0x30>
test   eax,eax
je     8057a50 <terminate+0x30>
sub    esp,0x8
push   eax
push   ebx
call   8048fd8 <strpbrk@plt>
add    esp,0x10
test   eax,eax
je     8057a47 <terminate+0x27>
mov    BYTE PTR [eax],0x0
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    eax,0x8067180
jmp    8057a49 <terminate+0x29>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0x8]
test   esi,esi
mov    edi,DWORD PTR [ebp+0xc]
je     8057a7e <get_token+0x1e>
mov    ebx,DWORD PTR [esi]
test   ebx,ebx
je     8057a7e <get_token+0x1e>
cmp    BYTE PTR [ebx],0x0
jne    8057a90 <get_token+0x30>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ebx]
test   al,al
je     8057ab5 <get_token+0x55>
sub    esp,0x8
movsx  eax,al
push   eax
push   edi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8057ab3 <get_token+0x53>
mov    eax,DWORD PTR [esi]
inc    eax
mov    DWORD PTR [esi],eax
mov    ebx,eax
jmp    8057a90 <get_token+0x30>
mov    ebx,DWORD PTR [esi]
cmp    BYTE PTR [ebx],0x0
je     8057a7e <get_token+0x1e>
sub    esp,0x8
push   edi
push   ebx
call   8048fd8 <strpbrk@plt>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [esi],eax
je     8057af2 <get_token+0x92>
mov    BYTE PTR [eax],0x0
inc    DWORD PTR [esi]
mov    eax,DWORD PTR [esi]
mov    al,BYTE PTR [eax]
test   al,al
je     8057aee <get_token+0x8e>
sub    esp,0x8
movsx  eax,al
push   eax
push   edi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    8057ad0 <get_token+0x70>
mov    eax,ebx
jmp    8057a80 <get_token+0x20>
mov    DWORD PTR [esi],0x8067180
jmp    8057aee <get_token+0x8e>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     8057b18 <chop+0x18>
mov    edx,DWORD PTR [ebx]
test   edx,edx
je     8057b18 <chop+0x18>
mov    al,BYTE PTR [edx]
test   al,al
jne    8057b20 <chop+0x20>
xor    eax,eax
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
cmp    al,0x20
je     8057b90 <chop+0x90>
mov    cl,BYTE PTR [edx]
xor    eax,eax
test   cl,cl
mov    esi,edx
je     8057b1a <chop+0x1a>
cmp    cl,0x20
je     8057b60 <chop+0x60>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    eax,[edx+0x1]
mov    DWORD PTR [ebx],eax
mov    cl,BYTE PTR [edx+0x1]
test   cl,cl
mov    edx,eax
je     8057b60 <chop+0x60>
cmp    cl,0x20
je     8057b60 <chop+0x60>
mov    edx,eax
jmp    8057b40 <chop+0x40>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [edx],0x0
je     8057b75 <chop+0x75>
mov    BYTE PTR [edx],0x0
mov    edx,DWORD PTR [ebx]
lea    eax,[edx+0x1]
mov    DWORD PTR [ebx],eax
cmp    BYTE PTR [edx+0x1],0x20
je     8057b80 <chop+0x80>
mov    eax,esi
jmp    8057b1a <chop+0x1a>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebx]
lea    eax,[edx+0x1]
mov    DWORD PTR [ebx],eax
cmp    BYTE PTR [edx+0x1],0x20
je     8057b80 <chop+0x80>
jmp    8057b75 <chop+0x75>
nop
lea    eax,[edx+0x1]
mov    DWORD PTR [ebx],eax
cmp    BYTE PTR [edx+0x1],0x20
jne    8057b9f <chop+0x9f>
mov    edx,eax
jmp    8057b90 <chop+0x90>
mov    edx,eax
jmp    8057b24 <chop+0x24>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
xor    eax,eax
cmp    esi,ebx
je     8057c19 <Strcasecmp+0x69>
test   esi,esi
je     8057c20 <Strcasecmp+0x70>
test   ebx,ebx
je     8057c20 <Strcasecmp+0x70>
xor    eax,eax
mov    al,BYTE PTR [esi]
mov    cl,BYTE PTR [eax+0x8071340]
xor    eax,eax
mov    al,BYTE PTR [ebx]
mov    al,BYTE PTR [eax+0x8071340]
xor    edx,edx
and    eax,0xff
mov    dl,cl
sub    edx,eax
mov    eax,edx
jne    8057c19 <Strcasecmp+0x69>
lea    esi,[esi+eiz*1+0x0]
test   cl,cl
je     8057c19 <Strcasecmp+0x69>
inc    esi
inc    ebx
xor    eax,eax
mov    al,BYTE PTR [esi]
mov    cl,BYTE PTR [eax+0x8071340]
xor    eax,eax
mov    al,BYTE PTR [ebx]
mov    al,BYTE PTR [eax+0x8071340]
xor    edx,edx
and    eax,0xff
mov    dl,cl
sub    edx,eax
mov    eax,edx
je     8057bf0 <Strcasecmp+0x40>
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
mov    eax,0x1
jmp    8057c19 <Strcasecmp+0x69>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [edx]
inc    edx
test   al,al
jne    8057c40 <Strcat+0x10>
dec    edx
nop
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ecx]
mov    BYTE PTR [edx],al
inc    ecx
inc    edx
test   al,al
jne    8057c50 <Strcat+0x20>
lea    eax,[edx-0x1]
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
push   ebx
mov    cl,BYTE PTR [edx]
cmp    cl,0x24
mov    ebx,0x8072d80
je     8057ca0 <getnick+0x40>
test   cl,cl
je     8057c90 <getnick+0x30>
cmp    cl,0x21
je     8057c90 <getnick+0x30>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [ebx],cl
inc    edx
mov    al,BYTE PTR [edx]
inc    ebx
test   al,al
mov    cl,al
je     8057c90 <getnick+0x30>
cmp    al,0x21
jne    8057c80 <getnick+0x20>
mov    BYTE PTR [ebx],0x0
pop    ebx
mov    eax,0x8072d80
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
inc    edx
cmp    BYTE PTR [edx],0x40
jne    8057ca0 <getnick+0x40>
inc    edx
mov    cl,BYTE PTR [edx]
jmp    8057c73 <getnick+0x13>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ecx]
test   al,al
mov    edx,ecx
je     8057ccf <gethost+0x1f>
mov    esi,esi
cmp    al,0x40
je     8057d00 <gethost+0x50>
lea    eax,[edx+0x1]
mov    edx,eax
mov    al,BYTE PTR [eax]
test   al,al
jne    8057cc0 <gethost+0x10>
mov    al,BYTE PTR [ecx]
test   al,al
mov    edx,0x8072de0
je     8057cea <gethost+0x3a>
lea    esi,[esi+0x0]
mov    BYTE PTR [edx],al
inc    ecx
mov    al,BYTE PTR [ecx]
inc    edx
test   al,al
jne    8057ce0 <gethost+0x30>
mov    BYTE PTR [edx],0x0
mov    eax,0x8072de0
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
lea    ecx,[edx+0x1]
mov    eax,ecx
jmp    8057cc7 <gethost+0x17>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ecx]
test   al,al
mov    edx,ecx
je     8057d2c <getuh+0x1c>
inc    edx
nop
cmp    al,0x21
je     8057d54 <getuh+0x44>
inc    edx
mov    al,BYTE PTR [edx-0x1]
test   al,al
jne    8057d20 <getuh+0x10>
mov    al,BYTE PTR [ecx]
test   al,al
mov    edx,0x8072e40
je     8057d4a <getuh+0x3a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [edx],al
inc    ecx
mov    al,BYTE PTR [ecx]
inc    edx
test   al,al
jne    8057d40 <getuh+0x30>
mov    BYTE PTR [edx],0x0
mov    eax,0x8072e40
pop    ebp
ret    
mov    ecx,edx
jmp    8057d2c <getuh+0x1c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
jne    8057d80 <time2str+0x20>
xor    eax,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0x8]
push   eax
call   8048ea8 <localtime@plt>
mov    edx,DWORD PTR [eax+0x14]
add    edx,0x76c
push   edx
mov    ecx,DWORD PTR [eax+0xc]
push   ecx
mov    edx,DWORD PTR [eax+0x10]
mov    edx,DWORD PTR [edx*4+0x8071040]
push   edx
mov    ecx,DWORD PTR [eax]
push   ecx
mov    edx,DWORD PTR [eax+0x4]
push   edx
mov    eax,DWORD PTR [eax+0x8]
push   eax
push   0x806b920
push   0x8073de0
call   8048f18 <sprintf@plt>
add    esp,0x30
test   eax,eax
sete   al
and    eax,0xff
dec    eax
and    eax,0x8073de0
jmp    8057d6f <time2str+0xf>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
test   edx,edx
jne    8057e00 <time2away+0x20>
xor    eax,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0x8]
push   eax
call   8048ea8 <localtime@plt>
mov    edx,eax
mov    eax,DWORD PTR [eax+0x8]
add    esp,0x10
cmp    eax,0xb
jg     8057e80 <time2away+0xa0>
test   eax,eax
jne    8057e24 <time2away+0x44>
mov    DWORD PTR [edx+0x8],0xc
mov    cl,0x61
mov    eax,DWORD PTR [edx+0xc]
push   eax
mov    eax,DWORD PTR [edx+0x10]
mov    eax,DWORD PTR [eax*4+0x8071040]
push   eax
mov    eax,DWORD PTR [edx+0x18]
mov    eax,DWORD PTR [eax*4+0x8071070]
push   eax
movsx  eax,cl
push   eax
mov    eax,DWORD PTR [edx+0x4]
push   eax
mov    eax,DWORD PTR [edx+0x8]
push   eax
push   0x806b817
push   0x8073de0
call   8048f18 <sprintf@plt>
add    esp,0x20
test   eax,eax
sete   al
and    eax,0xff
dec    eax
and    eax,0x8073de0
jmp    8057def <time2away+0xf>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    eax,0xc
je     8057e8b <time2away+0xab>
sub    eax,0xc
mov    DWORD PTR [edx+0x8],eax
mov    cl,0x70
jmp    8057e26 <time2away+0x46>
nop
push   ebp
mov    ebp,esp
lea    eax,[ebp+0x8]
sub    esp,0x14
push   eax
call   8048ea8 <localtime@plt>
mov    ecx,DWORD PTR [ebp+0x8]
add    esp,0x10
test   ecx,ecx
jne    8057ec0 <time2medium+0x30>
xor    edx,edx
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
jmp    8057ec0 <time2medium+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    edx,DWORD PTR [eax+0x4]
push   edx
mov    ecx,DWORD PTR [eax+0x8]
push   ecx
push   0x806b848
push   0x8073de0
call   8048f18 <sprintf@plt>
add    esp,0x10
test   eax,eax
mov    edx,0x8073de0
jne    8057eab <time2medium+0x1b>
jmp    8057ea9 <time2medium+0x19>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
lea    eax,[ebp+0x8]
sub    esp,0x14
push   eax
call   8048ea8 <localtime@plt>
mov    ecx,DWORD PTR [ebp+0x8]
add    esp,0x10
test   ecx,ecx
jne    8057f20 <time2small+0x30>
xor    edx,edx
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
jmp    8057f20 <time2small+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    edx,DWORD PTR [eax+0xc]
push   edx
mov    eax,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [eax*4+0x8071040]
push   eax
push   0x806b82e
push   0x8073de0
call   8048f18 <sprintf@plt>
add    esp,0x10
test   eax,eax
mov    edx,0x8073de0
jne    8057f0b <time2small+0x1b>
jmp    8057f09 <time2small+0x19>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,ecx
mov    edx,0xc22e4507
imul   edx
push   esi
mov    eax,ecx
lea    esi,[ecx+edx*1]
sar    eax,0x1f
sar    esi,0x10
sub    esi,eax
lea    eax,[esi+esi*4]
lea    eax,[esi+eax*4]
lea    eax,[esi+eax*8]
shl    eax,0x2
sub    eax,esi
shl    eax,0x7
sub    ecx,eax
mov    eax,ecx
mov    edx,0x91a2b3c5
imul   edx
push   ebx
mov    eax,ecx
lea    ebx,[ecx+edx*1]
sar    eax,0x1f
sar    ebx,0xb
sub    ebx,eax
lea    eax,[ebx*8+0x0]
sub    eax,ebx
shl    eax,0x5
add    eax,ebx
shl    eax,0x4
sub    ecx,eax
mov    eax,ecx
mov    edx,0x88888889
imul   edx
add    edx,ecx
mov    eax,ecx
sar    eax,0x1f
sar    edx,0x5
sub    edx,eax
lea    eax,[edx+edx*2]
lea    eax,[eax+eax*4]
shl    eax,0x2
sub    ecx,eax
mov    eax,ecx
mov    ecx,DWORD PTR [ebp+0xc]
test   ecx,ecx
jne    8058010 <idle2str+0xc0>
push   ecx
push   eax
push   edx
cmp    esi,0x1
push   ebx
mov    eax,0x8067180
je     8057fe6 <idle2str+0x96>
mov    eax,0x806a12e
push   eax
push   esi
push   0x806b838
push   0x8073fe0
call   8048f18 <sprintf@plt>
add    esp,0x20
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,0x8073fe0
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   edx
push   ebx
push   esi
push   0x806b856
jmp    8057fed <idle2str+0x9d>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x101c
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x1024],ebx
je     8058130 <my_stristr+0x110>
test   edi,edi
je     8058130 <my_stristr+0x110>
lea    eax,[ebp-0x818]
lea    edx,[ebp-0x1018]
mov    DWORD PTR [ebp-0x1020],edx
mov    DWORD PTR [ebp-0x101c],eax
mov    edx,DWORD PTR [ebp-0x1024]
mov    al,BYTE PTR [edx]
test   al,al
je     80580a0 <my_stristr+0x80>
lea    esi,[esi+eiz*1+0x0]
movsx  edx,al
inc    ebx
mov    esi,DWORD PTR [ebp-0x101c]
inc    DWORD PTR [ebp-0x101c]
cmp    edx,0xff
ja     8058150 <my_stristr+0x130>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x834]
mov    BYTE PTR [esi],al
mov    al,BYTE PTR [ebx]
test   al,al
jne    8058070 <my_stristr+0x50>
mov    al,BYTE PTR [edi]
test   al,al
je     80580dc <my_stristr+0xbc>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
movsx  edx,al
inc    edi
mov    ebx,DWORD PTR [ebp-0x1020]
inc    DWORD PTR [ebp-0x1020]
cmp    edx,0xff
ja     8058140 <my_stristr+0x120>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x834]
mov    BYTE PTR [ebx],al
mov    al,BYTE PTR [edi]
test   al,al
jne    80580b0 <my_stristr+0x90>
mov    eax,DWORD PTR [ebp-0x101c]
mov    BYTE PTR [eax],0x0
sub    esp,0x8
mov    edx,DWORD PTR [ebp-0x1020]
lea    eax,[ebp-0x1018]
mov    BYTE PTR [edx],0x0
push   eax
lea    edx,[ebp-0x818]
push   edx
call   8048dd8 <strstr@plt>
add    esp,0x10
test   eax,eax
je     8058130 <my_stristr+0x110>
lea    edx,[ebp-0x818]
sub    eax,edx
add    eax,DWORD PTR [ebp-0x1024]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8058130 <my_stristr+0x110>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor    eax,eax
jmp    8058119 <my_stristr+0xf9>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   edx
call   8048cc8 <___toupper@plt>
add    esp,0x10
jmp    80580d4 <my_stristr+0xb4>
mov    esi,esi
sub    esp,0xc
push   edx
call   8048cc8 <___toupper@plt>
add    esp,0x10
jmp    8058098 <my_stristr+0x78>
jmp    8058170 <find_userhost>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
xor    edx,edx
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     80581a2 <find_userhost+0x32>
sub    esp,0x8
push   ebx
push   0x8073b60
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x21
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
mov    edx,ebx
je     80581b0 <find_userhost+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x40
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8058201 <find_userhost+0x91>
mov    WORD PTR ds:0x8073b60,0x212a
mov    BYTE PTR ds:0x8073b62,0x0
cmp    BYTE PTR [ebx],0x2a
je     80581ec <find_userhost+0x7c>
sub    esp,0x8
push   0x806e306
push   0x8073b60
call   8057c30 <Strcat>
add    esp,0x10
sub    esp,0x8
push   ebx
push   0x8073b60
call   8057c30 <Strcat>
mov    edx,0x8073b60
jmp    80581a2 <find_userhost+0x32>
sub    esp,0xc
push   ebx
call   804c010 <find_nuh>
add    esp,0x10
test   eax,eax
je     8058226 <find_userhost+0xb6>
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x8073b60
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    8048c68 <strcpy@plt>
test   esi,esi
je     8058237 <find_userhost+0xc7>
sub    esp,0x8
push   ebx
push   esi
call   8058240 <no_info>
add    esp,0x10
xor    edx,edx
jmp    80581a2 <find_userhost+0x32>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x806b86d
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x1
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     80582bf <mass_action+0x5f>
sub    esp,0x8
push   0x1b
push   eax
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     80582bf <mass_action+0x5f>
mov    ebx,DWORD PTR [esi+0x1c]
test   ebx,ebx
je     80582bf <mass_action+0x5f>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   804ce40 <get_nuh>
pop    ecx
pop    edx
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80582c7 <mass_action+0x67>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80582a0 <mass_action+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
test   ebx,ebx
je     80582bf <mass_action+0x5f>
sub    esp,0x8
push   0x1
push   edi
call   80589d0 <format_uh>
mov    DWORD PTR [ebp-0x10],eax
pop    eax
pop    edx
push   0x6
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
cmp    eax,0x2
mov    DWORD PTR [ebp-0x14],eax
jg     805835a <mass_action+0xfa>
cmp    DWORD PTR [ebp-0x14],0x1
jle    8058325 <mass_action+0xc5>
mov    eax,DWORD PTR [ebx+0x4]
and    eax,0x500
cmp    eax,0x500
je     8058325 <mass_action+0xc5>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   esi
push   edi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8058ad0 <deop_ban>
or     DWORD PTR [ebx+0x4],0x500
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
jle    80582bf <mass_action+0x5f>
test   BYTE PTR [ebx+0x5],0x2
jne    80582bf <mass_action+0x5f>
push   eax
push   0x806b960
push   esi
push   edi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80613f0 <sendkick>
or     DWORD PTR [ebx+0x4],0x200
add    esp,0x10
jmp    80582bf <mass_action+0x5f>
sub    esp,0x8
push   0x15
push   esi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     80582ee <mass_action+0x8e>
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0xc]
push   esi
push   edi
call   8062fb0 <is_user>
add    esp,0x10
test   eax,eax
jne    80582ee <mass_action+0x8e>
sub    esp,0xc
push   edi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
jne    80582ee <mass_action+0x8e>
mov    edx,DWORD PTR ds:0x8075d20
push   eax
lea    eax,[edx+0x15180]
push   eax
push   edx
push   0x806b889
push   0x806791a
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x2
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8063410 <add_to_shitlist>
add    esp,0x20
jmp    80582ee <mass_action+0x8e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x12
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8058407 <shit_action+0x27>
test   BYTE PTR [ebx+0x38d],0x8
jne    8058420 <shit_action+0x40>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    ebx,DWORD PTR [ebx+0x4]
push   ebx
push   esi
mov    DWORD PTR [ebp-0x10],ebx
call   8062fb0 <is_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
jne    8058409 <shit_action+0x29>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   esi
call   8063320 <find_shit>
add    esp,0x10
xor    edx,edx
test   eax,eax
mov    edi,eax
je     8058409 <shit_action+0x29>
mov    eax,DWORD PTR [eax+0x38]
test   eax,eax
je     8058407 <shit_action+0x27>
cmp    BYTE PTR [eax],0x0
je     8058407 <shit_action+0x27>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x1
jg     80584b4 <shit_action+0xd4>
dec    eax
jne    8058407 <shit_action+0x27>
sub    esp,0xc
push   esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    edi,DWORD PTR [ebp-0x10]
push   edi
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
je     8058407 <shit_action+0x27>
sub    esp,0xc
push   esi
call   8057c60 <getnick>
add    esp,0xc
push   eax
push   0x806a03b
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
call   80613b0 <sendmode>
add    esp,0x10
jmp    8058407 <shit_action+0x27>
sub    esp,0xc
push   edi
call   80636c0 <get_shitreason>
mov    ebx,eax
add    esp,0xc
mov    eax,DWORD PTR [edi+0x38]
push   eax
push   edi
push   esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8058ad0 <deop_ban>
push   ebx
push   0x806a12d
push   eax
push   esi
call   8057c60 <getnick>
pop    esi
pop    edi
push   eax
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
call   80613f0 <sendkick>
mov    edx,0x1
jmp    8058409 <shit_action+0x29>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x224
push   0x14
mov    edi,DWORD PTR [ebp+0xc]
push   edi
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     8058527 <prot_action+0x27>
test   BYTE PTR [edi+0x38d],0x8
jne    8058530 <prot_action+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8057c60 <getnick>
mov    esi,DWORD PTR [edi+0x1c]
add    esp,0x10
test   esi,esi
mov    ebx,eax
je     8058527 <prot_action+0x27>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [esi+0x3c]
push   eax
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805856c <prot_action+0x6c>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8058550 <prot_action+0x50>
jmp    8058527 <prot_action+0x27>
test   esi,esi
je     8058527 <prot_action+0x27>
sub    esp,0x8
push   0x21
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    8058761 <prot_action+0x261>
mov    ebx,DWORD PTR [edi+0x1c]
test   ebx,ebx
je     80585b1 <prot_action+0xb1>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x3c]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8058741 <prot_action+0x241>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8058590 <prot_action+0x90>
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x4]
push   eax
lea    eax,[ebp-0x218]
push   eax
call   8062b00 <find_user>
pop    ecx
mov    edx,DWORD PTR [edi+0x4]
mov    ebx,eax
pop    eax
push   edx
lea    eax,[ebp-0x218]
push   eax
call   8063080 <get_protuseraccess>
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [ebp-0x21c],eax
je     80585fc <prot_action+0xfc>
mov    ax,WORD PTR [ebx+0x3c]
shr    ax,0x6
and    eax,0x7
cmp    eax,DWORD PTR [ebp-0x21c]
jg     8058720 <prot_action+0x220>
mov    eax,DWORD PTR [ebp-0x21c]
test   eax,eax
je     8058527 <prot_action+0x27>
sub    esp,0x8
mov    eax,DWORD PTR [edi+0x4]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
je     8058641 <prot_action+0x141>
test   WORD PTR [eax+0x3c],0x1c0
jne    8058527 <prot_action+0x27>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x4f
jg     8058527 <prot_action+0x27>
sub    esp,0x8
push   0x1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80589d0 <format_uh>
add    esp,0x10
cmp    DWORD PTR [ebp-0x21c],0x3
mov    ebx,eax
jle    805866b <prot_action+0x16b>
mov    eax,DWORD PTR [esi+0x4]
test   eax,0x400
je     80586f6 <prot_action+0x1f6>
cmp    DWORD PTR [ebp-0x21c],0x2
jle    805867e <prot_action+0x17e>
mov    eax,DWORD PTR [esi+0x4]
test   eax,0x200
je     80586c7 <prot_action+0x1c7>
cmp    DWORD PTR [ebp-0x21c],0x2
jne    8058527 <prot_action+0x27>
mov    eax,DWORD PTR [esi+0x4]
test   eax,0x100
jne    8058527 <prot_action+0x27>
or     eax,0x100
mov    DWORD PTR [esi+0x4],eax
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8057c60 <getnick>
add    esp,0xc
push   eax
push   0x806a03b
mov    eax,DWORD PTR [edi+0x4]
push   eax
call   80613b0 <sendmode>
add    esp,0x10
jmp    8058527 <prot_action+0x27>
or     eax,0x200
mov    DWORD PTR [esi+0x4],eax
lea    eax,[ebp-0x218]
push   eax
push   0x806b8a2
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
call   80613f0 <sendkick>
add    esp,0x10
jmp    805867e <prot_action+0x17e>
or     eax,0x400
mov    DWORD PTR [esi+0x4],eax
push   eax
push   ebx
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [edi+0x4]
push   eax
call   8058ad0 <deop_ban>
add    esp,0x10
jmp    805866b <prot_action+0x16b>
mov    esi,esi
sub    esp,0x8
mov    DWORD PTR [ebp-0x21c],eax
lea    eax,[ebx+0x8]
push   eax
lea    eax,[ebp-0x218]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    80585fc <prot_action+0xfc>
sub    esp,0xc
push   ebx
call   804ce40 <get_nuh>
pop    edx
pop    ecx
push   eax
lea    eax,[ebp-0x218]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    80585b1 <prot_action+0xb1>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x10]
push   ebx
jmp    805874d <prot_action+0x24d>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     80587cd <is_localbot+0x5d>
sub    esp,0xc
push   ebx
call   8057c60 <getnick>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
mov    esi,eax
je     80587c2 <is_localbot+0x52>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
lea    eax,[ebx+0x220]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,0x1
je     80587c4 <is_localbot+0x54>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80587a0 <is_localbot+0x30>
xor    edx,edx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
sub    esp,0xc
push   0x806b9a0
call   80576b0 <debug>
mov    BYTE PTR ds:0x0,0x0
add    esp,0x10
jmp    805877c <is_localbot+0xc>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx]
test   eax,eax
mov    ecx,DWORD PTR [ebp+0x8]
je     8058807 <get_channel+0x17>
cmp    BYTE PTR [eax],0x23
je     8058834 <get_channel+0x44>
cmp    BYTE PTR [ecx],0x23
je     8058830 <get_channel+0x40>
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb38]
test   eax,eax
je     8058830 <get_channel+0x40>
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x8073be0
mov    esp,ebp
pop    ebp
jmp    8048c68 <strcpy@plt>
mov    eax,ecx
jmp    805881e <get_channel+0x2e>
sub    esp,0xc
push   edx
call   8057b00 <chop>
add    esp,0x10
jmp    805881e <get_channel+0x2e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx]
test   eax,eax
mov    ecx,DWORD PTR [ebp+0x8]
je     805886c <get_channel2+0x1c>
mov    al,BYTE PTR [eax]
cmp    al,0x2a
je     80588b0 <get_channel2+0x60>
cmp    al,0x23
je     80588b0 <get_channel2+0x60>
cmp    BYTE PTR [ecx],0x23
je     80588a0 <get_channel2+0x50>
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb38]
test   eax,eax
je     80588a0 <get_channel2+0x50>
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],0x8073be0
mov    esp,ebp
pop    ebp
jmp    8048c68 <strcpy@plt>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ecx
jmp    8058883 <get_channel2+0x33>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   edx
call   8057b00 <chop>
add    esp,0x10
jmp    8058883 <get_channel2+0x33>
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x10]
je     80588d4 <nick2uh+0x14>
cmp    BYTE PTR [ebx],0x0
jne    80588e0 <nick2uh+0x20>
xor    edx,edx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
nop
sub    esp,0x8
push   0x21
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8058906 <nick2uh+0x46>
sub    esp,0x8
push   0x40
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
mov    edx,ebx
jne    80588d6 <nick2uh+0x16>
sub    esp,0x8
push   ebx
push   0x8072ea0
call   8048c68 <strcpy@plt>
pop    edx
pop    ecx
push   0x21
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    8058937 <nick2uh+0x77>
sub    esp,0x8
push   0x40
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     805898b <nick2uh+0xcb>
sub    esp,0x8
push   0x40
push   ebx
mov    WORD PTR ds:0x8072ea0,0x212a
mov    BYTE PTR ds:0x8072ea2,0x0
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8058974 <nick2uh+0xb4>
sub    esp,0x8
push   ebx
push   0x8072ea0
call   8057c30 <Strcat>
add    esp,0x10
mov    edx,0x8072ea0
jmp    80588d6 <nick2uh+0x16>
sub    esp,0x8
push   0x806e306
push   0x8072ea0
call   8057c30 <Strcat>
add    esp,0x10
jmp    8058959 <nick2uh+0x99>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058170 <find_userhost>
add    esp,0x10
test   eax,eax
je     80588d4 <nick2uh+0x14>
cmp    BYTE PTR [eax],0x0
je     80588d4 <nick2uh+0x14>
test   esi,esi
jne    80589c0 <nick2uh+0x100>
sub    esp,0x8
push   eax
push   0x8072ea0
call   8048c68 <strcpy@plt>
jmp    8058967 <nick2uh+0xa7>
sub    esp,0x8
push   esi
push   eax
call   80589d0 <format_uh>
add    esp,0x10
jmp    80589b0 <nick2uh+0xf0>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x41c
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[ebp-0x408]
push   eax
mov    DWORD PTR [ebp-0x40c],eax
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x2a
mov    ebx,DWORD PTR [ebp-0x40c]
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8058a30 <format_uh+0x60>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp-0x40c]
push   ecx
push   0x80736a0
call   8048c68 <strcpy@plt>
mov    eax,0x80736a0
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x8068523
lea    ebx,[ebp-0x40c]
push   ebx
call   8057a60 <get_token>
pop    eax
pop    edx
push   0x806a108
push   ebx
call   8057a60 <get_token>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
mov    eax,DWORD PTR [ebp-0x40c]
je     8058a65 <format_uh+0x95>
cmp    BYTE PTR [ebx],0x7e
je     8058ac0 <format_uh+0xf0>
cmp    DWORD PTR [ebp+0xc],0x1
ja     8058aa0 <format_uh+0xd0>
sub    esp,0xc
push   eax
call   8058bf0 <cluster>
add    esp,0x10
push   eax
push   eax
push   0x9
push   ebx
call   8058ec0 <right>
add    esp,0xc
push   eax
push   0x806b8b4
push   0x80736a0
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    8058a1b <format_uh+0x4b>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8058bf0 <cluster>
add    esp,0xc
push   eax
push   0x806b8bd
jmp    8058a8a <format_uh+0xba>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
inc    ebx
jmp    8058a65 <format_uh+0x95>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
mov    esi,DWORD PTR [ebp+0x8]
test   esi,esi
push   ebx
mov    eax,DWORD PTR [ebp+0x10]
mov    ebx,DWORD PTR [ebp+0xc]
je     8058b05 <deop_ban+0x35>
test   ebx,ebx
je     8058b05 <deop_ban+0x35>
test   eax,eax
je     8058b05 <deop_ban+0x35>
sub    esp,0x8
push   0x1
push   eax
call   80589d0 <format_uh>
add    esp,0x10
push   eax
push   ebx
push   0x806b8c4
push   esi
call   80613b0 <sendmode>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edi,DWORD PTR [ebp+0x8]
test   edi,edi
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
je     8058b50 <deop_siteban+0x40>
test   esi,esi
je     8058b50 <deop_siteban+0x40>
test   ebx,ebx
je     8058b50 <deop_siteban+0x40>
sub    esp,0x8
push   0x2a
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8058b60 <deop_siteban+0x50>
push   ebx
push   esi
push   0x806b8c4
push   edi
call   80613b0 <sendmode>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x2
push   ebx
call   80589d0 <format_uh>
add    esp,0x10
push   eax
jmp    8058b41 <deop_siteban+0x31>
jmp    8058b80 <isnick>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
push   ebx
mov    dl,BYTE PTR [ecx]
xor    eax,eax
mov    al,dl
mov    al,BYTE PTR [eax+0x8071440]
and    eax,0x6
xor    ebx,ebx
cmp    al,0x6
je     8058bb0 <isnick+0x30>
mov    eax,ebx
pop    ebx
pop    ebp
ret    
jmp    8058bb0 <isnick+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test   dl,dl
je     8058bda <isnick+0x5a>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
xor    eax,eax
mov    al,dl
mov    al,BYTE PTR [eax+0x8071440]
and    eax,0x2
test   al,al
je     8058be1 <isnick+0x61>
inc    ecx
mov    al,BYTE PTR [ecx]
test   al,al
mov    dl,al
jne    8058bc0 <isnick+0x40>
mov    ebx,0x1
jmp    8058b9c <isnick+0x1c>
xor    ebx,ebx
jmp    8058b9c <isnick+0x1c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10c
mov    esi,DWORD PTR [ebp+0x8]
xor    eax,eax
test   esi,esi
je     8058cc1 <cluster+0xd1>
sub    esp,0x8
push   0x40
push   esi
mov    BYTE PTR ds:0x8073720,0x0
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
lea    ebx,[ebp-0x118]
jne    8058dd7 <cluster+0x1e7>
sub    esp,0x8
push   esi
push   ebx
call   8048c68 <strcpy@plt>
add    esp,0x10
cmp    BYTE PTR [ebp-0x118],0x0
je     8058cc9 <cluster+0xd9>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
movsx  eax,BYTE PTR [eax+ebx*1-0x1]
add    esp,0x10
cmp    eax,0xff
ja     8058dd0 <cluster+0x1e0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     8058cc9 <cluster+0xd9>
mov    esi,ebx
mov    edi,0x1
sub    esp,0x8
push   0x2e
push   esi
call   8048f98 <strchr@plt>
mov    edx,edi
add    esp,0x10
dec    dl
lea    esi,[eax+0x1]
mov    edi,edx
jns    8058c7d <cluster+0x8d>
sub    esp,0x8
mov    BYTE PTR [eax+0x1],0x0
push   ebx
push   0x8073720
call   8057c30 <Strcat>
pop    ecx
pop    ebx
push   0x806a10e
push   0x8073720
call   8057c30 <Strcat>
add    esp,0x10
mov    eax,0x8073720
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x3
push   ebx
call   8058ec0 <right>
mov    esi,eax
pop    eax
pop    edx
push   0x806b8cf
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edi,0x1
jne    8058d7c <cluster+0x18c>
mov    eax,edi
movsx  esi,al
nop
lea    esi,[esi+eiz*1+0x0]
test   ebx,ebx
je     8058d34 <cluster+0x144>
cmp    BYTE PTR [ebx],0x0
je     8058d34 <cluster+0x144>
sub    esp,0x8
push   0x2e
push   ebx
call   8058e20 <numchar>
add    esp,0x10
cmp    eax,esi
jle    8058d34 <cluster+0x144>
sub    esp,0x8
push   0x2e
push   ebx
call   8048f98 <strchr@plt>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
je     8058cc1 <cluster+0xd1>
inc    ebx
jmp    8058d00 <cluster+0x110>
sub    esp,0x8
push   0x806e306
push   0x8073720
call   8057c30 <Strcat>
pop    esi
pop    edi
lea    edx,[ebp-0x118]
push   edx
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8058d65 <cluster+0x175>
sub    esp,0x8
push   ebx
jmp    8058caf <cluster+0xbf>
sub    esp,0x8
push   0x8068345
push   0x8073720
call   8057c30 <Strcat>
add    esp,0x10
jmp    8058d5c <cluster+0x16c>
sub    esp,0x8
push   0x806b8d3
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8058cf3 <cluster+0x103>
sub    esp,0x8
push   0x806b8cf
push   ebx
call   8058020 <my_stristr>
add    esp,0x10
test   eax,eax
je     8058db4 <cluster+0x1c4>
mov    edi,0x2
jmp    8058cf3 <cluster+0x103>
sub    esp,0x8
push   0x806b8d3
push   ebx
call   8058020 <my_stristr>
add    esp,0x10
test   eax,eax
je     8058cf3 <cluster+0x103>
jmp    8058daa <cluster+0x1ba>
nop
xor    eax,eax
jmp    8058c72 <cluster+0x82>
sub    esp,0x8
push   esi
push   0x8073720
call   8048c68 <strcpy@plt>
pop    ecx
pop    edi
push   0x40
push   0x8073720
call   8048f98 <strchr@plt>
mov    BYTE PTR [eax],0x0
pop    eax
pop    edx
push   0x806a108
push   0x8073720
call   8057c30 <Strcat>
pop    edi
pop    eax
push   0x40
push   esi
call   8048f98 <strchr@plt>
mov    esi,eax
inc    esi
add    esp,0x10
jmp    8058c2c <cluster+0x3c>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x10],0x0
mov    al,BYTE PTR [ebx]
test   al,al
mov    dl,BYTE PTR [ebp+0xc]
je     8058e76 <numchar+0x56>
movsx  edi,dl
nop
movsx  edx,al
cmp    edx,0xff
ja     8058eb0 <numchar+0x90>
mov    eax,ds:0x80726f4
mov    esi,DWORD PTR [eax+edx*4+0x434]
cmp    edi,0xff
ja     8058ea0 <numchar+0x80>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edi*4+0x434]
cmp    esi,eax
je     8058e90 <numchar+0x70>
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
jne    8058e40 <numchar+0x20>
mov    eax,DWORD PTR [ebp-0x10]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8058e90 <numchar+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc    DWORD PTR [ebp-0x10]
jmp    8058e6f <numchar+0x4f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8048fe8 <___tolower@plt>
add    esp,0x10
jmp    8058e6b <numchar+0x4b>
mov    esi,esi
sub    esp,0xc
push   edx
call   8048fe8 <___tolower@plt>
mov    esi,eax
add    esp,0x10
jmp    8058e57 <numchar+0x37>
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,esi
mov    edx,ebx
jae    8058ef0 <right+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
lea    edx,[eax+ebx*1]
sub    edx,esi
jmp    8058edd <right+0x1d>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
xor    esi,esi
test   ebx,ebx
je     8058f17 <capslevel+0x17>
cmp    BYTE PTR [ebx],0x0
jne    8058f30 <capslevel+0x30>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8058f30 <capslevel+0x30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
mov    edi,eax
mov    al,BYTE PTR [ebx]
add    esp,0x10
test   al,al
je     8058f92 <capslevel+0x92>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
movsx  edx,al
cmp    edx,0xff
ja     8058fc0 <capslevel+0xc0>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x34]
and    eax,0x100
test   eax,eax
je     8058f8b <capslevel+0x8b>
movsx  edx,BYTE PTR [ebx]
cmp    edx,0xff
ja     8058fb0 <capslevel+0xb0>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x34]
and    eax,0x8000
test   eax,eax
je     8058f8b <capslevel+0x8b>
inc    esi
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
jne    8058f50 <capslevel+0x50>
lea    eax,[esi+esi*4]
lea    eax,[eax+eax*4]
shl    eax,0x2
cdq    
idiv   edi
jmp    8058f19 <capslevel+0x19>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edx
call   8048e28 <___runetype@plt>
add    esp,0x10
jmp    8058f81 <capslevel+0x81>
mov    esi,esi
sub    esp,0xc
push   edx
call   8048e28 <___runetype@plt>
add    esp,0x10
jmp    8058f64 <capslevel+0x64>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
mov    edx,DWORD PTR [ebp+0x8]
test   edx,edx
je     8059004 <cipher+0x34>
mov    al,BYTE PTR [edx]
xor    ebx,ebx
xor    edi,edi
xor    esi,esi
test   al,al
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x1c],edx
jne    8059010 <cipher+0x40>
xor    eax,eax
add    esp,0x18
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
and    eax,0xff
mov    DWORD PTR [ebp-0x20],eax
mov    DWORD PTR [ebp-0x24],0x7
nop
test   DWORD PTR [ebp-0x20],0x1
je     8059036 <cipher+0x66>
or     DWORD PTR [ebp-0x10],0x80008000
or     esi,0x80008000
xor    ebx,DWORD PTR [ebp-0x10]
xor    edi,esi
mov    ecx,DWORD PTR [ebp-0x10]
xor    ecx,ebx
mov    edx,edi
xor    edx,esi
mov    eax,ecx
shl    eax,0x1e
shr    edx,0x2
or     edx,eax
shr    ecx,0x2
xor    ebx,ecx
xor    edi,edx
neg    DWORD PTR [ebp-0x18]
not    DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0x14],ebx
xor    DWORD PTR [ebp-0x18],edi
shr    esi,1
neg    edi
shl    eax,0x1f
not    ebx
shr    DWORD PTR [ebp-0x20],1
xor    ebx,DWORD PTR [ebp-0x14]
xor    edi,DWORD PTR [ebp-0x18]
or     esi,eax
shr    DWORD PTR [ebp-0x10],1
dec    DWORD PTR [ebp-0x24]
jns    8059020 <cipher+0x50>
inc    DWORD PTR [ebp-0x1c]
mov    edx,DWORD PTR [ebp-0x1c]
mov    al,BYTE PTR [edx]
test   al,al
jne    8059010 <cipher+0x40>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     8059139 <cipher+0x169>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
xor    edi,esi
xor    ebx,DWORD PTR [ebp-0x10]
mov    ecx,DWORD PTR [ebp-0x10]
xor    ecx,ebx
mov    edx,edi
xor    edx,esi
mov    eax,ecx
shl    eax,0x1e
shr    edx,0x2
or     edx,eax
shr    ecx,0x2
xor    ebx,ecx
xor    edi,edx
neg    DWORD PTR [ebp-0x18]
not    DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ebp-0x10]
xor    DWORD PTR [ebp-0x14],ebx
xor    DWORD PTR [ebp-0x18],edi
shr    esi,1
neg    edi
shl    eax,0x1f
not    ebx
xor    ebx,DWORD PTR [ebp-0x14]
xor    edi,DWORD PTR [ebp-0x18]
or     esi,eax
shr    DWORD PTR [ebp-0x10],1
jne    80590a0 <cipher+0xd0>
test   esi,esi
jne    80590a0 <cipher+0xd0>
mov    edi,0x8073b20
cld    
mov    ecx,0xa
xor    eax,eax
rep stos DWORD PTR es:[edi],eax
mov    DWORD PTR [ebp-0x24],0x0
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x18]
and    eax,0x3f
mov    edx,DWORD PTR [ebp-0x24]
mov    al,BYTE PTR [eax+0x80710a0]
mov    BYTE PTR [edx+0x8073b20],al
mov    eax,DWORD PTR [ebp-0x14]
shr    DWORD PTR [ebp-0x18],0x6
shl    eax,0x1a
inc    edx
or     DWORD PTR [ebp-0x18],eax
shr    DWORD PTR [ebp-0x14],0x6
cmp    edx,0x9
mov    DWORD PTR [ebp-0x24],edx
jle    8059100 <cipher+0x130>
mov    eax,0x8073b20
jmp    8059006 <cipher+0x36>
test   esi,esi
jne    80590a0 <cipher+0xd0>
jmp    80590e8 <cipher+0x118>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x8]
push   eax
call   8058fd0 <cipher>
mov    DWORD PTR [ebp+0xc],eax
mov    DWORD PTR [ebp+0x8],ebx
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    8048c68 <strcpy@plt>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8058fd0 <cipher>
mov    DWORD PTR [esp],eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
sete   al
mov    esp,ebp
and    eax,0xff
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     80591db <check_for_number+0x2b>
movsx  eax,BYTE PTR [eax]
cmp    eax,0xff
ja     8059210 <check_for_number+0x60>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
jne    8059200 <check_for_number+0x50>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   0x806b9e0
push   eax
call   80614d0 <send_to_user>
mov    eax,0x1
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    eax,eax
jmp    80591f1 <check_for_number+0x41>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
xor    eax,eax
jmp    80591d7 <check_for_number+0x27>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0xc]
xor    edx,edx
push   esi
cmp    edx,ecx
push   ebx
mov    esi,DWORD PTR [ebp+0x14]
mov    ebx,DWORD PTR [ebp+0x10]
mov    eax,DWORD PTR [ebp+0x8]
jge    8059251 <findstruct+0x31>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [eax],0x0
je     805924a <findstruct+0x2a>
cmp    DWORD PTR [eax+0x4],esi
je     8059253 <findstruct+0x33>
inc    edx
add    eax,ebx
cmp    edx,ecx
jl     8059240 <findstruct+0x20>
xor    eax,eax
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx]
test   eax,eax
mov    edi,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
je     8059336 <addstruct+0xd6>
mov    ebx,eax
xor    edx,edx
mov    eax,DWORD PTR [edi]
cmp    edx,eax
jge    80592a0 <addstruct+0x40>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     8059320 <addstruct+0xc0>
inc    edx
add    ebx,esi
cmp    edx,eax
jl     8059290 <addstruct+0x30>
inc    eax
sub    esp,0xc
imul   eax,esi
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8059260
call   8057860 <MyMalloc>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80592eb <addstruct+0x8b>
mov    eax,DWORD PTR [edi]
push   edx
imul   eax,esi
push   eax
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx]
push   eax
push   ebx
call   8048d18 <memcpy@plt>
pop    eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8057920 <MyFree>
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],ebx
inc    DWORD PTR [edi]
add    esp,0x10
mov    eax,ebx
jmp    805927c <addstruct+0x1c>
mov    ebx,DWORD PTR ds:0x8076fa8
test   ebx,ebx
je     8059305 <addstruct+0xa5>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    ecx,DWORD PTR ds:0x8075e7c
test   ecx,ecx
je     8059314 <addstruct+0xb4>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
mov    esi,esi
push   edx
push   esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
call   8048d18 <memcpy@plt>
lea    esp,[ebp-0xc]
mov    eax,ebx
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   esi
mov    DWORD PTR ds:0x8075d6c,0x8059260
call   8057860 <MyMalloc>
add    esp,0xc
push   esi
mov    esi,DWORD PTR [ebp+0xc]
push   esi
push   eax
mov    ebx,eax
call   8048d18 <memcpy@plt>
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],ebx
mov    DWORD PTR [edi],0x1
jmp    805932c <addstruct+0xcc>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
push   esi
test   ecx,ecx
push   ebx
je     8059382 <Atoi+0x12>
mov    al,BYTE PTR [ecx]
test   al,al
jne    8059390 <Atoi+0x20>
xor    eax,eax
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
xor    esi,esi
cmp    al,0x2d
je     80593fc <Atoi+0x8c>
mov    DWORD PTR ds:0x8073b48,0x0
cmp    BYTE PTR [ecx],0x0
je     80593eb <Atoi+0x7b>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8073b48
lea    eax,[edx*8+0x0]
lea    ebx,[eax+edx*2]
mov    DWORD PTR ds:0x8073b48,ebx
mov    dl,BYTE PTR [ecx]
xor    eax,eax
mov    al,dl
mov    al,BYTE PTR [eax+0x8071440]
and    eax,0x1
test   al,al
je     8059382 <Atoi+0x12>
movsx  eax,dl
lea    eax,[eax+ebx*1-0x30]
mov    ds:0x8073b48,eax
inc    ecx
cmp    BYTE PTR [ecx],0x0
jne    80593b0 <Atoi+0x40>
test   esi,esi
je     80593f5 <Atoi+0x85>
neg    DWORD PTR ds:0x8073b48
mov    eax,0x8073b48
jmp    8059384 <Atoi+0x14>
mov    esi,0x1
inc    ecx
jmp    8059396 <Atoi+0x26>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ebx]
test   al,al
mov    ecx,0x8074460
je     8059462 <escape_string+0x52>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
movsx  edx,al
cmp    edx,0xd
je     80594b0 <escape_string+0xa0>
cmp    edx,0xd
jg     80594c0 <escape_string+0xb0>
cmp    edx,0xa
je     80594b0 <escape_string+0xa0>
movsx  edx,al
cmp    edx,0xd
je     80594a0 <escape_string+0x90>
cmp    edx,0xd
jg     8059480 <escape_string+0x70>
cmp    edx,0xa
je     8059470 <escape_string+0x60>
mov    BYTE PTR [ecx],al
inc    ebx
mov    al,BYTE PTR [ebx]
inc    ecx
test   al,al
jne    8059430 <escape_string+0x20>
mov    BYTE PTR [ecx],0x0
pop    ebx
mov    eax,0x8074460
pop    ebp
ret    
lea    esi,[esi+0x0]
mov    BYTE PTR [ecx],0x6e
jmp    805945a <escape_string+0x4a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    edx,0x20
je     8059490 <escape_string+0x80>
cmp    edx,0x5c
jne    8059458 <escape_string+0x48>
mov    BYTE PTR [ecx],0x5c
jmp    805945a <escape_string+0x4a>
nop
mov    BYTE PTR [ecx],0x73
jmp    805945a <escape_string+0x4a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [ecx],0x72
jmp    805945a <escape_string+0x4a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [ecx],0x5c
mov    al,BYTE PTR [ebx]
inc    ecx
jmp    8059446 <escape_string+0x36>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    edx,0x20
je     80594b0 <escape_string+0xa0>
cmp    edx,0x5c
jmp    8059444 <escape_string+0x34>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [esi]
test   al,al
mov    edx,esi
mov    ebx,esi
je     80594fe <unescape_string+0x2e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    al,0x5c
je     8059510 <unescape_string+0x40>
mov    BYTE PTR [ebx],al
inc    edx
mov    al,BYTE PTR [edx]
inc    ebx
test   al,al
jne    80594f0 <unescape_string+0x20>
mov    BYTE PTR [ebx],0x0
pop    ebx
mov    eax,esi
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
inc    edx
mov    al,BYTE PTR [edx]
movsx  ecx,al
cmp    ecx,0x72
je     805953a <unescape_string+0x6a>
cmp    ecx,0x72
jg     8059530 <unescape_string+0x60>
cmp    ecx,0x6e
jne    80594f4 <unescape_string+0x24>
mov    BYTE PTR [ebx],0xa
jmp    80594f6 <unescape_string+0x26>
lea    esi,[esi+0x0]
cmp    ecx,0x73
jne    80594f4 <unescape_string+0x24>
mov    BYTE PTR [ebx],0x20
jmp    80594f6 <unescape_string+0x26>
mov    BYTE PTR [ebx],0xd
jmp    80594f6 <unescape_string+0x26>
nop
push   ebp
mov    ebp,esp
lea    eax,[ebp+0xc]
sub    esp,0xc
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8074c60
call   8048c98 <vsprintf@plt>
mov    eax,ds:0x8075e64
add    esp,0x10
test   eax,eax
js     8059590 <wle+0x50>
push   0x8074c60
mov    edx,DWORD PTR ds:0x8075d20
push   edx
push   0x806ba09
mov    eax,ds:0x8075e64
push   eax
call   8061260 <send_to_socket>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ecx
push   0x1b6
push   0x601
push   0x806ba11
call   8048f88 <open@plt>
mov    ds:0x8075e64,eax
add    esp,0x10
jmp    8059564 <wle+0x24>
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0xc]
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
add    ebx,0x220
push   ebx
call   8048ef8 <strcmp@plt>
add    esp,0x10
test   eax,eax
jne    80595e0 <setbotnick+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   eax
push   esi
push   ebx
push   0x806ba1c
call   8059540 <wle>
mov    DWORD PTR [esp],esi
push   ebx
push   0x8075d40
push   0x806ba35
push   0x0
call   805a5e0 <link_bcast>
mov    DWORD PTR [ebp+0xc],esi
mov    DWORD PTR [ebp+0x8],ebx
add    esp,0x20
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    8048c68 <strcpy@plt>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x1
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     80596b4 <needop+0x94>
mov    ecx,DWORD PTR ds:0x8075d20
mov    eax,ecx
sub    eax,DWORD PTR [edx+0x388]
cmp    eax,0x9
jle    80596b4 <needop+0x94>
mov    ebx,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
test   ebx,ebx
mov    DWORD PTR [edx+0x388],ecx
mov    ds:0x8076f00,eax
je     8059697 <needop+0x77>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   esi
mov    DWORD PTR ds:0x8075e74,ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     8059691 <needop+0x71>
test   BYTE PTR [eax+0x38d],0x8
jne    80596bb <needop+0x9b>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8059670 <needop+0x50>
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
add    eax,0x220
push   eax
push   esi
push   0x806ba45
push   0x0
call   805a5e0 <link_bcast>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
push   eax
mov    eax,ds:0x8076f00
add    eax,0x220
push   eax
push   0x8067900
push   esi
call   80613b0 <sendmode>
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
jmp    80596b4 <needop+0x94>
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
test   esi,esi
push   ebx
mov    eax,0x806ba54
jne    80596fb <link_dccuser+0x1b>
mov    eax,0x806ba5b
push   eax
push   0x806bee0
call   80576b0 <debug>
add    esp,0x10
test   esi,esi
je     8059740 <link_dccuser+0x60>
sub    esp,0xc
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x220
push   eax
push   0x8075d40
push   0x806ba64
push   0x0
call   805a5e0 <link_bcast>
add    esp,0x20
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x220
push   eax
push   0x8075d40
push   0x806ba79
jmp    8059726 <link_dccuser+0x46>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
xor    esi,esi
mov    edx,DWORD PTR ds:0x8076f08
cmp    esi,edx
mov    edi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR ds:0x8075d68
jge    8059798 <find_entity+0x38>
mov    esi,esi
cmp    BYTE PTR [ebx],0x0
je     805978d <find_entity+0x2d>
movsx  eax,BYTE PTR [ebx+0x9]
cmp    eax,edi
je     80597a4 <find_entity+0x44>
inc    esi
add    ebx,0x258
cmp    esi,edx
jl     8059780 <find_entity+0x20>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    eax,[ebx+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,ebx
je     805979a <find_entity+0x3a>
mov    edx,DWORD PTR ds:0x8076f08
jmp    805978d <find_entity+0x2d>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
push   0x806ba89
call   80576b0 <debug>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x244]
add    esp,0x10
cmp    eax,0xffffffff
je     8059800 <remlink+0x30>
sub    esp,0xc
push   eax
call   8048fc8 <close@plt>
add    esp,0x10
mov    ecx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ecx+0x8]
cmp    al,0x3
je     8059b42 <remlink+0x372>
movsx  edx,al
mov    DWORD PTR [ebp-0x14],0x0
mov    eax,ds:0x8076f08
mov    esi,DWORD PTR ds:0x8075d68
cmp    DWORD PTR [ebp-0x14],eax
mov    edi,esi
jge    8059875 <remlink+0xa5>
lea    esi,[esi+0x0]
cmp    BYTE PTR [esi],0x0
je     8059861 <remlink+0x91>
cmp    esi,DWORD PTR [ebp+0x8]
je     8059b39 <remlink+0x369>
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ecx+0x4]
cmp    DWORD PTR [esi+0x250],eax
je     8059b30 <remlink+0x360>
cmp    DWORD PTR [esi+0x254],eax
je     8059b20 <remlink+0x350>
mov    eax,ds:0x8076f08
inc    DWORD PTR [ebp-0x14]
add    esi,0x258
cmp    DWORD PTR [ebp-0x14],eax
jl     8059830 <remlink+0x60>
mov    edi,DWORD PTR ds:0x8075d68
mov    ecx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ecx+0xa],0x1
je     805997d <remlink+0x1ad>
mov    DWORD PTR [ebp-0x14],0x0
cmp    DWORD PTR [ebp-0x14],eax
mov    esi,edi
jge    80598a9 <remlink+0xd9>
cmp    BYTE PTR [esi],0x0
je     805989b <remlink+0xcb>
cmp    BYTE PTR [esi+0x8],0x6
je     80598c0 <remlink+0xf0>
inc    DWORD PTR [ebp-0x14]
add    esi,0x258
cmp    DWORD PTR [ebp-0x14],eax
jl     8059890 <remlink+0xc0>
sub    esp,0xc
push   0x806baa5
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
cmp    BYTE PTR [esi+0x9],0x66
je     805993d <remlink+0x16d>
push   eax
mov    edi,DWORD PTR [esi+0x254]
push   edi
mov    ebx,DWORD PTR [esi+0x250]
push   ebx
mov    ecx,DWORD PTR [esi+0x4]
push   ecx
mov    edx,DWORD PTR [esi+0x244]
push   edx
cmp    esi,0xfffffff4
push   esi
mov    eax,0x8071283
je     80598ee <remlink+0x11e>
lea    eax,[esi+0xc]
push   eax
push   0x806bf20
call   8059540 <wle>
mov    eax,DWORD PTR [esi+0x23c]
add    esp,0x20
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8059927 <remlink+0x157>
lea    edi,[ebp-0x10]
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
mov    ebx,DWORD PTR [eax]
push   edi
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0x10],ebx
jne    8059910 <remlink+0x140>
xor    eax,eax
cld    
mov    ecx,0x96
mov    edi,esi
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8076f08
jmp    805989b <remlink+0xcb>
cmp    esi,0xfffffff4
mov    eax,0x8071283
je     805994a <remlink+0x17a>
lea    eax,[esi+0xc]
push   eax
mov    eax,DWORD PTR [esi+0x254]
push   eax
mov    eax,DWORD PTR [esi+0x250]
push   eax
mov    eax,DWORD PTR [esi+0x4]
push   eax
mov    eax,DWORD PTR [esi+0x244]
push   eax
cmp    esi,0xffffffd4
push   esi
mov    eax,0x8071283
je     8059972 <remlink+0x1a2>
lea    eax,[esi+0x2c]
push   eax
push   0x806bf60
jmp    80598f4 <remlink+0x124>
cmp    edx,0x1
je     8059882 <remlink+0xb2>
cmp    edx,0x2
je     8059882 <remlink+0xb2>
mov    DWORD PTR [ebp-0x14],0x0
cmp    DWORD PTR [ebp-0x14],eax
mov    esi,edi
jge    80598a9 <remlink+0xd9>
jmp    80599b0 <remlink+0x1e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [esi],0x0
je     80599bb <remlink+0x1eb>
cmp    BYTE PTR [esi+0x8],0x6
je     80599ce <remlink+0x1fe>
inc    DWORD PTR [ebp-0x14]
add    esi,0x258
cmp    DWORD PTR [ebp-0x14],eax
jl     80599b0 <remlink+0x1e0>
jmp    8059882 <remlink+0xb2>
movsx  edx,BYTE PTR [esi+0x9]
cmp    edx,0x65
je     8059aad <remlink+0x2dd>
cmp    edx,0x65
jg     8059a33 <remlink+0x263>
cmp    edx,0x64
jne    80599bb <remlink+0x1eb>
mov    DWORD PTR [ebp-0x18],0x0
cmp    DWORD PTR [ebp-0x18],eax
mov    ebx,edi
jge    80599bb <remlink+0x1eb>
cmp    BYTE PTR [ebx],0x0
je     8059a03 <remlink+0x233>
cmp    ebx,DWORD PTR [ebp+0xc]
je     8059a03 <remlink+0x233>
cmp    BYTE PTR [ebx+0x8],0x3
je     8059a19 <remlink+0x249>
inc    DWORD PTR [ebp-0x18]
add    ebx,0x258
cmp    DWORD PTR [ebp-0x18],eax
jl     80599f3 <remlink+0x223>
mov    edi,DWORD PTR ds:0x8075d68
jmp    80599bb <remlink+0x1eb>
push   eax
lea    eax,[esi+0xc]
push   eax
push   0x806babe
push   ebx
call   805a590 <send_to_link>
add    esp,0x10
mov    eax,ds:0x8076f08
jmp    8059a03 <remlink+0x233>
cmp    edx,0x66
jne    80599bb <remlink+0x1eb>
mov    DWORD PTR [ebp-0x18],0x0
cmp    DWORD PTR [ebp-0x18],eax
mov    ebx,edi
jge    80599bb <remlink+0x1eb>
cmp    BYTE PTR [ebx],0x0
je     8059a5a <remlink+0x28a>
cmp    ebx,DWORD PTR [ebp+0xc]
je     8059a5a <remlink+0x28a>
cmp    BYTE PTR [ebx+0x8],0x3
je     8059a6a <remlink+0x29a>
inc    DWORD PTR [ebp-0x18]
add    ebx,0x258
cmp    DWORD PTR [ebp-0x18],eax
jl     8059a4a <remlink+0x27a>
jmp    8059a11 <remlink+0x241>
mov    eax,DWORD PTR [esi+0x250]
push   eax
push   0x258
mov    eax,ds:0x8076f08
push   eax
mov    edi,DWORD PTR ds:0x8075d68
push   edi
call   8059220 <findstruct>
mov    edx,eax
lea    eax,[esi+0x2c]
mov    DWORD PTR [esp],eax
lea    eax,[esi+0xc]
push   eax
lea    eax,[edx+0xc]
push   eax
push   0x806ba79
push   ebx
call   805a590 <send_to_link>
add    esp,0x20
mov    eax,ds:0x8076f08
jmp    8059a5a <remlink+0x28a>
mov    DWORD PTR [ebp-0x18],0x0
cmp    DWORD PTR [ebp-0x18],eax
mov    ebx,edi
mov    edx,eax
jge    80599bb <remlink+0x1eb>
cmp    BYTE PTR [ebx],0x0
je     8059ad1 <remlink+0x301>
cmp    ebx,DWORD PTR [ebp+0xc]
je     8059ad1 <remlink+0x301>
cmp    BYTE PTR [ebx+0x8],0x3
je     8059ae6 <remlink+0x316>
inc    DWORD PTR [ebp-0x18]
add    ebx,0x258
cmp    DWORD PTR [ebp-0x18],eax
mov    edx,eax
jl     8059ac1 <remlink+0x2f1>
jmp    8059a11 <remlink+0x241>
mov    ecx,DWORD PTR [esi+0x250]
push   ecx
push   0x258
push   edx
mov    eax,ds:0x8075d68
push   eax
call   8059220 <findstruct>
mov    edx,eax
lea    eax,[esi+0xc]
push   eax
lea    eax,[edx+0xc]
push   eax
push   0x806bac8
push   ebx
call   805a590 <send_to_link>
add    esp,0x20
mov    eax,ds:0x8076f08
jmp    8059ad1 <remlink+0x301>
lea    esi,[esi+0x0]
mov    BYTE PTR [esi+0x8],0x6
jmp    805985c <remlink+0x8c>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [esi+0x8],0x6
jmp    8059850 <remlink+0x80>
mov    BYTE PTR [esi+0x8],0x6
jmp    805983e <remlink+0x6e>
mov    DWORD PTR [ebp-0x14],0x0
mov    edx,DWORD PTR ds:0x8075d88
cmp    DWORD PTR [ebp-0x14],edx
mov    ebx,DWORD PTR ds:0x8075464
jge    805980e <remlink+0x3e>
mov    esi,esi
cmp    BYTE PTR [ebx],0x0
je     8059b6e <remlink+0x39e>
cmp    DWORD PTR [ebx+0x9c],0x2
je     8059b87 <remlink+0x3b7>
inc    DWORD PTR [ebp-0x14]
add    ebx,0xa0
cmp    DWORD PTR [ebp-0x14],edx
jl     8059b60 <remlink+0x390>
mov    edx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [edx+0x8]
jmp    805980e <remlink+0x3e>
mov    eax,DWORD PTR [ebx+0x98]
push   eax
lea    eax,[ebx+0x48]
push   eax
lea    eax,[ebx+0x8]
push   eax
push   0x806bfa0
call   8059540 <wle>
mov    DWORD PTR [ebx+0x9c],0x0
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075d88
jmp    8059b6e <remlink+0x39e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x40c
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
mov    edi,DWORD PTR [ebp+0x8]
je     8059d30 <do_linkcmd+0x170>
mov    dl,BYTE PTR [eax]
test   dl,dl
je     8059d30 <do_linkcmd+0x170>
cmp    dl,0x3d
je     8059d0e <do_linkcmd+0x14e>
mov    esi,0x806e306
mov    ebx,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
test   ebx,ebx
mov    ds:0x8076f00,eax
je     8059c38 <do_linkcmd+0x78>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
lea    eax,[ebx+0x220]
push   eax
mov    DWORD PTR ds:0x8075e74,ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8059c90 <do_linkcmd+0xd0>
cmp    BYTE PTR [esi],0x2a
je     8059c90 <do_linkcmd+0xd0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8059c10 <do_linkcmd+0x50>
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0x10]
push   edx
push   esi
mov    eax,ds:0x8076f00
push   edi
mov    ds:0x8075e74,eax
add    eax,0x220
push   eax
push   0x806bad5
push   0x0
call   805a5e0 <link_bcast>
add    esp,0x14
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   esi
mov    eax,ds:0x8075e74
push   edi
add    eax,0x220
push   eax
push   0x806bfe0
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebp+0x10]
push   ecx
mov    eax,ds:0x8075e74
movsx  eax,BYTE PTR [eax+0x380]
push   eax
push   0x806bae8
lea    eax,[ebp-0x418]
push   eax
call   8048f18 <sprintf@plt>
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   edi
call   8062b00 <find_user>
mov    ds:0x80762a4,eax
mov    DWORD PTR [esp],edi
mov    DWORD PTR ds:0x80766c4,0x0
call   8057c60 <getnick>
pop    ecx
pop    edx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
add    esp,0xc
lea    eax,[ebp-0x418]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   edi
call   804dee0 <on_msg>
add    esp,0x10
cmp    BYTE PTR [esi],0x2a
je     8059c32 <do_linkcmd+0x72>
jmp    8059c7b <do_linkcmd+0xbb>
inc    eax
sub    esp,0xc
mov    DWORD PTR [ebp+0x10],eax
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8059d30 <do_linkcmd+0x170>
cmp    BYTE PTR [eax],0x0
jne    8059bf2 <do_linkcmd+0x32>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x8070330
push   ebx
push   edi
call   804f840 <usage>
jmp    8059c7b <do_linkcmd+0xbb>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xb4
push   0x8075d40
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8059e1c <addlinkconf+0xcc>
xor    ebx,ebx
mov    eax,ds:0x8075d88
cmp    ebx,eax
mov    edi,DWORD PTR ds:0x8075464
jge    8059da4 <addlinkconf+0x54>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [edi],0x0
jne    8059e40 <addlinkconf+0xf0>
inc    ebx
add    edi,0xa0
cmp    ebx,eax
jl     8059d90 <addlinkconf+0x40>
lea    ebx,[ebp-0xb8]
sub    esp,0x8
cld    
xor    eax,eax
mov    ecx,0x28
mov    edi,ebx
rep stos DWORD PTR es:[edi],eax
push   esi
lea    eax,[ebp-0xb0]
push   eax
mov    BYTE PTR [ebp-0xb8],0x1
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
mov    edi,DWORD PTR [ebp+0xc]
push   edi
lea    eax,[ebp-0x90]
push   eax
call   8048c68 <strcpy@plt>
mov    esi,DWORD PTR [ebp+0x10]
add    esp,0x10
test   esi,esi
je     8059df1 <addlinkconf+0xa1>
mov    eax,DWORD PTR [ebp+0x10]
cmp    BYTE PTR [eax],0x0
jne    8059e24 <addlinkconf+0xd4>
mov    eax,DWORD PTR [ebp+0x14]
push   0xa0
test   eax,eax
push   0x8075d88
mov    DWORD PTR [ebp-0x20],eax
sete   al
and    eax,0xff
push   ebx
lea    eax,[eax+eax*2]
push   0x8075464
mov    DWORD PTR [ebp-0x1c],eax
call   8059260 <addstruct>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   eax
lea    eax,[ebp-0x70]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    8059df1 <addlinkconf+0xa1>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
lea    eax,[edi+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8059e1c <addlinkconf+0xcc>
mov    eax,ds:0x8075d88
jmp    8059d99 <addlinkconf+0x49>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x484
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8059e78 <do_link+0x18>
mov    eax,0x806baed
push   eax
push   0x806baf4
call   80576b0 <debug>
add    esp,0x10
cmp    BYTE PTR ds:0x8075d40,0x0
jne    8059eb0 <do_link+0x50>
sub    esp,0x8
push   0x806c000
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805a3af <do_link+0x54f>
sub    esp,0x8
push   0x8067d87
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805a0e0 <do_link+0x280>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805a0c5 <do_link+0x265>
sub    esp,0x8
push   0x8075d40
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805a0b9 <do_link+0x259>
xor    ebx,ebx
mov    eax,ds:0x8075d88
cmp    ebx,eax
mov    edi,DWORD PTR ds:0x8075464
mov    DWORD PTR [ebp-0x47c],0x0
jge    8059f44 <do_link+0xe4>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edi],0x0
jne    805a090 <do_link+0x230>
inc    ebx
add    edi,0xa0
cmp    ebx,eax
jl     8059f30 <do_link+0xd0>
mov    eax,DWORD PTR [ebp-0x47c]
test   eax,eax
je     805a082 <do_link+0x222>
mov    edi,DWORD PTR [ebp-0x47c]
cmp    BYTE PTR [edi+0x48],0x0
je     805a076 <do_link+0x216>
mov    edi,DWORD PTR [edi+0x98]
test   edi,edi
je     805a06a <do_link+0x20a>
xor    ebx,ebx
mov    eax,ds:0x8076f08
cmp    ebx,eax
mov    edi,DWORD PTR ds:0x8075d68
jge    8059fa4 <do_link+0x144>
jmp    8059f90 <do_link+0x130>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [edi],0x0
jne    805a040 <do_link+0x1e0>
inc    ebx
add    edi,0x258
cmp    ebx,eax
jl     8059f90 <do_link+0x130>
lea    edx,[ebp-0x478]
cld    
mov    edi,edx
xor    eax,eax
mov    ecx,0x96
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x80766c0
sub    esp,0x8
mov    DWORD PTR [ebp-0x474],eax
inc    eax
push   esi
mov    ds:0x80766c0,eax
lea    eax,[ebp-0x46c]
push   eax
mov    ebx,edx
mov    BYTE PTR [ebp-0x478],0x1
mov    BYTE PTR [ebp-0x46e],0x1
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    eax,ds:0x8075d20
push   0x0
mov    DWORD PTR [ebp-0x22c],eax
mov    BYTE PTR [ebp-0x470],0x1
mov    eax,DWORD PTR [ebp-0x47c]
mov    ecx,DWORD PTR [eax+0x98]
push   ecx
add    eax,0x48
push   eax
call   8060fc0 <SockConnect>
push   0x258
push   0x8076f08
push   ebx
push   0x8075d68
mov    DWORD PTR [ebp-0x234],eax
call   8059260 <addstruct>
add    esp,0x1c
push   esi
push   0x806bb02
jmp    8059e97 <do_link+0x37>
lea    esi,[esi+0x0]
sub    esp,0x8
push   esi
lea    eax,[edi+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805a05e <do_link+0x1fe>
mov    eax,ds:0x8076f08
jmp    8059f99 <do_link+0x139>
push   eax
push   esi
push   0x806c040
jmp    8059e97 <do_link+0x37>
push   ebx
push   esi
push   0x806bb20
jmp    8059e97 <do_link+0x37>
push   eax
push   esi
push   0x806c060
jmp    8059e97 <do_link+0x37>
push   eax
push   esi
push   0x806bb3d
jmp    8059e97 <do_link+0x37>
mov    esi,esi
sub    esp,0x8
push   esi
lea    eax,[edi+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805a0ae <do_link+0x24e>
mov    eax,ds:0x8075d88
jmp    8059f39 <do_link+0xd9>
mov    DWORD PTR [ebp-0x47c],edi
jmp    8059f44 <do_link+0xe4>
push   eax
push   esi
push   0x806bb51
jmp    8059e97 <do_link+0x37>
sub    esp,0x8
push   0x806bb64
jmp    8059e97 <do_link+0x37>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x806803a
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805a1b0 <do_link+0x350>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x484],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   esi,esi
je     805a139 <do_link+0x2d9>
cmp    BYTE PTR [esi],0x0
je     805a139 <do_link+0x2d9>
test   edi,edi
je     805a139 <do_link+0x2d9>
cmp    BYTE PTR [edi],0x0
jne    805a14f <do_link+0x2ef>
sub    esp,0x8
push   0x8068035
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   804f840 <usage>
jmp    8059ea0 <do_link+0x40>
mov    edx,DWORD PTR [ebp-0x484]
test   edx,edx
je     805a164 <do_link+0x304>
mov    edx,DWORD PTR [ebp-0x484]
cmp    BYTE PTR [edx],0x0
jne    805a16e <do_link+0x30e>
mov    DWORD PTR [ebp-0x484],0x80671de
test   eax,eax
je     805a177 <do_link+0x317>
cmp    BYTE PTR [eax],0x0
jne    805a196 <do_link+0x336>
xor    eax,eax
push   eax
mov    eax,DWORD PTR [ebp-0x484]
push   eax
push   edi
push   esi
call   8059d50 <addlinkconf>
add    esp,0xc
push   esi
push   0x806bb7b
jmp    8059e97 <do_link+0x37>
sub    esp,0xc
push   eax
call   8048f58 <atoi@plt>
add    esp,0x10
jmp    805a179 <do_link+0x319>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x8068043
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805a250 <do_link+0x3f0>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805a23b <do_link+0x3db>
xor    ebx,ebx
mov    eax,ds:0x8075d88
cmp    ebx,eax
mov    edi,DWORD PTR ds:0x8075464
jge    805a200 <do_link+0x3a0>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edi],0x0
jne    805a20c <do_link+0x3ac>
inc    ebx
add    edi,0xa0
cmp    ebx,eax
jl     805a1f0 <do_link+0x390>
push   eax
push   esi
push   0x806bb8d
jmp    8059e97 <do_link+0x37>
sub    esp,0x8
push   esi
lea    eax,[edi+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805a227 <do_link+0x3c7>
mov    eax,ds:0x8075d88
jmp    805a1f5 <do_link+0x395>
cld    
mov    ecx,0x28
rep stos DWORD PTR es:[edi],eax
push   edi
push   esi
push   0x806bba3
jmp    8059e97 <do_link+0x37>
sub    esp,0x8
push   0x806803e
jmp    805a141 <do_link+0x2e1>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x8067e0f
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805a2e1 <do_link+0x481>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
pop    edi
mov    ebx,eax
pop    eax
push   0x64
push   ebx
call   8059760 <find_entity>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805a2da <do_link+0x47a>
sub    esp,0x8
push   0x0
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8062b00 <find_user>
pop    esi
pop    edx
push   0x8075d40
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
sub    esp,0xc
push   ecx
call   8057c60 <getnick>
add    esp,0x10
push   eax
push   ebx
push   0x806c0a0
push   0x0
call   805a5e0 <link_bcast>
add    esp,0x18
push   0x0
push   edi
call   80597d0 <remlink>
add    esp,0xc
push   ebx
push   0x806bbb7
jmp    8059e97 <do_link+0x37>
push   esi
push   ebx
jmp    805a084 <do_link+0x224>
sub    esp,0x8
push   0x806805e
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805a3a0 <do_link+0x540>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805a311 <do_link+0x4b1>
cmp    BYTE PTR [eax],0x0
jne    805a31e <do_link+0x4be>
sub    esp,0x8
push   0x8068059
jmp    805a141 <do_link+0x2e1>
sub    esp,0xc
push   eax
call   8059370 <Atoi>
mov    esi,eax
add    esp,0xc
xor    eax,eax
test   esi,esi
je     805a334 <do_link+0x4d4>
mov    eax,DWORD PTR [esi]
push   eax
push   ebx
push   0x806c0e0
call   80576b0 <debug>
add    esp,0x10
test   esi,esi
je     805a354 <do_link+0x4f4>
mov    eax,DWORD PTR [esi]
test   eax,eax
jle    805a354 <do_link+0x4f4>
cmp    eax,0xffff
jle    805a361 <do_link+0x501>
sub    esp,0x8
push   0x806c120
jmp    8059e97 <do_link+0x37>
push   edx
push   eax
push   0x806bbcc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
pop    eax
mov    eax,ds:0x8075e2c
push   eax
call   8048fc8 <close@plt>
mov    DWORD PTR ds:0x8075e2c,0xffffffff
mov    eax,DWORD PTR [esi]
mov    ds:0x8075d2c,eax
jmp    8059ea0 <do_link+0x40>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x80704e0
push   ebx
jmp    805a141 <do_link+0x2e1>
sub    esp,0x8
push   0x806c160
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
mov    DWORD PTR [ebp-0x480],0x0
call   80614d0 <send_to_user>
mov    eax,ds:0x8075d88
xor    ebx,ebx
add    esp,0x10
cmp    esi,eax
mov    edi,DWORD PTR ds:0x8075464
jge    805a447 <do_link+0x5e7>
mov    esi,esi
cmp    BYTE PTR [edi],0x0
je     805a43c <do_link+0x5dc>
mov    eax,DWORD PTR [edi+0x98]
test   eax,eax
jne    805a459 <do_link+0x5f9>
mov    DWORD PTR [ebp-0x218],0x656e6f6e
mov    BYTE PTR [ebp-0x214],0x0
lea    esi,[ebp-0x218]
sub    esp,0x8
cmp    edi,0xffffffb8
push   esi
mov    eax,0x80671de
je     805a417 <do_link+0x5b7>
lea    eax,[edi+0x48]
push   eax
lea    eax,[edi+0x28]
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806bbe4
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   80614d0 <send_to_user>
inc    DWORD PTR [ebp-0x480]
add    esp,0x20
mov    eax,ds:0x8075d88
inc    ebx
add    edi,0xa0
cmp    ebx,eax
jl     805a3e0 <do_link+0x580>
push   eax
mov    eax,DWORD PTR [ebp-0x480]
push   eax
push   0x806c1c0
jmp    8059e97 <do_link+0x37>
push   ecx
push   eax
push   0x806f5ab
lea    esi,[ebp-0x218]
push   esi
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    805a406 <do_link+0x5a6>
jmp    805a480 <link_write>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
push   eax
push   esi
cmp    BYTE PTR [ebx+0xc],0x0
je     805a580 <link_write+0x100>
lea    eax,[ebx+0xc]
push   eax
push   0x806bbfe
call   80576b0 <debug>
push   esi
mov    eax,DWORD PTR [ebx+0x254]
push   eax
mov    eax,DWORD PTR [ebx+0x250]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    eax,DWORD PTR [ebx+0x244]
push   eax
push   ebx
cmp    BYTE PTR [ebx+0xc],0x0
je     805a570 <link_write+0xf0>
lea    eax,[ebx+0xc]
push   eax
push   0x806c1e0
call   8059540 <wle>
add    esp,0x24
push   esi
call   8048f78 <strlen@plt>
add    esp,0xc
push   eax
push   esi
mov    eax,DWORD PTR [ebx+0x244]
push   eax
call   8048d98 <write@plt>
add    esp,0x10
test   eax,eax
js     805a500 <link_write+0x80>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
sub    esp,0x10
call   8048de8 <__error@plt>
mov    ecx,DWORD PTR [eax]
pop    esi
push   ecx
sub    esp,0x10
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
pop    edx
push   eax
call   8048cb8 <strerror@plt>
add    esp,0x10
push   eax
mov    eax,DWORD PTR [ebx+0x254]
push   eax
mov    eax,DWORD PTR [ebx+0x250]
push   eax
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    esi,DWORD PTR [ebx+0x244]
push   esi
push   ebx
cmp    BYTE PTR [ebx+0xc],0x0
je     805a567 <link_write+0xe7>
lea    eax,[ebx+0xc]
push   eax
push   0x806c220
call   8059540 <wle>
mov    DWORD PTR [ebp+0xc],0x0
mov    DWORD PTR [ebp+0x8],ebx
add    esp,0x30
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80597d0 <remlink>
mov    eax,0x8071283
jmp    805a544 <link_write+0xc4>
mov    esi,esi
mov    eax,0x8071283
jmp    805a4cd <link_write+0x4d>
lea    esi,[esi+0x0]
mov    eax,0x806bc0e
jmp    805a49a <link_write+0x1a>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x800
mov    esi,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [esi+0x244],0xffffffff
je     805a5cb <send_to_link+0x3b>
cmp    BYTE PTR [esi+0x8],0x6
je     805a5cb <send_to_link+0x3b>
push   edx
lea    eax,[ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
lea    ebx,[ebp-0x808]
push   ebx
call   8048c98 <vsprintf@plt>
pop    edx
pop    ecx
push   ebx
push   esi
call   805a480 <link_write>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x810
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
lea    eax,[ebp-0x818]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
xor    esi,esi
call   8048c98 <vsprintf@plt>
mov    eax,ds:0x8076f08
add    esp,0x10
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805a63a <link_bcast+0x5a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     805a62f <link_bcast+0x4f>
cmp    ebx,edi
je     805a62f <link_bcast+0x4f>
cmp    BYTE PTR [ebx+0x8],0x3
je     805a642 <link_bcast+0x62>
inc    esi
add    ebx,0x258
cmp    esi,eax
jl     805a620 <link_bcast+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
lea    eax,[ebp-0x818]
push   eax
push   ebx
call   805a480 <link_write>
add    esp,0x10
mov    eax,ds:0x8076f08
jmp    805a62f <link_bcast+0x4f>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   ebx
sub    esp,0x26c
push   0x806c260
mov    ebx,DWORD PTR [ebp+0x8]
call   80576b0 <debug>
pop    edi
pop    eax
push   0x3
push   ebx
call   8048fb8 <fcntl@plt>
or     eax,0x4
add    esp,0xc
push   eax
push   0x4
push   ebx
call   8048fb8 <fcntl@plt>
lea    edi,[ebp-0x268]
cld    
xor    eax,eax
mov    ecx,0x96
rep stos DWORD PTR es:[edi],eax
push   0x258
mov    eax,ds:0x80766c0
push   0x8076f08
lea    edx,[ebp-0x268]
mov    DWORD PTR [ebp-0x264],eax
push   edx
inc    eax
mov    ds:0x80766c0,eax
push   0x8075d68
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebp-0x24],ebx
mov    BYTE PTR [ebp-0x268],0x1
mov    BYTE PTR [ebp-0x25e],0x0
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [ebp-0x18],0x0
mov    BYTE PTR [ebp-0x260],0x0
mov    BYTE PTR [ebp-0x25f],0x63
or     DWORD PTR ds:0x8075460,0x2
call   8059260 <addstruct>
lea    esp,[ebp-0x8]
pop    ebx
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
xor    esi,esi
mov    eax,ds:0x8075d88
cmp    esi,eax
mov    edi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR ds:0x8075464
jge    805a740 <checklinkpass+0x30>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebx],0x0
jne    805a750 <checklinkpass+0x40>
inc    esi
add    ebx,0xa0
cmp    esi,eax
jl     805a730 <checklinkpass+0x20>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   edi
lea    eax,[ebx+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805a76b <checklinkpass+0x5b>
mov    eax,ds:0x8075d88
jmp    805a735 <checklinkpass+0x25>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
lea    eax,[ebx+0x28]
push   eax
call   8048ef8 <strcmp@plt>
add    esp,0x10
test   eax,eax
sete   al
and    eax,0xff
jmp    805a742 <checklinkpass+0x32>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1c
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     805a7a5 <Link_addbot+0x15>
cmp    BYTE PTR [eax],0x0
jne    805a7ad <Link_addbot+0x1d>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   esi,esi
mov    DWORD PTR [ebp-0x14],eax
je     805a805 <Link_addbot+0x75>
test   eax,eax
je     805a805 <Link_addbot+0x75>
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   esi
push   0x806c2a0
call   80576b0 <debug>
mov    DWORD PTR [esp],esi
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
ja     805a805 <Link_addbot+0x75>
sub    esp,0xc
mov    edi,DWORD PTR [ebp-0x14]
push   edi
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
jbe    805a829 <Link_addbot+0x99>
mov    eax,DWORD PTR [ebp+0x8]
sub    esp,0xc
mov    ebx,DWORD PTR [eax+0x244]
push   ebx
call   8048fc8 <close@plt>
cld    
mov    ecx,0x96
xor    eax,eax
mov    edi,DWORD PTR [ebp+0x8]
rep stos DWORD PTR es:[edi],eax
jmp    805a7a5 <Link_addbot+0x15>
xor    edi,edi
mov    eax,ds:0x8076f08
cmp    edi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805a854 <Link_addbot+0xc4>
cmp    BYTE PTR [ebx],0x0
je     805a849 <Link_addbot+0xb9>
cmp    BYTE PTR [ebx+0x9],0x64
je     805ac41 <Link_addbot+0x4b1>
inc    edi
add    ebx,0x258
cmp    edi,eax
jl     805a83a <Link_addbot+0xaa>
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax+0xa],0x0
jne    805a875 <Link_addbot+0xe5>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
push   esi
call   805a710 <checklinkpass>
add    esp,0x10
test   eax,eax
je     805ac22 <Link_addbot+0x492>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0xc
push   esi
push   eax
mov    DWORD PTR [ebp-0x20],eax
call   8048c68 <strcpy@plt>
mov    eax,DWORD PTR [ebp+0x8]
mov    BYTE PTR [eax+0xa],0x1
mov    BYTE PTR [eax+0x8],0x3
mov    BYTE PTR [eax+0x9],0x64
pop    ecx
pop    ebx
push   esi
push   0x806bc18
call   804b7d0 <send_global_statmsg>
pop    eax
pop    edx
push   0x806bc31
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805ac06 <Link_addbot+0x476>
push   ebx
push   esi
push   0x806bc36
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   805a5e0 <link_bcast>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     805a909 <Link_addbot+0x179>
mov    eax,DWORD PTR [ebp-0x10]
add    eax,0x220
push   eax
push   0x8075d40
push   0x806bc47
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   805a590 <send_to_link>
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax]
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
jne    805a8de <Link_addbot+0x14e>
xor    edi,edi
mov    eax,ds:0x8076f08
mov    ebx,DWORD PTR ds:0x8075d68
cmp    edi,eax
mov    edx,ebx
jge    805a941 <Link_addbot+0x1b1>
cmp    BYTE PTR [ebx],0x0
je     805a930 <Link_addbot+0x1a0>
cmp    ebx,DWORD PTR [ebp+0x8]
je     805a930 <Link_addbot+0x1a0>
cmp    BYTE PTR [ebx+0x9],0x64
je     805abe6 <Link_addbot+0x456>
inc    edi
add    ebx,0x258
cmp    edi,eax
jl     805a91c <Link_addbot+0x18c>
mov    edx,DWORD PTR ds:0x8075d68
xor    edi,edi
cmp    edi,eax
mov    ebx,edx
mov    edx,eax
jge    805a96c <Link_addbot+0x1dc>
cmp    BYTE PTR [ebx],0x0
je     805a95f <Link_addbot+0x1cf>
cmp    ebx,DWORD PTR [ebp+0x8]
je     805a95f <Link_addbot+0x1cf>
cmp    BYTE PTR [ebx+0x9],0x65
je     805abab <Link_addbot+0x41b>
inc    edi
add    ebx,0x258
cmp    edi,eax
mov    edx,eax
jl     805a94b <Link_addbot+0x1bb>
mov    eax,ds:0x8076f0c
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     805aa35 <Link_addbot+0x2a5>
mov    eax,DWORD PTR [ebp-0x10]
mov    esi,DWORD PTR [eax+0xb3c]
test   esi,esi
mov    ds:0x8075e74,eax
je     805a9d5 <Link_addbot+0x245>
mov    eax,ds:0x8076f08
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
xor    edi,edi
cmp    edi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805a9cf <Link_addbot+0x23f>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     805a9c4 <Link_addbot+0x234>
cmp    ebx,DWORD PTR [ebp+0x8]
je     805a9c4 <Link_addbot+0x234>
cmp    BYTE PTR [ebx+0x9],0x64
je     805ab70 <Link_addbot+0x3e0>
inc    edi
add    ebx,0x258
cmp    edi,eax
jl     805a9b0 <Link_addbot+0x220>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    805a9a0 <Link_addbot+0x210>
mov    edx,DWORD PTR ds:0x8075e74
xor    eax,eax
cmp    eax,DWORD PTR [edx+0x71c]
mov    esi,DWORD PTR [edx+0x720]
mov    DWORD PTR [ebp-0x18],0x0
jge    805aa25 <Link_addbot+0x295>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [esi],0x0
je     805aa14 <Link_addbot+0x284>
mov    eax,DWORD PTR [esi+0x3c]
and    eax,0xe0028
cmp    eax,0x20028
je     805aa89 <Link_addbot+0x2f9>
inc    DWORD PTR [ebp-0x18]
mov    eax,DWORD PTR [ebp-0x18]
add    esi,0x48
cmp    eax,DWORD PTR [edx+0x71c]
jl     805aa00 <Link_addbot+0x270>
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
jne    805a97c <Link_addbot+0x1ec>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax+0x23c]
test   ebx,ebx
mov    edi,0x1
je     805aa63 <Link_addbot+0x2d3>
lea    eax,[ebx+0x4]
push   eax
mov    esi,DWORD PTR [ebx]
push   esi
push   edi
push   0x806c2e0
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebx]
inc    edi
add    esp,0x10
test   ebx,ebx
jne    805aa47 <Link_addbot+0x2b7>
sub    esp,0x8
push   0x806bc58
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   805a590 <send_to_link>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp-0x20]
push   eax
push   0x806c320
call   80576b0 <debug>
jmp    805a7a5 <Link_addbot+0x15>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax+0x23c]
test   ebx,ebx
je     805ab5b <Link_addbot+0x3cb>
lea    edi,[esi+0x8]
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[ebx+0x4]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805ab52 <Link_addbot+0x3c2>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805aaa0 <Link_addbot+0x310>
sub    esp,0x8
push   edi
push   0x806c360
call   80576b0 <debug>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax+0x23c]
mov    eax,DWORD PTR [ebx]
add    esp,0x10
test   eax,eax
je     805aae6 <Link_addbot+0x356>
mov    ebx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    805aade <Link_addbot+0x34e>
mov    DWORD PTR ds:0x8075d6c,0x805a790
sub    esp,0xc
mov    ecx,edi
mov    DWORD PTR [ebp-0x24],edi
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     805ab00 <Link_addbot+0x370>
test   edx,0x8080
jne    805ab25 <Link_addbot+0x395>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,DWORD PTR [ebp-0x24]
lea    eax,[ecx+0x5]
push   eax
call   8057860 <MyMalloc>
mov    DWORD PTR [ebx],eax
pop    edx
pop    ecx
push   edi
add    eax,0x4
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
jmp    805aa14 <Link_addbot+0x284>
test   ebx,ebx
jne    805ab47 <Link_addbot+0x3b7>
jmp    805aabe <Link_addbot+0x32e>
lea    edi,[esi+0x8]
jmp    805aabe <Link_addbot+0x32e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[esi+0x20c]
push   eax
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
mov    eax,DWORD PTR [ebp-0x10]
add    eax,0x220
push   eax
push   0x8075d40
push   0x806ba64
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a590 <send_to_link>
add    esp,0x20
mov    eax,ds:0x8076f08
jmp    805a9c4 <Link_addbot+0x234>
mov    eax,DWORD PTR [ebx+0x250]
push   eax
push   0x258
push   edx
mov    eax,ds:0x8075d68
push   eax
call   8059220 <findstruct>
lea    edx,[ebx+0xc]
push   edx
add    eax,0xc
push   eax
push   0x806bc47
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a590 <send_to_link>
add    esp,0x20
mov    eax,ds:0x8076f08
jmp    805a95f <Link_addbot+0x1cf>
push   eax
lea    eax,[ebx+0xc]
push   eax
push   0x806bc36
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a590 <send_to_link>
add    esp,0x10
mov    eax,ds:0x8076f08
jmp    805a930 <Link_addbot+0x1a0>
push   eax
push   0x8075d40
push   0x806bc63
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   805a590 <send_to_link>
add    esp,0x10
jmp    805a8bf <Link_addbot+0x12f>
sub    esp,0xc
push   0x806c3a0
call   80576b0 <debug>
pop    eax
pop    edx
push   0x0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80597d0 <remlink>
jmp    805a7a5 <Link_addbot+0x15>
sub    esp,0x8
lea    eax,[ebx+0xc]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x1c],eax
je     805ac62 <Link_addbot+0x4d2>
mov    eax,ds:0x8076f08
jmp    805a849 <Link_addbot+0xb9>
sub    esp,0xc
push   0x806c3e0
call   80576b0 <debug>
mov    eax,DWORD PTR [ebp+0x8]
pop    edi
mov    esi,DWORD PTR [eax+0x244]
push   esi
call   8048fc8 <close@plt>
cld    
mov    ecx,0x96
mov    edi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp-0x1c]
jmp    805a822 <Link_addbot+0x92>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     805aca5 <Link_quit+0x15>
cmp    BYTE PTR [eax],0x0
jne    805acb0 <Link_quit+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0xc
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     805ae75 <Link_quit+0x1e5>
test   edi,edi
push   eax
mov    eax,edi
je     805ae6b <Link_quit+0x1db>
push   eax
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
push   0x806c420
call   80576b0 <debug>
add    esp,0x20
test   edi,edi
je     805ad02 <Link_quit+0x72>
cmp    BYTE PTR [edi],0x0
jne    805ad20 <Link_quit+0x90>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp+0x8]
push   ecx
add    eax,0xc
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805ae5d <Link_quit+0x1cd>
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
je     805adaf <Link_quit+0x11f>
mov    eax,DWORD PTR [ebp-0x14]
cmp    BYTE PTR [eax],0x0
je     805adaf <Link_quit+0x11f>
xor    esi,esi
mov    eax,ds:0x8076f08
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805aca5 <Link_quit+0x15>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     805ad5b <Link_quit+0xcb>
cmp    BYTE PTR [ebx+0x9],0x66
je     805ad6b <Link_quit+0xdb>
inc    esi
add    ebx,0x258
cmp    esi,eax
jl     805ad50 <Link_quit+0xc0>
jmp    805aca5 <Link_quit+0x15>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
lea    eax,[ebx+0x2c]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805ad89 <Link_quit+0xf9>
mov    eax,ds:0x8076f08
jmp    805ad5b <Link_quit+0xcb>
sub    esp,0x8
push   edi
lea    eax,[ebx+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805ad82 <Link_quit+0xf2>
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   ebx
call   80597d0 <remlink>
jmp    805aca5 <Link_quit+0x15>
test   edi,edi
je     805ae06 <Link_quit+0x176>
cmp    BYTE PTR [edi],0x0
je     805ae06 <Link_quit+0x176>
xor    esi,esi
mov    eax,ds:0x8076f08
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805aca5 <Link_quit+0x15>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebx],0x0
je     805addb <Link_quit+0x14b>
cmp    BYTE PTR [ebx+0x9],0x65
je     805adeb <Link_quit+0x15b>
inc    esi
add    ebx,0x258
cmp    esi,eax
jl     805add0 <Link_quit+0x140>
jmp    805aca5 <Link_quit+0x15>
sub    esp,0x8
push   edi
lea    eax,[ebx+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805ad9d <Link_quit+0x10d>
mov    eax,ds:0x8076f08
jmp    805addb <Link_quit+0x14b>
xor    esi,esi
mov    eax,ds:0x8076f08
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d68
jge    805aca5 <Link_quit+0x15>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     805ae2b <Link_quit+0x19b>
cmp    BYTE PTR [ebx+0x9],0x64
je     805ae3b <Link_quit+0x1ab>
inc    esi
add    ebx,0x258
cmp    esi,eax
jl     805ae20 <Link_quit+0x190>
jmp    805aca5 <Link_quit+0x15>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
lea    eax,[ebx+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805ad9d <Link_quit+0x10d>
mov    eax,ds:0x8076f08
jmp    805ae2b <Link_quit+0x19b>
sub    esp,0x8
push   0x0
mov    edx,DWORD PTR [ebp+0x8]
push   edx
jmp    805ada5 <Link_quit+0x115>
mov    eax,0x8071283
jmp    805ace7 <Link_quit+0x57>
mov    eax,0x8071283
jmp    805acdc <Link_quit+0x4c>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     805ae95 <Link_msg+0x15>
cmp    BYTE PTR [eax],0x0
jne    805ae9d <Link_msg+0x1d>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
mov    ebx,DWORD PTR [ebp+0xc]
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [ebp-0x10],eax
je     805ae95 <Link_msg+0x15>
cmp    BYTE PTR [ebx],0x0
je     805ae95 <Link_msg+0x15>
mov    esi,eax
mov    edx,0x806bc73
mov    eax,0x2
cld    
mov    edi,edx
mov    ecx,eax
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     805af33 <Link_msg+0xb3>
mov    esi,DWORD PTR ds:0x8076f0c
test   esi,esi
je     805af18 <Link_msg+0x98>
lea    esi,[esi+0x0]
mov    ebx,DWORD PTR [esi+0xb3c]
test   ebx,ebx
mov    DWORD PTR ds:0x8075e74,esi
je     805af12 <Link_msg+0x92>
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806844f
lea    eax,[ebx+0x20c]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    805aef0 <Link_msg+0x70>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    805aee0 <Link_msg+0x60>
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   0x806bc75
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   805a5e0 <link_bcast>
jmp    805ae95 <Link_msg+0x15>
sub    esp,0x8
push   ebx
push   0x806a12d
call   804b7d0 <send_global_statmsg>
add    esp,0x10
jmp    805af18 <Link_msg+0x98>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x27c
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     805af68 <Link_link+0x18>
cmp    BYTE PTR [eax],0x0
jne    805af70 <Link_link+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   edx
push   eax
push   0x806bc81
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    ebx,[ebp+0xc]
call   805a5e0 <link_bcast>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x27c],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   edi,edi
mov    ebx,eax
je     805af68 <Link_link+0x18>
cmp    BYTE PTR [edi],0x0
je     805af68 <Link_link+0x18>
test   esi,esi
je     805af68 <Link_link+0x18>
cmp    BYTE PTR [esi],0x0
je     805af68 <Link_link+0x18>
sub    esp,0x8
push   0x806ad7e
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x280],0x64
jne    805b1b0 <Link_link+0x260>
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
ja     805af68 <Link_link+0x18>
mov    eax,DWORD PTR [ebp-0x280]
sub    eax,0x65
cmp    eax,0x1
ja     805b049 <Link_link+0xf9>
mov    eax,DWORD PTR [ebp-0x27c]
test   eax,eax
je     805af68 <Link_link+0x18>
mov    eax,DWORD PTR [ebp-0x27c]
cmp    BYTE PTR [eax],0x0
je     805af68 <Link_link+0x18>
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x1f
ja     805af68 <Link_link+0x18>
cmp    DWORD PTR [ebp-0x280],0x4
je     805b182 <Link_link+0x232>
sub    esp,0xc
test   ebx,ebx
mov    eax,ebx
je     805b178 <Link_link+0x228>
push   eax
mov    eax,DWORD PTR [ebp-0x27c]
test   eax,eax
je     805b16e <Link_link+0x21e>
push   eax
push   edi
push   esi
push   0x806c460
call   80576b0 <debug>
lea    edi,[ebp-0x278]
xor    eax,eax
cld    
mov    ecx,0x96
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x80766c0
mov    DWORD PTR [ebp-0x274],eax
mov    dl,BYTE PTR [ebp-0x280]
inc    eax
mov    ds:0x80766c0,eax
mov    BYTE PTR [ebp-0x26f],dl
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x2c],eax
add    esp,0x20
mov    eax,DWORD PTR [edx+0x4]
cmp    DWORD PTR [ebp-0x280],0x64
mov    BYTE PTR [ebp-0x278],0x1
mov    BYTE PTR [ebp-0x26e],0x1
mov    DWORD PTR [ebp-0x34],0xffffffff
mov    BYTE PTR [ebp-0x270],0x5
mov    DWORD PTR [ebp-0x24],eax
je     805b155 <Link_link+0x205>
cmp    DWORD PTR [ebp-0x280],0x65
je     805b143 <Link_link+0x1f3>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x27c]
push   eax
lea    eax,[ebp-0x26c]
push   eax
call   8048c68 <strcpy@plt>
pop    ecx
pop    edi
push   ebx
lea    eax,[ebp-0x24c]
push   eax
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x64
push   esi
call   8059760 <find_entity>
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x28],eax
add    esp,0x10
push   0x258
push   0x8076f08
lea    eax,[ebp-0x278]
push   eax
push   0x8075d68
call   8059260 <addstruct>
mov    eax,ds:0x8075d20
mov    ds:0x8075d84,eax
jmp    805af68 <Link_link+0x18>
mov    eax,DWORD PTR [ebp-0x27c]
sub    esp,0x8
push   eax
lea    eax,[ebp-0x26c]
jmp    805b100 <Link_link+0x1b0>
sub    esp,0x8
push   esi
lea    eax,[ebp-0x26c]
push   eax
call   8048c68 <strcpy@plt>
mov    DWORD PTR [ebp-0x28],0x0
jmp    805b116 <Link_link+0x1c6>
mov    eax,0x8071283
jmp    805b065 <Link_link+0x115>
mov    eax,0x8071283
jmp    805b056 <Link_link+0x106>
test   ebx,ebx
je     805af68 <Link_link+0x18>
cmp    BYTE PTR [ebx],0x0
je     805af68 <Link_link+0x18>
sub    esp,0xc
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0xb
jbe    805b049 <Link_link+0xf9>
jmp    805af68 <Link_link+0x18>
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x806ad88
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x280],0x65
je     805afe7 <Link_link+0x97>
sub    esp,0x8
push   0x806b467
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805af68 <Link_link+0x18>
mov    DWORD PTR [ebp-0x280],0x66
jmp    805afe7 <Link_link+0x97>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x428
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x41c],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edx,DWORD PTR [ebp+0xc]
add    esp,0x10
test   edx,edx
mov    esi,eax
je     805b420 <Link_cmd+0x220>
mov    al,BYTE PTR [edx]
test   al,al
je     805b420 <Link_cmd+0x220>
cmp    al,0x20
mov    ebx,edx
je     805b25b <Link_cmd+0x5b>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
je     805b25b <Link_cmd+0x5b>
cmp    al,0x20
jne    805b250 <Link_cmd+0x50>
push   eax
mov    eax,ebx
sub    eax,edx
push   eax
push   edx
lea    edi,[ebp-0x418]
push   edi
call   8048e38 <strncpy@plt>
sub    ebx,DWORD PTR [ebp+0xc]
mov    BYTE PTR [ebx+ebp*1-0x418],0x0
add    esp,0xc
mov    ecx,edi
mov    ebx,edi
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     805b280 <Link_cmd+0x80>
test   edx,0x8080
jne    805b2a5 <Link_cmd+0xa5>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,ebx
push   ecx
push   edi
push   0x806c4c0
call   80576b0 <debug>
mov    eax,ds:0x8070260
add    esp,0x10
test   eax,eax
je     805b306 <Link_cmd+0x106>
xor    ebx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebx+0x8070260]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805b465 <Link_cmd+0x265>
mov    eax,DWORD PTR [ebx+0x8070264]
test   eax,eax
jne    805b450 <Link_cmd+0x250>
add    ebx,0x10
mov    eax,DWORD PTR [ebx+0x8070260]
test   eax,eax
jne    805b2d0 <Link_cmd+0xd0>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp-0x41c]
push   ecx
mov    DWORD PTR ds:0x80766c4,0x0
call   8057c60 <getnick>
pop    ebx
pop    edx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
je     805b3bd <Link_cmd+0x1bd>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x8075e74,ebx
cmp    BYTE PTR [esi],0x2a
je     805b362 <Link_cmd+0x162>
sub    esp,0x8
push   esi
lea    eax,[ebx+0x220]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805b3b7 <Link_cmd+0x1b7>
sub    esp,0x8
push   0x0
mov    ecx,DWORD PTR [ebp-0x41c]
push   ecx
call   8062b00 <find_user>
mov    edx,DWORD PTR [ebp+0xc]
push   edx
mov    ds:0x80762a4,eax
mov    eax,ds:0x8075e74
movsx  eax,BYTE PTR [eax+0x380]
push   eax
push   0x806bae8
push   edi
call   8048f18 <sprintf@plt>
add    esp,0x1c
mov    eax,ds:0x8075e74
push   edi
add    eax,0x220
push   eax
mov    eax,DWORD PTR [ebp-0x41c]
push   eax
call   804dee0 <on_msg>
add    esp,0x10
cmp    BYTE PTR [esi],0x2a
jne    805b420 <Link_cmd+0x220>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805b340 <Link_cmd+0x140>
cmp    BYTE PTR [esi],0x2a
je     805b428 <Link_cmd+0x228>
sub    esp,0x8
push   0x65
push   esi
call   8059760 <find_entity>
add    esp,0x10
test   eax,eax
je     805b420 <Link_cmd+0x220>
mov    eax,DWORD PTR [eax+0x254]
push   eax
push   0x258
mov    eax,ds:0x8076f08
push   eax
mov    edi,DWORD PTR ds:0x8075d68
push   edi
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     805b420 <Link_cmd+0x220>
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
push   esi
mov    ecx,DWORD PTR [ebp-0x41c]
push   ecx
push   0x806bc8b
push   eax
call   805a590 <send_to_link>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
mov    eax,DWORD PTR [ebp-0x41c]
push   eax
push   0x806bc8b
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a5e0 <link_bcast>
jmp    805b420 <Link_cmd+0x220>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   edi
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805b2f9 <Link_cmd+0xf9>
test   BYTE PTR [ebx+0x807026d],0x40
je     805b306 <Link_cmd+0x106>
jmp    805b420 <Link_cmd+0x220>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x528
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x520],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805b4b1 <Link_reply+0x31>
cmp    BYTE PTR [eax],0x24
je     805b4b9 <Link_reply+0x39>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
lea    eax,[eax+0x1]
push   eax
lea    eax,[ebp-0x118]
push   eax
call   8048c68 <strcpy@plt>
mov    DWORD PTR [ebp-0x51c],eax
pop    eax
pop    edx
push   0x806a108
lea    eax,[ebp-0x51c]
push   eax
call   8057a60 <get_token>
mov    DWORD PTR [ebp-0x524],eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edi
mov    esi,DWORD PTR [ebp-0x520]
push   esi
push   0x806c500
call   80576b0 <debug>
mov    esi,DWORD PTR ds:0x8076f0c
add    esp,0x20
test   esi,esi
mov    DWORD PTR [ebp-0x528],0x0
je     805b57e <Link_reply+0xfe>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
lea    eax,[esi+0x220]
push   eax
mov    ebx,DWORD PTR [ebp-0x524]
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805b578 <Link_reply+0xf8>
mov    ebx,DWORD PTR [esi+0xb3c]
test   ebx,ebx
mov    DWORD PTR [ebp-0x528],0x1
mov    DWORD PTR ds:0x8075e74,esi
je     805b578 <Link_reply+0xf8>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x208]
and    eax,0x21
cmp    eax,0x21
je     805b600 <Link_reply+0x180>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805b560 <Link_reply+0xe0>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    805b520 <Link_reply+0xa0>
mov    eax,DWORD PTR [ebp-0x528]
test   eax,eax
jne    805b4b1 <Link_reply+0x31>
sub    esp,0x8
push   0x65
mov    eax,DWORD PTR [ebp-0x524]
push   eax
call   8059760 <find_entity>
add    esp,0x10
test   eax,eax
je     805b4b1 <Link_reply+0x31>
mov    eax,DWORD PTR [eax+0x254]
push   eax
push   0x258
mov    esi,DWORD PTR ds:0x8076f08
push   esi
mov    ebx,DWORD PTR ds:0x8075d68
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     805b4b1 <Link_reply+0x31>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   edi
mov    edx,DWORD PTR [ebp-0x520]
push   edx
push   0x806bc9a
push   eax
call   805a590 <send_to_link>
jmp    805b4b1 <Link_reply+0x31>
jmp    805b600 <Link_reply+0x180>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
lea    eax,[ebx+0x20c]
push   eax
mov    ecx,DWORD PTR [ebp-0x51c]
push   ecx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805b572 <Link_reply+0xf2>
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0xc]
push   edx
call   80594d0 <unescape_string>
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x520]
push   eax
push   0x806794b
lea    eax,[ebp-0x518]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x18
lea    eax,[ebp-0x518]
push   eax
mov    eax,DWORD PTR [ebp-0x51c]
push   eax
call   8055c40 <send_chat>
jmp    805b4b1 <Link_reply+0x31>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [ebp-0x10],eax
je     805b6c7 <Link_needop+0x57>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   edi
mov    DWORD PTR ds:0x8075e74,ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     805b6c1 <Link_needop+0x51>
test   BYTE PTR [eax+0x38d],0x8
jne    805b6f0 <Link_needop+0x80>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805b6a0 <Link_needop+0x30>
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
push   edi
push   0x806ba45
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   805a5e0 <link_bcast>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    edx,DWORD PTR [ebp-0x10]
push   edx
push   eax
call   804cc30 <find_chanuser>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805b6c1 <Link_needop+0x51>
sub    esp,0x8
push   edi
push   eax
call   804ce40 <get_nuh>
mov    DWORD PTR [esp],eax
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
je     805b6c1 <Link_needop+0x51>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
cmp    al,0xc8
jne    805b6c1 <Link_needop+0x51>
test   BYTE PTR [esi+0x4],0x2
jne    805b6c1 <Link_needop+0x51>
push   eax
mov    esi,DWORD PTR [ebp-0x10]
push   esi
push   0x8067900
push   edi
call   80613b0 <sendmode>
jmp    805b6da <Link_needop+0x6a>
jmp    805b750 <Link_needinvite>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805b7ce <Link_needinvite+0x7e>
cmp    BYTE PTR [eax],0x0
je     805b7ce <Link_needinvite+0x7e>
mov    ebx,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
test   ebx,ebx
mov    ds:0x8076f00,eax
je     805b7b4 <Link_needinvite+0x64>
mov    esi,esi
sub    esp,0x8
lea    eax,[ebx+0x220]
push   eax
push   esi
mov    DWORD PTR ds:0x8075e74,ebx
call   804c060 <usermode>
add    esp,0x10
and    eax,0x2
jne    805b7e0 <Link_needinvite+0x90>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805b790 <Link_needinvite+0x40>
push   edi
push   esi
push   0x806bca9
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,ds:0x8076f00
push   ecx
mov    ds:0x8075e74,eax
call   805a5e0 <link_bcast>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x9
jle    805b7ae <Link_needinvite+0x5e>
push   eax
push   esi
push   eax
push   edi
call   8057c60 <getnick>
pop    ebx
pop    esi
push   eax
push   0x806839f
call   8061640 <send_to_server>
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
jmp    805b7ce <Link_needinvite+0x7e>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x28
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805b856 <Link_nick+0x36>
cmp    BYTE PTR [eax],0x0
jne    805b860 <Link_nick+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
push   0x64
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8059760 <find_entity>
add    esp,0x10
test   eax,eax
je     805b856 <Link_nick+0x36>
mov    esi,DWORD PTR [eax+0x4]
mov    DWORD PTR [ebp-0x1c],0x0
mov    eax,ds:0x8076f08
cmp    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [ebp-0x18],esi
mov    esi,DWORD PTR ds:0x8075d68
jge    805b856 <Link_nick+0x36>
lea    ebx,[esi+0xc]
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx-0xc],0x0
je     805b8bc <Link_nick+0x9c>
cmp    esi,DWORD PTR [ebp+0x8]
je     805b8b1 <Link_nick+0x91>
cmp    BYTE PTR [ebx-0x4],0x3
je     805b90e <Link_nick+0xee>
cmp    BYTE PTR [ebx-0x3],0x65
je     805b8e0 <Link_nick+0xc0>
mov    eax,ds:0x8076f08
inc    DWORD PTR [ebp-0x1c]
add    ebx,0x258
add    esi,0x258
cmp    DWORD PTR [ebp-0x1c],eax
jl     805b8a0 <Link_nick+0x80>
jmp    805b856 <Link_nick+0x36>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x18]
cmp    DWORD PTR [ebx+0x244],eax
jne    805b8b7 <Link_nick+0x97>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805b8b7 <Link_nick+0x97>
sub    esp,0x8
push   edi
push   ebx
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    805b8b7 <Link_nick+0x97>
sub    esp,0xc
push   edi
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806ba35
push   esi
call   805a590 <send_to_link>
add    esp,0x20
jmp    805b8b1 <Link_nick+0x91>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   edi,edi
mov    DWORD PTR [ebp-0x10],eax
je     805b9f3 <Link_userverify+0xc3>
cmp    BYTE PTR [edi],0x0
je     805b9f3 <Link_userverify+0xc3>
test   eax,eax
je     805b9f3 <Link_userverify+0xc3>
cmp    BYTE PTR [eax],0x0
je     805b9f3 <Link_userverify+0xc3>
mov    esi,DWORD PTR ds:0x8076f0c
mov    eax,ds:0x8075e74
test   esi,esi
mov    ds:0x8076f00,eax
je     805b9d6 <Link_userverify+0xa6>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    DWORD PTR ds:0x8075e74,esi
je     805ba40 <Link_userverify+0x110>
sub    esp,0xc
push   edi
call   8063280 <password_needed>
mov    ebx,eax
mov    DWORD PTR [esp],edi
call   8063210 <verified>
add    esp,0x10
test   ebx,ebx
je     805b9d0 <Link_userverify+0xa0>
test   eax,eax
jne    805b9d0 <Link_userverify+0xa0>
mov    eax,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [eax],0x0
jne    805b9fb <Link_userverify+0xcb>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    805b990 <Link_userverify+0x60>
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
push   edi
push   0x806bcb4
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,ds:0x8076f00
push   edx
mov    ds:0x8075e74,eax
call   805a5e0 <link_bcast>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   eax
push   edi
call   80632b0 <correct_password>
add    esp,0x10
test   eax,eax
je     805b9d0 <Link_userverify+0xa0>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   edi
add    eax,0xb2c
push   eax
call   8063800 <make_time>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     805b9d0 <Link_userverify+0xa0>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xc],eax
jmp    805b9d0 <Link_userverify+0xa0>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR ds:0x8076f00,esi
jne    805b9a1 <Link_userverify+0x71>
jmp    805b9d0 <Link_userverify+0xa0>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x38
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x18],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x20],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   esi,esi
mov    DWORD PTR [ebp-0x24],eax
je     805babc <Link_useradd+0x6c>
cmp    BYTE PTR [esi],0x0
jne    805bae0 <Link_useradd+0x90>
sub    esp,0x8
push   0x61
push   0x806c540
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     805bafe <Link_useradd+0xae>
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
js     805bafe <Link_useradd+0xae>
cmp    ebx,0xc8
jle    805bb05 <Link_useradd+0xb5>
sub    esp,0x8
push   0x62
jmp    805bac1 <Link_useradd+0x71>
mov    eax,DWORD PTR [ebp-0x18]
mov    dl,BYTE PTR [eax]
lea    eax,[edx-0x30]
cmp    al,0x1
ja     805bb1a <Link_useradd+0xca>
mov    eax,DWORD PTR [ebp-0x18]
cmp    BYTE PTR [eax+0x1],0x0
je     805bb21 <Link_useradd+0xd1>
sub    esp,0x8
push   0x63
jmp    805bac1 <Link_useradd+0x71>
cmp    dl,0x31
sete   al
and    eax,0xff
mov    edi,eax
mov    eax,DWORD PTR [ebp-0x1c]
mov    dl,BYTE PTR [eax]
lea    eax,[edx-0x30]
cmp    al,0x1
ja     805bb43 <Link_useradd+0xf3>
mov    eax,DWORD PTR [ebp-0x1c]
cmp    BYTE PTR [eax+0x1],0x0
je     805bb4d <Link_useradd+0xfd>
sub    esp,0x8
push   0x64
jmp    805bac1 <Link_useradd+0x71>
cmp    dl,0x31
sete   al
and    eax,0xff
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x20]
mov    dl,BYTE PTR [eax]
lea    eax,[edx-0x30]
cmp    al,0x1
ja     805bb70 <Link_useradd+0x120>
mov    eax,DWORD PTR [ebp-0x20]
cmp    BYTE PTR [eax+0x1],0x0
je     805bb7a <Link_useradd+0x12a>
sub    esp,0x8
push   0x65
jmp    805bac1 <Link_useradd+0x71>
cmp    dl,0x31
sete   al
sub    esp,0xc
and    eax,0xff
push   esi
mov    DWORD PTR [ebp-0x28],eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     805bba6 <Link_useradd+0x156>
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x30],eax
js     805bba6 <Link_useradd+0x156>
cmp    eax,0x4
jle    805bbb0 <Link_useradd+0x160>
sub    esp,0x8
push   0x66
jmp    805bac1 <Link_useradd+0x71>
mov    esi,DWORD PTR ds:0x8076f0c
test   esi,esi
je     805bc37 <Link_useradd+0x1e7>
mov    al,BYTE PTR [ebp-0x2c]
shl    eax,0x2
mov    BYTE PTR [ebp-0x31],al
test   BYTE PTR [esi+0x3ac],0x1
je     805bc83 <Link_useradd+0x233>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806c580
mov    DWORD PTR ds:0x8075e74,esi
call   80576b0 <debug>
pop    eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
je     805bbfe <Link_useradd+0x1ae>
test   BYTE PTR [eax+0x3c],0x20
je     805bc72 <Link_useradd+0x222>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x24]
push   eax
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
mov    edx,DWORD PTR [ebp-0x30]
push   edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
push   ebx
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8062370 <add_to_userlist>
mov    edx,eax
mov    al,BYTE PTR [eax+0x3c]
and    eax,0xfffffffa
or     eax,edi
or     al,BYTE PTR [ebp-0x31]
or     eax,0x18
add    esp,0x20
mov    BYTE PTR [edx+0x3c],al
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    805bbc3 <Link_useradd+0x173>
mov    eax,DWORD PTR [ebp-0x24]
sub    esp,0x8
test   eax,eax
je     805bc6b <Link_useradd+0x21b>
push   eax
mov    eax,DWORD PTR [ebp-0x30]
push   eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
push   edi
push   ebx
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   0x806c5c0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   805a5e0 <link_bcast>
jmp    805bacb <Link_useradd+0x7b>
mov    eax,0x8067180
jmp    805bc41 <Link_useradd+0x1f1>
sub    esp,0xc
push   eax
call   80629d0 <remove_user>
add    esp,0x10
jmp    805bbfe <Link_useradd+0x1ae>
sub    esp,0xc
push   0x806c5e0
call   80576b0 <debug>
add    esp,0x10
jmp    805bc31 <Link_useradd+0x1e1>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805bcff <Link_usermask+0x5f>
cmp    BYTE PTR [eax],0x0
je     805bcff <Link_usermask+0x5f>
mov    ebx,DWORD PTR ds:0x8076f0c
test   ebx,ebx
je     805bcef <Link_usermask+0x4f>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
test   BYTE PTR [ebx+0x3ac],0x1
jne    805bd10 <Link_usermask+0x70>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805bce0 <Link_usermask+0x40>
push   esi
push   edi
push   0x806bcc1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a5e0 <link_bcast>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
mov    DWORD PTR ds:0x8075e74,ebx
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
je     805bce9 <Link_usermask+0x49>
test   BYTE PTR [eax+0x3c],0x20
jne    805bce9 <Link_usermask+0x49>
sub    esp,0x8
push   esi
push   eax
call   80620b0 <addmasktouser>
add    esp,0x10
jmp    805bce9 <Link_usermask+0x49>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   edi,edi
mov    DWORD PTR [ebp-0x10],eax
je     805bdae <Link_userlock+0x6e>
cmp    BYTE PTR [edi],0x0
je     805bdae <Link_userlock+0x6e>
mov    ebx,DWORD PTR ds:0x8076f0c
test   ebx,ebx
je     805bd8f <Link_userlock+0x4f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
test   BYTE PTR [ebx+0x3ac],0x1
jne    805bdd0 <Link_userlock+0x90>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805bd80 <Link_userlock+0x40>
mov    ebx,DWORD PTR [ebp-0x10]
test   ebx,ebx
je     805bd9e <Link_userlock+0x5e>
mov    eax,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [eax],0x0
jne    805bdb6 <Link_userlock+0x76>
push   edx
push   edi
push   0x806bcd2
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a5e0 <link_bcast>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x806bc58
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   805a590 <send_to_link>
add    esp,0x10
jmp    805bd9e <Link_userlock+0x5e>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   edi
mov    DWORD PTR ds:0x8075e74,ebx
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805bd89 <Link_userlock+0x49>
test   BYTE PTR [eax+0x3c],0x20
jne    805bd89 <Link_userlock+0x49>
sub    esp,0x8
lea    eax,[eax+0x8]
push   eax
push   0x806c620
call   80576b0 <debug>
or     BYTE PTR [esi+0x3c],0x20
add    esp,0x10
jmp    805bd89 <Link_userlock+0x49>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x1c
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x23c]
test   eax,eax
jne    805be30 <Link_usersend+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
add    eax,0x4
push   eax
lea    eax,[ebp-0x28]
push   eax
call   8048c68 <strcpy@plt>
mov    ebx,DWORD PTR ds:0x8076f0c
xor    edi,edi
add    esp,0x10
test   ebx,ebx
je     805be7f <Link_usersend+0x6f>
nop
sub    esp,0xc
lea    edx,[ebp-0x28]
push   edx
mov    DWORD PTR ds:0x8075e74,ebx
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     805be79 <Link_usersend+0x69>
mov    al,BYTE PTR [eax+0x3c]
and    eax,0x28
cmp    al,0x28
je     805bf60 <Link_usersend+0x150>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805be50 <Link_usersend+0x40>
test   edi,edi
je     805be26 <Link_usersend+0x16>
sub    esp,0x8
cmp    BYTE PTR [edi+0x15],0x0
je     805bf56 <Link_usersend+0x146>
lea    eax,[edi+0x15]
push   eax
mov    ax,WORD PTR [edi+0x3c]
shr    ax,0x6
and    eax,0x7
push   eax
mov    al,BYTE PTR [edi+0x3c]
shr    al,1
and    eax,0x1
push   eax
mov    al,BYTE PTR [edi+0x3c]
shr    al,0x2
and    eax,0x1
push   eax
xor    eax,eax
mov    al,BYTE PTR [edi+0x3c]
and    eax,0x1
push   eax
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
mov    eax,DWORD PTR [edi+0x2c]
push   eax
lea    esi,[edi+0x8]
push   esi
push   0x806c5c0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a590 <send_to_link>
mov    ebx,DWORD PTR [edi+0x38]
add    esp,0x30
test   ebx,ebx
je     805bf0c <Link_usersend+0xfc>
nop
lea    esi,[esi+eiz*1+0x0]
lea    eax,[ebx+0x4]
push   eax
push   esi
push   0x806bcc1
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   805a590 <send_to_link>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    805bef0 <Link_usersend+0xe0>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax+0x23c]
sub    esp,0xc
add    eax,0x23c
mov    ebx,DWORD PTR [ebx]
push   eax
call   8057920 <MyFree>
mov    edx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    DWORD PTR [edx+0x23c],ebx
mov    eax,0x806bce0
je     805bf4f <Link_usersend+0x13f>
push   eax
lea    eax,[ebp-0x28]
push   eax
push   0x806bce3
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   805a590 <send_to_link>
jmp    805be26 <Link_usersend+0x16>
mov    eax,0x8067180
jmp    805bf37 <Link_usersend+0x127>
mov    eax,0x8067180
jmp    805be93 <Link_usersend+0x83>
mov    edi,edx
jmp    805be79 <Link_usersend+0x69>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    ebx,DWORD PTR ds:0x8075d28
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     805c09f <pipeuser_refresh+0x12f>
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3b0]
sub    esp,0xc
or     BYTE PTR [eax+0x211],0x1
push   esi
push   esi
lea    ebx,[edx+0xa8]
push   ebx
push   0x806c660
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3b0]
mov    ecx,DWORD PTR [eax]
push   ecx
call   8061260 <send_to_socket>
mov    eax,ds:0x8075e74
add    esp,0x14
mov    edx,DWORD PTR [eax+0x3b4]
push   edx
push   esi
push   ebx
push   0x806bd79
mov    eax,DWORD PTR [eax+0x3b0]
mov    ecx,DWORD PTR [eax]
push   ecx
call   8061260 <send_to_socket>
mov    eax,ds:0x8075e74
add    esp,0x14
mov    edx,DWORD PTR [eax+0x3b8]
push   edx
push   esi
push   ebx
push   0x806bd88
mov    eax,DWORD PTR [eax+0x3b0]
mov    ecx,DWORD PTR [eax]
push   ecx
call   8061260 <send_to_socket>
mov    eax,ds:0x8075e74
add    esp,0x14
mov    edx,DWORD PTR [eax+0x3bc]
push   edx
push   esi
push   ebx
push   0x806bd97
mov    eax,DWORD PTR [eax+0x3b0]
mov    ecx,DWORD PTR [eax]
push   ecx
call   8061260 <send_to_socket>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x14
lea    eax,[edx+0x220]
push   eax
lea    eax,[edx+0x2e0]
push   eax
push   esi
push   0x806bda6
mov    eax,DWORD PTR [edx+0x3b0]
mov    edx,DWORD PTR [eax]
push   edx
call   8061260 <send_to_socket>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
add    esp,0x20
test   ebx,ebx
je     805c09f <pipeuser_refresh+0x12f>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
test   BYTE PTR [ebx+0x38d],0x10
jne    805c0b0 <pipeuser_refresh+0x140>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c090 <pipeuser_refresh+0x120>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806bdb7
call   8061640 <send_to_server>
pop    eax
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [ebx+0x4]
push   eax
lea    eax,[edx+0x2e0]
push   eax
lea    eax,[edx+0x220]
push   eax
push   0x806bdc1
mov    eax,DWORD PTR [edx+0x3b0]
mov    eax,DWORD PTR [eax]
push   eax
call   8061260 <send_to_socket>
add    esp,0x20
jmp    805c099 <pipeuser_refresh+0x129>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2a8
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
mov    esi,eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x29c],eax
pop    eax
pop    edx
mov    edi,DWORD PTR ds:0x8071100
push   edi
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805c860 <process_link_input+0x760>
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax+0xa],0x0
je     805c184 <process_link_input+0x84>
mov    ecx,DWORD PTR ds:0x8071108
test   ecx,ecx
mov    ebx,0x1
je     805c184 <process_link_input+0x84>
mov    edi,0x8071100
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    edx,DWORD PTR [edi+ebx*8]
push   edx
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805c840 <process_link_input+0x740>
inc    ebx
mov    eax,DWORD PTR [ebx*8+0x8071100]
test   eax,eax
jne    805c160 <process_link_input+0x60>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dl,BYTE PTR [ecx+0x9]
cmp    dl,0x63
je     805c500 <process_link_input+0x400>
cmp    dl,0x32
je     805c500 <process_link_input+0x400>
mov    ecx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ecx+0x8]
sub    eax,0x2
cmp    al,0x1
jbe    805c220 <process_link_input+0x120>
test   dl,dl
jne    805c275 <process_link_input+0x175>
mov    ebx,DWORD PTR ds:0x8076f0c
test   ebx,ebx
je     805c1f2 <process_link_input+0xf2>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   esi
mov    DWORD PTR ds:0x8075e74,ebx
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805c1ec <process_link_input+0xec>
test   BYTE PTR [eax+0x3c],0x10
je     805c228 <process_link_input+0x128>
mov    eax,ds:0x8075e74
test   BYTE PTR [eax+0x3ac],0x1
jne    805c228 <process_link_input+0x128>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c1c0 <process_link_input+0xc0>
sub    esp,0x8
push   0x806bdd1
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   805a590 <send_to_link>
mov    ecx,DWORD PTR [ebp+0x8]
mov    BYTE PTR [ecx+0x9],0x7
pop    eax
pop    edx
push   esi
push   0x806c6a0
call   80576b0 <debug>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
lea    ebx,[edi+0x8]
mov    eax,DWORD PTR [ebp+0x8]
push   ebx
add    eax,0xc
push   eax
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x806bdd1
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805a590 <send_to_link>
mov    eax,DWORD PTR [ebp+0x8]
mov    BYTE PTR [eax+0x9],0x7
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edx+0x240],eax
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
push   ebx
push   esi
push   0x806c6e0
jmp    805c212 <process_link_input+0x112>
cmp    dl,0x7
jne    805c220 <process_link_input+0x120>
push   eax
mov    eax,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [eax+0x250]
push   edi
mov    edi,eax
add    edi,0xc
push   edi
push   0x806c720
call   80576b0 <debug>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
je     805c2b5 <process_link_input+0x1b5>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x240]
cmp    ebx,eax
je     805c2b5 <process_link_input+0x1b5>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c2ab <process_link_input+0x1ab>
mov    ecx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ecx+0xc],0x0
je     805c4b6 <process_link_input+0x3b6>
test   ebx,ebx
mov    DWORD PTR ds:0x8075e74,ebx
je     805c4b6 <process_link_input+0x3b6>
sub    esp,0xc
push   edi
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805c4b6 <process_link_input+0x3b6>
test   BYTE PTR [eax+0x3c],0x20
sete   al
and    eax,0xff
dec    eax
and    edi,eax
je     805c4b6 <process_link_input+0x3b6>
test   BYTE PTR [edi+0x3c],0x10
je     805c318 <process_link_input+0x218>
mov    eax,ds:0x8075e74
test   BYTE PTR [eax+0x3ac],0x1
sete   al
and    eax,0xff
dec    eax
and    edi,eax
test   edi,edi
je     805c4b6 <process_link_input+0x3b6>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x9
setle  al
and    eax,0xff
dec    eax
and    edi,eax
je     805c4b6 <process_link_input+0x3b6>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
cmp    al,0xc8
sete   al
and    eax,0xff
dec    eax
and    edi,eax
je     805c4b6 <process_link_input+0x3b6>
cmp    BYTE PTR [edi+0x15],0x0
jne    805c4d9 <process_link_input+0x3d9>
test   edi,edi
je     805c4b6 <process_link_input+0x3b6>
push   ebx
lea    esi,[edi+0x8]
push   esi
push   0x806bdee
lea    ebx,[ebp-0x98]
push   ebx
call   8048f18 <sprintf@plt>
push   ebx
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
push   esi
push   0x806c760
call   80576b0 <debug>
add    esp,0x14
push   0x264
mov    DWORD PTR ds:0x8075d6c,0x805c100
call   8057860 <MyMalloc>
pop    edx
pop    ecx
push   ebx
mov    DWORD PTR [ebp-0x2a0],eax
add    eax,0x20c
push   eax
mov    DWORD PTR [ebp-0x2a4],eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x244]
mov    ecx,DWORD PTR [ebp-0x2a0]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,ds:0x8075d20
mov    DWORD PTR [ecx+0x260],eax
mov    DWORD PTR [ecx+0x208],0x23
mov    DWORD PTR [esp],ecx
call   8055320 <add_client>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
mov    DWORD PTR [esp],eax
mov    eax,ds:0x8075e74
push   esi
add    eax,0x220
push   eax
push   0x806a7f1
lea    ebx,[ebp-0x298]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x20
push   ebx
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8075d20
push   ecx
call   8057e90 <time2medium>
add    esp,0xc
push   eax
push   0x806795b
mov    eax,DWORD PTR [ebp-0x2a0]
mov    edx,DWORD PTR [eax+0x4]
push   edx
call   8061260 <send_to_socket>
add    esp,0x10
test   eax,eax
js     805c4a6 <process_link_input+0x3a6>
sub    esp,0xc
push   ebx
call   804b7d0 <send_global_statmsg>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
add    esp,0x10
cmp    al,0x64
je     805c486 <process_link_input+0x386>
sub    esp,0xc
push   0x806be03
call   80576b0 <debug>
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ecx],0x0
jmp    805c220 <process_link_input+0x120>
push   0x64
mov    eax,ds:0x8075e74
push   0x0
add    eax,0x220
push   eax
mov    eax,DWORD PTR [ebp-0x2a4]
push   eax
call   8053dd0 <do_statmsg>
add    esp,0x10
jmp    805c46b <process_link_input+0x36b>
mov    edx,DWORD PTR [ebp-0x2a0]
mov    DWORD PTR [edx+0x208],0x80
mov    eax,DWORD PTR [ebp+0x8]
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x244]
push   eax
call   8048fc8 <close@plt>
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edx],0x0
add    esp,0x10
jmp    805c220 <process_link_input+0x120>
sub    esp,0x8
lea    eax,[edi+0x15]
push   eax
push   esi
call   8059180 <passmatch>
add    esp,0x10
test   eax,eax
sete   al
and    eax,0xff
dec    eax
and    edi,eax
jmp    805c362 <process_link_input+0x262>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x806b467
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805c220 <process_link_input+0x120>
sub    esp,0x8
push   0x806adb2
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805c5a9 <process_link_input+0x4a9>
mov    eax,ds:0x8075e6c
test   eax,eax
je     805c567 <process_link_input+0x467>
sub    esp,0xc
push   0x8075e6c
call   8057920 <MyFree>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
sub    esp,0xc
mov    ecx,DWORD PTR [eax+0x244]
push   ecx
call   8048fc8 <close@plt>
mov    edx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [edx],0x0
jmp    805c220 <process_link_input+0x120>
mov    eax,DWORD PTR [ebp+0x8]
mov    BYTE PTR [eax+0x9],0x32
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x29c]
push   eax
push   0x8075e6c
mov    DWORD PTR ds:0x8075d6c,0x805c100
call   80579d0 <mstrcpy>
add    esp,0xc
mov    eax,ds:0x8075e6c
push   eax
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x244]
push   eax
push   0x806c7a0
jmp    805c212 <process_link_input+0x112>
sub    esp,0x8
push   0x80672a8
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805c66f <process_link_input+0x56f>
mov    eax,DWORD PTR [ebp-0x29c]
test   eax,eax
je     805c66f <process_link_input+0x56f>
mov    dl,BYTE PTR [eax]
test   dl,dl
je     805c66f <process_link_input+0x56f>
cmp    dl,0x3a
je     805c825 <process_link_input+0x725>
sub    esp,0x8
push   0x8069e39
lea    edi,[ebp-0x29c]
push   edi
call   8057a60 <get_token>
mov    ebx,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   ebx,ebx
mov    esi,eax
mov    DWORD PTR ds:0x8075e74,0x0
je     805c64c <process_link_input+0x54c>
sub    esp,0x8
lea    eax,[ebx+0x220]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805c81a <process_link_input+0x71a>
sub    esp,0x8
lea    eax,[ebx+0x22d]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805c81a <process_link_input+0x71a>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c610 <process_link_input+0x510>
mov    eax,ds:0x8075e74
test   eax,eax
jne    805c681 <process_link_input+0x581>
sub    esp,0xc
mov    eax,ds:0x8076f0c
push   0x806c7e0
mov    ds:0x8075e74,eax
call   80576b0 <debug>
add    esp,0x10
mov    eax,ds:0x8075e6c
test   eax,eax
je     805c547 <process_link_input+0x447>
jmp    805c537 <process_link_input+0x437>
sub    esp,0x8
push   0x8069e39
push   edi
call   8057a60 <get_token>
mov    DWORD PTR [esp],eax
mov    esi,eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805c804 <process_link_input+0x704>
sub    esp,0x8
push   0x806e306
mov    ecx,DWORD PTR [eax+0x2c]
push   ecx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805c7ee <process_link_input+0x6ee>
mov    edx,DWORD PTR [edi+0x3c]
mov    eax,edx
shr    eax,0x9
and    eax,0xff
cmp    eax,0x63
jle    805c6f1 <process_link_input+0x5f1>
sub    esp,0x8
lea    eax,[edi+0x15]
push   eax
mov    eax,DWORD PTR [ebp-0x29c]
push   eax
call   8059180 <passmatch>
add    esp,0x10
test   eax,eax
jne    805c70d <process_link_input+0x60d>
mov    edx,DWORD PTR [edi+0x3c]
shr    edx,0x9
push   eax
movzx  eax,dl
push   eax
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x244]
push   eax
push   0x806c820
jmp    805c667 <process_link_input+0x567>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x3b0]
test   eax,eax
je     805c78b <process_link_input+0x68b>
sub    esp,0xc
add    eax,0x204
push   eax
lea    eax,[edx+0x220]
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806c860
lea    ebx,[ebp-0x298]
push   ebx
call   8048f18 <sprintf@plt>
mov    esi,ebx
add    esp,0x1c
mov    ecx,ebx
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     805c749 <process_link_input+0x649>
test   edx,0x8080
jne    805c76e <process_link_input+0x66e>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,esi
push   ecx
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ecx+0x244]
push   eax
call   8048d98 <write@plt>
jmp    805c66c <process_link_input+0x56c>
sub    esp,0xc
push   0x218
mov    DWORD PTR ds:0x8075d6c,0x805c100
call   8057860 <MyMalloc>
mov    edx,DWORD PTR [ebp+0x8]
mov    ebx,eax
mov    eax,DWORD PTR [edx+0x244]
mov    DWORD PTR [ebx],eax
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x214],eax
pop    edi
pop    eax
push   esi
lea    esi,[ebx+0x204]
push   esi
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    eax,ds:0x8075e74
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax+0x3b0],ebx
mov    DWORD PTR [ecx],0x0
push   esi
mov    ebx,DWORD PTR [ebx]
push   ebx
push   0x806c8a0
jmp    805c212 <process_link_input+0x112>
push   edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x244]
push   eax
push   0x806c8e0
jmp    805c667 <process_link_input+0x567>
push   edi
push   esi
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ecx+0x244]
push   ebx
push   0x806be1a
jmp    805c667 <process_link_input+0x567>
mov    DWORD PTR ds:0x8075e74,ebx
jmp    805c64c <process_link_input+0x54c>
inc    eax
mov    DWORD PTR [ebp-0x29c],eax
jmp    805c5e3 <process_link_input+0x4e3>
jmp    805c840 <process_link_input+0x740>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x29c]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   DWORD PTR [edi+ebx*8+0x4]
jmp    805c220 <process_link_input+0x120>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    esi,DWORD PTR [ebp-0x29c]
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   DWORD PTR ds:0x8071104
jmp    805c220 <process_link_input+0x120>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805c8d8 <pu_nick+0x48>
mov    al,BYTE PTR [eax]
test   al,al
je     805c8d8 <pu_nick+0x48>
cmp    al,0x3a
je     805c950 <pu_nick+0xc0>
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3b0]
mov    al,BYTE PTR [eax+0x211]
and    eax,0x1
test   al,al
jne    805c8e0 <pu_nick+0x50>
sub    esp,0xc
push   ebx
call   805bf70 <pipeuser_refresh>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
sub    esp,0xc
push   ebx
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
jne    805c920 <pu_nick+0x90>
sub    esp,0xc
mov    eax,ds:0x8075e74
push   ebx
lea    edx,[eax+0x220]
push   edx
push   0x806cb93
push   0x806c920
mov    eax,DWORD PTR [eax+0x3b0]
mov    eax,DWORD PTR [eax]
push   eax
call   8061260 <send_to_socket>
jmp    805c8d8 <pu_nick+0x48>
lea    esi,[esi+0x0]
sub    esp,0x8
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x22d
push   eax
call   8048c68 <strcpy@plt>
pop    ecx
pop    eax
push   ebx
push   0x806be37
call   8061640 <send_to_server>
jmp    805c8d8 <pu_nick+0x48>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    ebx
jmp    805c8b7 <pu_nick+0x27>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    edx,DWORD PTR ds:0x8075e74
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     805c99d <pu_quit+0x3d>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x38d]
test   eax,0x40
jne    805ca10 <pu_quit+0xb0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c980 <pu_quit+0x20>
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0xb38]
mov    al,BYTE PTR [eax+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     805c9db <pu_quit+0x7b>
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     805c9d5 <pu_quit+0x75>
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     805c9d5 <pu_quit+0x75>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805c9c0 <pu_quit+0x60>
mov    DWORD PTR [edx+0xb38],ebx
mov    eax,DWORD PTR [edx+0x3b0]
sub    esp,0xc
mov    eax,DWORD PTR [eax]
push   eax
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
add    eax,0x3b0
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
and    eax,0x4f
or     eax,0x20
mov    BYTE PTR [ebx+0x38d],al
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806a0b4
call   8061640 <send_to_server>
add    esp,0x10
jmp    805c991 <pu_quit+0x31>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x8067271
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805ca63 <pu_join+0x23>
cmp    BYTE PTR [eax],0x23
je     805ca70 <pu_join+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x1
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
jne    805ca63 <pu_join+0x23>
push   eax
push   0x1
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
push   ebx
call   804b200 <join_channel>
pop    eax
pop    edx
push   0x3
push   ebx
call   804b050 <find_channel>
or     BYTE PTR [eax+0x38d],0x40
jmp    805ca63 <pu_join+0x23>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x8067271
lea    eax,[ebp+0x8]
push   eax
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     805cad1 <pu_part+0x21>
cmp    BYTE PTR [eax],0x23
je     805cae0 <pu_part+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805cad1 <pu_part+0x21>
mov    al,BYTE PTR [eax+0x38d]
and    eax,0x4f
or     eax,0x20
sub    esp,0x8
mov    BYTE PTR [ebx+0x38d],al
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806a0b4
call   8061640 <send_to_server>
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    ebx,DWORD PTR [edx+0xb38]
jne    805cad1 <pu_part+0x21>
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     805cb55 <pu_part+0xa5>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x38d]
shr    al,0x4
and    eax,0x3
dec    eax
je     805cb55 <pu_part+0xa5>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805cb40 <pu_part+0x90>
mov    DWORD PTR [edx+0xb38],ebx
jmp    805cad1 <pu_part+0x21>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805cb7e <pu_privmsg+0x1e>
cmp    BYTE PTR [eax],0x0
jne    805cb90 <pu_privmsg+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x806d397
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805cb7e <pu_privmsg+0x1e>
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   ebx
push   0x806be40
call   8061640 <send_to_server>
jmp    805cb7e <pu_privmsg+0x1e>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x21c
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0x3b0]
mov    al,BYTE PTR [eax+0x211]
and    eax,0x1
test   al,al
jne    805cbf2 <parse_pipe_input+0x32>
mov    eax,ds:0x8075e6c
test   eax,eax
jne    805ccd2 <parse_pipe_input+0x112>
push   eax
lea    eax,[ebp-0x218]
push   eax
mov    eax,DWORD PTR [edx+0x3b0]
add    eax,0x4
push   eax
mov    eax,DWORD PTR [edx+0x3b0]
mov    eax,DWORD PTR [eax]
push   eax
call   8061780 <sockread>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x21c],eax
je     805cca0 <parse_pipe_input+0xe0>
sub    esp,0xc
lea    eax,[ebp-0x21c]
push   eax
call   8057b00 <chop>
mov    esi,eax
mov    eax,ds:0x80711e0
xor    ebx,ebx
add    esp,0x10
test   eax,eax
je     805cc70 <parse_pipe_input+0xb0>
mov    edi,0x80711e0
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [edi+ebx*8]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805cc8b <parse_pipe_input+0xcb>
inc    ebx
mov    ecx,DWORD PTR [ebx*8+0x80711e0]
test   ecx,ecx
jne    805cc50 <parse_pipe_input+0x90>
push   edx
mov    eax,DWORD PTR [ebp-0x21c]
push   eax
push   esi
push   0x8069012
call   8061640 <send_to_server>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x21c]
push   eax
call   DWORD PTR [edi+ebx*8+0x4]
jmp    805cc83 <parse_pipe_input+0xc3>
nop
lea    esi,[esi+eiz*1+0x0]
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
cmp    eax,0x4
je     805cc83 <parse_pipe_input+0xc3>
cmp    eax,0x23
je     805cc83 <parse_pipe_input+0xc3>
sub    esp,0xc
push   0x806c960
call   80576b0 <debug>
mov    eax,ds:0x8075e74
add    eax,0x3b0
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
jmp    805cc83 <parse_pipe_input+0xc3>
sub    esp,0xc
push   eax
call   805bf70 <pipeuser_refresh>
mov    DWORD PTR [esp],0x8075e6c
call   8057920 <MyFree>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
jmp    805cbf2 <parse_pipe_input+0x32>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x49c
mov    edx,DWORD PTR ds:0x8075e2c
cmp    edx,0xffffffff
je     805cd33 <parse_link_input+0x33>
mov    eax,edx
shr    eax,0x5
mov    ecx,edx
and    ecx,0x1f
mov    eax,DWORD PTR [eax*4+0x8075ca0]
shr    eax,cl
and    eax,0x1
jne    805d211 <parse_link_input+0x511>
xor    esi,esi
mov    ebx,DWORD PTR ds:0x8076f08
mov    edx,DWORD PTR ds:0x8075d68
cmp    esi,ebx
mov    DWORD PTR [ebp-0x49c],edx
jge    805cdd8 <parse_link_input+0xd8>
nop
mov    ecx,DWORD PTR [ebp-0x49c]
cmp    BYTE PTR [ecx],0x0
je     805cdc5 <parse_link_input+0xc5>
mov    edx,DWORD PTR [ecx+0x244]
cmp    edx,0xffffffff
je     805cdb5 <parse_link_input+0xb5>
mov    eax,edx
shr    eax,0x5
mov    ecx,edx
and    ecx,0x1f
mov    eax,DWORD PTR [eax*4+0x8076f20]
shr    eax,cl
and    eax,0x1
jne    805d1e0 <parse_link_input+0x4e0>
cmp    edx,0xffffffff
je     805cdb5 <parse_link_input+0xb5>
mov    ecx,edx
shr    edx,0x5
and    ecx,0x1f
mov    eax,DWORD PTR [edx*4+0x8075ca0]
shr    eax,cl
and    eax,0x1
jne    805d112 <parse_link_input+0x412>
mov    edi,DWORD PTR [ebp-0x49c]
mov    eax,DWORD PTR [edi+0x248]
test   eax,eax
jne    805d112 <parse_link_input+0x412>
mov    edi,DWORD PTR [ebp-0x49c]
cmp    BYTE PTR [edi+0x8],0x1
je     805d070 <parse_link_input+0x370>
inc    esi
add    DWORD PTR [ebp-0x49c],0x258
cmp    esi,ebx
jl     805cd50 <parse_link_input+0x50>
mov    eax,ds:0x8075464
test   eax,eax
je     805cdff <parse_link_input+0xff>
test   BYTE PTR ds:0x8076f04,0x20
je     805cdff <parse_link_input+0xff>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,edx
sub    eax,DWORD PTR ds:0x8075d84
cmp    eax,0xef
jg     805ce07 <parse_link_input+0x107>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   0x806be57
mov    DWORD PTR ds:0x8075d84,edx
call   80576b0 <debug>
mov    edx,DWORD PTR ds:0x8075d88
xor    esi,esi
mov    eax,ds:0x8075464
add    esp,0x10
cmp    esi,edx
mov    DWORD PTR [ebp-0x490],eax
mov    ecx,eax
mov    eax,edx
jge    805cdff <parse_link_input+0xff>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp-0x490]
cmp    BYTE PTR [ebx],0x0
je     805ce5f <parse_link_input+0x15f>
mov    edi,DWORD PTR [ebx+0x98]
test   edi,edi
je     805ce5f <parse_link_input+0x15f>
mov    ebx,DWORD PTR [ebx+0x9c]
test   ebx,ebx
je     805ced5 <parse_link_input+0x1d5>
inc    esi
add    DWORD PTR [ebp-0x490],0xa0
cmp    esi,eax
jl     805ce40 <parse_link_input+0x140>
xor    esi,esi
cmp    esi,eax
mov    DWORD PTR [ebp-0x490],ecx
jge    805cdff <parse_link_input+0xff>
mov    edi,DWORD PTR [ebp-0x490]
cmp    BYTE PTR [edi],0x0
je     805ce91 <parse_link_input+0x191>
mov    eax,DWORD PTR [edi+0x9c]
dec    eax
cmp    eax,0x1
jbe    805cea5 <parse_link_input+0x1a5>
inc    esi
add    DWORD PTR [ebp-0x490],0xa0
cmp    esi,edx
jl     805ce7a <parse_link_input+0x17a>
jmp    805cdff <parse_link_input+0xff>
mov    eax,DWORD PTR [edi+0x98]
mov    DWORD PTR [edi+0x9c],0x0
push   eax
mov    eax,edi
add    eax,0x48
push   eax
sub    eax,0x40
push   eax
push   0x806c9a0
call   8059540 <wle>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075d88
jmp    805ce91 <parse_link_input+0x191>
xor    esi,esi
mov    ebx,DWORD PTR ds:0x8076f08
mov    eax,ds:0x8075d68
cmp    esi,ebx
mov    DWORD PTR [ebp-0x49c],eax
jge    805d059 <parse_link_input+0x359>
mov    edx,DWORD PTR [ebp-0x490]
add    edx,0x8
mov    DWORD PTR [ebp-0x498],edx
mov    ecx,DWORD PTR [ebp-0x49c]
cmp    BYTE PTR [ecx],0x0
je     805cf14 <parse_link_input+0x214>
cmp    BYTE PTR [ecx+0x9],0x64
je     805d001 <parse_link_input+0x301>
inc    esi
add    DWORD PTR [ebp-0x49c],0x258
cmp    esi,ebx
jl     805ceff <parse_link_input+0x1ff>
mov    edi,DWORD PTR [ebp-0x490]
mov    eax,DWORD PTR [edi+0x98]
mov    ebx,edi
push   eax
add    ebx,0x48
push   ebx
mov    esi,DWORD PTR [ebp-0x498]
push   esi
push   0x806c9e0
call   8059540 <wle>
mov    ecx,DWORD PTR [edi+0x98]
push   ecx
push   ebx
mov    edx,DWORD PTR [ebp-0x498]
push   edx
push   0x806ca20
call   8059540 <wle>
lea    edx,[ebp-0x278]
mov    DWORD PTR [edi+0x9c],0x1
cld    
mov    edi,edx
xor    eax,eax
mov    ecx,0x96
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x80766c0
mov    DWORD PTR [ebp-0x274],eax
inc    eax
add    esp,0x18
mov    ds:0x80766c0,eax
mov    eax,DWORD PTR [ebp-0x498]
push   eax
lea    eax,[ebp-0x26c]
push   eax
mov    esi,edx
mov    BYTE PTR [ebp-0x278],0x1
mov    BYTE PTR [ebp-0x26e],0x1
mov    BYTE PTR [ebp-0x26d],0x1
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    eax,ds:0x8075d20
push   0x0
mov    DWORD PTR [ebp-0x2c],eax
mov    BYTE PTR [ebp-0x270],0x1
mov    eax,DWORD PTR [ebp-0x490]
mov    eax,DWORD PTR [eax+0x98]
push   eax
push   ebx
call   8060fc0 <SockConnect>
push   0x258
push   0x8076f08
push   esi
push   0x8075d68
mov    DWORD PTR [ebp-0x34],eax
call   8059260 <addstruct>
add    esp,0x20
jmp    805cdff <parse_link_input+0xff>
mov    eax,ecx
sub    esp,0x8
add    eax,0xc
push   eax
mov    eax,DWORD PTR [ebp-0x498]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805d028 <parse_link_input+0x328>
mov    ebx,DWORD PTR ds:0x8076f08
jmp    805cf14 <parse_link_input+0x214>
mov    eax,DWORD PTR [ebp-0x490]
mov    ecx,DWORD PTR [eax+0x98]
mov    DWORD PTR [eax+0x9c],0x2
push   ecx
add    eax,0x48
push   eax
mov    edx,DWORD PTR [ebp-0x498]
push   edx
push   0x806ca60
call   8059540 <wle>
jmp    805ce1a <parse_link_input+0x11a>
mov    ebx,DWORD PTR [ebp-0x490]
add    ebx,0x8
mov    DWORD PTR [ebp-0x498],ebx
jmp    805cf23 <parse_link_input+0x223>
lea    esi,[esi+0x0]
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edi+0x24c]
cmp    eax,0x1d
jle    805cdc5 <parse_link_input+0xc5>
cmp    BYTE PTR [edi+0xb],0x0
je     805d0fa <parse_link_input+0x3fa>
mov    eax,DWORD PTR [ebp-0x49c]
lea    ebx,[eax+0xc]
mov    edx,DWORD PTR [ebp-0x49c]
mov    ecx,DWORD PTR [edx+0x244]
sub    esp,0xc
push   ecx
call   8048fc8 <close@plt>
pop    eax
pop    edx
push   ebx
push   0x806caa0
call   80576b0 <debug>
mov    ecx,DWORD PTR [ebp-0x49c]
mov    eax,DWORD PTR [ecx+0x244]
push   eax
cmp    ecx,0xfffffff4
push   ecx
mov    eax,ebx
je     805d0f3 <parse_link_input+0x3f3>
push   eax
push   0x806cae0
call   8059540 <wle>
cld    
mov    ecx,0x96
xor    eax,eax
mov    edi,DWORD PTR [ebp-0x49c]
rep stos DWORD PTR es:[edi],eax
add    esp,0x20
mov    ebx,DWORD PTR ds:0x8076f08
jmp    805cdc5 <parse_link_input+0xc5>
mov    eax,0x8071283
jmp    805d0ca <parse_link_input+0x3ca>
mov    ebx,edi
sub    esp,0x8
add    ebx,0xc
push   ebx
push   0x806be74
call   804b7d0 <send_global_statmsg>
add    esp,0x10
jmp    805d093 <parse_link_input+0x393>
push   eax
lea    eax,[ebp-0x488]
push   eax
mov    eax,DWORD PTR [ebp-0x49c]
add    eax,0x39
push   eax
mov    eax,DWORD PTR [ebp-0x49c]
mov    eax,DWORD PTR [eax+0x244]
push   eax
call   8061780 <sockread>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805d1a2 <parse_link_input+0x4a2>
push   eax
mov    edx,DWORD PTR [ebp-0x49c]
mov    eax,DWORD PTR [edx+0x254]
push   eax
mov    eax,DWORD PTR [edx+0x250]
push   eax
mov    eax,DWORD PTR [edx+0x4]
push   eax
mov    edi,DWORD PTR [edx+0x244]
push   edi
push   edx
cmp    BYTE PTR [edx+0xc],0x0
je     805d19b <parse_link_input+0x49b>
mov    eax,edx
add    eax,0xc
push   eax
push   0x806cb20
call   8059540 <wle>
add    esp,0x18
push   ebx
mov    esi,DWORD PTR [ebp-0x49c]
push   esi
call   805c100 <process_link_input>
mov    ecx,DWORD PTR [ebp-0x49c]
mov    DWORD PTR [ecx+0x248],0x1
jmp    805cdff <parse_link_input+0xff>
mov    eax,0x8071283
jmp    805d16b <parse_link_input+0x46b>
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
cmp    eax,0x4
je     805d1c9 <parse_link_input+0x4c9>
cmp    eax,0x23
je     805d1c9 <parse_link_input+0x4c9>
sub    esp,0x8
push   0x0
mov    ebx,DWORD PTR [ebp-0x49c]
push   ebx
call   80597d0 <remlink>
jmp    805cdff <parse_link_input+0xff>
mov    ebx,DWORD PTR [ebp-0x49c]
mov    DWORD PTR [ebx+0x248],0x0
jmp    805cdff <parse_link_input+0xff>
mov    esi,esi
sub    esp,0xc
push   0x806be88
call   80576b0 <debug>
mov    ebx,DWORD PTR [ebp-0x49c]
mov    BYTE PTR [ebx+0x8],0x2
push   0x8076ee0
push   0x8075d40
push   0x806be9e
push   ebx
call   805a590 <send_to_link>
jmp    805d0e5 <parse_link_input+0x3e5>
sub    esp,0x8
push   edx
mov    eax,ds:0x8075d20
push   0x806cb60
mov    ds:0x8075d84,eax
call   8059540 <wle>
add    esp,0xc
lea    eax,[ebp-0x48c]
push   eax
lea    eax,[ebp-0x288]
push   eax
mov    edi,DWORD PTR ds:0x8075e2c
push   edi
mov    DWORD PTR [ebp-0x48c],0x10
call   8048d78 <accept@plt>
add    esp,0x10
cmp    eax,0xffffffff
je     805d269 <parse_link_input+0x569>
sub    esp,0xc
push   eax
call   805a660 <newlinksock>
add    esp,0x10
jmp    805cd33 <parse_link_input+0x33>
call   8048de8 <__error@plt>
cmp    DWORD PTR [eax],0x23
je     805cd33 <parse_link_input+0x33>
sub    esp,0x10
call   8048de8 <__error@plt>
mov    esi,DWORD PTR [eax]
add    esp,0xc
push   esi
sub    esp,0x8
call   8048de8 <__error@plt>
mov    ecx,DWORD PTR [eax]
pop    ebx
push   ecx
call   8048cb8 <strerror@plt>
pop    edi
pop    edx
push   eax
push   0x806beac
call   8059540 <wle>
pop    esi
mov    ebx,DWORD PTR ds:0x8075e2c
push   ebx
call   8048fc8 <close@plt>
mov    DWORD PTR ds:0x8075e2c,0xffffffff
jmp    805d261 <parse_link_input+0x561>
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x74
lea    esi,[ebp-0x78]
push   esi
push   0x80762c0
call   8048f38 <stat@plt>
add    esp,0x10
test   eax,eax
js     805d3a5 <mech_exec+0xe5>
mov    DWORD PTR [ebp-0x60],0x0
mov    DWORD PTR [ebp-0x58],0x0
mov    DWORD PTR [ebp-0x50],0x0
mov    edi,0x8076fc0
mov    ecx,0x60
cld    
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     805d339 <mech_exec+0x79>
sub    esp,0xc
push   0x806dcc0
call   80576b0 <debug>
mov    eax,ds:0x8076fa8
add    esp,0x10
test   eax,eax
je     805d32f <mech_exec+0x6f>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
xor    ebx,ebx
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   ebx
inc    ebx
call   8048fc8 <close@plt>
add    esp,0x10
cmp    ebx,0xff
jle    805d340 <mech_exec+0x80>
sub    esp,0xc
push   0x80762c0
mov    DWORD PTR ds:0x8075d6c,0x805d2c0
call   8048f78 <strlen@plt>
add    eax,0x4
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    edx,DWORD PTR ds:0x8075d78
push   edx
push   0x80762c0
push   0x806d291
push   eax
mov    ebx,eax
call   8048f18 <sprintf@plt>
add    esp,0x1c
push   0x0
push   ebx
push   0x80762c0
call   8048d28 <execl@plt>
jmp    805d313 <mech_exec+0x53>
sub    esp,0xc
push   0x806dd00
jmp    805d30e <mech_exec+0x4e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    edi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x10],ebx
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR ds:0x8075d3c,0x0
je     805d4c8 <matches+0x108>
test   edi,edi
je     805d4c8 <matches+0x108>
mov    al,BYTE PTR [ebx]
mov    dl,BYTE PTR [edi]
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
test   al,al
jne    805d5a0 <matches+0x1e0>
test   dl,dl
je     805d55c <matches+0x19c>
dec    ebx
mov    al,BYTE PTR [ebx]
cmp    al,0x3f
je     805d570 <matches+0x1b0>
cmp    al,0x2a
je     805d549 <matches+0x189>
mov    edi,DWORD PTR [ebp-0x14]
test   edi,edi
je     805d4c8 <matches+0x108>
inc    DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
mov    al,BYTE PTR [ebx]
cmp    al,0x2a
je     805d530 <matches+0x170>
cmp    al,0x5c
je     805d510 <matches+0x150>
mov    DWORD PTR [ebp-0x18],0x0
xor    edx,edx
mov    dl,al
cmp    edx,0xff
ja     805d4f0 <matches+0x130>
mov    eax,ds:0x80726f4
mov    esi,DWORD PTR [eax+edx*4+0x434]
xor    edx,edx
mov    dl,BYTE PTR [edi]
cmp    edx,0xff
ja     805d4e0 <matches+0x120>
mov    eax,ds:0x80726f4
mov    eax,DWORD PTR [eax+edx*4+0x434]
cmp    esi,eax
je     805d494 <matches+0xd4>
cmp    BYTE PTR [ebx],0x3f
jne    805d4b3 <matches+0xf3>
mov    esi,DWORD PTR [ebp-0x18]
test   esi,esi
jne    805d4b3 <matches+0xf3>
inc    DWORD PTR ds:0x8075d3c
mov    al,BYTE PTR [ebx]
test   al,al
je     805d4a3 <matches+0xe3>
inc    ebx
mov    al,BYTE PTR [ebx]
mov    dl,BYTE PTR [edi]
test   dl,dl
je     805d400 <matches+0x40>
inc    edi
jmp    805d3f5 <matches+0x35>
mov    ecx,DWORD PTR [ebp-0x14]
test   ecx,ecx
je     805d4c8 <matches+0x108>
inc    DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
jmp    805d3f3 <matches+0x33>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edx
call   8048fe8 <___tolower@plt>
add    esp,0x10
jmp    805d484 <matches+0xc4>
mov    esi,esi
sub    esp,0xc
push   edx
call   8048fe8 <___tolower@plt>
mov    esi,eax
add    esp,0x10
jmp    805d46c <matches+0xac>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    dl,BYTE PTR [ebx+0x1]
cmp    dl,0x2a
je     805d521 <matches+0x161>
cmp    dl,0x3f
jne    805d449 <matches+0x89>
inc    ebx
mov    DWORD PTR [ebp-0x18],0x1
mov    al,BYTE PTR [ebx]
jmp    805d450 <matches+0x90>
inc    ebx
mov    al,BYTE PTR [ebx]
cmp    al,0x2a
je     805d530 <matches+0x170>
mov    DWORD PTR [ebp-0x14],0x1
mov    DWORD PTR [ebp+0x8],ebx
mov    DWORD PTR [ebp+0xc],edi
jmp    805d441 <matches+0x81>
cmp    ebx,DWORD PTR [ebp-0x10]
jbe    805d423 <matches+0x63>
cmp    BYTE PTR [ebx-0x1],0x5c
je     805d423 <matches+0x63>
xor    eax,eax
jmp    805d4cd <matches+0x10d>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    ebx,DWORD PTR [ebp-0x10]
jbe    805d41b <matches+0x5b>
lea    esi,[esi+eiz*1+0x0]
dec    ebx
mov    al,BYTE PTR [ebx]
cmp    al,0x3f
jne    805d41b <matches+0x5b>
cmp    ebx,DWORD PTR [ebp-0x10]
ja     805d580 <matches+0x1c0>
jmp    805d41b <matches+0x5b>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
test   dl,dl
jne    805d439 <matches+0x79>
cmp    al,0x2a
je     805d5bb <matches+0x1fb>
test   al,al
setne  al
and    eax,0xff
jmp    805d4cd <matches+0x10d>
inc    ebx
mov    al,BYTE PTR [ebx]
cmp    al,0x2a
je     805d5bb <matches+0x1fb>
jmp    805d5ac <matches+0x1ec>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805d3c0 <matches>
add    esp,0x10
xor    edx,edx
test   eax,eax
jne    805d5f3 <num_matches+0x23>
mov    edx,DWORD PTR ds:0x8075d3c
inc    edx
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
xor    eax,eax
inc    DWORD PTR ds:0x8075e88
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e88
dec    eax
test   eax,eax
mov    ds:0x8075e88,eax
je     805d630 <randstring_getline+0x20>
xor    eax,eax
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8075e30
mov    DWORD PTR ds:0x8075d6c,0x805d610
call   80579d0 <mstrcpy>
mov    eax,0x1
jmp    805d627 <randstring_getline+0x17>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x28
push   0x0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8048f88 <open@plt>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
js     805d71a <randstring+0xba>
mov    ecx,DWORD PTR ds:0x8075e30
test   ecx,ecx
jne    805d730 <randstring+0xd0>
sub    esp,0x8
push   0x805d600
push   ebx
mov    DWORD PTR ds:0x8075e88,0x0
call   80618f0 <readline>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
pop    eax
pop    edx
push   0x0
push   esi
call   8048f88 <open@plt>
mov    ebx,eax
mov    eax,ds:0x8075e88
dec    eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fstp   QWORD PTR [ebp-0x28]
call   8048df8 <rand@plt>
push   eax
fld    QWORD PTR ds:0x806e2c8
fimul  DWORD PTR [esp]
fnstcw WORD PTR [ebp-0xa]
add    esp,0xc
fld    QWORD PTR [ebp-0x28]
push   0x805d610
fmulp  st(1),st
mov    ax,WORD PTR [ebp-0xa]
mov    ah,0xc
fadd   QWORD PTR ds:0x806e2d0
mov    WORD PTR [ebp-0xc],ax
push   ebx
fldcw  WORD PTR [ebp-0xc]
fistp  DWORD PTR ds:0x8075e88
fldcw  WORD PTR [ebp-0xa]
call   80618f0 <readline>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e30
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
jmp    805d730 <randstring+0xd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   0x8075e30
call   8057920 <MyFree>
add    esp,0x10
jmp    805d690 <randstring+0x30>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x806cb80
mov    eax,ds:0x8075d64
push   eax
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
mov    eax,ds:0x8075d64
push   eax
call   804dee0 <on_msg>
mov    esp,ebp
xor    eax,eax
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
push   0x8075d20
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x806d297
call   80576b0 <debug>
pop    eax
pop    edx
push   0x805d790
push   0x1
call   8048e08 <signal@plt>
mov    al,ds:0x8076f04
and    eax,0x6
add    esp,0x10
cmp    al,0x6
je     805d7e0 <sig_hup+0x50>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
jmp    805d7e0 <sig_hup+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,ds:0x8075e74
push   0x64
mov    ds:0x8076f00,eax
mov    eax,ds:0x8076f0c
push   0x0
mov    ds:0x8075e74,eax
add    eax,0x220
push   eax
push   eax
call   80659a0 <do_rehash2>
pop    ecx
pop    ebx
push   0x0
push   0x806d2a1
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     805d884 <sig_hup+0xf4>
sub    esp,0xc
push   0x806cb80
mov    DWORD PTR ds:0x8075d80,0x1
mov    DWORD PTR ds:0x8075d6c,0x805d790
call   8048f78 <strlen@plt>
inc    eax
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    ds:0x8075d64,eax
pop    eax
pop    edx
push   0x805d750
push   ebx
call   80618f0 <readline>
mov    DWORD PTR [esp],0x8075d64
call   8057920 <MyFree>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
mov    DWORD PTR [esp],0x806d2a1
call   8048e48 <unlink@plt>
mov    DWORD PTR ds:0x8075d80,0x0
add    esp,0x10
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
jmp    805d7ca <sig_hup+0x3a>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x806d2ac
call   80576b0 <debug>
add    esp,0x10
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ecx
push   0x1
push   0x0
push   0xffffffff
call   8048c78 <waitpid@plt>
add    esp,0x10
test   eax,eax
jg     805d8c0 <sig_child+0x20>
sub    esp,0x8
push   0x805d8a0
push   0x14
call   8048e08 <signal@plt>
leave  
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x806d2b9
call   80576b0 <debug>
pop    eax
pop    edx
push   0x805d8f0
push   0xe
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x806d2c4
call   80576b0 <debug>
pop    ecx
pop    eax
push   0x805d920
push   0xd
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x806d2cf
call   80576b0 <debug>
add    esp,0x10
test   BYTE PTR ds:0x8076f04,0x4
jne    805d990 <sig_int+0x40>
sub    esp,0x8
push   0x805d950
push   0x2
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
call   804f9b0 <savesession>
call   8055480 <close_all_dcc>
mov    DWORD PTR [ebp+0x8],0x806dd40
mov    esp,ebp
pop    ebp
jmp    80509b0 <kill_all_bots>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    eax,ds:0x8075d78
inc    eax
add    esp,0x10
cmp    eax,0xa
mov    ds:0x8075d78,eax
jg     805da23 <sig_bus+0x73>
sub    esp,0xc
push   0x806d2d9
call   80576b0 <debug>
add    esp,0x10
test   BYTE PTR ds:0x8076f04,0x4
jne    805da00 <sig_bus+0x50>
sub    esp,0x8
push   0x805d9b0
push   0xa
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
nop
call   804f9b0 <savesession>
call   8055480 <close_all_dcc>
mov    DWORD PTR ds:0x8075e7c,0x1
mov    DWORD PTR [ebp+0x8],0x806dd80
mov    esp,ebp
pop    ebp
jmp    80509b0 <kill_all_bots>
mov    eax,ds:0x8076fa8
test   eax,eax
je     805da3c <sig_bus+0x8c>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     805da4a <sig_bus+0x9a>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    eax,ds:0x8075d78
inc    eax
add    esp,0x10
cmp    eax,0xa
mov    ds:0x8075d78,eax
jg     805db03 <sig_segv+0xa3>
sub    esp,0xc
push   0x806d2e3
call   80576b0 <debug>
add    esp,0x10
test   BYTE PTR ds:0x8076f04,0x4
je     805daf0 <sig_segv+0x90>
mov    eax,ds:0x8076fa8
test   eax,eax
jne    805dad0 <sig_segv+0x70>
call   804f9b0 <savesession>
call   8055480 <close_all_dcc>
mov    DWORD PTR ds:0x8075e7c,0x1
mov    DWORD PTR [ebp+0x8],0x806ddc0
mov    esp,ebp
pop    ebp
jmp    80509b0 <kill_all_bots>
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
mov    DWORD PTR ds:0x8076fa8,0x0
add    esp,0x10
jmp    805daa9 <sig_segv+0x49>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x805da60
push   0xb
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
mov    eax,ds:0x8076fa8
test   eax,eax
je     805db1c <sig_segv+0xbc>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     805db2a <sig_segv+0xca>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x1
call   8048f48 <exit@plt>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x806d2ee
call   80576b0 <debug>
add    esp,0x10
test   BYTE PTR ds:0x8076f04,0x4
jne    805db80 <sig_term+0x40>
sub    esp,0x8
push   0x805db40
push   0xf
call   8048e08 <signal@plt>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
call   804f9b0 <savesession>
call   8055480 <close_all_dcc>
mov    DWORD PTR [ebp+0x8],0x806de00
mov    esp,ebp
pop    ebp
jmp    80509b0 <kill_all_bots>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x806d2f9
call   80576b0 <debug>
pop    edx
pop    ecx
push   0x805dba0
push   0x1e
call   8048e08 <signal@plt>
add    esp,0x10
test   BYTE PTR ds:0x8076f04,0x4
je     805dc1a <sig_usr1+0x7a>
mov    eax,ds:0x8075e74
mov    ds:0x8076f00,eax
mov    eax,ds:0x8076f0c
cmp    DWORD PTR [eax+0x4],0x4
mov    ds:0x8075e74,eax
je     805dc1e <sig_usr1+0x7e>
mov    edx,DWORD PTR [eax+0x8]
cmp    edx,0xffffffff
je     805dc09 <sig_usr1+0x69>
sub    esp,0xc
push   edx
call   8048fc8 <close@plt>
add    esp,0x10
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
mov    esp,ebp
pop    ebp
ret    
sub    esp,0xc
push   0x806de40
call   8061640 <send_to_server>
add    esp,0x10
jmp    805dc10 <sig_usr1+0x70>
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8075d20
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x806d304
call   80576b0 <debug>
pop    eax
pop    edx
push   0x805dc30
push   0x1f
call   8048e08 <signal@plt>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR ds:0x8075e40,0x0
call   8048d08 <getpid@plt>
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e44,eax
mov    eax,0x1
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e48,eax
mov    eax,ds:0x8075e84
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    DWORD PTR ds:0x8075e4c,0x0
mov    ds:0x8075e50,eax
call   8048df8 <rand@plt>
sub    esp,0x8
push   0x806d30f
push   0x8075e68
mov    ds:0x8075d38,eax
mov    DWORD PTR ds:0x8075d60,0x0
mov    DWORD PTR ds:0x8075e24,0x0
mov    DWORD PTR ds:0x8075d34,0xffffffff
mov    DWORD PTR ds:0x8075d6c,0x805dc70
call   80579d0 <mstrcpy>
add    esp,0xc
push   0x0
push   0x2
push   0x2
call   8048d58 <socket@plt>
add    esp,0x10
test   eax,eax
mov    edx,eax
mov    ds:0x80762a8,eax
js     805dd8e <init_uptime+0x11e>
push   ecx
push   0x10
lea    eax,[ebp-0x18]
push   eax
push   edx
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    BYTE PTR [ebp-0x17],0x2
call   8048db8 <bind@plt>
add    esp,0x10
test   eax,eax
js     805dd80 <init_uptime+0x110>
sub    esp,0x8
push   0x3
mov    eax,ds:0x80762a8
push   eax
call   8048fb8 <fcntl@plt>
or     eax,0x4
add    esp,0xc
push   eax
push   0x4
mov    ecx,DWORD PTR ds:0x80762a8
push   ecx
call   8048fb8 <fcntl@plt>
xor    eax,eax
leave  
ret    
lea    esi,[esi+0x0]
sub    esp,0xc
mov    eax,ds:0x80762a8
push   eax
call   8048fc8 <close@plt>
mov    eax,0xffffffff
mov    DWORD PTR ds:0x80762a8,0xffffffff
jmp    805dd78 <init_uptime+0x108>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x98
mov    edx,DWORD PTR ds:0x8075d38
lea    eax,[edx+edx*8]
shl    eax,0x7
add    eax,edx
lea    eax,[edx+eax*2]
lea    eax,[edx+eax*8+0x4819]
mov    ds:0x8075d38,eax
push   0x0
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e4c,eax
call   8048ee8 <time@plt>
pop    edx
xchg   al,ah
ror    eax,0x10
xchg   al,ah
pop    ecx
mov    ds:0x8075e58,eax
lea    eax,[ebp-0x88]
push   eax
push   0x806d325
call   8048f38 <stat@plt>
add    esp,0x10
test   eax,eax
js     805dfcb <send_uptime+0x22b>
mov    eax,DWORD PTR [ebp-0x60]
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e5c,eax
mov    edx,DWORD PTR ds:0x8076f0c
mov    eax,DWORD PTR [edx+0xbb0]
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e54,eax
mov    eax,DWORD PTR [edx+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    eax,ds:0x8075d28
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x90],0x806d32b
je     805de70 <send_uptime+0xd0>
cmp    BYTE PTR [eax+0xa8],0x0
je     805dfc3 <send_uptime+0x223>
add    eax,0xa8
mov    DWORD PTR [ebp-0x90],eax
mov    eax,ds:0x8075d60
inc    eax
mov    ds:0x8075d60,eax
and    eax,0x7
je     805dfa4 <send_uptime+0x204>
cmp    DWORD PTR ds:0x8075d34,0xffffffff
je     805dfa4 <send_uptime+0x204>
mov    esi,DWORD PTR ds:0x8076f0c
add    esi,0x220
mov    ecx,esi
nop
mov    eax,DWORD PTR [esi]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    esi,0x4
and    edx,0x80808080
je     805dea0 <send_uptime+0x100>
test   edx,0x8080
jne    805dec5 <send_uptime+0x125>
shr    edx,0x10
add    esi,0x2
add    dl,dl
sbb    esi,0x3
mov    eax,DWORD PTR [ebp-0x90]
sub    esp,0xc
push   eax
sub    esi,ecx
call   8048f78 <strlen@plt>
add    esi,eax
mov    DWORD PTR [esp],0x807125b
call   8048f78 <strlen@plt>
lea    ebx,[eax+esi*1+0x24]
mov    DWORD PTR [esp],ebx
mov    DWORD PTR ds:0x8075d6c,0x805dda0
call   8057860 <MyMalloc>
mov    DWORD PTR [ebp-0x8c],eax
cld    
mov    edi,eax
mov    esi,0x8075e40
mov    ecx,0x9
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
mov    edi,DWORD PTR [ebp-0x90]
mov    eax,ds:0x8076f0c
mov    DWORD PTR [esp],0x807125b
add    eax,0x220
push   edi
push   eax
mov    eax,DWORD PTR [ebp-0x8c]
push   0x806f3cb
add    eax,0x20
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x18
push   0x10
lea    edx,[ebp-0x28]
push   edx
push   0x0
push   ebx
mov    esi,DWORD PTR [ebp-0x8c]
mov    eax,ds:0x8075d34
push   esi
mov    ebx,DWORD PTR ds:0x80762a8
mov    DWORD PTR [ebp-0x24],eax
push   ebx
mov    ax,ds:0x8071540
xchg   al,ah
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    BYTE PTR [ebp-0x27],0x2
mov    WORD PTR [ebp-0x26],ax
call   8048e58 <sendto@plt>
add    esp,0x14
lea    eax,[ebp-0x8c]
push   eax
call   8057920 <MyFree>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
mov    eax,ds:0x8075e68
push   eax
call   8060e80 <get_ip>
mov    ds:0x8075d34,eax
add    esp,0x10
inc    eax
jne    805de91 <send_uptime+0xf1>
jmp    805df9c <send_uptime+0x1fc>
add    eax,0x8
jmp    805de6a <send_uptime+0xca>
mov    DWORD PTR ds:0x8075e5c,0x0
jmp    805de15 <send_uptime+0x75>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    805e010 <do_uset+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
mov    ebx,eax
pop    eax
pop    edx
push   0x806d333
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805e070 <do_uset+0x90>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0x10]
push   ecx
call   8048f58 <atoi@plt>
mov    edx,eax
lea    eax,[eax-0x1]
add    esp,0x10
cmp    eax,0xfffe
ja     805e055 <do_uset+0x75>
mov    DWORD PTR ds:0x8071540,edx
jmp    805dffb <do_uset+0x1b>
sub    esp,0x8
push   0x806c120
push   esi
call   80614d0 <send_to_user>
jmp    805dffb <do_uset+0x1b>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x80683f3
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805e0b1 <do_uset+0xd1>
sub    esp,0xc
push   0x8075e68
call   8057920 <MyFree>
pop    eax
pop    edx
mov    esi,DWORD PTR [ebp+0x10]
push   esi
push   0x8075e68
mov    DWORD PTR ds:0x8075d6c,0x805dfe0
call   80579d0 <mstrcpy>
jmp    805dffb <do_uset+0x1b>
sub    esp,0x8
push   0x806d338
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805e0d0 <do_uset+0xf0>
call   805dda0 <send_uptime>
jmp    805dffb <do_uset+0x1b>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x80708a0
push   ebx
push   esi
call   804f840 <usage>
jmp    805dffb <do_uset+0x1b>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x4c
call   804a690 <readcfgfile>
mov    DWORD PTR ds:0x8075d68,0x0
mov    DWORD PTR ds:0x8076f08,0xffffffff
mov    DWORD PTR ds:0x8075e2c,0xffffffff
call   804f7e0 <read_levelfile>
mov    eax,ds:0x8076f0c
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
je     805e1bf <doit+0xcf>
mov    edx,DWORD PTR [ebp-0x4c]
mov    ebx,DWORD PTR [edx]
test   ebx,ebx
je     805e161 <doit+0x71>
lea    esi,[edx+0x724]
sub    esp,0x8
lea    eax,[ebx+0x724]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     805e950 <doit+0x860>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805e140 <doit+0x50>
mov    eax,DWORD PTR [ebp-0x4c]
mov    ds:0x8075e74,eax
call   804a550 <readuserlist>
call   8063b00 <read_seenlist>
mov    edx,DWORD PTR [ebp-0x4c]
mov    edx,DWORD PTR [edx]
test   edx,edx
mov    DWORD PTR [ebp-0x4c],edx
jne    805e131 <doit+0x41>
mov    eax,ds:0x8076f0c
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
je     805e1bf <doit+0xcf>
mov    edx,DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [edx+0x71c]
test   eax,eax
jne    805e1b3 <doit+0xc3>
push   eax
mov    eax,edx
add    eax,0x22d
push   eax
push   0x80712b2
push   0x806de80
call   8048c88 <printf@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
jne    805e18b <doit+0x9b>
sub    esp,0xc
push   0x806d33d
call   8048d38 <puts@plt>
mov    eax,ds:0x8075d30
add    esp,0x10
test   eax,eax
je     805e232 <doit+0x142>
sub    esp,0xc
push   0x0
call   8048fc8 <close@plt>
mov    DWORD PTR [esp],0x1
call   8048fc8 <close@plt>
mov    DWORD PTR [esp],0x2
call   8048fc8 <close@plt>
add    esp,0x10
call   8048e78 <fork@plt>
cmp    eax,0xffffffff
je     805e91f <doit+0x82f>
test   eax,eax
jne    805e915 <doit+0x825>
call   8048ed8 <getppid@plt>
dec    eax
je     805e22d <doit+0x13d>
sub    esp,0xc
push   0xc350
call   8048cf8 <usleep@plt>
add    esp,0x10
jmp    805e213 <doit+0x123>
call   8048fa8 <setsid@plt>
push   edi
push   0x180
push   0x601
push   0x806d359
call   8048f88 <open@plt>
add    esp,0x10
test   eax,eax
mov    ebx,eax
js     805e272 <doit+0x182>
sub    esp,0x10
call   8048d08 <getpid@plt>
add    esp,0xc
push   eax
push   0x806e685
push   ebx
call   8061260 <send_to_socket>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
add    esp,0x10
sub    esp,0xc
push   0x806d364
call   8059540 <wle>
mov    DWORD PTR [esp],0x8075d20
call   8048ee8 <time@plt>
add    esp,0x10
sub    esp,0x8
mov    esi,DWORD PTR ds:0x8075d20
push   esi
push   0x806d37b
call   80576b0 <debug>
mov    eax,ds:0x8075e70
add    esp,0x10
test   eax,eax
je     805e2ba <doit+0x1ca>
cmp    eax,DWORD PTR ds:0x8075d20
jl     805e8d5 <doit+0x7e5>
mov    eax,ds:0x8075d2c
test   eax,eax
jle    805e2d0 <doit+0x1e0>
cmp    DWORD PTR ds:0x8075e2c,0xffffffff
je     805e88e <doit+0x79e>
call   8050ec0 <reset_botstate>
mov    edx,DWORD PTR ds:0x8075460
test   edx,edx
sete   al
and    eax,0xff
dec    eax
and    eax,0xffffffe3
add    eax,0x1e
mov    DWORD PTR [ebp-0x30],eax
mov    DWORD PTR [ebp-0x2c],0x0
mov    eax,0x20
nop
lea    esi,[esi+eiz*1+0x0]
dec    eax
test   eax,eax
mov    DWORD PTR [eax*4+0x8075ca0],0x0
jne    805e300 <doit+0x210>
mov    eax,0x20
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
dec    eax
test   eax,eax
mov    DWORD PTR [eax*4+0x8076f20],0x0
jne    805e320 <doit+0x230>
mov    eax,ds:0x8076f0c
test   eax,eax
mov    DWORD PTR [ebp-0x50],0xffffffff
mov    DWORD PTR [ebp-0x34],0x0
mov    DWORD PTR [ebp-0x4c],eax
je     805e4db <doit+0x3eb>
mov    esi,esi
mov    edx,DWORD PTR [ebp-0x4c]
cmp    DWORD PTR [edx+0x8],0xffffffff
mov    DWORD PTR ds:0x8075e74,edx
je     805e86f <doit+0x77f>
mov    esi,DWORD PTR ds:0x8075e74
cmp    DWORD PTR [esi+0x8],0xffffffff
je     805e400 <doit+0x310>
mov    ebx,DWORD PTR [esi+0xc]
test   ebx,ebx
jne    805e3aa <doit+0x2ba>
push   ecx
lea    eax,[ebp-0x34]
push   eax
lea    eax,[ebp-0x28]
push   eax
mov    edx,DWORD PTR [esi+0x8]
push   edx
mov    DWORD PTR [ebp-0x34],0x10
call   8049008 <getsockname@plt>
add    esp,0x10
test   eax,eax
jne    805e864 <doit+0x774>
mov    esi,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [ebp-0x24]
mov    DWORD PTR [esi+0xc],eax
mov    edx,DWORD PTR [esi+0x4]
lea    eax,[edx-0x2]
cmp    eax,0x1
ja     805e823 <doit+0x733>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [esi+0xbb0]
inc    DWORD PTR [ebp-0x34]
cmp    eax,0x1e
jle    805e81e <doit+0x72e>
mov    eax,DWORD PTR [esi+0x8]
sub    esp,0x8
push   eax
push   0x806dec0
call   80576b0 <debug>
pop    eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    esi,DWORD PTR ds:0x8075e74
add    esp,0x10
mov    DWORD PTR [esi+0x8],0xffffffff
mov    ebx,DWORD PTR [esi+0xb3c]
test   ebx,ebx
mov    DWORD PTR [ebp-0x38],ebx
je     805e429 <doit+0x339>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x208],0x80
je     805e804 <doit+0x714>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
mov    DWORD PTR [ebp-0x38],ebx
jne    805e410 <doit+0x320>
mov    ebx,DWORD PTR [esi+0xb3c]
test   ebx,ebx
mov    DWORD PTR [ebp-0x38],ebx
je     805e49b <doit+0x3ab>
mov    edi,0x8075ca0
nop
lea    esi,[esi+eiz*1+0x0]
test   BYTE PTR [ebx+0x209],0x2
je     805e46a <doit+0x37a>
mov    eax,DWORD PTR [ebx+0x4]
cmp    eax,DWORD PTR [ebp-0x50]
jle    805e454 <doit+0x364>
mov    DWORD PTR [ebp-0x50],eax
mov    ecx,eax
and    ecx,0x1f
mov    edx,0x1
shl    edx,cl
shr    eax,0x5
or     DWORD PTR [eax*4+0x8076f20],edx
mov    edx,DWORD PTR [ebx+0x4]
cmp    edx,0xffffffff
je     805e48c <doit+0x39c>
cmp    edx,DWORD PTR [ebp-0x50]
jle    805e47a <doit+0x38a>
mov    DWORD PTR [ebp-0x50],edx
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edi+edx*4],eax
mov    eax,DWORD PTR [ebx]
test   eax,eax
mov    ebx,eax
jne    805e440 <doit+0x350>
mov    DWORD PTR [ebp-0x38],0x0
mov    eax,DWORD PTR [esi+0x3b0]
test   eax,eax
je     805e4c5 <doit+0x3d5>
mov    edx,DWORD PTR [eax]
cmp    edx,DWORD PTR [ebp-0x50]
jle    805e4af <doit+0x3bf>
mov    DWORD PTR [ebp-0x50],edx
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edx*4+0x8075ca0],eax
mov    eax,DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
jne    805e350 <doit+0x260>
mov    edx,DWORD PTR ds:0x8075460
mov    eax,DWORD PTR [ebp-0x34]
test   eax,eax
jne    805e7fc <doit+0x70c>
and    edx,0xfffffffb
mov    DWORD PTR ds:0x8075460,edx
mov    edx,DWORD PTR ds:0x8075e2c
cmp    edx,0xffffffff
je     805e518 <doit+0x428>
cmp    edx,DWORD PTR [ebp-0x50]
jle    805e502 <doit+0x412>
mov    DWORD PTR [ebp-0x50],edx
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edx*4+0x8075ca0],eax
xor    edi,edi
mov    esi,DWORD PTR ds:0x8076f08
cmp    edi,esi
mov    DWORD PTR [ebp-0x34],0x0
mov    ebx,DWORD PTR ds:0x8075d68
jge    805e57e <doit+0x48e>
cmp    BYTE PTR [ebx],0x0
je     805e573 <doit+0x483>
mov    edx,DWORD PTR [ebx+0x244]
cmp    edx,0xffffffff
je     805e573 <doit+0x483>
cmp    BYTE PTR [ebx+0x9],0x63
je     805e7c0 <doit+0x6d0>
cmp    edx,DWORD PTR [ebp-0x50]
jle    805e553 <doit+0x463>
mov    DWORD PTR [ebp-0x50],edx
cmp    BYTE PTR [ebx+0x8],0x1
je     805e7a5 <doit+0x6b5>
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edx*4+0x8075ca0],eax
inc    edi
add    ebx,0x258
cmp    edi,esi
jl     805e531 <doit+0x441>
mov    edi,DWORD PTR [ebp-0x34]
test   edi,edi
jne    805e58c <doit+0x49c>
and    DWORD PTR ds:0x8075460,0xfffffffd
sub    esp,0xc
lea    eax,[ebp-0x30]
push   eax
push   0x0
push   0x8076f20
inc    DWORD PTR [ebp-0x50]
push   0x8075ca0
mov    esi,DWORD PTR [ebp-0x50]
push   esi
call   8048d68 <select@plt>
add    esp,0x20
inc    eax
jne    805e5bf <doit+0x4cf>
call   8048de8 <__error@plt>
cmp    DWORD PTR [eax],0x4
je     805e28e <doit+0x19e>
sub    esp,0xc
push   0x8075d20
call   8048ee8 <time@plt>
call   805cd00 <parse_link_input>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
je     805e66f <doit+0x57f>
mov    edx,DWORD PTR [ebp-0x4c]
mov    DWORD PTR ds:0x8075e74,edx
call   80557f0 <parse_dcc_input>
mov    esi,DWORD PTR ds:0x8075e74
cmp    DWORD PTR [esi+0x8],0xffffffff
je     805e609 <doit+0x519>
call   8051340 <parse_server_input>
mov    esi,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [esi+0x3b0]
test   eax,eax
je     805e636 <doit+0x546>
mov    eax,DWORD PTR [eax]
mov    ecx,eax
shr    eax,0x5
and    ecx,0x1f
mov    eax,DWORD PTR [eax*4+0x8075ca0]
shr    eax,cl
and    eax,0x1
je     805e636 <doit+0x546>
call   805cbc0 <parse_pipe_input>
mov    esi,DWORD PTR ds:0x8075e74
cmp    DWORD PTR [esi+0x4],0x4
je     805e747 <doit+0x657>
mov    eax,DWORD PTR [ebp-0x4c]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x4c],eax
jne    805e5e4 <doit+0x4f4>
mov    edx,DWORD PTR ds:0x8076f0c
test   edx,edx
mov    DWORD PTR [ebp-0x4c],edx
je     805e66f <doit+0x57f>
mov    eax,DWORD PTR [ebp-0x4c]
cmp    DWORD PTR [eax+0x4],0x6
je     805e720 <doit+0x630>
mov    edx,DWORD PTR [eax]
test   edx,edx
mov    DWORD PTR [ebp-0x4c],edx
jne    805e659 <doit+0x569>
mov    edx,DWORD PTR ds:0x80762a8
mov    eax,edx
shr    eax,0x5
mov    ecx,edx
and    ecx,0x1f
mov    eax,DWORD PTR [eax*4+0x8075ca0]
shr    eax,cl
and    eax,0x1
je     805e6b5 <doit+0x5c5>
sub    esp,0x8
lea    eax,[ebp-0x3c]
push   eax
lea    eax,[ebp-0x28]
push   eax
push   0x0
push   0x8
lea    eax,[ebp-0x48]
push   eax
push   edx
mov    DWORD PTR [ebp-0x3c],0x10
call   8048d48 <recvfrom@plt>
add    esp,0x20
cmp    eax,0x8
je     805e6ee <doit+0x5fe>
mov    eax,ds:0x8075d20
cmp    DWORD PTR ds:0x8075e24,eax
jge    805e6d1 <doit+0x5e1>
add    eax,0x5460
mov    ds:0x8075e24,eax
call   805dda0 <send_uptime>
mov    ecx,DWORD PTR ds:0x8075d74
test   ecx,ecx
je     805e28e <doit+0x19e>
sub    esp,0xc
push   0xffffffff
call   8061980 <killsock>
jmp    805e28b <doit+0x19b>
mov    eax,DWORD PTR [ebp-0x44]
xchg   al,ah
ror    eax,0x10
xchg   al,ah
cmp    DWORD PTR ds:0x8075e4c,eax
jne    805e6b5 <doit+0x5c5>
mov    ebx,DWORD PTR ds:0x8075e40
test   ebx,ebx
jne    805e6b5 <doit+0x5c5>
mov    eax,DWORD PTR [ebp-0x48]
xchg   al,ah
ror    eax,0x10
xchg   al,ah
mov    ds:0x8075e40,eax
jmp    805e6b5 <doit+0x5c5>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp-0x4c]
sub    esp,0x8
mov    eax,DWORD PTR [edx+0x3a4]
push   eax
mov    eax,DWORD PTR [edx+0x3a8]
push   eax
mov    DWORD PTR ds:0x8075e74,edx
call   8050570 <signoff>
add    esp,0x10
jmp    805e64c <doit+0x55c>
call   80577e0 <update_auths>
sub    esp,0x8
push   0x27
push   0x0
call   8063d20 <get_int_varc>
add    esp,0x10
test   eax,eax
je     805e640 <doit+0x550>
mov    eax,ds:0x8075d20
mov    edx,DWORD PTR ds:0x8075e74
sub    eax,DWORD PTR [edx+0xb9c]
cmp    eax,0xd2
jle    805e640 <doit+0x550>
sub    esp,0xc
push   0x806d38c
call   8061640 <send_to_server>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xb9c],edx
add    esp,0x10
jmp    805e640 <doit+0x550>
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edx*4+0x8076f20],eax
jmp    805e573 <doit+0x483>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [ebx+0x24c]
dec    eax
jle    805e7f4 <doit+0x704>
sub    esp,0x8
mov    BYTE PTR [ebx+0x9],0x0
push   0x806d399
push   ebx
call   805a590 <send_to_link>
add    esp,0x10
mov    esi,DWORD PTR ds:0x8076f08
mov    edx,DWORD PTR [ebx+0x244]
jmp    805e54b <doit+0x45b>
inc    DWORD PTR [ebp-0x34]
jmp    805e54b <doit+0x45b>
or     edx,0x4
jmp    805e4e9 <doit+0x3f9>
sub    esp,0xc
lea    eax,[ebp-0x38]
push   eax
call   8055340 <delete_client>
add    esp,0x10
mov    esi,DWORD PTR ds:0x8075e74
jmp    805e400 <doit+0x310>
cmp    edx,0x2
je     805e849 <doit+0x759>
mov    edx,DWORD PTR [esi+0x8]
cmp    edx,DWORD PTR [ebp-0x50]
jle    805e82e <doit+0x73e>
mov    DWORD PTR [ebp-0x50],edx
mov    ecx,edx
and    ecx,0x1f
mov    eax,0x1
shl    eax,cl
shr    edx,0x5
or     DWORD PTR [edx*4+0x8075ca0],eax
jmp    805e400 <doit+0x310>
mov    eax,DWORD PTR [esi+0x8]
mov    ecx,eax
and    ecx,0x1f
mov    edx,0x1
shl    edx,cl
shr    eax,0x5
or     DWORD PTR [eax*4+0x8076f20],edx
jmp    805e823 <doit+0x733>
mov    esi,DWORD PTR ds:0x8075e74
jmp    805e3aa <doit+0x2ba>
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edx+0xbb0]
inc    DWORD PTR [ebp-0x34]
dec    eax
jle    805e363 <doit+0x273>
call   8050ba0 <connect_to_server>
jmp    805e363 <doit+0x273>
sub    esp,0xc
push   eax
call   8060f40 <SockListener>
add    esp,0x10
cmp    eax,0xffffffff
mov    ds:0x8075e2c,eax
je     805e2d0 <doit+0x1e0>
push   edx
push   eax
mov    eax,ds:0x8075d2c
push   eax
push   0x806d3b6
call   8059540 <wle>
pop    edi
pop    eax
mov    esi,DWORD PTR ds:0x8075d2c
push   esi
push   0x806df00
call   80576b0 <debug>
add    esp,0x10
jmp    805e2d0 <doit+0x1e0>
sub    esp,0xc
push   0x0
call   80509b0 <kill_all_bots>
mov    ebx,DWORD PTR ds:0x8076fa8
add    esp,0x10
test   ebx,ebx
je     805e8fc <doit+0x80c>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    ecx,DWORD PTR ds:0x8075e7c
test   ecx,ecx
je     805e90b <doit+0x81b>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f48 <exit@plt>
mov    DWORD PTR ds:0x8076fa8,0x0
mov    eax,ds:0x8076fa8
test   eax,eax
je     805e938 <doit+0x848>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     805e946 <doit+0x856>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f68 <_exit@plt>
push   eax
lea    eax,[ebx+0x220]
push   eax
mov    eax,DWORD PTR [ebp-0x4c]
add    eax,0x220
push   eax
push   0x806df40
call   8048c88 <printf@plt>
mov    DWORD PTR [esp],0x806df80
call   8048d38 <puts@plt>
jmp    805e8df <doit+0x7ef>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
and    esp,0xfffffff0
sub    esp,0xc
push   0x8075d20
mov    ebx,DWORD PTR [ebp+0xc]
call   8048ee8 <time@plt>
pop    eax
pop    edx
push   0x1
push   0xfa4
mov    DWORD PTR ds:0x8075e70,0x0
mov    DWORD PTR ds:0x8075e80,0x0
mov    DWORD PTR ds:0x8075d7c,0xffffffff
mov    BYTE PTR ds:0x8075480,0x0
call   8048d88 <calloc@plt>
mov    ds:0x8076fa4,eax
mov    eax,DWORD PTR [ebx]
add    esp,0x10
test   eax,eax
mov    DWORD PTR ds:0x8076fa8,0x0
mov    DWORD PTR ds:0x8075e64,0xffffffff
je     805ef17 <main+0x597>
cmp    BYTE PTR [eax],0x0
je     805ef17 <main+0x597>
sub    esp,0x8
push   0x20
push   eax
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     805ea31 <main+0xb1>
sub    esp,0xc
inc    edx
mov    BYTE PTR [eax],0x0
push   edx
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     805ef17 <main+0x597>
mov    eax,DWORD PTR [eax]
mov    ds:0x8075d78,eax
sub    esp,0x8
push   0x8076fc0
mov    eax,DWORD PTR [ebx]
push   eax
call   8048f38 <stat@plt>
add    esp,0x10
test   eax,eax
js     805ef08 <main+0x588>
sub    esp,0x8
mov    eax,DWORD PTR [ebx]
push   eax
push   0x80762c0
mov    DWORD PTR ds:0x8076fd8,0x0
mov    DWORD PTR ds:0x8076fe0,0x0
mov    DWORD PTR ds:0x8076fe8,0x0
mov    edi,0x8075ea0
call   8048c68 <strcpy@plt>
mov    esi,0x8067344
mov    ax,ds:0x806734c
cld    
mov    ecx,0x2
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
mov    ds:0x8075ea8,ax
mov    al,ds:0x806734e
mov    ds:0x8075eaa,al
mov    al,ds:0x8076f04
or     eax,0x7
and    eax,0xffffffd7
mov    edx,DWORD PTR ds:0x8075d20
mov    ds:0x8076f04,al
lea    eax,[edx-0xe6]
mov    DWORD PTR [esp],edx
mov    DWORD PTR ds:0x8075e78,0x0
mov    DWORD PTR ds:0x8075d80,0x0
xor    esi,esi
mov    DWORD PTR ds:0x8075e28,0x0
mov    DWORD PTR ds:0x8075d78,0x0
mov    DWORD PTR ds:0x8075d24,0x0
mov    DWORD PTR ds:0x8075d30,0x1
mov    DWORD PTR ds:0x8075e7c,0x0
mov    DWORD PTR ds:0x8075d74,0x0
mov    DWORD PTR ds:0x8076f0c,0x0
mov    DWORD PTR ds:0x8075d28,0x0
mov    DWORD PTR ds:0x8075e34,0x0
mov    DWORD PTR ds:0x8075d70,0x1
mov    DWORD PTR ds:0x8075e20,0x1
mov    ds:0x8075d84,eax
mov    DWORD PTR ds:0x8075d68,0x0
mov    DWORD PTR ds:0x8076f08,0x0
mov    DWORD PTR ds:0x80766c0,0x1
mov    DWORD PTR ds:0x8075464,0x0
mov    DWORD PTR ds:0x8075d88,0x0
mov    DWORD PTR ds:0x8075d2c,0xffffffff
mov    DWORD PTR ds:0x8076fa0,0x0
call   8048ec8 <srand@plt>
add    esp,0x10
cmp    DWORD PTR [ebp+0x8],0x1
jle    805ebaa <main+0x22a>
mov    eax,DWORD PTR [ebx+0x4]
cmp    BYTE PTR [eax],0x2d
je     805ece0 <main+0x360>
push   ecx
push   0x807125f
push   0x807125b
push   0x806d3d4
call   8048c88 <printf@plt>
mov    DWORD PTR [esp],0x806e020
call   8048d38 <puts@plt>
pop    eax
cmp    BYTE PTR ds:0x8071220,0x0
pop    edx
je     805ecd0 <main+0x350>
mov    eax,0x8071220
push   eax
push   0x806d3e7
call   8048c88 <printf@plt>
add    esp,0x10
test   esi,esi
jne    805ecc4 <main+0x344>
sub    esp,0x8
push   0x805d8a0
push   0x14
call   8048e08 <signal@plt>
pop    esi
pop    edi
push   0x805d790
push   0x1
call   8048e08 <signal@plt>
pop    ecx
pop    ebx
push   0x805d950
push   0x2
call   8048e08 <signal@plt>
pop    eax
pop    edx
push   0x805d9b0
push   0xa
call   8048e08 <signal@plt>
pop    esi
pop    edi
push   0x805d920
push   0xd
call   8048e08 <signal@plt>
pop    ecx
pop    ebx
push   0x805d8f0
push   0xe
call   8048e08 <signal@plt>
pop    eax
pop    edx
push   0x805db40
push   0xf
call   8048e08 <signal@plt>
pop    esi
pop    edi
push   0x805dba0
push   0x1e
call   8048e08 <signal@plt>
pop    ecx
pop    ebx
push   0x805dc30
push   0x1f
call   8048e08 <signal@plt>
mov    edx,DWORD PTR ds:0x8076fa0
add    esp,0x10
test   edx,edx
je     805ecb0 <main+0x330>
sub    esp,0xc
push   0x8075e84
call   8048ee8 <time@plt>
mov    DWORD PTR [esp],0x8075d20
call   8048ee8 <time@plt>
call   805dc70 <init_uptime>
call   805e0f0 <doit>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
xor    eax,eax
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
push   0x805da60
push   0xb
call   8048e08 <signal@plt>
add    esp,0x10
jmp    805ec81 <main+0x301>
sub    esp,0xc
push   0x0
call   8048f68 <_exit@plt>
mov    esi,esi
mov    eax,0x806d3f5
jmp    805ebdf <main+0x25f>
lea    esi,[esi+0x0]
add    ebx,0x4
dec    DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebx]
movsx  eax,BYTE PTR [edx+0x1]
sub    eax,0x58
cmp    eax,0x1e
ja     805eeee <main+0x56e>
jmp    DWORD PTR [eax*4+0x806d078]
mov    esi,0x1
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    DWORD PTR [ebp+0x8],0x1
jle    805ebaa <main+0x22a>
mov    eax,DWORD PTR [ebx+0x4]
cmp    BYTE PTR [eax],0x2d
je     805ece0 <main+0x360>
jmp    805ebaa <main+0x22a>
mov    DWORD PTR ds:0x8076fa8,0x1
jmp    805ed10 <main+0x390>
mov    DWORD PTR ds:0x8076fa0,0x1
jmp    805ed10 <main+0x390>
mov    DWORD PTR ds:0x8075e80,0x1
mov    DWORD PTR ds:0x8075d30,0x0
jmp    805ed10 <main+0x390>
cmp    BYTE PTR [edx+0x2],0x0
jne    805ed9e <main+0x41e>
add    ebx,0x4
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     805ed8b <main+0x40b>
sub    esp,0x8
push   eax
push   0x8075ea0
call   8048c68 <strcpy@plt>
dec    DWORD PTR [ebp+0x8]
pop    edi
pop    eax
push   0x8075ea0
push   0x806d401
call   8048c88 <printf@plt>
add    esp,0x10
jmp    805ed10 <main+0x390>
sub    esp,0xc
push   0x806d41e
call   8048d38 <puts@plt>
pop    eax
jmp    805ecc7 <main+0x347>
sub    esp,0x8
lea    eax,[edx+0x2]
push   eax
push   0x8075ea0
call   8048c68 <strcpy@plt>
jmp    805ed75 <main+0x3f5>
sub    esp,0x8
push   0x80762c0
push   0x806d43c
call   8048c88 <printf@plt>
mov    DWORD PTR [esp],0x806e060
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e0a0
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e0e0
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e120
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e160
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e1a0
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806d459
call   8048d38 <puts@plt>
mov    DWORD PTR [esp],0x806e1e0
jmp    805ed93 <main+0x413>
cmp    BYTE PTR [edx+0x2],0x0
jne    805ee70 <main+0x4f0>
add    ebx,0x4
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     805ee55 <main+0x4d5>
sub    esp,0x8
push   eax
push   0x8075480
call   8048c68 <strcpy@plt>
dec    DWORD PTR [ebp+0x8]
add    esp,0x10
mov    DWORD PTR ds:0x8075d30,0x1
jmp    805ed10 <main+0x390>
sub    esp,0xc
push   0x806d475
jmp    805ed93 <main+0x413>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
lea    eax,[edx+0x2]
push   eax
push   0x8075480
call   8048c68 <strcpy@plt>
jmp    805ee43 <main+0x4c3>
cmp    BYTE PTR [edx+0x2],0x0
jne    805eee0 <main+0x560>
add    ebx,0x4
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     805eec9 <main+0x549>
sub    esp,0xc
push   eax
call   8059370 <Atoi>
dec    DWORD PTR [ebp+0x8]
add    esp,0x10
test   eax,eax
je     805eebc <main+0x53c>
mov    eax,DWORD PTR [eax]
cmp    eax,0x1d
jle    805eebc <main+0x53c>
add    eax,DWORD PTR ds:0x8075d20
mov    ds:0x8075e70,eax
jmp    805ed10 <main+0x390>
sub    esp,0xc
push   0x806e220
jmp    805ed93 <main+0x413>
sub    esp,0xc
push   0x806e260
jmp    805ed93 <main+0x413>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[edx+0x2]
push   eax
call   8059370 <Atoi>
jmp    805ee9e <main+0x51e>
sub    esp,0x8
push   edx
push   0x806d492
call   8048c88 <printf@plt>
mov    DWORD PTR [esp],0x1
jmp    805ecc9 <main+0x349>
sub    esp,0xc
push   0x806e2a0
call   8048d38 <puts@plt>
jmp    805eefc <main+0x57c>
sub    esp,0xc
mov    eax,ds:0x8071544
push   eax
jmp    805eef7 <main+0x577>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
test   ebx,ebx
je     805ef41 <parse_error+0x11>
cmp    BYTE PTR [ebx],0x0
jne    805ef70 <parse_error+0x40>
mov    eax,ds:0x8075e74
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0x10]
push   esi
push   0x114
mov    ecx,DWORD PTR ds:0x8075e34
push   ecx
mov    edx,DWORD PTR ds:0x8075d28
push   edx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805ef41 <parse_error+0x11>
sub    esp,0x8
push   ebx
push   0x806e2d8
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    805efbb <parse_error+0x8b>
mov    DWORD PTR [esi+0x104],0x1
jmp    805ef41 <parse_error+0x11>
sub    esp,0x8
push   ebx
push   0x806e2eb
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    805efdf <parse_error+0xaf>
mov    DWORD PTR [esi+0x104],0x2
jmp    805ef41 <parse_error+0x11>
sub    esp,0x8
push   ebx
push   0x806e2f5
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    805f003 <parse_error+0xd3>
mov    DWORD PTR [esi+0x104],0x3
jmp    805ef41 <parse_error+0x11>
sub    esp,0x8
push   ebx
push   0x806e308
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
sete   al
and    eax,0xff
dec    eax
and    eax,0xfffffffa
add    eax,0x6
mov    DWORD PTR [esi+0x104],eax
jmp    805ef41 <parse_error+0x11>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805f056 <parse_invite+0x26>
cmp    BYTE PTR [eax],0x3a
je     805f0b0 <parse_invite+0x80>
sub    esp,0x8
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
sub    eax,0x46
add    esp,0x10
cmp    eax,0x81
jbe    805f080 <parse_invite+0x50>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   eax
push   0x1
push   0x0
push   ebx
call   804b200 <join_channel>
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xba0],edx
add    esp,0x10
jmp    805f070 <parse_invite+0x40>
jmp    805f0b0 <parse_invite+0x80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc    ebx
jmp    805f056 <parse_invite+0x26>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0x8]
push   edi
push   0x80741e0
mov    esi,DWORD PTR [ebp+0xc]
call   8048c68 <strcpy@plt>
pop    ecx
pop    ebx
push   0x8068523
lea    ebx,[ebp-0x10]
push   ebx
mov    DWORD PTR [ebp-0x10],eax
call   8057a60 <get_token>
mov    edi,eax
pop    eax
pop    edx
push   0x806a108
push   ebx
call   8057a60 <get_token>
pop    ecx
mov    ebx,eax
pop    eax
push   0x3
push   esi
call   804b050 <find_channel>
mov    ds:0x8075c80,eax
pop    eax
pop    edx
mov    eax,ds:0x8075e74
push   edi
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805f1d5 <parse_join+0x115>
mov    edx,DWORD PTR ds:0x8075c80
test   edx,edx
jne    805f150 <parse_join+0x90>
sub    esp,0x8
push   esi
push   0x806a0b4
call   8061640 <send_to_server>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [edx+0x38d]
and    eax,0xffffffcf
or     eax,0x10
mov    BYTE PTR [edx+0x38d],al
mov    eax,ds:0x8075c80
and    BYTE PTR [eax+0x38d],0xf7
sub    esp,0xc
mov    eax,ds:0x8075c80
push   eax
call   804cde0 <delete_chanusers>
mov    eax,ds:0x8075c80
add    eax,0x18
mov    DWORD PTR [esp],eax
call   804c2f0 <delete_bans>
mov    eax,ds:0x8075c80
mov    BYTE PTR [eax+0x38c],0x0
mov    eax,ds:0x8075c80
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0xb38],eax
and    BYTE PTR [eax+0x38d],0x7f
mov    eax,ds:0x8075c80
and    BYTE PTR [eax+0x38d],0xfb
push   esi
push   esi
push   esi
push   0x806e319
call   8061640 <send_to_server>
add    esp,0x14
push   esi
call   8059620 <needop>
add    esp,0x10
mov    eax,ds:0x8075c80
mov    dl,BYTE PTR [eax+0x38d]
mov    al,dl
shr    al,0x4
and    eax,0x3
dec    eax
jne    805f143 <parse_join+0x83>
and    edx,0x4
jne    805f240 <parse_join+0x180>
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0x8]
push   esi
push   ecx
call   8062b00 <find_user>
mov    ds:0x80762a4,eax
pop    eax
pop    edx
push   esi
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   8063320 <find_shit>
pop    esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
mov    ds:0x80766c4,eax
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
pop    eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804da20 <on_join>
add    esp,0x10
jmp    805f143 <parse_join+0x83>
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   ebx
push   edi
call   804cca0 <make_chanuser>
add    esp,0x10
jmp    805f1f4 <parse_join+0x134>
jmp    805f260 <parse_mode>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x88
lea    edi,[ebp+0xc]
push   edi
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805f353 <parse_mode+0xf3>
cmp    BYTE PTR [eax],0x23
je     805f3e0 <parse_mode+0x180>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805f353 <parse_mode+0xf3>
mov    eax,ds:0x8075e74
cmp    eax,0xfffffca0
mov    BYTE PTR [ebp-0x7d],0x2b
je     805f3ce <parse_mode+0x16e>
sub    esp,0x8
add    eax,0x360
push   eax
lea    eax,[ebp-0x38]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
sub    esp,0xc
push   edi
call   8057b00 <chop>
add    esp,0x10
cmp    BYTE PTR [eax],0x3a
mov    esi,eax
je     805f3c8 <parse_mode+0x168>
sub    esp,0xc
push   esi
call   8048f78 <strlen@plt>
xor    ebx,ebx
add    esp,0x10
cmp    ebx,eax
mov    edi,eax
jge    805f339 <parse_mode+0xd9>
jmp    805f310 <parse_mode+0xb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    dl,BYTE PTR [ebx+esi*1]
movsx  eax,dl
cmp    eax,0x2b
je     805f3c0 <parse_mode+0x160>
cmp    eax,0x2d
je     805f3c0 <parse_mode+0x160>
cmp    BYTE PTR [ebp-0x7d],0x2b
je     805f3a4 <parse_mode+0x144>
cmp    BYTE PTR [ebp-0x7d],0x2d
je     805f35b <parse_mode+0xfb>
inc    ebx
cmp    ebx,edi
jl     805f310 <parse_mode+0xb0>
sub    esp,0x8
lea    eax,[ebp-0x38]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x360
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   ecx
push   eax
push   0x806f1f3
lea    eax,[ebp-0x78]
push   eax
call   8048f18 <sprintf@plt>
pop    eax
pop    edx
lea    eax,[ebp-0x38]
push   eax
lea    eax,[ebp-0x58]
push   eax
call   8048c68 <strcpy@plt>
pop    ecx
mov    DWORD PTR [ebp-0x7c],eax
pop    eax
lea    eax,[ebp-0x78]
push   eax
lea    eax,[ebp-0x7c]
push   eax
call   8057a60 <get_token>
mov    edx,DWORD PTR [ebp-0x7c]
push   edx
push   eax
push   0x8069e64
lea    eax,[ebp-0x38]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x20
jmp    805f334 <parse_mode+0xd4>
push   eax
lea    eax,[ebp-0x38]
push   eax
push   0x806e332
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    805f334 <parse_mode+0xd4>
lea    esi,[esi+eiz*1+0x0]
mov    BYTE PTR [ebp-0x7d],dl
jmp    805f334 <parse_mode+0xd4>
inc    esi
jmp    805f2ed <parse_mode+0x8d>
mov    BYTE PTR [ebp-0x38],0x0
jmp    805f2d6 <parse_mode+0x76>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   esi
call   8062b00 <find_user>
pop    edi
mov    ds:0x80762a4,eax
pop    eax
push   ebx
push   esi
call   8063320 <find_shit>
mov    ds:0x80766c4,eax
mov    DWORD PTR [esp],esi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    edi,DWORD PTR [ebp+0xc]
push   edi
push   ebx
push   esi
call   804e7a0 <on_mode>
jmp    805f350 <parse_mode+0xf0>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x40
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    805f460 <parse_notice+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
mov    esi,eax
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
cmp    BYTE PTR [eax],0x3a
je     805f580 <parse_notice+0x150>
sub    esp,0xc
push   ebx
call   8057c60 <getnick>
mov    edi,eax
pop    eax
pop    edx
mov    eax,ds:0x8075e74
push   ebx
add    eax,0xb2c
push   eax
call   8063790 <find_time>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     805f4ac <parse_notice+0x7c>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edx+0xc],eax
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x1
je     805f4fa <parse_notice+0xca>
cmp    BYTE PTR [esi],0x23
je     805f4c8 <parse_notice+0x98>
push   edx
push   eax
push   edi
push   0x806e337
call   804b650 <send_spymsg>
jmp    805f44b <parse_notice+0x1b>
sub    esp,0x8
push   0x1
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     805f44b <parse_notice+0x1b>
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   esi
push   edi
push   0x806e349
push   eax
call   804b970 <send_spy>
add    esp,0x20
jmp    805f44b <parse_notice+0x1b>
push   ecx
push   eax
push   edi
push   0x806e354
call   804b700 <send_statmsg>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
pop    esi
pop    edx
push   0x806a89a
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805f44b <parse_notice+0x1b>
sub    esp,0x8
push   0x806e36c
lea    eax,[ebp+0xc]
push   eax
call   8057a60 <get_token>
mov    DWORD PTR [esp],eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     805f569 <parse_notice+0x139>
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR ds:0x8075d20
push   ebx
push   edi
sub    edx,eax
push   edx
push   0x806e560
call   804b700 <send_statmsg>
add    esp,0x10
jmp    805f44b <parse_notice+0x1b>
mov    eax,ds:0x8075d20
mov    edx,eax
jmp    805f552 <parse_notice+0x122>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    805f47d <parse_notice+0x4d>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0xc]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
pop    ebx
mov    esi,eax
pop    eax
push   0x3
push   esi
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805f652 <parse_part+0xc2>
sub    esp,0xc
push   edi
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
sub    esp,0xc
push   edi
call   8057d10 <getuh>
add    esp,0x10
push   eax
push   0x8075da0
push   0x806e36f
push   ebx
call   804b970 <send_spy>
add    esp,0x18
mov    eax,ds:0x8075e74
push   0x8075da0
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805f622 <parse_part+0x92>
mov    al,BYTE PTR [ebx+0x38d]
or     eax,0x20
and    eax,0xffffffe7
mov    BYTE PTR [ebx+0x38d],al
sub    esp,0x8
push   esi
push   0x1
mov    ecx,DWORD PTR ds:0x8075d20
push   ecx
push   0x80671de
push   edi
push   0x8075da0
call   8063ba0 <make_seen>
add    esp,0x18
push   0x8075da0
push   ebx
call   804cd50 <remove_chanuser>
call   804a920 <check_all_steal>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x8],0x806e382
pop    ebp
jmp    8061640 <send_to_server>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
push   0x40
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
jne    805f6a0 <parse_privmsg+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
mov    esi,eax
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
cmp    BYTE PTR [eax],0x3a
je     805f738 <parse_privmsg+0xc8>
cmp    BYTE PTR [esi],0x23
setne  bl
and    ebx,0xff
dec    ebx
sub    esp,0x8
and    ebx,esi
push   ebx
push   edi
call   8062b00 <find_user>
pop    ecx
mov    ds:0x80762a4,eax
pop    eax
push   ebx
push   edi
call   8063320 <find_shit>
mov    ds:0x80766c4,eax
mov    DWORD PTR [esp],edi
call   8057c60 <getnick>
pop    ebx
pop    edx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
cmp    BYTE PTR [eax],0x1
je     805f713 <parse_privmsg+0xa3>
push   edx
push   eax
push   esi
push   edi
call   804dee0 <on_msg>
jmp    805f68b <parse_privmsg+0x1b>
sub    esp,0x8
inc    eax
push   0x806e6c6
push   eax
mov    DWORD PTR [ebp+0xc],eax
call   8057a20 <terminate>
add    esp,0xc
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   esi
push   edi
call   8055f50 <on_ctcp>
jmp    805f68b <parse_privmsg+0x1b>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    805f6b9 <parse_privmsg+0x49>
jmp    805f750 <parse_quit>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0xc]
push   ebx
call   8057c60 <getnick>
pop    ecx
pop    edx
push   eax
push   0x8075da0
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   esi
push   0x2
mov    eax,ds:0x8075d20
push   eax
push   0x80671de
push   ebx
push   0x8075da0
call   8063ba0 <make_seen>
add    esp,0x20
push   esi
push   0x8075da0
push   0x806e38b
push   ebx
call   804b8e0 <send_common_spy>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
add    esp,0x10
test   ebx,ebx
je     805f7d7 <parse_quit+0x87>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x8075da0
push   ebx
call   804cd50 <remove_chanuser>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    805f7c0 <parse_quit+0x70>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    804a920 <check_all_steal>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0xc]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    ebx,eax
pop    eax
pop    edx
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     805f84e <parse_topic+0x5e>
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     805f826 <parse_topic+0x36>
cmp    BYTE PTR [eax],0x3a
je     805f860 <parse_topic+0x70>
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
push   edi
call   804b3e0 <reverse_topic>
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
sub    esp,0x8
push   edi
call   8057c60 <getnick>
add    esp,0xc
push   eax
push   0x806e39e
push   esi
call   804b970 <send_spy>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    805f826 <parse_topic+0x36>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x21
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     805f88e <parse_wallops+0x1e>
cmp    BYTE PTR [eax],0x21
je     805f8b0 <parse_wallops+0x40>
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   ebx
push   0x806e3bb
call   804b700 <send_statmsg>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    BYTE PTR [eax],0x0
jmp    805f88e <parse_wallops+0x1e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    eax,ds:0x8075d28
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     805f905 <parse_EOMOTD+0x45>
cmp    BYTE PTR [eax+0xa8],0x0
je     805f980 <parse_EOMOTD+0xc0>
mov    eax,ds:0x8075d20
mov    DWORD PTR [edi+0x108],eax
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR ds:0x8075d20
mov    DWORD PTR [eax+0xbbc],edx
mov    DWORD PTR [eax+0x4],0x4
push   ecx
push   edx
add    eax,0x220
push   eax
push   0x806e3c3
call   8061640 <send_to_server>
mov    edi,DWORD PTR ds:0x8075e74
add    edi,0x360
xor    eax,eax
cld    
mov    ecx,0x8
rep stos DWORD PTR es:[edi],eax
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    BYTE PTR [edx+0x381],0x0
jne    805f960 <parse_EOMOTD+0xa0>
mov    edi,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+eiz*1+0x0]
push   eax
lea    eax,[edx+0x381]
push   eax
lea    eax,[edx+0x220]
push   eax
push   0x806e3cc
call   8061640 <send_to_server>
add    esp,0x10
jmp    805f957 <parse_EOMOTD+0x97>
mov    esi,esi
push   eax
push   0x4f
mov    eax,DWORD PTR [ebp+0x8]
push   eax
lea    eax,[edi+0xa8]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [edi+0xf7],0x0
add    esp,0x10
jmp    805f8fa <parse_EOMOTD+0x3a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0xc]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805fa16 <parse_001+0x66>
sub    esp,0x8
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    805fa40 <parse_001+0x90>
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    ebx,DWORD PTR ds:0x8075d28
push   ebx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     805fa16 <parse_001+0x66>
cmp    BYTE PTR [eax+0xa8],0x0
je     805fa20 <parse_001+0x70>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ecx
push   0x4f
mov    edx,DWORD PTR [ebp+0x8]
push   edx
lea    eax,[eax+0xa8]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [ebx+0xf7],0x0
add    esp,0x10
jmp    805fa16 <parse_001+0x66>
nop
mov    eax,ds:0x8075e74
push   ecx
add    eax,0x220
push   eax
push   ebx
push   0x806e580
call   80576b0 <debug>
pop    eax
pop    edx
push   ebx
mov    eax,ds:0x8075e74
push   eax
call   80595b0 <setbotnick>
add    esp,0x10
jmp    805f9e4 <parse_001+0x34>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    eax,ds:0x8075e74
add    eax,0x3b4
push   eax
call   8057920 <MyFree>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,ds:0x8075e74
add    eax,0x3b4
push   eax
mov    DWORD PTR ds:0x8075d6c,0x805fa70
call   80579d0 <mstrcpy>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    eax,ds:0x8075e74
add    eax,0x3b8
push   eax
call   8057920 <MyFree>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,ds:0x8075e74
push   ecx
add    eax,0x3b8
push   eax
mov    DWORD PTR ds:0x8075d6c,0x805fac0
call   80579d0 <mstrcpy>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
mov    eax,ds:0x8075e74
add    eax,0x3bc
push   eax
call   8057920 <MyFree>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
pop    eax
pop    edx
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,ds:0x8075e74
push   ecx
add    eax,0x3bc
push   eax
mov    DWORD PTR ds:0x8075d6c,0x805fb10
call   80579d0 <mstrcpy>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
cmp    BYTE PTR [eax],0x3a
je     805fbc8 <parse_213+0x68>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     805fb9c <parse_213+0x3c>
mov    esi,esi
cmp    DWORD PTR [ebx+0x10],0x14
je     805fbb0 <parse_213+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805fb90 <parse_213+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
push   0x806e3d7
mov    ecx,DWORD PTR [ebx+0x8]
push   ecx
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805fb96 <parse_213+0x36>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    805fb7f <parse_213+0x1f>
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb30]
test   eax,eax
je     805fbfc <parse_219+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    DWORD PTR [eax+0x10],0x14
je     805fc10 <parse_219+0x40>
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    805fbf0 <parse_219+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
jmp    805fc10 <parse_219+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
mov    ebx,DWORD PTR [eax]
push   eax
mov    eax,ds:0x8075e74
add    eax,0xb30
push   eax
call   8063890 <remove_time>
mov    eax,ebx
add    esp,0x10
jmp    805fbf8 <parse_219+0x28>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0xc]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
add    esp,0x10
test   ebx,ebx
je     805fc6c <parse_243+0x3c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebx+0x10],0x14
je     805fc80 <parse_243+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805fc60 <parse_243+0x30>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
push   0x806794b
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805fc66 <parse_243+0x36>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x28
lea    edi,[ebp+0xc]
push   edi
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x1c],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     805fd27 <parse_251+0x87>
mov    al,BYTE PTR [eax]
test   al,al
je     805fd27 <parse_251+0x87>
movsx  eax,al
cmp    eax,0xff
ja     805fec0 <parse_251+0x220>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     805feb0 <parse_251+0x210>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x10],eax
add    esp,0x10
test   esi,esi
je     805fd27 <parse_251+0x87>
test   ebx,ebx
je     805fd27 <parse_251+0x87>
mov    al,BYTE PTR [ebx]
test   al,al
jne    805fce2 <parse_251+0x42>
sub    esp,0xc
push   edi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     805fd92 <parse_251+0xf2>
mov    al,BYTE PTR [eax]
test   al,al
je     805fd92 <parse_251+0xf2>
movsx  eax,al
cmp    eax,0xff
ja     805fea0 <parse_251+0x200>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     805fe90 <parse_251+0x1f0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
mov    DWORD PTR [ebp-0x14],eax
mov    eax,DWORD PTR [ebp-0x10]
add    eax,DWORD PTR [ebp-0x14]
xor    esi,esi
mov    DWORD PTR [ebp-0x18],eax
add    esp,0x10
test   esi,esi
je     805fd92 <parse_251+0xf2>
test   ebx,ebx
je     805fd92 <parse_251+0xf2>
mov    al,BYTE PTR [ebx]
test   al,al
jne    805fd44 <parse_251+0xa4>
sub    esp,0xc
push   edi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     805fdf4 <parse_251+0x154>
mov    al,BYTE PTR [eax]
test   al,al
je     805fdf4 <parse_251+0x154>
movsx  eax,al
cmp    eax,0xff
ja     805fe80 <parse_251+0x1e0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     805fe70 <parse_251+0x1d0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x1c],eax
add    esp,0x10
test   esi,esi
je     805fdf4 <parse_251+0x154>
test   ebx,ebx
je     805fdf4 <parse_251+0x154>
mov    al,BYTE PTR [ebx]
test   al,al
jne    805fdaf <parse_251+0x10f>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     805fe1c <parse_251+0x17c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebx+0x10],0xf
je     805fe30 <parse_251+0x190>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805fe10 <parse_251+0x170>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x806e3e1
mov    edi,DWORD PTR [ebx+0x8]
push   edi
call   80614d0 <send_to_user>
pop    esi
mov    ecx,DWORD PTR [ebp-0x1c]
push   ecx
mov    edx,DWORD PTR [ebp-0x14]
push   edx
mov    eax,DWORD PTR [ebp-0x18]
push   eax
push   0x806e5c0
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x20
jmp    805fe16 <parse_251+0x176>
jmp    805fe70 <parse_251+0x1d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    805fde3 <parse_251+0x143>
xor    eax,eax
jmp    805fdcd <parse_251+0x12d>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    805fd81 <parse_251+0xe1>
xor    eax,eax
jmp    805fd62 <parse_251+0xc2>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    805fd16 <parse_251+0x76>
xor    eax,eax
jmp    805fd00 <parse_251+0x60>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    edi,[ebp+0xc]
push   edi
mov    DWORD PTR [ebp-0x10],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     805ff3e <parse_252+0x6e>
mov    al,BYTE PTR [eax]
test   al,al
je     805ff3e <parse_252+0x6e>
movsx  eax,al
cmp    eax,0xff
ja     805ffa0 <parse_252+0xd0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     805ff90 <parse_252+0xc0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x10],eax
add    esp,0x10
test   esi,esi
je     805ff3e <parse_252+0x6e>
test   ebx,ebx
je     805ff3e <parse_252+0x6e>
mov    al,BYTE PTR [ebx]
test   al,al
jne    805fefd <parse_252+0x2d>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     805ff5c <parse_252+0x8c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x10],0xf
je     805ff70 <parse_252+0xa0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    805ff50 <parse_252+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806e3f3
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    805ff56 <parse_252+0x86>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    805ff2d <parse_252+0x5d>
lea    esi,[esi+0x0]
xor    eax,eax
jmp    805ff1b <parse_252+0x4b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    edi,[ebp+0xc]
push   edi
mov    DWORD PTR [ebp-0x10],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     806001e <parse_253+0x6e>
mov    al,BYTE PTR [eax]
test   al,al
je     806001e <parse_253+0x6e>
movsx  eax,al
cmp    eax,0xff
ja     8060080 <parse_253+0xd0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     8060070 <parse_253+0xc0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x10],eax
add    esp,0x10
test   esi,esi
je     806001e <parse_253+0x6e>
test   ebx,ebx
je     806001e <parse_253+0x6e>
mov    al,BYTE PTR [ebx]
test   al,al
jne    805ffdd <parse_253+0x2d>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806003c <parse_253+0x8c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x10],0xf
je     8060050 <parse_253+0xa0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060030 <parse_253+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,DWORD PTR [ebp-0x10]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x806e407
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060036 <parse_253+0x86>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    806000d <parse_253+0x5d>
lea    esi,[esi+0x0]
xor    eax,eax
jmp    805fffb <parse_253+0x4b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    edi,[ebp+0xc]
push   edi
mov    DWORD PTR [ebp-0x10],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     80600fe <parse_254+0x6e>
mov    al,BYTE PTR [eax]
test   al,al
je     80600fe <parse_254+0x6e>
movsx  eax,al
cmp    eax,0xff
ja     8060160 <parse_254+0xd0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     8060150 <parse_254+0xc0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x10],eax
add    esp,0x10
test   esi,esi
je     80600fe <parse_254+0x6e>
test   ebx,ebx
je     80600fe <parse_254+0x6e>
mov    al,BYTE PTR [ebx]
test   al,al
jne    80600bd <parse_254+0x2d>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806011c <parse_254+0x8c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x10],0xf
je     8060130 <parse_254+0xa0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060110 <parse_254+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   esi
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
push   0x806e422
mov    edx,DWORD PTR [ebx+0x8]
push   edx
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060116 <parse_254+0x86>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    80600ed <parse_254+0x5d>
lea    esi,[esi+0x0]
xor    eax,eax
jmp    80600db <parse_254+0x4b>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    edi,[ebp+0xc]
push   edi
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x10],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     80601e9 <parse_255+0x79>
mov    al,BYTE PTR [eax]
test   al,al
je     80601e9 <parse_255+0x79>
movsx  eax,al
cmp    eax,0xff
ja     8060320 <parse_255+0x1b0>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     8060310 <parse_255+0x1a0>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x10],eax
add    esp,0x10
test   esi,esi
je     80601e9 <parse_255+0x79>
test   ebx,ebx
je     80601e9 <parse_255+0x79>
mov    al,BYTE PTR [ebx]
test   al,al
jne    80601a4 <parse_255+0x34>
sub    esp,0xc
push   edi
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,0x1
mov    ebx,eax
je     806024b <parse_255+0xdb>
mov    al,BYTE PTR [eax]
test   al,al
je     806024b <parse_255+0xdb>
movsx  eax,al
cmp    eax,0xff
ja     8060300 <parse_255+0x190>
test   BYTE PTR [eax*4+0x8071ad5],0x4
setne  al
and    eax,0xff
test   eax,eax
je     80602f0 <parse_255+0x180>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
xor    esi,esi
mov    DWORD PTR [ebp-0x14],eax
add    esp,0x10
test   esi,esi
je     806024b <parse_255+0xdb>
test   ebx,ebx
je     806024b <parse_255+0xdb>
mov    al,BYTE PTR [ebx]
test   al,al
jne    8060206 <parse_255+0x96>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb30]
test   esi,esi
je     806028c <parse_255+0x11c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [esi+0x10],0xf
je     80602c0 <parse_255+0x150>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8060260 <parse_255+0xf0>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb30]
test   esi,esi
je     806028c <parse_255+0x11c>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR [esi+0x10],0xf
je     80602a0 <parse_255+0x130>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8060280 <parse_255+0x110>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [esi]
add    eax,0xb30
push   esi
push   eax
call   8063890 <remove_time>
mov    esi,ebx
add    esp,0x10
jmp    8060288 <parse_255+0x118>
lea    esi,[esi+0x0]
mov    edi,DWORD PTR [ebp-0x14]
push   edi
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
push   0x806e432
mov    ecx,DWORD PTR [esi+0x8]
push   ecx
call   80614d0 <send_to_user>
pop    eax
pop    edx
push   0x806e450
mov    edi,DWORD PTR [esi+0x8]
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060266 <parse_255+0xf6>
mov    esi,esi
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    806023a <parse_255+0xca>
xor    eax,eax
jmp    8060224 <parse_255+0xb4>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8057b00 <chop>
mov    ebx,eax
jmp    80601d8 <parse_255+0x68>
xor    eax,eax
jmp    80601c2 <parse_255+0x52>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
pop    eax
pop    edx
push   0x80679d7
push   ebx
call   8057a60 <get_token>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
add    esp,0x10
test   ebx,ebx
je     806036c <parse_301+0x3c>
nop
cmp    DWORD PTR [ebx+0x10],0x5
je     8060380 <parse_301+0x50>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060360 <parse_301+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
jmp    8060380 <parse_301+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x806e462
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060366 <parse_301+0x36>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
test   eax,eax
je     80603ed <parse_311+0x4d>
cmp    BYTE PTR [eax],0x3a
je     80604eb <parse_311+0x14b>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80604c6 <parse_311+0x126>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb30]
test   esi,esi
je     8060433 <parse_311+0x93>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0x10]
cmp    eax,0x5
je     8060480 <parse_311+0xe0>
cmp    eax,0x19
je     8060440 <parse_311+0xa0>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8060420 <parse_311+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
push   edi
push   0x806e477
mov    ecx,DWORD PTR [esi+0x8]
push   ecx
call   80614d0 <send_to_user>
add    esp,0x18
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [esi]
add    eax,0xb30
push   esi
push   eax
call   8063890 <remove_time>
mov    esi,ebx
add    esp,0x10
jmp    806042f <parse_311+0x8f>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ecx
push   edi
push   0x806e48a
mov    edx,DWORD PTR [esi+0x8]
push   edx
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806e49f
mov    eax,DWORD PTR [esi+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x1c
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x806e4b7
mov    eax,DWORD PTR [esi+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,DWORD PTR [esi+0x10]
jmp    8060428 <parse_311+0x88>
mov    esi,DWORD PTR [ebp-0x14]
push   esi
mov    ebx,DWORD PTR [ebp-0x10]
push   ebx
mov    eax,ds:0x8075e74
push   0x806e4b1
add    eax,0x2e0
push   eax
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    806040c <parse_311+0x6c>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    80603ed <parse_311+0x4d>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
test   eax,eax
je     8060532 <parse_312+0x32>
cmp    BYTE PTR [eax],0x3a
je     806059a <parse_312+0x9a>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806055c <parse_312+0x5c>
jmp    8060550 <parse_312+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    DWORD PTR [ebx+0x10],0x5
je     8060570 <parse_312+0x70>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060550 <parse_312+0x50>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   esi
push   0x806e4cc
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   0x806e4e1
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060556 <parse_312+0x56>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    8060532 <parse_312+0x32>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x418
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    esi
mov    edi,eax
pop    eax
push   0x80679d7
push   ebx
call   8057a60 <get_token>
pop    edx
pop    ecx
push   eax
lea    esi,[ebp-0x418]
push   esi
call   8048c68 <strcpy@plt>
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     80605fe <parse_313+0x5e>
push   eax
push   esi
push   0x806e50a
push   esi
call   8048f18 <sprintf@plt>
jmp    80605e0 <parse_313+0x40>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806061c <parse_313+0x7c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x10],0x5
je     8060630 <parse_313+0x90>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060610 <parse_313+0x70>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   esi
push   edi
push   0x806e4f8
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060616 <parse_313+0x76>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    edx
pop    ecx
push   0x1
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     8060680 <parse_315+0x30>
or     BYTE PTR [eax+0x38d],0x6
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    ebx,eax
mov    DWORD PTR [esp],esi
call   8048cd8 <atol@plt>
add    esp,0x10
test   ebx,ebx
mov    edi,eax
je     80606d8 <parse_317+0x48>
cmp    BYTE PTR [ebx],0x0
jne    806076d <parse_317+0xdd>
mov    DWORD PTR [ebp-0x10],0x0
mov    eax,edi
mov    edx,0x88888889
imul   edx
lea    esi,[edi+edx*1]
mov    eax,edi
sar    eax,0x1f
sar    esi,0x5
sub    esi,eax
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806071c <parse_317+0x8c>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    DWORD PTR [ebx+0x10],0x5
je     8060730 <parse_317+0xa0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060710 <parse_317+0x80>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   edi
push   esi
push   0x806e600
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x10]
add    esp,0x10
test   eax,eax
je     8060716 <parse_317+0x86>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8057de0 <time2away>
add    esp,0xc
push   eax
push   0x806e510
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060716 <parse_317+0x86>
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x10],eax
jmp    80606df <parse_317+0x4f>
jmp    8060790 <parse_318>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb30]
test   eax,eax
je     80607bc <parse_318+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    DWORD PTR [eax+0x10],0x5
je     80607d0 <parse_318+0x40>
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    80607b0 <parse_318+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
jmp    80607d0 <parse_318+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
mov    ebx,DWORD PTR [eax]
push   eax
mov    eax,ds:0x8075e74
add    eax,0xb30
push   eax
call   8063890 <remove_time>
mov    eax,ebx
add    esp,0x10
jmp    80607b8 <parse_318+0x28>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    eax,DWORD PTR [ebp+0xc]
add    esp,0x10
test   eax,eax
je     806083c <parse_319+0x4c>
cmp    BYTE PTR [eax],0x0
je     806083c <parse_319+0x4c>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb30]
test   ebx,ebx
je     806083c <parse_319+0x4c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebx+0x10],0x5
je     8060850 <parse_319+0x60>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8060830 <parse_319+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
jmp    8060850 <parse_319+0x60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x3a
je     8060870 <parse_319+0x80>
push   ecx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   0x806e525
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8060836 <parse_319+0x46>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
jmp    8060858 <parse_319+0x68>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x20
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f98 <strchr@plt>
inc    eax
mov    DWORD PTR [ebp+0xc],eax
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     80608ac <parse_324+0x2c>
cmp    BYTE PTR [eax],0x3a
je     80608c0 <parse_324+0x40>
push   ecx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804e7a0 <on_mode>
mov    esp,ebp
pop    ebp
ret    
nop
inc    eax
jmp    80608ac <parse_324+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x228
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    esi
pop    edi
push   0x1
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ds:0x8075c80,eax
jne    8060910 <parse_352+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x21c],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x220],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    ecx
mov    edx,DWORD PTR [ebp-0x220]
push   edx
mov    esi,eax
mov    eax,DWORD PTR [ebp-0x21c]
push   eax
push   edi
push   0x8067a31
lea    ebx,[ebp-0x218]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x18
push   0x80683fa
push   0x0
mov    eax,ds:0x8075d20
push   eax
push   0x80671de
push   ebx
push   edi
call   8063ba0 <make_seen>
mov    eax,ds:0x8075c80
add    esp,0x20
test   BYTE PTR [eax+0x38d],0x4
jne    8060903 <parse_352+0x33>
push   eax
mov    eax,DWORD PTR [ebp-0x220]
push   eax
mov    eax,DWORD PTR [ebp-0x21c]
push   eax
push   edi
call   804cca0 <make_chanuser>
mov    ebx,eax
mov    al,BYTE PTR [esi]
add    esp,0x10
test   al,al
je     8060903 <parse_352+0x33>
nop
movsx  eax,al
cmp    eax,0x2b
je     8060a20 <parse_352+0x150>
cmp    eax,0x40
je     80609e0 <parse_352+0x110>
inc    esi
mov    al,BYTE PTR [esi]
test   al,al
jne    80609c0 <parse_352+0xf0>
jmp    8060903 <parse_352+0x33>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x4]
or     eax,0x2
and    eax,0xfffffffe
sub    esp,0x8
mov    DWORD PTR [ebx+0x4],eax
mov    eax,ds:0x8075e74
push   edi
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80609cd <parse_352+0xfd>
mov    eax,ds:0x8075c80
or     BYTE PTR [eax+0x38d],0x8
jmp    80609cd <parse_352+0xfd>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x4]
or     eax,0x1
and    eax,0xfffffffd
mov    DWORD PTR [ebx+0x4],eax
jmp    80609cd <parse_352+0xfd>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    edx
pop    ecx
push   0x1
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8060a98 <parse_367+0x68>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    edi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
test   eax,eax
je     8060a84 <parse_367+0x54>
cmp    BYTE PTR [eax],0x0
jne    8060aa0 <parse_367+0x70>
mov    eax,ds:0x8075d20
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   edi
lea    eax,[esi+0x18]
push   eax
call   804c190 <make_ban>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   eax
call   8048cd8 <atol@plt>
add    esp,0x10
jmp    8060a89 <parse_367+0x59>
mov    esi,esi
push   ebp
mov    ebp,esp
lea    eax,[ebp+0xc]
sub    esp,0x14
push   eax
call   8057b00 <chop>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    ebx
pop    edx
push   0x3
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8060b0d <parse_405+0x3d>
mov    al,BYTE PTR [eax+0x38d]
and    eax,0xffffffcf
or     eax,0x22
mov    BYTE PTR [edx+0x38d],al
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR ds:0x8075e74
cmp    DWORD PTR [ebx+0x4],0x4
je     8060ba0 <parse_433+0x80>
lea    ecx,[ebx+0x220]
mov    esi,ecx
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     8060b40 <parse_433+0x20>
test   edx,0x8080
jne    8060b65 <parse_433+0x45>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,esi
cmp    ecx,0x9
je     8060ba7 <parse_433+0x87>
sub    esp,0x8
push   0x806e53a
lea    eax,[ebx+0x220]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x220
push   eax
push   0x8069064
call   8061640 <send_to_server>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
cmp    BYTE PTR [ebx+0x220],0x5f
lea    edx,[ebx+0x220]
je     8060c20 <parse_433+0x100>
mov    al,BYTE PTR [edx]
test   al,al
je     8060bc1 <parse_433+0xa1>
mov    BYTE PTR [edx],0x5f
jmp    8060b88 <parse_433+0x68>
push   eax
push   0x5
lea    eax,[ebx+0x22d]
push   eax
lea    eax,[ebx+0x220]
push   eax
call   8048e38 <strncpy@plt>
mov    eax,ds:0x8075e74
mov    BYTE PTR [eax+0x225],0x0
call   8048df8 <rand@plt>
mov    edx,0x2710
mov    ecx,edx
cdq    
add    esp,0xc
idiv   ecx
push   edx
push   0x806b82b
lea    ebx,[ebp-0x18]
push   ebx
call   8048f18 <sprintf@plt>
pop    ecx
pop    esi
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x220
jmp    8060b7f <parse_433+0x5f>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    edx
mov    al,BYTE PTR [edx]
cmp    al,0x5f
je     8060c20 <parse_433+0x100>
jmp    8060bb8 <parse_433+0x98>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8075e74
lea    edx,[eax+0x246]
push   edx
lea    edx,[eax+0x23a]
push   edx
add    eax,0x22d
push   eax
push   0x80690b3
call   8061640 <send_to_server>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
pop    edx
pop    ecx
push   0x3
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8060c9d <parse_471+0x3d>
mov    al,BYTE PTR [eax+0x38d]
and    eax,0xffffffcf
or     eax,0x22
mov    BYTE PTR [edx+0x38d],al
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x210
lea    ebx,[ebp+0xc]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
mov    ebx,eax
pop    eax
pop    edx
push   0x3
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     8060cf2 <parse_473+0x42>
mov    al,BYTE PTR [eax+0x38d]
and    eax,0xffffffcf
or     eax,0x22
mov    BYTE PTR [edx+0x38d],al
mov    edx,DWORD PTR ds:0x8075e74
cmp    BYTE PTR [edx+0x2e0],0x0
jne    8060d20 <parse_473+0x70>
sub    esp,0x8
lea    eax,[edx+0x220]
push   eax
push   0x806e3c3
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
sub    esp,0xc
lea    eax,[edx+0x2e0]
push   eax
lea    eax,[edx+0x220]
push   eax
push   ebx
push   0x806e53c
lea    ebx,[ebp-0x208]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x18
push   ebx
push   0x0
call   805b750 <Link_needinvite>
jmp    8060d15 <parse_473+0x65>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8060dd0 <parseline+0x80>
mov    al,BYTE PTR [eax]
test   al,al
je     8060dd0 <parseline+0x80>
cmp    al,0x3a
je     8060e60 <parseline+0x110>
mov    edi,esi
xor    esi,esi
mov    eax,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [eax],0x3a
je     8060e57 <parseline+0x107>
mov    al,BYTE PTR [edi]
sub    eax,0x31
cmp    al,0x7
jbe    8060e00 <parseline+0xb0>
mov    eax,ds:0x8071560
test   eax,eax
je     8060dd0 <parseline+0x80>
xor    ebx,ebx
lea    esi,[esi+0x0]
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebx+0x8071560]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8060dd8 <parseline+0x88>
add    ebx,0xc
mov    ecx,DWORD PTR [ebx+0x8071560]
test   ecx,ecx
jne    8060da0 <parseline+0x50>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
test   BYTE PTR [ebx+0x8071564],0x1
je     8060de5 <parseline+0x95>
test   esi,esi
je     8060dd0 <parseline+0x80>
sub    esp,0x8
mov    edi,DWORD PTR [ebp+0x8]
push   edi
push   esi
call   DWORD PTR [ebx+0x8071568]
jmp    8060dd0 <parseline+0x80>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     8060dd0 <parseline+0x80>
mov    edi,DWORD PTR ds:0x8071620
test   edi,edi
mov    eax,DWORD PTR [eax]
je     8060dd0 <parseline+0x80>
xor    edx,edx
mov    esi,esi
cmp    DWORD PTR [edx+0x8071620],eax
je     8060e37 <parseline+0xe7>
add    edx,0xc
mov    ecx,DWORD PTR [edx+0x8071620]
test   ecx,ecx
jne    8060e20 <parseline+0xd0>
jmp    8060dd0 <parseline+0x80>
test   BYTE PTR [edx+0x8071624],0x1
je     8060e44 <parseline+0xf4>
test   esi,esi
je     8060dd0 <parseline+0x80>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
push   esi
call   DWORD PTR [edx+0x8071628]
jmp    8060dd0 <parseline+0x80>
inc    eax
mov    DWORD PTR [ebp+0x8],eax
jmp    8060d89 <parseline+0x39>
sub    esp,0xc
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
inc    esi
mov    edi,eax
add    esp,0x10
jmp    8060d7d <parseline+0x2d>
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8048ce8 <__inet_addr@plt>
add    esp,0x10
cmp    eax,0xffffffff
je     8060ea0 <get_ip+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
sub    esp,0xc
push   ebx
call   8048f08 <gethostbyname@plt>
mov    edx,eax
add    esp,0x10
test   edx,edx
mov    eax,0xffffffff
je     8060e98 <get_ip+0x18>
mov    eax,DWORD PTR [edx+0x10]
mov    eax,DWORD PTR [eax]
mov    eax,DWORD PTR [eax]
jmp    8060e98 <get_ip+0x18>
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x14
push   0x0
push   0x1
push   0x2
call   8048d58 <socket@plt>
mov    esi,eax
add    esp,0x10
test   esi,esi
mov    eax,0xffffffff
js     8060f37 <SockOpts+0x77>
sub    esp,0xc
push   0x4
lea    ebx,[ebp-0xc]
push   ebx
push   0x80
push   0xffff
push   esi
mov    DWORD PTR [ebp-0xc],0x0
call   8048dc8 <setsockopt@plt>
add    esp,0x14
push   0x4
push   ebx
push   0x8
push   0xffff
push   esi
mov    DWORD PTR [ebp-0xc],0x1
call   8048dc8 <setsockopt@plt>
add    esp,0x18
push   0x3
push   esi
call   8048fb8 <fcntl@plt>
or     eax,0x4
add    esp,0xc
push   eax
push   0x4
push   esi
call   8048fb8 <fcntl@plt>
mov    eax,esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
call   8060ec0 <SockOpts>
mov    ebx,eax
test   ebx,ebx
mov    eax,0xffffffff
js     8060fa8 <SockListener+0x68>
mov    edx,DWORD PTR [ebp+0x8]
xchg   dl,dh
mov    DWORD PTR [ebp-0x18],0x0
mov    WORD PTR [ebp-0x16],dx
push   edx
push   0x10
lea    eax,[ebp-0x18]
push   eax
push   ebx
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    BYTE PTR [ebp-0x17],0x2
mov    DWORD PTR [ebp-0x14],0x0
call   8048db8 <bind@plt>
add    esp,0x10
test   eax,eax
js     8060fb0 <SockListener+0x70>
sub    esp,0x8
push   0x1
push   ebx
call   8048e68 <listen@plt>
add    esp,0x10
test   eax,eax
js     8060fb0 <SockListener+0x70>
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
sub    esp,0xc
push   ebx
call   8048fc8 <close@plt>
mov    eax,0xffffffff
jmp    8060fa8 <SockListener+0x68>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x20
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
test   ebx,ebx
push   ecx
mov    eax,ebx
je     8061250 <SockConnect+0x290>
push   eax
push   0x806e62b
call   80576b0 <debug>
call   8060ec0 <SockOpts>
add    esp,0x10
test   eax,eax
mov    edi,eax
mov    edx,0xffffffff
js     80610a3 <SockConnect+0xe3>
test   ebx,ebx
je     806123d <SockConnect+0x27d>
mov    eax,ds:0x8075e74
xor    esi,esi
cmp    BYTE PTR [eax+0x296],0x0
je     8061022 <SockConnect+0x62>
mov    edx,DWORD PTR [eax+0x2dc]
test   edx,edx
je     80611c0 <SockConnect+0x200>
test   esi,esi
je     8061170 <SockConnect+0x1b0>
mov    edx,DWORD PTR ds:0x8075e74
cmp    BYTE PTR [edx+0x296],0x0
je     8061046 <SockConnect+0x86>
cmp    DWORD PTR [edx+0x2dc],0x1
je     80610f3 <SockConnect+0x133>
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   ebx
xchg   al,ah
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x24],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    BYTE PTR [ebp-0x27],0x2
mov    WORD PTR [ebp-0x26],ax
call   8060e80 <get_ip>
mov    DWORD PTR [ebp-0x24],eax
add    esp,0x10
inc    eax
mov    edx,0xffffffff
je     80610a3 <SockConnect+0xe3>
mov    BYTE PTR [ebp-0x27],0x2
mov    eax,DWORD PTR [ebp-0x24]
test   eax,eax
jne    80610b0 <SockConnect+0xf0>
sub    esp,0xc
push   0x806e638
call   80576b0 <debug>
mov    edx,0xffffffff
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
push   eax
push   0x10
lea    eax,[ebp-0x28]
push   eax
push   edi
call   8048ca8 <connect@plt>
add    esp,0x10
test   eax,eax
js     80610c8 <SockConnect+0x108>
mov    edx,edi
jmp    80610a3 <SockConnect+0xe3>
call   8048de8 <__error@plt>
cmp    DWORD PTR [eax],0x24
je     80610c4 <SockConnect+0x104>
sub    esp,0x10
call   8048de8 <__error@plt>
pop    ebx
pop    esi
mov    ecx,DWORD PTR [eax]
push   ecx
push   0x806e740
call   80576b0 <debug>
mov    DWORD PTR [esp],edi
call   8048fc8 <close@plt>
jmp    806109e <SockConnect+0xde>
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x24],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    BYTE PTR [ebp-0x27],0x2
mov    ax,WORD PTR [edx+0x2d8]
xchg   al,ah
sub    esp,0xc
mov    WORD PTR [ebp-0x26],ax
lea    eax,[edx+0x296]
push   eax
call   8060e80 <get_ip>
mov    DWORD PTR [ebp-0x24],eax
add    esp,0x10
inc    eax
je     806114d <SockConnect+0x18d>
sub    esp,0xc
push   0x806e780
call   80576b0 <debug>
add    esp,0x10
jmp    806108a <SockConnect+0xca>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x2dc],0x65
jmp    806109e <SockConnect+0xde>
jmp    8061170 <SockConnect+0x1b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   edx
push   0x10
lea    eax,[ebp-0x28]
push   eax
push   edi
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    BYTE PTR [ebp-0x27],0x2
mov    DWORD PTR [ebp-0x24],0x0
call   8048db8 <bind@plt>
add    esp,0x10
test   eax,eax
mov    edx,0xffffffff
jns    806102a <SockConnect+0x6a>
jmp    80610a3 <SockConnect+0xe3>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
add    eax,0x296
push   eax
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x24],0x0
mov    DWORD PTR [ebp-0x20],0x0
mov    DWORD PTR [ebp-0x1c],0x0
mov    BYTE PTR [ebp-0x27],0x2
call   8060e80 <get_ip>
mov    DWORD PTR [ebp-0x24],eax
add    esp,0x10
inc    eax
je     8061229 <SockConnect+0x269>
push   ecx
push   0x10
lea    eax,[ebp-0x28]
push   eax
push   edi
call   8048db8 <bind@plt>
add    esp,0x10
test   eax,eax
js     8061022 <SockConnect+0x62>
sub    esp,0xc
push   0x806e7a0
call   80576b0 <debug>
mov    esi,0x1
add    esp,0x10
jmp    8061022 <SockConnect+0x62>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x2dc],0x64
jmp    8061022 <SockConnect+0x62>
sub    esp,0xc
push   0x806e64a
jmp    8061099 <SockConnect+0xd9>
lea    esi,[esi+0x0]
mov    eax,0x8071283
jmp    8060fda <SockConnect+0x1a>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x81c
mov    esi,DWORD PTR [ebp+0x8]
cmp    esi,0xffffffff
mov    eax,0xffffffff
je     8061329 <send_to_socket+0xc9>
push   edx
lea    eax,[ebp+0x10]
push   eax
mov    edi,DWORD PTR [ebp+0xc]
push   edi
lea    ebx,[ebp-0x818]
push   ebx
call   8048c98 <vsprintf@plt>
mov    edi,ebx
add    esp,0xc
mov    ecx,ebx
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     80612a0 <send_to_socket+0x40>
test   edx,0x8080
jne    80612c5 <send_to_socket+0x65>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,edi
push   ecx
push   ebx
push   esi
call   8048d98 <write@plt>
add    esp,0x10
test   ebx,ebx
mov    edi,eax
mov    DWORD PTR [ebp-0x81c],ebx
je     8061323 <send_to_socket+0xc3>
cmp    BYTE PTR [ebx],0x0
je     8061323 <send_to_socket+0xc3>
lea    ebx,[ebp-0x81c]
mov    esi,esi
sub    esp,0x8
push   0x80671db
push   ebx
call   8057a60 <get_token>
add    esp,0xc
test   eax,eax
je     806134f <send_to_socket+0xef>
push   eax
push   esi
push   0x806e663
call   80576b0 <debug>
mov    eax,DWORD PTR [ebp-0x81c]
add    esp,0x10
test   eax,eax
je     8061323 <send_to_socket+0xc3>
cmp    BYTE PTR [eax],0x0
jne    80612f0 <send_to_socket+0x90>
test   edi,edi
js     8061331 <send_to_socket+0xd1>
mov    eax,edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x10
call   8048de8 <__error@plt>
mov    ebx,DWORD PTR [eax]
add    esp,0xc
push   ebx
push   esi
push   0x806e672
call   80576b0 <debug>
add    esp,0x10
jmp    8061327 <send_to_socket+0xc7>
mov    eax,0x8071283
jmp    8061305 <send_to_socket+0xa5>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x808
lea    eax,[ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
lea    ebx,[ebp-0x808]
push   ebx
call   8048c98 <vsprintf@plt>
add    esp,0xc
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xbb4],edx
mov    ecx,DWORD PTR [ebp+0x8]
push   ebx
push   ecx
push   0x806e689
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x808
lea    eax,[ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
lea    ebx,[ebp-0x808]
push   eax
push   ebx
call   8048c98 <vsprintf@plt>
add    esp,0xc
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x806e3cc
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x808
lea    eax,[ebp+0x14]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
lea    ebx,[ebp-0x808]
push   ebx
call   8048c98 <vsprintf@plt>
push   ebx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x806e698
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x804
mov    edx,DWORD PTR ds:0x8075d20
mov    ecx,DWORD PTR ds:0x8075e74
mov    eax,edx
sub    eax,DWORD PTR [ecx+0xbac]
cmp    eax,0x4
jg     8061460 <send_ctcp_reply+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
mov    DWORD PTR [ecx+0xbac],edx
push   ecx
lea    eax,[ebp+0x10]
push   eax
mov    edx,DWORD PTR [ebp+0xc]
push   edx
lea    ebx,[ebp-0x808]
push   ebx
call   8048c98 <vsprintf@plt>
add    esp,0xc
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x806e6a7
call   8061640 <send_to_server>
jmp    8061453 <send_ctcp_reply+0x23>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x808
lea    eax,[ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
lea    ebx,[ebp-0x808]
push   eax
push   ebx
call   8048c98 <vsprintf@plt>
add    esp,0xc
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
push   0x806e6b7
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x101c
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     80615e0 <send_to_user+0x110>
push   esi
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
lea    edi,[ebp-0x1018]
push   edi
call   8048c98 <vsprintf@plt>
pop    eax
pop    edx
push   edi
lea    eax,[ebp-0x101c]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x80614d0
call   80579d0 <mstrcpy>
mov    eax,DWORD PTR [ebp-0x101c]
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x1020],eax
je     8061578 <send_to_user+0xa8>
cmp    BYTE PTR [eax],0x0
je     8061578 <send_to_user+0xa8>
lea    esi,[ebp-0x1020]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x806b2d9
push   esi
call   8057a60 <get_token>
add    esp,0xc
push   eax
push   eax
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x806e6c8
call   80576b0 <debug>
mov    eax,DWORD PTR [ebp-0x1020]
add    esp,0x10
test   eax,eax
je     8061578 <send_to_user+0xa8>
cmp    BYTE PTR [eax],0x0
jne    8061540 <send_to_user+0x70>
sub    esp,0xc
lea    eax,[ebp-0x101c]
push   eax
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
je     80615e0 <send_to_user+0x110>
mov    al,BYTE PTR [ebx]
test   al,al
je     80615e0 <send_to_user+0x110>
cmp    al,0x24
je     80615e8 <send_to_user+0x118>
sub    esp,0x8
push   edi
push   ebx
call   8055c40 <send_chat>
add    esp,0x10
test   eax,eax
jne    80615e0 <send_to_user+0x110>
mov    eax,ds:0x8075e78
test   eax,eax
jne    80615e0 <send_to_user+0x110>
mov    eax,ds:0x8075d80
test   eax,eax
jne    80615e0 <send_to_user+0x110>
cmp    BYTE PTR [ebx],0x2a
je     80615e0 <send_to_user+0x110>
push   eax
push   edi
push   esi
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x806e6d7
call   8061640 <send_to_server>
add    esp,0x10
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   ebx
push   0x806e6e5
call   80576b0 <debug>
mov    DWORD PTR [esp],edi
mov    esi,DWORD PTR ds:0x8075e74
call   8059410 <escape_string>
mov    DWORD PTR [esp],eax
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x220
push   eax
push   0x806f3cb
lea    ebx,[ebp-0x818]
push   ebx
call   8048f18 <sprintf@plt>
add    esp,0x18
push   ebx
push   0x0
call   805b480 <Link_reply>
mov    DWORD PTR ds:0x8075e74,esi
jmp    80615e0 <send_to_user+0x110>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x810
mov    eax,ds:0x8075e74
cmp    DWORD PTR [eax+0x8],0xffffffff
je     80616f9 <send_to_server+0xb9>
push   ebx
lea    eax,[ebp+0xc]
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    ebx,[ebp-0x808]
push   ebx
call   8048c98 <vsprintf@plt>
pop    eax
pop    edx
push   0x806b2d9
push   ebx
call   8057c30 <Strcat>
mov    esi,ebx
add    esp,0xc
mov    ecx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ecx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ecx,0x4
and    edx,0x80808080
je     8061690 <send_to_server+0x50>
test   edx,0x8080
jne    80616b5 <send_to_server+0x75>
shr    edx,0x10
add    ecx,0x2
add    dl,dl
sbb    ecx,0x3
sub    ecx,esi
push   ecx
push   ebx
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048d98 <write@plt>
add    esp,0x10
test   eax,eax
js     8061730 <send_to_server+0xf0>
sub    esp,0x8
push   0x806b2d9
mov    DWORD PTR [ebp-0x80c],ebx
lea    ebx,[ebp-0x80c]
push   ebx
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80616f9 <send_to_server+0xb9>
cmp    BYTE PTR [eax],0x0
jne    8061700 <send_to_server+0xc0>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
push   esi
push   eax
mov    eax,ds:0x8075e74
mov    ecx,DWORD PTR [eax+0x8]
push   ecx
push   0x806e6fc
call   80576b0 <debug>
pop    eax
pop    edx
push   0x806b2d9
push   ebx
call   8057a60 <get_token>
add    esp,0x10
test   eax,eax
je     80616f9 <send_to_server+0xb9>
cmp    BYTE PTR [eax],0x0
jne    8061700 <send_to_server+0xc0>
jmp    80616f9 <send_to_server+0xb9>
sub    esp,0x10
call   8048de8 <__error@plt>
mov    eax,DWORD PTR [eax]
add    esp,0xc
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
push   0x806e70b
call   80576b0 <debug>
pop    eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x8],0xffffffff
mov    DWORD PTR [eax+0x4],0x0
jmp    80616f9 <send_to_server+0xb9>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x20c
mov    edi,DWORD PTR [ebp+0xc]
mov    al,BYTE PTR [edi]
test   al,al
je     80617ac <sockread+0x2c>
cmp    al,0xa
je     80618ad <sockread+0x12d>
cmp    al,0xd
je     80618ad <sockread+0x12d>
inc    edi
mov    al,BYTE PTR [edi]
test   al,al
jne    8061795 <sockread+0x15>
xor    eax,eax
mov    ebx,edi
cld    
mov    esi,edi
mov    ecx,0x80
lea    edi,[ebp-0x218]
sub    ebx,DWORD PTR [ebp+0xc]
rep stos DWORD PTR es:[edi],eax
push   eax
push   0x1fe
lea    edi,[ebp-0x218]
push   edi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048e18 <read@plt>
mov    edx,eax
add    esp,0x10
xor    eax,eax
cmp    edx,0xffffffff
je     8061814 <sockread+0x94>
test   edx,edx
je     806189d <sockread+0x11d>
cmp    BYTE PTR [ebp-0x218],0x0
je     806180f <sockread+0x8f>
mov    al,BYTE PTR [edi]
cmp    al,0xd
je     8061823 <sockread+0xa3>
cmp    al,0xa
je     8061823 <sockread+0xa3>
cmp    ebx,0x1fd
jle    806181c <sockread+0x9c>
inc    edi
mov    al,BYTE PTR [edi]
test   al,al
jne    80617f8 <sockread+0x78>
mov    BYTE PTR [esi],0x0
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    BYTE PTR [esi],al
inc    edi
inc    esi
inc    ebx
jmp    8061809 <sockread+0x89>
mov    BYTE PTR [edi],0x0
mov    BYTE PTR [esi],0x0
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
inc    edi
call   8048c68 <strcpy@plt>
mov    al,BYTE PTR [edi]
add    esp,0x10
cmp    al,0xa
je     8061890 <sockread+0x110>
cmp    al,0xd
je     8061890 <sockread+0x110>
sub    esp,0x8
push   edi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0xc
mov    edi,DWORD PTR [ebp+0x10]
push   edi
mov    esi,DWORD PTR [ebp+0x8]
push   esi
push   0x806e722
call   80576b0 <debug>
call   8048de8 <__error@plt>
mov    DWORD PTR [eax],0x23
mov    eax,DWORD PTR [ebp+0x10]
add    esp,0x10
cmp    BYTE PTR [eax],0x0
sete   al
and    eax,0xff
dec    eax
and    eax,DWORD PTR [ebp+0x10]
jmp    8061814 <sockread+0x94>
nop
lea    esi,[esi+eiz*1+0x0]
inc    edi
mov    al,BYTE PTR [edi]
cmp    al,0xa
je     8061890 <sockread+0x110>
cmp    al,0xd
je     8061890 <sockread+0x110>
jmp    8061847 <sockread+0xc7>
call   8048de8 <__error@plt>
mov    DWORD PTR [eax],0x20
jmp    8061812 <sockread+0x92>
mov    BYTE PTR [edi],0x0
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
push   edx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
inc    edi
call   8048c68 <strcpy@plt>
mov    al,BYTE PTR [edi]
add    esp,0x10
cmp    al,0xa
je     80618e0 <sockread+0x160>
cmp    al,0xd
jne    8061847 <sockread+0xc7>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    edi
mov    al,BYTE PTR [edi]
cmp    al,0xa
je     80618e0 <sockread+0x160>
cmp    al,0xd
je     80618e0 <sockread+0x160>
jmp    8061847 <sockread+0xc7>
push   ebp
mov    ebp,esp
push   edi
push   esi
lea    esi,[ebp-0x418]
push   ebx
cld    
mov    ecx,0x80
xor    eax,eax
mov    edi,esi
sub    esp,0x40c
rep stos DWORD PTR es:[edi],eax
mov    esi,esi
push   ebx
lea    eax,[ebp-0x218]
push   eax
push   esi
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8061780 <sockread>
mov    edi,eax
call   8048de8 <__error@plt>
add    esp,0x10
test   edi,edi
mov    ebx,DWORD PTR [eax]
je     8061937 <readline+0x47>
cmp    BYTE PTR [edi],0x0
jne    8061960 <readline+0x70>
cmp    ebx,0x23
je     8061910 <readline+0x20>
sub    esp,0xc
push   0x806e7e0
call   80576b0 <debug>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    8061960 <readline+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0xc
push   edi
call   DWORD PTR [ebp+0xc]
add    esp,0x10
dec    eax
jne    8061937 <readline+0x47>
mov    ebx,0x20
jmp    8061937 <readline+0x47>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x31c
mov    esi,DWORD PTR [ebp+0x8]
test   esi,esi
js     80619e1 <killsock+0x61>
sub    esp,0xc
push   0xc
mov    DWORD PTR ds:0x8075d6c,0x8061980
call   8057860 <MyMalloc>
mov    ebx,eax
mov    DWORD PTR [ebp-0x324],eax
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x4],eax
mov    eax,ds:0x8075d74
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [ebx+0x8],esi
pop    edx
pop    ecx
push   esi
push   0x806e800
mov    DWORD PTR ds:0x8075d74,ebx
call   80576b0 <debug>
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    edx,DWORD PTR ds:0x8075d74
xor    eax,eax
test   edx,edx
je     80619d9 <killsock+0x59>
inc    esi
setne  al
and    eax,0xff
mov    DWORD PTR [ebp-0x320],eax
mov    DWORD PTR [ebp-0x31c],0x0
lea    edi,[ebp-0x98]
mov    eax,0x20
jmp    8061a20 <killsock+0xa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec    eax
test   eax,eax
mov    DWORD PTR [edi+eax*4],0x0
jne    8061a20 <killsock+0xa0>
lea    esi,[ebp-0x118]
mov    eax,0x20
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
dec    eax
test   eax,eax
mov    DWORD PTR [esi+eax*4],0x0
jne    8061a40 <killsock+0xc0>
test   edx,edx
mov    DWORD PTR [ebp-0x328],0xffffffff
mov    ebx,edx
mov    DWORD PTR [ebp-0x324],edx
je     8061aae <killsock+0x12e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebx+0x8]
cmp    ecx,DWORD PTR [ebp-0x328]
jle    8061a81 <killsock+0x101>
mov    DWORD PTR [ebp-0x328],ecx
mov    eax,ecx
mov    edx,0x1
and    ecx,0x1f
shr    eax,0x5
shl    edx,cl
mov    ebx,DWORD PTR [ebx]
or     DWORD PTR [ebp+eax*4-0x98],edx
or     DWORD PTR [ebp+eax*4-0x118],edx
test   ebx,ebx
jne    8061a70 <killsock+0xf0>
mov    DWORD PTR [ebp-0x324],0x0
sub    esp,0xc
lea    eax,[ebp-0x320]
push   eax
push   0x0
push   esi
inc    DWORD PTR [ebp-0x328]
push   edi
mov    eax,DWORD PTR [ebp-0x328]
push   eax
call   8048d68 <select@plt>
add    esp,0x20
inc    eax
je     8061bbb <killsock+0x23b>
mov    ebx,DWORD PTR ds:0x8075d74
test   ebx,ebx
mov    DWORD PTR [ebp-0x324],ebx
je     80619d4 <killsock+0x54>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x8]
mov    ecx,eax
shr    eax,0x5
and    ecx,0x1f
mov    eax,DWORD PTR [ebp+eax*4-0x98]
shr    eax,cl
and    eax,0x1
mov    esi,DWORD PTR [ebx]
jne    8061b1c <killsock+0x19c>
test   esi,esi
mov    ebx,esi
mov    DWORD PTR [ebp-0x324],esi
jne    8061af0 <killsock+0x170>
jmp    80619d4 <killsock+0x54>
push   eax
push   0x200
lea    eax,[ebp-0x318]
push   eax
mov    eax,DWORD PTR [ebx+0x8]
push   eax
call   8048e18 <read@plt>
add    esp,0x10
test   eax,eax
je     8061b46 <killsock+0x1c6>
inc    eax
jne    8061b0b <killsock+0x18b>
call   8048de8 <__error@plt>
cmp    DWORD PTR [eax],0x23
je     8061b0b <killsock+0x18b>
mov    eax,DWORD PTR [ebp-0x324]
sub    esp,0xc
mov    eax,DWORD PTR [eax+0x8]
push   eax
call   8048fc8 <close@plt>
mov    ebx,DWORD PTR [ebp-0x324]
mov    eax,ds:0x8075d74
add    esp,0x10
cmp    ebx,eax
mov    ecx,ebx
je     8061bb3 <killsock+0x233>
test   eax,eax
mov    edx,eax
je     8061b8c <killsock+0x20c>
mov    eax,DWORD PTR [eax]
cmp    eax,ebx
je     8061b84 <killsock+0x204>
test   eax,eax
mov    edx,eax
je     8061b8c <killsock+0x20c>
mov    eax,DWORD PTR [eax]
cmp    eax,ecx
jne    8061b78 <killsock+0x1f8>
mov    DWORD PTR [edx],esi
mov    ebx,DWORD PTR [ebp-0x324]
sub    esp,0x8
mov    edi,DWORD PTR [ebx+0x8]
push   edi
push   0x806e840
call   80576b0 <debug>
lea    eax,[ebp-0x324]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
add    esp,0x10
jmp    8061b0b <killsock+0x18b>
mov    DWORD PTR ds:0x8075d74,esi
jmp    8061b8c <killsock+0x20c>
call   8048de8 <__error@plt>
mov    edx,DWORD PTR [eax]
cmp    edx,0x4
mov    eax,0x1
je     80619d9 <killsock+0x59>
cmp    edx,0xc
jne    8061ad8 <killsock+0x158>
mov    eax,ds:0x8076fa8
test   eax,eax
je     8061bf2 <killsock+0x272>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     8061c00 <killsock+0x280>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f48 <exit@plt>
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10
push   0x1b6
mov    eax,ds:0x8075e74
push   0x601
add    eax,0x724
push   eax
call   8048f88 <open@plt>
mov    edi,eax
add    esp,0x10
xor    eax,eax
test   edi,edi
js     8061cb5 <saveuserlist+0xa5>
mov    eax,ds:0x8075e80
mov    ecx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [ebp-0x14],eax
xor    eax,eax
cmp    eax,DWORD PTR [ecx+0x71c]
mov    DWORD PTR ds:0x8075e80,0x0
mov    ebx,DWORD PTR [ecx+0x720]
mov    DWORD PTR [ebp-0x10],0x0
jge    8061c9f <saveuserlist+0x8f>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebx],0x0
je     8061c8e <saveuserlist+0x7e>
mov    dl,BYTE PTR [ebx+0x3e]
mov    al,dl
shr    al,1
and    eax,0x7
cmp    eax,0x2
je     8061e90 <saveuserlist+0x280>
test   BYTE PTR [ebx+0x3c],0x10
je     8061cc0 <saveuserlist+0xb0>
add    ebx,0x48
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
cmp    eax,DWORD PTR [ecx+0x71c]
jl     8061c70 <saveuserlist+0x60>
sub    esp,0xc
push   edi
call   8048fc8 <close@plt>
mov    eax,DWORD PTR [ebp-0x14]
mov    ds:0x8075e80,eax
mov    eax,0x1
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
shr    dl,1
mov    eax,edx
and    eax,0x7
cmp    eax,0x2
je     8061e58 <saveuserlist+0x248>
cmp    eax,0x2
jg     8061e40 <saveuserlist+0x230>
dec    eax
je     8061d4e <saveuserlist+0x13e>
push   eax
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
push   0x806e865
push   edi
call   8061260 <send_to_socket>
mov    eax,DWORD PTR [ebx+0x3c]
shr    eax,0x9
add    esp,0x10
and    eax,0xff
jne    8061d3c <saveuserlist+0x12c>
mov    eax,DWORD PTR [ebx+0x30]
test   eax,eax
jne    8061d2a <saveuserlist+0x11a>
mov    eax,DWORD PTR [ebx+0x34]
test   eax,eax
jne    8061d18 <saveuserlist+0x108>
add    ebx,0x48
mov    ecx,DWORD PTR ds:0x8075e74
jmp    8061c91 <saveuserlist+0x81>
push   edx
push   eax
push   0x806e872
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061d0a <saveuserlist+0xfa>
push   ecx
push   eax
push   0x806e87e
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061d03 <saveuserlist+0xf3>
push   esi
push   eax
push   0x806e887
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061cfc <saveuserlist+0xec>
push   eax
lea    eax,[ebx+0x8]
push   eax
push   0x806e893
push   edi
call   8061260 <send_to_socket>
mov    esi,DWORD PTR [ebx+0x38]
add    esp,0x10
test   esi,esi
je     8061d81 <saveuserlist+0x171>
push   eax
lea    eax,[esi+0x4]
push   eax
push   0x806e8a0
push   edi
call   8061260 <send_to_socket>
mov    esi,DWORD PTR [esi]
add    esp,0x10
test   esi,esi
jne    8061d68 <saveuserlist+0x158>
cmp    BYTE PTR [ebx+0x15],0x0
jne    8061e26 <saveuserlist+0x216>
mov    ax,WORD PTR [ebx+0x3c]
shr    ax,0x6
and    eax,0x7
jne    8061e11 <saveuserlist+0x201>
mov    al,BYTE PTR [ebx+0x3c]
test   eax,0x2
jne    8061dfb <saveuserlist+0x1eb>
test   eax,0x4
jne    8061de5 <saveuserlist+0x1d5>
test   eax,0x1
jne    8061dcf <saveuserlist+0x1bf>
and    eax,0x8
je     8061cdc <saveuserlist+0xcc>
sub    esp,0x8
push   0x806e8aa
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061cdc <saveuserlist+0xcc>
sub    esp,0x8
push   0x806e8b2
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,BYTE PTR [ebx+0x3c]
jmp    8061db0 <saveuserlist+0x1a0>
sub    esp,0x8
push   0x806e8b8
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,BYTE PTR [ebx+0x3c]
jmp    8061da9 <saveuserlist+0x199>
sub    esp,0x8
push   0x806e8c0
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
mov    al,BYTE PTR [ebx+0x3c]
jmp    8061da2 <saveuserlist+0x192>
push   esi
push   eax
push   0x806e8c5
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061d98 <saveuserlist+0x188>
push   eax
lea    eax,[ebx+0x15]
push   eax
push   0x806e8cf
push   edi
call   8061260 <send_to_socket>
add    esp,0x10
jmp    8061d8b <saveuserlist+0x17b>
mov    esi,esi
cmp    eax,0x3
jne    8061cdc <saveuserlist+0xcc>
push   eax
mov    eax,DWORD PTR [ebx+0x38]
push   eax
push   0x806e8d9
jmp    8061dc1 <saveuserlist+0x1b1>
push   ecx
mov    edx,DWORD PTR [ebx+0x38]
push   edx
push   0x806e8e7
push   edi
call   8061260 <send_to_socket>
add    esp,0xc
mov    eax,DWORD PTR [ebx+0x40]
push   eax
push   0x806e8f2
push   edi
call   8061260 <send_to_socket>
add    esp,0xc
mov    eax,DWORD PTR [ebx+0x44]
push   eax
push   0x806e8fd
jmp    8061dc1 <saveuserlist+0x1b1>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x44]
cmp    DWORD PTR ds:0x8075d20,eax
jge    8061c8e <saveuserlist+0x7e>
jmp    8061c88 <saveuserlist+0x78>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR ds:0x8075e74
xor    esi,esi
cmp    esi,DWORD PTR [edx+0x71c]
mov    edi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [edx+0x720]
jge    8061efe <check_kicksay+0x4e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     8061ef2 <check_kicksay+0x42>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x3
je     8061f10 <check_kicksay+0x60>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8061ee0 <check_kicksay+0x30>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
test   edi,edi
je     8061f40 <check_kicksay+0x90>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8061f40 <check_kicksay+0x90>
mov    eax,DWORD PTR [ebx+0x2c]
cmp    BYTE PTR [eax],0x2a
je     8061f40 <check_kicksay+0x90>
cmp    BYTE PTR [edi],0x2a
je     8061f40 <check_kicksay+0x90>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8061ef2 <check_kicksay+0x42>
lea    esi,[esi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    eax,DWORD PTR [ebx+0x38]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
mov    edx,ebx
jne    8061f35 <check_kicksay+0x85>
jmp    8061f00 <check_kicksay+0x50>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR ds:0x8075e74
xor    edi,edi
xor    esi,esi
cmp    edi,DWORD PTR [edx+0x71c]
mov    DWORD PTR [ebp-0x10],0x0
mov    ebx,DWORD PTR [edx+0x720]
jge    8061fae <find_kicksay+0x4e>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     8061fa2 <find_kicksay+0x42>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x3
je     8061fc0 <find_kicksay+0x60>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8061f90 <find_kicksay+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
mov    eax,edi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     8062000 <find_kicksay+0xa0>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062000 <find_kicksay+0xa0>
mov    eax,DWORD PTR [ebx+0x2c]
cmp    BYTE PTR [eax],0x2a
je     8062000 <find_kicksay+0xa0>
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x2a
je     8062000 <find_kicksay+0xa0>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8061fa2 <find_kicksay+0x42>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
mov    edx,DWORD PTR [ebx+0x38]
push   edx
call   805d5d0 <num_matches>
add    esp,0x10
cmp    eax,DWORD PTR [ebp-0x10]
jle    8061fee <find_kicksay+0x8e>
mov    DWORD PTR [ebp-0x10],eax
mov    edi,ebx
jmp    8061fee <find_kicksay+0x8e>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0x8]
push   0x806ea60
push   edi
call   80614d0 <send_to_user>
xor    esi,esi
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    esi,DWORD PTR [edx+0x71c]
mov    ebx,DWORD PTR [edx+0x720]
jge    806206e <do_kslist+0x4e>
cmp    BYTE PTR [ebx],0x0
je     8062062 <do_kslist+0x42>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x3
je     8062084 <do_kslist+0x64>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8062050 <do_kslist+0x30>
mov    DWORD PTR [ebp+0xc],0x806e90a
mov    DWORD PTR [ebp+0x8],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x34]
push   eax
mov    eax,DWORD PTR [ebx+0x38]
push   eax
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
push   0x806e926
push   edi
call   80614d0 <send_to_user>
add    esp,0x20
mov    edx,DWORD PTR ds:0x8075e74
jmp    8062062 <do_kslist+0x42>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax+0x38]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0xc]
je     80620ea <addmasktouser+0x3a>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   esi
lea    eax,[ebx+0x4]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062126 <addmasktouser+0x76>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80620d0 <addmasktouser+0x20>
sub    esp,0xc
push   esi
mov    DWORD PTR ds:0x8075d6c,0x80620b0
call   8048f78 <strlen@plt>
add    eax,0x5
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
pop    edx
pop    ecx
push   esi
mov    edi,eax
lea    eax,[eax+0x4]
push   eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0x38]
add    esp,0x10
test   eax,eax
jne    806212e <addmasktouser+0x7e>
mov    DWORD PTR [edx+0x38],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ebx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
je     8062148 <addmasktouser+0x98>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ebx,eax
mov    eax,DWORD PTR [eax]
test   eax,eax
jne    8062140 <addmasktouser+0x90>
mov    DWORD PTR [ebx],edi
jmp    8062126 <addmasktouser+0x76>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
lea    ebx,[eax+0x38]
mov    eax,DWORD PTR [eax+0x38]
test   eax,eax
mov    esi,DWORD PTR [ebp+0xc]
je     806218c <delmaskfromuser+0x3c>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   esi
add    eax,0x4
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062193 <delmaskfromuser+0x43>
mov    ebx,DWORD PTR [ebx]
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    8062170 <delmaskfromuser+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [ebp-0xc],eax
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebx],eax
sub    esp,0xc
lea    eax,[ebp-0xc]
push   eax
call   8057920 <MyFree>
jmp    806218c <delmaskfromuser+0x3c>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     8062320 <do_host+0x170>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8062320 <do_host+0x170>
sub    esp,0xc
push   esi
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    esi,eax
je     806235b <do_host+0x1ab>
sub    esp,0x8
mov    edx,DWORD PTR [eax+0x2c]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x64
mov    edx,eax
je     8062233 <do_host+0x83>
mov    eax,DWORD PTR [esi+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    edx,eax
jl     806234e <do_host+0x19e>
mov    eax,DWORD PTR [ebp-0x10]
test   eax,eax
je     8062320 <do_host+0x170>
sub    esp,0x8
push   0x806803a
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8062301 <do_host+0x151>
mov    ebx,DWORD PTR [esi+0x38]
test   ebx,ebx
je     806228a <do_host+0xda>
jmp    8062270 <do_host+0xc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   edi
lea    eax,[ebx+0x4]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80622f5 <do_host+0x145>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8062270 <do_host+0xc0>
sub    esp,0x8
push   0x806a107
push   edi
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    80622c1 <do_host+0x111>
push   eax
push   edi
push   0x80696a0
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   edi
push   0x806a10a
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     80622df <do_host+0x12f>
push   eax
push   edi
push   0x80696c0
jmp    80622b0 <do_host+0x100>
sub    esp,0x8
push   edi
push   esi
call   80620b0 <addmasktouser>
lea    eax,[esi+0x8]
push   eax
push   edi
push   0x806e935
jmp    80622b0 <do_host+0x100>
lea    eax,[esi+0x8]
push   eax
push   edi
push   0x806e94e
jmp    80622b0 <do_host+0x100>
sub    esp,0x8
push   0x8068043
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062335 <do_host+0x185>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    esi,DWORD PTR ds:0x8070440
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804f840 <usage>
jmp    80622b9 <do_host+0x109>
sub    esp,0x8
push   edi
push   esi
call   8062150 <delmaskfromuser>
lea    eax,[esi+0x8]
push   eax
push   edi
push   0x806e96c
jmp    80622b0 <do_host+0x100>
sub    esp,0x8
push   0x806a6c3
jmp    80622b0 <do_host+0x100>
sub    esp,0x8
push   0x806e989
jmp    80622b0 <do_host+0x100>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x5c
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x18]
je     8062391 <add_to_userlist+0x21>
cmp    BYTE PTR [ebx],0x0
je     8062391 <add_to_userlist+0x21>
test   esi,esi
je     8062391 <add_to_userlist+0x21>
cmp    BYTE PTR [esi],0x0
jne    80623b0 <add_to_userlist+0x40>
sub    esp,0xc
push   0x806eaa0
call   80576b0 <debug>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
cld    
mov    ecx,0x12
lea    edi,[ebp-0x68]
rep stos DWORD PTR es:[edi],eax
mov    eax,ds:0x8075e20
mov    DWORD PTR [ebp-0x64],eax
inc    eax
movzx  edx,BYTE PTR [ebp+0xc]
mov    ds:0x8075e20,eax
mov    eax,DWORD PTR [ebp-0x2c]
shl    edx,0x9
and    eax,0xfffe01ff
or     eax,edx
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
setne  dl
mov    al,BYTE PTR [ebp-0x2c]
add    edx,edx
and    eax,0xfffffffd
or     eax,edx
cmp    DWORD PTR [ebp+0x14],0x4
mov    BYTE PTR [ebp-0x68],0x1
mov    BYTE PTR [ebp-0x2c],al
jg     806252b <add_to_userlist+0x1bb>
mov    eax,DWORD PTR [ebp+0x14]
test   eax,eax
js     8062524 <add_to_userlist+0x1b4>
mov    edx,eax
and    edx,0x7
mov    eax,DWORD PTR [ebp-0x2c]
shl    edx,0x6
and    eax,0xfffffe3f
or     eax,edx
mov    WORD PTR [ebp-0x2c],ax
push   eax
push   0xc
push   ebx
lea    eax,[ebp-0x60]
push   eax
call   8048e38 <strncpy@plt>
pop    edi
pop    eax
push   esi
lea    eax,[ebp-0x3c]
push   eax
mov    BYTE PTR [ebp-0x54],0x0
mov    DWORD PTR ds:0x8075d6c,0x8062370
call   80579d0 <mstrcpy>
mov    ebx,DWORD PTR [ebp+0x1c]
add    esp,0x10
test   ebx,ebx
je     8062460 <add_to_userlist+0xf0>
mov    eax,DWORD PTR [ebp+0x1c]
cmp    BYTE PTR [eax],0x0
jne    806250b <add_to_userlist+0x19b>
mov    al,BYTE PTR [ebp-0x2a]
and    eax,0xfffffff1
or     eax,0x2
mov    BYTE PTR [ebp-0x2a],al
mov    eax,ds:0x80762a4
or     BYTE PTR [ebp-0x2c],0x20
test   eax,eax
mov    esi,0xffffffff
mov    ebx,0xffffffff
je     8062486 <add_to_userlist+0x116>
mov    ebx,DWORD PTR [eax+0x4]
mov    eax,ds:0x80766c4
test   eax,eax
je     8062492 <add_to_userlist+0x122>
mov    esi,DWORD PTR [eax+0x4]
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
lea    edx,[ebp-0x68]
push   edx
add    eax,0x720
push   eax
call   8059260 <addstruct>
add    esp,0x10
cmp    ebx,0xffffffff
mov    edi,eax
je     80624dc <add_to_userlist+0x16c>
push   ebx
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
mov    ds:0x80762a4,eax
add    esp,0x10
cmp    esi,0xffffffff
je     8062504 <add_to_userlist+0x194>
push   esi
push   0x48
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0x71c]
push   ebx
mov    ecx,DWORD PTR [eax+0x720]
push   ecx
call   8059220 <findstruct>
mov    ds:0x80766c4,eax
add    esp,0x10
mov    eax,edi
jmp    80623a0 <add_to_userlist+0x30>
push   ecx
push   0x14
push   eax
lea    eax,[ebp-0x53]
push   eax
call   8048e38 <strncpy@plt>
mov    BYTE PTR [ebp-0x3f],0x0
add    esp,0x10
jmp    8062460 <add_to_userlist+0xf0>
xor    eax,eax
jmp    806240d <add_to_userlist+0x9d>
mov    eax,0x4
jmp    806240d <add_to_userlist+0x9d>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x2c
mov    ebx,DWORD PTR [ebp+0x10]
mov    eax,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [ebp-0x1c],0x0
mov    DWORD PTR [ebp-0x20],0xc8
mov    DWORD PTR [ebp-0x24],0x0
mov    DWORD PTR [ebp-0x28],0x0
mov    DWORD PTR [ebp-0x2c],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x18],0x0
je     80625d1 <do_userlist+0x91>
mov    al,BYTE PTR [ebx]
test   al,al
je     80625d1 <do_userlist+0x91>
xor    esi,esi
cmp    al,0x2b
je     806299d <do_userlist+0x45d>
cmp    al,0x2d
je     8062931 <do_userlist+0x3f1>
cmp    al,0x23
je     8062929 <do_userlist+0x3e9>
cmp    al,0x26
je     8062929 <do_userlist+0x3e9>
sub    esp,0x8
push   0x2a
push   ebx
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     80625c9 <do_userlist+0x89>
mov    DWORD PTR [ebp-0x18],ebx
mov    esi,0x1
test   esi,esi
je     806290f <do_userlist+0x3cf>
mov    edx,DWORD PTR [ebp-0x28]
sub    esp,0x8
test   edx,edx
mov    eax,0x8069e79
jne    80625e5 <do_userlist+0xa5>
mov    eax,0x8069e7d
push   eax
mov    edi,DWORD PTR [ebp-0x24]
test   edi,edi
mov    eax,0x8069e79
jne    80625f7 <do_userlist+0xb7>
mov    eax,0x8069e7d
push   eax
mov    esi,DWORD PTR [ebp-0x20]
push   esi
mov    ebx,DWORD PTR [ebp-0x1c]
push   ebx
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
je     8062905 <do_userlist+0x3c5>
push   eax
push   0x806eae0
call   80576b0 <debug>
mov    eax,ds:0x8075e74
add    esp,0x1c
add    eax,0x220
mov    DWORD PTR [ebp-0x34],0x1
push   eax
push   0x806e998
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
call   80614d0 <send_to_user>
pop    eax
pop    edx
push   0x8067364
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80614d0 <send_to_user>
mov    ecx,DWORD PTR ds:0x8075e74
xor    eax,eax
add    esp,0x10
cmp    eax,DWORD PTR [ecx+0x71c]
mov    edx,ecx
mov    esi,DWORD PTR [ecx+0x720]
mov    DWORD PTR [ebp-0x30],0x0
jge    8062693 <do_userlist+0x153>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [esi],0x0
je     8062680 <do_userlist+0x140>
mov    al,BYTE PTR [esi+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     80626d0 <do_userlist+0x190>
inc    DWORD PTR [ebp-0x30]
mov    eax,DWORD PTR [ebp-0x30]
add    esi,0x48
cmp    eax,DWORD PTR [edx+0x71c]
mov    ecx,edx
jl     8062670 <do_userlist+0x130>
push   eax
mov    eax,DWORD PTR [ebp-0x34]
dec    eax
push   eax
push   0x806e9ac
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp+0xc],0x806a394
mov    DWORD PTR [ebp+0x8],eax
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    dl,BYTE PTR [esi+0x3c]
test   edx,0x20
sete   al
and    eax,0xff
lea    edi,[eax-0x1]
and    edi,0x1
and    edx,0x10
je     80626fe <do_userlist+0x1be>
test   BYTE PTR [ecx+0x3ac],0x1
sete   al
and    eax,0xff
dec    eax
and    edi,eax
mov    eax,DWORD PTR [esi+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,DWORD PTR [ebp-0x1c]
setl   dl
and    edx,0xff
dec    edx
and    edi,edx
cmp    eax,DWORD PTR [ebp-0x20]
setg   al
and    eax,0xff
dec    eax
and    edi,eax
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
je     8062748 <do_userlist+0x208>
sub    esp,0x8
mov    eax,DWORD PTR [esi+0x2c]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80628df <do_userlist+0x39f>
mov    ebx,DWORD PTR [ebp-0x18]
test   ebx,ebx
je     8062781 <do_userlist+0x241>
mov    ebx,DWORD PTR [esi+0x38]
test   ebx,ebx
je     8062781 <do_userlist+0x241>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
lea    eax,[ebx+0x4]
push   eax
mov    ecx,DWORD PTR [ebp-0x18]
push   ecx
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    80628d8 <do_userlist+0x398>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8062760 <do_userlist+0x220>
mov    edx,DWORD PTR [ebp-0x24]
test   edx,edx
je     806279b <do_userlist+0x25b>
mov    eax,DWORD PTR [esi+0x3c]
shr    eax,0x9
cmp    al,0xc8
setne  al
and    eax,0xff
dec    eax
and    edi,eax
mov    eax,DWORD PTR [ebp-0x28]
test   eax,eax
je     80627b3 <do_userlist+0x273>
mov    eax,DWORD PTR [esi+0x2c]
cmp    BYTE PTR [eax],0x2a
sete   al
and    eax,0xff
dec    eax
and    edi,eax
mov    eax,DWORD PTR [ebp-0x2c]
test   eax,eax
je     80627c9 <do_userlist+0x289>
test   BYTE PTR [esi+0x3c],0x8
sete   al
and    eax,0xff
dec    eax
and    edi,eax
test   edi,edi
je     80628c3 <do_userlist+0x383>
push   eax
mov    eax,DWORD PTR [esi+0x2c]
push   eax
mov    dl,BYTE PTR [esi+0x3c]
test   edx,0x10
mov    eax,0x806e9c0
jne    80627eb <do_userlist+0x2ab>
mov    eax,0x806e923
test   edx,0x8
push   eax
mov    eax,0x806e9c3
jne    80627fe <do_userlist+0x2be>
mov    eax,0x806e923
push   eax
mov    ax,WORD PTR [esi+0x3c]
shr    ax,0x6
and    eax,0x7
push   eax
cmp    BYTE PTR [esi+0x15],0x0
je     80628ce <do_userlist+0x38e>
mov    eax,0x806e9c6
test   edx,0x4
push   eax
mov    eax,0x806e9c9
jne    806282d <do_userlist+0x2ed>
mov    eax,0x806e923
and    edx,0x2
push   eax
mov    eax,0x806e9cc
jne    806283d <do_userlist+0x2fd>
mov    eax,0x806e923
push   eax
mov    eax,DWORD PTR [esi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
lea    eax,[esi+0x8]
push   eax
push   0x806eb40
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [esi+0x38]
add    esp,0x30
test   ebx,ebx
je     80628ac <do_userlist+0x36c>
push   eax
lea    eax,[ebx+0x4]
push   eax
push   0x806e9cf
mov    edi,DWORD PTR [ebp-0x10]
push   edi
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
je     80628ac <do_userlist+0x36c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ecx
lea    eax,[ebx+0x4]
push   eax
push   0x806f1d2
mov    edx,DWORD PTR [ebp-0x10]
push   edx
call   80614d0 <send_to_user>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8062890 <do_userlist+0x350>
sub    esp,0x8
push   0x8067364
mov    eax,DWORD PTR [ebp-0x10]
push   eax
call   80614d0 <send_to_user>
inc    DWORD PTR [ebp-0x34]
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
jmp    8062680 <do_userlist+0x140>
mov    eax,0x806e923
jmp    806281a <do_userlist+0x2da>
xor    edi,edi
jmp    8062781 <do_userlist+0x241>
sub    esp,0x8
mov    eax,DWORD PTR [esi+0x2c]
push   eax
push   0x806e306
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
setne  al
and    eax,0xff
dec    eax
and    edi,eax
jmp    8062748 <do_userlist+0x208>
mov    eax,0x806e9dc
jmp    806260b <do_userlist+0xcb>
mov    eax,ds:0x8070890
mov    DWORD PTR [ebp+0xc],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp+0x8],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    804f840 <usage>
mov    DWORD PTR [ebp-0x14],ebx
jmp    80625c4 <do_userlist+0x84>
inc    ebx
mov    dl,BYTE PTR [ebx]
lea    eax,[edx-0x30]
cmp    al,0x9
jbe    8062985 <do_userlist+0x445>
cmp    dl,0x42
je     8062977 <do_userlist+0x437>
cmp    dl,0x62
je     8062977 <do_userlist+0x437>
cmp    dl,0x43
je     8062969 <do_userlist+0x429>
cmp    dl,0x63
je     8062969 <do_userlist+0x429>
cmp    dl,0x53
je     806295d <do_userlist+0x41d>
cmp    dl,0x73
jne    80625c9 <do_userlist+0x89>
mov    DWORD PTR [ebp-0x2c],0x1
jmp    80625c4 <do_userlist+0x84>
mov    DWORD PTR [ebp-0x28],0x1
mov    esi,0x1
jmp    806294f <do_userlist+0x40f>
mov    DWORD PTR [ebp-0x24],0x1
mov    esi,0x1
jmp    8062945 <do_userlist+0x405>
sub    esp,0xc
push   ebx
call   8048f58 <atoi@plt>
mov    DWORD PTR [ebp-0x20],eax
mov    esi,0x1
add    esp,0x10
mov    dl,BYTE PTR [ebx]
jmp    806293b <do_userlist+0x3fb>
inc    ebx
mov    al,BYTE PTR [ebx]
sub    eax,0x30
cmp    al,0x9
ja     80625c9 <do_userlist+0x89>
sub    esp,0xc
push   ebx
call   8048f58 <atoi@plt>
mov    esi,0x1
add    esp,0x10
mov    DWORD PTR [ebp-0x1c],eax
jmp    80625c9 <do_userlist+0x89>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [esi],0x0
jne    80629f0 <remove_user+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[esi+0x2c]
push   eax
call   8057920 <MyFree>
lea    eax,[esi+0x30]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
lea    eax,[esi+0x34]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    al,BYTE PTR [esi+0x3e]
shr    al,1
and    eax,0x7
add    esp,0x10
cmp    eax,0x1
je     8062a49 <remove_user+0x79>
cmp    eax,0x1
jl     8062a3b <remove_user+0x6b>
cmp    eax,0x3
jg     8062a3b <remove_user+0x6b>
sub    esp,0xc
lea    eax,[esi+0x38]
push   eax
call   8057920 <MyFree>
add    esp,0x10
cld    
mov    ecx,0x12
xor    eax,eax
mov    edi,esi
rep stos DWORD PTR es:[edi],eax
jmp    80629e1 <remove_user+0x11>
mov    eax,DWORD PTR [esi+0x38]
test   eax,eax
mov    DWORD PTR [ebp-0x10],eax
je     8062a3b <remove_user+0x6b>
lea    edi,[ebp-0x10]
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
mov    ebx,DWORD PTR [eax]
push   edi
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0x10],ebx
jne    8062a60 <remove_user+0x90>
jmp    8062a3b <remove_user+0x6b>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR ds:0x8075e74
xor    esi,esi
cmp    esi,DWORD PTR [edx+0x71c]
mov    edi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [edx+0x720]
jge    8062acc <find_handle+0x4c>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     8062ac0 <find_handle+0x40>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     8062ad8 <find_handle+0x58>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8062ab0 <find_handle+0x30>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
sub    esp,0x8
lea    eax,[ebx+0x8]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,ebx
je     8062ace <find_handle+0x4e>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8062ac0 <find_handle+0x40>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8057d10 <getuh>
pop    esi
pop    edi
push   eax
push   0x806bdf1
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062c06 <find_user+0x106>
mov    edx,DWORD PTR ds:0x8075e74
xor    eax,eax
xor    edi,edi
cmp    eax,DWORD PTR [edx+0x71c]
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    ebx,DWORD PTR [edx+0x720]
jge    8062b6c <find_user+0x6c>
cmp    BYTE PTR [ebx],0x0
je     8062b60 <find_user+0x60>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     8062b80 <find_user+0x80>
inc    edi
add    ebx,0x48
cmp    edi,DWORD PTR [edx+0x71c]
jl     8062b50 <find_user+0x50>
mov    eax,DWORD PTR [ebp-0x10]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    al,BYTE PTR [ebx+0x3c]
test   eax,0x20
je     8062b60 <find_user+0x60>
and    eax,0x10
je     8062b98 <find_user+0x98>
test   BYTE PTR [edx+0x3ac],0x1
je     8062b60 <find_user+0x60>
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     8062bce <find_user+0xce>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062bce <find_user+0xce>
mov    eax,DWORD PTR [ebx+0x2c]
cmp    BYTE PTR [eax],0x2a
je     8062bce <find_user+0xce>
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x2a
je     8062bce <find_user+0xce>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8062b60 <find_user+0x60>
mov    esi,DWORD PTR [ebx+0x38]
test   esi,esi
je     8062bc6 <find_user+0xc6>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[esi+0x4]
push   eax
call   805d5d0 <num_matches>
add    esp,0x10
cmp    eax,DWORD PTR [ebp-0x14]
jle    8062bfe <find_user+0xfe>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [ebp-0x10],ebx
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8062be0 <find_user+0xe0>
jmp    8062bc6 <find_user+0xc6>
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8062a80 <find_handle>
mov    ecx,DWORD PTR [ebp+0xc]
add    esp,0x10
test   ecx,ecx
mov    ebx,eax
je     8062c46 <find_user+0x146>
mov    eax,DWORD PTR [eax+0x2c]
cmp    BYTE PTR [eax],0x2a
je     8062c46 <find_user+0x146>
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
push   edx
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8062b2a <find_user+0x2a>
mov    eax,ebx
jmp    8062b6f <find_user+0x6f>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ebx],0x24
mov    esi,DWORD PTR [ebp+0xc]
je     8062d60 <get_userlevel+0x110>
sub    esp,0x8
push   ebx
push   0x806cb80
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,0x64
jne    8062c8c <get_userlevel+0x3c>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
sub    esp,0xc
push   ebx
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
mov    edx,0xc8
jne    8062c82 <get_userlevel+0x32>
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0x71c]
test   edi,edi
jne    8062cb7 <get_userlevel+0x67>
mov    edx,0x64
jmp    8062c82 <get_userlevel+0x32>
sub    esp,0xc
push   ebx
call   8057d10 <getuh>
pop    edx
pop    ecx
push   eax
push   0x806bdf1
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8062d38 <get_userlevel+0xe8>
sub    esp,0xc
push   ebx
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8062a80 <find_handle>
add    esp,0x10
test   esi,esi
mov    edi,eax
je     8062d51 <get_userlevel+0x101>
mov    eax,DWORD PTR [eax+0x2c]
cmp    BYTE PTR [eax],0x2a
je     8062d51 <get_userlevel+0x101>
sub    esp,0x8
push   esi
mov    eax,DWORD PTR [edi+0x2c]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062d51 <get_userlevel+0x101>
mov    eax,DWORD PTR [edi+0x2c]
sub    esp,0xc
test   eax,eax
jne    8062d19 <get_userlevel+0xc9>
mov    eax,0x8071283
push   eax
push   esi
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806eb80
call   80576b0 <debug>
add    esp,0x20
sub    esp,0x8
push   esi
push   ebx
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
mov    edi,eax
je     8062c82 <get_userlevel+0x32>
mov    eax,DWORD PTR [edi+0x3c]
shr    eax,0x9
movzx  edx,al
jmp    8062c82 <get_userlevel+0x32>
nop
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
je     8062d71 <get_userlevel+0x121>
cmp    al,0x40
jne    8062d60 <get_userlevel+0x110>
inc    ebx
jmp    8062c68 <get_userlevel+0x18>
xor    edx,edx
cmp    al,0x40
jne    8062c82 <get_userlevel+0x32>
jmp    8062d6b <get_userlevel+0x11b>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [ebx],0x24
je     8062ef0 <max_userlevel+0x170>
sub    esp,0x8
push   ebx
push   0x806cb80
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,0x64
jne    8062db9 <max_userlevel+0x39>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
sub    esp,0xc
push   ebx
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
mov    edx,0xc8
jne    8062daf <max_userlevel+0x2f>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0x71c]
test   esi,esi
jne    8062df3 <max_userlevel+0x73>
sub    esp,0x8
push   0x64
push   0x806ebc0
call   80576b0 <debug>
mov    edx,0x64
jmp    8062daf <max_userlevel+0x2f>
sub    esp,0xc
push   ebx
call   8057d10 <getuh>
pop    edx
pop    ecx
push   eax
push   0x806bdf1
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8062ec5 <max_userlevel+0x145>
mov    edx,DWORD PTR ds:0x8075e74
xor    eax,eax
cmp    eax,DWORD PTR [edx+0x71c]
mov    DWORD PTR [ebp-0x14],0x0
mov    esi,DWORD PTR [edx+0x720]
mov    DWORD PTR [ebp-0x10],0x0
jge    8062e59 <max_userlevel+0xd9>
cmp    BYTE PTR [esi],0x0
je     8062e48 <max_userlevel+0xc8>
mov    al,BYTE PTR [esi+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     8062e71 <max_userlevel+0xf1>
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
add    esi,0x48
cmp    eax,DWORD PTR [edx+0x71c]
jl     8062e38 <max_userlevel+0xb8>
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   ebx
push   0x806e9e3
call   80576b0 <debug>
mov    edx,DWORD PTR [ebp-0x14]
jmp    8062daf <max_userlevel+0x2f>
mov    al,BYTE PTR [esi+0x3c]
test   eax,0x20
je     8062e48 <max_userlevel+0xc8>
and    eax,0x10
je     8062e89 <max_userlevel+0x109>
test   BYTE PTR [edx+0x3ac],0x1
je     8062e48 <max_userlevel+0xc8>
mov    edi,DWORD PTR [esi+0x38]
test   edi,edi
je     8062e48 <max_userlevel+0xc8>
sub    esp,0x8
push   ebx
lea    eax,[edi+0x4]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
jne    8062eb7 <max_userlevel+0x137>
mov    eax,DWORD PTR [esi+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    DWORD PTR [ebp-0x14],eax
jge    8062eb7 <max_userlevel+0x137>
mov    DWORD PTR [ebp-0x14],eax
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    8062e90 <max_userlevel+0x110>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8062e48 <max_userlevel+0xc8>
sub    esp,0xc
push   ebx
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8062a80 <find_handle>
mov    esi,DWORD PTR [eax+0x3c]
mov    DWORD PTR [ebp-0x14],esi
shr    DWORD PTR [ebp-0x14],0x9
and    DWORD PTR [ebp-0x14],0xff
add    esp,0x10
jmp    8062e59 <max_userlevel+0xd9>
nop
inc    ebx
mov    al,BYTE PTR [ebx]
test   al,al
je     8062f01 <max_userlevel+0x181>
cmp    al,0x40
jne    8062ef0 <max_userlevel+0x170>
inc    ebx
jmp    8062d95 <max_userlevel+0x15>
xor    edx,edx
cmp    al,0x40
jne    8062daf <max_userlevel+0x2f>
jmp    8062efb <max_userlevel+0x17b>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,0x64
jne    8062f50 <is_aop+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     8062f3f <is_aop+0x2f>
mov    al,BYTE PTR [eax+0x3c]
shr    al,1
mov    edx,eax
and    edx,0x1
jmp    8062f3f <is_aop+0x2f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     8062fa7 <is_avoice+0x27>
mov    al,BYTE PTR [eax+0x3c]
shr    al,0x2
mov    edx,eax
and    edx,0x1
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8058770 <is_localbot>
add    esp,0x10
test   eax,eax
mov    edx,0x1
je     8062fe0 <is_user+0x30>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     8062fcc <is_user+0x1c>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
movzx  edx,al
jmp    8062fcc <is_user+0x1c>
jmp    8063010 <get_protlevel>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    edx,0x1
jne    8063050 <get_protlevel+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   ebx
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
je     8063073 <get_protlevel+0x63>
mov    ax,WORD PTR [eax+0x3c]
shr    ax,0x6
mov    edx,eax
and    edx,0x7
jmp    806303f <get_protlevel+0x2f>
xor    edx,edx
jmp    806303f <get_protlevel+0x2f>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     8063120 <get_protuseraccess+0xa0>
push   eax
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
je     8063116 <get_protuseraccess+0x96>
push   eax
push   0x806ec00
call   80576b0 <debug>
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0xb34]
add    esp,0x10
test   edi,edi
je     80630ea <get_protuseraccess+0x6a>
mov    ebx,DWORD PTR [edi+0x1c]
test   ebx,ebx
je     80630e4 <get_protuseraccess+0x64>
sub    esp,0xc
push   ebx
call   804ce40 <get_nuh>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     8063100 <get_protuseraccess+0x80>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80630c0 <get_protuseraccess+0x40>
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    80630b9 <get_protuseraccess+0x39>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   esi
call   8063010 <get_protlevel>
add    esp,0x10
test   eax,eax
je     80630de <get_protuseraccess+0x5e>
jmp    80630ec <get_protuseraccess+0x6c>
mov    eax,0x8071283
jmp    806309c <get_protuseraccess+0x1c>
mov    eax,0x8071283
jmp    8063094 <get_protuseraccess+0x14>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     8063202 <get_shituser+0xd2>
push   eax
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
je     80631f8 <get_shituser+0xc8>
push   eax
push   0x806ec40
call   80576b0 <debug>
pop    edi
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8057c60 <getnick>
pop    ecx
pop    ebx
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     80631cc <get_shituser+0x9c>
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0xb34]
test   edi,edi
je     80631ca <get_shituser+0x9a>
mov    ebx,DWORD PTR [edi+0x1c]
test   ebx,ebx
je     80631c4 <get_shituser+0x94>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   804ce40 <get_nuh>
mov    esi,eax
pop    eax
pop    edx
push   esi
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   805d3c0 <matches>
add    esp,0x10
test   eax,eax
je     80631e0 <get_shituser+0xb0>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80631a0 <get_shituser+0x70>
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    8063190 <get_shituser+0x60>
xor    edx,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   esi
call   8063320 <find_shit>
add    esp,0x10
test   eax,eax
je     80631be <get_shituser+0x8e>
mov    edx,eax
jmp    80631cc <get_shituser+0x9c>
mov    eax,0x8071283
jmp    8063150 <get_shituser+0x20>
mov    eax,0x8071283
jmp    8063144 <get_shituser+0x14>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8057d10 <getuh>
pop    edx
pop    ecx
push   eax
push   0x806bdf1
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8063260 <verified+0x50>
sub    esp,0xc
push   ebx
call   8057c60 <getnick>
mov    DWORD PTR [esp],eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
setne  al
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
and    eax,0xff
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,ds:0x8075e74
push   ebx
add    eax,0xb2c
push   eax
call   8063790 <find_time>
jmp    8063245 <verified+0x35>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   0x806e306
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     80632a8 <password_needed+0x28>
cmp    BYTE PTR [eax+0x15],0x0
setne  al
xor    edx,edx
mov    dl,al
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
call   8062b00 <find_user>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     80632d9 <correct_password+0x29>
cmp    BYTE PTR [eax+0x15],0x0
jne    80632f0 <correct_password+0x40>
mov    edx,0x1
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
test   ebx,ebx
je     806330d <correct_password+0x5d>
sub    esp,0x8
add    eax,0x15
push   eax
push   ebx
call   8059180 <passmatch>
add    esp,0x10
test   eax,eax
mov    edx,0x1
jne    80632d9 <correct_password+0x29>
xor    edx,edx
jmp    80632d9 <correct_password+0x29>
jmp    8063320 <find_shit>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ecx,DWORD PTR [ebp+0x8]
xor    eax,eax
test   ecx,ecx
je     806338e <find_shit+0x6e>
mov    edx,DWORD PTR ds:0x8075e74
xor    edi,edi
xor    esi,esi
cmp    edi,DWORD PTR [edx+0x71c]
mov    DWORD PTR [ebp-0x10],0x0
mov    ebx,DWORD PTR [edx+0x720]
jge    806337e <find_shit+0x5e>
jmp    8063360 <find_shit+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [ebx],0x0
je     8063372 <find_shit+0x52>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x2
je     80633b0 <find_shit+0x90>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8063360 <find_shit+0x40>
test   edi,edi
je     806338c <find_shit+0x6c>
mov    eax,ds:0x8075d20
cmp    DWORD PTR [edi+0x44],eax
jl     8063396 <find_shit+0x76>
mov    eax,edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   edi
call   80629d0 <remove_user>
xor    eax,eax
jmp    806338e <find_shit+0x6e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp+0xc]
test   edx,edx
je     80633f0 <find_shit+0xd0>
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80633f0 <find_shit+0xd0>
mov    eax,DWORD PTR [ebx+0x2c]
cmp    BYTE PTR [eax],0x2a
je     80633f0 <find_shit+0xd0>
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x2a
je     80633f0 <find_shit+0xd0>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8063372 <find_shit+0x52>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    eax,DWORD PTR [ebx+0x38]
push   eax
call   805d5d0 <num_matches>
add    esp,0x10
cmp    eax,DWORD PTR [ebp-0x10]
jle    80633de <find_shit+0xbe>
mov    DWORD PTR [ebp-0x10],eax
mov    edi,ebx
jmp    80633de <find_shit+0xbe>
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
cld    
xor    eax,eax
lea    edi,[ebp-0x68]
mov    ecx,0x12
sub    esp,0x64
rep stos DWORD PTR es:[edi],eax
mov    al,BYTE PTR [ebp-0x2a]
and    eax,0xfffffff1
or     eax,0x4
mov    BYTE PTR [ebp-0x2a],al
movzx  edx,BYTE PTR [ebp+0xc]
mov    eax,DWORD PTR [ebp-0x2c]
shl    edx,0x9
and    eax,0xfffe01ff
or     eax,edx
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp+0x1c]
mov    DWORD PTR [ebp-0x28],eax
mov    eax,DWORD PTR [ebp+0x20]
mov    DWORD PTR [ebp-0x24],eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
lea    eax,[ebp-0x3c]
push   eax
mov    BYTE PTR [ebp-0x68],0x1
mov    DWORD PTR ds:0x8075d6c,0x8063410
call   80579d0 <mstrcpy>
pop    ebx
pop    edi
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[ebp-0x30]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8063410
call   80579d0 <mstrcpy>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0x14]
push   eax
lea    eax,[ebp-0x38]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8063410
call   80579d0 <mstrcpy>
pop    ebx
pop    edi
mov    ecx,DWORD PTR [ebp+0x18]
push   ecx
lea    eax,[ebp-0x34]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8063410
call   80579d0 <mstrcpy>
mov    eax,ds:0x80762a4
add    esp,0x10
test   eax,eax
lea    esi,[ebp-0x68]
mov    ebx,0xffffffff
mov    edi,0xffffffff
je     80634d4 <add_to_shitlist+0xc4>
mov    edi,DWORD PTR [eax+0x4]
mov    eax,ds:0x80766c4
test   eax,eax
je     80634e0 <add_to_shitlist+0xd0>
mov    ebx,DWORD PTR [eax+0x4]
mov    eax,ds:0x8075e74
push   0x48
lea    edx,[eax+0x71c]
push   edx
push   esi
add    eax,0x720
push   eax
call   8059260 <addstruct>
add    esp,0x10
cmp    edi,0xffffffff
mov    esi,eax
je     8063527 <add_to_shitlist+0x117>
push   edi
push   0x48
mov    eax,ds:0x8075e74
mov    edx,DWORD PTR [eax+0x71c]
push   edx
mov    eax,DWORD PTR [eax+0x720]
push   eax
call   8059220 <findstruct>
mov    ds:0x80762a4,eax
add    esp,0x10
cmp    ebx,0xffffffff
je     806354f <add_to_shitlist+0x13f>
push   ebx
push   0x48
mov    eax,ds:0x8075e74
mov    edi,DWORD PTR [eax+0x71c]
push   edi
mov    ebx,DWORD PTR [eax+0x720]
push   ebx
call   8059220 <findstruct>
mov    ds:0x80766c4,eax
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
mov    eax,esi
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
mov    edi,DWORD PTR [ebp+0x8]
push   0x806ec80
push   edi
call   80614d0 <send_to_user>
xor    esi,esi
mov    edx,DWORD PTR ds:0x8075e74
add    esp,0x10
cmp    esi,DWORD PTR [edx+0x71c]
mov    ebx,DWORD PTR [edx+0x720]
jge    80635ae <do_shitlist+0x4e>
cmp    BYTE PTR [ebx],0x0
je     80635a2 <do_shitlist+0x42>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x2
je     80635c4 <do_shitlist+0x64>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8063590 <do_shitlist+0x30>
mov    DWORD PTR [ebp+0xc],0x806ecc0
mov    DWORD PTR [ebp+0x8],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
sub    esp,0xc
mov    eax,DWORD PTR [ebx+0x30]
push   eax
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
mov    eax,DWORD PTR [ebx+0x3c]
shr    eax,0x9
and    eax,0xff
push   eax
mov    eax,DWORD PTR [ebx+0x2c]
push   eax
mov    eax,DWORD PTR [ebx+0x38]
push   eax
push   0x806e9f3
push   edi
call   80614d0 <send_to_user>
add    esp,0x20
mov    edx,DWORD PTR ds:0x8075e74
jmp    80635a2 <do_shitlist+0x42>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    edx,DWORD PTR ds:0x8075e74
xor    esi,esi
cmp    esi,DWORD PTR [edx+0x71c]
mov    ebx,DWORD PTR [edx+0x720]
jge    806363e <delete_shitlist+0x3e>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
je     8063632 <delete_shitlist+0x32>
mov    al,BYTE PTR [ebx+0x3e]
shr    al,1
and    eax,0x7
cmp    eax,0x2
je     8063645 <delete_shitlist+0x45>
inc    esi
add    ebx,0x48
cmp    esi,DWORD PTR [edx+0x71c]
jl     8063620 <delete_shitlist+0x20>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
sub    esp,0xc
push   ebx
call   80629d0 <remove_user>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
jmp    8063632 <delete_shitlist+0x32>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8063320 <find_shit>
add    esp,0x10
test   eax,eax
setne  al
mov    esp,ebp
and    eax,0xff
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8063320 <find_shit>
add    esp,0x10
xor    edx,edx
test   eax,eax
je     80636b5 <get_shitlevel+0x25>
mov    eax,DWORD PTR [eax+0x3c]
shr    eax,0x9
movzx  edx,al
mov    esp,ebp
mov    eax,edx
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    BYTE PTR ds:0x8074240,0x0
je     8063780 <get_shitreason+0xc0>
sub    esp,0xc
mov    esi,DWORD PTR [ebx+0x30]
push   esi
call   8057c60 <getnick>
mov    esi,eax
mov    eax,DWORD PTR [ebx+0x40]
add    esp,0x10
test   eax,eax
jne    8063750 <get_shitreason+0x90>
sub    esp,0x8
push   esi
push   0x8074240
call   8057c30 <Strcat>
pop    eax
pop    edx
push   0x8068373
push   0x8074240
call   8057c30 <Strcat>
mov    eax,DWORD PTR [ebx+0x34]
add    esp,0x10
test   eax,eax
jne    8063740 <get_shitreason+0x80>
sub    esp,0x8
push   0x806ea0a
push   0x8074240
call   8057c30 <Strcat>
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
mov    eax,0x8074240
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   eax
jmp    8063720 <get_shitreason+0x60>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8057ef0 <time2small>
pop    edx
pop    ecx
push   eax
push   0x8074240
call   8057c30 <Strcat>
pop    ecx
pop    eax
push   0x8067364
push   0x8074240
call   8057c30 <Strcat>
add    esp,0x10
jmp    80636ef <get_shitreason+0x2f>
nop
sub    esp,0x8
push   0x806ea1e
jmp    8063720 <get_shitreason+0x60>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
mov    esi,DWORD PTR [ebp+0xc]
xor    eax,eax
test   esi,esi
push   ebx
je     80637cc <find_time+0x3c>
cmp    BYTE PTR [esi],0x24
je     80637e0 <find_time+0x50>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
je     80637ca <find_time+0x3a>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x8]
push   eax
push   esi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     80637ca <find_time+0x3a>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80637b0 <find_time+0x20>
mov    eax,ebx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    esi
mov    dl,BYTE PTR [esi]
test   dl,dl
je     80637ef <find_time+0x5f>
cmp    dl,0x40
jne    80637e0 <find_time+0x50>
inc    esi
jmp    80637a3 <find_time+0x13>
xor    eax,eax
cmp    dl,0x40
jne    80637cc <find_time+0x3c>
jmp    80637ec <find_time+0x5c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0xc]
xor    eax,eax
test   esi,esi
mov    edi,DWORD PTR [ebp+0x8]
je     8063826 <make_time+0x26>
sub    esp,0x8
push   esi
push   edi
call   8063790 <find_time>
add    esp,0x10
test   eax,eax
je     806382e <make_time+0x2e>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0xc
push   0x14
mov    DWORD PTR ds:0x8075d6c,0x8063800
call   8057860 <MyMalloc>
mov    ebx,eax
pop    eax
pop    edx
push   esi
lea    eax,[ebx+0x8]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8063800
call   80579d0 <mstrcpy>
mov    eax,ds:0x8075d20
mov    DWORD PTR [ebx+0x4],0x0
mov    DWORD PTR [ebx+0xc],eax
mov    eax,DWORD PTR [edi]
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebx+0x10],0x1
je     806387e <make_time+0x7e>
mov    DWORD PTR [eax+0x4],ebx
mov    eax,DWORD PTR [edi]
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [edi],ebx
mov    eax,ebx
jmp    8063826 <make_time+0x26>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [edx+0x4]
test   ecx,ecx
je     80638d0 <remove_time+0x40>
mov    eax,DWORD PTR [edx]
mov    DWORD PTR [ecx],eax
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
je     80638b3 <remove_time+0x23>
mov    eax,DWORD PTR [edx+0x4]
mov    DWORD PTR [ecx+0x4],eax
mov    edx,DWORD PTR [ebp+0xc]
sub    esp,0xc
lea    eax,[edx+0x8]
push   eax
call   8057920 <MyFree>
lea    eax,[ebp+0xc]
mov    DWORD PTR [esp],eax
call   8057920 <MyFree>
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
mov    ecx,DWORD PTR [edx]
mov    eax,DWORD PTR [ebp+0x8]
test   ecx,ecx
mov    DWORD PTR [eax],ecx
je     80638a4 <remove_time+0x14>
mov    DWORD PTR [ecx+0x4],0x0
jmp    80638a4 <remove_time+0x14>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [esi]
test   eax,eax
je     8063915 <delete_time+0x25>
mov    esi,esi
sub    esp,0x8
mov    ebx,DWORD PTR [eax]
push   eax
push   esi
call   8063890 <remove_time>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
jne    8063900 <delete_time+0x10>
mov    DWORD PTR [esi],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [esi]
test   eax,eax
mov    edi,DWORD PTR [ebp+0xc]
je     806395d <uptime_time+0x2d>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    edi,DWORD PTR [eax+0xc]
mov    ebx,DWORD PTR [eax]
jge    8063970 <uptime_time+0x40>
test   ebx,ebx
mov    eax,ebx
jne    8063950 <uptime_time+0x20>
mov    DWORD PTR [esi],0x0
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   esi
call   8063890 <remove_time>
add    esp,0x10
jmp    8063957 <uptime_time+0x27>
nop
push   ebp
mov    ebp,esp
test   BYTE PTR ds:0x8076f04,0x1
push   esi
push   ebx
jne    80639a0 <write_seenlist+0x20>
mov    eax,0x1
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   edx
push   0x1b6
push   0x601
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f88 <open@plt>
mov    esi,eax
add    esp,0x10
xor    eax,eax
test   esi,esi
js     8063993 <write_seenlist+0x13>
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [eax]
test   ebx,ebx
je     80639ed <write_seenlist+0x6d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x10]
sub    eax,DWORD PTR ds:0x8075d20
cmp    eax,0x127500
jg     80639e7 <write_seenlist+0x67>
mov    eax,DWORD PTR [ebx+0x14]
test   eax,eax
jne    8063a00 <write_seenlist+0x80>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80639d0 <write_seenlist+0x50>
sub    esp,0xc
push   esi
call   8048fc8 <close@plt>
jmp    806398e <write_seenlist+0xe>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx+0x8]
push   eax
mov    eax,DWORD PTR [ebx+0x14]
push   eax
mov    eax,DWORD PTR [ebx+0x10]
push   eax
mov    eax,DWORD PTR [ebx+0xc]
push   eax
mov    ecx,DWORD PTR [ebx+0x4]
push   ecx
lea    eax,[ebx+0x18]
push   eax
push   0x806ea34
push   esi
call   8061260 <send_to_socket>
add    esp,0x20
jmp    80639e7 <write_seenlist+0x67>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    eax,[ebp+0x8]
push   eax
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x10],eax
lea    eax,[ebp+0x8]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
lea    eax,[ebp+0x8]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
mov    edi,eax
lea    eax,[ebp+0x8]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
mov    ebx,eax
lea    eax,[ebp+0x8]
mov    DWORD PTR [esp],eax
call   8057b00 <chop>
add    esp,0x10
test   ebx,ebx
mov    esi,eax
je     8063a86 <read_seenlist_callback+0x56>
cmp    BYTE PTR [ebx],0x0
jne    8063ae0 <read_seenlist_callback+0xb0>
mov    ebx,DWORD PTR ds:0x8075d20
mov    eax,ebx
sub    eax,ebx
cmp    eax,0x1274ff
jg     8063abc <read_seenlist_callback+0x8c>
test   esi,esi
je     8063aa0 <read_seenlist_callback+0x70>
cmp    BYTE PTR [esi],0x0
jne    8063ad0 <read_seenlist_callback+0xa0>
xor    eax,eax
sub    esp,0x8
mov    esi,DWORD PTR [ebp+0x8]
push   esi
push   eax
push   ebx
push   edi
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
call   8063ba0 <make_seen>
add    esp,0x20
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
xor    eax,eax
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   esi
call   8048f58 <atoi@plt>
add    esp,0x10
jmp    8063aa2 <read_seenlist_callback+0x72>
mov    esi,esi
sub    esp,0xc
push   ebx
call   8048cd8 <atol@plt>
mov    ebx,eax
add    esp,0x10
mov    eax,ds:0x8075d20
jmp    8063a8e <read_seenlist_callback+0x5e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x0
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb40]
push   eax
call   8048f88 <open@plt>
mov    ebx,eax
add    esp,0x10
xor    eax,eax
test   ebx,ebx
js     8063b45 <read_seenlist+0x45>
call   8063b50 <delete_seen>
sub    esp,0x8
push   0x8063a30
push   ebx
call   80618f0 <readline>
mov    DWORD PTR [esp],ebx
call   8048fc8 <close@plt>
mov    eax,0x1
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x10
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [edx+0xb44]
test   eax,eax
mov    DWORD PTR [ebp-0xc],eax
je     8063b8d <delete_seen+0x3d>
lea    esi,[ebp-0xc]
mov    esi,esi
sub    esp,0xc
mov    ebx,DWORD PTR [eax]
push   esi
call   8057920 <MyFree>
add    esp,0x10
test   ebx,ebx
mov    eax,ebx
mov    DWORD PTR [ebp-0xc],ebx
jne    8063b70 <delete_seen+0x20>
mov    edx,DWORD PTR ds:0x8075e74
mov    DWORD PTR [edx+0xb44],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
xor    eax,eax
mov    al,BYTE PTR [edx]
mov    bl,BYTE PTR [eax+0x8071340]
mov    eax,ds:0x8075e74
lea    edi,[eax+0xb44]
mov    eax,DWORD PTR [eax+0xb44]
test   eax,eax
je     8063bf1 <make_seen+0x51>
mov    edx,eax
lea    esi,[esi+0x0]
xor    eax,eax
mov    al,BYTE PTR [edx+0x18]
mov    al,BYTE PTR [eax+0x8071340]
cmp    bl,al
je     8063ce0 <make_seen+0x140>
cmp    bl,al
ja     8063bf1 <make_seen+0x51>
mov    eax,DWORD PTR [edx]
test   eax,eax
mov    edi,edx
mov    edx,eax
jne    8063bd0 <make_seen+0x30>
mov    esi,DWORD PTR [ebp+0x8]
sub    esp,0xc
push   esi
mov    DWORD PTR ds:0x8075d6c,0x8063ba0
call   8048f78 <strlen@plt>
mov    ecx,DWORD PTR [ebp+0xc]
pop    ebx
push   ecx
mov    ebx,eax
call   8048f78 <strlen@plt>
pop    edx
mov    esi,DWORD PTR [ebp+0x10]
push   esi
add    ebx,eax
call   8048f78 <strlen@plt>
pop    ecx
mov    edx,DWORD PTR [ebp+0x1c]
push   edx
add    ebx,eax
call   8048f78 <strlen@plt>
lea    eax,[eax+ebx*1+0x1c]
mov    DWORD PTR [esp],eax
call   8057860 <MyMalloc>
mov    esi,eax
mov    DWORD PTR [ebp-0x10],eax
pop    eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048f78 <strlen@plt>
mov    ebx,DWORD PTR [ebp-0x10]
lea    eax,[eax+ebx*1+0x19]
mov    DWORD PTR [esi+0x4],eax
pop    eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8048f78 <strlen@plt>
add    eax,DWORD PTR [ebx+0x4]
inc    eax
mov    DWORD PTR [ebx+0x8],eax
pop    eax
mov    eax,DWORD PTR [ebp+0x1c]
push   eax
mov    ebx,DWORD PTR [ebp-0x10]
call   8048f78 <strlen@plt>
add    eax,DWORD PTR [ebx+0x8]
inc    eax
mov    DWORD PTR [ebx+0xc],eax
pop    ebx
pop    esi
mov    ecx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp-0x10]
push   ecx
add    eax,0x18
push   eax
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax+0x4]
push   eax
call   8048c68 <strcpy@plt>
pop    esi
pop    eax
mov    ebx,DWORD PTR [ebp+0x1c]
push   ebx
mov    eax,DWORD PTR [ebp-0x10]
mov    ecx,DWORD PTR [eax+0x8]
push   ecx
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax+0xc]
push   eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp+0x14]
mov    DWORD PTR [edx+0x10],eax
mov    eax,DWORD PTR [ebp+0x18]
mov    DWORD PTR [edx+0x14],eax
mov    eax,DWORD PTR [edi]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [edi],edx
mov    eax,DWORD PTR [ebp-0x10]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
lea    eax,[edx+0x18]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8063cfe <make_seen+0x15e>
mov    edx,DWORD PTR [edi]
jmp    8063be7 <make_seen+0x47>
mov    eax,DWORD PTR [edi]
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [edi],eax
sub    esp,0xc
lea    eax,[ebp-0x10]
push   eax
call   8057920 <MyFree>
add    esp,0x10
jmp    8063bf1 <make_seen+0x51>
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
mov    ecx,DWORD PTR [ebp+0xc]
je     8063d70 <get_int_varc+0x50>
lea    eax,[ecx+ecx*4]
mov    edx,DWORD PTR ds:0x8075e74
shl    eax,0x2
test   BYTE PTR [edx+eax*1+0x3c0],0x8
je     8063d60 <get_int_varc+0x40>
lea    eax,[ecx+ecx*4]
mov    eax,DWORD PTR [edx+eax*4+0x3c4]
pop    ebx
pop    ebp
ret    
jmp    8063d60 <get_int_varc+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebx+eax*1+0x28]
jmp    8063d4e <get_int_varc+0x2e>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8075e74
jmp    8063d44 <get_int_varc+0x24>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
test   ecx,ecx
mov    edx,DWORD PTR [ebp+0xc]
je     8063da2 <get_str_varc+0x22>
lea    eax,[edx+edx*4]
shl    eax,0x2
add    eax,DWORD PTR ds:0x8075e74
test   BYTE PTR [eax+0x3c0],0x8
je     8063db0 <get_str_varc+0x30>
lea    eax,[edx+edx*4]
mov    eax,DWORD PTR [ecx+eax*4+0x2c]
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
jmp    8063da9 <get_str_varc+0x29>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
mov    ebx,DWORD PTR [ebp+0xc]
je     8063e20 <get_int_var+0x60>
sub    esp,0x8
push   0x3
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ecx,eax
je     8063e20 <get_int_var+0x60>
lea    eax,[ebx+ebx*4]
lea    edx,[eax*4+0x0]
lea    eax,[ecx+edx*1]
test   BYTE PTR [eax+0x24],0x8
je     8063e10 <get_int_var+0x50>
mov    eax,edx
add    eax,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3c4]
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [eax+0x28]
jmp    8063e04 <get_int_var+0x44>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp+0xc],ebx
mov    DWORD PTR [ebp+0x8],0x0
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    8063d20 <get_int_varc>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
mov    ebx,DWORD PTR [ebp+0xc]
je     8063ea0 <get_str_var+0x60>
sub    esp,0x8
push   0x3
push   eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    ecx,eax
je     8063ea0 <get_str_var+0x60>
lea    eax,[ebx+ebx*4]
lea    edx,[eax*4+0x0]
lea    eax,[ecx+edx*1]
test   BYTE PTR [eax+0x24],0x8
je     8063e90 <get_str_var+0x50>
mov    eax,edx
add    eax,DWORD PTR ds:0x8075e74
mov    eax,DWORD PTR [eax+0x3c8]
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [eax+0x2c]
jmp    8063e84 <get_str_var+0x44>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp+0xc],ebx
mov    DWORD PTR [ebp+0x8],0x0
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    8063d80 <get_str_varc>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
push   eax
lea    eax,[ebp-0x8]
mov    ebx,DWORD PTR [ebp+0xc]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x8063ec0
lea    ebx,[ebx+ebx*4]
call   80579d0 <mstrcpy>
mov    eax,DWORD PTR [ebp+0x8]
lea    ebx,[eax+ebx*4]
mov    ecx,DWORD PTR [ebx+0x2c]
add    esp,0x10
test   ecx,ecx
lea    eax,[ebx+0x2c]
jne    8063f10 <set_str_varc+0x50>
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebx+0x2c],eax
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   eax
call   8057920 <MyFree>
add    esp,0x10
jmp    8063ef7 <set_str_varc+0x37>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x806cf20
xor    ebx,ebx
test   eax,eax
mov    edi,DWORD PTR [ebp+0x8]
je     8063f7a <find_var_name+0x5a>
xor    esi,esi
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx*8+0x806cf20]
push   eax
push   edi
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8063f6b <find_var_name+0x4b>
mov    eax,esi
add    eax,DWORD PTR ds:0x8075e74
mov    edx,DWORD PTR [ebp+0xc]
test   DWORD PTR [eax+0x3c0],edx
jne    8063f87 <find_var_name+0x67>
inc    ebx
mov    eax,DWORD PTR [ebx*8+0x806cf20]
add    esi,0x14
test   eax,eax
jne    8063f40 <find_var_name+0x20>
mov    eax,0xffffffff
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,ebx
jmp    8063f7f <find_var_name+0x5f>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x806cf20
test   eax,eax
mov    DWORD PTR [ebp-0x10],0x0
je     8063ffe <copy_vars+0x6e>
mov    edi,DWORD PTR [ebp+0x8]
add    edi,0x8
xor    esi,esi
mov    ebx,DWORD PTR [ebp+0xc]
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [edx+esi*1],eax
mov    eax,DWORD PTR [ebx+0x4]
mov    DWORD PTR [edx+esi*1+0x4],eax
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [edx+esi*1+0xc],eax
mov    eax,DWORD PTR [ebx+0x10]
mov    DWORD PTR [edx+esi*1+0x10],eax
mov    eax,DWORD PTR [ebx+0x8]
test   eax,eax
jne    8064010 <copy_vars+0x80>
inc    DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,DWORD PTR [eax*8+0x806cf20]
add    edi,0x14
add    ebx,0x14
add    esi,0x14
test   eax,eax
jne    8063fc0 <copy_vars+0x30>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   eax
push   edi
mov    DWORD PTR ds:0x8075d6c,0x8063f90
call   80579d0 <mstrcpy>
add    esp,0x10
jmp    8063fe4 <copy_vars+0x54>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR ds:0x806cf20
xor    edi,edi
test   ebx,ebx
je     806406d <free_strvars+0x3d>
mov    ebx,DWORD PTR [ebp+0x8]
add    ebx,0x8
xor    esi,esi
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [eax+esi*1+0x8]
test   ecx,ecx
jne    8064080 <free_strvars+0x50>
inc    edi
mov    edx,DWORD PTR [edi*8+0x806cf20]
add    ebx,0x14
add    esi,0x14
test   edx,edx
jne    8064050 <free_strvars+0x20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057920 <MyFree>
add    esp,0x10
jmp    806405b <free_strvars+0x2b>
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x3
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
call   804b050 <find_channel>
mov    edx,eax
add    esp,0x10
xor    eax,eax
test   edx,edx
je     80640b7 <find_var+0x27>
lea    eax,[ebx+ebx*4]
lea    eax,[edx+eax*4+0x24]
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x24
lea    ebx,[ebp+0x10]
push   ebx
mov    edi,DWORD PTR [ebp+0xc]
push   edi
call   8058850 <get_channel2>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     8064360 <do_set+0x2a0>
sub    esp,0x8
push   0x3
push   eax
call   8063f20 <find_var_name>
add    esp,0x10
cmp    eax,0xffffffff
mov    edi,eax
je     8064350 <do_set+0x290>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
mov    edx,DWORD PTR ds:0x8075e74
lea    eax,[edi+edi*4]
mov    ecx,DWORD PTR [ebp-0x14]
lea    eax,[edx+eax*4]
add    esp,0x10
test   ecx,ecx
lea    esi,[eax+0x3c0]
mov    DWORD PTR [ebp-0x18],0x0
je     8064141 <do_set+0x81>
test   BYTE PTR [eax+0x3c0],0x1
jne    80642f0 <do_set+0x230>
lea    eax,[edi+edi*4]
shl    eax,0x2
test   BYTE PTR [edx+eax*1+0x3c0],0x8
jne    806416f <do_set+0xaf>
mov    ecx,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [ecx],0x2a
je     8064240 <do_set+0x180>
sub    esp,0x8
push   edi
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
call   8064090 <find_var>
mov    esi,eax
add    esp,0x10
test   esi,esi
je     806422e <do_set+0x16e>
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf24]
push   eax
push   0x806ecff
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x14]
add    esp,0x10
test   eax,eax
je     80641e8 <do_set+0x128>
test   BYTE PTR [esi],0x1
je     80641c0 <do_set+0x100>
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [esi+0x4],eax
push   eax
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806ee20
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
lea    eax,[esi+0x8]
push   eax
mov    DWORD PTR ds:0x8075d6c,0x80640c0
call   80579d0 <mstrcpy>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   0x806ed07
jmp    80641ad <do_set+0xed>
mov    eax,DWORD PTR [esi]
test   eax,0x1
jne    8064211 <do_set+0x151>
and    eax,0x2
je     80641b6 <do_set+0xf6>
mov    ecx,DWORD PTR [esi+0x8]
push   ecx
mov    edx,DWORD PTR [ebp-0x10]
push   edx
push   0x806ed20
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    80641b6 <do_set+0xf6>
mov    eax,DWORD PTR [esi+0x4]
push   eax
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   0x806ed31
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,DWORD PTR [esi]
jmp    80641f1 <do_set+0x131>
push   edx
mov    eax,DWORD PTR [ebp-0x10]
push   eax
push   0x806ee40
jmp    80641ad <do_set+0xed>
lea    esi,[esi+0x0]
mov    ecx,DWORD PTR [ebp-0x14]
test   ecx,ecx
je     80642e1 <do_set+0x221>
mov    ebx,DWORD PTR [edx+0xb34]
test   ebx,ebx
je     806427b <do_set+0x1bb>
mov    DWORD PTR [ebp-0x1c],eax
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp-0x1c]
lea    eax,[edx+ebx*1]
test   BYTE PTR [eax+0x24],0x1
lea    esi,[eax+0x24]
je     80642a0 <do_set+0x1e0>
mov    ecx,DWORD PTR [ebp-0x18]
mov    DWORD PTR [esi+0x4],ecx
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    8064260 <do_set+0x1a0>
push   eax
mov    eax,DWORD PTR [edi*8+0x806cf24]
push   eax
push   0x806ecff
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
pop    ebx
pop    esi
push   0x806ed42
jmp    80641ad <do_set+0xed>
mov    esi,esi
mov    edx,DWORD PTR [esi+0x8]
test   edx,edx
jne    80642d0 <do_set+0x210>
lea    esi,[eax+0x2c]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   esi
mov    DWORD PTR ds:0x8075d6c,0x80640c0
call   80579d0 <mstrcpy>
add    esp,0x10
jmp    8064275 <do_set+0x1b5>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    esi,[eax+0x2c]
push   esi
call   8057920 <MyFree>
add    esp,0x10
jmp    80642aa <do_set+0x1ea>
sub    esp,0x8
push   0x806ed60
jmp    80641ad <do_set+0xed>
mov    esi,esi
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x14]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80591b0 <check_for_number>
add    esp,0x10
test   eax,eax
jne    80641b6 <do_set+0xf6>
sub    esp,0xc
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8048f58 <atoi@plt>
add    esp,0x10
cmp    eax,DWORD PTR [esi+0xc]
mov    DWORD PTR [ebp-0x18],eax
jl     8064327 <do_set+0x267>
cmp    eax,DWORD PTR [esi+0x10]
jle    8064339 <do_set+0x279>
mov    edi,DWORD PTR [esi+0x10]
push   edi
mov    ebx,DWORD PTR [esi+0xc]
push   ebx
push   0x806ee80
jmp    80641ad <do_set+0xed>
mov    edx,DWORD PTR ds:0x8075e74
jmp    8064141 <do_set+0x81>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
push   0x806ed77
jmp    80641ad <do_set+0xed>
lea    esi,[esi+0x0]
sub    esp,0x8
mov    esi,DWORD PTR ds:0x8070700
push   esi
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804f840 <usage>
jmp    80641b6 <do_set+0xf6>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x14
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    DWORD PTR [ebp-0x10],0x1
call   8058850 <get_channel2>
pop    edi
pop    edx
push   eax
mov    esi,DWORD PTR [ebp+0x8]
push   esi
mov    DWORD PTR [ebp-0x14],eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    80643c0 <do_toggle+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x18],eax
je     80643d8 <do_toggle+0x58>
cmp    BYTE PTR [eax],0x0
jne    80643eb <do_toggle+0x6b>
sub    esp,0x8
push   0x806eec0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    80643b4 <do_toggle+0x34>
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8064406 <do_toggle+0x86>
cmp    BYTE PTR [eax],0x0
jne    80645bf <do_toggle+0x23f>
sub    esp,0x8
push   0x4
mov    eax,DWORD PTR [ebp-0x18]
push   eax
call   8063f20 <find_var_name>
add    esp,0x10
cmp    eax,0xffffffff
mov    esi,eax
je     80645b2 <do_toggle+0x232>
lea    eax,[eax+eax*4]
lea    ecx,[eax*4+0x0]
mov    edx,DWORD PTR ds:0x8075e74
lea    eax,[ecx+edx*1]
test   BYTE PTR [eax+0x3c0],0x8
lea    ebx,[eax+0x3c0]
jne    8064462 <do_toggle+0xe2>
mov    eax,DWORD PTR [ebp-0x14]
cmp    BYTE PTR [eax],0x2a
je     80644fa <do_toggle+0x17a>
sub    esp,0x8
push   esi
mov    ebx,DWORD PTR [ebp-0x14]
push   ebx
call   8064090 <find_var>
mov    ebx,eax
add    esp,0x10
test   ebx,ebx
je     80644eb <do_toggle+0x16b>
cmp    DWORD PTR [ebp-0x10],0x2
je     80644e2 <do_toggle+0x162>
cmp    DWORD PTR [ebp-0x10],0x2
jg     80644d3 <do_toggle+0x153>
cmp    DWORD PTR [ebp-0x10],0x1
je     80644c1 <do_toggle+0x141>
push   eax
mov    eax,DWORD PTR [esi*8+0x806cf24]
push   eax
push   0x806ecff
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebx+0x4]
test   eax,eax
je     80644ba <do_toggle+0x13a>
mov    eax,0x806f388
push   eax
test   BYTE PTR [ebx],0x8
jne    80644b3 <do_toggle+0x133>
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   0x806ef00
jmp    80643e0 <do_toggle+0x60>
mov    eax,0x806ed8d
jmp    80644a8 <do_toggle+0x128>
mov    eax,0x806f3a1
jmp    806449f <do_toggle+0x11f>
mov    eax,DWORD PTR [ebx+0x4]
test   eax,eax
sete   al
and    eax,0xff
mov    DWORD PTR [ebx+0x4],eax
jmp    806447c <do_toggle+0xfc>
cmp    DWORD PTR [ebp-0x10],0x3
jne    806447c <do_toggle+0xfc>
mov    DWORD PTR [ebx+0x4],0x0
jmp    806447c <do_toggle+0xfc>
mov    DWORD PTR [ebx+0x4],0x1
jmp    806447c <do_toggle+0xfc>
push   ecx
mov    edx,DWORD PTR [ebp-0x14]
push   edx
push   0x806ef20
jmp    80643e0 <do_toggle+0x60>
mov    edx,DWORD PTR [edx+0xb34]
test   edx,edx
je     8064530 <do_toggle+0x1b0>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    DWORD PTR [ebp-0x10],0x2
lea    ebx,[ecx+edx*1+0x24]
je     80645a6 <do_toggle+0x226>
cmp    DWORD PTR [ebp-0x10],0x2
jg     8064597 <do_toggle+0x217>
cmp    DWORD PTR [ebp-0x10],0x1
je     8064585 <do_toggle+0x205>
mov    edx,DWORD PTR [edx]
test   edx,edx
jne    8064510 <do_toggle+0x190>
push   eax
mov    eax,DWORD PTR [esi*8+0x806cf24]
push   eax
push   0x806ecff
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
cmp    DWORD PTR [ebp-0x10],0x1
je     806457b <do_toggle+0x1fb>
push   eax
mov    edi,DWORD PTR [ebx+0x4]
test   edi,edi
je     8064574 <do_toggle+0x1f4>
mov    eax,0x806f388
push   eax
push   0x806ef60
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    80643b4 <do_toggle+0x34>
mov    eax,0x806f3a1
jmp    806455d <do_toggle+0x1dd>
sub    esp,0x8
push   0x806efa0
jmp    8064563 <do_toggle+0x1e3>
mov    eax,DWORD PTR [ebx+0x4]
test   eax,eax
sete   al
and    eax,0xff
mov    DWORD PTR [ebx+0x4],eax
jmp    806452a <do_toggle+0x1aa>
cmp    DWORD PTR [ebp-0x10],0x3
jne    806452a <do_toggle+0x1aa>
mov    DWORD PTR [ebx+0x4],0x0
jmp    806452a <do_toggle+0x1aa>
mov    DWORD PTR [ebx+0x4],0x1
jmp    806452a <do_toggle+0x1aa>
sub    esp,0x8
push   0x806ed77
jmp    80643e0 <do_toggle+0x60>
sub    esp,0x8
push   0x806d1d0
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],0x2
je     8064406 <do_toggle+0x86>
sub    esp,0x8
push   0x806ed96
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x10],0x3
je     8064406 <do_toggle+0x86>
mov    edx,0x806ed9a
mov    edi,edx
mov    ecx,0x2
cld    
mov    esi,ebx
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
seta   dl
setb   al
cmp    dl,al
mov    DWORD PTR [ebp-0x10],0x2
je     8064406 <do_toggle+0x86>
mov    edx,0x806d397
mov    edi,edx
mov    ecx,0x2
cld    
mov    esi,ebx
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
seta   dl
setb   al
cmp    dl,al
mov    DWORD PTR [ebp-0x10],0x3
je     8064406 <do_toggle+0x86>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070800
push   ecx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804f840 <usage>
jmp    80643b4 <do_toggle+0x34>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x24
lea    eax,[ebp+0x10]
push   eax
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    DWORD PTR [ebp-0x14],0x0
call   80587f0 <get_channel>
pop    edi
mov    esi,DWORD PTR [ebp+0x10]
mov    ebx,eax
pop    eax
push   esi
push   0x806ed9c
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8064886 <do_report+0x216>
mov    eax,ds:0x8075e74
add    eax,0x3c0
mov    DWORD PTR [ebp-0x10],eax
mov    edi,0x4
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x806cf20
xor    esi,esi
test   eax,eax
je     80647a4 <do_report+0x134>
mov    DWORD PTR [ebp-0x20],0x0
mov    ebx,DWORD PTR [ebp-0x10]
lea    esi,[esi+eiz*1+0x0]
cmp    edi,0x3
je     8064860 <do_report+0x1f0>
cmp    edi,0x3
jg     8064830 <do_report+0x1c0>
cmp    edi,0x2
je     8064800 <do_report+0x190>
test   BYTE PTR [ebx],0x8
jne    806478d <do_report+0x11d>
mov    edx,DWORD PTR [ebx+0x8]
mov    DWORD PTR [ebp-0x18],edx
mov    eax,DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x1c],eax
mov    eax,DWORD PTR [ebx]
test   eax,0x1
jne    80647d0 <do_report+0x160>
and    eax,0x2
je     8064752 <do_report+0xe2>
sub    esp,0xc
mov    eax,DWORD PTR [esi*8+0x806cf24]
push   eax
mov    eax,DWORD PTR [ebp-0x18]
test   eax,eax
je     80647c4 <do_report+0x154>
push   eax
mov    eax,DWORD PTR [esi*8+0x806cf20]
push   eax
push   0x806eda4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x20
test   BYTE PTR [ebx],0x4
je     806478d <do_report+0x11d>
mov    edx,DWORD PTR [ebp-0x1c]
sub    esp,0xc
mov    ecx,DWORD PTR [esi*8+0x806cf24]
test   edx,edx
push   ecx
mov    eax,0x806f388
jne    8064773 <do_report+0x103>
mov    eax,0x806f3a1
push   eax
mov    eax,DWORD PTR [esi*8+0x806cf20]
push   eax
push   0x806edba
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x20
inc    esi
mov    eax,DWORD PTR [esi*8+0x806cf20]
add    ebx,0x14
add    DWORD PTR [ebp-0x20],0x14
test   eax,eax
jne    80646e0 <do_report+0x70>
dec    edi
jne    80646c0 <do_report+0x50>
sub    esp,0x8
push   0x806edd0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,0x8071283
jmp    8064738 <do_report+0xc8>
mov    esi,esi
sub    esp,0xc
mov    edx,DWORD PTR [esi*8+0x806cf24]
push   edx
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
mov    eax,DWORD PTR [esi*8+0x806cf20]
push   eax
push   0x806ede2
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x20
mov    eax,DWORD PTR [ebx]
jmp    806471d <do_report+0xad>
nop
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
je     8064826 <do_report+0x1b6>
push   eax
mov    eax,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [eax+0x4]
push   eax
push   0x806efe0
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
dec    edi
add    esp,0x10
jmp    80646fb <do_report+0x8b>
sub    esp,0x8
push   0x806f020
jmp    8064814 <do_report+0x1a4>
cmp    edi,0x4
jne    80646fb <do_report+0x8b>
sub    esp,0x8
push   0x806edf8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    edi,0x3
add    esp,0x10
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
test   BYTE PTR [ebx],0x8
je     806478d <do_report+0x11d>
mov    eax,DWORD PTR [ebp-0x20]
add    eax,DWORD PTR ds:0x8075e74
mov    edx,DWORD PTR [eax+0x3c8]
mov    eax,DWORD PTR [eax+0x3c4]
mov    DWORD PTR [ebp-0x18],edx
jmp    806470d <do_report+0x9d>
cmp    BYTE PTR [ebx],0x23
je     80648b6 <do_report+0x246>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb38]
test   ebx,ebx
je     80646af <do_report+0x3f>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070600
push   ecx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804f840 <usage>
jmp    80647bc <do_report+0x14c>
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x14],eax
je     80648d9 <do_report+0x269>
mov    edx,DWORD PTR [ebp-0x14]
add    edx,0x24
mov    DWORD PTR [ebp-0x10],edx
jmp    80646b7 <do_report+0x47>
push   eax
push   ebx
push   0x807128a
jmp    80647b3 <do_report+0x143>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x14]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
call   8062c50 <get_userlevel>
add    esp,0xc
push   eax
push   0x806f5ab
push   0x8077020
call   8048f18 <sprintf@plt>
pop    edx
pop    ecx
push   0x8077020
mov    eax,DWORD PTR [ebx]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x7
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0xb38]
sub    esp,0x8
test   eax,eax
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,0x806f231
je     8064965 <ec_cc+0x25>
mov    edx,DWORD PTR [eax+0x4]
push   edx
mov    eax,DWORD PTR [ebx]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x3
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
add    DWORD PTR [eax],0x9
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0xc]
je     8064a07 <ec_channels+0x87>
mov    BYTE PTR ds:0x8077020,0x0
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    dl,BYTE PTR [ebx+0x38d]
mov    al,dl
shr    al,0x4
and    eax,0x3
dec    eax
je     80649e0 <ec_channels+0x60>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80649b0 <ec_channels+0x30>
mov    eax,DWORD PTR [esi]
mov    BYTE PTR [eax],0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
and    edx,0x8
je     80649ec <ec_channels+0x6c>
mov    eax,DWORD PTR [esi]
mov    BYTE PTR [eax],0x40
inc    DWORD PTR [esi]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
mov    eax,DWORD PTR [esi]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [esi],eax
mov    BYTE PTR [eax],0x20
inc    DWORD PTR [esi]
add    esp,0x10
jmp    80649c1 <ec_channels+0x41>
sub    esp,0x8
push   0x80712e0
mov    eax,DWORD PTR [esi]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [esi],eax
jmp    80649cc <ec_channels+0x4c>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    edx,DWORD PTR ds:0x8076f08
mov    DWORD PTR [ebp-0x18],0x0
cmp    DWORD PTR [ebp-0x18],edx
mov    BYTE PTR ds:0x8077020,0x0
mov    esi,DWORD PTR ds:0x8075d68
mov    DWORD PTR [ebp-0x10],0x0
jge    8064a69 <ec_links+0x49>
nop
cmp    BYTE PTR [esi],0x0
je     8064a5b <ec_links+0x3b>
cmp    BYTE PTR [esi+0x9],0x64
je     8064aa0 <ec_links+0x80>
inc    DWORD PTR [ebp-0x10]
add    esi,0x258
cmp    DWORD PTR [ebp-0x10],edx
jl     8064a50 <ec_links+0x30>
mov    ecx,DWORD PTR [ebp-0x18]
test   ecx,ecx
je     8064a7e <ec_links+0x5e>
mov    eax,DWORD PTR [ebp+0x8]
add    DWORD PTR [eax],0x6
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
sub    esp,0x8
push   0x806f045
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   8057c30 <Strcat>
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx],eax
add    esp,0x10
jmp    8064a70 <ec_links+0x50>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [esi+0x8],0x3
je     8064b7b <ec_links+0x15b>
push   eax
lea    eax,[esi+0xc]
push   eax
push   0x806f04e
push   0x8077020
call   8048f18 <sprintf@plt>
xor    edi,edi
mov    edx,DWORD PTR ds:0x8076f08
add    esp,0x10
cmp    edi,edx
mov    DWORD PTR [ebp-0x14],0x0
mov    ebx,DWORD PTR ds:0x8075d68
jge    8064af6 <ec_links+0xd6>
lea    esi,[esi+0x0]
cmp    BYTE PTR [ebx],0x0
je     8064aeb <ec_links+0xcb>
cmp    BYTE PTR [ebx+0x9],0x65
je     8064b30 <ec_links+0x110>
inc    edi
add    ebx,0x258
cmp    edi,edx
jl     8064ae0 <ec_links+0xc0>
sub    esp,0x8
push   0x806f055
push   0x8077020
call   8057c30 <Strcat>
pop    edi
pop    eax
push   0x8077020
mov    eax,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [eax]
push   ebx
call   8057c30 <Strcat>
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [edx],eax
add    esp,0x10
mov    edx,DWORD PTR ds:0x8076f08
jmp    8064a5b <ec_links+0x3b>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [esi+0x4]
cmp    DWORD PTR [ebx+0x250],eax
jne    8064aeb <ec_links+0xcb>
mov    eax,DWORD PTR [ebp-0x14]
test   eax,eax
jne    8064b64 <ec_links+0x144>
sub    esp,0x8
lea    eax,[ebx+0xc]
push   eax
push   0x8077020
call   8057c30 <Strcat>
inc    DWORD PTR [ebp-0x14]
inc    DWORD PTR [ebp-0x18]
add    esp,0x10
mov    edx,DWORD PTR ds:0x8076f08
jmp    8064aeb <ec_links+0xcb>
sub    esp,0x8
push   0x8069e39
push   0x8077020
call   8057c30 <Strcat>
add    esp,0x10
jmp    8064b42 <ec_links+0x122>
push   eax
lea    eax,[esi+0xc]
push   eax
push   0x806f058
jmp    8064ab4 <ec_links+0x94>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ecx,DWORD PTR ds:0x8075d20
sub    esp,0xc
push   ecx
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
call   8057de0 <time2away>
add    esp,0xc
push   eax
push   0x806a12d
push   0x8077020
call   8048f18 <sprintf@plt>
pop    eax
pop    edx
push   0x8077020
mov    eax,DWORD PTR [ebx]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x5
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ecx]
lea    eax,[edx+0x5]
mov    DWORD PTR [ecx],eax
cmp    BYTE PTR [edx+0x5],0x0
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,0x8077020
je     8064c70 <ec_tog+0x90>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ecx]
mov    dl,BYTE PTR [eax]
cmp    dl,0x29
je     8064c1b <ec_tog+0x3b>
mov    BYTE PTR [ebx],dl
mov    eax,DWORD PTR [ecx]
lea    edx,[eax+0x1]
mov    DWORD PTR [ecx],edx
inc    ebx
cmp    BYTE PTR [eax+0x1],0x0
jne    8064c00 <ec_tog+0x20>
mov    eax,edx
cmp    BYTE PTR [eax],0x29
je     8064c27 <ec_tog+0x47>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
sub    esp,0x8
inc    eax
mov    DWORD PTR [ecx],eax
mov    BYTE PTR [ebx],0x0
push   0x4
push   0x8077020
call   8063f20 <find_var_name>
add    esp,0x10
test   eax,eax
js     8064c20 <ec_tog+0x40>
sub    esp,0x8
push   eax
mov    ebx,DWORD PTR [ebp+0x14]
push   ebx
call   8063dc0 <get_int_var>
test   eax,eax
pop    edx
pop    ecx
mov    edx,0x806d1d0
jne    8064c60 <ec_tog+0x80>
mov    edx,0x806ed96
push   edx
mov    ebx,DWORD PTR [esi]
push   ebx
call   8057c30 <Strcat>
mov    DWORD PTR [esi],eax
add    esp,0x10
jmp    8064c20 <ec_tog+0x40>
mov    eax,DWORD PTR [ecx]
jmp    8064c1b <ec_tog+0x3b>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x0
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edx+0xbbc]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   0x806a12d
push   0x8077020
call   8048f18 <sprintf@plt>
pop    eax
pop    edx
push   0x8077020
mov    eax,DWORD PTR [ebx]
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x3
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
push   0x0
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edx+0xbb8]
push   eax
mov    ebx,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x8]
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   0x806a12d
push   0x8077020
call   8048f18 <sprintf@plt>
pop    eax
pop    edx
push   0x8077020
mov    ecx,DWORD PTR [ebx]
push   ecx
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x3
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0xc]
push   0x8071272
mov    eax,DWORD PTR [ebx]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
mov    BYTE PTR [eax],0x20
pop    ecx
pop    eax
push   0x807125b
mov    eax,DWORD PTR [ebx]
inc    eax
push   eax
call   8057c30 <Strcat>
mov    DWORD PTR [ebx],eax
add    DWORD PTR [esi],0x4
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x434
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   80587f0 <get_channel>
mov    ebx,DWORD PTR [ebp+0x10]
add    esp,0x10
test   ebx,ebx
mov    DWORD PTR [ebp-0x424],eax
jne    8064dd0 <do_esay+0x50>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070410
push   ecx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x424]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8064dbc <do_esay+0x3c>
push   eax
push   0x400
push   0x0
push   0x8077020
call   8048eb8 <memset@plt>
lea    edi,[ebp-0x418]
xor    eax,eax
cld    
mov    ecx,0x100
rep stos DWORD PTR es:[edi],eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp],eax
mov    DWORD PTR [ebp-0x420],eax
call   8048f78 <strlen@plt>
mov    DWORD PTR [ebp-0x42c],eax
lea    eax,[ebp-0x418]
mov    DWORD PTR [ebp-0x41c],eax
mov    DWORD PTR [ebp-0x428],0x0
mov    edx,DWORD PTR [ebp-0x420]
xor    ebx,ebx
add    esp,0x10
cmp    BYTE PTR [edx],0x0
je     8064e79 <do_esay+0xf9>
lea    esi,[esi+0x0]
mov    cl,BYTE PTR [edx]
cmp    cl,0x24
je     8064ea0 <do_esay+0x120>
mov    eax,DWORD PTR [ebp-0x41c]
mov    BYTE PTR [eax],cl
mov    eax,DWORD PTR [ebp-0x420]
inc    eax
mov    DWORD PTR [ebp-0x420],eax
inc    DWORD PTR [ebp-0x41c]
mov    edx,eax
cmp    BYTE PTR [edx],0x0
jne    8064e50 <do_esay+0xd0>
push   eax
lea    eax,[ebp-0x418]
push   eax
push   0x806a12d
mov    eax,DWORD PTR [ebp-0x424]
push   eax
call   8061360 <sendprivmsg>
jmp    8064dbc <do_esay+0x3c>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    eax,ds:0x8071860
xor    esi,esi
test   eax,eax
je     8064f13 <do_esay+0x193>
xor    edi,edi
lea    esi,[esi+0x0]
movsx  eax,BYTE PTR [edi+0x8071864]
cmp    DWORD PTR [ebp-0x42c],eax
jle    8064ed2 <do_esay+0x152>
add    edx,eax
mov    DWORD PTR [ebp-0x428],edx
mov    bl,BYTE PTR [edx]
mov    BYTE PTR [edx],0x0
mov    edx,DWORD PTR [ebp-0x420]
sub    esp,0x8
push   edx
mov    eax,DWORD PTR [edi+0x8071860]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8064f34 <do_esay+0x1b4>
test   bl,bl
je     8064ef7 <do_esay+0x177>
mov    eax,DWORD PTR [ebp-0x428]
mov    BYTE PTR [eax],bl
xor    ebx,ebx
add    edi,0xc
mov    eax,DWORD PTR [edi+0x8071860]
inc    esi
test   eax,eax
je     8064f0d <do_esay+0x18d>
mov    edx,DWORD PTR [ebp-0x420]
jmp    8064eb0 <do_esay+0x130>
mov    edx,DWORD PTR [ebp-0x420]
lea    eax,[esi+esi*2]
mov    eax,DWORD PTR [eax*4+0x8071860]
test   eax,eax
jne    8064e74 <do_esay+0xf4>
mov    al,BYTE PTR [edx]
mov    edx,DWORD PTR [ebp-0x41c]
mov    BYTE PTR [edx],al
jmp    8064e5f <do_esay+0xdf>
mov    eax,DWORD PTR [ebp-0x424]
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
lea    eax,[ebp-0x41c]
push   eax
lea    eax,[ebp-0x420]
push   eax
call   DWORD PTR [edi+0x8071868]
add    esp,0x10
test   bl,bl
je     8064f64 <do_esay+0x1e4>
mov    eax,DWORD PTR [ebp-0x428]
mov    BYTE PTR [eax],bl
xor    ebx,ebx
sub    esp,0xc
mov    edx,DWORD PTR [ebp-0x420]
push   edx
call   8048f78 <strlen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x42c],eax
jmp    8064f0d <do_esay+0x18d>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
pop    ecx
pop    esi
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
mov    edi,eax
call   80587f0 <get_channel>
mov    esi,eax
mov    DWORD PTR [esp],0x806f095
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     806500f <do_pickup+0x8f>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8064ff0 <do_pickup+0x70>
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x23
je     8064fe0 <do_pickup+0x60>
sub    esp,0x8
mov    eax,ds:0x80705d0
push   eax
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   eax
push   ebx
push   0x806a12d
push   esi
call   8061360 <sendprivmsg>
jmp    8064fd8 <do_pickup+0x58>
nop
push   eax
push   ebx
push   edi
push   0x806e689
call   8061640 <send_to_server>
push   ebx
push   edi
push   0x806f0ae
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8064fd8 <do_pickup+0x58>
push   eax
push   0x806f095
push   0x8071298
jmp    8065004 <do_pickup+0x84>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
pop    ecx
pop    esi
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
push   edx
mov    edi,eax
call   80587f0 <get_channel>
mov    esi,eax
mov    DWORD PTR [esp],0x806f0b6
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80650af <do_insult+0x8f>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8065090 <do_insult+0x70>
mov    eax,DWORD PTR [ebp+0xc]
cmp    BYTE PTR [eax],0x23
je     8065080 <do_insult+0x60>
sub    esp,0x8
mov    eax,ds:0x8070460
push   eax
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
push   eax
push   ebx
push   0x806a12d
push   esi
call   8061360 <sendprivmsg>
jmp    8065078 <do_insult+0x58>
nop
push   eax
push   ebx
push   edi
push   0x806e689
call   8061640 <send_to_server>
push   ebx
push   edi
push   0x806f0ae
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8065078 <do_insult+0x58>
push   eax
push   0x806f0b6
push   0x8071298
jmp    80650a4 <do_insult+0x84>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x41c
mov    eax,ds:0x8075e74
xor    ebx,ebx
mov    edx,DWORD PTR [eax+0x720]
mov    eax,DWORD PTR [eax+0x71c]
xor    esi,esi
cmp    ebx,eax
mov    DWORD PTR [ebp-0x41c],0x0
jge    806511a <do_core+0x5a>
mov    edi,eax
jmp    8065100 <do_core+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp    BYTE PTR [edx],0x0
je     8065114 <do_core+0x54>
mov    al,BYTE PTR [edx+0x3e]
shr    al,1
and    eax,0x7
dec    eax
je     8065632 <do_core+0x572>
add    edx,0x48
dec    edi
jne    8065100 <do_core+0x40>
sub    esp,0x8
push   0x806f0cf
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
pop    edx
mov    eax,ds:0x8075e74
pop    ecx
lea    edx,[eax+0x22d]
push   edx
add    eax,0x220
push   eax
call   8048ef8 <strcmp@plt>
add    esp,0x10
test   eax,eax
je     806561c <do_core+0x55c>
mov    eax,ds:0x8075e74
lea    edx,[eax+0x22d]
push   edx
add    eax,0x220
push   eax
push   0x806f5c0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0xc
cmp    ebx,0x1
mov    eax,0x8067180
je     8065181 <do_core+0xc1>
mov    eax,0x806a12e
push   eax
cmp    esi,0x1
push   ebx
mov    eax,0x8067180
je     8065192 <do_core+0xd2>
mov    eax,0x806a12e
push   eax
push   esi
mov    eax,DWORD PTR [ebp-0x41c]
push   eax
push   0x806f600
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    BYTE PTR [ebp-0x418],0x0
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+0xb34]
xor    edi,edi
add    esp,0x20
test   esi,esi
mov    DWORD PTR [ebp-0x41c],0x0
je     80652c7 <do_core+0x207>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x41c]
test   eax,eax
je     806526c <do_core+0x1ac>
lea    ebx,[ebp-0x418]
mov    ecx,ebx
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
lea    edx,[eax-0x1010101]
not    eax
and    edx,eax
add    ebx,0x4
and    edx,0x80808080
je     8065200 <do_core+0x140>
test   edx,0x8080
jne    8065225 <do_core+0x165>
shr    edx,0x10
add    ebx,0x2
add    dl,dl
sbb    ebx,0x3
mov    eax,DWORD PTR [esi+0x4]
sub    esp,0xc
push   eax
sub    ebx,ecx
call   8048f78 <strlen@plt>
lea    eax,[eax+ebx*1]
add    esp,0x10
cmp    eax,0x39
jbe    806526c <do_core+0x1ac>
test   edi,edi
jne    806560a <do_core+0x54a>
push   ebx
lea    eax,[ebp-0x418]
push   eax
push   0x806f0e5
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   80614d0 <send_to_user>
inc    edi
add    esp,0x10
mov    BYTE PTR [ebp-0x418],0x0
sub    esp,0x8
push   0x8067364
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
test   BYTE PTR [esi+0x38d],0x8
jne    80655ee <do_core+0x52e>
mov    eax,ds:0x8075e74
cmp    esi,DWORD PTR [eax+0xb38]
je     80655d3 <do_core+0x513>
mov    eax,DWORD PTR [esi+0x4]
sub    esp,0x8
push   eax
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
mov    esi,DWORD PTR [esi]
add    esp,0x10
inc    DWORD PTR [ebp-0x41c]
test   esi,esi
jne    80651e0 <do_core+0x120>
test   edi,edi
jne    80655c1 <do_core+0x501>
push   eax
lea    eax,[ebp-0x418]
push   eax
push   0x806f0e5
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x41c]
add    esp,0x10
test   eax,eax
je     80655a8 <do_core+0x4e8>
mov    eax,ds:0x8075e74
cmp    BYTE PTR [eax+0x296],0x0
je     806532e <do_core+0x26e>
mov    edx,DWORD PTR [eax+0x2dc]
cmp    edx,0x1
je     8065594 <do_core+0x4d4>
cmp    edx,0x1
jle    806557e <do_core+0x4be>
cmp    edx,0x64
je     8065570 <do_core+0x4b0>
cmp    edx,0x65
je     8065548 <do_core+0x488>
mov    eax,DWORD PTR [eax+0x10]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    edi,DWORD PTR ds:0x8075d28
push   edi
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     806553b <do_core+0x47b>
mov    esi,DWORD PTR [eax+0x100]
push   esi
cmp    BYTE PTR [eax+0xa8],0x0
je     8065533 <do_core+0x473>
add    eax,0xa8
push   eax
push   0x806f0fb
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   80614d0 <send_to_user>
pop    edx
pop    ecx
push   0x0
mov    edx,DWORD PTR ds:0x8075e74
mov    eax,ds:0x8075d20
sub    eax,DWORD PTR [edx+0xbbc]
push   eax
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   0x806f115
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,ds:0x8075e74
add    esp,0xc
cmp    BYTE PTR [eax+0x360],0x0
je     8065529 <do_core+0x469>
add    eax,0x360
push   eax
push   0x806f12c
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
cmp    BYTE PTR ds:0x8075d40,0x0
je     8065407 <do_core+0x347>
push   0x8076ee0
cmp    BYTE PTR ds:0x8076ee0,0x0
push   0x8075d40
je     806551f <do_core+0x45f>
mov    eax,0x806f640
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
cmp    DWORD PTR ds:0x8075d2c,0xffffffff
je     806543a <do_core+0x37a>
cmp    DWORD PTR ds:0x8075e2c,0xffffffff
je     8065515 <do_core+0x455>
mov    eax,0x806f144
push   eax
mov    eax,ds:0x8075d2c
push   eax
push   0x806f14d
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
sub    esp,0xc
mov    eax,ds:0x8075d20
push   eax
call   8057d60 <time2str>
add    esp,0xc
push   eax
push   0x806f167
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
pop    esi
mov    ebx,DWORD PTR ds:0x8075e84
push   ebx
call   8057d60 <time2str>
add    esp,0xc
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   0x806f17e
push   ecx
call   80614d0 <send_to_user>
pop    eax
pop    edx
mov    eax,ds:0x8075d20
push   0x0
sub    eax,DWORD PTR ds:0x8075e84
push   eax
call   8057f50 <idle2str>
add    esp,0xc
push   eax
push   0x806f195
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
push   0x807125f
push   0x807125b
push   0x806f1ac
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
add    esp,0x1c
cmp    BYTE PTR ds:0x8071220,0x0
je     806550e <do_core+0x44e>
mov    eax,0x8071220
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
push   0x806f1c8
push   ebx
call   80614d0 <send_to_user>
mov    eax,ds:0x8075e74
add    esp,0xc
movsx  eax,BYTE PTR [eax+0x380]
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   0x806f1df
push   ecx
call   80614d0 <send_to_user>
pop    eax
pop    edx
mov    edi,DWORD PTR [ebp+0x8]
push   0x806f1f6
push   edi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    eax,0x806d3f5
jmp    80654c9 <do_core+0x409>
mov    eax,0x806797e
jmp    8065422 <do_core+0x362>
mov    eax,0x806f207
jmp    80653fa <do_core+0x33a>
mov    eax,0x806f231
jmp    80653c3 <do_core+0x303>
add    eax,0x8
jmp    806536d <do_core+0x2ad>
sub    esp,0x8
push   0x806f680
jmp    8065373 <do_core+0x2b3>
mov    edx,DWORD PTR [eax+0x2d8]
push   edx
add    eax,0x296
push   eax
push   0x806f6c0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
mov    eax,ds:0x8075e74
jmp    806532e <do_core+0x26e>
push   ebx
add    eax,0x296
push   eax
push   0x806f700
jmp    806555a <do_core+0x49a>
test   edx,edx
jne    806532e <do_core+0x26e>
push   esi
add    eax,0x296
push   eax
push   0x806f740
jmp    806555a <do_core+0x49a>
mov    ecx,DWORD PTR [eax+0x2d8]
push   ecx
add    eax,0x296
push   eax
push   0x806f780
jmp    806555a <do_core+0x49a>
sub    esp,0x8
push   0x806f21e
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
add    esp,0x10
jmp    80652f6 <do_core+0x236>
push   eax
lea    eax,[ebp-0x418]
push   eax
push   0x806f238
jmp    80652dc <do_core+0x21c>
mov    eax,DWORD PTR [esi+0x4]
push   eax
lea    eax,[ebp-0x418]
push   eax
push   0x806f24e
push   eax
call   8048f18 <sprintf@plt>
jmp    80652b4 <do_core+0x1f4>
sub    esp,0x8
push   0x806a108
lea    eax,[ebp-0x418]
push   eax
call   8057c30 <Strcat>
add    esp,0x10
jmp    8065290 <do_core+0x1d0>
push   ecx
lea    eax,[ebp-0x418]
push   eax
push   0x806f238
jmp    8065258 <do_core+0x198>
push   eax
mov    eax,ds:0x8075e74
add    eax,0x220
push   eax
push   0x806f255
jmp    8065166 <do_core+0xa6>
inc    DWORD PTR [ebp-0x41c]
mov    eax,DWORD PTR [edx+0x3c]
shr    eax,0x9
and    eax,0xff
cmp    eax,0x64
je     8065659 <do_core+0x599>
cmp    eax,0xc8
jne    8065114 <do_core+0x54>
inc    ebx
jmp    8065114 <do_core+0x54>
inc    esi
jmp    8065648 <do_core+0x588>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x10]
mov    ebx,DWORD PTR [ebp+0x8]
push   eax
push   0x114
mov    eax,ds:0x8075e34
push   eax
mov    eax,ds:0x8075d28
push   eax
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
mov    edx,eax
je     80656c5 <do_cserv+0x65>
mov    eax,DWORD PTR [eax+0x100]
cmp    BYTE PTR [edx+0xa8],0x0
mov    DWORD PTR [ebp+0x14],eax
je     80656c0 <do_cserv+0x60>
lea    eax,[edx+0xa8]
mov    DWORD PTR [ebp+0x8],ebx
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x806f26c
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    80614d0 <send_to_user>
lea    eax,[edx+0x8]
jmp    80656a8 <do_cserv+0x48>
mov    DWORD PTR [ebp+0x8],ebx
mov    DWORD PTR [ebp+0xc],0x806f7c0
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    80614d0 <send_to_user>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x58
lea    eax,[ebp+0x10]
push   eax
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8065850 <do_qshit+0x170>
sub    esp,0x8
push   0x806e306
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
mov    esi,eax
jge    8065730 <do_qshit+0x50>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   0x0
push   ebx
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     806571a <do_qshit+0x3a>
sub    esp,0x8
push   eax
push   0x806f282
call   80576b0 <debug>
pop    edx
pop    ecx
push   0x806e306
push   ebx
call   8063660 <is_shitted>
add    esp,0x10
test   eax,eax
je     8065774 <do_qshit+0x94>
push   eax
push   ebx
push   0x8069820
push   edi
call   80614d0 <send_to_user>
jmp    806571a <do_qshit+0x3a>
sub    esp,0x8
push   0x806e306
push   ebx
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,esi
jl     8065797 <do_qshit+0xb7>
cmp    esi,0x64
je     8065797 <do_qshit+0xb7>
push   eax
push   ebx
push   0x806f800
jmp    806576c <do_qshit+0x8c>
sub    esp,0x8
push   0x1
push   ebx
call   80589d0 <format_uh>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     806571a <do_qshit+0x3a>
sub    esp,0x8
push   edi
lea    esi,[ebp-0x58]
push   esi
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR ds:0x8075d20
add    esp,0xc
lea    eax,[edx+0x76a700]
push   eax
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
push   edx
je     80657d9 <do_qshit+0xf9>
cmp    BYTE PTR [eax],0x0
jne    80657de <do_qshit+0xfe>
mov    eax,0x806f29a
push   eax
push   esi
push   0x806e306
push   0x2
push   ebx
call   8063410 <add_to_shitlist>
add    esp,0x20
test   eax,eax
je     8065833 <do_qshit+0x153>
push   0x806e306
push   ebx
push   0x80698e0
push   edi
call   80614d0 <send_to_user>
mov    eax,ds:0x8075d20
add    eax,0x76a700
mov    DWORD PTR [esp],eax
call   8057d60 <time2str>
add    esp,0xc
push   eax
push   0x806a3ff
push   edi
call   80614d0 <send_to_user>
call   804abd0 <check_shit>
add    esp,0x10
jmp    806571a <do_qshit+0x3a>
sub    esp,0x8
push   0x806a41c
push   edi
call   80614d0 <send_to_user>
jmp    806582b <do_qshit+0x14b>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,ds:0x80705e0
push   eax
push   edi
call   804f840 <usage>
jmp    806571a <do_qshit+0x3a>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   8057c60 <getnick>
pop    eax
pop    edx
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0xc]
push   esi
call   80587f0 <get_channel>
pop    ecx
pop    ebx
push   0x1
push   eax
mov    esi,eax
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     806591d <do_wall+0xad>
test   BYTE PTR ds:0x8076f04,0x8
jne    8065908 <do_wall+0x98>
mov    ebx,DWORD PTR [eax+0x1c]
test   ebx,ebx
je     80658cc <do_wall+0x5c>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
test   BYTE PTR [ebx+0x4],0x2
jne    80658f0 <do_wall+0x80>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80658c0 <do_wall+0x50>
push   eax
push   esi
push   0x806f2a7
push   edi
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
jmp    80658f0 <do_wall+0x80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   esi
mov    eax,DWORD PTR [ebx+0x3c]
push   eax
push   0x806f2b9
call   8061640 <send_to_server>
add    esp,0x10
jmp    80658c6 <do_wall+0x56>
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   esi
push   esi
push   0x806f2d3
call   8061640 <send_to_server>
add    esp,0x10
jmp    80658cc <do_wall+0x5c>
push   edx
push   esi
push   0x807128a
jmp    80658d3 <do_wall+0x63>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8065954 <do_mode+0x24>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
jne    8065970 <do_mode+0x40>
sub    esp,0x8
mov    eax,ds:0x8070540
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+0x0]
sub    esp,0x8
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jl     8065963 <do_mode+0x33>
push   esi
mov    ecx,DWORD PTR [ebp+0x10]
push   ecx
push   0x806a12d
push   ebx
call   80613b0 <sendmode>
jmp    8065963 <do_mode+0x33>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    esi,DWORD PTR [ebp+0x8]
push   esi
mov    eax,ds:0x8075e74
mov    ds:0x8076f00,eax
call   8057c60 <getnick>
pop    ecx
pop    ebx
push   eax
push   0x806f2ee
call   804b7d0 <send_global_statmsg>
mov    esi,DWORD PTR ds:0x8076f0c
add    esp,0x10
test   esi,esi
je     8065a74 <do_rehash2+0xd4>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   0x806902d
mov    DWORD PTR ds:0x8075e74,esi
call   804b700 <send_statmsg>
call   804f690 <write_levelfile>
add    esp,0x10
test   eax,eax
je     8065ac3 <do_rehash2+0x123>
call   8061c10 <saveuserlist>
test   eax,eax
je     8065aa3 <do_rehash2+0x103>
mov    eax,ds:0x8075e74
sub    esp,0x8
mov    edx,DWORD PTR [eax+0xb40]
push   edx
add    eax,0xb44
push   eax
call   8063980 <write_seenlist>
add    esp,0x10
test   eax,eax
je     8065a85 <do_rehash2+0xe5>
call   8063b00 <read_seenlist>
mov    eax,ds:0x8075e74
mov    ebx,DWORD PTR [eax+0xb34]
test   ebx,ebx
je     8065a6a <do_rehash2+0xca>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
mov    eax,DWORD PTR [ebx+0x4]
push   eax
push   0x806f2ff
call   8061640 <send_to_server>
mov    ebx,DWORD PTR [ebx]
add    esp,0x10
test   ebx,ebx
jne    8065a50 <do_rehash2+0xb0>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    80659e0 <do_rehash2+0x40>
mov    eax,ds:0x8076f00
mov    ds:0x8075e74,eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    eax,ds:0x8075e74
sub    esp,0x8
mov    eax,DWORD PTR [eax+0xb40]
push   eax
push   0x8069140
call   804b700 <send_statmsg>
add    esp,0x10
jmp    8065a31 <do_rehash2+0x91>
mov    eax,ds:0x8075e74
sub    esp,0x8
add    eax,0x724
push   eax
push   0x8071300
call   804b700 <send_statmsg>
add    esp,0x10
jmp    8065a10 <do_rehash2+0x70>
sub    esp,0x8
push   0x8068577
push   0x8069180
call   804b700 <send_statmsg>
add    esp,0x10
jmp    8065a03 <do_rehash2+0x63>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
call   8063600 <delete_shitlist>
mov    DWORD PTR [ebp+0xc],0x806f306
mov    DWORD PTR [ebp+0x8],ebx
pop    eax
pop    ebx
pop    ebp
jmp    80614d0 <send_to_user>
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8065b25 <do_ctcp+0x25>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8065b25 <do_ctcp+0x25>
cmp    BYTE PTR [eax],0x0
jne    8065b50 <do_ctcp+0x50>
sub    esp,0x8
mov    eax,ds:0x8070370
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
mov    ebx,DWORD PTR [ebp-0x4]
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
jmp    8065b50 <do_ctcp+0x50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
push   0x806a89a
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8065b7a <do_ctcp+0x7a>
push   ecx
mov    edx,DWORD PTR ds:0x8075d20
push   edx
push   0x806f320
push   ebx
call   8061490 <send_ctcp>
jmp    8065b37 <do_ctcp+0x37>
push   eax
mov    eax,DWORD PTR [ebp+0x10]
push   eax
push   0x806a12d
jmp    8065b72 <do_ctcp+0x72>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x134
push   0x806f329
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    eax,ds:0x8076f0c
add    esp,0x10
test   eax,eax
mov    DWORD PTR [ebp-0x120],eax
je     8065c79 <do_whom+0xe9>
push   eax
mov    eax,DWORD PTR [ebp-0x120]
add    eax,0x220
push   eax
push   0x806f250
lea    esi,[ebp-0x98]
push   esi
call   8048f18 <sprintf@plt>
mov    eax,DWORD PTR [ebp-0x120]
mov    ebx,DWORD PTR [eax+0x4]
add    esp,0x10
cmp    ebx,0x4
je     8065e39 <do_whom+0x2a9>
mov    DWORD PTR [ebp-0x118],0x746f6e28
mov    DWORD PTR [ebp-0x114],0x6e6f6320
mov    DWORD PTR [ebp-0x110],0x7463656e
mov    DWORD PTR [ebp-0x10c],0x296465
lea    eax,[ebp-0x118]
push   eax
lea    esi,[ebp-0x98]
push   esi
push   0x806f338
mov    edi,DWORD PTR [ebp+0x8]
push   edi
call   80614d0 <send_to_user>
mov    eax,DWORD PTR [ebp-0x120]
mov    edi,DWORD PTR [eax+0xb3c]
add    esp,0x10
test   edi,edi
je     8065c63 <do_whom+0xd3>
lea    esi,[esi+0x0]
test   BYTE PTR [edi+0x208],0x1
jne    8065da0 <do_whom+0x210>
mov    edi,DWORD PTR [edi]
test   edi,edi
jne    8065c50 <do_whom+0xc0>
mov    eax,DWORD PTR [ebp-0x120]
mov    eax,DWORD PTR [eax]
test   eax,eax
mov    DWORD PTR [ebp-0x120],eax
jne    8065bc0 <do_whom+0x30>
mov    eax,ds:0x8076f08
xor    edi,edi
cmp    edi,eax
mov    ecx,DWORD PTR ds:0x8075d68
mov    edx,eax
jge    8065ca8 <do_whom+0x118>
lea    ebx,[ecx+0xc]
cmp    BYTE PTR [ebx-0xc],0x0
je     8065c9b <do_whom+0x10b>
cmp    BYTE PTR [ebx-0x3],0x65
je     8065cc1 <do_whom+0x131>
inc    edi
add    ebx,0x258
cmp    edi,edx
mov    eax,edx
jl     8065c8f <do_whom+0xff>
sub    esp,0x8
mov    ebx,DWORD PTR [ebp+0x8]
push   0x806a64b
push   ebx
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    edx,DWORD PTR [ebx+0x244]
push   edx
push   0x258
push   eax
mov    eax,ds:0x8075d68
push   eax
call   8059220 <findstruct>
add    esp,0xc
push   ebx
push   0x806f250
mov    esi,eax
lea    eax,[ebp-0x98]
push   eax
mov    DWORD PTR [ebp-0x12c],ebx
call   8048f18 <sprintf@plt>
lea    eax,[esi+0xc]
push   eax
lea    esi,[ebp-0x98]
push   esi
push   0x806f343
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    DWORD PTR [ebp-0x11c],0x0
mov    edx,DWORD PTR ds:0x8076f08
add    esp,0x20
cmp    DWORD PTR [ebp-0x11c],edx
mov    esi,DWORD PTR ds:0x8075d68
jge    8065c9b <do_whom+0x10b>
cmp    BYTE PTR [esi],0x0
je     8065d3f <do_whom+0x1af>
cmp    BYTE PTR [esi+0x9],0x66
je     8065d58 <do_whom+0x1c8>
inc    DWORD PTR [ebp-0x11c]
add    esi,0x258
cmp    DWORD PTR [ebp-0x11c],edx
jl     8065d34 <do_whom+0x1a4>
jmp    8065c9b <do_whom+0x10b>
mov    eax,DWORD PTR [ebx+0x244]
cmp    DWORD PTR [esi+0x250],eax
jne    8065d3f <do_whom+0x1af>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x12c]
push   eax
lea    eax,[esi+0xc]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
je     8065d88 <do_whom+0x1f8>
mov    edx,DWORD PTR ds:0x8076f08
jmp    8065d3f <do_whom+0x1af>
push   eax
lea    eax,[esi+0x2c]
push   eax
push   0x806f358
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8065d80 <do_whom+0x1f0>
mov    ebx,DWORD PTR ds:0x8075d20
sub    ebx,DWORD PTR [edi+0x260]
mov    eax,0x88888889
imul   ebx
lea    esi,[ebx+edx*1]
mov    eax,ebx
sar    eax,0x1f
sar    esi,0x5
sub    esi,eax
lea    eax,[esi+esi*2]
lea    eax,[eax+eax*4]
shl    eax,0x2
sub    ebx,eax
sub    esp,0xc
lea    eax,[edi+0x20c]
push   eax
mov    DWORD PTR [ebp-0x128],eax
call   8062d80 <max_userlevel>
add    esp,0xc
push   eax
push   0x806f35d
lea    eax,[ebp-0x98]
push   eax
call   8048f18 <sprintf@plt>
add    esp,0xc
push   ebx
push   esi
mov    esi,DWORD PTR [ebp-0x128]
push   esi
call   8057d10 <getuh>
lea    esi,[ebp-0x98]
mov    DWORD PTR [esp],eax
push   esi
sub    esp,0x8
mov    ebx,DWORD PTR [ebp-0x128]
push   ebx
call   8057c60 <getnick>
add    esp,0xc
push   eax
push   0x806f840
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   80614d0 <send_to_user>
add    esp,0x20
jmp    8065c5d <do_whom+0xcd>
mov    edi,DWORD PTR [eax+0x10]
push   edi
push   0x114
mov    esi,DWORD PTR ds:0x8075e34
push   esi
mov    ecx,DWORD PTR ds:0x8075d28
push   ecx
call   8059220 <findstruct>
add    esp,0x10
test   eax,eax
je     8065e90 <do_whom+0x300>
mov    edx,DWORD PTR [eax+0x100]
push   edx
cmp    BYTE PTR [eax+0xa8],0x0
je     8065e8b <do_whom+0x2fb>
add    eax,0xa8
push   eax
push   0x806f5a8
lea    esi,[ebp-0x118]
push   esi
call   8048f18 <sprintf@plt>
add    esp,0x10
jmp    8065c1b <do_whom+0x8b>
add    eax,0x8
jmp    8065e71 <do_whom+0x2e1>
mov    eax,0x806f361
mov    esi,eax
cld    
lea    edi,[ebp-0x118]
mov    ecx,ebx
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
mov    al,ds:0x806f371
mov    BYTE PTR [edi],al
jmp    8065c1b <do_whom+0x8b>
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8065ed2 <do_echo+0x22>
cmp    BYTE PTR [eax],0x0
jne    8065ef0 <do_echo+0x40>
sub    esp,0x8
mov    eax,ds:0x8070400
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x806d1d0
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8065f20 <do_echo+0x70>
mov    eax,ds:0x80762a4
sub    esp,0x8
or     BYTE PTR [eax+0x3c],0x1
push   0x806f372
push   esi
call   80614d0 <send_to_user>
jmp    8065ee1 <do_echo+0x31>
mov    esi,esi
sub    esp,0x8
push   0x806ed96
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8065ed2 <do_echo+0x22>
mov    eax,ds:0x80762a4
sub    esp,0x8
and    BYTE PTR [eax+0x3c],0xfe
push   0x806f38b
jmp    8065f16 <do_echo+0x66>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    DWORD PTR [ebp+0x14],0x807125b
mov    DWORD PTR [ebp+0x10],0x8071272
mov    DWORD PTR [ebp+0xc],0x806e50a
pop    ebp
jmp    80614d0 <send_to_user>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x44
mov    edi,DWORD PTR [ebp+0x8]
push   edi
mov    eax,ds:0x806f3a5
push   0x806f3aa
mov    DWORD PTR [ebp-0x28],eax
mov    al,ds:0x806f3a9
mov    BYTE PTR [ebp-0x24],al
call   80576b0 <debug>
mov    DWORD PTR [esp],edi
call   8048f78 <strlen@plt>
mov    edx,eax
lea    eax,[eax-0x5]
add    esp,0x10
cmp    eax,0x3
jg     8065fc0 <screwban_format+0x50>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
lea    eax,[edx-0xe]
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fstp   QWORD PTR [ebp-0x48]
call   8048df8 <rand@plt>
fld    QWORD PTR ds:0x806e2c8
push   eax
fimul  DWORD PTR [esp]
fnstcw WORD PTR [ebp-0x2a]
fld    QWORD PTR [ebp-0x48]
fmulp  st(1),st
mov    ax,WORD PTR [ebp-0x2a]
mov    ah,0xc
mov    WORD PTR [ebp-0x2c],ax
fadd   QWORD PTR ds:0x806fbf0
fldcw  WORD PTR [ebp-0x2c]
fistp  DWORD PTR [ebp-0x30]
fldcw  WORD PTR [ebp-0x2a]
mov    eax,DWORD PTR [ebp-0x30]
add    esp,0x4
test   eax,eax
jle    8065fac <screwban_format+0x3c>
mov    ebx,eax
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   edi
call   8048f78 <strlen@plt>
xor    edx,edx
push   edx
dec    eax
push   eax
fild   QWORD PTR [esp]
add    esp,0x8
fstp   QWORD PTR [ebp-0x48]
call   8048df8 <rand@plt>
push   eax
fld    QWORD PTR ds:0x806e2c8
fimul  DWORD PTR [esp]
fnstcw WORD PTR [ebp-0x2a]
fld    QWORD PTR [ebp-0x48]
fmulp  st(1),st
mov    ax,WORD PTR [ebp-0x2a]
fldz   
mov    ah,0xc
mov    WORD PTR [ebp-0x2c],ax
faddp  st(1),st
fldcw  WORD PTR [ebp-0x2c]
fistp  DWORD PTR [ebp-0x30]
fldcw  WORD PTR [ebp-0x2a]
mov    esi,DWORD PTR [ebp-0x30]
add    esp,0xc
movsx  eax,BYTE PTR [esi+edi*1]
push   eax
push   0x806f3c0
call   8048f98 <strchr@plt>
add    esp,0x10
test   eax,eax
je     8066080 <screwban_format+0x110>
dec    ebx
jne    8066010 <screwban_format+0xa0>
jmp    8065fac <screwban_format+0x3c>
lea    esi,[esi+eiz*1+0x0]
call   8048df8 <rand@plt>
push   eax
fld    QWORD PTR ds:0x806e2c8
fnstcw WORD PTR [ebp-0x2a]
fimul  DWORD PTR [esp]
mov    ax,WORD PTR [ebp-0x2a]
fmul   QWORD PTR ds:0x806fbf8
mov    ah,0xc
fldz   
mov    WORD PTR [ebp-0x2c],ax
faddp  st(1),st
fldcw  WORD PTR [ebp-0x2c]
fistp  DWORD PTR [ebp-0x30]
fldcw  WORD PTR [ebp-0x2a]
mov    eax,DWORD PTR [ebp-0x30]
mov    al,BYTE PTR [eax+ebp*1-0x28]
add    esp,0x4
mov    BYTE PTR [esi+edi*1],al
jmp    8066071 <screwban_format+0x101>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x80c
mov    edi,DWORD PTR [ebp+0x8]
test   edi,edi
mov    ebx,DWORD PTR [ebp+0x10]
je     8066137 <deop_screwban+0x77>
mov    eax,DWORD PTR [ebp+0xc]
test   eax,eax
je     8066137 <deop_screwban+0x77>
test   ebx,ebx
je     8066137 <deop_screwban+0x77>
sub    esp,0x8
push   0x1
push   ebx
call   80589d0 <format_uh>
pop    ecx
pop    esi
push   eax
lea    esi,[ebp-0x418]
push   esi
call   8048c68 <strcpy@plt>
pop    eax
pop    edx
push   0x1
push   ebx
call   80589d0 <format_uh>
pop    edx
pop    ecx
push   eax
lea    ebx,[ebp-0x818]
push   ebx
call   8048c68 <strcpy@plt>
mov    DWORD PTR [esp],esi
call   8065f70 <screwban_format>
mov    DWORD PTR [esp],ebx
call   8065f70 <screwban_format>
mov    DWORD PTR [esp],ebx
mov    eax,DWORD PTR [ebp+0xc]
push   esi
push   eax
push   0x806f3c5
push   edi
call   80613b0 <sendmode>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     8066159 <do_last+0x19>
cmp    BYTE PTR [eax],0x0
jne    8066207 <do_last+0xc7>
mov    edi,0x5
lea    eax,[edi-0x1]
cmp    eax,0x13
jbe    8066190 <do_last+0x50>
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x80704d0
push   ecx
mov    edx,DWORD PTR [ebp+0x8]
push   edx
call   804f840 <usage>
add    esp,0x10
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   eax
push   edi
push   0x806f3d4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
xor    ebx,ebx
call   80614d0 <send_to_user>
add    esp,0x10
cmp    ebx,edi
mov    esi,0x1
jge    80661de <do_last+0x9e>
mov    esi,esi
test   esi,esi
je     80661de <do_last+0x9e>
mov    eax,ds:0x8075e74
mov    esi,DWORD PTR [eax+ebx*4+0xb48]
test   esi,esi
push   eax
mov    eax,esi
je     8066200 <do_last+0xc0>
push   eax
push   0x806a12d
mov    eax,DWORD PTR [ebp+0x8]
push   eax
inc    ebx
call   80614d0 <send_to_user>
add    esp,0x10
cmp    ebx,edi
jl     80661b0 <do_last+0x70>
sub    esp,0x8
push   0x806a64b
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
jmp    8066179 <do_last+0x39>
jmp    8066200 <do_last+0xc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,0x806f231
jmp    80661c7 <do_last+0x87>
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
mov    DWORD PTR [esp],eax
call   8048f58 <atoi@plt>
mov    edi,eax
add    esp,0x10
jmp    806615e <do_last+0x1e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0x8
lea    eax,[ebp+0x10]
push   eax
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    esi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    ebx,eax
pop    eax
pop    edx
push   ebx
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8066270 <do_randomtopic+0x40>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x1
push   ebx
call   804b050 <find_channel>
add    esp,0x10
test   eax,eax
je     80662dc <do_randomtopic+0xac>
mov    ax,WORD PTR [eax+0x38c]
and    eax,0x808
cmp    ax,0x8
je     80662d3 <do_randomtopic+0xa3>
sub    esp,0xc
push   0x806f3ea
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
je     80662c6 <do_randomtopic+0x96>
push   edx
push   eax
push   ebx
push   0x8067924
call   8061640 <send_to_server>
add    esp,0xc
push   ebx
push   0x806a502
push   esi
call   80614d0 <send_to_user>
jmp    806625b <do_randomtopic+0x2b>
push   ecx
push   0x806f3ea
push   0x8071298
jmp    80662be <do_randomtopic+0x8e>
push   eax
push   ebx
push   0x8071324
jmp    80662be <do_randomtopic+0x8e>
push   eax
push   ebx
push   0x807128a
jmp    80662be <do_randomtopic+0x8e>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x414
lea    ebx,[ebp+0x10]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
mov    edi,DWORD PTR [ebp+0x8]
call   80587f0 <get_channel>
mov    esi,eax
pop    eax
pop    edx
push   esi
push   edi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    8066330 <do_screwban+0x40>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80663fc <do_screwban+0x10c>
sub    esp,0xc
push   eax
call   8058b80 <isnick>
add    esp,0x10
test   eax,eax
jne    8066370 <do_screwban+0x80>
push   eax
push   ebx
push   0x80712c1
push   edi
call   80614d0 <send_to_user>
jmp    806631f <do_screwban+0x2f>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   eax
push   0x0
push   ebx
push   edi
call   80588c0 <nick2uh>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     806631f <do_screwban+0x2f>
sub    esp,0xc
push   0x806a327
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
je     806639c <do_screwban+0xac>
cmp    BYTE PTR [eax],0x0
jne    80663e7 <do_screwban+0xf7>
mov    DWORD PTR [ebp-0x418],0x2074754f
mov    DWORD PTR [ebp-0x414],0x20756f79
mov    DWORD PTR [ebp-0x410],0x216f67
push   eax
push   edi
push   ebx
push   esi
call   80660c0 <deop_screwban>
mov    eax,DWORD PTR [ebp+0x10]
test   eax,eax
je     80663cf <do_screwban+0xdf>
cmp    BYTE PTR [eax],0x0
jne    80663d5 <do_screwban+0xe5>
lea    eax,[ebp-0x418]
push   eax
push   0x806a12d
push   ebx
push   esi
call   80613f0 <sendkick>
jmp    806631f <do_screwban+0x2f>
sub    esp,0x8
push   eax
lea    eax,[ebp-0x418]
push   eax
call   8048c68 <strcpy@plt>
add    esp,0x10
jmp    80663ba <do_screwban+0xca>
sub    esp,0x8
mov    eax,ds:0x80706c0
push   eax
push   edi
call   804f840 <usage>
jmp    806631f <do_screwban+0x2f>
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
push   0x8068fc1
call   805d660 <randstring>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8066450 <do_reset+0x40>
call   8055480 <close_all_dcc>
mov    DWORD PTR ds:0x8075e7c,0x1
mov    DWORD PTR [ebp+0x8],ebx
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
jmp    80509b0 <kill_all_bots>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    ebx,0x806f400
jmp    806642a <do_reset+0x1a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x8]
push   ebx
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x3e
jbe    80664a0 <do_addserver+0x40>
mov    DWORD PTR [ebp+0xc],0x8069aa0
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
jmp    80664a0 <do_addserver+0x40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   eax
push   ebx
push   0x806f880
push   esi
call   80614d0 <send_to_user>
mov    DWORD PTR [ebp+0x8],ebx
add    esp,0x10
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80495d0 <cfg_server>
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    eax,ds:0x8075d28
test   eax,eax
jne    80664f0 <do_delserver+0x30>
sub    esp,0x8
push   0x806f408
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
lea    ebx,[ebp+0x10]
push   ebx
call   8057b00 <chop>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     806663b <do_delserver+0x17b>
sub    esp,0xc
push   eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
je     8066624 <do_delserver+0x164>
mov    esi,DWORD PTR [eax]
xor    edi,edi
mov    eax,ds:0x8075e34
cmp    edi,eax
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x10],0x0
mov    ebx,DWORD PTR ds:0x8075d28
jge    8066560 <do_delserver+0xa0>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
cmp    BYTE PTR [ebx],0x0
jne    80665d0 <do_delserver+0x110>
inc    edi
add    ebx,0x114
cmp    edi,eax
jl     8066550 <do_delserver+0x90>
mov    edi,DWORD PTR [ebp-0x18]
test   edi,edi
je     80665b3 <do_delserver+0xf3>
cmp    DWORD PTR [ebp-0x18],0x1
je     8066588 <do_delserver+0xc8>
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   0x806f8c0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    80664e3 <do_delserver+0x23>
mov    eax,DWORD PTR [ebp-0x10]
mov    edx,DWORD PTR [eax+0x100]
push   edx
mov    eax,DWORD PTR [ebp-0x14]
push   eax
push   0x806f900
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
cld    
mov    ecx,0x45
xor    eax,eax
mov    edi,DWORD PTR [ebp-0x10]
rep stos DWORD PTR es:[edi],eax
jmp    8066580 <do_delserver+0xc0>
test   esi,esi
je     80665c3 <do_delserver+0x103>
push   esi
mov    esi,DWORD PTR [ebp-0x14]
push   esi
push   0x806f920
jmp    8066577 <do_delserver+0xb7>
push   ebx
mov    ecx,DWORD PTR [ebp-0x14]
push   ecx
push   0x806f960
jmp    8066577 <do_delserver+0xb7>
nop
sub    esp,0x8
lea    eax,[ebx+0x8]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8066608 <do_delserver+0x148>
test   esi,esi
je     8066600 <do_delserver+0x140>
cmp    DWORD PTR [ebx+0x100],esi
je     8066600 <do_delserver+0x140>
mov    eax,ds:0x8075e34
jmp    8066555 <do_delserver+0x95>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x10],ebx
inc    DWORD PTR [ebp-0x18]
jmp    80665f3 <do_delserver+0x133>
sub    esp,0x8
lea    eax,[ebx+0xa8]
push   eax
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    80665f3 <do_delserver+0x133>
jmp    80665e7 <do_delserver+0x127>
sub    esp,0x8
mov    eax,ds:0x80703b0
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
jmp    80664e3 <do_delserver+0x23>
xor    esi,esi
jmp    8066528 <do_delserver+0x68>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x10
mov    edi,DWORD PTR [ebp+0x8]
push   0x806f422
push   0x806f9a0
push   edi
call   80614d0 <send_to_user>
xor    esi,esi
mov    eax,ds:0x8075e34
add    esp,0x10
cmp    esi,eax
mov    ebx,DWORD PTR ds:0x8075d28
jge    8066721 <do_serverlist+0xd1>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
cmp    BYTE PTR [ebx],0x0
je     8066712 <do_serverlist+0xc2>
mov    edx,DWORD PTR [ebx+0x108]
test   edx,edx
jne    80667a0 <do_serverlist+0x150>
mov    eax,DWORD PTR [ebx+0x104]
cmp    eax,0x6
ja     8066760 <do_serverlist+0x110>
jmp    DWORD PTR [eax*4+0x806fc00]
mov    ecx,0x806f429
mov    esi,esi
push   eax
mov    eax,ds:0x8075e74
mov    eax,DWORD PTR [eax+0x10]
cmp    DWORD PTR [ebx+0x4],eax
je     8066750 <do_serverlist+0x100>
mov    eax,0x8067180
test   edx,edx
push   eax
mov    eax,0x80682f8
jne    80666e6 <do_serverlist+0x96>
mov    eax,0x8067180
push   eax
push   ecx
mov    edx,DWORD PTR [ebx+0x100]
push   edx
cmp    BYTE PTR [ebx+0xa8],0x0
je     8066740 <do_serverlist+0xf0>
lea    eax,[ebx+0xa8]
push   eax
push   0x806f43c
push   edi
call   80614d0 <send_to_user>
add    esp,0x20
mov    eax,ds:0x8075e34
inc    esi
add    ebx,0x114
cmp    esi,eax
jl     8066690 <do_serverlist+0x40>
mov    DWORD PTR [ebp+0xc],0x806f452
mov    DWORD PTR [ebp+0x8],edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
jmp    80614d0 <send_to_user>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
lea    eax,[ebx+0x8]
jmp    80666fe <do_serverlist+0xae>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x80679b0
jmp    80666d7 <do_serverlist+0x87>
lea    esi,[esi+0x0]
mov    ecx,0x806f469
jmp    80666c0 <do_serverlist+0x70>
mov    ecx,0x806f471
jmp    80666c0 <do_serverlist+0x70>
mov    ecx,0x806f47b
jmp    80666c0 <do_serverlist+0x70>
mov    ecx,0x806f493
jmp    80666c0 <do_serverlist+0x70>
mov    ecx,0x806f4aa
jmp    80666c0 <do_serverlist+0x70>
mov    ecx,0x806f4be
jmp    80666c0 <do_serverlist+0x70>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x0
mov    eax,ds:0x8075d20
sub    eax,edx
push   eax
call   8057f50 <idle2str>
mov    ecx,eax
add    esp,0x10
mov    edx,DWORD PTR [ebx+0x108]
jmp    80666c0 <do_serverlist+0x70>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     80667e4 <do_away+0x14>
cmp    BYTE PTR [ebx],0x0
jne    8066830 <do_away+0x60>
sub    esp,0xc
push   0x806d249
call   8061640 <send_to_server>
pop    ebx
pop    eax
push   0x806f4d5
push   esi
call   80614d0 <send_to_user>
mov    eax,ds:0x8075e74
and    BYTE PTR [eax+0x3ac],0xf7
mov    edx,DWORD PTR ds:0x8075d20
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0xbb4],edx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    ecx,DWORD PTR ds:0x8075d20
sub    esp,0xc
push   ecx
call   8057de0 <time2away>
add    esp,0xc
push   eax
push   ebx
push   0x8069051
call   8061640 <send_to_server>
pop    eax
pop    edx
push   0x806f4e9
push   esi
call   80614d0 <send_to_user>
mov    eax,ds:0x8075e74
or     BYTE PTR [eax+0x3ac],0x8
jmp    806681b <do_away+0x4b>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   esi,esi
je     80668db <do_servstats+0x6b>
test   eax,eax
je     80668d0 <do_servstats+0x60>
push   ecx
push   eax
push   esi
push   0x806f4f7
call   8061640 <send_to_server>
pop    eax
pop    edx
mov    eax,ds:0x8075e74
push   edi
add    eax,0xb30
push   eax
call   8063800 <make_time>
mov    DWORD PTR [eax+0x10],0x14
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   esi
push   0x806f503
jmp    80668a2 <do_servstats+0x32>
sub    esp,0x8
mov    ebx,DWORD PTR ds:0x80707e0
push   ebx
push   edi
call   804f840 <usage>
jmp    80668c1 <do_servstats+0x51>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x10
lea    eax,[ebp+0x10]
push   eax
mov    ebx,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     8066940 <do_whois_irc+0x50>
sub    esp,0x8
push   eax
push   0x806e3c3
call   8061640 <send_to_server>
pop    eax
pop    edx
mov    eax,ds:0x8075e74
push   ebx
add    eax,0xb30
push   eax
call   8063800 <make_time>
mov    DWORD PTR [eax+0x10],0x5
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    ecx,DWORD PTR ds:0x8070920
push   ecx
push   ebx
call   804f840 <usage>
jmp    8066932 <do_whois_irc+0x42>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   0x8067d53
call   8061640 <send_to_server>
pop    eax
pop    edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    eax,ds:0x8075e74
add    eax,0xb30
push   eax
call   8063800 <make_time>
mov    DWORD PTR [eax+0x10],0xf
mov    esp,ebp
pop    ebp
ret    
jmp    80669a0 <do_userhost>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     80669f0 <do_userhost+0x50>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   esi
add    eax,0xb30
push   eax
call   8063800 <make_time>
mov    DWORD PTR [eax+0x10],0x19
pop    ecx
pop    esi
push   ebx
push   0x806e3c3
call   8061640 <send_to_server>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
mov    eax,ds:0x8070880
push   eax
push   esi
call   804f840 <usage>
jmp    80669e5 <do_userhost+0x45>
jmp    8066a10 <do_dcc_kill>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x8075e28,0x1
je     8066a30 <do_dcc_kill+0x20>
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0x8
push   0x806f50c
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
mov    DWORD PTR ds:0x8075e28,0x2
add    esp,0x10
jmp    8066a1f <do_dcc_kill+0xf>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x38
lea    eax,[ebp+0x10]
push   eax
mov    DWORD PTR [ebp-0x28],0xffffffff
mov    DWORD PTR [ebp-0x20],0xffffffff
mov    DWORD PTR [ebp-0x1c],0xffffffff
mov    DWORD PTR [ebp-0x18],0xffffffff
mov    DWORD PTR [ebp-0x2c],0xffffffff
mov    DWORD PTR [ebp-0x24],0x0
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8066a9a <do_user+0x4a>
cmp    BYTE PTR [eax],0x0
jne    8066ac0 <do_user+0x70>
sub    esp,0x8
mov    eax,ds:0x8070870
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
sub    esp,0xc
push   eax
call   8062a80 <find_handle>
add    esp,0x10
test   eax,eax
mov    edi,eax
je     8066e8d <do_user+0x43d>
sub    esp,0x8
mov    edx,DWORD PTR [eax+0x2c]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8062b00 <find_user>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8066e7e <do_user+0x42e>
mov    edx,DWORD PTR [eax+0x3c]
mov    eax,DWORD PTR [edi+0x3c]
shr    edx,0x9
shr    eax,0x9
movzx  ecx,dl
cmp    al,dl
jbe    8066b30 <do_user+0xe0>
cmp    ecx,0x64
je     8066b20 <do_user+0xd0>
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806f9e0
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   80614d0 <send_to_user>
jmp    8066aac <do_user+0x5c>
mov    eax,DWORD PTR [ebx+0x2c]
cmp    BYTE PTR [eax],0x2a
jne    8066b0b <do_user+0xbb>
nop
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x10
jne    8066e6f <do_user+0x41f>
and    eax,0x20
je     8066e60 <do_user+0x410>
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0x14],0x0
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8066c9a <do_user+0x24a>
mov    al,BYTE PTR [eax]
test   al,al
je     8066c9a <do_user+0x24a>
movsx  eax,al
cmp    eax,0x2b
je     8066c90 <do_user+0x240>
cmp    eax,0x2d
mov    esi,0x2
jne    8066a9a <do_user+0x4a>
inc    ebx
cmp    BYTE PTR [ebx],0x0
je     8066a9a <do_user+0x4a>
sub    esp,0x8
push   0x8067d94
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8066bd0 <do_user+0x180>
mov    eax,esi
movsx  esi,al
mov    DWORD PTR [ebp-0x2c],esi
inc    DWORD PTR [ebp-0x14]
jmp    8066b60 <do_user+0x110>
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x806e9c9
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8066bef <do_user+0x19f>
mov    eax,esi
movsx  esi,al
mov    DWORD PTR [ebp-0x18],esi
jmp    8066bc4 <do_user+0x174>
sub    esp,0x8
push   0x806e9cc
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8066c0e <do_user+0x1be>
mov    eax,esi
movsx  esi,al
mov    DWORD PTR [ebp-0x1c],esi
jmp    8066bc4 <do_user+0x174>
sub    esp,0x8
push   0x8067321
push   ebx
call   8057bb0 <Strcasecmp>
add    esp,0x10
test   eax,eax
jne    8066c2d <do_user+0x1dd>
mov    eax,esi
movsx  esi,al
mov    DWORD PTR [ebp-0x28],esi
jmp    8066bc4 <do_user+0x174>
mov    al,BYTE PTR [ebx]
cmp    al,0x50
je     8066c3b <do_user+0x1eb>
cmp    al,0x70
jne    8066a9a <do_user+0x4a>
inc    ebx
mov    dl,BYTE PTR [ebx]
lea    eax,[edx-0x30]
cmp    al,0x4
ja     8066c61 <do_user+0x211>
cmp    BYTE PTR [ebx+0x1],0x0
jne    8066c61 <do_user+0x211>
mov    eax,esi
movsx  esi,al
movsx  eax,dl
sub    eax,0x30
mov    DWORD PTR [ebp-0x20],esi
mov    DWORD PTR [ebp-0x24],eax
jmp    8066bc4 <do_user+0x174>
test   dl,dl
jne    8066a9a <do_user+0x4a>
mov    eax,esi
cmp    al,0x2
jne    8066a9a <do_user+0x4a>
mov    DWORD PTR [ebp-0x20],0x2
mov    DWORD PTR [ebp-0x24],0x0
jmp    8066bc4 <do_user+0x174>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    esi,0x1
jmp    8066b9d <do_user+0x14d>
mov    ebx,DWORD PTR [ebp-0x14]
test   ebx,ebx
je     8066a9a <do_user+0x4a>
cmp    DWORD PTR [ebp-0x2c],0x1
je     8066e39 <do_user+0x3e9>
cmp    DWORD PTR [ebp-0x2c],0x2
je     8066e1d <do_user+0x3cd>
cmp    DWORD PTR [ebp-0x18],0x1
je     8066e01 <do_user+0x3b1>
cmp    DWORD PTR [ebp-0x18],0x2
je     8066de5 <do_user+0x395>
cmp    DWORD PTR [ebp-0x1c],0x1
je     8066dc9 <do_user+0x379>
cmp    DWORD PTR [ebp-0x1c],0x2
je     8066dad <do_user+0x35d>
cmp    DWORD PTR [ebp-0x28],0x1
je     8066d91 <do_user+0x341>
cmp    DWORD PTR [ebp-0x28],0x2
je     8066d75 <do_user+0x325>
cmp    DWORD PTR [ebp-0x20],0x1
je     8066d48 <do_user+0x2f8>
cmp    DWORD PTR [ebp-0x20],0x2
je     8066d2f <do_user+0x2df>
mov    ecx,DWORD PTR [ebp-0x10]
test   ecx,ecx
je     8066d23 <do_user+0x2d3>
push   edx
lea    eax,[edi+0x8]
push   eax
push   0x806f51c
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80614d0 <send_to_user>
add    esp,0x10
jmp    8066aac <do_user+0x5c>
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806f536
jmp    8066d12 <do_user+0x2c2>
mov    ax,WORD PTR [edi+0x3c]
test   eax,0x1c0
je     8066d01 <do_user+0x2b1>
and    eax,0xfffffe3f
mov    WORD PTR [edi+0x3c],ax
inc    DWORD PTR [ebp-0x10]
jmp    8066d01 <do_user+0x2b1>
mov    cx,WORD PTR [edi+0x3c]
mov    eax,ecx
shr    ax,0x6
and    eax,0x7
cmp    eax,DWORD PTR [ebp-0x24]
je     8066cfb <do_user+0x2ab>
mov    edx,DWORD PTR [ebp-0x24]
and    edx,0x7
mov    eax,ecx
shl    edx,0x6
and    eax,0xfffffe3f
or     eax,edx
mov    WORD PTR [edi+0x3c],ax
inc    DWORD PTR [ebp-0x10]
jmp    8066cfb <do_user+0x2ab>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x1
je     8066cf5 <do_user+0x2a5>
and    eax,0xfffffffe
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066cf5 <do_user+0x2a5>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x1
jne    8066ceb <do_user+0x29b>
or     eax,0x1
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066ceb <do_user+0x29b>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x2
je     8066ce1 <do_user+0x291>
and    eax,0xfffffffd
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066ce1 <do_user+0x291>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x2
jne    8066cd7 <do_user+0x287>
or     eax,0x2
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066cd7 <do_user+0x287>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x4
je     8066ccd <do_user+0x27d>
and    eax,0xfffffffb
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066ccd <do_user+0x27d>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x4
jne    8066cc3 <do_user+0x273>
or     eax,0x4
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066cc3 <do_user+0x273>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x8
je     8066cb9 <do_user+0x269>
and    eax,0xfffffff7
mov    BYTE PTR [edi+0x3c],al
inc    DWORD PTR [ebp-0x10]
jmp    8066cb9 <do_user+0x269>
mov    al,BYTE PTR [edi+0x3c]
test   eax,0x8
jne    8066caf <do_user+0x25f>
or     eax,0x8
mov    BYTE PTR [edi+0x3c],al
mov    DWORD PTR [ebp-0x10],0x1
jmp    8066caf <do_user+0x25f>
lea    esi,[esi+eiz*1+0x0]
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806fa20
jmp    8066b15 <do_user+0xc5>
push   eax
lea    eax,[edi+0x8]
push   eax
push   0x806fa60
jmp    8066b15 <do_user+0xc5>
push   eax
mov    eax,DWORD PTR [edi+0x2c]
push   eax
push   0x806faa0
jmp    8066b15 <do_user+0xc5>
push   ecx
push   ebx
push   0x806f54c
jmp    8066b15 <do_user+0xc5>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
test   ebx,ebx
mov    esi,DWORD PTR [ebp+0x8]
je     8066eb4 <do_cmdchar+0x14>
cmp    BYTE PTR [ebx],0x0
jne    8066ee0 <do_cmdchar+0x40>
mov    eax,ds:0x8075e74
movsx  eax,BYTE PTR [eax+0x380]
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x806f55c
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0x8
push   0x0
push   esi
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,0x64
je     8066efa <do_cmdchar+0x5a>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
mov    dl,BYTE PTR [ebx]
test   dl,dl
je     8066f06 <do_cmdchar+0x66>
cmp    BYTE PTR [ebx+0x1],0x0
je     8066f1b <do_cmdchar+0x7b>
mov    DWORD PTR [ebp+0xc],0x806fae0
mov    DWORD PTR [ebp+0x8],esi
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
jmp    80614d0 <send_to_user>
mov    eax,ds:0x8075e74
mov    BYTE PTR [eax+0x380],dl
movsx  eax,BYTE PTR [ebx]
mov    DWORD PTR [ebp+0x10],eax
mov    DWORD PTR [ebp+0xc],0x806f578
jmp    8066eca <do_cmdchar+0x2a>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
sub    esp,0xc
lea    eax,[ebp+0x10]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     8066f62 <do_virtual+0x22>
cmp    BYTE PTR [eax],0x0
jne    8066f80 <do_virtual+0x40>
sub    esp,0x8
mov    eax,ds:0x80708e0
push   eax
push   esi
call   804f840 <usage>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8048f78 <strlen@plt>
add    esp,0x10
cmp    eax,0x3e
jbe    8066fb0 <do_virtual+0x70>
push   eax
push   0x3f
push   0x806fb20
push   esi
call   80614d0 <send_to_user>
jmp    8066f71 <do_virtual+0x31>
jmp    8066fb0 <do_virtual+0x70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    esp,0x8
mov    eax,ds:0x8075e74
push   ebx
add    eax,0x296
push   eax
call   8048c68 <strcpy@plt>
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x2dc],0x0
add    esp,0xc
add    eax,0x296
push   eax
push   0x806fb60
push   esi
call   80614d0 <send_to_user>
pop    ebx
pop    eax
push   0x806fb80
jmp    8066f99 <do_virtual+0x59>
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0x18
lea    ebx,[ebp+0x10]
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
call   8057b00 <chop>
mov    esi,eax
mov    DWORD PTR [esp],ebx
call   8057b00 <chop>
add    esp,0x10
test   eax,eax
je     806701b <do_wingate+0x2b>
cmp    BYTE PTR [eax],0x0
jne    8067040 <do_wingate+0x50>
sub    esp,0x8
mov    eax,ds:0x8070940
push   eax
push   edi
call   804f840 <usage>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    esp,0xc
push   eax
call   8059370 <Atoi>
add    esp,0x10
test   eax,eax
mov    ebx,eax
je     806705f <do_wingate+0x6f>
mov    eax,DWORD PTR [eax]
test   eax,eax
jle    806705f <do_wingate+0x6f>
cmp    eax,0xffff
jle    806706f <do_wingate+0x7f>
sub    esp,0x8
push   0x806c120
push   edi
call   80614d0 <send_to_user>
jmp    806702a <do_wingate+0x3a>
sub    esp,0x8
mov    eax,ds:0x8075e74
push   esi
add    eax,0x296
push   eax
call   8048c68 <strcpy@plt>
mov    edx,DWORD PTR [ebx]
mov    eax,ds:0x8075e74
mov    DWORD PTR [eax+0x2d8],edx
mov    DWORD PTR [eax+0x2dc],0x1
push   edx
add    eax,0x296
push   eax
push   0x806f590
push   edi
call   80614d0 <send_to_user>
add    esp,0x18
push   0x806fb80
jmp    8067067 <do_wingate+0x77>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0xc
push   0x0
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   8062c50 <get_userlevel>
add    esp,0x10
cmp    eax,DWORD PTR [ebp+0x14]
jge    80670e1 <do_shutdown+0x21>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
push   edx
push   eax
push   eax
push   ebx
call   8057c60 <getnick>
pop    edx
pop    ecx
push   eax
push   0x806fbc0
call   804b7d0 <send_global_statmsg>
mov    DWORD PTR [esp],0x0
call   80509b0 <kill_all_bots>
mov    eax,ds:0x8076fa8
add    esp,0x10
test   eax,eax
je     806711f <do_shutdown+0x5f>
push   0x0
push   0x0
push   0x0
push   0x0
call   80575d0 <do_debug>
add    esp,0x10
mov    eax,ds:0x8075e7c
test   eax,eax
je     806712d <do_shutdown+0x6d>
call   805d2c0 <mech_exec>
sub    esp,0xc
push   0x0
call   8048f48 <exit@plt>
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],ebx
mov    ebx,0x807198c
cmp    DWORD PTR ds:0x807198c,0xffffffff
je     806716a <__do_global_ctors_aux+0x2a>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
call   DWORD PTR [ebx]
sub    ebx,0x4
cmp    DWORD PTR [ebx],0xffffffff
jne    8067160 <__do_global_ctors_aux+0x20>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
call   80490b0 <__do_global_dtors_aux>
ret    
