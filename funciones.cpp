#include "funciones.hpp"
void obtenerArchivos(vector<string> &malwares)
{
    DIR *directorio;
    struct dirent *archivos;
    string dir;
    if (directorio = opendir("Malware/"))
    {
        while (archivos = readdir(directorio))
        {
            string nombre(archivos->d_name);
            if (nombre.compare(".") != 0 && nombre.compare("..") != 0)
            {
                malwares.push_back(nombre);
            }
        }
    }

    closedir(directorio);
}

void SHA1(const string &archivo)
{
    const string comando = "sha1sum Malware/" + archivo + " | awk '{printf \"%45s\\n\", $1}' >> hashes.txt";
    // const char *comandoSystem = comando.c_str();
    system(comando.c_str());
    // cout << comando<<endl;
}

void obtenerEnsamblador(const int &m, const string &archivo, string &herramienta)
{
    string instruccion="";
    if(herramienta.compare("Objdump")==0){
        instruccion="objdump -d ";
    }else if(herramienta.compare("Objdump")==0){
        instruccion="r2 -d ";
    const string comando = instruccion+"Malware/" + archivo + " > Ensambladores/" + herramienta + "/Ensamblador_m" + to_string(m) + string(".txt");
    
    system(comando.c_str());
}