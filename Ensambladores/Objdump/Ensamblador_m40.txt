push   ebp
mov    ebp,esp
push   ebx
call   8048901 <__register_frame_info@plt-0x37>
pop    ebx
add    ebx,0x4243
cmp    DWORD PTR [ebx+0xb0],0x0
je     8048916 <__register_frame_info@plt-0x22>
call   0 <__register_frame_info@plt-0x8048938>
mov    esi,esi
call   8048c50 <strcpy@plt+0x98>
call   804b680 <strcpy@plt+0x2ac8>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804cb48
jmp    DWORD PTR ds:0x804cb4c
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804cb50
push   0x0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb54
push   0x8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb58
push   0x10
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb5c
push   0x18
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb60
push   0x20
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb64
push   0x28
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb68
push   0x30
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb6c
push   0x38
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb70
push   0x40
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb74
push   0x48
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb78
push   0x50
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb7c
push   0x58
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb80
push   0x60
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb84
push   0x68
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb88
push   0x70
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb8c
push   0x78
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb90
push   0x80
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb94
push   0x88
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb98
push   0x90
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cb9c
push   0x98
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cba0
push   0xa0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cba4
push   0xa8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cba8
push   0xb0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbac
push   0xb8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbb0
push   0xc0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbb4
push   0xc8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbb8
push   0xd0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbbc
push   0xd8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbc0
push   0xe0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbc4
push   0xe8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbc8
push   0xf0
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbcc
push   0xf8
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbd0
push   0x100
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbd4
push   0x108
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbd8
push   0x110
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbdc
push   0x118
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbe0
push   0x120
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbe4
push   0x128
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbe8
push   0x130
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbec
push   0x138
jmp    8048928 <__register_frame_info@plt-0x10>
jmp    DWORD PTR ds:0x804cbf0
push   0x140
jmp    8048928 <__register_frame_info@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x804b6ac
push   0x80488f8
push   ecx
push   esi
push   0x80493b4
call   8048a98 <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x804cafc,0x0
jne    8048c44 <strcpy@plt+0x8c>
jmp    8048c1d <strcpy@plt+0x65>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804caf8,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804caf8
cmp    DWORD PTR [eax],0x0
jne    8048c10 <strcpy@plt+0x58>
mov    eax,0x8048a38
test   eax,eax
je     8048c3a <strcpy@plt+0x82>
push   0x804cb30
call   8048a38 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804cafc,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048938
test   eax,eax
je     8048c6b <strcpy@plt+0xb3>
push   0x804ccac
push   0x804cb30
call   8048938 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    DWORD PTR ds:0x804cb2c,0x1
push   0x8048c80
push   0xe
call   80489a8 <signal@plt>
push   0x3c
call   8048b98 <alarm@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    DWORD PTR ds:0x804cb24,0x1
push   0x0
call   8048b98 <alarm@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    DWORD PTR ds:0x804cb24,0x0
push   DWORD PTR [ebp+0x8]
call   8048b98 <alarm@plt>
push   0x8048ca4
push   0xe
call   80489a8 <signal@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   DWORD PTR [ebp+0x8]
push   0x804b700
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
mov    eax,0x1
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
push   0x10
lea    eax,[ebp-0x10]
push   eax
call   8048af8 <bzero@plt>
push   esi
call   8048a88 <inet_addr@plt>
mov    ebx,eax
mov    DWORD PTR [ebp-0xc],ebx
mov    BYTE PTR [edi],0x0
add    esp,0xc
cmp    ebx,0xffffffff
jne    8048d4b <strcpy@plt+0x193>
push   esi
call   8048ae8 <gethostbyname@plt>
add    esp,0x4
test   eax,eax
jne    8048d41 <strcpy@plt+0x189>
mov    eax,ebx
jmp    8048d60 <strcpy@plt+0x1a8>
mov    eax,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [eax]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0xc],eax
push   DWORD PTR [ebp-0xc]
call   8048a18 <inet_ntoa@plt>
add    esp,0x4
push   eax
push   edi
call   8048bb8 <strcpy@plt>
mov    eax,DWORD PTR [ebp-0xc]
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x184
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0xc]
mov    WORD PTR [ebp-0x17a],ax
lea    ecx,[ebp-0x3c]
mov    DWORD PTR [ebp-0x180],ecx
push   ecx
push   0x0
call   8048b78 <tcgetattr@plt>
lea    edi,[ebp-0x78]
mov    esi,DWORD PTR [ebp-0x180]
cld    
mov    ecx,0xf
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
and    BYTE PTR [ebp-0x6c],0xf4
and    BYTE PTR [ebp-0x77],0xeb
lea    eax,[ebp-0x78]
push   eax
push   0x2
push   0x0
call   80489d8 <tcsetattr@plt>
push   0x804b8e2
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   DWORD PTR ds:0x804cca0
call   80489b8 <fflush@plt>
add    esp,0x20
push   DWORD PTR ds:0x804cca4
push   0xff
lea    ebx,[ebp-0x178]
push   ebx
call   8048a68 <fgets@plt>
mov    ecx,DWORD PTR [ebp-0x180]
push   ecx
push   0x2
push   0x0
call   80489d8 <tcsetattr@plt>
push   0x804cda0
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
mov    edx,ecx
not    edx
dec    edx
push   edx
push   ebx
call   804b390 <strcpy@plt+0x27d8>
add    esp,0x24
push   0x804cda0
mov    eax,DWORD PTR [ebp+0x8]
push   eax
mov    cx,WORD PTR [ebp-0x17a]
ror    cx,0x8
movzx  eax,cx
push   eax
call   804b3c4 <strcpy@plt+0x280c>
push   0x804b8ed
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
lea    esp,[ebp-0x190]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   0x1
call   8048b08 <exit@plt>
mov    esi,esi
push   ebp
mov    ebp,esp
push   0x0
call   8048ba8 <wait@plt>
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x804cd60
push   0x2
push   0x0
call   80489d8 <tcsetattr@plt>
push   ebx
push   0x804b8ef
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   0x0
call   8048b08 <exit@plt>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   0x8048e9c
push   0x1c
call   80489a8 <signal@plt>
inc    DWORD PTR ds:0x804cb28
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4108
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x40d4],0x10
push   0x8048e54
push   0x11
call   80489a8 <signal@plt>
lea    eax,[ebp-0x40d4]
push   eax
lea    eax,[ebp-0x10]
push   eax
push   ebx
call   8048a08 <accept@plt>
mov    DWORD PTR [ebp-0x40e0],eax
push   ebx
call   8048958 <close@plt>
add    esp,0x18
cmp    DWORD PTR [ebp-0x40e0],0x0
jge    8048f16 <strcpy@plt+0x35e>
push   0x804b90a
call   8048968 <perror@plt>
mov    eax,0x1
jmp    80493a7 <strcpy@plt+0x7ef>
push   0x8048e60
push   0x11
call   80489a8 <signal@plt>
push   0xf
push   DWORD PTR [ebp+0x8]
call   8048b48 <kill@plt>
push   0x804b920
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   0x804cd60
push   0x0
call   8048b78 <tcgetattr@plt>
add    esp,0x20
push   0x8048e6c
push   0x1
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x2
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x3
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x4
call   80489a8 <signal@plt>
add    esp,0x20
push   0x8048e6c
push   0x6
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x7
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x8
call   80489a8 <signal@plt>
push   0x8048e6c
push   0xb
call   80489a8 <signal@plt>
add    esp,0x20
push   0x8048e6c
push   0xf
call   80489a8 <signal@plt>
push   0x8048e6c
push   0xd
call   80489a8 <signal@plt>
push   0x8048e6c
push   0x1d
call   80489a8 <signal@plt>
push   0x0
call   8048e9c <strcpy@plt+0x2e4>
mov    edi,0x804cd20
mov    esi,0x804cd60
cld    
mov    ecx,0xf
rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
and    BYTE PTR ds:0x804cd2c,0xf4
and    BYTE PTR ds:0x804cd21,0xeb
push   0x804cd20
push   0x2
push   0x0
call   80489d8 <tcsetattr@plt>
add    esp,0x28
lea    eax,[ebp-0x28]
mov    DWORD PTR [ebp-0x40e4],eax
push   eax
push   0x804cda0
call   804b3e8 <strcpy@plt+0x2830>
lea    edx,[ebp-0x40]
mov    DWORD PTR [ebp-0x40e8],edx
push   edx
push   0x804cda0
call   804b3e8 <strcpy@plt+0x2830>
mov    BYTE PTR [ebp-0x4040],0x0
push   0x804b955
call   8048998 <getenv@plt>
mov    ebx,eax
add    esp,0x14
test   ebx,ebx
je     8049064 <strcpy@plt+0x4ac>
push   ebx
push   0x804b95a
lea    eax,[ebp-0x4040]
push   eax
call   8048b58 <sprintf@plt>
add    esp,0xc
push   0x40
lea    ecx,[ebp-0x4040]
mov    DWORD PTR [ebp-0x4100],ecx
mov    DWORD PTR [ebp-0x40ec],ecx
push   ecx
mov    eax,DWORD PTR [ebp-0x40e4]
push   eax
call   804b40c <strcpy@plt+0x2854>
push   0x40
mov    edx,DWORD PTR [ebp-0x4100]
push   edx
mov    ecx,DWORD PTR [ebp-0x40e0]
push   ecx
call   8048948 <write@plt>
push   0x0
call   8048c80 <strcpy@plt+0xc8>
mov    DWORD PTR ds:0x804cb2c,0x0
add    esp,0x1c
lea    eax,[ebp-0x40c0]
mov    DWORD PTR [ebp-0x40f8],eax
mov    ebx,DWORD PTR [ebp-0x40e0]
shr    ebx,0x5
mov    edx,DWORD PTR [ebp-0x40e0]
mov    DWORD PTR [ebp-0x40fc],edx
and    DWORD PTR [ebp-0x40fc],0x1f
inc    edx
mov    DWORD PTR [ebp-0x4104],edx
shl    ebx,0x2
mov    DWORD PTR [ebp-0x40f0],ebx
mov    DWORD PTR [ebp-0x40f4],eax
lea    esi,[esi+eiz*1+0x0]
mov    ecx,0x20
mov    edi,DWORD PTR [ebp-0x40f8]
xor    eax,eax
cld    
rep stos DWORD PTR es:[edi],eax
bts    DWORD PTR [ebp-0x40c0],eax
mov    edx,DWORD PTR [ebp-0x40f4]
mov    DWORD PTR [ebp-0x40f8],edx
mov    eax,DWORD PTR [ebp-0x40fc]
mov    ecx,DWORD PTR [ebp-0x40f0]
bts    DWORD PTR [ecx+edx*1],eax
cmp    DWORD PTR ds:0x804cb28,0x0
je     80491cd <strcpy@plt+0x615>
lea    ebx,[ebp-0x40dc]
push   ebx
push   0x5413
push   0x1
call   8048b28 <ioctl@plt>
add    esp,0xc
test   eax,eax
jne    80491c3 <strcpy@plt+0x60b>
mov    BYTE PTR [ebp-0x40c8],0xb
mov    dx,WORD PTR [ebx+0x2]
shr    dx,0x8
mov    WORD PTR [ebp-0x4106],dx
mov    cl,BYTE PTR [ebp-0x4106]
mov    BYTE PTR [ebp-0x40c7],cl
mov    bl,BYTE PTR [ebx+0x2]
mov    BYTE PTR [ebp-0x40c6],bl
movzx  ax,BYTE PTR [ebp-0x40db]
mov    WORD PTR [ebp-0x4106],ax
mov    dl,BYTE PTR [ebp-0x4106]
mov    BYTE PTR [ebp-0x40c5],dl
mov    cl,BYTE PTR [ebp-0x40dc]
mov    BYTE PTR [ebp-0x40c4],cl
push   0x5
lea    ebx,[ebp-0x40c8]
push   ebx
mov    eax,DWORD PTR [ebp-0x40e4]
push   eax
call   804b40c <strcpy@plt+0x2854>
push   0x5
push   ebx
mov    edx,DWORD PTR [ebp-0x40e0]
push   edx
call   8048948 <write@plt>
add    esp,0x18
mov    DWORD PTR ds:0x804cb28,0x0
call   80489e8 <__errno_location@plt>
mov    esi,eax
mov    DWORD PTR [esi],0x0
cmp    DWORD PTR ds:0x804cb2c,0x0
je     804922c <strcpy@plt+0x674>
mov    DWORD PTR [ebp-0x40d0],0x0
mov    BYTE PTR [ebp-0x40cc],0x0
mov    BYTE PTR [ebp-0x40d0],0xb
mov    DWORD PTR ds:0x804cb2c,0x0
push   0x5
lea    ebx,[ebp-0x40d0]
push   ebx
mov    ecx,DWORD PTR [ebp-0x40e4]
push   ecx
call   804b40c <strcpy@plt+0x2854>
push   0x5
push   ebx
mov    eax,DWORD PTR [ebp-0x40e0]
push   eax
call   8048948 <write@plt>
add    esp,0x18
push   0x0
push   0x0
push   0x0
mov    edx,DWORD PTR [ebp-0x40f4]
push   edx
mov    ecx,DWORD PTR [ebp-0x4104]
push   ecx
call   80489c8 <select@plt>
mov    ebx,eax
add    esp,0x14
test   ebx,ebx
jge    8049260 <strcpy@plt+0x6a8>
cmp    DWORD PTR [esi],0x4
je     80490f0 <strcpy@plt+0x538>
jmp    8049372 <strcpy@plt+0x7ba>
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
bt     DWORD PTR [ebp-0x40c0],eax
setb   al
mov    BYTE PTR [ebp-0x4106],al
test   al,al
je     80492f3 <strcpy@plt+0x73b>
mov    DWORD PTR [esi],0x0
push   0x4000
mov    edx,DWORD PTR [ebp-0x40ec]
push   edx
push   0x0
call   8048b88 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     80492a1 <strcpy@plt+0x6e9>
cmp    DWORD PTR [esi],0x4
jne    8049372 <strcpy@plt+0x7ba>
push   ebx
push   0xb
mov    ecx,DWORD PTR [ebp-0x4100]
push   ecx
call   80489f8 <memchr@plt>
mov    edi,eax
add    esp,0xc
test   edi,edi
jne    8049372 <strcpy@plt+0x7ba>
push   ebx
mov    eax,DWORD PTR [ebp-0x4100]
push   eax
mov    edx,DWORD PTR [ebp-0x40e4]
push   edx
call   804b40c <strcpy@plt+0x2854>
push   ebx
mov    ecx,DWORD PTR [ebp-0x4100]
push   ecx
mov    eax,DWORD PTR [ebp-0x40e0]
push   eax
call   8048948 <write@plt>
mov    ebx,eax
add    esp,0x18
test   ebx,ebx
jge    80492f3 <strcpy@plt+0x73b>
cmp    DWORD PTR [esi],0x4
jne    8049372 <strcpy@plt+0x7ba>
mov    eax,DWORD PTR [ebp-0x40fc]
mov    edx,DWORD PTR [ebp-0x40f4]
mov    ecx,DWORD PTR [ebp-0x40f0]
bt     DWORD PTR [ecx+edx*1],eax
setb   dl
test   dl,dl
je     80490f0 <strcpy@plt+0x538>
call   80489e8 <__errno_location@plt>
mov    edi,eax
mov    DWORD PTR [edi],0x0
push   0x4000
mov    edx,DWORD PTR [ebp-0x40ec]
push   edx
mov    ecx,DWORD PTR [ebp-0x40e0]
push   ecx
call   8048b88 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8049347 <strcpy@plt+0x78f>
cmp    DWORD PTR [edi],0x4
jne    8049372 <strcpy@plt+0x7ba>
push   ebx
mov    eax,DWORD PTR [ebp-0x4100]
push   eax
mov    edx,DWORD PTR [ebp-0x40e8]
push   edx
call   804b468 <strcpy@plt+0x28b0>
push   ebx
mov    ecx,DWORD PTR [ebp-0x4100]
push   ecx
push   0x1
call   8048948 <write@plt>
add    esp,0x18
jmp    80490f0 <strcpy@plt+0x538>
push   0x804cd60
push   0x2
push   0x0
call   80489d8 <tcsetattr@plt>
call   80489e8 <__errno_location@plt>
mov    ebx,eax
push   DWORD PTR [ebx]
push   0x804b980
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0x40e0]
push   eax
call   8048958 <close@plt>
xor    eax,eax
lea    esp,[ebp-0x4114]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x168
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x154],0x0
mov    DWORD PTR [ebp-0x13c],0x0
mov    DWORD PTR [ebp-0x140],0x0
mov    DWORD PTR [ebp-0x144],0x2
mov    DWORD PTR [ebp-0x148],0x5
mov    DWORD PTR [ebp-0x14c],0xa
lea    eax,[ebp-0x118]
mov    DWORD PTR [ebp-0x160],eax
mov    edi,eax
mov    eax,DWORD PTR [ebp-0x154]
cld    
mov    ecx,0x5
rep stos DWORD PTR es:[edi],eax
stos   WORD PTR es:[edi],ax
push   0x0
call   8048a48 <time@plt>
mov    edx,eax
push   edx
call   8048ad8 <srand@plt>
push   0x804b9a2
push   0x804b9ac
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
add    esp,0x14
jmp    80494ca <strcpy@plt+0x912>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x804cca8
test   edx,edx
je     8049691 <strcpy@plt+0xad9>
and    edi,0xdf
add    edi,0xffffffbd
cmp    edi,0x11
ja     80494c0 <strcpy@plt+0x908>
jmp    DWORD PTR [edi*4+0x804baa8]
mov    DWORD PTR [ebp-0x154],edx
jmp    80494ca <strcpy@plt+0x912>
nop
lea    esi,[esi+eiz*1+0x0]
lea    eax,[ebp-0x13c]
push   eax
push   0x804b9c9
push   edx
call   8048b18 <sscanf@plt>
add    esp,0xc
cmp    eax,0x1
je     80494ca <strcpy@plt+0x912>
jmp    8049691 <strcpy@plt+0xad9>
nop
lea    eax,[ebp-0x140]
jmp    8049486 <strcpy@plt+0x8ce>
lea    eax,[ebp-0x144]
jmp    8049486 <strcpy@plt+0x8ce>
lea    eax,[ebp-0x148]
jmp    8049486 <strcpy@plt+0x8ce>
lea    eax,[ebp-0x14c]
jmp    8049486 <strcpy@plt+0x8ce>
push   DWORD PTR [ebx]
call   8048ce0 <strcpy@plt+0x128>
add    esp,0x4
push   0x804b9b0
push   ebx
push   esi
call   8048a58 <getopt@plt>
mov    edi,eax
add    esp,0xc
cmp    edi,0xffffffff
jne    8049450 <strcpy@plt+0x898>
cmp    DWORD PTR [ebp-0x154],0x0
je     8049691 <strcpy@plt+0xad9>
cmp    DWORD PTR [ebp-0x13c],0xffff
jg     8049691 <strcpy@plt+0xad9>
mov    edx,DWORD PTR [ebp-0x140]
cmp    edx,0xffff
jg     8049691 <strcpy@plt+0xad9>
test   edx,edx
je     8049527 <strcpy@plt+0x96f>
mov    DWORD PTR ds:0x804cb00,edx
mov    DWORD PTR ds:0x804cb04,0x0
lea    eax,[ebp-0x100]
mov    DWORD PTR [ebp-0x15c],eax
push   eax
mov    ecx,DWORD PTR [ebp-0x154]
push   ecx
call   8048d00 <strcpy@plt+0x148>
mov    DWORD PTR [ebp-0x158],eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8049560 <strcpy@plt+0x9a8>
mov    eax,DWORD PTR [ebp-0x154]
push   eax
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
nop
push   0x6
push   0x1
push   0x2
call   8048b68 <socket@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jge    8049583 <strcpy@plt+0x9cb>
push   0x804b9cd
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
push   0x10
lea    edi,[ebp-0x128]
push   edi
call   8048af8 <bzero@plt>
mov    WORD PTR [ebp-0x128],0x2
add    esp,0x8
mov    DWORD PTR [ebp-0x124],0x0
mov    ecx,DWORD PTR [ebp-0x13c]
ror    cx,0x8
mov    WORD PTR [ebp-0x126],cx
push   0x10
mov    esi,edi
push   esi
push   ebx
call   8048ab8 <bind@plt>
mov    edx,eax
add    esp,0xc
test   edx,edx
jge    80495e0 <strcpy@plt+0xa28>
push   0x804b9d4
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x1
push   ebx
call   8048a28 <listen@plt>
add    esp,0x8
test   eax,eax
jge    8049600 <strcpy@plt+0xa48>
push   0x804b9d9
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
mov    esi,esi
mov    DWORD PTR [ebp-0x150],0x4
lea    eax,[ebp-0x150]
push   eax
push   esi
push   ebx
call   8048ac8 <getsockname@plt>
add    esp,0xc
test   eax,eax
jge    8049630 <strcpy@plt+0xa78>
push   0x804b9e0
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
mov    esi,esi
mov    ax,WORD PTR [ebp-0x126]
ror    ax,0x8
movzx  ecx,ax
mov    DWORD PTR [ebp-0x13c],ecx
push   ecx
push   0x804b9ec
call   8048aa8 <printf@plt>
movzx  eax,WORD PTR [ebp-0x13c]
push   eax
mov    ecx,DWORD PTR [ebp-0x160]
push   ecx
call   8048d68 <strcpy@plt+0x1b0>
call   8048988 <fork@plt>
mov    edx,eax
add    esp,0x10
test   edx,edx
jge    8049680 <strcpy@plt+0xac8>
push   0x804ba02
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
test   edx,edx
je     80496b0 <strcpy@plt+0xaf8>
push   edi
push   ebx
push   edx
call   8048eb4 <strcpy@plt+0x2fc>
jmp    804984c <strcpy@plt+0xc94>
push   DWORD PTR [ebx]
call   8048ce0 <strcpy@plt+0x128>
jmp    804984c <strcpy@plt+0xc94>
lea    esi,[esi+0x0]
push   0x804b9cd
call   8048968 <perror@plt>
jmp    8049847 <strcpy@plt+0xc8f>
nop
push   ebx
call   8048958 <close@plt>
add    esp,0x4
cmp    DWORD PTR ds:0x804cb00,0x0
je     8049830 <strcpy@plt+0xc78>
xor    esi,esi
push   0x0
push   0x1
push   0x2
call   8048b68 <socket@plt>
mov    edi,eax
add    esp,0xc
test   edi,edi
jl     80496a0 <strcpy@plt+0xae8>
push   0x10
lea    ebx,[ebp-0x138]
push   ebx
call   8048af8 <bzero@plt>
mov    WORD PTR [ebp-0x138],0x2
add    esp,0x8
mov    ax,WORD PTR [esi+0x804cb00]
ror    ax,0x8
mov    WORD PTR [ebp-0x136],ax
mov    ecx,DWORD PTR [ebp-0x158]
mov    DWORD PTR [ebp-0x134],ecx
push   DWORD PTR [esi+0x804cb00]
mov    eax,DWORD PTR [ebp-0x15c]
push   eax
push   0x804ba07
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   DWORD PTR [ebp-0x14c]
call   8048cbc <strcpy@plt+0x104>
push   0x10
push   ebx
push   edi
call   8048b38 <connect@plt>
mov    edx,eax
add    esp,0x20
cmp    DWORD PTR ds:0x804cb24,0x0
je     8049770 <strcpy@plt+0xbb8>
push   0x804ba18
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
add    esp,0x8
jmp    8049820 <strcpy@plt+0xc68>
nop
lea    esi,[esi+eiz*1+0x0]
test   edx,edx
jge    8049786 <strcpy@plt+0xbce>
push   0x804ba2c
call   8048968 <perror@plt>
add    esp,0x4
jmp    8049820 <strcpy@plt+0xc68>
push   0x804ba34
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   DWORD PTR [ebp-0x148]
call   8048cbc <strcpy@plt+0x104>
add    esp,0xc
cmp    DWORD PTR ds:0x804cb24,0x0
jne    80497fa <strcpy@plt+0xc42>
lea    esi,[esi+0x0]
push   0x16
mov    ecx,DWORD PTR [ebp-0x160]
push   ecx
push   edi
call   8048948 <write@plt>
mov    edx,eax
add    esp,0xc
test   edx,edx
jl     80497fa <strcpy@plt+0xc42>
push   DWORD PTR [ebp-0x144]
call   8048a78 <sleep@plt>
push   0x804ba3e
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   DWORD PTR ds:0x804cca0
call   80489b8 <fflush@plt>
add    esp,0x10
cmp    DWORD PTR ds:0x804cb24,0x0
je     80497b0 <strcpy@plt+0xbf8>
push   DWORD PTR [ebp-0x148]
mov    eax,DWORD PTR [ebp-0x154]
push   eax
push   0x804ba40
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
push   edi
call   8048958 <close@plt>
add    esp,0x14
add    esi,0x4
cmp    DWORD PTR [esi+0x804cb00],0x0
jne    80496c8 <strcpy@plt+0xb10>
mov    ecx,DWORD PTR [ebp-0x154]
push   ecx
push   0x804ba80
push   DWORD PTR ds:0x804cca0
call   8048978 <fprintf@plt>
mov    eax,0x1
lea    esp,[ebp-0x174]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x15c
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0xc],0x804cce0
mov    ecx,0x40
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp-0xc]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebx]
mov    edi,DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebp-0x15c],edi
mov    ecx,DWORD PTR [ebx+0x8]
mov    ebx,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ebp-0x4],ebx
mov    eax,ecx
xor    eax,ebx
and    eax,edi
xor    eax,ebx
add    eax,DWORD PTR ds:0x804cce0
mov    DWORD PTR [ebp-0x10],esi
rol    DWORD PTR [ebp-0x10],0x5
mov    edi,DWORD PTR [ebp-0x10]
lea    eax,[eax+edi*1+0x5a827999]
mov    ebx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebx+0x10]
add    eax,ebx
mov    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x4]
mov    DWORD PTR [ebp-0x11c],edi
add    edx,edi
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
and    edx,DWORD PTR [ebp-0x8]
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x8]
mov    DWORD PTR [ebp-0x120],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x4]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0xc]
mov    DWORD PTR [ebp-0x124],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x10]
mov    DWORD PTR [ebp-0x128],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    esi,eax
rol    ecx,0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x15c]
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x14]
mov    DWORD PTR [ebp-0x12c],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x18]
mov    DWORD PTR [ebp-0x130],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
and    edx,DWORD PTR [ebp-0x8]
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x1c]
mov    DWORD PTR [ebp-0x134],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x4]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x20]
mov    DWORD PTR [ebp-0x138],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x24]
mov    DWORD PTR [ebp-0x13c],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    esi,eax
rol    ecx,0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x15c]
xor    edx,DWORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x28]
mov    DWORD PTR [ebp-0x140],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x2c]
mov    DWORD PTR [ebp-0x144],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
and    edx,DWORD PTR [ebp-0x8]
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x30]
mov    DWORD PTR [ebp-0x148],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x4]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x34]
mov    DWORD PTR [ebp-0x14c],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebx+0x38]
mov    DWORD PTR [ebp-0x150],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    esi,eax
rol    ecx,0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x15c]
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0xc]
mov    edi,DWORD PTR [edi+0x3c]
mov    DWORD PTR [ebp-0x154],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
and    edx,esi
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0x14c]
mov    DWORD PTR [ebp-0x14],ebx
mov    edi,DWORD PTR [ebp-0x138]
xor    DWORD PTR [ebp-0x14],edi
mov    ebx,DWORD PTR [ebp-0x120]
xor    DWORD PTR [ebp-0x14],ebx
mov    edi,DWORD PTR ds:0x804cce0
xor    DWORD PTR [ebp-0x14],edi
rol    DWORD PTR [ebp-0x14],0x1
mov    ebx,DWORD PTR [ebp-0x14]
mov    DWORD PTR ds:0x804cce0,ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
and    edx,DWORD PTR [ebp-0x8]
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0x150]
mov    DWORD PTR [ebp-0x18],edi
mov    ebx,DWORD PTR [ebp-0x13c]
xor    DWORD PTR [ebp-0x18],ebx
mov    edi,DWORD PTR [ebp-0x124]
xor    DWORD PTR [ebp-0x18],edi
mov    ebx,DWORD PTR [ebp-0x11c]
xor    DWORD PTR [ebp-0x18],ebx
rol    DWORD PTR [ebp-0x18],0x1
mov    ebx,DWORD PTR [ebp-0x18]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x4],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
and    edx,DWORD PTR [ebp-0x4]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0x154]
mov    DWORD PTR [ebp-0x1c],edi
mov    ebx,DWORD PTR [ebp-0x140]
xor    DWORD PTR [ebp-0x1c],ebx
mov    edi,DWORD PTR [ebp-0x128]
xor    DWORD PTR [ebp-0x1c],edi
mov    ebx,DWORD PTR [ebp-0x120]
xor    DWORD PTR [ebp-0x1c],ebx
rol    DWORD PTR [ebp-0x1c],0x1
mov    ebx,DWORD PTR [ebp-0x1c]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x8],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
and    edx,ecx
xor    edx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x14]
mov    DWORD PTR [ebp-0x20],edi
mov    ebx,DWORD PTR [ebp-0x144]
xor    DWORD PTR [ebp-0x20],ebx
mov    edi,DWORD PTR [ebp-0x12c]
xor    DWORD PTR [ebp-0x20],edi
mov    ebx,DWORD PTR [ebp-0x124]
xor    DWORD PTR [ebp-0x20],ebx
rol    DWORD PTR [ebp-0x20],0x1
mov    ebx,DWORD PTR [ebp-0x20]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0xc],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x5a827999]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0x18]
mov    DWORD PTR [ebp-0x24],edi
mov    ebx,DWORD PTR [ebp-0x148]
xor    DWORD PTR [ebp-0x24],ebx
mov    edi,DWORD PTR [ebp-0x130]
xor    DWORD PTR [ebp-0x24],edi
mov    ebx,DWORD PTR [ebp-0x128]
xor    DWORD PTR [ebp-0x24],ebx
rol    DWORD PTR [ebp-0x24],0x1
mov    ebx,DWORD PTR [ebp-0x24]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x10],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0x28],edi
mov    ebx,DWORD PTR [ebp-0x14c]
xor    DWORD PTR [ebp-0x28],ebx
mov    edi,DWORD PTR [ebp-0x134]
xor    DWORD PTR [ebp-0x28],edi
mov    ebx,DWORD PTR [ebp-0x12c]
xor    DWORD PTR [ebp-0x28],ebx
rol    DWORD PTR [ebp-0x28],0x1
mov    ebx,DWORD PTR [ebp-0x28]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x14],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0x20]
mov    DWORD PTR [ebp-0x2c],edi
mov    ebx,DWORD PTR [ebp-0x150]
xor    DWORD PTR [ebp-0x2c],ebx
mov    edi,DWORD PTR [ebp-0x138]
xor    DWORD PTR [ebp-0x2c],edi
mov    ebx,DWORD PTR [ebp-0x130]
xor    DWORD PTR [ebp-0x2c],ebx
rol    DWORD PTR [ebp-0x2c],0x1
mov    ebx,DWORD PTR [ebp-0x2c]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x18],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0x24]
mov    DWORD PTR [ebp-0x30],edi
mov    ebx,DWORD PTR [ebp-0x154]
xor    DWORD PTR [ebp-0x30],ebx
mov    edi,DWORD PTR [ebp-0x13c]
xor    DWORD PTR [ebp-0x30],edi
mov    ebx,DWORD PTR [ebp-0x134]
xor    DWORD PTR [ebp-0x30],ebx
rol    DWORD PTR [ebp-0x30],0x1
mov    ebx,DWORD PTR [ebp-0x30]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x1c],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x28]
mov    DWORD PTR [ebp-0x34],edi
mov    ebx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x34],ebx
mov    edi,DWORD PTR [ebp-0x140]
xor    DWORD PTR [ebp-0x34],edi
mov    ebx,DWORD PTR [ebp-0x138]
xor    DWORD PTR [ebp-0x34],ebx
rol    DWORD PTR [ebp-0x34],0x1
mov    ebx,DWORD PTR [ebp-0x34]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x20],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x38],edi
mov    ebx,DWORD PTR [ebp-0x18]
xor    DWORD PTR [ebp-0x38],ebx
mov    edi,DWORD PTR [ebp-0x144]
xor    DWORD PTR [ebp-0x38],edi
mov    ebx,DWORD PTR [ebp-0x13c]
xor    DWORD PTR [ebp-0x38],ebx
rol    DWORD PTR [ebp-0x38],0x1
mov    ebx,DWORD PTR [ebp-0x38]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x24],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0x30]
mov    DWORD PTR [ebp-0x3c],edi
mov    ebx,DWORD PTR [ebp-0x1c]
xor    DWORD PTR [ebp-0x3c],ebx
mov    edi,DWORD PTR [ebp-0x148]
xor    DWORD PTR [ebp-0x3c],edi
mov    ebx,DWORD PTR [ebp-0x140]
xor    DWORD PTR [ebp-0x3c],ebx
rol    DWORD PTR [ebp-0x3c],0x1
mov    ebx,DWORD PTR [ebp-0x3c]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x28],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0x34]
mov    DWORD PTR [ebp-0x40],edi
mov    ebx,DWORD PTR [ebp-0x20]
xor    DWORD PTR [ebp-0x40],ebx
mov    edi,DWORD PTR [ebp-0x14c]
xor    DWORD PTR [ebp-0x40],edi
mov    ebx,DWORD PTR [ebp-0x144]
xor    DWORD PTR [ebp-0x40],ebx
rol    DWORD PTR [ebp-0x40],0x1
mov    ebx,DWORD PTR [ebp-0x40]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x2c],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0x38]
mov    DWORD PTR [ebp-0x44],edi
mov    ebx,DWORD PTR [ebp-0x24]
xor    DWORD PTR [ebp-0x44],ebx
mov    edi,DWORD PTR [ebp-0x150]
xor    DWORD PTR [ebp-0x44],edi
mov    ebx,DWORD PTR [ebp-0x148]
xor    DWORD PTR [ebp-0x44],ebx
rol    DWORD PTR [ebp-0x44],0x1
mov    ebx,DWORD PTR [ebp-0x44]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x30],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0x3c]
mov    DWORD PTR [ebp-0x48],edi
mov    ebx,DWORD PTR [ebp-0x28]
xor    DWORD PTR [ebp-0x48],ebx
mov    edi,DWORD PTR [ebp-0x154]
xor    DWORD PTR [ebp-0x48],edi
mov    ebx,DWORD PTR [ebp-0x14c]
xor    DWORD PTR [ebp-0x48],ebx
rol    DWORD PTR [ebp-0x48],0x1
mov    ebx,DWORD PTR [ebp-0x48]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x34],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0x40]
mov    DWORD PTR [ebp-0x4c],edi
mov    ebx,DWORD PTR [ebp-0x2c]
xor    DWORD PTR [ebp-0x4c],ebx
mov    edi,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x4c],edi
mov    ebx,DWORD PTR [ebp-0x150]
xor    DWORD PTR [ebp-0x4c],ebx
rol    DWORD PTR [ebp-0x4c],0x1
mov    ebx,DWORD PTR [ebp-0x4c]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x38],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0x44]
mov    DWORD PTR [ebp-0x50],edi
mov    ebx,DWORD PTR [ebp-0x30]
xor    DWORD PTR [ebp-0x50],ebx
mov    edi,DWORD PTR [ebp-0x18]
xor    DWORD PTR [ebp-0x50],edi
mov    ebx,DWORD PTR [ebp-0x154]
xor    DWORD PTR [ebp-0x50],ebx
rol    DWORD PTR [ebp-0x50],0x1
mov    ebx,DWORD PTR [ebp-0x50]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x3c],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0x48]
mov    DWORD PTR [ebp-0x54],edi
mov    ebx,DWORD PTR [ebp-0x34]
xor    DWORD PTR [ebp-0x54],ebx
mov    edi,DWORD PTR [ebp-0x1c]
xor    DWORD PTR [ebp-0x54],edi
mov    ebx,DWORD PTR [ebp-0x14]
xor    DWORD PTR [ebp-0x54],ebx
rol    DWORD PTR [ebp-0x54],0x1
mov    edi,DWORD PTR [ebp-0x54]
mov    DWORD PTR ds:0x804cce0,edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0x4c]
mov    DWORD PTR [ebp-0x58],ebx
mov    edi,DWORD PTR [ebp-0x38]
xor    DWORD PTR [ebp-0x58],edi
mov    ebx,DWORD PTR [ebp-0x20]
xor    DWORD PTR [ebp-0x58],ebx
mov    edi,DWORD PTR [ebp-0x18]
xor    DWORD PTR [ebp-0x58],edi
rol    DWORD PTR [ebp-0x58],0x1
mov    edi,DWORD PTR [ebp-0x58]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x4],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0x50]
mov    DWORD PTR [ebp-0x5c],ebx
mov    edi,DWORD PTR [ebp-0x3c]
xor    DWORD PTR [ebp-0x5c],edi
mov    ebx,DWORD PTR [ebp-0x24]
xor    DWORD PTR [ebp-0x5c],ebx
mov    edi,DWORD PTR [ebp-0x1c]
xor    DWORD PTR [ebp-0x5c],edi
rol    DWORD PTR [ebp-0x5c],0x1
mov    edi,DWORD PTR [ebp-0x5c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x8],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0x54]
mov    DWORD PTR [ebp-0x60],ebx
mov    edi,DWORD PTR [ebp-0x40]
xor    DWORD PTR [ebp-0x60],edi
mov    ebx,DWORD PTR [ebp-0x28]
xor    DWORD PTR [ebp-0x60],ebx
mov    edi,DWORD PTR [ebp-0x20]
xor    DWORD PTR [ebp-0x60],edi
rol    DWORD PTR [ebp-0x60],0x1
mov    edi,DWORD PTR [ebp-0x60]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0xc],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0x58]
mov    DWORD PTR [ebp-0x64],ebx
mov    edi,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x64],edi
mov    ebx,DWORD PTR [ebp-0x2c]
xor    DWORD PTR [ebp-0x64],ebx
mov    edi,DWORD PTR [ebp-0x24]
xor    DWORD PTR [ebp-0x64],edi
rol    DWORD PTR [ebp-0x64],0x1
mov    edi,DWORD PTR [ebp-0x64]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x10],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0x5c]
mov    DWORD PTR [ebp-0x68],ebx
mov    edi,DWORD PTR [ebp-0x48]
xor    DWORD PTR [ebp-0x68],edi
mov    ebx,DWORD PTR [ebp-0x30]
xor    DWORD PTR [ebp-0x68],ebx
mov    edi,DWORD PTR [ebp-0x28]
xor    DWORD PTR [ebp-0x68],edi
rol    DWORD PTR [ebp-0x68],0x1
mov    edi,DWORD PTR [ebp-0x68]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x14],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0x60]
mov    DWORD PTR [ebp-0x6c],ebx
mov    edi,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x6c],edi
mov    ebx,DWORD PTR [ebp-0x34]
xor    DWORD PTR [ebp-0x6c],ebx
mov    edi,DWORD PTR [ebp-0x2c]
xor    DWORD PTR [ebp-0x6c],edi
rol    DWORD PTR [ebp-0x6c],0x1
mov    edi,DWORD PTR [ebp-0x6c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x18],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0x64]
mov    DWORD PTR [ebp-0x70],ebx
mov    edi,DWORD PTR [ebp-0x50]
xor    DWORD PTR [ebp-0x70],edi
mov    ebx,DWORD PTR [ebp-0x38]
xor    DWORD PTR [ebp-0x70],ebx
mov    edi,DWORD PTR [ebp-0x30]
xor    DWORD PTR [ebp-0x70],edi
rol    DWORD PTR [ebp-0x70],0x1
mov    edi,DWORD PTR [ebp-0x70]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x1c],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1+0x6ed9eba1]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
or     edx,ecx
and    edx,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x15c]
and    eax,ecx
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x68]
mov    DWORD PTR [ebp-0x74],ebx
mov    edi,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x74],edi
mov    ebx,DWORD PTR [ebp-0x3c]
xor    DWORD PTR [ebp-0x74],ebx
mov    edi,DWORD PTR [ebp-0x34]
xor    DWORD PTR [ebp-0x74],edi
rol    DWORD PTR [ebp-0x74],0x1
mov    edi,DWORD PTR [ebp-0x74]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x20],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
or     edx,DWORD PTR [ebp-0x15c]
and    edx,ecx
mov    eax,esi
and    eax,DWORD PTR [ebp-0x15c]
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x6c]
mov    DWORD PTR [ebp-0x78],ebx
mov    edi,DWORD PTR [ebp-0x58]
xor    DWORD PTR [ebp-0x78],edi
mov    ebx,DWORD PTR [ebp-0x40]
xor    DWORD PTR [ebp-0x78],ebx
mov    edi,DWORD PTR [ebp-0x38]
xor    DWORD PTR [ebp-0x78],edi
rol    DWORD PTR [ebp-0x78],0x1
mov    edi,DWORD PTR [ebp-0x78]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x24],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
or     edx,esi
and    edx,DWORD PTR [ebp-0x15c]
mov    eax,DWORD PTR [ebp-0x8]
and    eax,esi
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x70]
mov    DWORD PTR [ebp-0x7c],ebx
mov    edi,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x7c],edi
mov    ebx,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x7c],ebx
mov    edi,DWORD PTR [ebp-0x3c]
xor    DWORD PTR [ebp-0x7c],edi
rol    DWORD PTR [ebp-0x7c],0x1
mov    edi,DWORD PTR [ebp-0x7c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x28],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
or     edx,DWORD PTR [ebp-0x8]
and    edx,esi
mov    eax,DWORD PTR [ebp-0x4]
and    eax,DWORD PTR [ebp-0x8]
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x74]
mov    DWORD PTR [ebp-0x80],ebx
mov    edi,DWORD PTR [ebp-0x60]
xor    DWORD PTR [ebp-0x80],edi
mov    ebx,DWORD PTR [ebp-0x48]
xor    DWORD PTR [ebp-0x80],ebx
mov    edi,DWORD PTR [ebp-0x40]
xor    DWORD PTR [ebp-0x80],edi
rol    DWORD PTR [ebp-0x80],0x1
mov    edi,DWORD PTR [ebp-0x80]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x2c],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x8]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x4]
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x78]
mov    DWORD PTR [ebp-0x84],ebx
mov    edi,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0x84],edi
mov    ebx,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x84],ebx
mov    edi,DWORD PTR [ebp-0x44]
xor    DWORD PTR [ebp-0x84],edi
rol    DWORD PTR [ebp-0x84],0x1
mov    edi,DWORD PTR [ebp-0x84]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x30],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
or     edx,ecx
and    edx,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x15c]
and    eax,ecx
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x7c]
mov    DWORD PTR [ebp-0x88],ebx
mov    edi,DWORD PTR [ebp-0x68]
xor    DWORD PTR [ebp-0x88],edi
mov    ebx,DWORD PTR [ebp-0x50]
xor    DWORD PTR [ebp-0x88],ebx
mov    edi,DWORD PTR [ebp-0x48]
xor    DWORD PTR [ebp-0x88],edi
rol    DWORD PTR [ebp-0x88],0x1
mov    edi,DWORD PTR [ebp-0x88]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x34],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
or     edx,DWORD PTR [ebp-0x15c]
and    edx,ecx
mov    eax,esi
and    eax,DWORD PTR [ebp-0x15c]
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x80]
mov    DWORD PTR [ebp-0x8c],ebx
mov    edi,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0x8c],edi
mov    ebx,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x8c],ebx
mov    edi,DWORD PTR [ebp-0x4c]
xor    DWORD PTR [ebp-0x8c],edi
rol    DWORD PTR [ebp-0x8c],0x1
mov    edi,DWORD PTR [ebp-0x8c]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x38],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
or     edx,esi
and    edx,DWORD PTR [ebp-0x15c]
mov    eax,DWORD PTR [ebp-0x8]
and    eax,esi
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x84]
mov    DWORD PTR [ebp-0x90],ebx
mov    edi,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0x90],edi
mov    ebx,DWORD PTR [ebp-0x58]
xor    DWORD PTR [ebp-0x90],ebx
mov    edi,DWORD PTR [ebp-0x50]
xor    DWORD PTR [ebp-0x90],edi
rol    DWORD PTR [ebp-0x90],0x1
mov    edi,DWORD PTR [ebp-0x90]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x3c],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
or     edx,DWORD PTR [ebp-0x8]
and    edx,esi
mov    eax,DWORD PTR [ebp-0x4]
and    eax,DWORD PTR [ebp-0x8]
or     edx,eax
mov    ebx,DWORD PTR [ebp-0x88]
mov    DWORD PTR [ebp-0x94],ebx
mov    edi,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0x94],edi
mov    ebx,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x94],ebx
mov    edi,DWORD PTR [ebp-0x54]
xor    DWORD PTR [ebp-0x94],edi
rol    DWORD PTR [ebp-0x94],0x1
mov    ebx,DWORD PTR [ebp-0x94]
mov    DWORD PTR ds:0x804cce0,ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x8]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x4]
or     edx,eax
mov    edi,DWORD PTR [ebp-0x8c]
mov    DWORD PTR [ebp-0x98],edi
mov    ebx,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0x98],ebx
mov    edi,DWORD PTR [ebp-0x60]
xor    DWORD PTR [ebp-0x98],edi
mov    ebx,DWORD PTR [ebp-0x58]
xor    DWORD PTR [ebp-0x98],ebx
rol    DWORD PTR [ebp-0x98],0x1
mov    ebx,DWORD PTR [ebp-0x98]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x4],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
or     edx,ecx
and    edx,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x15c]
and    eax,ecx
or     edx,eax
mov    edi,DWORD PTR [ebp-0x90]
mov    DWORD PTR [ebp-0x9c],edi
mov    ebx,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0x9c],ebx
mov    edi,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0x9c],edi
mov    ebx,DWORD PTR [ebp-0x5c]
xor    DWORD PTR [ebp-0x9c],ebx
rol    DWORD PTR [ebp-0x9c],0x1
mov    ebx,DWORD PTR [ebp-0x9c]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x8],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
or     edx,DWORD PTR [ebp-0x15c]
and    edx,ecx
mov    eax,esi
and    eax,DWORD PTR [ebp-0x15c]
or     edx,eax
mov    edi,DWORD PTR [ebp-0x94]
mov    DWORD PTR [ebp-0xa0],edi
mov    ebx,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0xa0],ebx
mov    edi,DWORD PTR [ebp-0x68]
xor    DWORD PTR [ebp-0xa0],edi
mov    ebx,DWORD PTR [ebp-0x60]
xor    DWORD PTR [ebp-0xa0],ebx
rol    DWORD PTR [ebp-0xa0],0x1
mov    ebx,DWORD PTR [ebp-0xa0]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0xc],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
or     edx,esi
and    edx,DWORD PTR [ebp-0x15c]
mov    eax,DWORD PTR [ebp-0x8]
and    eax,esi
or     edx,eax
mov    edi,DWORD PTR [ebp-0x98]
mov    DWORD PTR [ebp-0xa4],edi
mov    ebx,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xa4],ebx
mov    edi,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0xa4],edi
mov    ebx,DWORD PTR [ebp-0x64]
xor    DWORD PTR [ebp-0xa4],ebx
rol    DWORD PTR [ebp-0xa4],0x1
mov    ebx,DWORD PTR [ebp-0xa4]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x10],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
or     edx,DWORD PTR [ebp-0x8]
and    edx,esi
mov    eax,DWORD PTR [ebp-0x4]
and    eax,DWORD PTR [ebp-0x8]
or     edx,eax
mov    edi,DWORD PTR [ebp-0x9c]
mov    DWORD PTR [ebp-0xa8],edi
mov    ebx,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0xa8],ebx
mov    edi,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0xa8],edi
mov    ebx,DWORD PTR [ebp-0x68]
xor    DWORD PTR [ebp-0xa8],ebx
rol    DWORD PTR [ebp-0xa8],0x1
mov    ebx,DWORD PTR [ebp-0xa8]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x14],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x8]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x4]
or     edx,eax
mov    edi,DWORD PTR [ebp-0xa0]
mov    DWORD PTR [ebp-0xac],edi
mov    ebx,DWORD PTR [ebp-0x8c]
xor    DWORD PTR [ebp-0xac],ebx
mov    edi,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0xac],edi
mov    ebx,DWORD PTR [ebp-0x6c]
xor    DWORD PTR [ebp-0xac],ebx
rol    DWORD PTR [ebp-0xac],0x1
mov    ebx,DWORD PTR [ebp-0xac]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x18],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
or     edx,ecx
and    edx,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp-0x15c]
and    eax,ecx
or     edx,eax
mov    edi,DWORD PTR [ebp-0xa4]
mov    DWORD PTR [ebp-0xb0],edi
mov    ebx,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xb0],ebx
mov    edi,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0xb0],edi
mov    ebx,DWORD PTR [ebp-0x70]
xor    DWORD PTR [ebp-0xb0],ebx
rol    DWORD PTR [ebp-0xb0],0x1
mov    ebx,DWORD PTR [ebp-0xb0]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x1c],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
or     edx,DWORD PTR [ebp-0x15c]
and    edx,ecx
mov    eax,esi
and    eax,DWORD PTR [ebp-0x15c]
or     edx,eax
mov    edi,DWORD PTR [ebp-0xa8]
mov    DWORD PTR [ebp-0xb4],edi
mov    ebx,DWORD PTR [ebp-0x94]
xor    DWORD PTR [ebp-0xb4],ebx
mov    edi,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0xb4],edi
mov    ebx,DWORD PTR [ebp-0x74]
xor    DWORD PTR [ebp-0xb4],ebx
rol    DWORD PTR [ebp-0xb4],0x1
mov    ebx,DWORD PTR [ebp-0xb4]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x20],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
or     edx,esi
and    edx,DWORD PTR [ebp-0x15c]
mov    eax,DWORD PTR [ebp-0x8]
and    eax,esi
or     edx,eax
mov    edi,DWORD PTR [ebp-0xac]
mov    DWORD PTR [ebp-0xb8],edi
mov    ebx,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xb8],ebx
mov    edi,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0xb8],edi
mov    ebx,DWORD PTR [ebp-0x78]
xor    DWORD PTR [ebp-0xb8],ebx
rol    DWORD PTR [ebp-0xb8],0x1
mov    ebx,DWORD PTR [ebp-0xb8]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x24],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
or     edx,DWORD PTR [ebp-0x8]
and    edx,esi
mov    eax,DWORD PTR [ebp-0x4]
and    eax,DWORD PTR [ebp-0x8]
or     edx,eax
mov    edi,DWORD PTR [ebp-0xb0]
mov    DWORD PTR [ebp-0xbc],edi
mov    ebx,DWORD PTR [ebp-0x9c]
xor    DWORD PTR [ebp-0xbc],ebx
mov    edi,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xbc],edi
mov    ebx,DWORD PTR [ebp-0x7c]
xor    DWORD PTR [ebp-0xbc],ebx
rol    DWORD PTR [ebp-0xbc],0x1
mov    ebx,DWORD PTR [ebp-0xbc]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x28],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
or     edx,DWORD PTR [ebp-0x4]
and    edx,DWORD PTR [ebp-0x8]
mov    eax,ecx
and    eax,DWORD PTR [ebp-0x4]
or     edx,eax
mov    edi,DWORD PTR [ebp-0xb4]
mov    DWORD PTR [ebp-0x158],edi
mov    ebx,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0x158],ebx
mov    edi,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0x158],edi
mov    ebx,DWORD PTR [ebp-0x80]
xor    DWORD PTR [ebp-0x158],ebx
rol    DWORD PTR [ebp-0x158],0x1
mov    ebx,DWORD PTR [ebp-0x158]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x2c],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x70e44324]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    edi,DWORD PTR [ebp-0xb8]
mov    DWORD PTR [ebp-0xc0],edi
mov    DWORD PTR [ebp-0xc4],edi
mov    ebx,DWORD PTR [ebp-0xa4]
xor    DWORD PTR [ebp-0xc4],ebx
mov    edi,DWORD PTR [ebp-0x8c]
xor    DWORD PTR [ebp-0xc4],edi
mov    ebx,DWORD PTR [ebp-0x84]
xor    DWORD PTR [ebp-0xc4],ebx
rol    DWORD PTR [ebp-0xc4],0x1
mov    ebx,DWORD PTR [ebp-0xc4]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x30],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    edi,DWORD PTR [ebp-0xbc]
mov    DWORD PTR [ebp-0xc8],edi
mov    DWORD PTR [ebp-0xcc],edi
mov    ebx,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xcc],ebx
mov    edi,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xcc],edi
mov    ebx,DWORD PTR [ebp-0x88]
xor    DWORD PTR [ebp-0xcc],ebx
rol    DWORD PTR [ebp-0xcc],0x1
mov    ebx,DWORD PTR [ebp-0xcc]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x34],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    edi,DWORD PTR [ebp-0x158]
mov    DWORD PTR [ebp-0xd0],edi
mov    DWORD PTR [ebp-0xd4],edi
mov    ebx,DWORD PTR [ebp-0xac]
xor    DWORD PTR [ebp-0xd4],ebx
mov    edi,DWORD PTR [ebp-0x94]
xor    DWORD PTR [ebp-0xd4],edi
mov    ebx,DWORD PTR [ebp-0x8c]
xor    DWORD PTR [ebp-0xd4],ebx
rol    DWORD PTR [ebp-0xd4],0x1
mov    ebx,DWORD PTR [ebp-0xd4]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x38],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    edi,DWORD PTR [ebp-0xc4]
mov    DWORD PTR [ebp-0xd8],edi
mov    ebx,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xd8],ebx
mov    edi,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xd8],edi
mov    ebx,DWORD PTR [ebp-0x90]
xor    DWORD PTR [ebp-0xd8],ebx
rol    DWORD PTR [ebp-0xd8],0x1
mov    ebx,DWORD PTR [ebp-0xd8]
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x3c],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ebp-0xcc]
mov    DWORD PTR [ebp-0xdc],edi
mov    ebx,DWORD PTR [ebp-0xb4]
xor    DWORD PTR [ebp-0xdc],ebx
mov    edi,DWORD PTR [ebp-0x9c]
xor    DWORD PTR [ebp-0xdc],edi
mov    ebx,DWORD PTR [ebp-0x94]
xor    DWORD PTR [ebp-0xdc],ebx
rol    DWORD PTR [ebp-0xdc],0x1
mov    edi,DWORD PTR [ebp-0xdc]
mov    DWORD PTR ds:0x804cce0,edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0xd4]
mov    DWORD PTR [ebp-0xe0],ebx
mov    edi,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0xe0],edi
mov    ebx,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0xe0],ebx
mov    edi,DWORD PTR [ebp-0x98]
xor    DWORD PTR [ebp-0xe0],edi
rol    DWORD PTR [ebp-0xe0],0x1
mov    edi,DWORD PTR [ebp-0xe0]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x4],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0xd8]
mov    DWORD PTR [ebp-0xe4],ebx
mov    edi,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0xe4],edi
mov    ebx,DWORD PTR [ebp-0xa4]
xor    DWORD PTR [ebp-0xe4],ebx
mov    edi,DWORD PTR [ebp-0x9c]
xor    DWORD PTR [ebp-0xe4],edi
rol    DWORD PTR [ebp-0xe4],0x1
mov    edi,DWORD PTR [ebp-0xe4]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x8],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0xdc]
mov    DWORD PTR [ebp-0xe8],ebx
mov    edi,DWORD PTR [ebp-0xd0]
xor    DWORD PTR [ebp-0xe8],edi
mov    ebx,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xe8],ebx
mov    edi,DWORD PTR [ebp-0xa0]
xor    DWORD PTR [ebp-0xe8],edi
rol    DWORD PTR [ebp-0xe8],0x1
mov    edi,DWORD PTR [ebp-0xe8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0xc],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0xe0]
mov    DWORD PTR [ebp-0xec],ebx
mov    edi,DWORD PTR [ebp-0xc4]
xor    DWORD PTR [ebp-0xec],edi
mov    ebx,DWORD PTR [ebp-0xac]
xor    DWORD PTR [ebp-0xec],ebx
mov    edi,DWORD PTR [ebp-0xa4]
xor    DWORD PTR [ebp-0xec],edi
rol    DWORD PTR [ebp-0xec],0x1
mov    edi,DWORD PTR [ebp-0xec]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x10],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xe4]
mov    DWORD PTR [ebp-0xf0],ebx
mov    edi,DWORD PTR [ebp-0xcc]
xor    DWORD PTR [ebp-0xf0],edi
mov    ebx,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xf0],ebx
mov    edi,DWORD PTR [ebp-0xa8]
xor    DWORD PTR [ebp-0xf0],edi
rol    DWORD PTR [ebp-0xf0],0x1
mov    edi,DWORD PTR [ebp-0xf0]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x14],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0xe8]
mov    DWORD PTR [ebp-0xf4],ebx
mov    edi,DWORD PTR [ebp-0xd4]
xor    DWORD PTR [ebp-0xf4],edi
mov    ebx,DWORD PTR [ebp-0xb4]
xor    DWORD PTR [ebp-0xf4],ebx
mov    edi,DWORD PTR [ebp-0xac]
xor    DWORD PTR [ebp-0xf4],edi
rol    DWORD PTR [ebp-0xf4],0x1
mov    edi,DWORD PTR [ebp-0xf4]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x18],edi
add    edx,edi
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0xec]
mov    DWORD PTR [ebp-0xf8],ebx
mov    edi,DWORD PTR [ebp-0xd8]
xor    DWORD PTR [ebp-0xf8],edi
mov    ebx,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0xf8],ebx
mov    edi,DWORD PTR [ebp-0xb0]
xor    DWORD PTR [ebp-0xf8],edi
rol    DWORD PTR [ebp-0xf8],0x1
mov    edi,DWORD PTR [ebp-0xf8]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x1c],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0xf0]
mov    DWORD PTR [ebp-0xfc],ebx
mov    edi,DWORD PTR [ebp-0xdc]
xor    DWORD PTR [ebp-0xfc],edi
mov    ebx,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0xfc],ebx
mov    edi,DWORD PTR [ebp-0xb4]
xor    DWORD PTR [ebp-0xfc],edi
rol    DWORD PTR [ebp-0xfc],0x1
mov    edi,DWORD PTR [ebp-0xfc]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x20],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0xf4]
mov    DWORD PTR [ebp-0x100],ebx
mov    edi,DWORD PTR [ebp-0xe0]
xor    DWORD PTR [ebp-0x100],edi
mov    ebx,DWORD PTR [ebp-0xd0]
xor    DWORD PTR [ebp-0x100],ebx
mov    edi,DWORD PTR [ebp-0xc0]
xor    DWORD PTR [ebp-0x100],edi
rol    DWORD PTR [ebp-0x100],0x1
mov    edi,DWORD PTR [ebp-0x100]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x24],edi
add    edx,edi
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0xf8]
mov    DWORD PTR [ebp-0x104],ebx
mov    edi,DWORD PTR [ebp-0xe4]
xor    DWORD PTR [ebp-0x104],edi
mov    ebx,DWORD PTR [ebp-0xc4]
xor    DWORD PTR [ebp-0x104],ebx
mov    edi,DWORD PTR [ebp-0xc8]
xor    DWORD PTR [ebp-0x104],edi
rol    DWORD PTR [ebp-0x104],0x1
mov    edi,DWORD PTR [ebp-0x104]
mov    ebx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebx+0x28],edi
add    edx,edi
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    esi,eax
rol    ecx,0x1e
mov    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0xfc]
xor    ebx,DWORD PTR [ebp-0xe8]
mov    edi,DWORD PTR [ebp-0xcc]
xor    ebx,edi
mov    edi,DWORD PTR [ebp-0xd0]
xor    ebx,edi
rol    ebx,0x1
mov    DWORD PTR [ebp-0x108],ebx
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x2c],ebx
add    edx,ebx
mov    eax,esi
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x8],eax
rol    DWORD PTR [ebp-0x15c],0x1e
mov    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
xor    edx,ecx
mov    ebx,DWORD PTR [ebp-0x100]
xor    ebx,DWORD PTR [ebp-0xec]
mov    edi,DWORD PTR [ebp-0xd4]
xor    ebx,edi
mov    edi,DWORD PTR [ebp-0xc4]
xor    ebx,edi
rol    ebx,0x1
mov    DWORD PTR [ebp-0x10c],ebx
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x30],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x8]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x4],eax
rol    esi,0x1e
mov    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
xor    edx,DWORD PTR [ebp-0x15c]
mov    ebx,DWORD PTR [ebp-0x104]
xor    ebx,DWORD PTR [ebp-0xf0]
mov    edi,DWORD PTR [ebp-0xd8]
xor    ebx,edi
mov    edi,DWORD PTR [ebp-0xcc]
xor    ebx,edi
rol    ebx,0x1
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x34],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x4]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    ecx,eax
rol    DWORD PTR [ebp-0x8],0x1e
mov    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
xor    edx,esi
mov    ebx,DWORD PTR [ebp-0x108]
xor    ebx,DWORD PTR [ebp-0xf4]
mov    edi,DWORD PTR [ebp-0xdc]
xor    ebx,edi
mov    edi,DWORD PTR [ebp-0xd4]
xor    ebx,edi
rol    ebx,0x1
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x38],ebx
add    edx,ebx
mov    eax,ecx
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    DWORD PTR [ebp-0x15c],eax
rol    DWORD PTR [ebp-0x4],0x1e
mov    edx,ecx
xor    edx,DWORD PTR [ebp-0x4]
xor    edx,DWORD PTR [ebp-0x8]
mov    ebx,DWORD PTR [ebp-0x10c]
xor    ebx,DWORD PTR [ebp-0xf8]
mov    edi,DWORD PTR [ebp-0xe0]
xor    ebx,edi
mov    edi,DWORD PTR [ebp-0xd8]
xor    ebx,edi
rol    ebx,0x1
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edi+0x3c],ebx
add    edx,ebx
mov    eax,DWORD PTR [ebp-0x15c]
rol    eax,0x5
lea    eax,[edx+eax*1-0x359d3e2a]
add    esi,eax
rol    ecx,0x1e
mov    ebx,DWORD PTR [ebp+0x8]
add    DWORD PTR [ebx],esi
mov    edi,DWORD PTR [ebp-0x15c]
add    DWORD PTR [ebx+0x4],edi
add    DWORD PTR [ebx+0x8],ecx
mov    edi,DWORD PTR [ebp-0x4]
add    DWORD PTR [ebx+0xc],edi
mov    edi,DWORD PTR [ebp-0x8]
add    DWORD PTR [ebx+0x10],edi
lea    esp,[ebp-0x168]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax],0x67452301
mov    DWORD PTR [eax+0x4],0xefcdab89
mov    DWORD PTR [eax+0x8],0x98badcfe
mov    DWORD PTR [eax+0xc],0x10325476
mov    DWORD PTR [eax+0x10],0xc3d2e1f0
mov    DWORD PTR [eax+0x18],0x0
mov    DWORD PTR [eax+0x14],0x0
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [esi+0x14]
mov    edi,eax
shr    edi,0x3
and    edi,0x3f
lea    edx,[ebx*8+0x0]
add    eax,edx
mov    DWORD PTR [esi+0x14],eax
cmp    eax,edx
jae    804b1d9 <strcpy@plt+0x2621>
inc    DWORD PTR [esi+0x18]
mov    ecx,ebx
shr    ecx,0x1d
mov    esi,DWORD PTR [ebp+0x8]
add    DWORD PTR [esi+0x18],ecx
lea    eax,[ebx+edi*1]
cmp    eax,0x3f
jbe    804b240 <strcpy@plt+0x2688>
mov    DWORD PTR [ebp-0x4],0x40
sub    DWORD PTR [ebp-0x4],edi
lea    edi,[esi+edi*1+0x1c]
mov    ecx,DWORD PTR [ebp-0x4]
mov    esi,DWORD PTR [ebp+0xc]
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x1c
push   eax
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8049860 <strcpy@plt+0xca8>
add    esp,0x8
jmp    804b22e <strcpy@plt+0x2676>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,DWORD PTR [ebp-0x4]
push   eax
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8049860 <strcpy@plt+0xca8>
add    esp,0x8
add    DWORD PTR [ebp-0x4],0x40
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0x3f
cmp    eax,ebx
jb     804b217 <strcpy@plt+0x265f>
xor    edi,edi
jmp    804b247 <strcpy@plt+0x268f>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x4],0x0
sub    ebx,DWORD PTR [ebp-0x4]
mov    esi,DWORD PTR [ebp+0x8]
lea    edi,[esi+edi*1+0x1c]
mov    eax,DWORD PTR [ebp-0x4]
add    eax,DWORD PTR [ebp+0xc]
mov    ecx,ebx
mov    esi,eax
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
xor    ebx,ebx
lea    eax,[ebp-0x8]
mov    DWORD PTR [ebp-0x10],eax
mov    ecx,DWORD PTR [ebp+0xc]
add    ecx,0x14
mov    DWORD PTR [ebp-0xc],ecx
mov    DWORD PTR [ebp-0x1c],ecx
cmp    ebx,0x3
ja     804b291 <strcpy@plt+0x26d9>
mov    esi,0x4
jmp    804b293 <strcpy@plt+0x26db>
xor    esi,esi
mov    DWORD PTR [ebp-0x14],ebx
and    DWORD PTR [ebp-0x14],0x3
mov    edx,0x3
sub    edx,DWORD PTR [ebp-0x14]
shl    edx,0x3
mov    ecx,DWORD PTR [ebp-0x1c]
mov    esi,DWORD PTR [esi+ecx*1]
mov    ecx,edx
shr    esi,cl
mov    DWORD PTR [ebp-0x14],esi
mov    al,BYTE PTR [ebp-0x14]
mov    ecx,DWORD PTR [ebp-0x10]
mov    BYTE PTR [ebx+ecx*1],al
inc    ebx
cmp    ebx,0x7
jbe    804b285 <strcpy@plt+0x26cd>
push   0x1
push   0x804baf0
mov    edi,DWORD PTR [ebp+0xc]
push   edi
call   804b1ac <strcpy@plt+0x25f4>
add    esp,0xc
jmp    804b2ec <strcpy@plt+0x2734>
push   0x1
push   0x804baf2
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
call   804b1ac <strcpy@plt+0x25f4>
add    esp,0xc
mov    edi,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edi+0x14]
and    eax,0x1f8
cmp    eax,0x1c0
jne    804b2d6 <strcpy@plt+0x271e>
push   0x8
mov    ecx,DWORD PTR [ebp-0x10]
push   ecx
mov    edi,DWORD PTR [ebp+0xc]
push   edi
call   804b1ac <strcpy@plt+0x25f4>
xor    ebx,ebx
add    esp,0xc
mov    esi,0x3
mov    DWORD PTR [ebp-0x18],ebx
and    BYTE PTR [ebp-0x18],0xfc
mov    edx,ebx
and    edx,0x3
mov    DWORD PTR [ebp-0x14],esi
sub    DWORD PTR [ebp-0x14],edx
mov    eax,DWORD PTR [ebp-0x14]
lea    edx,[eax*8+0x0]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp-0x18]
mov    eax,DWORD PTR [edi+ecx*1]
mov    ecx,edx
shr    eax,cl
mov    DWORD PTR [ebp-0x14],eax
mov    cl,BYTE PTR [ebp-0x14]
mov    edi,DWORD PTR [ebp+0x8]
mov    BYTE PTR [ebx+edi*1],cl
inc    ebx
cmp    ebx,0x13
jbe    804b314 <strcpy@plt+0x275c>
mov    esi,DWORD PTR [ebp+0xc]
add    esi,0x1c
mov    ecx,0x40
mov    edi,esi
xor    eax,eax
rep stos BYTE PTR es:[edi],al
mov    ecx,0x14
mov    edi,DWORD PTR [ebp+0xc]
rep stos BYTE PTR es:[edi],al
mov    ecx,0x8
mov    edi,DWORD PTR [ebp-0xc]
rep stos BYTE PTR es:[edi],al
mov    ecx,0x8
mov    edi,DWORD PTR [ebp-0x10]
rep stos BYTE PTR es:[edi],al
push   esi
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   8049860 <strcpy@plt+0xca8>
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x5c
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
lea    ebx,[ebp-0x5c]
push   ebx
call   804b174 <strcpy@plt+0x25bc>
push   esi
push   edi
push   ebx
call   804b1ac <strcpy@plt+0x25f4>
push   ebx
mov    eax,DWORD PTR [ebp+0x10]
push   eax
call   804b268 <strcpy@plt+0x26b0>
lea    esp,[ebp-0x68]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
push   ebx
push   0x14
push   DWORD PTR [ebp+0x10]
call   804b390 <strcpy@plt+0x27d8>
mov    WORD PTR [ebx+0x14],si
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,0x14
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,edx
rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
mov    DWORD PTR [edx+0x14],0x0
lea    esp,[ebp-0x8]
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [ebp+0x10],0x0
je     804b460 <strcpy@plt+0x28a8>
mov    cl,BYTE PTR [edi]
mov    edx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [edx+esi*1]
mov    BYTE PTR [ebp-0x1],cl
xor    BYTE PTR [ebp-0x1],al
add    al,cl
mov    BYTE PTR [edx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
lea    ebx,[eax+0x1]
mov    DWORD PTR [esi+0x14],ebx
cmp    eax,0x13
jne    804b455 <strcpy@plt+0x289d>
push   esi
push   0x14
push   esi
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [esi+0x14],0x0
add    esp,0xc
mov    bl,BYTE PTR [ebp-0x1]
mov    BYTE PTR [edi],bl
inc    edi
dec    DWORD PTR [ebp+0x10]
jne    804b421 <strcpy@plt+0x2869>
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [ebp+0x10],0x0
je     804b4b8 <strcpy@plt+0x2900>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [edx+esi*1]
mov    bl,al
xor    bl,BYTE PTR [edi]
add    al,bl
mov    BYTE PTR [edx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
lea    ecx,[eax+0x1]
mov    DWORD PTR [esi+0x14],ecx
cmp    eax,0x13
jne    804b4b0 <strcpy@plt+0x28f8>
push   esi
push   0x14
push   esi
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [esi+0x14],0x0
add    esp,0xc
mov    BYTE PTR [edi],bl
inc    edi
dec    DWORD PTR [ebp+0x10]
jne    804b480 <strcpy@plt+0x28c8>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x14]
xor    edi,edi
cmp    edi,DWORD PTR [ebp+0x10]
jge    804b549 <strcpy@plt+0x2991>
lea    edx,[ebp-0x1]
mov    DWORD PTR [ebp-0x8],edx
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebp+0xc]
mov    cl,BYTE PTR [ecx]
mov    ebx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [ebx+esi*1]
mov    BYTE PTR [ebp-0x9],cl
xor    BYTE PTR [ebp-0x9],al
add    al,cl
mov    BYTE PTR [ebx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
lea    edx,[eax+0x1]
mov    DWORD PTR [esi+0x14],edx
cmp    eax,0x13
jne    804b517 <strcpy@plt+0x295f>
push   esi
push   0x14
push   esi
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [esi+0x14],0x0
add    esp,0xc
mov    cl,BYTE PTR [ebp-0x9]
mov    BYTE PTR [ebp-0x1],cl
mov    eax,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp-0x8]
mov    edx,0x1
int    0x80
test   eax,eax
jge    804b540 <strcpy@plt+0x2988>
mov    eax,0xffffffff
jmp    804b54b <strcpy@plt+0x2993>
lea    esi,[esi+0x0]
inc    edi
inc    DWORD PTR [ebp+0xc]
cmp    edi,DWORD PTR [ebp+0x10]
jl     804b4e0 <strcpy@plt+0x2928>
mov    eax,edi
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x14]
xor    edi,edi
cmp    edi,DWORD PTR [ebp+0x10]
jge    804b5d8 <strcpy@plt+0x2a20>
lea    edx,[ebp-0x1]
mov    DWORD PTR [ebp-0x8],edx
lea    esi,[esi+0x0]
mov    eax,0x3
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp-0x8]
mov    edx,0x1
int    0x80
test   eax,eax
jge    804b590 <strcpy@plt+0x29d8>
mov    eax,0xffffffff
jmp    804b5da <strcpy@plt+0x2a22>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [esi+0x14]
mov    al,BYTE PTR [edx+esi*1]
mov    BYTE PTR [ebp-0x9],al
mov    cl,BYTE PTR [ebp-0x1]
xor    BYTE PTR [ebp-0x9],cl
add    al,BYTE PTR [ebp-0x9]
mov    BYTE PTR [edx+esi*1],al
mov    eax,DWORD PTR [esi+0x14]
lea    ebx,[eax+0x1]
mov    DWORD PTR [esi+0x14],ebx
cmp    eax,0x13
jne    804b5c6 <strcpy@plt+0x2a0e>
push   esi
push   0x14
push   esi
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [esi+0x14],0x0
add    esp,0xc
mov    dl,BYTE PTR [ebp-0x9]
mov    ecx,DWORD PTR [ebp+0xc]
mov    BYTE PTR [ecx],dl
inc    edi
inc    ecx
mov    DWORD PTR [ebp+0xc],ecx
cmp    edi,DWORD PTR [ebp+0x10]
jl     804b570 <strcpy@plt+0x29b8>
mov    eax,edi
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    cl,BYTE PTR [ebp+0xc]
mov    edx,DWORD PTR [ebx+0x14]
mov    al,BYTE PTR [edx+ebx*1]
mov    BYTE PTR [ebp-0x1],cl
xor    BYTE PTR [ebp-0x1],al
add    al,cl
mov    BYTE PTR [edx+ebx*1],al
mov    eax,DWORD PTR [ebx+0x14]
lea    esi,[eax+0x1]
mov    DWORD PTR [ebx+0x14],esi
cmp    eax,0x13
jne    804b621 <strcpy@plt+0x2a69>
push   ebx
push   0x14
push   ebx
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [ebx+0x14],0x0
movzx  eax,BYTE PTR [ebp-0x1]
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebx+0x14]
mov    al,BYTE PTR [edx+ebx*1]
mov    BYTE PTR [ebp-0x1],al
mov    cl,BYTE PTR [ebp+0xc]
xor    BYTE PTR [ebp-0x1],cl
add    al,BYTE PTR [ebp-0x1]
mov    BYTE PTR [edx+ebx*1],al
mov    eax,DWORD PTR [ebx+0x14]
lea    ecx,[eax+0x1]
mov    DWORD PTR [ebx+0x14],ecx
cmp    eax,0x13
jne    804b669 <strcpy@plt+0x2ab1>
push   ebx
push   0x14
push   ebx
call   804b390 <strcpy@plt+0x27d8>
mov    DWORD PTR [ebx+0x14],0x0
movzx  eax,BYTE PTR [ebp-0x1]
mov    ebx,DWORD PTR [ebp-0x8]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x804cb34
cmp    DWORD PTR ds:0x804cb34,0xffffffff
je     804b69e <strcpy@plt+0x2ae6>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    804b692 <strcpy@plt+0x2ada>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   804b6b5 <strcpy@plt+0x2afd>
pop    ebx
add    ebx,0x148f
call   8048c00 <strcpy@plt+0x48>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
