push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
call   80483a4 <_init+0xc>
pop    ebx
add    ebx,0x15b4
mov    edx,DWORD PTR [ebx-0x4]
test   edx,edx
je     80483ba <_init+0x22>
call   80483d8 <__gmon_start__@plt>
call   80484e0 <frame_dummy>
call   80487b0 <__do_global_ctors_aux>
pop    eax
pop    ebx
leave  
ret    
push   DWORD PTR ds:0x804995c
jmp    DWORD PTR ds:0x8049960
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049964
push   0x0
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049968
push   0x8
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x804996c
push   0x10
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049970
push   0x18
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049974
push   0x20
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049978
push   0x28
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x804997c
push   0x30
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049980
push   0x38
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049984
push   0x40
jmp    80483c8 <.plt>
jmp    DWORD PTR ds:0x8049988
push   0x48
jmp    80483c8 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x8048740
push   0x8048750
push   ecx
push   esi
push   0x8048504
call   80483f8 <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    BYTE PTR ds:0x8049998,0x0
je     80484cb <__do_global_dtors_aux+0x1b>
jmp    80484dd <__do_global_dtors_aux+0x2d>
add    eax,0x4
mov    ds:0x8049994,eax
call   edx
mov    eax,ds:0x8049994
mov    edx,DWORD PTR [eax]
test   edx,edx
jne    80484c1 <__do_global_dtors_aux+0x11>
mov    BYTE PTR ds:0x8049998,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x8049880
test   eax,eax
je     8048501 <frame_dummy+0x21>
mov    eax,0x0
test   eax,eax
je     8048501 <frame_dummy+0x21>
mov    DWORD PTR [esp],0x8049880
call   eax
leave  
ret    
nop
lea    ecx,[esp+0x4]
and    esp,0xfffffff0
push   DWORD PTR [ecx-0x4]
push   ebp
mov    ebp,esp
push   ecx
sub    esp,0x34
call   8048438 <getuid@plt>
test   eax,eax
je     804853d <main+0x39>
call   8048458 <getgid@plt>
test   eax,eax
je     804853d <main+0x39>
call   8048468 <geteuid@plt>
test   eax,eax
je     804853d <main+0x39>
call   8048428 <getegid@plt>
test   eax,eax
jne    804870f <main+0x20b>
mov    DWORD PTR [ebp-0x8],0x1
jmp    8048705 <main+0x201>
mov    DWORD PTR [esp+0x4],0x8048800
mov    DWORD PTR [esp],0x8048802
call   8048418 <fopen@plt>
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [esp+0x8],0x804880d
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    DWORD PTR [esp+0x8],0x8048820
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [esp],eax
call   8048408 <fclose@plt>
mov    DWORD PTR [esp+0x4],0x8048800
mov    DWORD PTR [esp],0x8048831
call   8048418 <fopen@plt>
mov    DWORD PTR [ebp-0x18],eax
mov    DWORD PTR [esp+0x8],0x804880d
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    DWORD PTR [esp+0x8],0x8048820
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0x18]
mov    DWORD PTR [esp],eax
call   8048408 <fclose@plt>
mov    DWORD PTR [esp+0x4],0x8048800
mov    DWORD PTR [esp],0x804883c
call   8048418 <fopen@plt>
mov    DWORD PTR [ebp-0x14],eax
mov    DWORD PTR [esp+0x8],0x804880d
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    DWORD PTR [esp+0x8],0x8048820
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [esp],eax
call   8048408 <fclose@plt>
mov    DWORD PTR [esp+0x4],0x8048800
mov    DWORD PTR [esp],0x8048847
call   8048418 <fopen@plt>
mov    DWORD PTR [ebp-0x10],eax
mov    DWORD PTR [esp+0x8],0x804880d
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    DWORD PTR [esp+0x8],0x8048820
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [esp],eax
call   8048408 <fclose@plt>
mov    DWORD PTR [esp+0x4],0x8048800
mov    DWORD PTR [esp],0x8048852
call   8048418 <fopen@plt>
mov    DWORD PTR [ebp-0xc],eax
mov    DWORD PTR [esp+0x8],0x804880d
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    DWORD PTR [esp+0x8],0x8048820
mov    DWORD PTR [esp+0x4],0x804881c
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [esp],eax
call   8048448 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [esp],eax
call   8048408 <fclose@plt>
add    DWORD PTR [ebp-0x8],0x1
cmp    DWORD PTR [ebp-0x8],0x32
jle    8048549 <main+0x45>
mov    DWORD PTR [ebp-0x8],0x1
jmp    8048728 <main+0x224>
mov    DWORD PTR [esp],0x804885d
call   80483e8 <system@plt>
add    DWORD PTR [ebp-0x8],0x1
cmp    DWORD PTR [ebp-0x8],0xc350
jle    8048718 <main+0x214>
mov    eax,0x0
add    esp,0x34
pop    ecx
pop    ebp
lea    esp,[ecx-0x4]
ret    
nop
push   ebp
mov    ebp,esp
pop    ebp
ret    
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
call   80487aa <__i686.get_pc_thunk.bx>
add    ebx,0x11fd
sub    esp,0xc
call   8048398 <_init>
lea    edi,[ebx-0xe8]
lea    eax,[ebx-0xe8]
sub    edi,eax
sar    edi,0x2
test   edi,edi
je     80487a2 <__libc_csu_init+0x52>
xor    esi,esi
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [esp+0x8],eax
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [esp+0x4],eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [esp],eax
call   DWORD PTR [ebx+esi*4-0xe8]
add    esi,0x1
cmp    edi,esi
jne    8048780 <__libc_csu_init+0x30>
add    esp,0xc
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
mov    ebx,DWORD PTR [esp]
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x8049870
cmp    eax,0xffffffff
je     80487d3 <__do_global_ctors_aux+0x23>
xor    ebx,ebx
call   eax
mov    eax,DWORD PTR [ebx+0x804986c]
sub    ebx,0x4
cmp    eax,0xffffffff
jne    80487c3 <__do_global_ctors_aux+0x13>
add    esp,0x4
pop    ebx
pop    ebp
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
call   80487e8 <_fini+0xc>
pop    ebx
add    ebx,0x1170
call   80484b0 <__do_global_dtors_aux>
pop    ecx
pop    ebx
leave  
ret    
