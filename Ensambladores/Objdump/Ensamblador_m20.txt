push   ebp
mov    ebp,esp
sub    esp,0x8
call   8048bb4 <(null)>
nop
call   8048c50 <(null)>
call   804a950 <(null)>
leave  
ret    
push   DWORD PTR ds:0x804b1c0
jmp    DWORD PTR ds:0x804b1c4
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804b1c8
push   0x0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1cc
push   0x8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1d0
push   0x10
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1d4
push   0x18
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1d8
push   0x20
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1dc
push   0x28
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1e0
push   0x30
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1e4
push   0x38
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1e8
push   0x40
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1ec
push   0x48
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1f0
push   0x50
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1f4
push   0x58
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1f8
push   0x60
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b1fc
push   0x68
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b200
push   0x70
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b204
push   0x78
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b208
push   0x80
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b20c
push   0x88
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b210
push   0x90
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b214
push   0x98
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b218
push   0xa0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b21c
push   0xa8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b220
push   0xb0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b224
push   0xb8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b228
push   0xc0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b22c
push   0xc8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b230
push   0xd0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b234
push   0xd8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b238
push   0xe0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b23c
push   0xe8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b240
push   0xf0
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b244
push   0xf8
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b248
push   0x100
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b24c
push   0x108
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b250
push   0x110
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b254
push   0x118
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b258
push   0x120
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b25c
push   0x128
jmp    8048910 <.plt>
jmp    DWORD PTR ds:0x804b260
push   0x130
jmp    8048910 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x804a990
push   0x80488f8
push   ecx
push   esi
push   0x804a768
call   8048ac0 <__libc_start_main@plt>
hlt    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
push   eax
call   8048bbe <(null)+0xa>
pop    ebx
add    ebx,0x25fe
mov    eax,DWORD PTR [ebx+0xa8]
test   eax,eax
je     8048bd1 <(null)+0x1d>
call   eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    edx,DWORD PTR ds:0x804b00c
test   edx,edx
jne    8048c39 <(null)+0x59>
mov    edx,DWORD PTR ds:0x804b008
mov    eax,DWORD PTR [edx]
test   eax,eax
je     8048c16 <(null)+0x36>
lea    esi,[esi+eiz*1+0x0]
lea    eax,[edx+0x4]
mov    ds:0x804b008,eax
call   DWORD PTR [edx]
mov    edx,DWORD PTR ds:0x804b008
mov    ecx,DWORD PTR [edx]
test   ecx,ecx
jne    8048c00 <(null)+0x20>
mov    eax,0x8048a50
test   eax,eax
je     8048c2f <(null)+0x4f>
sub    esp,0xc
push   0x804b0e0
call   8048a50 <__deregister_frame_info@plt>
add    esp,0x10
mov    eax,0x1
mov    ds:0x804b00c,eax
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    eax,0x8048960
mov    ebp,esp
sub    esp,0x8
test   eax,eax
je     8048c74 <(null)+0x24>
sub    esp,0x8
push   0x804b28c
push   0x804b0e0
call   8048960 <__register_frame_info@plt>
add    esp,0x10
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
mov    edi,DWORD PTR [ebp+0x18]
mov    eax,DWORD PTR [ebp+0x1c]
push   ebp
mov    ebp,eax
mov    eax,0xc0
int    0x80
pop    ebp
mov    eax,eax
mov    DWORD PTR [ebp-0x10],eax
cmp    DWORD PTR [ebp-0x10],0xffffff82
jbe    8048cd8 <(null)+0x48>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x10],0xffffffff
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,eax
add    esp,0xc
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
sub    esp,0xc
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    esi,DWORD PTR [ebp+0x14]
mov    edi,DWORD PTR [ebp+0x18]
mov    eax,0xa3
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x10],eax
cmp    DWORD PTR [ebp-0x10],0xffffff82
jbe    8048d2c <(null)+0x44>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x10]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x10],0xffffffff
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x10]
mov    eax,eax
add    esp,0xc
pop    ebx
pop    esi
pop    edi
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    eax,0xdb
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048d78 <(null)+0x3c>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    eax,0x7d
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048dc0 <(null)+0x3c>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x10]
mov    eax,0x7b
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048e08 <(null)+0x3c>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,0x4e
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048e4c <(null)+0x38>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ebp+0xc]
mov    eax,0x5b
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048e90 <(null)+0x38>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,0x56
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0xffffff82
jbe    8048ed0 <(null)+0x34>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x8],0xffffffff
nop
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x9e
int    0x80
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffff82
jbe    8048f0b <(null)+0x2f>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x4]
neg    eax
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x4],0xffffffff
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    ecx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ecx]
mov    eax,DWORD PTR [ebx]
sub    eax,edx
mov    DWORD PTR [ebp-0x8],eax
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,edx
shl    eax,0x2
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
shl    eax,0x6
mov    DWORD PTR [ebp-0x8],eax
mov    edx,DWORD PTR [ecx+0x4]
mov    eax,DWORD PTR [ebx+0x4]
sub    eax,edx
mov    edx,eax
lea    eax,[ebp-0x8]
add    DWORD PTR [eax],edx
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR [ebp+0xc],0x0
jne    8048fa8 <(null)+0x2c>
cmp    DWORD PTR ds:0x804b040,0x0
je     8048f9c <(null)+0x20>
mov    DWORD PTR [ebp-0x8],0x13
jmp    8048faf <(null)+0x33>
mov    esi,esi
mov    DWORD PTR [ebp-0x8],0x9
jmp    8048faf <(null)+0x33>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x8],0x13
mov    eax,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp-0x4],eax
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    eax,eax
cmp    DWORD PTR [eax],0x0
jne    8048fe0 <(null)+0x64>
sub    esp,0x4
push   DWORD PTR [ebp+0x8]
push   0x804aa1a
push   DWORD PTR ds:0x804b284
call   80489b0 <fprintf@plt>
add    esp,0x10
jmp    8049015 <(null)+0x99>
mov    esi,esi
sub    esp,0xc
sub    esp,0x4
call   8048a20 <__errno_location@plt>
add    esp,0x4
mov    eax,eax
mov    eax,eax
push   DWORD PTR [eax]
call   8048a10 <strerror@plt>
add    esp,0x10
mov    eax,eax
push   eax
push   DWORD PTR [ebp+0x8]
push   0x804aa2b
push   DWORD PTR ds:0x804b284
call   80489b0 <fprintf@plt>
add    esp,0x10
cmp    DWORD PTR [ebp+0xc],0x0
je     804902b <(null)+0xaf>
sub    esp,0xc
push   0x804aa60
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804aa81
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b0a4
call   8048a00 <unlink@plt>
add    esp,0x10
sub    esp,0x8
push   0x9
push   DWORD PTR ds:0x8050528
call   8048b80 <kill@plt>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR [ebp-0x4]
push   0x0
call   8048b80 <kill@plt>
add    esp,0x10
jmp    8049070 <(null)+0xf4>
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR ds:0x804b028,0x1
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    eax,eax
mov    DWORD PTR [eax],0x0
mov    eax,ds:0x804b024
test   eax,eax
jne    80490b1 <(null)+0x2d>
call   8048edc <(null)>
sub    esp,0x8
push   0x0
push   0x805055c
call   8048e14 <(null)>
add    esp,0x10
sub    esp,0x8
push   0x805055c
push   0x8050554
call   8048f10 <(null)>
add    esp,0x10
mov    eax,eax
mov    ds:0x804b034,eax
cmp    DWORD PTR ds:0x804b04c,0x0
jne    80490fc <(null)+0x78>
mov    edx,DWORD PTR ds:0x804b034
mov    eax,ds:0x804b038
cmp    edx,eax
jae    80490fc <(null)+0x78>
jmp    80490a3 <(null)+0x1f>
lea    esi,[esi+0x0]
mov    eax,ds:0x804b04c
mov    ds:0x8050524,eax
sub    esp,0x4
push   0x0
push   0x1000
push   DWORD PTR ds:0x8050538
call   8048d3c <(null)>
add    esp,0x10
mov    eax,eax
mov    ds:0x804b020,eax
mov    eax,ds:0x804b020
test   eax,eax
je     8049134 <(null)+0xb0>
jmp    8049094 <(null)+0x10>
nop
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    eax,eax
mov    DWORD PTR [eax],0x0
sub    esp,0x4
push   0x0
push   0x3000
mov    eax,ds:0x8050538
add    eax,0x1000
push   eax
call   8048d3c <(null)>
add    esp,0x10
mov    eax,eax
mov    ds:0x804b020,eax
mov    eax,ds:0x804b020
test   eax,eax
je     8049094 <(null)+0x10>
mov    eax,ds:0x804b020
test   eax,eax
jns    804918f <(null)+0x10b>
call   8048a20 <__errno_location@plt>
mov    eax,eax
mov    eax,eax
cmp    DWORD PTR [eax],0xc
jne    8049094 <(null)+0x10>
dec    DWORD PTR ds:0x8050524
cmp    DWORD PTR ds:0x8050524,0x0
js     80491a4 <(null)+0x120>
jmp    8049106 <(null)+0x82>
nop
mov    eax,ds:0x804b024
test   eax,eax
jne    80491b4 <(null)+0x130>
jmp    8049094 <(null)+0x10>
mov    esi,esi
mov    eax,ds:0x804b028
inc    eax
mov    ds:0x804b028,eax
sub    esp,0x4
mov    eax,ds:0x804b03c
push   eax
push   0x1000
push   DWORD PTR ds:0x805053c
call   8048d84 <(null)>
add    esp,0x10
mov    eax,eax
mov    ds:0x804b020,eax
mov    eax,ds:0x804b020
test   eax,eax
je     80491fd <(null)+0x179>
sub    esp,0x8
push   0x0
push   0x804aa83
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x0
push   0x32
push   0x0
push   0x3000
mov    eax,ds:0x8050538
add    eax,0x1000
push   eax
call   8048c90 <(null)>
add    esp,0x20
mov    eax,eax
mov    ds:0x804b020,eax
mov    eax,ds:0x804b020
cmp    eax,0xffffffff
jne    8049243 <(null)+0x1bf>
sub    esp,0x8
push   0x0
push   0x804aa8c
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x8
push   DWORD PTR ds:0x804b054
push   0x804aa97
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   8048b60 <_exit@plt>
push   ebp
mov    ebp,esp
mov    eax,0x804b020
mov    edx,DWORD PTR [eax]
mov    ecx,edx
inc    edx
mov    DWORD PTR [eax],edx
mov    eax,ecx
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    DWORD PTR [ebp-0x4],0x0
mov    eax,DWORD PTR [ebp+0x8]
cmp    eax,DWORD PTR ds:0x8050530
jb     80492b4 <(null)+0x2c>
mov    eax,ds:0x8050540
sub    eax,0x10
cmp    DWORD PTR [ebp+0x8],eax
jae    80492b4 <(null)+0x2c>
mov    DWORD PTR [ebp-0x4],0x1
mov    eax,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0x8]
push   DWORD PTR [eax]
call   8049288 <(null)>
add    esp,0x10
mov    eax,eax
test   eax,eax
je     8049344 <(null)+0x88>
sub    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
push   DWORD PTR [edx+0xc]
call   8049288 <(null)>
add    esp,0x10
mov    eax,eax
test   eax,eax
je     8049344 <(null)+0x88>
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [edx+0x4],eax
jne    8049344 <(null)+0x88>
mov    eax,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x8]
cmp    DWORD PTR [edx+0x8],eax
jne    8049344 <(null)+0x88>
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edx+0xc]
mov    DWORD PTR [ebp-0x4],eax
mov    eax,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [ebp+0x8]
cmp    eax,DWORD PTR [edx]
jne    8049344 <(null)+0x88>
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0x4
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x8050530
ja     8049344 <(null)+0x88>
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0x8
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x8050530
ja     8049344 <(null)+0x88>
mov    eax,0x1
jmp    8049349 <(null)+0x8d>
lea    esi,[esi+0x0]
mov    eax,0x0
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],eax
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x805052c
jne    804939c <(null)+0x50>
mov    eax,DWORD PTR [ebp-0x8]
add    eax,0x4
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x805052c
jne    804939c <(null)+0x50>
mov    eax,DWORD PTR [ebp-0x8]
add    eax,0x8
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x805052c
jne    804939c <(null)+0x50>
mov    eax,DWORD PTR [ebp-0x8]
add    eax,0xc
mov    eax,DWORD PTR [eax]
cmp    eax,DWORD PTR ds:0x805052c
jne    804939c <(null)+0x50>
jmp    80493a4 <(null)+0x58>
nop
lea    eax,[ebp-0x8]
add    DWORD PTR [eax],0x4
jmp    804935c <(null)+0x10>
mov    ebx,DWORD PTR [ebp-0x8]
mov    ecx,DWORD PTR [ebp-0x8]
mov    edx,DWORD PTR [ebp-0x8]
add    edx,0x8
mov    eax,DWORD PTR [ebp-0x8]
add    eax,0xc
mov    DWORD PTR [eax],0x0
mov    DWORD PTR [edx],0x0
mov    DWORD PTR [ecx],0x0
mov    DWORD PTR [ebx],0x0
mov    ebx,DWORD PTR [ebp-0x8]
add    ebx,0x10
mov    ecx,DWORD PTR [ebp-0x8]
add    ecx,0x14
mov    edx,DWORD PTR [ebp-0x8]
add    edx,0x18
mov    eax,DWORD PTR [ebp-0x8]
add    eax,0x1c
mov    DWORD PTR [eax],0x0
mov    DWORD PTR [edx],0x0
mov    DWORD PTR [ecx],0x0
mov    DWORD PTR [ebx],0x0
mov    eax,ds:0x8050530
mov    DWORD PTR [ebp-0x8],eax
mov    esi,esi
mov    eax,ds:0x8050540
sub    eax,0x10
cmp    DWORD PTR [ebp-0x8],eax
jb     8049418 <(null)+0xcc>
jmp    8049464 <(null)+0x118>
nop
sub    esp,0x4
push   DWORD PTR ds:0x805054c
push   DWORD PTR ds:0x8050548
push   DWORD PTR [ebp-0x8]
call   80492bc <(null)>
add    esp,0x10
mov    eax,eax
test   eax,eax
je     804945c <(null)+0x110>
mov    edx,DWORD PTR [ebp-0x8]
add    edx,0x4
mov    eax,ds:0x8050530
sub    eax,0x1000
mov    DWORD PTR [edx],eax
mov    edx,DWORD PTR [ebp-0x8]
add    edx,0x8
mov    eax,ds:0x8050530
mov    DWORD PTR [edx],eax
jmp    8049464 <(null)+0x118>
lea    esi,[esi+0x0]
lea    eax,[ebp-0x8]
add    DWORD PTR [eax],0x4
jmp    8049408 <(null)+0xbc>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
pusha  
push   es
push   ds
mov    edx,0xfff4
mov    es,edx
mov    ds,edx
mov    eax,0xffffe000
and    eax,esp
push   eax
call   804934c <(null)>
add    esp,0x4
pop    ds
pop    es
popa   
retf   
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x804b020
add    eax,DWORD PTR ds:0x8050530
add    eax,DWORD PTR ds:0x8050540
mov    eax,eax
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x804b030
inc    eax
mov    ds:0x804b030,eax
sub    esp,0x8
push   0x1
push   0x804aaad
call   8048f7c <(null)>
add    esp,0x10
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x14
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x804aab3
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b0a4
call   8048a00 <unlink@plt>
add    esp,0x10
sub    esp,0x4
mov    eax,ds:0x804b03c
or     eax,0x3
push   eax
push   0x1000
push   DWORD PTR [ebp+0x8]
call   8048d84 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
mov    eax,DWORD PTR [ebp-0x8]
test   eax,eax
je     804954a <(null)+0x76>
sub    esp,0x8
push   0x1
push   0x804aace
call   8048f7c <(null)>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0xff8
mov    DWORD PTR [ebp-0xc],eax
sub    esp,0x8
push   0x80494ac
push   0xb
call   80489e0 <signal@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x8],eax
mov    eax,DWORD PTR [ebp-0x8]
cmp    eax,0xdeadbabe
je     80495b0 <(null)+0xdc>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0x8]
push   eax
push   0x804aad9
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0x8
push   0x1
push   0x804aaf2
call   8048f7c <(null)>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0xc]
mov    eax,0x804946f
and    eax,0xffff
or     eax,0xffec0000
mov    DWORD PTR [edx],eax
mov    edx,DWORD PTR [ebp-0xc]
add    edx,0x4
mov    eax,0x804946f
and    eax,0xffff0000
or     eax,0xec00
mov    DWORD PTR [edx],eax
sub    esp,0x4
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x4
mov    eax,DWORD PTR [eax]
push   eax
mov    eax,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [eax]
push   eax
push   0x804ab00
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0xfe8
mov    DWORD PTR [ebp-0xc],eax
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [eax],0xffff
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x4
mov    DWORD PTR [eax],0xcf9b00
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0xff0
mov    DWORD PTR [ebp-0xc],eax
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [eax],0xffff
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x4
mov    DWORD PTR [eax],0xcf9300
sub    esp,0x4
mov    eax,ds:0x804b03c
or     eax,0x1
push   eax
push   0x1000
push   DWORD PTR [ebp+0x8]
call   8048d84 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
mov    eax,DWORD PTR [ebp-0x8]
test   eax,eax
je     8049685 <(null)+0x1b1>
sub    esp,0x8
push   0x1
push   0x804ab25
call   8048f7c <(null)>
add    esp,0x10
call   8048edc <(null)>
call   8049274 <(null)>
mov    ebx,eax
call   8049494 <(null)>
mov    eax,eax
lea    eax,[eax+ebx*1]
mov    ds:0x804b020,eax
call   0xffff:0x0
call   8048ae0 <getuid@plt>
mov    eax,eax
test   eax,eax
je     80496dc <(null)+0x208>
mov    eax,ds:0x804b020
cmp    eax,0x7a69
jne    8049700 <(null)+0x22c>
sub    esp,0xc
push   0x804b080
call   8048aa0 <strlen@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
cmp    eax,0x10
je     80496dc <(null)+0x208>
jmp    8049700 <(null)+0x22c>
lea    esi,[esi+0x0]
sub    esp,0xc
push   0x804ab30
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
jmp    804972e <(null)+0x25a>
nop
sub    esp,0xc
push   0x804ab48
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x0
call   80494ac <(null)>
add    esp,0x10
sub    esp,0x8
push   0x1
push   0xf
call   80489e0 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0xf
push   0x0
call   8048b80 <kill@plt>
add    esp,0x10
sub    esp,0x4
push   0x0
push   0x804ab5f
push   DWORD PTR ds:0x804b0a8
call   8048930 <execl@plt>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x804ab62
call   8048f7c <(null)>
add    esp,0x10
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    DWORD PTR ds:0x805053c,0x1000
mov    eax,ds:0x805053c
cmp    eax,DWORD PTR ds:0x8050540
ja     804979e <(null)+0x22>
call   804981c <(null)>
mov    DWORD PTR ds:0x804b02c,0x0
mov    eax,ds:0x805053c
mov    eax,DWORD PTR [eax]
mov    ds:0x804b020,eax
call   80497bc <(null)>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
nop
mov    esp,DWORD PTR ds:0x8050534
mov    eax,ds:0x804b02c
test   eax,eax
je     80497f4 <(null)+0x38>
mov    eax,ds:0x8050520
mov    edx,DWORD PTR ds:0x8050564
add    edx,eax
mov    eax,ds:0x8050520
add    eax,DWORD PTR ds:0x8050564
mov    al,BYTE PTR [eax]
xor    eax,0x1
mov    BYTE PTR [edx],al
jmp    804980c <(null)+0x50>
nop
sub    esp,0x4
push   0x4
push   0x1000
push   DWORD PTR ds:0x805053c
call   8048d3c <(null)>
add    esp,0x10
dec    DWORD PTR ds:0x8050520
call   804977c <(null)>
jmp    80497c3 <(null)+0x7>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
inc    DWORD PTR ds:0x804b048
cmp    DWORD PTR ds:0x804b048,0x1
jne    8049844 <(null)+0x28>
mov    eax,ds:0x8050550
dec    eax
mov    ds:0x8050520,eax
jmp    804998e <(null)+0x172>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x804b048,0x2
jne    80498cc <(null)+0xb0>
sub    esp,0x4
push   0x10
push   0x0
push   0x804b2c0
call   8048b50 <memset@plt>
add    esp,0x10
mov    DWORD PTR ds:0x804b2c0,0x1fff
or     BYTE PTR ds:0x804b2cc,0x1
mov    DWORD PTR ds:0x804b2c4,0xdead
mov    DWORD PTR ds:0x804b2c8,0xbabe
or     BYTE PTR ds:0x804b2cc,0x10
sub    esp,0x4
push   0x10
push   0x804b2c0
push   0x1
call   8048dcc <(null)>
add    esp,0x10
mov    eax,eax
test   eax,eax
je     80498b9 <(null)+0x9d>
sub    esp,0x8
push   0x1
push   0x804ab68
call   8048f7c <(null)>
add    esp,0x10
mov    eax,ds:0x8050550
dec    eax
mov    ds:0x8050520,eax
jmp    804998e <(null)+0x172>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x804b048,0x3
jne    804998e <(null)+0x172>
mov    DWORD PTR ds:0x804b0ac,0x0
mov    DWORD PTR ds:0x8050520,0x0
lea    esi,[esi+0x0]
mov    eax,ds:0x8050550
dec    eax
cmp    DWORD PTR ds:0x8050520,eax
jle    8049900 <(null)+0xe4>
jmp    804997c <(null)+0x160>
mov    eax,ds:0x8050520
add    eax,DWORD PTR ds:0x8050564
cmp    BYTE PTR [eax],0x0
je     804992c <(null)+0x110>
inc    DWORD PTR ds:0x804b0ac
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
jmp    804996e <(null)+0x152>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x804b0ac,0x10
jne    8049964 <(null)+0x148>
mov    DWORD PTR ds:0x804b0ac,0x0
sub    esp,0xc
mov    eax,ds:0x8050520
mov    eax,eax
shl    eax,0xc
add    eax,DWORD PTR ds:0x8050540
sub    eax,0x1000
push   eax
call   80494d4 <(null)>
add    esp,0x10
jmp    804996e <(null)+0x152>
mov    esi,esi
mov    DWORD PTR ds:0x804b0ac,0x0
inc    DWORD PTR ds:0x8050520
jmp    80498f0 <(null)+0xd4>
lea    esi,[esi+0x0]
sub    esp,0x8
push   0x1
push   0x804aaf2
call   8048f7c <(null)>
add    esp,0x10
mov    DWORD PTR ds:0x8050534,esp
mov    eax,ds:0x8050544
mov    ds:0x805053c,eax
call   804977c <(null)>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],0x0
sub    esp,0x8
push   0x804ab73
push   0x804ab75
call   8048b70 <fopen@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    80499e7 <(null)+0x3f>
sub    esp,0x8
push   0x0
push   0x804ab84
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x4
push   DWORD PTR [ebp-0x4]
push   0xff
push   0x8050320
call   8048a80 <fgets@plt>
add    esp,0x10
nop
mov    DWORD PTR ds:0x804b0b4,0xffffffff
mov    DWORD PTR ds:0x804b0b0,0xffffffff
mov    DWORD PTR ds:0x804b2d0,0xffffffff
sub    esp,0x4
push   DWORD PTR [ebp-0x4]
push   0xff
push   0x8050420
call   8048a80 <fgets@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jne    8049a40 <(null)+0x98>
jmp    8049a9e <(null)+0xf6>
mov    esi,esi
sub    esp,0xc
push   0x804b2d4
push   0x804b2d4
push   0x804b2d4
push   0x804b2d4
push   0x804b0b4
push   0x804b0b0
push   0x8050320
push   0x804ab99
push   0x8050420
call   8048b40 <sscanf@plt>
add    esp,0x30
mov    eax,eax
mov    ds:0x804b2d0,eax
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x8050320
call   8048990 <strcmp@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
test   eax,eax
jne    8049a00 <(null)+0x58>
sub    esp,0xc
push   DWORD PTR [ebp-0x4]
call   8048980 <fileno@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   80489a0 <close@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x4]
call   8048b10 <fclose@plt>
add    esp,0x10
cmp    DWORD PTR ds:0x804b2d0,0x7
jne    8049ae0 <(null)+0x138>
mov    edx,DWORD PTR ds:0x804b0b0
mov    eax,ds:0x804b0b4
sub    eax,edx
mov    DWORD PTR [ebp-0x8],eax
jmp    8049ae7 <(null)+0x13f>
mov    DWORD PTR [ebp-0x8],0xffffffff
mov    eax,DWORD PTR [ebp-0x8]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    DWORD PTR ds:0x805053c,0x1000
inc    DWORD PTR ds:0x804b054
mov    eax,ds:0x804b03c
xor    eax,0x1
mov    ds:0x804b03c,eax
sub    esp,0x8
push   0x0
push   0x0
push   0x32
mov    eax,ds:0x804b03c
push   eax
push   0x1000
push   DWORD PTR ds:0x805053c
call   8048c90 <(null)>
add    esp,0x20
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    8049b4c <(null)+0x60>
sub    esp,0x8
push   0x0
push   0x804abae
call   8048f7c <(null)>
add    esp,0x10
mov    edx,DWORD PTR [ebp-0x4]
mov    eax,ds:0x805053c
mov    DWORD PTR [edx],eax
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x804b02c
inc    eax
mov    ds:0x804b02c,eax
call   80497bc <(null)>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x804b030
inc    eax
mov    ds:0x804b030,eax
sub    esp,0x4
push   0x3
lea    edx,[ebp+0x8]
mov    eax,edx
push   eax
push   0x0
call   8048a60 <waitpid@plt>
add    esp,0x10
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR ds:0x804b03c,0x0
call   8049bb0 <(null)>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,ds:0x804b03c
test   eax,eax
je     8049bc8 <(null)+0x18>
mov    DWORD PTR ds:0x8050534,esp
jmp    8049bd0 <(null)+0x20>
nop
mov    esp,DWORD PTR ds:0x8050534
jmp    8049bf3 <(null)+0x43>
sub    esp,0x8
push   0x8049b98
push   0xb
call   80489e0 <signal@plt>
add    esp,0x10
mov    eax,ds:0x8050538
add    eax,0x1000
mov    eax,DWORD PTR [eax]
mov    ds:0x804b020,eax
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0xc],0x0
mov    DWORD PTR ds:0x804b028,0x0
mov    DWORD PTR ds:0x804b030,0x0
mov    DWORD PTR [ebp-0x8],0x4000
push   0x0
push   0xb11
mov    eax,0x804c320
sub    eax,0x10
add    eax,DWORD PTR [ebp-0x8]
push   eax
push   0x8049084
call   8048920 <clone@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x8050528,eax
cmp    DWORD PTR ds:0x8050528,0xffffffff
jne    8049c62 <(null)+0x6a>
sub    esp,0x8
push   0x0
push   0x804abb8
call   8048f7c <(null)>
add    esp,0x10
nop
nop
mov    eax,ds:0x804b028
test   eax,eax
je     8049c70 <(null)+0x78>
jmp    8049c78 <(null)+0x80>
nop
call   8048edc <(null)>
jmp    8049c64 <(null)+0x6c>
nop
mov    DWORD PTR ds:0x804b028,0x0
cmp    DWORD PTR ds:0x804b044,0x0
jne    8049cac <(null)+0xb4>
sub    esp,0xc
push   0x804aa81
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
nop
lea    esi,[esi+0x0]
sub    esp,0xc
push   0x804abbe
call   80499a8 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x4],0x1
jne    8049cd0 <(null)+0xd8>
jmp    8049cdc <(null)+0xe4>
call   8049aec <(null)>
lea    eax,[ebp-0x4]
dec    DWORD PTR [eax]
jmp    8049cc8 <(null)+0xd0>
sub    esp,0x8
push   0x0
push   0x8050554
call   8048e14 <(null)>
add    esp,0x10
mov    DWORD PTR ds:0x804b024,0x1
sub    esp,0xc
push   DWORD PTR ds:0x804b0a4
call   8048e9c <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
mov    DWORD PTR ds:0x804b024,0x0
cmp    DWORD PTR [ebp-0x4],0x0
je     8049d30 <(null)+0x138>
sub    esp,0x8
push   0x0
push   0x804abcd
call   8048f7c <(null)>
add    esp,0x10
mov    eax,ds:0x804b028
test   eax,eax
je     8049d40 <(null)+0x148>
jmp    8049e04 <(null)+0x20c>
mov    esi,esi
sub    esp,0x8
push   0x4000
push   DWORD PTR ds:0x8050538
call   8048e58 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     8049d73 <(null)+0x17b>
sub    esp,0x8
push   0x0
push   0x804abd4
call   8048f7c <(null)>
add    esp,0x10
mov    eax,ds:0x804b030
test   eax,eax
je     8049d84 <(null)+0x18c>
jmp    804a0ba <(null)+0x4c2>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x804b044,0x0
jne    8049df9 <(null)+0x201>
mov    eax,DWORD PTR [ebp-0xc]
and    eax,0x3f
test   eax,eax
jne    8049df9 <(null)+0x201>
sub    esp,0x8
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x14],eax
cmp    DWORD PTR [ebp-0x14],0x0
jns    8049daa <(null)+0x1b2>
add    DWORD PTR [ebp-0x14],0x3f
mov    eax,DWORD PTR [ebp-0x14]
sar    eax,0x6
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x18],eax
cmp    DWORD PTR [ebp-0x18],0x0
jns    8049dc3 <(null)+0x1cb>
add    DWORD PTR [ebp-0x18],0x7
mov    eax,DWORD PTR [ebp-0x18]
sar    eax,0x3
imul   eax,eax,0x8
mov    edx,DWORD PTR [ebp-0x10]
sub    edx,eax
mov    eax,0x804b0b8
movsx  eax,BYTE PTR [edx+eax*1]
push   eax
push   0x804abdf
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
lea    eax,[ebp-0xc]
inc    DWORD PTR [eax]
jmp    8049cb0 <(null)+0xb8>
nop
sub    esp,0x8
mov    edx,DWORD PTR ds:0x805053c
mov    eax,ds:0x804b058
sub    eax,edx
add    eax,0x1000
push   eax
push   DWORD PTR ds:0x805053c
call   8048e58 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     8049e45 <(null)+0x24d>
sub    esp,0x8
push   0x0
push   0x804abec
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x8
push   0x1000
push   DWORD PTR ds:0x8050538
call   8048e58 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     8049e78 <(null)+0x280>
sub    esp,0x8
push   0x0
push   0x804abf5
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x8
push   0x0
push   0x8050554
call   8048e14 <(null)>
add    esp,0x10
mov    esi,esi
call   8048edc <(null)>
sub    esp,0x8
push   0x0
push   0x805055c
call   8048e14 <(null)>
add    esp,0x10
sub    esp,0x8
push   0x805055c
push   0x8050554
call   8048f10 <(null)>
add    esp,0x10
mov    eax,eax
mov    ds:0x804b034,eax
mov    edx,DWORD PTR ds:0x804b050
mov    eax,edx
shl    eax,0x2
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
lea    edx,[eax*4+0x0]
add    eax,edx
mov    edx,eax
shl    edx,0x6
mov    eax,ds:0x804b034
cmp    edx,eax
ja     8049e8c <(null)+0x294>
mov    DWORD PTR ds:0x804b03c,0x4
call   8049bb0 <(null)>
mov    eax,ds:0x804b03c
test   eax,eax
jne    8049f40 <(null)+0x348>
sub    esp,0xc
push   0x804abfe
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0x4
mov    eax,ds:0x804b03c
or     eax,0x1
push   eax
push   0x3000
mov    eax,ds:0x8050538
add    eax,0x1000
push   eax
call   8048d84 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    8049f81 <(null)+0x389>
sub    esp,0x8
push   0x0
push   0x804ac0e
call   8048f7c <(null)>
add    esp,0x10
mov    eax,ds:0x8050538
mov    edx,eax
neg    edx
mov    eax,0x4000
neg    eax
sub    eax,0x1000
lea    eax,[eax+edx*1]
mov    DWORD PTR [ebp-0x8],eax
sub    esp,0x4
push   0x0
push   0x3000
mov    eax,ds:0x8050538
add    eax,0x1000
push   eax
call   8048d3c <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     8049fd6 <(null)+0x3de>
sub    esp,0x8
push   0x0
push   0x804ac1b
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0xc
push   0x0
push   0x1
push   DWORD PTR [ebp-0x8]
push   0x1000
mov    eax,ds:0x8050538
add    eax,0x3000
push   eax
call   8048ce8 <(null)>
add    esp,0x20
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    804a030 <(null)+0x438>
cmp    DWORD PTR [ebp-0x8],0x0
jne    804a020 <(null)+0x428>
sub    esp,0x8
push   0x0
push   0x804ac23
call   8048f7c <(null)>
add    esp,0x10
jmp    804a030 <(null)+0x438>
lea    esi,[esi+0x0]
lea    eax,[ebp-0x8]
sub    DWORD PTR [eax],0x1000
jmp    8049f9c <(null)+0x3a4>
mov    esi,esi
mov    eax,ds:0x8050538
add    eax,0x1000
mov    ds:0x8050548,eax
mov    eax,DWORD PTR [ebp-0x8]
add    eax,DWORD PTR ds:0x8050548
add    eax,0x2000
mov    ds:0x805054c,eax
sub    esp,0x4
push   DWORD PTR ds:0x805054c
push   DWORD PTR ds:0x8050548
push   0x804ac40
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0x8
push   0x8049b70
push   0x11
call   80489e0 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8049b58
push   0xb
call   80489e0 <signal@plt>
add    esp,0x10
sub    esp,0x8
push   0x8049b58
push   0x7
call   80489e0 <signal@plt>
add    esp,0x10
call   804981c <(null)>
sub    esp,0x8
push   0x0
push   0x804abae
call   8048f7c <(null)>
add    esp,0x10
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x78
sub    esp,0xc
push   0x12
call   80489d0 <umask@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b0a4
call   8048a00 <unlink@plt>
add    esp,0x10
sub    esp,0x4
push   0x1ed
push   0x242
push   DWORD PTR ds:0x804b0a4
call   8048b20 <open@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x6c],eax
cmp    DWORD PTR [ebp-0x6c],0x0
jns    804a12c <(null)+0x5c>
sub    esp,0x8
push   0x0
push   0x804ac60
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x4
push   0x34
push   0x0
lea    eax,[ebp-0x48]
push   eax
call   8048b50 <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x4
push   0x804ac8b
lea    eax,[ebp-0x48]
push   eax
call   8048b00 <memcpy@plt>
add    esp,0x10
mov    WORD PTR [ebp-0x38],0x2
mov    WORD PTR [ebp-0x36],0x3
mov    WORD PTR [ebp-0x1e],0x20
mov    WORD PTR [ebp-0x1c],0x1
mov    DWORD PTR [ebp-0x2c],0x34
sub    esp,0x4
push   0x34
lea    eax,[ebp-0x48]
push   eax
push   DWORD PTR [ebp-0x6c]
call   8048970 <write@plt>
add    esp,0x10
sub    esp,0x4
push   0x20
push   0x0
lea    eax,[ebp-0x68]
push   eax
call   8048b50 <memset@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x68],0x1
mov    DWORD PTR [ebp-0x64],0x1000
mov    DWORD PTR [ebp-0x58],0x1000
mov    eax,ds:0x8050538
mov    DWORD PTR [ebp-0x60],eax
mov    DWORD PTR [ebp-0x54],0x4000
mov    DWORD PTR [ebp-0x50],0x7
sub    esp,0x4
push   0x20
lea    eax,[ebp-0x68]
push   eax
push   DWORD PTR [ebp-0x6c]
call   8048970 <write@plt>
add    esp,0x10
sub    esp,0x4
push   0x0
push   0x1000
push   DWORD PTR [ebp-0x6c]
call   8048af0 <lseek@plt>
add    esp,0x10
sub    esp,0x4
push   0x1000
push   0x90
push   0x804b2e0
call   8048b50 <memset@plt>
add    esp,0x10
sub    esp,0x4
push   0x1000
push   0x804b2e0
push   DWORD PTR [ebp-0x6c]
call   8048970 <write@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR [ebp-0x6c]
call   80489a0 <close@plt>
add    esp,0x10
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
and    DWORD PTR ds:0x8050534,0xfffff000
sub    DWORD PTR ds:0x8050534,0x1000
mov    eax,ds:0x8050534
add    eax,0x40000000
shr    eax,0x1e
mov    eax,eax
shl    eax,0x1e
mov    ds:0x8050530,eax
sub    esp,0x8
mov    edx,DWORD PTR ds:0x8050534
mov    eax,ds:0x8050530
sub    eax,edx
push   eax
push   DWORD PTR ds:0x8050534
call   8048e58 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
je     804a2a1 <(null)+0x6d>
sub    esp,0x8
push   0x0
push   0x804ac90
call   8048f7c <(null)>
add    esp,0x10
call   8048ae0 <getuid@plt>
mov    ds:0x805052c,eax
mov    eax,0x4000
neg    eax
sub    eax,0x1000
add    eax,DWORD PTR ds:0x8050530
mov    ds:0x8050538,eax
cmp    DWORD PTR ds:0x804b058,0x0
je     804a2d8 <(null)+0xa4>
mov    eax,ds:0x804b058
mov    ds:0x805053c,eax
jmp    804a2f6 <(null)+0xc2>
nop
mov    eax,ds:0x8050538
sub    eax,0x400000
and    eax,0xffc00000
mov    ds:0x805053c,eax
mov    eax,ds:0x805053c
mov    ds:0x804b058,eax
push   DWORD PTR ds:0x804b058
push   DWORD PTR ds:0x8050530
push   DWORD PTR ds:0x8050534
push   0x804aca0
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0xc
push   0x804c2e0
call   8048a90 <sysinfo@plt>
add    esp,0x10
mov    eax,ds:0x804c2f0
add    eax,DWORD PTR ds:0x8050530
mov    ds:0x8050540,eax
mov    eax,ds:0x8050540
add    eax,0x3fffff
and    eax,0xffc00000
mov    ds:0x8050540,eax
mov    eax,ds:0x804c2f0
add    eax,DWORD PTR ds:0x8050540
mov    ds:0x8050544,eax
cmp    DWORD PTR ds:0x8050544,0xffffdfff
ja     804a388 <(null)+0x154>
mov    eax,ds:0x8050544
cmp    eax,DWORD PTR ds:0x8050540
jb     804a388 <(null)+0x154>
jmp    804a392 <(null)+0x15e>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x8050544,0xffffd000
sub    esp,0x4
push   DWORD PTR ds:0x8050544
push   DWORD PTR ds:0x8050540
push   0x804ace0
call   8048ad0 <printf@plt>
add    esp,0x10
mov    edx,DWORD PTR ds:0x8050540
mov    eax,ds:0x8050544
sub    eax,edx
shr    eax,0xc
mov    ds:0x8050550,eax
sub    esp,0xc
mov    eax,ds:0x8050550
add    eax,0x20
push   eax
call   8048a30 <malloc@plt>
add    esp,0x10
mov    eax,eax
mov    ds:0x8050564,eax
cmp    DWORD PTR ds:0x8050564,0x0
jne    804a3f9 <(null)+0x1c5>
sub    esp,0x8
push   0x1
push   0x804ad02
call   8048f7c <(null)>
add    esp,0x10
sub    esp,0x4
mov    eax,ds:0x8050550
add    eax,0x20
push   eax
push   0x0
push   DWORD PTR ds:0x8050564
call   8048b50 <memset@plt>
add    esp,0x10
call   804a0d0 <(null)>
call   8049bf8 <(null)>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    DWORD PTR [ebp-0x4],0x0
mov    DWORD PTR ds:0x804b280,0x804b05c
sub    esp,0x8
push   0x0
push   0x0
push   0x22
push   0x3
push   0x4000
push   0x0
call   8048c90 <(null)>
add    esp,0x20
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    804a470 <(null)+0x4c>
sub    esp,0x8
push   0x0
push   0x804ad11
call   8048f7c <(null)>
add    esp,0x10
lea    eax,[ebp-0x4]
add    DWORD PTR [eax],0x3fc0
mov    DWORD PTR ds:0x8050534,esp
mov    esp,DWORD PTR [ebp-0x4]
call   804a234 <(null)>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x804b030
inc    eax
mov    ds:0x804b030,eax
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x18
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    DWORD PTR ds:0x8050534,esp
mov    eax,ds:0x8050534
sub    eax,0x3fffff
and    eax,0xffc00000
mov    ds:0x8050534,eax
mov    eax,ds:0x804b058
mov    DWORD PTR [ebp-0x10],eax
cmp    DWORD PTR ds:0x804b058,0x0
jne    804a4e3 <(null)+0x47>
mov    eax,ds:0x8050534
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x10]
mov    ds:0x8050534,eax
nop
cmp    DWORD PTR [ebp-0xc],0x0
jg     804a507 <(null)+0x6b>
sub    esp,0xc
push   0x804abbe
call   80499a8 <(null)>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0xc],eax
cmp    DWORD PTR [ebp-0xc],0x80
jg     804a518 <(null)+0x7c>
jmp    804a5c8 <(null)+0x12c>
lea    esi,[esi+0x0]
lea    eax,[ebp-0xc]
dec    DWORD PTR [eax]
mov    eax,ds:0x804b03c
xor    eax,0x1
mov    ds:0x804b03c,eax
sub    DWORD PTR ds:0x8050534,0x1000
sub    esp,0x8
push   0x0
push   0x0
push   0x32
mov    eax,ds:0x804b03c
push   eax
push   0x1000
push   DWORD PTR ds:0x8050534
call   8048c90 <(null)>
add    esp,0x20
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    804a564 <(null)+0xc8>
jmp    804a5c8 <(null)+0x12c>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x8],0x7ffffffe
jle    804a570 <(null)+0xd4>
jmp    804a5c8 <(null)+0x12c>
nop
mov    eax,DWORD PTR [ebp-0x8]
and    eax,0x3ff
test   eax,eax
jne    804a5bc <(null)+0x120>
cmp    DWORD PTR [ebp-0x8],0x0
jne    804a592 <(null)+0xf6>
sub    esp,0xc
push   0x804aa81
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0x4
push   DWORD PTR [ebp-0x8]
mov    eax,ds:0x804b020
push   eax
push   0x804ad1d
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
lea    eax,[ebp-0x8]
inc    DWORD PTR [eax]
jmp    804a4ec <(null)+0x50>
mov    esi,esi
sub    esp,0x4
push   DWORD PTR [ebp-0x8]
mov    eax,ds:0x804b020
push   eax
push   0x804ad1d
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
sub    esp,0x8
push   0xa
sub    esp,0x4
call   8048a40 <getppid@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   8048b80 <kill@plt>
add    esp,0x10
lea    esi,[esi+0x0]
call   8048ab0 <pause@plt>
jmp    804a610 <(null)+0x174>
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   0x804a48c
push   0xa
call   80489e0 <signal@plt>
add    esp,0x10
sub    esp,0xc
push   0x804ad30
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   DWORD PTR ds:0x804b284
call   80489f0 <fflush@plt>
add    esp,0x10
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x804b030,0x0
mov    eax,ds:0x804b020
inc    eax
mov    ds:0x804b020,eax
call   80489c0 <fork@plt>
mov    eax,eax
mov    ds:0x8050528,eax
cmp    DWORD PTR ds:0x8050528,0x0
jne    804a683 <(null)+0x6b>
call   804a49c <(null)>
nop
mov    eax,ds:0x804b030
test   eax,eax
je     804a690 <(null)+0x78>
jmp    804a698 <(null)+0x80>
nop
call   8048edc <(null)>
jmp    804a684 <(null)+0x6c>
nop
sub    esp,0xc
push   0x804abbe
call   80499a8 <(null)>
add    esp,0x10
mov    eax,eax
cmp    eax,0x80
jg     804a654 <(null)+0x3c>
sub    esp,0x8
push   0x0
push   0xa
call   80489e0 <signal@plt>
add    esp,0x10
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x8
sub    esp,0x8
push   DWORD PTR [ebp+0x8]
push   0x804ad42
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804ad5d
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804ad6f
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804ad84
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804ad99
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804adad
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804adc5
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804adde
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x804aa81
call   8048ad0 <printf@plt>
add    esp,0x10
sub    esp,0xc
push   0x1
call   8048b60 <_exit@plt>
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
nop
nop
cmp    DWORD PTR [ebp+0x8],0x0
jne    804a77c <(null)+0x14>
jmp    804a924 <(null)+0x1bc>
nop
sub    esp,0x4
push   0x804adf7
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   8048a70 <getopt@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jns    804a7a4 <(null)+0x3c>
jmp    804a924 <(null)+0x1bc>
mov    esi,esi
mov    eax,DWORD PTR [ebp-0x4]
sub    eax,0x61
mov    DWORD PTR [ebp-0x8],eax
cmp    DWORD PTR [ebp-0x8],0x16
ja     804a90c <(null)+0x1a4>
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [edx*4+0x804ae40]
jmp    eax
nop
mov    DWORD PTR ds:0x804b040,0x1
jmp    804a770 <(null)+0x8>
mov    DWORD PTR ds:0x804b044,0x1
jmp    804a770 <(null)+0x8>
sub    esp,0xc
push   DWORD PTR ds:0x804b288
call   8048b30 <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    ds:0x804b04c,eax
jmp    804a770 <(null)+0x8>
nop
sub    esp,0x4
push   0x804b038
push   0x804ae07
push   DWORD PTR ds:0x804b288
call   8048b40 <sscanf@plt>
add    esp,0x10
mov    eax,eax
cmp    eax,0x1
jne    804a830 <(null)+0xc8>
mov    eax,ds:0x804b038
cmp    eax,0x186a0
ja     804a830 <(null)+0xc8>
jmp    804a770 <(null)+0x8>
nop
sub    esp,0x8
push   0x0
push   0x804ae0a
call   8048f7c <(null)>
add    esp,0x10
jmp    804a770 <(null)+0x8>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804b288
call   8048b30 <atoi@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    ds:0x804b050,eax
cmp    DWORD PTR ds:0x804b050,0x0
jns    804a770 <(null)+0x8>
sub    esp,0x8
push   0x0
push   0x804ae1a
call   8048f7c <(null)>
add    esp,0x10
jmp    804a770 <(null)+0x8>
mov    esi,esi
sub    esp,0xc
push   DWORD PTR ds:0x804b288
call   8048950 <strdup@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    ds:0x804b0a4,eax
jmp    804a770 <(null)+0x8>
nop
sub    esp,0xc
push   DWORD PTR ds:0x804b288
call   8048950 <strdup@plt>
add    esp,0x10
mov    eax,eax
mov    eax,eax
mov    ds:0x804b0a8,eax
jmp    804a770 <(null)+0x8>
nop
sub    esp,0x4
push   0x804b058
push   0x804ae29
push   DWORD PTR ds:0x804b288
call   8048b40 <sscanf@plt>
add    esp,0x10
mov    eax,eax
cmp    eax,0x1
je     804a8fc <(null)+0x194>
sub    esp,0x8
push   0x0
push   0x804ae2c
call   8048f7c <(null)>
add    esp,0x10
and    DWORD PTR ds:0x804b058,0xffc00000
jmp    804a770 <(null)+0x8>
nop
sub    esp,0xc
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
call   804a6c4 <(null)>
add    esp,0x10
jmp    804a770 <(null)+0x8>
lea    esi,[esi+0x0]
call   8048ae0 <getuid@plt>
mov    ds:0x805052c,eax
call   8048940 <setpgrp@plt>
call   804a618 <(null)>
call   804a424 <(null)>
mov    eax,0x0
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
sub    esp,0x4
mov    eax,ds:0x804b1ac
mov    ebx,0x804b1ac
cmp    eax,0xffffffff
je     804a97c <(null)+0x2c>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
sub    ebx,0x4
call   eax
mov    eax,DWORD PTR [ebx]
cmp    eax,0xffffffff
jne    804a970 <(null)+0x20>
pop    eax
pop    ebx
pop    ebp
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
push   edx
call   804a99a <(null)+0xa>
pop    ebx
add    ebx,0x822
lea    esi,[esi+0x0]
call   8048be0 <(null)>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
