push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048450 <_init+0xc>
pop    ebx
add    ebx,0x1650
call   8048584 <call_gmon_start>
call   8048608 <frame_dummy>
call   8048910 <__do_global_ctors_aux>
pop    ebx
leave  
ret    
push   DWORD PTR ds:0x8049aa4
jmp    DWORD PTR ds:0x8049aa8
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049aac
push   0x0
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ab0
push   0x8
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ab4
push   0x10
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ab8
push   0x18
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049abc
push   0x20
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ac0
push   0x28
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ac4
push   0x30
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ac8
push   0x38
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049acc
push   0x40
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ad0
push   0x48
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ad4
push   0x50
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ad8
push   0x58
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049adc
push   0x60
jmp    804846c <.plt>
jmp    DWORD PTR ds:0x8049ae0
push   0x68
jmp    804846c <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff0
push   eax
push   esp
push   edx
push   0x804893c
push   0x8048444
push   ecx
push   esi
push   0x8048640
call   80484ec <__libc_start_main@plt>
hlt    
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048590 <call_gmon_start+0xc>
pop    ebx
add    ebx,0x1510
mov    eax,DWORD PTR [ebx+0x44]
test   eax,eax
je     80485a3 <call_gmon_start+0x1f>
call   eax
pop    ebx
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
cmp    DWORD PTR ds:0x8049a88,0x0
jne    80485fd <__do_global_dtors_aux+0x4d>
jmp    80485d3 <__do_global_dtors_aux+0x23>
mov    eax,ds:0x8049a84
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049a84,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049a84
cmp    DWORD PTR [eax],0x0
jne    80485c1 <__do_global_dtors_aux+0x11>
mov    eax,0x80484bc
test   eax,eax
je     80485f3 <__do_global_dtors_aux+0x43>
add    esp,0xfffffff4
push   0x8049a8c
call   80484bc <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049a88,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,0x804847c
test   eax,eax
je     8048629 <frame_dummy+0x21>
add    esp,0xfffffff8
push   0x8049b88
push   0x8049a8c
call   804847c <__register_frame_info@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x428
add    esp,0xfffffffc
push   0x0
push   0x1
push   0x2
call   804853c <socket@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x8],eax
add    esp,0xfffffff8
push   0x1
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   80484ac <listen@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x414],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x414]
push   eax
lea    eax,[ebp-0x410]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804850c <getsockname@plt>
add    esp,0x10
mov    eax,eax
test   eax,eax
jne    80486c8 <main+0x88>
add    esp,0xfffffff8
movzx  eax,WORD PTR [ebp-0x40e]
add    esp,0xfffffff4
push   eax
call   80484cc <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
push   0x8048980
call   80484fc <printf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x414],0x10
add    esp,0xfffffffc
lea    eax,[ebp-0x414]
push   eax
lea    eax,[ebp-0x400]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804849c <accept@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
add    esp,0xfffffff8
movzx  eax,WORD PTR [ebp-0x3fe]
add    esp,0xfffffff4
push   eax
call   80484cc <ntohs@plt>
add    esp,0x10
mov    eax,eax
mov    edx,eax
movzx  eax,dx
push   eax
mov    eax,DWORD PTR [ebp-0x3fc]
shr    eax,0x18
mov    edx,eax
movzx  edx,dl
push   edx
mov    eax,DWORD PTR [ebp-0x3fc]
shr    eax,0x10
mov    edx,eax
movzx  edx,dl
push   edx
mov    eax,DWORD PTR [ebp-0x3fc]
shr    eax,0x8
mov    edx,eax
movzx  edx,dl
push   edx
mov    eax,DWORD PTR [ebp-0x3fc]
and    eax,0xff
push   eax
push   0x80489a0
call   80484fc <printf@plt>
add    esp,0x20
push   0x0
push   0x3e8
lea    eax,[ebp-0x3f0]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804852c <recv@plt>
add    esp,0x10
mov    eax,eax
mov    DWORD PTR [ebp-0x41c],eax
add    esp,0xfffffff8
mov    eax,DWORD PTR [ebp-0x41c]
push   eax
push   0x80489c9
call   80484fc <printf@plt>
add    esp,0x10
cmp    DWORD PTR [ebp-0x41c],0x0
jle    8048856 <main+0x216>
mov    al,BYTE PTR [ebp-0x3f0]
cmp    al,0x41
je     80487b1 <main+0x171>
cmp    al,0x58
je     8048800 <main+0x1c0>
jmp    8048856 <main+0x216>
mov    DWORD PTR [ebp-0x420],0x1
add    esp,0xfffffff8
lea    eax,[ebp-0x418]
push   eax
mov    eax,DWORD PTR [ebp-0x420]
push   eax
call   804888c <vulnerable>
add    esp,0x10
push   0x0
push   0x4
lea    eax,[ebp-0x418]
push   eax
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804851c <send@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x80489db
call   80484fc <printf@plt>
add    esp,0x10
jmp    8048856 <main+0x216>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0x420],0x0
add    esp,0xfffffff4
push   0x80489f0
call   80484fc <printf@plt>
add    esp,0x10
lea    eax,[ebp-0x3f0]
mov    edx,DWORD PTR [ebp-0x41c]
mov    BYTE PTR [edx+eax*1],0x0
add    esp,0xfffffff8
lea    eax,[ebp-0x3f0]
lea    edx,[eax+0x1]
push   edx
mov    eax,DWORD PTR [ebp-0x420]
push   eax
call   804888c <vulnerable>
add    esp,0x10
add    esp,0xfffffff4
push   0x8048a00
call   80484fc <printf@plt>
add    esp,0x10
cmp    DWORD PTR [ebp-0x41c],0x0
jg     8048861 <main+0x221>
jmp    8048866 <main+0x226>
jmp    8048758 <main+0x118>
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   804848c <close@plt>
add    esp,0x10
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   804848c <close@plt>
add    esp,0x10
xor    eax,eax
jmp    8048888 <main+0x248>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x138
cmp    DWORD PTR [ebp+0x8],0x1
jne    80488c0 <vulnerable+0x34>
mov    eax,DWORD PTR [ebp+0xc]
lea    edx,[ebp-0x12c]
mov    DWORD PTR [eax],edx
add    esp,0xfffffff8
lea    eax,[ebp-0x12c]
push   eax
push   0x8048a4d
call   80484fc <printf@plt>
add    esp,0x10
jmp    8048908 <vulnerable+0x7c>
nop
add    esp,0xfffffff8
add    esp,0xfffffff4
mov    eax,DWORD PTR [ebp+0xc]
push   eax
call   80484dc <strlen@plt>
add    esp,0x10
mov    eax,eax
push   eax
push   0x80489c9
call   80484fc <printf@plt>
add    esp,0x10
add    esp,0xfffffff8
mov    eax,DWORD PTR [ebp+0xc]
push   eax
lea    eax,[ebp-0x12c]
push   eax
call   804854c <strcpy@plt>
add    esp,0x10
add    esp,0xfffffff4
push   0x8048a61
call   80484fc <printf@plt>
add    esp,0x10
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
mov    ebx,0x8049a90
cmp    DWORD PTR ds:0x8049a90,0xffffffff
je     8048931 <__do_global_ctors_aux+0x21>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8048925 <__do_global_ctors_aux+0x15>
pop    ebx
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x14
push   ebx
call   8048948 <_fini+0xc>
pop    ebx
add    ebx,0x1158
nop
call   80485b0 <__do_global_dtors_aux>
pop    ebx
leave  
ret    
