call fcn.00401fce
jmp 0x401de0
pop edx
pop eax
pop ecx
xchg edi, eax
pushal
mov dl, byte [esp + 0x20]
jmp 0x401ed3
pushal
push 0x3f
mov esi, dword [arg_28h]
mov edi, dword [arg_30h]
or ebp, 0xffffffff
jmp 0x401e01
nop
nop
nop
nop
nop
nop
nop
mov al, byte [esi]
inc esi
mov byte [edi], al
inc edi
add ebx, ebx
jne 0x401e08
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
mov al, byte [edi]
jb 0x401df7
mov eax, 1
add ebx, ebx
jne 0x401e1c
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
adc eax, eax
add ebx, ebx
jae 0x401e11
jne 0x401e2d
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
jae 0x401e11
xor ecx, ecx
sub eax, 3
jb 0x401e41
shl eax, 8
mov al, byte [esi]
inc esi
xor eax, 0xffffffff
je 0x401eb5
mov ebp, eax
add ebx, ebx
jne 0x401e4c
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
adc ecx, ecx
add ebx, ebx
jne 0x401e59
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
adc ecx, ecx
jne 0x401e7d
inc ecx
add ebx, ebx
jne 0x401e69
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
adc ecx, ecx
add ebx, ebx
jae 0x401e5e
jne 0x401e7a
mov ebx, dword [esi]
sub esi, 0xfffffffc
adc ebx, ebx
jae 0x401e5e
add ecx, 2
cmp ebp, 0xfffff300
adc ecx, 1
lea edx, [edi + ebp]
cmp ebp, 0xfffffffc
mov al, byte [edi + ecx]
jbe 0x401e9f
mov al, byte [edx]
inc edx
mov byte [edi], al
inc edi
dec ecx
jne 0x401e91
jmp 0x401dfd
mov eax, dword [edx]
add edx, 4
mov dword [edi], eax
add edi, 4
sub ecx, 4
ja 0x401e9f
add edi, ecx
jmp 0x401dfd
mov edx, dword [arg_28h]
add edx, dword [arg_2ch]
cmp esi, edx
je 0x401ec2
dec eax
sub edi, dword [arg_30h]
mov edx, dword [arg_34h]
mov dword [edx], edi
pop edx
mov dword [var_1ch], eax
popal
ret
pop ebp
call fcn.00401fa1
test eax, 0x88000005
add al, 0
add byte [edx], al
inc esi
add byte [eax], al
pop esi
cld
lodsd eax, dword [esi]
push eax
push esp
mov eax, 0x400000
push eax
xor ecx, ecx
push ecx
push ecx
mov ch, 0x10
push 0x32
push 7
push ecx
push eax
mov ebx, esp
push 0x5a
pop eax
int 0x80
xchg ebx, eax
mov bh, 0x10
add esp, 0x18
lodsd eax, dword [esi]
push eax
lodsd eax, dword [esi]
push esi
call ebp
pop eax
pop eax
ret
push ebp
mov ebp, esp
sub esp, 8
call 0x58461843
fidiv dword [ebx + 0x77]
call dword [edx]
pop eax
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
mov edi, dword [arg_8h]
mov esi, dword [edi + 4]
mov ecx, dword [arg_ch]
mov eax, dword [var_1h]
