push   ebp
mov    ebp,esp
push   ebx
call   80483f1 <_init+0x9>
pop    ebx
add    ebx,0x16c7
cmp    DWORD PTR [ebx+0x40],0x0
je     8048406 <_init+0x1e>
call   0 <_init-0x80483e8>
mov    esi,esi
call   8048590 <frame_dummy>
call   80489a0 <__do_global_ctors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x8049abc
jmp    DWORD PTR ds:0x8049ac0
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x8049ac4
push   0x0
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ac8
push   0x8
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049acc
push   0x10
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ad0
push   0x18
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ad4
push   0x20
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ad8
push   0x28
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049adc
push   0x30
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ae0
push   0x38
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ae4
push   0x40
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049ae8
push   0x48
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049aec
push   0x50
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049af0
push   0x58
jmp    8048418 <.plt>
jmp    DWORD PTR ds:0x8049af4
push   0x60
jmp    8048418 <.plt>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x80489d8
push   0x80483e8
push   ecx
push   esi
push   0x8048630
call   8048478 <__libc_start_main@plt>
hlt    
nop
nop
............
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x8049aa0,0x0
jne    8048574 <__do_global_dtors_aux+0x44>
jmp    804854d <__do_global_dtors_aux+0x1d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x8049a9c,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x8049a9c
cmp    DWORD PTR [eax],0x0
jne    8048540 <__do_global_dtors_aux+0x10>
mov    eax,0x8048458
test   eax,eax
je     804856a <__do_global_dtors_aux+0x3a>
push   0x8049aa4
call   8048458 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x8049aa0,0x1
mov    esp,ebp
pop    ebp
ret    
nop
lea    esi,[esi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048428
test   eax,eax
je     80485ab <frame_dummy+0x1b>
push   0x8049b9c
push   0x8049aa4
call   8048428 <__register_frame_info@plt>
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
push   eax
call   80484a8 <gethostbyname@plt>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x4],eax
cmp    DWORD PTR [ebp-0x4],0x0
jne    80485f0 <resolve+0x30>
mov    eax,0xffffffff
jmp    8048620 <resolve+0x60>
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0xc]
push   edx
mov    eax,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [eax+0x10]
mov    eax,DWORD PTR [edx]
push   eax
lea    eax,[ebp-0x8]
push   eax
call   8048498 <memcpy@plt>
add    esp,0xc
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,edx
jmp    8048620 <resolve+0x60>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x60c
mov    DWORD PTR [ebp-0x28],0x0
cmp    DWORD PTR [ebp+0x8],0x2
jg     8048670 <main+0x40>
push   0x8048a20
call   8048488 <printf@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048a43
call   8048488 <printf@plt>
add    esp,0x8
mov    eax,0x1
jmp    8048900 <main+0x2d0>
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
call   80485c0 <resolve>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x1c],eax
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
call   80485c0 <resolve>
add    esp,0x4
mov    eax,eax
mov    DWORD PTR [ebp-0x20],eax
push   0x5dc
push   0x0
lea    eax,[ebp-0x60c]
push   eax
call   80484d8 <memset@plt>
add    esp,0xc
lea    ecx,[ebp-0x60c]
mov    DWORD PTR [ebp-0x14],ecx
lea    eax,[ebp-0x60c]
lea    ecx,[eax+0x14]
mov    DWORD PTR [ebp-0x18],ecx
mov    eax,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [ebp-0xc],eax
mov    WORD PTR [ebp-0x10],0x2
mov    eax,DWORD PTR [ebp-0x14]
and    BYTE PTR [eax],0xf0
or     BYTE PTR [eax],0x5
mov    eax,DWORD PTR [ebp-0x14]
and    BYTE PTR [eax],0xf
or     BYTE PTR [eax],0x40
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x1],0x0
push   0x2ab5
call   80484c8 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x2],ax
push   0xbe08
call   80484c8 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x4],ax
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x8],0x40
mov    eax,DWORD PTR [ebp-0x14]
mov    BYTE PTR [eax+0x9],0x2
push   0x14
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8048910 <in_chksum>
add    esp,0x8
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0xa],ax
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebp-0x20]
mov    DWORD PTR [eax+0xc],edx
mov    eax,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [eax+0x10],edx
push   0xff
push   0x3
push   0x2
call   80484e8 <socket@plt>
add    esp,0xc
mov    eax,eax
mov    DWORD PTR [ebp-0x24],eax
cmp    DWORD PTR [ebp-0x24],0xffffffff
jne    8048780 <main+0x150>
mov    eax,0x1
jmp    8048900 <main+0x2d0>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x8
mov    edx,DWORD PTR [eax]
push   edx
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x4
mov    edx,DWORD PTR [eax]
push   edx
push   0x8048a60
call   8048488 <printf@plt>
add    esp,0xc
mov    DWORD PTR [ebp-0x2c],0x0
mov    esi,esi
cmp    DWORD PTR [ebp-0x2c],0x1
jle    80487c0 <main+0x190>
jmp    80488f0 <main+0x2c0>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    DWORD PTR [ebp-0x30],0xdc
push   0x73a
call   80484c8 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
mov    DWORD PTR [ebp-0x28],0x0
push   0x10
lea    edx,[ebp-0x10]
mov    eax,edx
push   eax
push   0x0
mov    eax,DWORD PTR [ebp-0x30]
push   eax
lea    eax,[ebp-0x60c]
push   eax
mov    eax,DWORD PTR [ebp-0x24]
push   eax
call   8048448 <sendto@plt>
add    esp,0x18
mov    eax,eax
cmp    eax,0xffffffff
jne    8048830 <main+0x200>
push   0x8048a80
call   8048438 <perror@plt>
add    esp,0x4
push   0xffffffff
call   80484b8 <exit@plt>
add    esp,0x4
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,edx
mov    dx,WORD PTR [eax+0x6]
push   edx
call   8048468 <ntohs@plt>
add    esp,0x4
mov    eax,eax
cmp    ax,0x2000
jne    8048850 <main+0x220>
jmp    80488e0 <main+0x2b0>
nop
mov    DWORD PTR [ebp-0x30],0x5dc
cmp    DWORD PTR [ebp-0x28],0x0
jne    8048880 <main+0x250>
push   0x2681
call   80484c8 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
jmp    80488b3 <main+0x283>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x14]
xor    edx,edx
mov    dx,WORD PTR [eax+0x6]
push   edx
call   8048468 <ntohs@plt>
add    esp,0x4
mov    eax,eax
mov    edx,eax
add    edx,0xffffff47
xor    eax,eax
mov    ax,dx
push   eax
call   80484c8 <htons@plt>
add    esp,0x4
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0x6],ax
push   0x14
mov    eax,DWORD PTR [ebp-0x14]
push   eax
call   8048910 <in_chksum>
add    esp,0x8
mov    eax,eax
mov    edx,DWORD PTR [ebp-0x14]
mov    WORD PTR [edx+0xa],ax
inc    DWORD PTR [ebp-0x28]
jmp    80487e4 <main+0x1b4>
lea    esi,[esi+eiz*1+0x0]
lea    edi,[edi+eiz*1+0x0]
inc    DWORD PTR [ebp-0x2c]
jmp    80487a8 <main+0x178>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
jmp    8048900 <main+0x2d0>
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
mov    esp,ebp
pop    ebp
ret    
lea    esi,[esi+0x0]
lea    edi,[edi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0xc]
xor    ecx,ecx
mov    WORD PTR [ebp-0x2],0x0
nop
cmp    edx,0x1
jg     8048930 <in_chksum+0x20>
jmp    8048950 <in_chksum+0x40>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp+0x8]
xor    ebx,ebx
mov    bx,WORD PTR [eax]
add    ecx,ebx
add    DWORD PTR [ebp+0x8],0x2
add    edx,0xfffffffe
jmp    8048924 <in_chksum+0x14>
lea    esi,[esi+0x0]
lea    edi,[edi+eiz*1+0x0]
cmp    edx,0x1
jne    8048965 <in_chksum+0x55>
mov    eax,DWORD PTR [ebp+0x8]
mov    bl,BYTE PTR [eax]
mov    BYTE PTR [ebp-0x2],bl
xor    eax,eax
mov    ax,WORD PTR [ebp-0x2]
add    ecx,eax
mov    eax,ecx
sar    eax,0x10
mov    ebx,ecx
and    ebx,0xffff
lea    ecx,[ebx+eax*1]
mov    eax,ecx
sar    eax,0x10
add    ecx,eax
mov    esi,ecx
not    si
mov    WORD PTR [ebp-0x2],si
xor    ebx,ebx
mov    bx,WORD PTR [ebp-0x2]
mov    eax,ebx
jmp    804898f <in_chksum+0x7f>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
mov    esp,ebp
pop    ebp
ret    
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x8049aa8
cmp    DWORD PTR ds:0x8049aa8,0xffffffff
je     80489c0 <__do_global_ctors_aux+0x20>
mov    esi,esi
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    80489b4 <__do_global_ctors_aux+0x14>
mov    ebx,DWORD PTR [ebp-0x4]
mov    esp,ebp
pop    ebp
ret    
mov    esi,esi
lea    edi,[edi+eiz*1+0x0]
push   ebp
mov    ebp,esp
mov    esp,ebp
pop    ebp
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
call   80489e1 <_fini+0x9>
pop    ebx
add    ebx,0x10d7
call   8048530 <__do_global_dtors_aux>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
