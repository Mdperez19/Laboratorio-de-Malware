push   ebp
mov    ebp,esp
push   ebx
call   8048e69 <readlink@plt-0x37>
pop    ebx
add    ebx,0x135bb
cmp    DWORD PTR [ebx+0x12c],0x0
je     8048e7e <readlink@plt-0x22>
call   0 <readlink@plt-0x8048ea0>
mov    esi,esi
call   80493a0 <strcpy@plt+0x90>
call   80544f0 <__divdi3@@Base+0x1c0>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   DWORD PTR ds:0x805c428
jmp    DWORD PTR ds:0x805c42c
add    BYTE PTR [eax],al
jmp    DWORD PTR ds:0x805c430
push   0x0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c434
push   0x8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c438
push   0x10
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c43c
push   0x18
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c440
push   0x20
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c444
push   0x28
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c448
push   0x30
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c44c
push   0x38
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c450
push   0x40
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c454
push   0x48
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c458
push   0x50
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c45c
push   0x58
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c460
push   0x60
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c464
push   0x68
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c468
push   0x70
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c46c
push   0x78
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c470
push   0x80
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c474
push   0x88
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c478
push   0x90
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c47c
push   0x98
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c480
push   0xa0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c484
push   0xa8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c488
push   0xb0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c48c
push   0xb8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c490
push   0xc0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c494
push   0xc8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c498
push   0xd0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c49c
push   0xd8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4a0
push   0xe0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4a4
push   0xe8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4a8
push   0xf0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4ac
push   0xf8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4b0
push   0x100
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4b4
push   0x108
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4b8
push   0x110
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4bc
push   0x118
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4c0
push   0x120
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4c4
push   0x128
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4c8
push   0x130
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4cc
push   0x138
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4d0
push   0x140
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4d4
push   0x148
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4d8
push   0x150
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4dc
push   0x158
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4e0
push   0x160
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4e4
push   0x168
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4e8
push   0x170
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4ec
push   0x178
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4f0
push   0x180
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4f4
push   0x188
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4f8
push   0x190
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c4fc
push   0x198
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c500
push   0x1a0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c504
push   0x1a8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c508
push   0x1b0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c50c
push   0x1b8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c510
push   0x1c0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c514
push   0x1c8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c518
push   0x1d0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c51c
push   0x1d8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c520
push   0x1e0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c524
push   0x1e8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c528
push   0x1f0
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c52c
push   0x1f8
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c530
push   0x200
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c534
push   0x208
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c538
push   0x210
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c53c
push   0x218
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c540
push   0x220
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c544
push   0x228
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c548
push   0x230
jmp    8048e90 <readlink@plt-0x10>
jmp    DWORD PTR ds:0x805c54c
push   0x238
jmp    8048e90 <readlink@plt-0x10>
xor    ebp,ebp
pop    esi
mov    ecx,esp
and    esp,0xfffffff8
push   eax
push   esp
push   edx
push   0x805451c
push   0x8048e60
push   ecx
push   esi
push   0x80503e4
call   80490f0 <__libc_start_main@plt>
hlt    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x805c094,0x0
jne    8049394 <strcpy@plt+0x84>
jmp    804936d <strcpy@plt+0x5d>
mov    esi,esi
lea    edx,[eax+0x4]
mov    DWORD PTR ds:0x805c090,edx
mov    eax,DWORD PTR [eax]
call   eax
mov    eax,ds:0x805c090
cmp    DWORD PTR [eax],0x0
jne    8049360 <strcpy@plt+0x50>
mov    eax,0x8049010
test   eax,eax
je     804938a <strcpy@plt+0x7a>
push   0x805c408
call   8049010 <__deregister_frame_info@plt>
mov    DWORD PTR ds:0x805c094,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,0x8048f20
test   eax,eax
je     80493bb <strcpy@plt+0xab>
push   0x805c60c
push   0x805c408
call   8048f20 <__register_frame_info@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
mov    esi,DWORD PTR [ebp+0x10]
xor    ecx,ecx
cmp    ecx,esi
jae    80494a0 <strcpy@plt+0x190>
mov    bl,BYTE PTR [edi]
inc    edi
movzx  eax,bl
mov    al,BYTE PTR [eax+0x80547a0]
cmp    al,0x3e
je     8049462 <strcpy@plt+0x152>
jg     8049411 <strcpy@plt+0x101>
cmp    al,0x2a
je     8049420 <strcpy@plt+0x110>
jg     8049407 <strcpy@plt+0xf7>
cmp    al,0x26
je     8049430 <strcpy@plt+0x120>
jmp    80493e1 <strcpy@plt+0xd1>
cmp    al,0x2d
je     8049425 <strcpy@plt+0x115>
cmp    al,0x3c
je     8049450 <strcpy@plt+0x140>
jmp    80493e1 <strcpy@plt+0xd1>
cmp    al,0x5a
je     80494a0 <strcpy@plt+0x190>
cmp    al,0x71
je     8049474 <strcpy@plt+0x164>
jmp    80493e1 <strcpy@plt+0xd1>
nop
inc    ecx
mov    BYTE PTR [edx],bl
jmp    8049494 <strcpy@plt+0x184>
inc    ecx
mov    BYTE PTR [edx],0x3f
jmp    8049494 <strcpy@plt+0x184>
nop
lea    esi,[esi+eiz*1+0x0]
lea    eax,[ecx+0x5]
cmp    eax,esi
ja     80494a0 <strcpy@plt+0x190>
mov    ecx,eax
mov    BYTE PTR [edx],0x26
inc    edx
mov    BYTE PTR [edx],0x61
inc    edx
mov    BYTE PTR [edx],0x6d
inc    edx
mov    BYTE PTR [edx],0x70
jmp    8049490 <strcpy@plt+0x180>
lea    esi,[esi+0x0]
lea    eax,[ecx+0x4]
cmp    eax,esi
ja     80494a0 <strcpy@plt+0x190>
mov    ecx,eax
mov    BYTE PTR [edx],0x26
inc    edx
mov    BYTE PTR [edx],0x6c
jmp    804948c <strcpy@plt+0x17c>
lea    eax,[ecx+0x4]
cmp    eax,esi
ja     80494a0 <strcpy@plt+0x190>
mov    ecx,eax
mov    BYTE PTR [edx],0x26
inc    edx
mov    BYTE PTR [edx],0x67
jmp    804948c <strcpy@plt+0x17c>
lea    eax,[ecx+0x6]
cmp    eax,esi
ja     80494a0 <strcpy@plt+0x190>
mov    ecx,eax
mov    BYTE PTR [edx],0x26
inc    edx
mov    BYTE PTR [edx],0x71
inc    edx
mov    BYTE PTR [edx],0x75
inc    edx
mov    BYTE PTR [edx],0x6f
inc    edx
mov    BYTE PTR [edx],0x74
inc    edx
mov    BYTE PTR [edx],0x3b
inc    edx
jmp    80493e1 <strcpy@plt+0xd1>
lea    esi,[esi+0x0]
mov    BYTE PTR [edx],0x0
mov    eax,ecx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
xor    ebx,ebx
cmp    ebx,edi
jae    804955e <strcpy@plt+0x24e>
lea    esi,[esi+eiz*1+0x0]
mov    cl,BYTE PTR [esi]
mov    BYTE PTR [ebp-0x4],cl
inc    esi
movzx  eax,cl
mov    al,BYTE PTR [eax+0x8054560]
mov    BYTE PTR [ebp-0x5],al
cmp    al,0x2d
je     8049500 <strcpy@plt+0x1f0>
jg     80494f0 <strcpy@plt+0x1e0>
cmp    al,0x2a
je     80494f8 <strcpy@plt+0x1e8>
jmp    8049543 <strcpy@plt+0x233>
mov    esi,esi
cmp    BYTE PTR [ebp-0x5],0x5a
jne    8049543 <strcpy@plt+0x233>
jmp    804955e <strcpy@plt+0x24e>
inc    ebx
mov    cl,BYTE PTR [ebp-0x4]
jmp    8049553 <strcpy@plt+0x243>
mov    esi,esi
lea    eax,[ebx+0x4]
cmp    eax,edi
ja     804955e <strcpy@plt+0x24e>
mov    ebx,eax
mov    BYTE PTR [edx],0x5c
inc    edx
mov    al,BYTE PTR [ebp-0x4]
shr    al,0x6
and    eax,0xff
mov    al,BYTE PTR [eax+0x8054661]
mov    BYTE PTR [edx],al
inc    edx
mov    al,BYTE PTR [ebp-0x4]
shr    al,0x3
and    eax,0x7
mov    al,BYTE PTR [eax+0x8054661]
mov    BYTE PTR [edx],al
inc    edx
mov    al,BYTE PTR [ebp-0x4]
and    eax,0x7
mov    al,BYTE PTR [eax+0x8054661]
mov    BYTE PTR [edx],al
jmp    8049555 <strcpy@plt+0x245>
lea    eax,[ebx+0x2]
cmp    eax,edi
ja     804955e <strcpy@plt+0x24e>
mov    ebx,eax
mov    BYTE PTR [edx],0x5c
inc    edx
mov    cl,BYTE PTR [ebp-0x5]
mov    BYTE PTR [edx],cl
inc    edx
cmp    ebx,edi
jb     80494d0 <strcpy@plt+0x1c0>
mov    BYTE PTR [edx],0x0
mov    eax,ebx
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
xor    edx,edx
cmp    edx,edi
jae    80495b7 <strcpy@plt+0x2a7>
mov    bl,BYTE PTR [esi]
inc    esi
movzx  eax,bl
mov    al,BYTE PTR [eax+0x8054680]
cmp    al,0x2d
je     80495b0 <strcpy@plt+0x2a0>
jg     80495a0 <strcpy@plt+0x290>
cmp    al,0x2a
je     80495a6 <strcpy@plt+0x296>
jmp    804957d <strcpy@plt+0x26d>
lea    esi,[esi+eiz*1+0x0]
cmp    al,0x5a
jne    804957d <strcpy@plt+0x26d>
jmp    80495b7 <strcpy@plt+0x2a7>
inc    edx
mov    BYTE PTR [ecx],bl
jmp    80495b4 <strcpy@plt+0x2a4>
nop
lea    esi,[esi+eiz*1+0x0]
inc    edx
mov    BYTE PTR [ecx],0x3f
inc    ecx
jmp    804957d <strcpy@plt+0x26d>
mov    BYTE PTR [ecx],0x0
mov    eax,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x10]
mov    edx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
xor    ecx,ecx
cmp    ecx,edi
jae    8049607 <strcpy@plt+0x2f7>
mov    bl,BYTE PTR [esi]
inc    esi
movzx  eax,bl
mov    al,BYTE PTR [eax+0x8054680]
cmp    al,0x2d
je     8049600 <strcpy@plt+0x2f0>
jg     80495f1 <strcpy@plt+0x2e1>
cmp    al,0x2a
je     80495f7 <strcpy@plt+0x2e7>
jmp    80495d5 <strcpy@plt+0x2c5>
cmp    al,0x5a
jne    80495d5 <strcpy@plt+0x2c5>
jmp    8049607 <strcpy@plt+0x2f7>
inc    ecx
mov    BYTE PTR [edx],bl
jmp    8049604 <strcpy@plt+0x2f4>
lea    esi,[esi+eiz*1+0x0]
inc    ecx
mov    BYTE PTR [edx],0x3f
inc    edx
jmp    80495d5 <strcpy@plt+0x2c5>
mov    BYTE PTR [edx],0x0
mov    eax,ecx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
xor    esi,esi
jmp    8049694 <strcpy@plt+0x384>
mov    ebx,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x4],ebx
sub    DWORD PTR [ebp-0x4],esi
mov    edx,DWORD PTR [ebp+0x8]
add    edx,esi
mov    edi,eax
xor    ecx,ecx
cmp    ecx,DWORD PTR [ebp-0x4]
jae    8049670 <strcpy@plt+0x360>
mov    bl,BYTE PTR [edi]
mov    BYTE PTR [ebp-0x5],bl
inc    edi
movzx  eax,bl
mov    al,BYTE PTR [eax+0x8054680]
cmp    al,0x2d
je     8049668 <strcpy@plt+0x358>
jg     8049653 <strcpy@plt+0x343>
cmp    al,0x2a
je     8049660 <strcpy@plt+0x350>
jmp    8049633 <strcpy@plt+0x323>
cmp    al,0x5a
jne    8049633 <strcpy@plt+0x323>
jmp    8049670 <strcpy@plt+0x360>
lea    esi,[esi+eiz*1+0x0]
inc    ecx
mov    bl,BYTE PTR [ebp-0x5]
mov    BYTE PTR [edx],bl
jmp    804966c <strcpy@plt+0x35c>
inc    ecx
mov    BYTE PTR [edx],0x3f
inc    edx
jmp    8049633 <strcpy@plt+0x323>
nop
mov    BYTE PTR [edx],0x0
add    esi,ecx
mov    eax,DWORD PTR [ebp+0x10]
sub    eax,esi
cmp    eax,0x1
jbe    8049690 <strcpy@plt+0x380>
mov    ebx,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [ebx+0x4],0x0
je     8049690 <strcpy@plt+0x380>
mov    ebx,DWORD PTR [ebp+0x8]
mov    BYTE PTR [esi+ebx*1],0x20
inc    esi
add    DWORD PTR [ebp+0xc],0x4
mov    ebx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    8049621 <strcpy@plt+0x311>
mov    eax,esi
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x10
push   ebx
lea    ebx,[ebp-0x8]
push   ebx
push   0x5413
push   0x1
call   8049270 <ioctl@plt>
add    esp,0xc
cmp    eax,0xffffffff
je     80496f3 <strcpy@plt+0x3e3>
mov    ax,WORD PTR [ebx+0x2]
test   ax,ax
je     80496f3 <strcpy@plt+0x3e3>
cmp    WORD PTR [ebp-0x8],0x0
je     80496f3 <strcpy@plt+0x3e3>
movzx  eax,WORD PTR [ebx+0x2]
mov    ds:0x805c104,eax
movzx  eax,WORD PTR [ebp-0x8]
mov    ds:0x805c108,eax
jmp    8049707 <strcpy@plt+0x3f7>
mov    DWORD PTR ds:0x805c104,0x50
mov    DWORD PTR ds:0x805c108,0x18
push   0x80548d1
call   8048f80 <getenv@plt>
mov    edx,eax
add    esp,0x4
test   edx,edx
je     804974c <strcpy@plt+0x43c>
cmp    BYTE PTR [edx],0x0
je     804974c <strcpy@plt+0x43c>
lea    eax,[ebp-0xc]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0xc]
cmp    BYTE PTR [eax],0x0
jne    804974c <strcpy@plt+0x43c>
test   edx,edx
jle    804974c <strcpy@plt+0x43c>
cmp    edx,0xc7fff
jg     804974c <strcpy@plt+0x43c>
mov    DWORD PTR ds:0x805c104,edx
push   0x80548d9
call   8048f80 <getenv@plt>
mov    edx,eax
add    esp,0x4
test   edx,edx
je     8049791 <strcpy@plt+0x481>
cmp    BYTE PTR [edx],0x0
je     8049791 <strcpy@plt+0x481>
lea    eax,[ebp-0x10]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x10]
cmp    BYTE PTR [eax],0x0
jne    8049791 <strcpy@plt+0x481>
test   edx,edx
jle    8049791 <strcpy@plt+0x481>
cmp    edx,0xc7fff
jg     8049791 <strcpy@plt+0x481>
mov    DWORD PTR ds:0x805c108,edx
mov    eax,ds:0x805c104
cmp    eax,0x8
jle    80497a4 <strcpy@plt+0x494>
cmp    DWORD PTR ds:0x805c108,0x1
jg     80497bb <strcpy@plt+0x4ab>
push   DWORD PTR ds:0x805c108
push   eax
push   0x80548e0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
mov    ebx,DWORD PTR [ebp-0x14]
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x20
push   edi
push   esi
push   ebx
lea    esi,[ebp-0x10]
mov    DWORD PTR [ebp-0x18],esi
lea    eax,[ebp-0x18]
mov    DWORD PTR [ebp-0x1c],eax
mov    DWORD PTR [eax+0x4],0x0
mov    DWORD PTR ds:0x805c0fc,0x0
mov    DWORD PTR ds:0x805c100,0x0
mov    DWORD PTR ds:0x805c0a0,0x8054a43
mov    DWORD PTR ds:0x805c0a4,0x8054a48
mov    DWORD PTR ds:0x805c0a8,0x8054a4d
mov    DWORD PTR ds:0x805c0ac,0x8054a52
mov    DWORD PTR ds:0x805c0b0,0x8054a57
mov    DWORD PTR ds:0x805c118,0x0
mov    DWORD PTR ds:0x805c11c,0x0
mov    DWORD PTR ds:0x805c120,0x0
mov    DWORD PTR ds:0x805c124,0x0
push   0x8054a5c
call   8048f80 <getenv@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     8049862 <strcpy@plt+0x552>
cmp    BYTE PTR [ebx],0x0
jne    8049871 <strcpy@plt+0x561>
push   0x8054a6b
call   8048f80 <getenv@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     804987a <strcpy@plt+0x56a>
cmp    BYTE PTR [ebx],0x0
jne    804987f <strcpy@plt+0x56f>
mov    ebx,0x80549c4
push   0x8054a73
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
je     8049895 <strcpy@plt+0x585>
mov    ebx,0x8054a02
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
lea    edi,[ecx-0x1]
cmp    edi,0xf
ja     80498ee <strcpy@plt+0x5de>
push   edi
push   ebx
push   esi
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    BYTE PTR [edi+esi*1],0x0
lea    eax,[ebp-0x10]
push   eax
call   8049190 <__strdup@plt>
add    esp,0x4
mov    edx,eax
mov    DWORD PTR ds:0x805c098,edx
push   0x8049e00
push   0x8
push   0x16
push   0x8054914
mov    eax,DWORD PTR [ebp-0x1c]
push   eax
call   80492e0 <bsearch@plt>
mov    edx,eax
add    esp,0x14
test   edx,edx
jne    80498f8 <strcpy@plt+0x5e8>
mov    eax,0x8054aa0
jmp    8049b3c <strcpy@plt+0x82c>
jmp    DWORD PTR [edx+0x4]
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c0fc,0x16
mov    DWORD PTR ds:0x805c100,0x1
mov    DWORD PTR ds:0x805c0a0,0x8054ace
mov    DWORD PTR ds:0x805c0a4,0x8054ad3
mov    DWORD PTR ds:0x805c0ac,0x8054ad8
mov    DWORD PTR ds:0x805c0b0,0x8054add
jmp    8049b3a <strcpy@plt+0x82a>
mov    DWORD PTR ds:0x805c0fc,0x50
mov    DWORD PTR ds:0x805c100,0x1
jmp    8049b3a <strcpy@plt+0x82a>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0fc,0x28
mov    DWORD PTR ds:0x805c100,0x1
mov    DWORD PTR ds:0x805c118,0x8054ae2
mov    DWORD PTR ds:0x805c120,0x8054ae7
mov    DWORD PTR ds:0x805c124,0x8054aec
jmp    8049b3a <strcpy@plt+0x82a>
mov    DWORD PTR ds:0x805c0fc,0x320
jmp    8049b3a <strcpy@plt+0x82a>
push   0x8054afb
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
jne    8049b30 <strcpy@plt+0x820>
push   0x8054b02
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
jne    8049b30 <strcpy@plt+0x820>
push   0x8054af1
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
je     8049b3a <strcpy@plt+0x82a>
push   0x8054af1
call   8048f80 <getenv@plt>
add    esp,0x4
mov    edx,eax
movzx  eax,BYTE PTR [edx]
lea    ecx,[eax-0x6f]
test   ecx,ecx
jne    8049a0d <strcpy@plt+0x6fd>
movzx  eax,BYTE PTR [edx+0x1]
lea    ecx,[eax-0x6e]
test   ecx,ecx
jne    8049a0d <strcpy@plt+0x6fd>
movzx  ecx,BYTE PTR [edx+0x2]
test   ecx,ecx
jne    8049b3a <strcpy@plt+0x82a>
jmp    8049b30 <strcpy@plt+0x820>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0a0,0x8054ace
mov    DWORD PTR ds:0x805c0a4,0x8054ad3
mov    DWORD PTR ds:0x805c0ac,0x8054ad8
mov    DWORD PTR ds:0x805c0b0,0x8054add
jmp    8049b3a <strcpy@plt+0x82a>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0fc,0x22
mov    DWORD PTR ds:0x805c100,0x1
mov    DWORD PTR ds:0x805c118,0x8054b12
mov    DWORD PTR ds:0x805c11c,0x8054b18
mov    DWORD PTR ds:0x805c120,0x8054b1f
mov    DWORD PTR ds:0x805c124,0x8054b24
mov    DWORD PTR ds:0x805c0a0,0x8054b1f
mov    DWORD PTR ds:0x805c0a4,0x8054b2a
mov    DWORD PTR ds:0x805c0a8,0x8054b2f
mov    DWORD PTR ds:0x805c0ac,0x8054b34
mov    DWORD PTR ds:0x805c0b0,0x8054b39
jmp    8049b3a <strcpy@plt+0x82a>
mov    DWORD PTR ds:0x805c0fc,0x80
mov    DWORD PTR ds:0x805c100,0x1
mov    DWORD PTR ds:0x805c0a0,0x8054ace
mov    DWORD PTR ds:0x805c0a4,0x8054ad3
mov    DWORD PTR ds:0x805c0ac,0x8054ad8
mov    DWORD PTR ds:0x805c0b0,0x8054add
jmp    8049b3a <strcpy@plt+0x82a>
mov    esi,esi
push   0x8054b3e
call   8048f80 <getenv@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     8049b1f <strcpy@plt+0x80f>
mov    dl,BYTE PTR [ebx]
cmp    dl,0x30
jle    8049b1f <strcpy@plt+0x80f>
cmp    dl,0x39
jle    8049b30 <strcpy@plt+0x820>
mov    DWORD PTR ds:0x805c0fc,0x400
jmp    8049b3a <strcpy@plt+0x82a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c0fc,0x1
xor    eax,eax
lea    esp,[ebp-0x2c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x805c124
test   eax,eax
jne    8049b55 <strcpy@plt+0x845>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c120
test   eax,eax
jne    8049b64 <strcpy@plt+0x854>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c11c
test   eax,eax
jne    8049b73 <strcpy@plt+0x863>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c118
test   eax,eax
jne    8049b82 <strcpy@plt+0x872>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c0b0
test   eax,eax
jne    8049b91 <strcpy@plt+0x881>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c0ac
test   eax,eax
jne    8049ba0 <strcpy@plt+0x890>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c0a8
test   eax,eax
jne    8049baf <strcpy@plt+0x89f>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c0a4
test   eax,eax
jne    8049bbe <strcpy@plt+0x8ae>
mov    eax,0x8054b43
push   eax
mov    eax,ds:0x805c0a0
test   eax,eax
jne    8049bcd <strcpy@plt+0x8bd>
mov    eax,0x8054b43
push   eax
push   0x8054b60
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x2c
call   8054080 <strcpy@plt+0xad70>
mov    edx,DWORD PTR ds:0x805c404
mov    eax,edx
and    eax,0xff
push   eax
sar    edx,0x8
mov    eax,edx
and    eax,0xff
push   eax
sar    edx,0x8
movzx  edx,dl
push   edx
push   0x8054bce
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
push   0x2
push   0x6
push   0x8054c00
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x28
push   DWORD PTR ds:0x805c108
push   DWORD PTR ds:0x805c104
push   DWORD PTR ds:0x805c0ec
push   DWORD PTR ds:0x805c0e8
push   DWORD PTR ds:0x805c0dc
push   0x8054c40
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x8169d48
movzx  eax,BYTE PTR ds:0x805c0c4
push   eax
mov    eax,ds:0x805c0c4
mov    edx,DWORD PTR ds:0x805c0c8
shrd   eax,edx,0x8
shr    edx,0x8
and    eax,0xff
push   eax
push   DWORD PTR ds:0x805c0bc
push   DWORD PTR ds:0x805c098
push   DWORD PTR ds:0x805c0fc
push   0x8054ca0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR ds:0x805c10c
cmp    esi,0xdeadbeef
je     8049cd9 <strcpy@plt+0x9c9>
jmp    8049cd5 <strcpy@plt+0x9c5>
lea    esi,[esi+0x0]
mov    ebx,esi
mov    esi,DWORD PTR [esi]
push   DWORD PTR [ebx+0x4]
call   8049260 <free@plt>
push   ebx
call   8049260 <free@plt>
add    esp,0x8
test   esi,esi
jne    8049cc0 <strcpy@plt+0x9b0>
mov    DWORD PTR ds:0x805c10c,0x0
push   0x805c640
call   8052d20 <strcpy@plt+0x9a10>
call   80496b0 <strcpy@plt+0x3a0>
call   80497c0 <strcpy@plt+0x4b0>
mov    DWORD PTR ds:0x805c09c,0x0
mov    DWORD PTR ds:0x805c0b4,0x0
mov    DWORD PTR ds:0x805c0b8,0x0
call   8049300 <geteuid@plt>
mov    ds:0x805c0bc,eax
call   8048f10 <getpid@plt>
mov    ds:0x805c0c0,eax
mov    eax,ds:0x805c810
cdq    
mov    ds:0x805c0c4,eax
mov    DWORD PTR ds:0x805c0c8,edx
mov    DWORD PTR ds:0x805c0cc,0x0
mov    DWORD PTR ds:0x805c0d0,0x0
mov    DWORD PTR ds:0x805c0d4,0x0
mov    DWORD PTR ds:0x805c0d8,0x0
mov    DWORD PTR ds:0x805c0dc,0xffffffff
mov    DWORD PTR ds:0x805c0e0,0x0
mov    DWORD PTR ds:0x805c0e4,0x0
mov    DWORD PTR ds:0x805c0e8,0x1
mov    DWORD PTR ds:0x805c0ec,0x50
mov    DWORD PTR ds:0x805c0f0,0x0
mov    DWORD PTR ds:0x805c0f4,0x0
mov    DWORD PTR ds:0x805c0f8,0x0
mov    DWORD PTR ds:0x805c10c,0x0
mov    DWORD PTR ds:0x805c110,0x0
mov    DWORD PTR ds:0x805c114,0x0
mov    DWORD PTR ds:0x805c128,0x0
mov    DWORD PTR ds:0x805c12c,0x0
mov    DWORD PTR ds:0x805c130,0x0
mov    DWORD PTR ds:0x805c134,0x0
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
push   DWORD PTR [edx]
call   80491f0 <strcasecmp@plt>
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR ds:0x805c10c
jmp    804a127 <strcpy@plt+0xe17>
mov    eax,0x1
jmp    804a131 <strcpy@plt+0xe21>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [esi+0xc]
dec    eax
cmp    eax,0xc
ja     8049e50 <strcpy@plt+0xb40>
jmp    DWORD PTR [eax*4+0x80553b0]
push   0x8055380
call   8049120 <printf@plt>
add    esp,0x4
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1a0]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049e83 <strcpy@plt+0xb73>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1a8]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049eb6 <strcpy@plt+0xba6>
jmp    804a125 <strcpy@plt+0xe15>
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1b0]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049ef1 <strcpy@plt+0xbe1>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1b8]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049f28 <strcpy@plt+0xc18>
jmp    804a125 <strcpy@plt+0xe15>
mov    esi,esi
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1a4]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049f61 <strcpy@plt+0xc51>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1ac]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049f98 <strcpy@plt+0xc88>
jmp    804a125 <strcpy@plt+0xe15>
mov    esi,esi
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1b4]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    8049fd1 <strcpy@plt+0xcc1>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1bc]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    804a008 <strcpy@plt+0xcf8>
jmp    804a125 <strcpy@plt+0xe15>
mov    esi,esi
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1c8]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    804a041 <strcpy@plt+0xd31>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1c0]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    804a078 <strcpy@plt+0xd68>
jmp    804a125 <strcpy@plt+0xe15>
mov    esi,esi
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1d0]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    804a0b1 <strcpy@plt+0xda1>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    ecx,DWORD PTR [ebp+0x8]
mov    dx,WORD PTR [ecx+0x1cc]
lea    eax,[ebx*8+0x0]
add    eax,DWORD PTR [esi+0x4]
cmp    dx,WORD PTR [eax]
je     8049e31 <strcpy@plt+0xb21>
add    eax,0xfffffff8
sub    ebx,0x1
jae    804a0e1 <strcpy@plt+0xdd1>
jmp    804a125 <strcpy@plt+0xe15>
mov    ebx,DWORD PTR [esi+0x8]
dec    ebx
cmp    ebx,0xffffffff
je     804a125 <strcpy@plt+0xe15>
mov    edi,DWORD PTR [ebp+0x8]
add    edi,0x190
push   0x8
mov    eax,DWORD PTR [esi+0x4]
lea    eax,[eax+ebx*8]
push   eax
push   edi
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
je     8049e31 <strcpy@plt+0xb21>
sub    ebx,0x1
jae    804a106 <strcpy@plt+0xdf6>
mov    esi,DWORD PTR [esi]
test   esi,esi
jne    8049e40 <strcpy@plt+0xb30>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    ebx,0x1
cmp    DWORD PTR ds:0x805c09c,0x0
jne    804a1be <strcpy@plt+0xeae>
cmp    DWORD PTR ds:0x805c110,0x0
jne    804a164 <strcpy@plt+0xe54>
cmp    DWORD PTR ds:0x805c10c,0x0
jne    804a1b2 <strcpy@plt+0xea2>
mov    ax,ds:0x805c0bc
cmp    WORD PTR [esi+0x1a8],ax
sete   al
movzx  edx,al
mov    eax,DWORD PTR [esi+0x1c0]
cmp    DWORD PTR [esi+0x1cc],eax
jne    804a188 <strcpy@plt+0xe78>
or     edx,0x2
mov    ecx,edx
mov    ax,WORD PTR [esi+0x1d0]
cmp    ax,0xffff
jne    804a19a <strcpy@plt+0xe8a>
or     ecx,0x4
cmp    ax,WORD PTR ds:0x805c0c4
jne    804a1a6 <strcpy@plt+0xe96>
or     ecx,0x8
mov    eax,ebx
shl    eax,cl
test   DWORD PTR ds:0x805c140,eax
jne    804a1be <strcpy@plt+0xeae>
push   esi
call   8049e20 <strcpy@plt+0xb10>
test   eax,eax
jne    804a1be <strcpy@plt+0xeae>
xor    ebx,ebx
cmp    DWORD PTR ds:0x805c0f8,0x0
je     804a1d7 <strcpy@plt+0xec7>
mov    al,BYTE PTR [esi+0x1dc]
cmp    al,0x52
je     804a1d7 <strcpy@plt+0xec7>
cmp    al,0x44
je     804a1d7 <strcpy@plt+0xec7>
xor    ebx,ebx
cmp    DWORD PTR ds:0x805c0f4,0x0
je     804a1e3 <strcpy@plt+0xed3>
xor    ebx,0x1
mov    eax,ebx
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x805c110
test   eax,eax
jne    804a207 <strcpy@plt+0xef7>
mov    DWORD PTR ds:0x805c140,0xaa00
jmp    804a2b0 <strcpy@plt+0xfa0>
cmp    BYTE PTR ds:0x805c0fc,0x0
jl     804a21b <strcpy@plt+0xf0b>
test   al,0xc
jne    804a21b <strcpy@plt+0xf0b>
or     al,0x2
mov    ds:0x805c110,eax
dec    eax
cmp    eax,0x12
ja     804a2a6 <strcpy@plt+0xf96>
jmp    DWORD PTR [eax*4+0x80553e4]
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0x3333
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0x303
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0x3300
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0x2222
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0xf00
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c140,0xaaaa
jmp    804a2b0 <strcpy@plt+0xfa0>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c09c,0x1
mov    DWORD PTR ds:0x805c110,0x0
jmp    804a2b0 <strcpy@plt+0xfa0>
mov    eax,0x8055340
jmp    804a2b2 <strcpy@plt+0xfa2>
lea    esi,[esi+0x0]
xor    eax,eax
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   ebx
call   804c608 <strcpy@plt+0x32f8>
mov    esi,eax
add    esp,0x4
test   esi,esi
je     804a380 <strcpy@plt+0x1070>
push   0x20
call   8048fc0 <malloc@plt>
mov    ebx,eax
mov    edx,DWORD PTR [esi+0x10]
add    esp,0x4
cmp    DWORD PTR [ebp+0xc],0x0
je     804a330 <strcpy@plt+0x1020>
mov    edi,DWORD PTR [ebp+0xc]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,edx
jge    804a30a <strcpy@plt+0xffa>
mov    ecx,edx
mov    DWORD PTR [ebx+0xc],ecx
mov    edi,DWORD PTR [ebp+0xc]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    DWORD PTR [ebx+0x4],edx
add    esp,0x4
mov    eax,DWORD PTR [ebp+0xc]
push   eax
jmp    804a353 <strcpy@plt+0x1043>
mov    DWORD PTR [ebx+0xc],edx
mov    edi,DWORD PTR [esi+0x4]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    DWORD PTR [ebx+0x4],edx
add    esp,0x4
push   DWORD PTR [esi+0x4]
push   edx
call   8049310 <strcpy@plt>
mov    eax,DWORD PTR [esi+0x8]
mov    DWORD PTR [ebx+0x8],eax
mov    eax,DWORD PTR [esi+0x14]
mov    DWORD PTR [ebx+0x10],eax
mov    eax,DWORD PTR [esi+0x18]
mov    DWORD PTR [ebx+0x14],eax
mov    eax,DWORD PTR [esi+0x1c]
mov    DWORD PTR [ebx+0x18],eax
mov    DWORD PTR [ebx],0x0
mov    eax,ebx
jmp    804a418 <strcpy@plt+0x1108>
mov    esi,esi
push   ebx
call   804c630 <strcpy@plt+0x3320>
mov    edx,eax
add    esp,0x4
test   edx,edx
je     804a400 <strcpy@plt+0x10f0>
mov    DWORD PTR [ebp-0x14],0x0
mov    ebx,DWORD PTR [edx+0x4]
mov    dl,BYTE PTR [ebx]
test   dl,dl
je     804a3f8 <strcpy@plt+0x10e8>
lea    edi,[ebp-0x10]
xor    esi,esi
test   dl,dl
je     804a3c2 <strcpy@plt+0x10b2>
cmp    dl,0x2c
je     804a3c2 <strcpy@plt+0x10b2>
mov    edx,ebx
nop
cmp    BYTE PTR [edx],0x20
je     804a3c2 <strcpy@plt+0x10b2>
inc    edx
inc    esi
mov    cl,BYTE PTR [edx]
test   cl,cl
je     804a3c2 <strcpy@plt+0x10b2>
cmp    cl,0x2c
jne    804a3b0 <strcpy@plt+0x10a0>
push   esi
push   ebx
push   edi
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    BYTE PTR [esi+edi*1],0x0
mov    eax,DWORD PTR [ebp+0xc]
push   eax
push   edi
call   804a2c0 <strcpy@plt+0xfb0>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x14]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebp-0x14],edx
add    ebx,esi
add    esp,0x8
cmp    BYTE PTR [ebx],0x0
je     804a3f8 <strcpy@plt+0x10e8>
inc    ebx
mov    al,BYTE PTR [ebx]
mov    dl,al
test   dl,dl
jne    804a3a2 <strcpy@plt+0x1092>
mov    eax,DWORD PTR [ebp-0x14]
jmp    804a418 <strcpy@plt+0x1108>
lea    esi,[esi+0x0]
push   ebx
push   0x8055443
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
call   8049290 <_exit@plt>
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [eax+0xc]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
push   DWORD PTR [eax+0xc]
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049310 <strcpy@plt>
add    esp,0x8
mov    edx,0x1
xor    ebx,ebx
mov    edi,DWORD PTR [ebp-0x4]
mov    cl,BYTE PTR [edi]
cmp    cl,0x20
je     804a488 <strcpy@plt+0x1178>
jle    804a478 <strcpy@plt+0x1168>
cmp    cl,0x2c
je     804a488 <strcpy@plt+0x1178>
cmp    cl,0x3d
je     804a493 <strcpy@plt+0x1183>
jmp    804a49c <strcpy@plt+0x118c>
test   cl,cl
je     804a488 <strcpy@plt+0x1178>
jl     804a49c <strcpy@plt+0x118c>
cmp    cl,0xa
jg     804a49c <strcpy@plt+0x118c>
cmp    cl,0x9
jl     804a49c <strcpy@plt+0x118c>
test   edx,edx
jne    804a4c3 <strcpy@plt+0x11b3>
mov    edx,0x1
jmp    804a4a3 <strcpy@plt+0x1193>
cmp    DWORD PTR ds:0x805c824,0x0
jne    804a4ac <strcpy@plt+0x119c>
test   edx,edx
je     804a4a1 <strcpy@plt+0x1191>
inc    ebx
xor    edx,edx
inc    edi
mov    al,BYTE PTR [edi]
mov    cl,al
test   cl,cl
jne    804a465 <strcpy@plt+0x1155>
test   ebx,ebx
jne    804a4f0 <strcpy@plt+0x11e0>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x80554f5
jmp    804a582 <strcpy@plt+0x1272>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x80554e0
jmp    804a582 <strcpy@plt+0x1272>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x8055520
jmp    804a582 <strcpy@plt+0x1272>
lea    esi,[esi+eiz*1+0x0]
test   edx,edx
je     804a4f8 <strcpy@plt+0x11e8>
mov    BYTE PTR [edi-0x1],0x0
mov    edi,DWORD PTR [ebp-0x4]
sub    ebx,0x1
jb     804a56d <strcpy@plt+0x125d>
push   0x8055508
push   edi
call   8049020 <strpbrk@plt>
add    esp,0x8
mov    esi,eax
test   ebx,ebx
je     804a520 <strcpy@plt+0x1210>
test   esi,esi
je     804a520 <strcpy@plt+0x1210>
mov    BYTE PTR [esi],0x0
nop
lea    esi,[esi+eiz*1+0x0]
push   0x3d
push   edi
call   8048ef0 <strchr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     804a535 <strcpy@plt+0x1225>
mov    BYTE PTR [edx],0x0
inc    edx
push   edx
push   edi
call   804a2c0 <strcpy@plt+0xfb0>
mov    ecx,eax
add    esp,0x8
test   ecx,ecx
je     804a4d6 <strcpy@plt+0x11c6>
mov    edx,ecx
cmp    DWORD PTR [ecx],0x0
je     804a557 <strcpy@plt+0x1247>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804a550 <strcpy@plt+0x1240>
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax+0x4],ecx
lea    edi,[esi+0x1]
sub    ebx,0x1
jae    804a500 <strcpy@plt+0x11f0>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    DWORD PTR ds:0x805c150,0x1
xor    eax,eax
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x8],0x0
mov    eax,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [eax+0xc]
mov    edx,edi
movsx  ecx,BYTE PTR [edi]
inc    edi
cmp    ecx,0x25
je     804a5c3 <strcpy@plt+0x12b3>
test   ecx,ecx
je     804a5d8 <strcpy@plt+0x12c8>
inc    DWORD PTR [ebp-0x8]
movsx  ecx,BYTE PTR [edi]
inc    edi
cmp    ecx,0x25
je     804a5c3 <strcpy@plt+0x12b3>
test   ecx,ecx
jne    804a5b4 <strcpy@plt+0x12a4>
jmp    804a5d8 <strcpy@plt+0x12c8>
inc    DWORD PTR [ebp-0x8]
movsx  ecx,BYTE PTR [edi]
inc    edi
test   ecx,ecx
jne    804a5a4 <strcpy@plt+0x1294>
mov    eax,0x8055560
jmp    804a73e <strcpy@plt+0x142e>
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
push   DWORD PTR [eax+0xc]
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049310 <strcpy@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [eax+0xc]
sub    DWORD PTR [ebp-0x8],0x1
jb     804a716 <strcpy@plt+0x1406>
mov    dl,BYTE PTR [edi]
cmp    dl,0x25
jne    804a663 <strcpy@plt+0x1353>
inc    edi
cmp    BYTE PTR [edi],0x25
je     804a690 <strcpy@plt+0x1380>
movsx  eax,BYTE PTR [edi]
push   eax
call   804c5c0 <strcpy@plt+0x32b0>
mov    edx,eax
inc    edi
add    esp,0x4
test   edx,edx
je     804a730 <strcpy@plt+0x1420>
push   DWORD PTR [edx+0x8]
push   DWORD PTR [edx+0x4]
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804a6f0 <strcpy@plt+0x13e0>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x80555a0
jmp    804a73e <strcpy@plt+0x142e>
xor    ecx,ecx
test   dl,dl
je     804a67c <strcpy@plt+0x136c>
mov    edx,edi
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edx],0x25
je     804a67c <strcpy@plt+0x136c>
inc    edx
inc    ecx
cmp    BYTE PTR [edx],0x0
jne    804a670 <strcpy@plt+0x1360>
mov    esi,ecx
push   esi
push   edi
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049150 <memcpy@plt>
add    esp,0xc
jmp    804a69b <strcpy@plt+0x138b>
mov    esi,esi
mov    esi,0x1
mov    eax,DWORD PTR [ebp-0x4]
mov    BYTE PTR [eax],0x25
mov    eax,DWORD PTR [ebp-0x4]
mov    BYTE PTR [esi+eax*1],0x0
add    edi,esi
push   0x20
call   8048fc0 <malloc@plt>
mov    ebx,eax
mov    DWORD PTR [ebx+0xc],esi
inc    esi
push   esi
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    DWORD PTR [ebx+0x4],edx
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x4]
push   eax
push   DWORD PTR [ebx+0x4]
call   8049310 <strcpy@plt>
add    esp,0x8
mov    DWORD PTR [ebx+0x8],0x0
mov    DWORD PTR [ebx+0x10],0x0
mov    DWORD PTR [ebx+0x14],0x3
mov    DWORD PTR [ebx+0x18],0x0
mov    DWORD PTR [ebx],0x0
mov    edx,ebx
cmp    DWORD PTR [ebx],0x0
je     804a6fe <strcpy@plt+0x13ee>
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804a6f7 <strcpy@plt+0x13e7>
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x4]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax+0x4],ebx
sub    DWORD PTR [ebp-0x8],0x1
jae    804a614 <strcpy@plt+0x1304>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    DWORD PTR ds:0x805c150,0x1
xor    eax,eax
jmp    804a73e <strcpy@plt+0x142e>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x805557f
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [eax+0xc]
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x4
mov    eax,DWORD PTR [ebp+0x8]
push   DWORD PTR [eax+0xc]
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049310 <strcpy@plt>
add    esp,0x8
mov    edx,0x1
mov    DWORD PTR [ebp-0x8],0x0
mov    ebx,DWORD PTR [ebp-0x4]
movsx  ecx,BYTE PTR [ebx]
cmp    ecx,0x2c
ja     804a7b0 <strcpy@plt+0x14a0>
jmp    DWORD PTR [ecx*4+0x8055624]
nop
test   edx,edx
jne    804a7d8 <strcpy@plt+0x14c8>
mov    edx,0x1
jmp    804a7b9 <strcpy@plt+0x14a9>
nop
lea    esi,[esi+eiz*1+0x0]
test   edx,edx
je     804a7b7 <strcpy@plt+0x14a7>
inc    DWORD PTR [ebp-0x8]
xor    edx,edx
inc    ebx
cmp    BYTE PTR [ebx],0x0
jne    804a790 <strcpy@plt+0x1480>
cmp    DWORD PTR [ebp-0x8],0x0
jne    804a803 <strcpy@plt+0x14f3>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x80555f8
jmp    804a8b8 <strcpy@plt+0x15a8>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x80555e5
jmp    804a8b8 <strcpy@plt+0x15a8>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    eax,0x8055609
jmp    804a8b8 <strcpy@plt+0x15a8>
test   edx,edx
je     804a80b <strcpy@plt+0x14fb>
mov    BYTE PTR [ebx-0x1],0x0
mov    ebx,DWORD PTR [ebp-0x4]
sub    DWORD PTR [ebp-0x8],0x1
jb     804a8a3 <strcpy@plt+0x1593>
push   0x8055508
push   ebx
call   8049020 <strpbrk@plt>
add    esp,0x8
mov    esi,eax
test   esi,esi
je     804a830 <strcpy@plt+0x1520>
mov    BYTE PTR [esi],0x0
nop
mov    edx,ebx
xor    edi,edi
cmp    BYTE PTR [ebx],0x2d
jne    804a83d <strcpy@plt+0x152d>
inc    edi
lea    edx,[ebx+0x1]
push   edx
call   804c608 <strcpy@plt+0x32f8>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     804a870 <strcpy@plt+0x1560>
push   0x20
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [edx+0x4],eax
mov    DWORD PTR [edx+0x8],edi
mov    DWORD PTR [edx],0x0
mov    ecx,edx
add    esp,0x4
jmp    804a872 <strcpy@plt+0x1562>
nop
lea    esi,[esi+eiz*1+0x0]
xor    ecx,ecx
test   ecx,ecx
je     804a7f0 <strcpy@plt+0x14e0>
mov    edx,ecx
cmp    DWORD PTR [ecx],0x0
je     804a888 <strcpy@plt+0x1578>
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804a881 <strcpy@plt+0x1571>
mov    eax,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [eax+0x8]
mov    DWORD PTR [edx],eax
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [eax+0x8],ecx
lea    ebx,[esi+0x1]
sub    DWORD PTR [ebp-0x8],0x1
jae    804a818 <strcpy@plt+0x1508>
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   8049260 <free@plt>
mov    DWORD PTR ds:0x805c14c,0x1
xor    eax,eax
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x108
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edx,0x80556d8
mov    cl,BYTE PTR ds:0x80556d8
test   cl,cl
je     804a953 <strcpy@plt+0x1643>
mov    bl,BYTE PTR [edx+0x1]
test   bl,bl
jne    804a8f8 <strcpy@plt+0x15e8>
xor    edx,edx
cmp    BYTE PTR [esi],cl
jne    804a955 <strcpy@plt+0x1645>
nop
lea    esi,[esi+eiz*1+0x0]
inc    edx
cmp    BYTE PTR [edx+esi*1],cl
je     804a8f0 <strcpy@plt+0x15e0>
jmp    804a955 <strcpy@plt+0x1645>
mov    al,BYTE PTR [edx+0x2]
mov    BYTE PTR [ebp-0x101],al
test   al,al
jne    804a920 <strcpy@plt+0x1610>
xor    edi,edi
mov    dl,BYTE PTR [esi]
jmp    804a914 <strcpy@plt+0x1604>
nop
lea    esi,[esi+eiz*1+0x0]
inc    edi
mov    dl,BYTE PTR [edi+esi*1]
cmp    dl,cl
je     804a910 <strcpy@plt+0x1600>
cmp    dl,bl
je     804a910 <strcpy@plt+0x1600>
mov    edx,edi
jmp    804a955 <strcpy@plt+0x1645>
cmp    BYTE PTR [edx+0x3],0x0
jne    804a948 <strcpy@plt+0x1638>
xor    edi,edi
mov    dl,BYTE PTR [esi]
jmp    804a934 <strcpy@plt+0x1624>
lea    esi,[esi+eiz*1+0x0]
inc    edi
mov    dl,BYTE PTR [edi+esi*1]
cmp    dl,cl
je     804a930 <strcpy@plt+0x1620>
cmp    dl,bl
je     804a930 <strcpy@plt+0x1620>
cmp    dl,BYTE PTR [ebp-0x101]
je     804a930 <strcpy@plt+0x1620>
mov    edx,edi
jmp    804a955 <strcpy@plt+0x1645>
push   edx
push   esi
call   8049200 <strspn@plt>
mov    edx,eax
jmp    804a955 <strcpy@plt+0x1645>
xor    edx,edx
mov    edi,esi
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    edx,ecx
jne    804a9ce <strcpy@plt+0x16be>
mov    ebx,0xff
lea    ecx,[ebp-0x100]
mov    edx,ecx
mov    BYTE PTR [ebx+edx*1],0x0
sub    ebx,0x1
jae    804a975 <strcpy@plt+0x1665>
mov    edx,esi
movsx  ebx,BYTE PTR [edx]
cmp    ebx,0x2d
je     804a9a4 <strcpy@plt+0x1694>
jg     804a995 <strcpy@plt+0x1685>
test   ebx,ebx
je     804a9a0 <strcpy@plt+0x1690>
cmp    ebx,0x2b
je     804a9a4 <strcpy@plt+0x1694>
jmp    804a9c8 <strcpy@plt+0x16b8>
cmp    ebx,0x50
je     804a9b8 <strcpy@plt+0x16a8>
jmp    804a9c8 <strcpy@plt+0x16b8>
lea    esi,[esi+eiz*1+0x0]
xor    eax,eax
jmp    804a9e0 <strcpy@plt+0x16d0>
movsx  ebx,BYTE PTR [edx+0x1]
test   ebx,ebx
je     804a9ce <strcpy@plt+0x16be>
cmp    ebx,0x2b
je     804a9ce <strcpy@plt+0x16be>
cmp    ebx,0x2d
jne    804a9d9 <strcpy@plt+0x16c9>
jmp    804a9ce <strcpy@plt+0x16be>
cmp    DWORD PTR ds:0x805c0cc,0x0
je     804a9c8 <strcpy@plt+0x16b8>
mov    eax,0x8055720
jmp    804a9e0 <strcpy@plt+0x16d0>
cmp    BYTE PTR [ebx+ecx*1],0x0
je     804a9d5 <strcpy@plt+0x16c5>
mov    eax,0x80556f5
jmp    804a9e0 <strcpy@plt+0x16d0>
mov    BYTE PTR [ebx+ecx*1],0x1
inc    edx
jmp    804a980 <strcpy@plt+0x1670>
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0x114]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x8
push   edi
push   esi
push   ebx
xor    edi,edi
mov    ebx,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ebp-0x4],ebx
mov    ebx,DWORD PTR [ebp-0x4]
movsx  eax,BYTE PTR [ebx]
cmp    eax,0x2b
je     804aab2 <strcpy@plt+0x17a2>
jg     804aa17 <strcpy@plt+0x1707>
test   eax,eax
je     804aa20 <strcpy@plt+0x1710>
jmp    804aa38 <strcpy@plt+0x1728>
cmp    eax,0x2d
je     804aa31 <strcpy@plt+0x1721>
jmp    804aa38 <strcpy@plt+0x1728>
mov    esi,esi
mov    DWORD PTR ds:0x805c14c,0x1
xor    eax,eax
jmp    804aac0 <strcpy@plt+0x17b0>
mov    edi,0x1
jmp    804aab4 <strcpy@plt+0x17a4>
push   eax
call   804c5e4 <strcpy@plt+0x32d4>
add    esp,0x4
test   eax,eax
je     804aa89 <strcpy@plt+0x1779>
mov    eax,DWORD PTR [eax+0x4]
xor    esi,esi
cmp    BYTE PTR [eax],0x2d
jne    804aa51 <strcpy@plt+0x1741>
inc    esi
inc    eax
push   eax
call   804c608 <strcpy@plt+0x32f8>
mov    DWORD PTR [ebp-0x8],eax
add    esp,0x4
test   eax,eax
je     804aa83 <strcpy@plt+0x1773>
push   0x20
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    ebx,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [edx+0x4],eax
mov    DWORD PTR [edx+0x8],esi
mov    DWORD PTR [edx],0x0
mov    ecx,edx
add    esp,0x4
jmp    804aa85 <strcpy@plt+0x1775>
xor    ecx,ecx
test   ecx,ecx
jne    804aa90 <strcpy@plt+0x1780>
mov    eax,0x8055609
jmp    804aac0 <strcpy@plt+0x17b0>
mov    DWORD PTR [ecx+0x8],edi
mov    edx,ecx
cmp    DWORD PTR [ecx],0x0
je     804aaa7 <strcpy@plt+0x1797>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804aaa0 <strcpy@plt+0x1790>
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebx+0x8]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [ebx+0x8],ecx
xor    edi,edi
inc    DWORD PTR [ebp-0x4]
jmp    804aa00 <strcpy@plt+0x16f0>
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0x14]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [edi]
test   eax,eax
je     804aaea <strcpy@plt+0x17da>
push   eax
call   804aac8 <strcpy@plt+0x17b8>
mov    esi,eax
add    esp,0x4
test   esi,esi
jne    804adf2 <strcpy@plt+0x1ae2>
mov    eax,DWORD PTR [edi+0x10]
dec    eax
cmp    eax,0x6
ja     804ade4 <strcpy@plt+0x1ad4>
jmp    DWORD PTR [eax*4+0x8055824]
mov    esi,esi
push   edi
call   804a420 <strcpy@plt+0x1110>
mov    esi,eax
add    esp,0x4
test   esi,esi
je     804ab30 <strcpy@plt+0x1820>
push   0x25
push   DWORD PTR [edi+0xc]
call   8048ef0 <strchr@plt>
add    esp,0x8
test   eax,eax
je     804ab28 <strcpy@plt+0x1818>
push   edi
call   804a58c <strcpy@plt+0x127c>
mov    esi,eax
test   esi,esi
jne    804adf0 <strcpy@plt+0x1ae0>
mov    DWORD PTR ds:0x805c150,0x1
jmp    804adf0 <strcpy@plt+0x1ae0>
nop
cmp    DWORD PTR ds:0x805c150,0x0
je     804ab53 <strcpy@plt+0x1843>
mov    eax,0x8055760
jmp    804adf2 <strcpy@plt+0x1ae2>
push   edi
call   804a420 <strcpy@plt+0x1110>
mov    esi,eax
add    esp,0x4
test   esi,esi
je     804ab90 <strcpy@plt+0x1880>
push   0x25
push   DWORD PTR [edi+0xc]
call   8048ef0 <strchr@plt>
add    esp,0x8
test   eax,eax
je     804ab7e <strcpy@plt+0x186e>
push   edi
call   804a58c <strcpy@plt+0x127c>
mov    esi,eax
add    esp,0x4
test   esi,esi
je     804ab90 <strcpy@plt+0x1880>
mov    eax,esi
jmp    804adf2 <strcpy@plt+0x1ae2>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c150,0x1
push   0x0
push   0x805546d
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804abc2 <strcpy@plt+0x18b2>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
mov    edx,DWORD PTR [edi+0x4]
jmp    804abc9 <strcpy@plt+0x18b9>
mov    edx,eax
mov    eax,DWORD PTR [edx]
test   eax,eax
jne    804abc7 <strcpy@plt+0x18b7>
mov    DWORD PTR [edx],ebx
push   0x0
push   0x8055464
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804abf6 <strcpy@plt+0x18e6>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
mov    edx,ebx
cmp    DWORD PTR [ebx],0x0
je     804ac07 <strcpy@plt+0x18f7>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804ac00 <strcpy@plt+0x18f0>
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [edi+0x4],ebx
jmp    804adf0 <strcpy@plt+0x1ae0>
cmp    DWORD PTR ds:0x805c148,0x0
jne    804ac26 <strcpy@plt+0x1916>
cmp    DWORD PTR ds:0x805c14c,0x0
je     804ac30 <strcpy@plt+0x1920>
mov    esi,0x805578f
jmp    804ac3d <strcpy@plt+0x192d>
lea    esi,[esi+0x0]
push   DWORD PTR [edi+0xc]
call   804a8c0 <strcpy@plt+0x15b0>
mov    esi,eax
add    esp,0x4
test   esi,esi
jne    804ac58 <strcpy@plt+0x1948>
push   edi
call   804a9ec <strcpy@plt+0x16dc>
mov    DWORD PTR ds:0x805c14c,0x1
xor    eax,eax
jmp    804adf2 <strcpy@plt+0x1ae2>
cmp    DWORD PTR ds:0x805c150,0x0
je     804ac70 <strcpy@plt+0x1960>
mov    esi,0x80557c0
jmp    804adf0 <strcpy@plt+0x1ae0>
nop
lea    esi,[esi+eiz*1+0x0]
push   edi
call   804a420 <strcpy@plt+0x1110>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    804ad10 <strcpy@plt+0x1a00>
mov    DWORD PTR ds:0x805c150,0x1
push   0x0
push   0x805546d
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804acb5 <strcpy@plt+0x19a5>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
mov    edx,DWORD PTR [edi+0x4]
jmp    804acc2 <strcpy@plt+0x19b2>
lea    esi,[esi+0x0]
mov    edx,eax
mov    eax,DWORD PTR [edx]
test   eax,eax
jne    804acc0 <strcpy@plt+0x19b0>
mov    DWORD PTR [edx],ebx
push   0x0
push   0x805545c
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804acef <strcpy@plt+0x19df>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
mov    edx,ebx
cmp    DWORD PTR [ebx],0x0
je     804adad <strcpy@plt+0x1a9d>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804ad00 <strcpy@plt+0x19f0>
jmp    804adad <strcpy@plt+0x1a9d>
lea    esi,[esi+eiz*1+0x0]
push   0x25
push   DWORD PTR [edi+0xc]
call   8048ef0 <strchr@plt>
add    esp,0x8
test   eax,eax
je     804ad2c <strcpy@plt+0x1a1c>
push   edi
call   804a58c <strcpy@plt+0x127c>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    804adf0 <strcpy@plt+0x1ae0>
mov    DWORD PTR ds:0x805c150,0x1
push   0x0
push   0x805546d
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804ad66 <strcpy@plt+0x1a56>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
mov    edx,DWORD PTR [edi+0x4]
jmp    804ad72 <strcpy@plt+0x1a62>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,eax
mov    eax,DWORD PTR [edx]
test   eax,eax
jne    804ad70 <strcpy@plt+0x1a60>
mov    DWORD PTR [edx],ebx
push   0x0
push   0x805545c
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jne    804ad9f <strcpy@plt+0x1a8f>
push   0x8055480
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
mov    edx,ebx
cmp    DWORD PTR [ebx],0x0
je     804adad <strcpy@plt+0x1a9d>
mov    edx,DWORD PTR [edx]
cmp    DWORD PTR [edx],0x0
jne    804ada6 <strcpy@plt+0x1a96>
mov    eax,DWORD PTR [edi+0x4]
mov    DWORD PTR [edx],eax
mov    DWORD PTR [edi+0x4],ebx
xor    eax,eax
jmp    804adf2 <strcpy@plt+0x1ae2>
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR ds:0x805c14c,0x0
je     804add0 <strcpy@plt+0x1ac0>
mov    esi,0x805578f
jmp    804add8 <strcpy@plt+0x1ac8>
push   edi
call   804a748 <strcpy@plt+0x1438>
mov    esi,eax
mov    DWORD PTR ds:0x805c14c,0x1
jmp    804adf0 <strcpy@plt+0x1ae0>
mov    eax,0x8055800
jmp    804adf2 <strcpy@plt+0x1ae2>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,esi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x14],0x1
push   0x14
call   8048fc0 <malloc@plt>
mov    ebx,eax
mov    edi,esi
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    DWORD PTR [ebx+0xc],edx
add    esp,0x8
push   esi
push   edx
call   8049310 <strcpy@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx+0x10],eax
mov    DWORD PTR [ebx+0x8],0x0
mov    DWORD PTR [ebx+0x4],0x0
mov    eax,ds:0x805c144
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c144,ebx
cmp    DWORD PTR [ebp+0xc],0x6
jne    804ae6f <strcpy@plt+0x1b5f>
mov    DWORD PTR ds:0x805c148,0x1
cmp    DWORD PTR [ebp+0xc],0x2
je     804ae80 <strcpy@plt+0x1b70>
mov    eax,0x1
jmp    804af2e <strcpy@plt+0x1c1e>
nop
mov    dl,BYTE PTR [esi]
lea    edi,[ebp-0x10]
cmp    dl,0x2c
je     804aea0 <strcpy@plt+0x1b90>
jg     804ae97 <strcpy@plt+0x1b87>
test   dl,dl
je     804aea0 <strcpy@plt+0x1b90>
cmp    dl,0x20
je     804aea0 <strcpy@plt+0x1b90>
jmp    804aeb8 <strcpy@plt+0x1ba8>
cmp    dl,0x3d
je     804aeb0 <strcpy@plt+0x1ba0>
jmp    804aeb8 <strcpy@plt+0x1ba8>
mov    esi,esi
cmp    DWORD PTR [ebp-0x14],0x0
jne    804ae75 <strcpy@plt+0x1b65>
mov    DWORD PTR [ebp-0x14],0x1
jmp    804af1f <strcpy@plt+0x1c0f>
nop
cmp    DWORD PTR [ebp-0x14],0x0
jne    804ae75 <strcpy@plt+0x1b65>
jmp    804af2c <strcpy@plt+0x1c1c>
cmp    DWORD PTR [ebp-0x14],0x0
je     804af1f <strcpy@plt+0x1c0f>
mov    DWORD PTR [ebp-0x14],0x0
xor    ebx,ebx
test   dl,dl
je     804aeee <strcpy@plt+0x1bde>
cmp    dl,0x2c
je     804aeee <strcpy@plt+0x1bde>
cmp    dl,0x20
je     804aeee <strcpy@plt+0x1bde>
mov    edx,esi
cmp    BYTE PTR [edx],0x3d
je     804aeee <strcpy@plt+0x1bde>
inc    edx
inc    ebx
mov    cl,BYTE PTR [edx]
test   cl,cl
je     804aeee <strcpy@plt+0x1bde>
cmp    cl,0x2c
je     804aeee <strcpy@plt+0x1bde>
cmp    cl,0x20
jne    804aed7 <strcpy@plt+0x1bc7>
cmp    ebx,0xf
jg     804ae75 <strcpy@plt+0x1b65>
push   ebx
push   esi
push   edi
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    BYTE PTR [ebx+edi*1],0x0
push   edi
call   804c608 <strcpy@plt+0x32f8>
mov    edx,eax
add    esp,0x4
test   edx,edx
je     804ae75 <strcpy@plt+0x1b65>
cmp    DWORD PTR [edx+0x18],0x0
jne    804ae75 <strcpy@plt+0x1b65>
inc    esi
mov    al,BYTE PTR [esi]
mov    dl,al
test   dl,dl
jne    804ae85 <strcpy@plt+0x1b75>
xor    eax,eax
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
push   esi
mov    eax,ds:0x805c0d4
push   DWORD PTR [eax+0x4]
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804af81 <strcpy@plt+0x1c71>
mov    eax,ds:0x805c0d4
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [edi],eax
mov    eax,ds:0x805c0d4
jmp    804af78 <strcpy@plt+0x1c68>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
mov    eax,DWORD PTR [eax]
mov    DWORD PTR [edi],eax
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [eax],edi
mov    eax,0x1
jmp    804afaa <strcpy@plt+0x1c9a>
mov    ebx,DWORD PTR ds:0x805c0d4
jmp    804afa2 <strcpy@plt+0x1c92>
lea    esi,[esi+eiz*1+0x0]
push   esi
push   DWORD PTR [eax+0x4]
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804af70 <strcpy@plt+0x1c60>
mov    ebx,DWORD PTR [ebx]
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    804af90 <strcpy@plt+0x1c80>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
push   esi
mov    eax,ds:0x805c0d4
push   DWORD PTR [eax+0x4]
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804b003 <strcpy@plt+0x1cf3>
mov    edx,DWORD PTR ds:0x805c0d4
mov    eax,DWORD PTR [edx]
mov    ds:0x805c0d4,eax
push   edx
call   8049260 <free@plt>
mov    eax,0x1
jmp    804b02a <strcpy@plt+0x1d1a>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebx]
mov    eax,DWORD PTR [edx]
mov    DWORD PTR [ebx],eax
push   edx
call   8049260 <free@plt>
mov    eax,0x1
jmp    804b02a <strcpy@plt+0x1d1a>
mov    ebx,DWORD PTR ds:0x805c0d4
jmp    804b022 <strcpy@plt+0x1d12>
nop
lea    esi,[esi+eiz*1+0x0]
push   esi
push   DWORD PTR [eax+0x4]
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
je     804aff0 <strcpy@plt+0x1ce0>
mov    ebx,DWORD PTR [ebx]
mov    eax,DWORD PTR [ebx]
test   eax,eax
jne    804b010 <strcpy@plt+0x1d00>
xor    eax,eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
test   BYTE PTR ds:0x805c0d8,0x4
je     804b054 <strcpy@plt+0x1d44>
test   BYTE PTR ds:0x805c0d0,0x4
jne    804b054 <strcpy@plt+0x1d44>
mov    eax,0x8055860
jmp    804b4e0 <strcpy@plt+0x21d0>
mov    eax,ds:0x805c0d0
cmp    DWORD PTR ds:0x805c100,0x0
je     804b0c0 <strcpy@plt+0x1db0>
test   eax,eax
je     804b070 <strcpy@plt+0x1d60>
push   0x0
push   0x805588e
jmp    804b077 <strcpy@plt+0x1d67>
nop
push   0x0
push   0x8055892
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
push   0x0
push   0x8055897
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d0,0x4
jne    804b10c <strcpy@plt+0x1dfc>
push   0x0
push   0x805589f
jmp    804b0f5 <strcpy@plt+0x1de5>
mov    esi,esi
test   al,0x1
je     804b0d0 <strcpy@plt+0x1dc0>
push   0x0
push   0x805588e
jmp    804b0d7 <strcpy@plt+0x1dc7>
lea    esi,[esi+0x0]
push   0x0
push   0x80558a4
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
push   0x0
push   0x80558a9
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
push   0x0
push   0x80558ae
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
mov    eax,ds:0x805c0d0
add    esp,0x8
test   al,0x1
je     804b156 <strcpy@plt+0x1e46>
push   0x0
push   0x80558b4
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    eax,ds:0x805c0d0
test   al,0x4
je     804b261 <strcpy@plt+0x1f51>
push   0x0
push   0x80558ba
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d0,0x4
je     804b261 <strcpy@plt+0x1f51>
test   BYTE PTR ds:0x805c0fd,0x4
je     804b1f8 <strcpy@plt+0x1ee8>
push   0x0
push   0x80558c0
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
push   0x20
call   8048fc0 <malloc@plt>
mov    ebx,eax
mov    DWORD PTR [ebx+0xc],0x1
push   0x2
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebx+0x4],eax
add    esp,0x10
mov    WORD PTR [eax],0x3a
mov    DWORD PTR [ebx+0x8],0x0
mov    DWORD PTR [ebx+0x10],0x0
mov    DWORD PTR [ebx+0x14],0x3
mov    DWORD PTR [ebx+0x18],0x0
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
push   0x0
push   0x80558ca
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d0,0x4
je     804b261 <strcpy@plt+0x1f51>
test   BYTE PTR ds:0x805c0d8,0x4
je     804b231 <strcpy@plt+0x1f21>
push   0x0
push   0x80558cd
jmp    804b24a <strcpy@plt+0x1f3a>
test   BYTE PTR ds:0x805c0fd,0x5
je     804b243 <strcpy@plt+0x1f33>
push   0x0
push   0x80558d1
jmp    804b24a <strcpy@plt+0x1f3a>
push   0x0
push   0x80558d7
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d8
test   dl,0x1
je     804b290 <strcpy@plt+0x1f80>
push   0x0
push   0x80558dc
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
push   0x0
push   0x80558e0
jmp    804b2bb <strcpy@plt+0x1fab>
mov    eax,ds:0x805c0d0
test   al,0x4
je     804b2dd <strcpy@plt+0x1fcd>
push   0x0
push   0x80558e6
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
push   0x0
push   0x80558e9
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x10
mov    edx,DWORD PTR ds:0x805c0d8
mov    eax,ds:0x805c0d0
test   dl,0x8
je     804b30f <strcpy@plt+0x1fff>
test   al,0x1
je     804b30f <strcpy@plt+0x1fff>
push   0x0
push   0x80558ee
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d8
mov    eax,ds:0x805c0d0
test   al,0x5
je     804b33c <strcpy@plt+0x202c>
test   dl,0x1
jne    804b33c <strcpy@plt+0x202c>
push   0x0
push   0x80558f3
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d8
test   dl,0x10
je     804b365 <strcpy@plt+0x2055>
push   0x0
push   0x80558f5
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d8
test   dl,0x8
je     804b38e <strcpy@plt+0x207e>
push   0x0
push   0x80558f9
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d8
test   dl,0x2
je     804b3cc <strcpy@plt+0x20bc>
push   0x0
push   0x80558fd
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
push   0x0
push   0x8055901
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x10
test   BYTE PTR ds:0x805c0d0,0x5
je     804b3f3 <strcpy@plt+0x20e3>
push   0x0
push   0x8055906
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
push   0x0
push   0x805546d
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
mov    eax,ds:0x805c0d0
add    esp,0x8
test   al,0x1
je     804b440 <strcpy@plt+0x2130>
test   BYTE PTR ds:0x805c0fd,0x2
je     804b430 <strcpy@plt+0x2120>
push   0x0
push   0x805590b
jmp    804b44b <strcpy@plt+0x213b>
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x8055910
jmp    804b44b <strcpy@plt+0x213b>
lea    esi,[esi+eiz*1+0x0]
test   al,0x4
je     804b4b0 <strcpy@plt+0x21a0>
push   0x0
push   0x8055919
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d0,0x4
je     804b4b0 <strcpy@plt+0x21a0>
push   0x0
push   0x805591d
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d8,0x4
jne    804b4b0 <strcpy@plt+0x21a0>
push   0x0
push   0x805591f
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
add    esp,0x8
test   BYTE PTR ds:0x805c0d8,0x20
je     804b4d4 <strcpy@plt+0x21c4>
push   0x0
push   0x8055921
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c0d4,ebx
mov    DWORD PTR ds:0x805c0d8,0x0
xor    eax,eax
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR ds:0x805c0fc
test   dl,0x1
je     804b500 <strcpy@plt+0x21f0>
mov    eax,0x1
test   dl,0x20
je     804b507 <strcpy@plt+0x21f7>
xor    eax,eax
mov    ds:0x805c824,eax
mov    eax,ds:0x805c144
test   eax,eax
je     804b526 <strcpy@plt+0x2216>
push   eax
call   804aac8 <strcpy@plt+0x17b8>
add    esp,0x4
test   eax,eax
jne    804b90e <strcpy@plt+0x25fe>
cmp    DWORD PTR ds:0x805c0d4,0x0
je     804b53c <strcpy@plt+0x222c>
push   0x8055940
call   8049120 <printf@plt>
add    esp,0x4
mov    ebx,DWORD PTR ds:0x805c144
test   ebx,ebx
je     804b56f <strcpy@plt+0x225f>
mov    ecx,DWORD PTR [ebx+0x4]
mov    DWORD PTR [ebx+0x4],0x0
test   ecx,ecx
je     804b569 <strcpy@plt+0x2259>
mov    edx,ecx
mov    ecx,DWORD PTR [ecx]
mov    eax,ds:0x805c0d4
mov    DWORD PTR [edx],eax
mov    DWORD PTR ds:0x805c0d4,edx
test   ecx,ecx
jne    804b554 <strcpy@plt+0x2244>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804b546 <strcpy@plt+0x2236>
mov    ebx,DWORD PTR ds:0x805c144
test   ebx,ebx
je     804b5ab <strcpy@plt+0x229b>
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebx+0x8]
mov    DWORD PTR [ebx+0x8],0x0
test   ecx,ecx
je     804b5a5 <strcpy@plt+0x2295>
mov    esi,esi
mov    edx,ecx
mov    ecx,DWORD PTR [ecx]
mov    eax,ds:0x805c114
mov    DWORD PTR [edx],eax
mov    DWORD PTR ds:0x805c114,edx
test   ecx,ecx
jne    804b590 <strcpy@plt+0x2280>
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    804b580 <strcpy@plt+0x2270>
cmp    DWORD PTR ds:0x805c0d4,0x0
je     804b5d0 <strcpy@plt+0x22c0>
cmp    DWORD PTR ds:0x805c0d0,0x0
jne    804b647 <strcpy@plt+0x2337>
mov    esi,0x1
jmp    804b729 <strcpy@plt+0x2419>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x805c0d0
cmp    eax,0x6
je     804b678 <strcpy@plt+0x2368>
ja     804b602 <strcpy@plt+0x22f2>
cmp    eax,0x2
je     804b670 <strcpy@plt+0x2360>
ja     804b5f6 <strcpy@plt+0x22e6>
test   eax,eax
je     804b651 <strcpy@plt+0x2341>
cmp    eax,0x1
je     804b660 <strcpy@plt+0x2350>
jmp    804b647 <strcpy@plt+0x2337>
cmp    eax,0x4
je     804b668 <strcpy@plt+0x2358>
ja     804b655 <strcpy@plt+0x2345>
jmp    804b680 <strcpy@plt+0x2370>
cmp    eax,0x40
je     804b6a0 <strcpy@plt+0x2390>
ja     804b627 <strcpy@plt+0x2317>
cmp    eax,0x10
je     804b690 <strcpy@plt+0x2380>
ja     804b620 <strcpy@plt+0x2310>
cmp    eax,0x8
je     804b687 <strcpy@plt+0x2377>
jmp    804b647 <strcpy@plt+0x2337>
nop
cmp    eax,0x20
je     804b698 <strcpy@plt+0x2388>
jmp    804b647 <strcpy@plt+0x2337>
cmp    eax,0x100
je     804b6b0 <strcpy@plt+0x23a0>
ja     804b640 <strcpy@plt+0x2330>
cmp    eax,0x80
je     804b6a8 <strcpy@plt+0x2398>
jmp    804b647 <strcpy@plt+0x2337>
lea    esi,[esi+0x0]
cmp    eax,0x200
je     804b6b7 <strcpy@plt+0x23a7>
mov    eax,0x8055961
jmp    804b90e <strcpy@plt+0x25fe>
xor    ebx,ebx
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c11c
jmp    804b6bc <strcpy@plt+0x23ac>
lea    esi,[esi+0x0]
mov    ebx,DWORD PTR ds:0x805c118
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c124
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c120
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,0x805597d
jmp    804b6bc <strcpy@plt+0x23ac>
nop
mov    ebx,0x8055983
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c0a0
jmp    804b6bc <strcpy@plt+0x23ac>
nop
mov    ebx,DWORD PTR ds:0x805c0a4
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c0a8
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c0ac
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,DWORD PTR ds:0x805c0b0
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,0x8055989
jmp    804b6bc <strcpy@plt+0x23ac>
mov    ebx,0x805598e
xor    esi,esi
test   eax,eax
jne    804b6e8 <strcpy@plt+0x23d8>
cmp    DWORD PTR ds:0x805c0d8,0x0
jne    804b6e8 <strcpy@plt+0x23d8>
push   0x8055993
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
je     804b6e8 <strcpy@plt+0x23d8>
cmp    BYTE PTR [eax],0x0
je     804b6e8 <strcpy@plt+0x23d8>
mov    ebx,eax
mov    esi,0x2
test   ebx,ebx
je     804b717 <strcpy@plt+0x2407>
push   0x0
push   ebx
call   804a2c0 <strcpy@plt+0xfb0>
mov    edx,eax
add    esp,0x8
test   edx,edx
je     804b729 <strcpy@plt+0x2419>
lea    esi,[esi+0x0]
mov    ecx,edx
mov    edx,DWORD PTR [edx]
mov    eax,ds:0x805c0d4
mov    DWORD PTR [ecx],eax
mov    DWORD PTR ds:0x805c0d4,ecx
test   edx,edx
jne    804b700 <strcpy@plt+0x23f0>
jmp    804b729 <strcpy@plt+0x2419>
call   804b034 <strcpy@plt+0x1d24>
test   eax,eax
jne    804b90e <strcpy@plt+0x25fe>
mov    esi,0x3
mov    eax,ds:0x805c0d8
test   eax,eax
je     804b891 <strcpy@plt+0x2581>
test   esi,esi
je     804b744 <strcpy@plt+0x2434>
mov    eax,0x80559a0
jmp    804b90e <strcpy@plt+0x25fe>
test   al,0x2
je     804b7b0 <strcpy@plt+0x24a0>
push   0x0
push   0x8055901
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
push   ebx
push   0x80559d4
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x10
test   eax,eax
jne    804b784 <strcpy@plt+0x2474>
push   ebx
push   0x80559d9
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x8
test   eax,eax
jne    804b784 <strcpy@plt+0x2474>
mov    eax,0x80559e0
jmp    804b90e <strcpy@plt+0x25fe>
push   0x0
push   0x80558fd
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
push   ebx
push   0x8055a0e
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x10
test   eax,eax
jne    804b7b0 <strcpy@plt+0x24a0>
mov    eax,0x8055a13
jmp    804b90e <strcpy@plt+0x25fe>
mov    esi,esi
test   BYTE PTR ds:0x805c0d8,0x4
je     804b7f0 <strcpy@plt+0x24e0>
push   0x8055a21
call   804afb4 <strcpy@plt+0x1ca4>
push   0x0
push   0x80558cd
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
push   ebx
push   0x8055a23
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x14
test   eax,eax
je     804b7f0 <strcpy@plt+0x24e0>
push   0x8055a23
call   804afb4 <strcpy@plt+0x1ca4>
add    esp,0x4
test   BYTE PTR ds:0x805c0d8,0x1
je     804b891 <strcpy@plt+0x2581>
push   0x8055a28
call   804afb4 <strcpy@plt+0x1ca4>
push   0x8055a2d
call   804afb4 <strcpy@plt+0x1ca4>
push   0x8055a31
call   804afb4 <strcpy@plt+0x1ca4>
push   0x8055a34
call   804afb4 <strcpy@plt+0x1ca4>
push   0x8055a36
call   804afb4 <strcpy@plt+0x1ca4>
push   0x0
push   0x80558e0
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
push   ebx
push   0x8055a39
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x24
test   eax,eax
jne    804b860 <strcpy@plt+0x2550>
mov    eax,0x8055a40
jmp    804b90e <strcpy@plt+0x25fe>
lea    esi,[esi+eiz*1+0x0]
push   0x8055a39
call   804afb4 <strcpy@plt+0x1ca4>
push   0x0
push   0x80558dc
call   804a2c0 <strcpy@plt+0xfb0>
mov    ebx,eax
push   ebx
push   0x8055a66
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x14
test   eax,eax
jne    804b891 <strcpy@plt+0x2581>
mov    eax,0x8055a6a
jmp    804b90e <strcpy@plt+0x25fe>
test   esi,esi
jne    804b90c <strcpy@plt+0x25fc>
test   BYTE PTR ds:0x805c0fd,0x1
je     804b8d2 <strcpy@plt+0x25c2>
test   BYTE PTR ds:0x805c0d0,0x4
je     804b8d2 <strcpy@plt+0x25c2>
push   0x0
push   0x80558d1
call   804a2c0 <strcpy@plt+0xfb0>
push   eax
push   0x8055a23
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x10
test   eax,eax
je     804b8d2 <strcpy@plt+0x25c2>
push   0x8055a23
call   804afb4 <strcpy@plt+0x1ca4>
add    esp,0x4
test   BYTE PTR ds:0x805c0fd,0x2
je     804b90c <strcpy@plt+0x25fc>
test   BYTE PTR ds:0x805c0d0,0x1
je     804b90c <strcpy@plt+0x25fc>
push   0x0
push   0x805590b
call   804a2c0 <strcpy@plt+0xfb0>
push   eax
push   0x8055a77
call   804af38 <strcpy@plt+0x1c28>
add    esp,0x10
test   eax,eax
je     804b90c <strcpy@plt+0x25fc>
push   0x8055a77
call   804afb4 <strcpy@plt+0x1ca4>
xor    eax,eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    DWORD PTR ds:0x805c144,0x0
mov    DWORD PTR ds:0x805c0d4,0x0
mov    DWORD PTR ds:0x805c148,0x0
mov    DWORD PTR ds:0x805c14c,0x0
mov    DWORD PTR ds:0x805c150,0x0
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x110
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x110
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x120
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x120
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x130
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x130
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x140
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x140
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x150
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x150
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x160
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x160
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x170
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x170
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x180
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x180
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
add    eax,0x190
push   eax
mov    eax,DWORD PTR [ebp+0x8]
add    eax,0x190
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    ecx,0x8149c60
mov    edx,DWORD PTR ds:0x805c154
mov    al,BYTE PTR ds:0x8149c60
test   al,al
jne    804ba70 <strcpy@plt+0x2760>
xor    eax,eax
jmp    804bb25 <strcpy@plt+0x2815>
mov    esi,esi
cmp    DWORD PTR ds:0x805c0cc,0x75
je     804bae5 <strcpy@plt+0x27d5>
mov    ecx,0x8149c61
cmp    BYTE PTR ds:0x8149c61,0x0
je     804bb1d <strcpy@plt+0x280d>
mov    edi,0x20202020
mov    ebx,0x205f5c20
mov    esi,0x20207c20
lea    esi,[esi+0x0]
mov    al,BYTE PTR [ecx]
cmp    al,0x4c
je     804bad0 <strcpy@plt+0x27c0>
jg     804bac0 <strcpy@plt+0x27b0>
cmp    al,0x20
je     804bac6 <strcpy@plt+0x27b6>
jg     804bab4 <strcpy@plt+0x27a4>
test   al,al
je     804bb1d <strcpy@plt+0x280d>
jmp    804bada <strcpy@plt+0x27ca>
cmp    al,0x2b
je     804bad0 <strcpy@plt+0x27c0>
jmp    804bada <strcpy@plt+0x27ca>
lea    esi,[esi+0x0]
cmp    al,0x7c
je     804bad4 <strcpy@plt+0x27c4>
jmp    804bada <strcpy@plt+0x27ca>
mov    DWORD PTR [edx],edi
jmp    804bad6 <strcpy@plt+0x27c6>
lea    esi,[esi+0x0]
mov    DWORD PTR [edx],ebx
jmp    804bad6 <strcpy@plt+0x27c6>
mov    DWORD PTR [edx],esi
mov    BYTE PTR [edx+0x4],0x0
add    edx,0x4
inc    ecx
cmp    BYTE PTR [ecx],0x0
jne    804baa0 <strcpy@plt+0x2790>
jmp    804bb1d <strcpy@plt+0x280d>
mov    ebx,0x2020
lea    esi,[esi+0x0]
cmp    al,0x4c
je     804bb0c <strcpy@plt+0x27fc>
jg     804bb08 <strcpy@plt+0x27f8>
cmp    al,0x20
je     804bb0c <strcpy@plt+0x27fc>
jg     804bb02 <strcpy@plt+0x27f2>
test   al,al
je     804bb1d <strcpy@plt+0x280d>
jmp    804bb13 <strcpy@plt+0x2803>
cmp    al,0x2b
je     804bb0c <strcpy@plt+0x27fc>
jmp    804bb13 <strcpy@plt+0x2803>
cmp    al,0x7c
jne    804bb13 <strcpy@plt+0x2803>
mov    WORD PTR [edx],bx
mov    BYTE PTR [edx+0x2],0x0
add    edx,0x2
inc    ecx
mov    al,BYTE PTR [ecx]
test   al,al
jne    804baf0 <strcpy@plt+0x27e0>
sub    edx,DWORD PTR ds:0x805c154
mov    eax,edx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x6000
push   esi
push   ebx
call   804ba4c <strcpy@plt+0x273c>
mov    esi,eax
add    esi,DWORD PTR ds:0x805c154
cmp    DWORD PTR ds:0x805c0b4,0x0
je     804bb70 <strcpy@plt+0x2860>
push   0x1000
mov    eax,ds:0x8127844
add    eax,0x190
push   eax
push   esi
call   80495c4 <strcpy@plt+0x2b4>
jmp    804bb90 <strcpy@plt+0x2880>
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0x10c]
test   edx,edx
je     804bb97 <strcpy@plt+0x2887>
cmp    DWORD PTR [edx],0x0
je     804bb97 <strcpy@plt+0x2887>
push   0xc8000
push   edx
push   esi
call   8049614 <strcpy@plt+0x304>
add    esi,eax
add    esp,0xc
jmp    804bbbf <strcpy@plt+0x28af>
push   0x6000
add    eax,0x190
push   eax
lea    ebx,[ebp-0x6000]
push   ebx
call   80495c4 <strcpy@plt+0x2b4>
push   ebx
push   0x8055a95
push   esi
call   80492c0 <sprintf@plt>
add    esi,eax
add    esp,0x18
cmp    DWORD PTR ds:0x805c0b8,0x0
je     804bbee <strcpy@plt+0x28de>
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0x108]
test   eax,eax
je     804bbee <strcpy@plt+0x28de>
cmp    DWORD PTR [eax],0x0
je     804bbee <strcpy@plt+0x28de>
mov    BYTE PTR [esi],0x20
inc    esi
push   0xc8000
push   eax
push   esi
call   8049614 <strcpy@plt+0x304>
add    esi,eax
sub    esi,DWORD PTR ds:0x805c154
mov    eax,esi
lea    esp,[ebp-0x6008]
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x6000
push   esi
push   ebx
call   804ba4c <strcpy@plt+0x273c>
mov    esi,eax
add    esi,DWORD PTR ds:0x805c154
cmp    DWORD PTR ds:0x805c128,0x0
jne    804bc40 <strcpy@plt+0x2930>
push   0x1000
mov    eax,ds:0x8127844
add    eax,0x190
push   eax
push   esi
call   80495c4 <strcpy@plt+0x2b4>
jmp    804bc60 <strcpy@plt+0x2950>
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0x10c]
test   edx,edx
je     804bc67 <strcpy@plt+0x2957>
cmp    DWORD PTR [edx],0x0
je     804bc67 <strcpy@plt+0x2957>
push   0xc8000
push   edx
push   esi
call   8049614 <strcpy@plt+0x304>
add    esi,eax
add    esp,0xc
jmp    804bc8f <strcpy@plt+0x297f>
push   0x6000
add    eax,0x190
push   eax
lea    ebx,[ebp-0x6000]
push   ebx
call   80495c4 <strcpy@plt+0x2b4>
push   ebx
push   0x8055a95
push   esi
call   80492c0 <sprintf@plt>
add    esi,eax
add    esp,0x18
cmp    DWORD PTR ds:0x805c0b8,0x0
je     804bcbe <strcpy@plt+0x29ae>
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0x108]
test   eax,eax
je     804bcbe <strcpy@plt+0x29ae>
cmp    DWORD PTR [eax],0x0
je     804bcbe <strcpy@plt+0x29ae>
mov    BYTE PTR [esi],0x20
inc    esi
push   0xc8000
push   eax
push   esi
call   8049614 <strcpy@plt+0x304>
add    esi,eax
sub    esi,DWORD PTR ds:0x805c154
mov    eax,esi
lea    esp,[ebp-0x6008]
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0xf4]
mov    eax,edx
xor    edx,edx
div    DWORD PTR ds:0x8169d48
mov    ecx,eax
mov    eax,ds:0x8169cc4
sub    eax,ecx
mov    DWORD PTR [ebp-0x4],eax
mov    ecx,0x88888889
mul    ecx
shr    edx,0x5
mov    ebx,edx
mov    DWORD PTR [ebp-0x10],ebx
shl    DWORD PTR [ebp-0x10],0x4
sub    DWORD PTR [ebp-0x10],ebx
mov    eax,DWORD PTR [ebp-0x10]
shl    eax,0x2
mov    DWORD PTR [ebp-0x10],eax
mov    eax,DWORD PTR [ebp-0x4]
sub    eax,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0xc],eax
mov    eax,ebx
mul    ecx
shr    edx,0x5
mov    ecx,edx
mov    DWORD PTR [ebp-0x10],ecx
shl    DWORD PTR [ebp-0x10],0x4
sub    DWORD PTR [ebp-0x10],ecx
mov    eax,DWORD PTR [ebp-0x10]
shl    eax,0x2
sub    ebx,eax
mov    DWORD PTR [ebp-0x8],ebx
mov    eax,0xaaaaaaab
mul    ecx
shr    edx,0x4
mov    esi,edx
lea    eax,[esi+esi*2]
shl    eax,0x3
mov    edi,ecx
sub    edi,eax
test   esi,esi
je     804bd70 <strcpy@plt+0x2a60>
push   esi
push   0x8055a9a
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
add    esp,0xc
jmp    804bd83 <strcpy@plt+0x2a73>
push   0x8055a9e
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
add    esp,0x8
mov    ebx,eax
test   esi,esi
jne    804bd8d <strcpy@plt+0x2a7d>
test   edi,edi
je     804bda6 <strcpy@plt+0x2a96>
push   edi
push   0x8055aa2
mov    eax,ebx
add    eax,DWORD PTR ds:0x805c154
push   eax
call   80492c0 <sprintf@plt>
add    esp,0xc
jmp    804bdbc <strcpy@plt+0x2aac>
push   0x8055a9e
mov    eax,ebx
add    eax,DWORD PTR ds:0x805c154
push   eax
call   80492c0 <sprintf@plt>
add    esp,0x8
add    ebx,eax
mov    eax,DWORD PTR [ebp-0xc]
push   eax
mov    eax,DWORD PTR [ebp-0x8]
push   eax
push   0x8055aa8
mov    edx,ebx
add    edx,DWORD PTR ds:0x805c154
push   edx
call   80492c0 <sprintf@plt>
mov    edx,eax
add    ebx,edx
mov    eax,ebx
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
xor    esi,esi
mov    eax,ds:0x8127844
mov    ecx,DWORD PTR [eax+0xdc]
add    ecx,DWORD PTR [eax+0xd8]
mov    eax,ecx
xor    edx,edx
div    DWORD PTR ds:0x8169d48
mov    ecx,eax
mov    edi,0x3c
cdq    
idiv   edi
mov    DWORD PTR [ebp-0x4],edx
mov    eax,0x88888889
imul   ecx
mov    ebx,edx
add    ebx,ecx
sar    ebx,0x5
mov    DWORD PTR [ebp-0xc],ebx
sar    ecx,0x1f
sub    DWORD PTR [ebp-0xc],ecx
mov    eax,0x88888889
imul   DWORD PTR [ebp-0xc]
mov    ecx,edx
add    ecx,DWORD PTR [ebp-0xc]
sar    ecx,0x5
mov    edi,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x8],edi
sar    DWORD PTR [ebp-0x8],0x1f
sub    ecx,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp-0x8],ecx
shl    DWORD PTR [ebp-0x8],0x4
sub    DWORD PTR [ebp-0x8],ecx
mov    eax,DWORD PTR [ebp-0x8]
shl    eax,0x2
mov    ebx,edi
sub    ebx,eax
mov    eax,0x2aaaaaab
imul   ecx
sar    edx,0x2
mov    DWORD PTR [ebp-0x8],ecx
sar    DWORD PTR [ebp-0x8],0x1f
mov    edi,DWORD PTR [ebp-0x8]
sub    edx,edi
mov    DWORD PTR [ebp-0xc],edx
lea    eax,[edx+edx*2]
shl    eax,0x3
sub    ecx,eax
mov    DWORD PTR [ebp-0x10],ecx
test   edx,edx
je     804bea1 <strcpy@plt+0x2b91>
push   edx
push   0x8055ac4
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
add    esp,0xc
mov    esi,eax
mov    edx,DWORD PTR [ebp-0x4]
push   edx
push   ebx
mov    edi,DWORD PTR [ebp-0x10]
push   edi
push   0x8055ac8
mov    ecx,esi
add    ecx,DWORD PTR ds:0x805c154
push   ecx
call   80492c0 <sprintf@plt>
mov    ecx,eax
add    esi,ecx
mov    eax,esi
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xf4]
xor    edx,edx
div    DWORD PTR ds:0x8169d48
add    eax,DWORD PTR ds:0x812784c
mov    DWORD PTR [ebp-0x4],eax
mov    ecx,DWORD PTR ds:0x8127848
sub    ecx,eax
mov    eax,ecx
test   eax,eax
jge    804befe <strcpy@plt+0x2bee>
xor    eax,eax
cmp    eax,0x15180
jle    804bf16 <strcpy@plt+0x2c06>
lea    eax,[ebp-0x4]
push   eax
call   8049180 <ctime@plt>
add    esp,0x4
add    eax,0x4
jmp    804bf25 <strcpy@plt+0x2c15>
lea    eax,[ebp-0x4]
push   eax
call   8049180 <ctime@plt>
add    esp,0x4
add    eax,0xa
push   eax
push   DWORD PTR ds:0x805c154
call   8049310 <strcpy@plt>
mov    eax,ds:0x805c154
mov    BYTE PTR [eax+0x6],0x0
mov    eax,0x6
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    eax,ds:0x8127844
mov    ecx,DWORD PTR ds:0x8169cc4
imul   ecx,DWORD PTR ds:0x8169d48
mov    ebx,DWORD PTR ds:0x805c154
mov    esi,DWORD PTR [eax+0x6c]
test   esi,esi
jne    804bf78 <strcpy@plt+0x2c68>
push   0x8055af3
push   ebx
call   80492c0 <sprintf@plt>
jmp    804bfdd <strcpy@plt+0x2ccd>
cmp    esi,0xffffffff
jne    804bf90 <strcpy@plt+0x2c80>
push   0x8055af9
push   ebx
call   80492c0 <sprintf@plt>
jmp    804bfdd <strcpy@plt+0x2ccd>
lea    esi,[esi+0x0]
sub    esi,ecx
jns    804bf96 <strcpy@plt+0x2c86>
xor    esi,esi
cmp    esi,0x270f
jbe    804bfb6 <strcpy@plt+0x2ca6>
mov    eax,0x51eb851f
mul    esi
shr    edx,0x5
push   edx
push   0x8055aff
push   ebx
call   80492c0 <sprintf@plt>
jmp    804bfdd <strcpy@plt+0x2ccd>
mov    eax,0x51eb851f
mul    esi
mov    ecx,edx
shr    ecx,0x5
lea    eax,[ecx+ecx*4]
mov    DWORD PTR [ebp-0x4],eax
lea    edx,[eax+eax*4]
shl    edx,0x2
sub    esi,edx
push   esi
push   ecx
push   0x8055b04
push   ebx
call   80492c0 <sprintf@plt>
mov    ecx,eax
mov    eax,ecx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    eax,ds:0x8127844
mov    ebx,DWORD PTR ds:0x805c154
mov    esi,DWORD PTR [eax+0x78]
test   esi,esi
jne    804c010 <strcpy@plt+0x2d00>
push   0x8055af3
push   ebx
call   80492c0 <sprintf@plt>
jmp    804c06f <strcpy@plt+0x2d5f>
nop
cmp    esi,0xffffffff
jne    804c022 <strcpy@plt+0x2d12>
push   0x8055af9
push   ebx
call   80492c0 <sprintf@plt>
jmp    804c06f <strcpy@plt+0x2d5f>
test   esi,esi
jge    804c028 <strcpy@plt+0x2d18>
xor    esi,esi
cmp    esi,0x270f
jbe    804c048 <strcpy@plt+0x2d38>
mov    eax,0x51eb851f
mul    esi
shr    edx,0x5
push   edx
push   0x8055aff
push   ebx
call   80492c0 <sprintf@plt>
jmp    804c06f <strcpy@plt+0x2d5f>
mov    eax,0x51eb851f
mul    esi
mov    ecx,edx
shr    ecx,0x5
lea    eax,[ecx+ecx*4]
mov    DWORD PTR [ebp-0x4],eax
lea    edx,[eax+eax*4]
shl    edx,0x2
sub    esi,edx
push   esi
push   ecx
push   0x8055b04
push   ebx
call   80492c0 <sprintf@plt>
mov    ecx,eax
mov    eax,ecx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    edx,ebx
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    DWORD PTR ds:0x8127840,0x0
je     804c0b0 <strcpy@plt+0x2da0>
cmp    ecx,0x8
jle    804c0a6 <strcpy@plt+0x2d96>
push   ebx
jmp    804c0d8 <strcpy@plt+0x2dc8>
push   ebx
push   0x8055b45
jmp    804c0dd <strcpy@plt+0x2dcd>
mov    esi,esi
xor    edx,edx
cmp    BYTE PTR [ebx],0x30
jne    804c0be <strcpy@plt+0x2dae>
inc    edx
cmp    BYTE PTR [edx+ebx*1],0x30
je     804c0b7 <strcpy@plt+0x2da7>
mov    eax,ecx
sub    eax,edx
cmp    eax,0x8
jbe    804c0d3 <strcpy@plt+0x2dc3>
lea    eax,[ecx+ebx*1-0x8]
push   eax
push   0x8055b52
jmp    804c0dd <strcpy@plt+0x2dcd>
lea    eax,[ecx+ebx*1-0x8]
push   eax
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
lea    esp,[ebp-0x8]
pop    ebx
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
push   DWORD PTR [edx]
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
push   DWORD PTR [edx]
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    ecx,DWORD PTR ds:0x805c0d4
xor    edx,edx
xor    ebx,ebx
xor    esi,esi
test   ecx,ecx
je     804c18d <strcpy@plt+0x2e7d>
mov    esi,esi
mov    eax,DWORD PTR [ecx+0x18]
and    eax,0xf
cmp    eax,0x4
je     804c161 <strcpy@plt+0x2e51>
jg     804c143 <strcpy@plt+0x2e33>
test   eax,eax
je     804c180 <strcpy@plt+0x2e70>
jmp    804c148 <strcpy@plt+0x2e38>
cmp    eax,0x6
je     804c154 <strcpy@plt+0x2e44>
add    edx,DWORD PTR [ecx+0xc]
add    edx,ebx
mov    ebx,0x1
jmp    804c185 <strcpy@plt+0x2e75>
inc    esi
add    edx,DWORD PTR [ecx+0xc]
add    edx,ebx
mov    ebx,0x1
jmp    804c185 <strcpy@plt+0x2e75>
mov    eax,DWORD PTR [ecx]
test   eax,eax
je     804c170 <strcpy@plt+0x2e60>
add    edx,DWORD PTR [ecx+0xc]
jmp    804c173 <strcpy@plt+0x2e63>
lea    esi,[esi+eiz*1+0x0]
add    edx,0x3
add    edx,ebx
mov    ebx,0x1
jmp    804c187 <strcpy@plt+0x2e77>
lea    esi,[esi+eiz*1+0x0]
add    edx,DWORD PTR [ecx+0xc]
xor    ebx,ebx
mov    eax,DWORD PTR [ecx]
mov    ecx,eax
test   ecx,ecx
jne    804c130 <strcpy@plt+0x2e20>
mov    eax,ds:0x805c104
mov    ds:0x8127858,eax
cmp    eax,edx
jae    804c1b2 <strcpy@plt+0x2ea2>
mov    ecx,eax
lea    esi,[esi+0x0]
cmp    eax,0x63fff
ja     804c1b2 <strcpy@plt+0x2ea2>
add    eax,ecx
mov    ds:0x8127858,eax
cmp    eax,edx
jb     804c1a0 <strcpy@plt+0x2e90>
lea    eax,[esi*8+0x0]
sub    eax,esi
add    eax,edx
cmp    eax,DWORD PTR ds:0x8127858
setbe  al
mov    edi,eax
and    edi,0x1
mov    DWORD PTR ds:0x8127840,edi
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0x0
mov    DWORD PTR [ebp-0x8],0x0
xor    ebx,ebx
mov    DWORD PTR [ebp-0xc],0x0
mov    esi,DWORD PTR ds:0x805c0d4
cmp    DWORD PTR [ebp+0x8],0xffffffff
jne    804c240 <strcpy@plt+0x2f30>
call   804c118 <strcpy@plt+0x2e08>
cmp    DWORD PTR ds:0x805c164,0x0
jne    804c453 <strcpy@plt+0x3143>
dec    DWORD PTR ds:0x805c0e8
jne    804c236 <strcpy@plt+0x2f26>
mov    eax,ds:0x805c0dc
mov    ds:0x805c0e8,eax
push   0x0
call   804c1dc <strcpy@plt+0x2ecc>
add    esp,0x4
push   0x1
call   8049220 <exit@plt>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp+0x8],0x0
je     804c262 <strcpy@plt+0x2f52>
dec    DWORD PTR ds:0x805c0e8
jne    804c262 <strcpy@plt+0x2f52>
mov    eax,ds:0x805c0dc
mov    ds:0x805c0e8,eax
push   0x0
call   804c1dc <strcpy@plt+0x2ecc>
add    esp,0x4
mov    DWORD PTR ds:0x805c164,0x1
mov    eax,DWORD PTR [ebp+0x8]
mov    ds:0x8127844,eax
cmp    DWORD PTR ds:0x8127858,0xc8000
jbe    804c293 <strcpy@plt+0x2f83>
push   0x8058cbd
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
mov    DWORD PTR [ebp-0x10],0x0
mov    edx,DWORD PTR [ebp-0x8]
mov    eax,DWORD PTR [ebp-0x4]
cmp    edx,eax
jge    804c2a6 <strcpy@plt+0x2f96>
mov    edx,eax
cmp    DWORD PTR [esi],0x0
je     804c2b0 <strcpy@plt+0x2fa0>
mov    eax,DWORD PTR [esi+0xc]
jmp    804c2b7 <strcpy@plt+0x2fa7>
mov    eax,ds:0x8127858
sub    eax,edx
mov    ds:0x805c15c,eax
mov    eax,DWORD PTR [ebp-0x8]
add    eax,DWORD PTR [esi+0xc]
sub    eax,DWORD PTR [ebp-0x4]
mov    ds:0x805c160,eax
cmp    DWORD PTR [ebp+0x8],0x0
je     804c2e0 <strcpy@plt+0x2fd0>
mov    edx,DWORD PTR [esi+0x8]
test   edx,edx
je     804c2e0 <strcpy@plt+0x2fd0>
call   edx
mov    ecx,eax
jmp    804c300 <strcpy@plt+0x2ff0>
lea    esi,[esi+0x0]
push   DWORD PTR [esi+0x4]
push   DWORD PTR ds:0x805c154
call   8049310 <strcpy@plt>
add    esp,0x8
mov    edi,eax
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
mov    edx,DWORD PTR [esi+0x18]
and    edx,0xf
cmp    edx,0x6
ja     804c3b0 <strcpy@plt+0x30a0>
jmp    DWORD PTR [edx*4+0x8058ce8]
cmp    DWORD PTR ds:0x8127840,0x0
je     804c330 <strcpy@plt+0x3020>
mov    ebx,0x10
sub    ebx,ecx
mov    DWORD PTR [ebp-0x10],0x7
jmp    804c35e <strcpy@plt+0x304e>
nop
mov    ebx,0x9
jmp    804c35c <strcpy@plt+0x304c>
mov    ebx,DWORD PTR [esi+0xc]
sub    ebx,ecx
jns    804c340 <strcpy@plt+0x3030>
xor    ebx,ebx
cmp    DWORD PTR ds:0x805c130,0x0
jne    804c3c3 <strcpy@plt+0x30b3>
xor    ebx,ebx
jmp    804c3c3 <strcpy@plt+0x30b3>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x805c134,0x0
je     804c364 <strcpy@plt+0x3054>
mov    ebx,DWORD PTR [esi+0xc]
sub    ebx,ecx
test   ebx,ebx
jge    804c3c3 <strcpy@plt+0x30b3>
jmp    804c349 <strcpy@plt+0x3039>
cmp    DWORD PTR [esi],0x0
je     804c384 <strcpy@plt+0x3074>
mov    edx,DWORD PTR ds:0x805c154
mov    eax,DWORD PTR [esi+0xc]
jmp    804c3aa <strcpy@plt+0x309a>
cmp    DWORD PTR [esi],0x0
je     804c384 <strcpy@plt+0x3074>
mov    edx,DWORD PTR ds:0x805c154
mov    eax,DWORD PTR [esi+0xc]
jmp    804c3aa <strcpy@plt+0x309a>
mov    ecx,DWORD PTR [ebp-0x4]
sub    ecx,DWORD PTR [ebp-0x8]
test   ecx,ecx
jg     804c391 <strcpy@plt+0x3081>
mov    ecx,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR ds:0x8127858
sub    edx,DWORD PTR [ebp-0x8]
sub    edx,ecx
test   edx,edx
jg     804c3a5 <strcpy@plt+0x3095>
mov    edx,0x1
mov    eax,ds:0x805c154
mov    BYTE PTR [edx+eax*1],0x0
jmp    804c349 <strcpy@plt+0x3039>
push   DWORD PTR ds:0x805c604
push   0x8058cd1
call   8049090 <fputs@plt>
add    esp,0x8
mov    eax,DWORD PTR [ebp-0x4]
sub    eax,DWORD PTR [ebp-0x8]
lea    edx,[ebx+eax*1]
test   edx,edx
jg     804c3d3 <strcpy@plt+0x30c3>
mov    edx,DWORD PTR [ebp-0xc]
cmp    edx,0x1000
jle    804c3e0 <strcpy@plt+0x30d0>
mov    edx,0x1000
mov    eax,ds:0x805c154
sub    eax,edx
push   eax
push   0x8055ade
push   DWORD PTR ds:0x805c600
call   8048f70 <fprintf@plt>
mov    edx,eax
add    DWORD PTR [ebp-0x8],edx
mov    eax,DWORD PTR [esi+0xc]
add    DWORD PTR [ebp-0x4],eax
mov    eax,DWORD PTR [ebp-0x10]
add    DWORD PTR [ebp-0x4],eax
add    esp,0xc
cmp    DWORD PTR [esi+0x8],0x0
je     804c430 <strcpy@plt+0x3120>
mov    edx,DWORD PTR [esi]
test   edx,edx
je     804c430 <strcpy@plt+0x3120>
cmp    DWORD PTR [edx+0x8],0x0
je     804c430 <strcpy@plt+0x3120>
inc    DWORD PTR [ebp-0x4]
mov    DWORD PTR [ebp-0xc],0x1
jmp    804c439 <strcpy@plt+0x3129>
lea    esi,[esi+0x0]
mov    DWORD PTR [ebp-0xc],0x0
mov    edx,DWORD PTR [esi]
mov    esi,edx
test   esi,esi
jne    804c293 <strcpy@plt+0x2f83>
push   DWORD PTR ds:0x805c600
push   0x8058ce5
call   8049090 <fputs@plt>
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   0x1000
push   0x20
push   DWORD PTR ds:0x805c158
call   8049280 <memset@plt>
add    esp,0xc
push   0x0
push   0x0
call   8053380 <strcpy@plt+0xa070>
mov    ds:0x8169cc4,eax
push   0x0
call   8049060 <time@plt>
mov    ds:0x8127848,eax
sub    eax,DWORD PTR ds:0x8169cc4
mov    ds:0x812784c,eax
call   805405c <strcpy@plt+0xad4c>
mov    ds:0x8127850,eax
add    esp,0xc
call   8049040 <getpagesize@plt>
cmp    eax,0x2000
je     804c520 <strcpy@plt+0x3210>
jg     804c4e0 <strcpy@plt+0x31d0>
cmp    eax,0x800
je     804c550 <strcpy@plt+0x3240>
jg     804c4d0 <strcpy@plt+0x31c0>
cmp    eax,0x400
je     804c560 <strcpy@plt+0x3250>
jmp    804c530 <strcpy@plt+0x3220>
mov    esi,esi
cmp    eax,0x1000
je     804c543 <strcpy@plt+0x3233>
jmp    804c530 <strcpy@plt+0x3220>
lea    esi,[esi+eiz*1+0x0]
cmp    eax,0x8000
je     804c505 <strcpy@plt+0x31f5>
jg     804c4f2 <strcpy@plt+0x31e2>
cmp    eax,0x4000
je     804c511 <strcpy@plt+0x3201>
jmp    804c530 <strcpy@plt+0x3220>
cmp    eax,0x10000
jne    804c530 <strcpy@plt+0x3220>
mov    DWORD PTR ds:0x8127854,0x10
jmp    804c56a <strcpy@plt+0x325a>
mov    DWORD PTR ds:0x8127854,0xf
jmp    804c56a <strcpy@plt+0x325a>
mov    DWORD PTR ds:0x8127854,0xe
jmp    804c56a <strcpy@plt+0x325a>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x8127854,0xd
jmp    804c56a <strcpy@plt+0x325a>
lea    esi,[esi+eiz*1+0x0]
push   0x8058d20
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
mov    DWORD PTR ds:0x8127854,0xc
jmp    804c56a <strcpy@plt+0x325a>
nop
mov    DWORD PTR ds:0x8127854,0xb
jmp    804c56a <strcpy@plt+0x325a>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8127854,0xa
call   804c118 <strcpy@plt+0x2e08>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,0x8055b58
mov    eax,ds:0x8055b58
cmp    BYTE PTR [eax],0x7e
je     804c5b7 <strcpy@plt+0x32a7>
mov    ebx,0x8055b5c
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebx+0x4],0x804d0b0
je     804c5aa <strcpy@plt+0x329a>
push   DWORD PTR [ebx]
push   DWORD PTR [esi]
push   0x8058cac
call   8049120 <printf@plt>
add    esp,0xc
add    ebx,0x20
add    esi,0x20
mov    eax,DWORD PTR [esi]
cmp    BYTE PTR [eax],0x7e
jne    804c590 <strcpy@plt+0x3280>
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,0x8058b14
cmp    DWORD PTR ds:0x8058b14,0x7e
je     804c5e0 <strcpy@plt+0x32d0>
cmp    DWORD PTR [eax],edx
je     804c5e2 <strcpy@plt+0x32d2>
add    eax,0xc
cmp    DWORD PTR [eax],0x7e
jne    804c5d4 <strcpy@plt+0x32c4>
xor    eax,eax
leave  
ret    
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,0x8058bd8
cmp    DWORD PTR ds:0x8058bd8,0x7e
je     804c604 <strcpy@plt+0x32f4>
cmp    DWORD PTR [eax],edx
je     804c606 <strcpy@plt+0x32f6>
add    eax,0x8
cmp    DWORD PTR [eax],0x7e
jne    804c5f8 <strcpy@plt+0x32e8>
xor    eax,eax
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x20
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x20],eax
push   0x804c0f0
push   0x20
push   0xcc
push   0x8055b58
lea    eax,[ebp-0x20]
push   eax
call   80492e0 <bsearch@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x8
mov    eax,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],eax
push   0x804c104
push   0x8
push   0x30
push   0x8057cd4
lea    eax,[ebp-0x8]
push   eax
call   80492e0 <bsearch@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
xor    eax,eax
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x60]
mov    eax,DWORD PTR [edx+0x60]
cmp    ecx,eax
jge    804c680 <strcpy@plt+0x3370>
mov    eax,0xffffffff
jmp    804c68d <strcpy@plt+0x337d>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c688 <strcpy@plt+0x3378>
xor    eax,eax
jmp    804c68d <strcpy@plt+0x337d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x64]
mov    eax,DWORD PTR [edx+0x64]
cmp    ecx,eax
jge    804c6b0 <strcpy@plt+0x33a0>
mov    eax,0xffffffff
jmp    804c6bd <strcpy@plt+0x33ad>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c6b8 <strcpy@plt+0x33a8>
xor    eax,eax
jmp    804c6bd <strcpy@plt+0x33ad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x68]
mov    eax,DWORD PTR [edx+0x68]
cmp    ecx,eax
jge    804c6e0 <strcpy@plt+0x33d0>
mov    eax,0xffffffff
jmp    804c6ed <strcpy@plt+0x33dd>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c6e8 <strcpy@plt+0x33d8>
xor    eax,eax
jmp    804c6ed <strcpy@plt+0x33dd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x6c]
mov    eax,DWORD PTR [edx+0x6c]
cmp    ecx,eax
jge    804c710 <strcpy@plt+0x3400>
mov    eax,0xffffffff
jmp    804c71d <strcpy@plt+0x340d>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c718 <strcpy@plt+0x3408>
xor    eax,eax
jmp    804c71d <strcpy@plt+0x340d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x70]
mov    eax,DWORD PTR [edx+0x70]
cmp    ecx,eax
jge    804c740 <strcpy@plt+0x3430>
mov    eax,0xffffffff
jmp    804c74d <strcpy@plt+0x343d>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c748 <strcpy@plt+0x3438>
xor    eax,eax
jmp    804c74d <strcpy@plt+0x343d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x74]
mov    eax,DWORD PTR [edx+0x74]
cmp    ecx,eax
jge    804c770 <strcpy@plt+0x3460>
mov    eax,0xffffffff
jmp    804c77d <strcpy@plt+0x346d>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c778 <strcpy@plt+0x3468>
xor    eax,eax
jmp    804c77d <strcpy@plt+0x346d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x78]
mov    eax,DWORD PTR [edx+0x78]
cmp    ecx,eax
jge    804c7a0 <strcpy@plt+0x3490>
mov    eax,0xffffffff
jmp    804c7ad <strcpy@plt+0x349d>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c7a8 <strcpy@plt+0x3498>
xor    eax,eax
jmp    804c7ad <strcpy@plt+0x349d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x7c]
mov    eax,DWORD PTR [edx+0x7c]
cmp    ecx,eax
jge    804c7d0 <strcpy@plt+0x34c0>
mov    eax,0xffffffff
jmp    804c7dd <strcpy@plt+0x34cd>
lea    esi,[esi+0x0]
cmp    ecx,eax
jg     804c7d8 <strcpy@plt+0x34c8>
xor    eax,eax
jmp    804c7dd <strcpy@plt+0x34cd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x80]
mov    eax,DWORD PTR [edx+0x80]
cmp    ecx,eax
jge    804c800 <strcpy@plt+0x34f0>
mov    eax,0xffffffff
jmp    804c80d <strcpy@plt+0x34fd>
cmp    ecx,eax
jg     804c808 <strcpy@plt+0x34f8>
xor    eax,eax
jmp    804c80d <strcpy@plt+0x34fd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x84]
mov    eax,DWORD PTR [edx+0x84]
cmp    ecx,eax
jge    804c830 <strcpy@plt+0x3520>
mov    eax,0xffffffff
jmp    804c83d <strcpy@plt+0x352d>
cmp    ecx,eax
jg     804c838 <strcpy@plt+0x3528>
xor    eax,eax
jmp    804c83d <strcpy@plt+0x352d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x88]
mov    eax,DWORD PTR [edx+0x88]
cmp    ecx,eax
jge    804c860 <strcpy@plt+0x3550>
mov    eax,0xffffffff
jmp    804c86d <strcpy@plt+0x355d>
cmp    ecx,eax
jg     804c868 <strcpy@plt+0x3558>
xor    eax,eax
jmp    804c86d <strcpy@plt+0x355d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x8c]
mov    eax,DWORD PTR [edx+0x8c]
cmp    ecx,eax
jge    804c890 <strcpy@plt+0x3580>
mov    eax,0xffffffff
jmp    804c89d <strcpy@plt+0x358d>
cmp    ecx,eax
jg     804c898 <strcpy@plt+0x3588>
xor    eax,eax
jmp    804c89d <strcpy@plt+0x358d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x90]
mov    eax,DWORD PTR [edx+0x90]
cmp    ecx,eax
jge    804c8c0 <strcpy@plt+0x35b0>
mov    eax,0xffffffff
jmp    804c8cd <strcpy@plt+0x35bd>
cmp    ecx,eax
jg     804c8c8 <strcpy@plt+0x35b8>
xor    eax,eax
jmp    804c8cd <strcpy@plt+0x35bd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x94]
mov    eax,DWORD PTR [edx+0x94]
cmp    ecx,eax
jge    804c8f0 <strcpy@plt+0x35e0>
mov    eax,0xffffffff
jmp    804c8fd <strcpy@plt+0x35ed>
cmp    ecx,eax
jg     804c8f8 <strcpy@plt+0x35e8>
xor    eax,eax
jmp    804c8fd <strcpy@plt+0x35ed>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x98]
mov    eax,DWORD PTR [edx+0x98]
cmp    ecx,eax
jae    804c920 <strcpy@plt+0x3610>
mov    eax,0xffffffff
jmp    804c92d <strcpy@plt+0x361d>
cmp    ecx,eax
ja     804c928 <strcpy@plt+0x3618>
xor    eax,eax
jmp    804c92d <strcpy@plt+0x361d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x9c]
mov    eax,DWORD PTR [edx+0x9c]
cmp    ecx,eax
jae    804c950 <strcpy@plt+0x3640>
mov    eax,0xffffffff
jmp    804c95d <strcpy@plt+0x364d>
cmp    ecx,eax
ja     804c958 <strcpy@plt+0x3648>
xor    eax,eax
jmp    804c95d <strcpy@plt+0x364d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xa0]
mov    eax,DWORD PTR [edx+0xa0]
cmp    ecx,eax
jae    804c980 <strcpy@plt+0x3670>
mov    eax,0xffffffff
jmp    804c98d <strcpy@plt+0x367d>
cmp    ecx,eax
ja     804c988 <strcpy@plt+0x3678>
xor    eax,eax
jmp    804c98d <strcpy@plt+0x367d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xa4]
mov    eax,DWORD PTR [edx+0xa4]
cmp    ecx,eax
jae    804c9b0 <strcpy@plt+0x36a0>
mov    eax,0xffffffff
jmp    804c9bd <strcpy@plt+0x36ad>
cmp    ecx,eax
ja     804c9b8 <strcpy@plt+0x36a8>
xor    eax,eax
jmp    804c9bd <strcpy@plt+0x36ad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xa8]
mov    eax,DWORD PTR [edx+0xa8]
cmp    ecx,eax
jae    804c9e0 <strcpy@plt+0x36d0>
mov    eax,0xffffffff
jmp    804c9ed <strcpy@plt+0x36dd>
cmp    ecx,eax
ja     804c9e8 <strcpy@plt+0x36d8>
xor    eax,eax
jmp    804c9ed <strcpy@plt+0x36dd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xac]
mov    eax,DWORD PTR [edx+0xac]
cmp    ecx,eax
jae    804ca10 <strcpy@plt+0x3700>
mov    eax,0xffffffff
jmp    804ca1d <strcpy@plt+0x370d>
cmp    ecx,eax
ja     804ca18 <strcpy@plt+0x3708>
xor    eax,eax
jmp    804ca1d <strcpy@plt+0x370d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xb0]
mov    eax,DWORD PTR [edx+0xb0]
cmp    ecx,eax
jae    804ca40 <strcpy@plt+0x3730>
mov    eax,0xffffffff
jmp    804ca4d <strcpy@plt+0x373d>
cmp    ecx,eax
ja     804ca48 <strcpy@plt+0x3738>
xor    eax,eax
jmp    804ca4d <strcpy@plt+0x373d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xb4]
mov    eax,DWORD PTR [edx+0xb4]
cmp    ecx,eax
jae    804ca70 <strcpy@plt+0x3760>
mov    eax,0xffffffff
jmp    804ca7d <strcpy@plt+0x376d>
cmp    ecx,eax
ja     804ca78 <strcpy@plt+0x3768>
xor    eax,eax
jmp    804ca7d <strcpy@plt+0x376d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xb8]
mov    eax,DWORD PTR [edx+0xb8]
cmp    ecx,eax
jae    804caa0 <strcpy@plt+0x3790>
mov    eax,0xffffffff
jmp    804caad <strcpy@plt+0x379d>
cmp    ecx,eax
ja     804caa8 <strcpy@plt+0x3798>
xor    eax,eax
jmp    804caad <strcpy@plt+0x379d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xbc]
mov    eax,DWORD PTR [edx+0xbc]
cmp    ecx,eax
jae    804cad0 <strcpy@plt+0x37c0>
mov    eax,0xffffffff
jmp    804cadd <strcpy@plt+0x37cd>
cmp    ecx,eax
ja     804cad8 <strcpy@plt+0x37c8>
xor    eax,eax
jmp    804cadd <strcpy@plt+0x37cd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xc0]
mov    eax,DWORD PTR [edx+0xc0]
cmp    ecx,eax
jae    804cb00 <strcpy@plt+0x37f0>
mov    eax,0xffffffff
jmp    804cb0d <strcpy@plt+0x37fd>
cmp    ecx,eax
ja     804cb08 <strcpy@plt+0x37f8>
xor    eax,eax
jmp    804cb0d <strcpy@plt+0x37fd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xc4]
mov    eax,DWORD PTR [edx+0xc4]
cmp    ecx,eax
jae    804cb30 <strcpy@plt+0x3820>
mov    eax,0xffffffff
jmp    804cb3d <strcpy@plt+0x382d>
cmp    ecx,eax
ja     804cb38 <strcpy@plt+0x3828>
xor    eax,eax
jmp    804cb3d <strcpy@plt+0x382d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xc8]
mov    eax,DWORD PTR [edx+0xc8]
cmp    ecx,eax
jae    804cb60 <strcpy@plt+0x3850>
mov    eax,0xffffffff
jmp    804cb6d <strcpy@plt+0x385d>
cmp    ecx,eax
ja     804cb68 <strcpy@plt+0x3858>
xor    eax,eax
jmp    804cb6d <strcpy@plt+0x385d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xcc]
mov    eax,DWORD PTR [edx+0xcc]
cmp    ecx,eax
jae    804cb90 <strcpy@plt+0x3880>
mov    eax,0xffffffff
jmp    804cb9d <strcpy@plt+0x388d>
cmp    ecx,eax
ja     804cb98 <strcpy@plt+0x3888>
xor    eax,eax
jmp    804cb9d <strcpy@plt+0x388d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xd0]
mov    eax,DWORD PTR [edx+0xd0]
cmp    ecx,eax
jae    804cbc0 <strcpy@plt+0x38b0>
mov    eax,0xffffffff
jmp    804cbcd <strcpy@plt+0x38bd>
cmp    ecx,eax
ja     804cbc8 <strcpy@plt+0x38b8>
xor    eax,eax
jmp    804cbcd <strcpy@plt+0x38bd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xd4]
mov    eax,DWORD PTR [edx+0xd4]
cmp    ecx,eax
jae    804cbf0 <strcpy@plt+0x38e0>
mov    eax,0xffffffff
jmp    804cbfd <strcpy@plt+0x38ed>
cmp    ecx,eax
ja     804cbf8 <strcpy@plt+0x38e8>
xor    eax,eax
jmp    804cbfd <strcpy@plt+0x38ed>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xd8]
mov    eax,DWORD PTR [edx+0xd8]
cmp    ecx,eax
jae    804cc20 <strcpy@plt+0x3910>
mov    eax,0xffffffff
jmp    804cc2d <strcpy@plt+0x391d>
cmp    ecx,eax
ja     804cc28 <strcpy@plt+0x3918>
xor    eax,eax
jmp    804cc2d <strcpy@plt+0x391d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xdc]
mov    eax,DWORD PTR [edx+0xdc]
cmp    ecx,eax
jae    804cc50 <strcpy@plt+0x3940>
mov    eax,0xffffffff
jmp    804cc5d <strcpy@plt+0x394d>
cmp    ecx,eax
ja     804cc58 <strcpy@plt+0x3948>
xor    eax,eax
jmp    804cc5d <strcpy@plt+0x394d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xe0]
mov    eax,DWORD PTR [edx+0xe0]
cmp    ecx,eax
jae    804cc80 <strcpy@plt+0x3970>
mov    eax,0xffffffff
jmp    804cc8d <strcpy@plt+0x397d>
cmp    ecx,eax
ja     804cc88 <strcpy@plt+0x3978>
xor    eax,eax
jmp    804cc8d <strcpy@plt+0x397d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xe4]
mov    eax,DWORD PTR [edx+0xe4]
cmp    ecx,eax
jae    804ccb0 <strcpy@plt+0x39a0>
mov    eax,0xffffffff
jmp    804ccbd <strcpy@plt+0x39ad>
cmp    ecx,eax
ja     804ccb8 <strcpy@plt+0x39a8>
xor    eax,eax
jmp    804ccbd <strcpy@plt+0x39ad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xe8]
mov    eax,DWORD PTR [edx+0xe8]
cmp    ecx,eax
jae    804cce0 <strcpy@plt+0x39d0>
mov    eax,0xffffffff
jmp    804cced <strcpy@plt+0x39dd>
cmp    ecx,eax
ja     804cce8 <strcpy@plt+0x39d8>
xor    eax,eax
jmp    804cced <strcpy@plt+0x39dd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xec]
mov    eax,DWORD PTR [edx+0xec]
cmp    ecx,eax
jae    804cd10 <strcpy@plt+0x3a00>
mov    eax,0xffffffff
jmp    804cd1d <strcpy@plt+0x3a0d>
cmp    ecx,eax
ja     804cd18 <strcpy@plt+0x3a08>
xor    eax,eax
jmp    804cd1d <strcpy@plt+0x3a0d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xf0]
mov    eax,DWORD PTR [edx+0xf0]
cmp    ecx,eax
jae    804cd40 <strcpy@plt+0x3a30>
mov    eax,0xffffffff
jmp    804cd4d <strcpy@plt+0x3a3d>
cmp    ecx,eax
ja     804cd48 <strcpy@plt+0x3a38>
xor    eax,eax
jmp    804cd4d <strcpy@plt+0x3a3d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xf4]
mov    eax,DWORD PTR [edx+0xf4]
cmp    ecx,eax
jae    804cd70 <strcpy@plt+0x3a60>
mov    eax,0xffffffff
jmp    804cd7d <strcpy@plt+0x3a6d>
cmp    ecx,eax
ja     804cd78 <strcpy@plt+0x3a68>
xor    eax,eax
jmp    804cd7d <strcpy@plt+0x3a6d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0xf8]
mov    eax,DWORD PTR [edx+0xf8]
cmp    ecx,eax
jae    804cda0 <strcpy@plt+0x3a90>
mov    eax,0xffffffff
jmp    804cdad <strcpy@plt+0x3a9d>
cmp    ecx,eax
ja     804cda8 <strcpy@plt+0x3a98>
xor    eax,eax
jmp    804cdad <strcpy@plt+0x3a9d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1a0]
mov    eax,DWORD PTR [edx+0x1a0]
cmp    ecx,eax
jge    804cdd0 <strcpy@plt+0x3ac0>
mov    eax,0xffffffff
jmp    804cddd <strcpy@plt+0x3acd>
cmp    ecx,eax
jg     804cdd8 <strcpy@plt+0x3ac8>
xor    eax,eax
jmp    804cddd <strcpy@plt+0x3acd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1a4]
mov    eax,DWORD PTR [edx+0x1a4]
cmp    ecx,eax
jge    804ce00 <strcpy@plt+0x3af0>
mov    eax,0xffffffff
jmp    804ce0d <strcpy@plt+0x3afd>
cmp    ecx,eax
jg     804ce08 <strcpy@plt+0x3af8>
xor    eax,eax
jmp    804ce0d <strcpy@plt+0x3afd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1a8]
mov    eax,DWORD PTR [edx+0x1a8]
cmp    ecx,eax
jge    804ce30 <strcpy@plt+0x3b20>
mov    eax,0xffffffff
jmp    804ce3d <strcpy@plt+0x3b2d>
cmp    ecx,eax
jg     804ce38 <strcpy@plt+0x3b28>
xor    eax,eax
jmp    804ce3d <strcpy@plt+0x3b2d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1ac]
mov    eax,DWORD PTR [edx+0x1ac]
cmp    ecx,eax
jge    804ce60 <strcpy@plt+0x3b50>
mov    eax,0xffffffff
jmp    804ce6d <strcpy@plt+0x3b5d>
cmp    ecx,eax
jg     804ce68 <strcpy@plt+0x3b58>
xor    eax,eax
jmp    804ce6d <strcpy@plt+0x3b5d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1b0]
mov    eax,DWORD PTR [edx+0x1b0]
cmp    ecx,eax
jge    804ce90 <strcpy@plt+0x3b80>
mov    eax,0xffffffff
jmp    804ce9d <strcpy@plt+0x3b8d>
cmp    ecx,eax
jg     804ce98 <strcpy@plt+0x3b88>
xor    eax,eax
jmp    804ce9d <strcpy@plt+0x3b8d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1b4]
mov    eax,DWORD PTR [edx+0x1b4]
cmp    ecx,eax
jge    804cec0 <strcpy@plt+0x3bb0>
mov    eax,0xffffffff
jmp    804cecd <strcpy@plt+0x3bbd>
cmp    ecx,eax
jg     804cec8 <strcpy@plt+0x3bb8>
xor    eax,eax
jmp    804cecd <strcpy@plt+0x3bbd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1b8]
mov    eax,DWORD PTR [edx+0x1b8]
cmp    ecx,eax
jge    804cef0 <strcpy@plt+0x3be0>
mov    eax,0xffffffff
jmp    804cefd <strcpy@plt+0x3bed>
cmp    ecx,eax
jg     804cef8 <strcpy@plt+0x3be8>
xor    eax,eax
jmp    804cefd <strcpy@plt+0x3bed>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1bc]
mov    eax,DWORD PTR [edx+0x1bc]
cmp    ecx,eax
jge    804cf20 <strcpy@plt+0x3c10>
mov    eax,0xffffffff
jmp    804cf2d <strcpy@plt+0x3c1d>
cmp    ecx,eax
jg     804cf28 <strcpy@plt+0x3c18>
xor    eax,eax
jmp    804cf2d <strcpy@plt+0x3c1d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1c0]
mov    eax,DWORD PTR [edx+0x1c0]
cmp    ecx,eax
jge    804cf50 <strcpy@plt+0x3c40>
mov    eax,0xffffffff
jmp    804cf5d <strcpy@plt+0x3c4d>
cmp    ecx,eax
jg     804cf58 <strcpy@plt+0x3c48>
xor    eax,eax
jmp    804cf5d <strcpy@plt+0x3c4d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1c4]
mov    eax,DWORD PTR [edx+0x1c4]
cmp    ecx,eax
jge    804cf80 <strcpy@plt+0x3c70>
mov    eax,0xffffffff
jmp    804cf8d <strcpy@plt+0x3c7d>
cmp    ecx,eax
jg     804cf88 <strcpy@plt+0x3c78>
xor    eax,eax
jmp    804cf8d <strcpy@plt+0x3c7d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1c8]
mov    eax,DWORD PTR [edx+0x1c8]
cmp    ecx,eax
jge    804cfb0 <strcpy@plt+0x3ca0>
mov    eax,0xffffffff
jmp    804cfbd <strcpy@plt+0x3cad>
cmp    ecx,eax
jg     804cfb8 <strcpy@plt+0x3ca8>
xor    eax,eax
jmp    804cfbd <strcpy@plt+0x3cad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1cc]
mov    eax,DWORD PTR [edx+0x1cc]
cmp    ecx,eax
jge    804cfe0 <strcpy@plt+0x3cd0>
mov    eax,0xffffffff
jmp    804cfed <strcpy@plt+0x3cdd>
cmp    ecx,eax
jg     804cfe8 <strcpy@plt+0x3cd8>
xor    eax,eax
jmp    804cfed <strcpy@plt+0x3cdd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1d0]
mov    eax,DWORD PTR [edx+0x1d0]
cmp    ecx,eax
jge    804d010 <strcpy@plt+0x3d00>
mov    eax,0xffffffff
jmp    804d01d <strcpy@plt+0x3d0d>
cmp    ecx,eax
jg     804d018 <strcpy@plt+0x3d08>
xor    eax,eax
jmp    804d01d <strcpy@plt+0x3d0d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1d4]
mov    eax,DWORD PTR [edx+0x1d4]
cmp    ecx,eax
jge    804d040 <strcpy@plt+0x3d30>
mov    eax,0xffffffff
jmp    804d04d <strcpy@plt+0x3d3d>
cmp    ecx,eax
jg     804d048 <strcpy@plt+0x3d38>
xor    eax,eax
jmp    804d04d <strcpy@plt+0x3d3d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ecx,DWORD PTR [eax+0x1d8]
mov    eax,DWORD PTR [edx+0x1d8]
cmp    ecx,eax
jae    804d070 <strcpy@plt+0x3d60>
mov    eax,0xffffffff
jmp    804d07d <strcpy@plt+0x3d6d>
cmp    ecx,eax
ja     804d078 <strcpy@plt+0x3d68>
xor    eax,eax
jmp    804d07d <strcpy@plt+0x3d6d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    cl,BYTE PTR [eax+0x1dc]
mov    al,BYTE PTR [edx+0x1dc]
cmp    cl,al
jge    804d0a0 <strcpy@plt+0x3d90>
mov    eax,0xffffffff
jmp    804d0ad <strcpy@plt+0x3d9d>
cmp    cl,al
jg     804d0a8 <strcpy@plt+0x3d98>
xor    eax,eax
jmp    804d0ad <strcpy@plt+0x3d9d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   0x2d
push   0x8055a80
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
call   804ba4c <strcpy@plt+0x273c>
mov    ebx,eax
add    ebx,DWORD PTR ds:0x805c154
push   0x8
mov    eax,ds:0x8127844
add    eax,0x190
push   eax
push   ebx
call   80495c4 <strcpy@plt+0x2b4>
add    ebx,eax
sub    ebx,DWORD PTR ds:0x805c154
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x70]
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0x1d8]
mov    eax,0xcccccccd
mul    edx
shr    edx,0x3
push   edx
push   0x8055ab6
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edx,eax
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
mov    eax,DWORD PTR [ebx+0x1d8]
mov    DWORD PTR [ebp-0x4],eax
mov    ecx,0xcccccccd
mul    ecx
shr    edx,0x3
lea    edx,[edx+edx*4]
add    edx,edx
sub    DWORD PTR [ebp-0x4],edx
mov    eax,DWORD PTR [ebp-0x4]
push   eax
mov    ebx,DWORD PTR [ebx+0x1d8]
mov    eax,ebx
mul    ecx
shr    edx,0x3
push   edx
push   0x8055aba
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edx,eax
mov    ebx,DWORD PTR [ebp-0xc]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1c8]
push   0x8055ac1
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1c0]
push   0x8055ac1
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1c4]
push   0x8055ac1
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x98]
push   0x8055ad7
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
cmp    DWORD PTR ds:0x805c130,0x0
jne    804d253 <strcpy@plt+0x3f43>
mov    edx,DWORD PTR ds:0x8127844
add    edx,0x110
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804d265 <strcpy@plt+0x3f55>
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1a0]
push   0x8055adb
jmp    804d26b <strcpy@plt+0x3f5b>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edi,DWORD PTR [ebp-0x8]
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
lea    edx,[ebx+0x160]
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804d2b4 <strcpy@plt+0x3fa4>
push   DWORD PTR [ebx+0x1ac]
push   0x8055adb
jmp    804d2ba <strcpy@plt+0x3faa>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
lea    edx,[ebx+0x150]
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804d304 <strcpy@plt+0x3ff4>
push   DWORD PTR [ebx+0x1a4]
push   0x8055adb
jmp    804d30a <strcpy@plt+0x3ffa>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
cmp    DWORD PTR ds:0x805c130,0x0
jne    804d34f <strcpy@plt+0x403f>
mov    edx,DWORD PTR ds:0x8127844
add    edx,0x120
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804d361 <strcpy@plt+0x4051>
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1a8]
push   0x8055adb
jmp    804d367 <strcpy@plt+0x4057>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edi,DWORD PTR [ebp-0x8]
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x68]
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR ds:0x8127844
mov    eax,0x27
sub    eax,DWORD PTR [edx+0x68]
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0x68]
add    eax,0x3c
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0xf8]
mov    eax,edx
and    eax,0xffffff
jne    804d400 <strcpy@plt+0x40f0>
push   0x8055ae1
jmp    804d418 <strcpy@plt+0x4108>
mov    esi,esi
cmp    DWORD PTR ds:0x805c134,0x0
je     804d411 <strcpy@plt+0x4101>
push   eax
push   0x8055ae3
jmp    804d41d <strcpy@plt+0x410d>
push   edx
call   8051cd4 <strcpy@plt+0x89c4>
push   eax
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   0x7
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1c0]
push   DWORD PTR [eax+0x1d0]
push   0x4
push   DWORD PTR ds:0x805c154
call   80512ec <strcpy@plt+0x7fdc>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   0x1
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1c0]
push   DWORD PTR [eax+0x1d0]
push   0xfff
push   DWORD PTR ds:0x805c154
call   80512ec <strcpy@plt+0x7fdc>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x805c154
mov    edx,DWORD PTR ds:0x8127844
mov    dl,BYTE PTR [edx+0x1dc]
mov    BYTE PTR [eax],dl
mov    edx,0x1
mov    eax,ds:0x8127844
cmp    DWORD PTR [eax+0x74],0x0
jne    804d4be <strcpy@plt+0x41ae>
cmp    BYTE PTR [eax+0x1dc],0x5a
je     804d4be <strcpy@plt+0x41ae>
mov    eax,ds:0x805c154
mov    BYTE PTR [eax+0x1],0x57
mov    edx,0x2
mov    eax,ds:0x8127844
cmp    DWORD PTR [eax+0x70],0x0
jge    804d4d3 <strcpy@plt+0x41c3>
mov    eax,ds:0x805c154
mov    BYTE PTR [edx+eax*1],0x3c
inc    edx
mov    eax,ds:0x8127844
cmp    DWORD PTR [eax+0x70],0x0
jle    804d4e8 <strcpy@plt+0x41d8>
mov    eax,ds:0x805c154
mov    BYTE PTR [edx+eax*1],0x4e
inc    edx
mov    eax,ds:0x8127844
cmp    DWORD PTR [eax+0x9c],0x0
je     804d4fb <strcpy@plt+0x41eb>
mov    eax,ds:0x805c154
mov    BYTE PTR [edx+eax*1],0x4c
inc    edx
mov    eax,ds:0x805c154
mov    BYTE PTR [edx+eax*1],0x0
mov    eax,edx
leave  
ret    
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR ds:0x805c154
mov    eax,ds:0x8127844
mov    al,BYTE PTR [eax+0x1dc]
mov    BYTE PTR [edx],al
mov    eax,ds:0x805c154
mov    BYTE PTR [eax+0x1],0x0
mov    eax,0x1
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xbc]
and    eax,0x777
push   eax
push   0x8055ae7
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1a8]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0xe8]
push   0x8055aed
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0xec]
push   0x8055aed
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0xf0]
push   0x8055aed
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
mov    ecx,DWORD PTR [ebx+0xdc]
add    ecx,DWORD PTR [ebx+0xd8]
cmp    DWORD PTR ds:0x805c0e4,0x0
je     804d603 <strcpy@plt+0x42f3>
mov    eax,DWORD PTR [ebx+0x64]
add    eax,DWORD PTR [ebx+0x60]
add    ecx,eax
mov    eax,ecx
xor    edx,edx
div    DWORD PTR ds:0x8169d48
mov    ecx,eax
mov    eax,0x88888889
mul    ecx
mov    ebx,edx
shr    ebx,0x5
mov    esi,ebx
shl    esi,0x4
sub    esi,ebx
shl    esi,0x2
sub    ecx,esi
push   ecx
push   ebx
push   0x8055b0f
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    ecx,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0x98]
shr    eax,0x2
push   eax
push   0x8055ad7
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
xor    eax,eax
mov    edx,DWORD PTR ds:0x8127844
mov    ecx,DWORD PTR [edx+0xb4]
test   ecx,ecx
je     804d68e <strcpy@plt+0x437e>
mov    eax,ecx
sub    eax,DWORD PTR [edx+0xe4]
add    eax,DWORD PTR [edx+0xe0]
shr    eax,0xa
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
xor    eax,eax
mov    edx,DWORD PTR ds:0x8127844
cmp    DWORD PTR [edx+0xb4],0x0
je     804d6cb <strcpy@plt+0x43bb>
mov    eax,DWORD PTR [edx+0xe0]
mov    edx,DWORD PTR [edx+0xe4]
sub    edx,eax
mov    eax,edx
shr    eax,0xa
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
xor    eax,eax
mov    edx,DWORD PTR ds:0x8127844
mov    ecx,DWORD PTR [edx+0xb4]
test   ecx,ecx
je     804d706 <strcpy@plt+0x43f6>
mov    eax,ecx
sub    eax,DWORD PTR [edx+0xe4]
add    eax,DWORD PTR [edx+0xe0]
shr    eax,0xa
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
xor    eax,eax
mov    edx,DWORD PTR ds:0x8127844
cmp    DWORD PTR [edx+0xb4],0x0
je     804d743 <strcpy@plt+0x4433>
mov    eax,DWORD PTR [edx+0xe0]
mov    edx,DWORD PTR [edx+0xe4]
sub    edx,eax
mov    eax,edx
shr    eax,0xa
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR ds:0x8127844
mov    eax,DWORD PTR [edx+0xc0]
cmp    DWORD PTR ds:0x805c0e4,0x0
je     804d776 <strcpy@plt+0x4466>
add    eax,DWORD PTR [edx+0xc8]
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR ds:0x8127844
mov    eax,DWORD PTR [edx+0xc4]
cmp    DWORD PTR ds:0x805c0e4,0x0
je     804d7aa <strcpy@plt+0x449a>
add    eax,DWORD PTR [edx+0xcc]
push   eax
push   0x8055ab2
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xb8]
cmp    eax,0x7fffffff
jne    804d7e1 <strcpy@plt+0x44d1>
push   0x8055b19
push   0x8055ade
jmp    804d7ea <strcpy@plt+0x44da>
shr    eax,0xa
push   eax
push   0x8055b1c
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xf8]
and    eax,0xffffff
jne    804d820 <strcpy@plt+0x4510>
push   0x8055ae1
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
jmp    804d831 <strcpy@plt+0x4521>
nop
push   eax
push   0x8055ae3
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
mov    ecx,DWORD PTR ds:0x8127854
add    ecx,0xfffffff6
mov    eax,DWORD PTR [eax+0x74]
shl    eax,cl
push   eax
push   0x8055ad7
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,ds:0x8127844
mov    edx,DWORD PTR [eax+0x74]
mov    DWORD PTR [ebp-0x4],edx
shl    DWORD PTR [ebp-0x4],0x5
sub    DWORD PTR [ebp-0x4],edx
mov    eax,DWORD PTR [ebp-0x4]
lea    edx,[edx+eax*4]
shl    edx,0x3
mov    ecx,DWORD PTR ds:0x8127854
mov    eax,ds:0x8127850
shr    eax,cl
mov    DWORD PTR [ebp-0x4],eax
mov    eax,edx
xor    edx,edx
div    DWORD PTR [ebp-0x4]
mov    ecx,eax
mov    eax,0xcccccccd
mul    ecx
shr    edx,0x3
lea    eax,[edx+edx*4]
add    eax,eax
sub    ecx,eax
push   ecx
push   edx
push   0x8055aba
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edx,eax
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xf4]
xor    edx,edx
div    DWORD PTR ds:0x8169d48
add    eax,DWORD PTR ds:0x812784c
mov    DWORD PTR [ebp-0x4],eax
lea    eax,[ebp-0x4]
push   eax
call   8049180 <ctime@plt>
push   eax
push   0x8055b21
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   esi
push   ebx
push   0x8127848
call   8048f30 <localtime@plt>
mov    esi,DWORD PTR [eax+0x14]
mov    ebx,DWORD PTR [eax+0x1c]
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xf4]
xor    edx,edx
div    DWORD PTR ds:0x8169d48
add    eax,DWORD PTR ds:0x812784c
mov    DWORD PTR [ebp-0x4],eax
lea    eax,[ebp-0x4]
push   eax
call   8048f30 <localtime@plt>
mov    edx,0x8055b29
add    esp,0x8
cmp    ebx,DWORD PTR [eax+0x1c]
je     804d953 <strcpy@plt+0x4643>
mov    edx,0x8055b2f
cmp    esi,DWORD PTR [eax+0x14]
je     804d95d <strcpy@plt+0x464d>
mov    edx,0x8055b34
push   eax
push   edx
push   0x2a
push   DWORD PTR ds:0x805c154
call   8048ff0 <strftime@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
mov    eax,ds:0x8127844
mov    eax,DWORD PTR [eax+0xf4]
xor    edx,edx
div    DWORD PTR ds:0x8169d48
add    eax,DWORD PTR ds:0x812784c
mov    DWORD PTR [ebp-0x4],eax
lea    eax,[ebp-0x4]
push   eax
call   8049180 <ctime@plt>
mov    edx,eax
add    esp,0x4
cmp    BYTE PTR [edx+0x8],0x20
jne    804d9ae <strcpy@plt+0x469e>
mov    BYTE PTR [edx+0x8],0x30
cmp    BYTE PTR [edx+0xb],0x20
jne    804d9b8 <strcpy@plt+0x46a8>
mov    BYTE PTR [edx+0xb],0x30
mov    eax,DWORD PTR [ebp-0x4]
add    eax,0x15180
cmp    eax,DWORD PTR ds:0x8127848
jbe    804d9d3 <strcpy@plt+0x46c3>
lea    eax,[edx+0xb]
push   eax
push   0x8055b37
jmp    804d9dc <strcpy@plt+0x46cc>
lea    eax,[edx+0x4]
push   eax
push   0x8055b3d
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   DWORD PTR ds:0x8127844
call   804c07c <strcpy@plt+0x2d6c>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
add    eax,0x18
push   eax
call   804c07c <strcpy@plt+0x2d6c>
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
add    eax,0x30
push   eax
call   804c07c <strcpy@plt+0x2d6c>
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
add    eax,0x48
push   eax
call   804c07c <strcpy@plt+0x2d6c>
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1ac]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1a4]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1b4]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1bc]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1a0]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1b0]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1b8]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
lea    edx,[ebx+0x180]
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804db50 <strcpy@plt+0x4840>
push   DWORD PTR [ebx+0x1bc]
push   0x8055adb
jmp    804db56 <strcpy@plt+0x4846>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   ebx
mov    ebx,DWORD PTR ds:0x8127844
lea    edx,[ebx+0x170]
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804dba0 <strcpy@plt+0x4890>
push   DWORD PTR [ebx+0x1b4]
push   0x8055adb
jmp    804dba6 <strcpy@plt+0x4896>
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
cmp    DWORD PTR ds:0x805c130,0x0
jne    804dbeb <strcpy@plt+0x48db>
mov    edx,DWORD PTR ds:0x8127844
add    edx,0x140
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804dc00 <strcpy@plt+0x48f0>
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1b8]
push   0x8055adb
jmp    804dc06 <strcpy@plt+0x48f6>
lea    esi,[esi+0x0]
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edi,DWORD PTR [ebp-0x8]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
cmp    DWORD PTR ds:0x805c130,0x0
jne    804dc4b <strcpy@plt+0x493b>
mov    edx,DWORD PTR ds:0x8127844
add    edx,0x130
mov    edi,edx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    ecx,DWORD PTR ds:0x805c15c
jbe    804dc60 <strcpy@plt+0x4950>
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1b0]
push   0x8055adb
jmp    804dc66 <strcpy@plt+0x4956>
lea    esi,[esi+0x0]
push   edx
push   0x8055ade
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
mov    edi,DWORD PTR [ebp-0x8]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1cc]
push   0x8055ac1
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
push   DWORD PTR [eax+0x1d4]
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,ds:0x8127844
cmp    BYTE PTR [eax+0x1dc],0x52
jne    804dce0 <strcpy@plt+0x49d0>
push   0x0
push   0x8055adb
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
jmp    804dcf0 <strcpy@plt+0x49e0>
lea    esi,[esi+0x0]
push   0x8055b56
push   DWORD PTR ds:0x805c154
call   80492c0 <sprintf@plt>
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x1058
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
cmp    BYTE PTR [esi],0x2f
jne    804dd32 <strcpy@plt+0x4a22>
lea    eax,[ebp-0x58]
push   eax
push   esi
push   0x3
call   8049030 <__xstat@plt>
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
mov    eax,ds:0x805c18c
jmp    804de76 <strcpy@plt+0x4b66>
push   esi
push   0x8058e2c
push   0x1000
lea    ebx,[ebp-0x1058]
push   ebx
call   80491d0 <snprintf@plt>
lea    edi,[ebp-0x58]
add    esp,0x10
push   edi
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
push   esi
push   0x8058e38
push   0x1000
push   ebx
call   80491d0 <snprintf@plt>
add    esp,0x10
push   edi
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
push   esi
push   0x8058e40
push   0x1000
push   ebx
call   80491d0 <snprintf@plt>
add    esp,0x10
push   edi
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
push   esi
push   0x8058e4b
push   0x1000
push   ebx
call   80491d0 <snprintf@plt>
add    esp,0x10
push   edi
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
push   esi
push   0x8058e56
push   0x1000
push   ebx
call   80491d0 <snprintf@plt>
add    esp,0x10
push   edi
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    804de50 <strcpy@plt+0x4b40>
movzx  edx,BYTE PTR [esi]
lea    eax,[edx-0x2d]
test   eax,eax
jne    804de09 <strcpy@plt+0x4af9>
movzx  eax,BYTE PTR [esi+0x1]
test   eax,eax
je     804de37 <strcpy@plt+0x4b27>
lea    eax,[edx-0x3f]
test   eax,eax
jne    804de18 <strcpy@plt+0x4b08>
movzx  eax,BYTE PTR [esi+0x1]
test   eax,eax
je     804de37 <strcpy@plt+0x4b27>
cmp    BYTE PTR [esi+0x1],0x0
jne    804dd28 <strcpy@plt+0x4a18>
push   edi
push   esi
push   0x3
call   8049030 <__xstat@plt>
test   eax,eax
jl     804dd28 <strcpy@plt+0x4a18>
mov    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ecx],0xffffffff
mov    DWORD PTR [ecx+0x4],0xffffffff
xor    eax,eax
jmp    804de76 <strcpy@plt+0x4b66>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebp-0x48]
and    eax,0xf000
cmp    eax,0x2000
jne    804de71 <strcpy@plt+0x4b61>
mov    eax,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x34]
mov    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ecx],eax
mov    DWORD PTR [ecx+0x4],edx
xor    eax,eax
jmp    804de76 <strcpy@plt+0x4b66>
mov    eax,ds:0x805c190
lea    esp,[ebp-0x1064]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
push   0x10
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x4],eax
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
lea    ecx,[ecx*8-0x8]
push   ecx
call   8048fc0 <malloc@plt>
mov    edx,eax
mov    esi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [esi+0x4],edx
mov    DWORD PTR [esi+0x8],0x0
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
push   ecx
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x8],eax
add    esp,0xc
push   ebx
mov    esi,eax
push   esi
call   8049310 <strcpy@plt>
add    esp,0x8
mov    edx,0x1
xor    edi,edi
mov    ecx,DWORD PTR [ebp-0x8]
mov    DWORD PTR [ebp-0x18],0x8058e67
mov    bl,BYTE PTR [esi]
lea    esi,[esi+0x0]
cmp    bl,0x20
je     804df17 <strcpy@plt+0x4c07>
jg     804df12 <strcpy@plt+0x4c02>
test   bl,bl
je     804df17 <strcpy@plt+0x4c07>
cmp    bl,0x9
je     804df17 <strcpy@plt+0x4c07>
jmp    804df26 <strcpy@plt+0x4c16>
cmp    bl,0x2c
jne    804df26 <strcpy@plt+0x4c16>
test   edx,edx
jne    804dfc0 <strcpy@plt+0x4cb0>
mov    edx,0x1
jmp    804df2d <strcpy@plt+0x4c1d>
test   edx,edx
je     804df2b <strcpy@plt+0x4c1b>
inc    edi
xor    edx,edx
inc    ecx
mov    al,BYTE PTR [ecx]
mov    bl,al
test   bl,bl
jne    804df00 <strcpy@plt+0x4bf0>
test   edx,edx
jne    804dfc0 <strcpy@plt+0x4cb0>
mov    eax,DWORD PTR [ebp-0x4]
mov    DWORD PTR [eax+0x8],edi
mov    ecx,DWORD PTR [ebp-0x8]
sub    edi,0x1
jb     804dfa0 <strcpy@plt+0x4c90>
lea    esi,[esi+eiz*1+0x0]
mov    edx,ecx
mov    bl,BYTE PTR [ecx]
jmp    804df5e <strcpy@plt+0x4c4e>
cmp    BYTE PTR [edx],0x9
je     804df6c <strcpy@plt+0x4c5c>
inc    edx
mov    bl,BYTE PTR [edx]
test   bl,bl
je     804df75 <strcpy@plt+0x4c65>
cmp    bl,0x20
je     804df6c <strcpy@plt+0x4c5c>
cmp    bl,0x2c
jne    804df56 <strcpy@plt+0x4c46>
cmp    BYTE PTR [edx],0x0
je     804df75 <strcpy@plt+0x4c65>
mov    ebx,edx
jmp    804df77 <strcpy@plt+0x4c67>
xor    ebx,ebx
test   ebx,ebx
je     804df7e <strcpy@plt+0x4c6e>
mov    BYTE PTR [ebx],0x0
mov    esi,DWORD PTR [ebp-0x4]
mov    esi,DWORD PTR [esi+0x4]
lea    eax,[esi+edi*8]
push   eax
push   ecx
mov    esi,DWORD PTR [ebp+0xc]
call   esi
mov    DWORD PTR [ebp-0x18],eax
add    esp,0x8
test   eax,eax
jne    804dfc0 <strcpy@plt+0x4cb0>
lea    ecx,[ebx+0x1]
sub    edi,0x1
jae    804df50 <strcpy@plt+0x4c40>
mov    eax,DWORD PTR [ebp-0x8]
push   eax
call   8049260 <free@plt>
mov    esi,DWORD PTR ds:0x805c10c
mov    eax,DWORD PTR [ebp-0x4]
mov    DWORD PTR [eax],esi
mov    ds:0x805c10c,eax
xor    eax,eax
jmp    804dfe0 <strcpy@plt+0x4cd0>
lea    esi,[esi+0x0]
mov    esi,DWORD PTR [ebp-0x8]
push   esi
call   8049260 <free@plt>
mov    eax,DWORD PTR [ebp-0x4]
push   DWORD PTR [eax+0x4]
call   8049260 <free@plt>
mov    esi,DWORD PTR [ebp-0x4]
push   esi
call   8049260 <free@plt>
mov    eax,DWORD PTR [ebp-0x18]
lea    esp,[ebp-0x24]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    eax,ds:0x8127864
mov    edx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [edx+eax*4]
jmp    804e6cd <strcpy@plt+0x53bd>
mov    eax,ds:0x8127868
movsx  eax,BYTE PTR [eax]
push   eax
push   0x8058e7a
call   8048ef0 <strchr@plt>
add    esp,0x8
test   eax,eax
jne    804e024 <strcpy@plt+0x4d14>
mov    DWORD PTR ds:0x805c16c,0x1
mov    eax,ds:0x8127868
mov    edx,eax
movsx  ecx,BYTE PTR [eax]
cmp    ecx,0x7a
ja     804e6c1 <strcpy@plt+0x53b1>
jmp    DWORD PTR [ecx*4+0x8059308]
mov    esi,esi
cmp    BYTE PTR [edx+0x1],0x0
je     804e055 <strcpy@plt+0x4d45>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e082 <strcpy@plt+0x4d72>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e086 <strcpy@plt+0x4d76>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e086 <strcpy@plt+0x4d76>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e090 <strcpy@plt+0x4d80>
mov    eax,0x8058ea0
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x804fcd0
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xd
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
cmp    BYTE PTR [edx+0x1],0x0
je     804e0d0 <strcpy@plt+0x4dc0>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e0fd <strcpy@plt+0x4ded>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e101 <strcpy@plt+0x4df1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e101 <strcpy@plt+0x4df1>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e110 <strcpy@plt+0x4e00>
mov    eax,0x8058ee0
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc6c
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x5
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    DWORD PTR ds:0x805c0cc,0x75
jmp    804e6c8 <strcpy@plt+0x53b8>
or     BYTE PTR ds:0x805c0d8,0x8
mov    eax,0x8058f20
jmp    804e6e2 <strcpy@plt+0x53d2>
or     BYTE PTR ds:0x805c0d8,0x20
mov    eax,0x8058f60
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    DWORD PTR ds:0x805c0f4,0x1
jmp    804e6c8 <strcpy@plt+0x53b8>
cmp    BYTE PTR [edx+0x1],0x0
je     804e190 <strcpy@plt+0x4e80>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e1bd <strcpy@plt+0x4ead>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e1c1 <strcpy@plt+0x4eb1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e1c1 <strcpy@plt+0x4eb1>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e1d0 <strcpy@plt+0x4ec0>
mov    eax,0x8058fa0
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x1
push   ebx
call   804adfc <strcpy@plt+0x1aec>
jmp    804e6e0 <strcpy@plt+0x53d0>
lea    esi,[esi+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e1f5 <strcpy@plt+0x4ee5>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e222 <strcpy@plt+0x4f12>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e226 <strcpy@plt+0x4f16>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e226 <strcpy@plt+0x4f16>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e230 <strcpy@plt+0x4f20>
mov    eax,0x8058fe0
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x804fc00
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x1
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
cmp    DWORD PTR ds:0x812785c,0x2
jne    804e280 <strcpy@plt+0x4f70>
mov    eax,ds:0x8127860
mov    edx,DWORD PTR [eax+0x4]
movzx  eax,BYTE PTR [edx]
add    eax,0xffffffd3
jne    804e27c <strcpy@plt+0x4f6c>
movzx  eax,BYTE PTR [edx+0x1]
add    eax,0xffffffaa
jne    804e27c <strcpy@plt+0x4f6c>
movzx  eax,BYTE PTR [edx+0x2]
test   eax,eax
je     804e290 <strcpy@plt+0x4f80>
mov    eax,0x8059007
jmp    804e6e2 <strcpy@plt+0x53d2>
lea    esi,[esi+0x0]
call   8054080 <strcpy@plt+0xad70>
push   0x0
call   8049220 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
or     BYTE PTR ds:0x805c110,0x8
jmp    804e6c8 <strcpy@plt+0x53b8>
lea    esi,[esi+eiz*1+0x0]
or     BYTE PTR ds:0x805c0d8,0x1
jmp    804e6c8 <strcpy@plt+0x53b8>
lea    esi,[esi+eiz*1+0x0]
or     BYTE PTR ds:0x805c110,0x4
jmp    804e6c8 <strcpy@plt+0x53b8>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c09c,0x1
jmp    804e6c8 <strcpy@plt+0x53b8>
nop
or     BYTE PTR ds:0x805c0d0,0x1
mov    DWORD PTR ds:0x805c128,0x1
jmp    804e6c8 <strcpy@plt+0x53b8>
cmp    BYTE PTR [edx+0x1],0x0
je     804e310 <strcpy@plt+0x5000>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e33d <strcpy@plt+0x502d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e341 <strcpy@plt+0x5031>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e341 <strcpy@plt+0x5031>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e350 <strcpy@plt+0x5040>
mov    eax,0x8059060
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fbbc
push   ebx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
je     804e573 <strcpy@plt+0x5263>
push   0x804fc6c
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e388 <strcpy@plt+0x5078>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x6
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    eax,0x80590c0
jmp    804e6e2 <strcpy@plt+0x53d2>
cmp    DWORD PTR ds:0x805c120,0x0
je     804e3a7 <strcpy@plt+0x5097>
or     BYTE PTR ds:0x805c0d0,0x2
jmp    804e6c8 <strcpy@plt+0x53b8>
or     BYTE PTR ds:0x805c0d8,0x2
jmp    804e6c8 <strcpy@plt+0x53b8>
or     BYTE PTR ds:0x805c0d0,0x4
jmp    804e6c8 <strcpy@plt+0x53b8>
nop
mov    eax,0x8059100
jmp    804e6e2 <strcpy@plt+0x53d2>
lea    esi,[esi+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e3e5 <strcpy@plt+0x50d5>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e412 <strcpy@plt+0x5102>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e416 <strcpy@plt+0x5106>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e416 <strcpy@plt+0x5106>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e420 <strcpy@plt+0x5110>
mov    eax,0x8059120
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    DWORD PTR ds:0x805c0f0,ebx
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
lea    esi,[esi+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e445 <strcpy@plt+0x5135>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e472 <strcpy@plt+0x5162>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e476 <strcpy@plt+0x5166>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e476 <strcpy@plt+0x5166>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e480 <strcpy@plt+0x5170>
mov    eax,0x8059160
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x2
push   ebx
call   804adfc <strcpy@plt+0x1aec>
or     DWORD PTR ds:0x805c16c,eax
jmp    804e6e0 <strcpy@plt+0x53d0>
cmp    BYTE PTR [edx+0x1],0x0
je     804e4a8 <strcpy@plt+0x5198>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e4d5 <strcpy@plt+0x51c5>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e4d9 <strcpy@plt+0x51c9>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e4d9 <strcpy@plt+0x51c9>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e4e3 <strcpy@plt+0x51d3>
mov    eax,0x80591a0
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x804fbbc
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xa
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e525 <strcpy@plt+0x5215>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e552 <strcpy@plt+0x5242>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e556 <strcpy@plt+0x5246>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e556 <strcpy@plt+0x5246>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e560 <strcpy@plt+0x5250>
mov    eax,0x80591e0
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x804fbbc
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xc
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
cmp    BYTE PTR [edx+0x1],0x0
je     804e5a0 <strcpy@plt+0x5290>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e5cd <strcpy@plt+0x52bd>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e5d1 <strcpy@plt+0x52c1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e5d1 <strcpy@plt+0x52c1>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e5e0 <strcpy@plt+0x52d0>
mov    eax,0x8059220
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804dd00
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xb
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
cmp    BYTE PTR [edx+0x1],0x0
je     804e620 <strcpy@plt+0x5310>
mov    DWORD PTR ds:0x805c16c,0x1
lea    ebx,[eax+0x1]
jmp    804e64d <strcpy@plt+0x533d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e651 <strcpy@plt+0x5341>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e651 <strcpy@plt+0x5341>
lea    esi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,esi
mov    ebx,DWORD PTR [ecx+edx*4+0x4]
test   ebx,ebx
jne    804e660 <strcpy@plt+0x5350>
mov    eax,0x8059250
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc00
push   ebx
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x2
xor    eax,eax
jmp    804e6e2 <strcpy@plt+0x53d2>
nop
inc    DWORD PTR ds:0x805c168
jmp    804e6c8 <strcpy@plt+0x53b8>
or     BYTE PTR ds:0x805c0d8,0x4
jmp    804e6c8 <strcpy@plt+0x53b8>
mov    eax,0x8059040
jmp    804e6e2 <strcpy@plt+0x53d2>
push   0x805926e
call   8049120 <printf@plt>
mov    eax,0x8059280
jmp    804e6e2 <strcpy@plt+0x53d2>
lea    esi,[esi+eiz*1+0x0]
push   0x80592b0
call   8049120 <printf@plt>
mov    eax,0x80592c0
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    eax,0x80592ee
jmp    804e6e2 <strcpy@plt+0x53d2>
mov    eax,ds:0x8127868
lea    esi,[eax+0x1]
mov    DWORD PTR ds:0x8127868,esi
cmp    BYTE PTR [eax+0x1],0x0
jne    804e000 <strcpy@plt+0x4cf0>
xor    eax,eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR ds:0x8127864
mov    eax,ds:0x8127860
mov    eax,DWORD PTR [eax+edx*4]
mov    ds:0x8127868,eax
cmp    BYTE PTR [eax],0x2d
jne    804e724 <strcpy@plt+0x5414>
cmp    DWORD PTR ds:0x805c170,0x0
jne    804ed80 <strcpy@plt+0x5a70>
mov    eax,0x80594f4
jmp    804ed9a <strcpy@plt+0x5a8a>
dec    eax
mov    ds:0x8127868,eax
test   BYTE PTR ds:0x805c0fc,0x10
je     804e750 <strcpy@plt+0x5440>
cmp    DWORD PTR ds:0x805c170,0x0
jne    804ed80 <strcpy@plt+0x5a70>
mov    eax,0x805950f
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x805c170,0x0
je     804ed80 <strcpy@plt+0x5a70>
mov    eax,0x8059540
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    eax,0x8059700
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    edx,DWORD PTR ds:0x8127868
mov    eax,edx
movsx  ecx,BYTE PTR [edx]
cmp    ecx,0x78
ja     804ed08 <strcpy@plt+0x59f8>
jmp    DWORD PTR [ecx*4+0x8059860]
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x805956a
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
mov    eax,0x8059580
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x812785c,0x2
jne    804e7d1 <strcpy@plt+0x54c1>
mov    eax,ds:0x8127860
mov    edx,DWORD PTR [eax+0x4]
movzx  eax,BYTE PTR [edx]
add    eax,0xffffffb4
jne    804e7cd <strcpy@plt+0x54bd>
movzx  eax,BYTE PTR [edx+0x1]
test   eax,eax
je     804e7e0 <strcpy@plt+0x54d0>
mov    eax,0x8059598
jmp    804ed9a <strcpy@plt+0x5a8a>
nop
lea    esi,[esi+eiz*1+0x0]
call   804c574 <strcpy@plt+0x3264>
push   0x0
call   8049220 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x80595c0
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e813 <strcpy@plt+0x5503>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804e840 <strcpy@plt+0x5530>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e844 <strcpy@plt+0x5534>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e844 <strcpy@plt+0x5534>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804e850 <strcpy@plt+0x5540>
mov    eax,0x8059600
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    esi,esi
mov    ds:0x805c0f0,eax
xor    eax,eax
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804e873 <strcpy@plt+0x5563>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804e8a0 <strcpy@plt+0x5590>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e8a4 <strcpy@plt+0x5594>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e8a4 <strcpy@plt+0x5594>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804e8b0 <strcpy@plt+0x55a0>
mov    eax,0x8059640
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    esi,esi
push   0x3
push   eax
call   804adfc <strcpy@plt+0x1aec>
jmp    804ed98 <strcpy@plt+0x5a88>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0e4,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
nop
push   0x10
call   8048fc0 <malloc@plt>
mov    ebx,eax
push   0x8
call   8048fc0 <malloc@plt>
mov    ecx,eax
mov    DWORD PTR [ebx+0x4],ecx
mov    eax,ds:0x805c0c4
mov    edx,DWORD PTR ds:0x805c0c8
mov    DWORD PTR [ecx],eax
mov    DWORD PTR [ecx+0x4],edx
mov    DWORD PTR [ebx+0xc],0xb
mov    DWORD PTR [ebx+0x8],0x1
mov    eax,ds:0x805c10c
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c10c,ebx
add    esp,0x8
jmp    804ed80 <strcpy@plt+0x5a70>
cmp    BYTE PTR [edx+0x1],0x0
je     804e930 <strcpy@plt+0x5620>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804e95d <strcpy@plt+0x564d>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804e961 <strcpy@plt+0x5651>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804e961 <strcpy@plt+0x5651>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804e970 <strcpy@plt+0x5660>
mov    eax,0x805966c
jmp    804ed9a <strcpy@plt+0x5a8a>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc00
push   eax
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804ed9a <strcpy@plt+0x5a8a>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x2
xor    eax,eax
jmp    804ed9a <strcpy@plt+0x5a8a>
cmp    DWORD PTR ds:0x812785c,0x2
jne    804e9b7 <strcpy@plt+0x56a7>
mov    eax,ds:0x8127860
mov    edx,DWORD PTR [eax+0x4]
movzx  eax,BYTE PTR [edx]
add    eax,0xffffffaa
jne    804e9b3 <strcpy@plt+0x56a3>
movzx  eax,BYTE PTR [edx+0x1]
test   eax,eax
je     804e9c1 <strcpy@plt+0x56b1>
mov    eax,0x805968b
jmp    804ed9a <strcpy@plt+0x5a8a>
call   8054080 <strcpy@plt+0xad70>
push   0x0
call   8049220 <exit@plt>
lea    esi,[esi+0x0]
mov    eax,0x80596c0
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
or     BYTE PTR ds:0x805c0d1,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
or     BYTE PTR ds:0x805c110,0x10
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x805c0b4,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
nop
mov    DWORD PTR ds:0x805c0b8,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
nop
mov    DWORD PTR ds:0x805c0cc,0x62
jmp    804ed80 <strcpy@plt+0x5a70>
nop
or     BYTE PTR ds:0x805c110,0x2
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR ds:0x805c0e0,0x0
jne    804e767 <strcpy@plt+0x5457>
test   BYTE PTR ds:0x805c0fc,0x2
je     804ea65 <strcpy@plt+0x5755>
mov    DWORD PTR ds:0x805c0e0,0x2
jmp    804ed80 <strcpy@plt+0x5a70>
mov    DWORD PTR ds:0x805c0e0,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
or     BYTE PTR ds:0x805c0d0,0x8
jmp    804ed80 <strcpy@plt+0x5a70>
mov    eax,0x8059740
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
or     BYTE PTR ds:0x805c0d0,0x10
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
mov    eax,ds:0x805c0fc
test   al,0x40
je     804eab5 <strcpy@plt+0x57a5>
or     BYTE PTR ds:0x805c0d1,0x2
jmp    804ed80 <strcpy@plt+0x5a70>
test   al,0x4
je     804ead0 <strcpy@plt+0x57c0>
push   0x5
push   0x8059761
call   804adfc <strcpy@plt+0x1aec>
add    esp,0x8
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+0x0]
mov    eax,0x8059100
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c134,0x1
mov    DWORD PTR ds:0x805c130,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804eb13 <strcpy@plt+0x5803>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804eb40 <strcpy@plt+0x5830>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804eb44 <strcpy@plt+0x5834>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804eb44 <strcpy@plt+0x5834>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804eb50 <strcpy@plt+0x5840>
mov    eax,0x8059160
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    esi,esi
push   0x4
push   eax
call   804adfc <strcpy@plt+0x1aec>
jmp    804ed98 <strcpy@plt+0x5a88>
lea    esi,[esi+0x0]
cmp    BYTE PTR [edx+0x1],0x0
je     804eb73 <strcpy@plt+0x5863>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804eba0 <strcpy@plt+0x5890>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804eba4 <strcpy@plt+0x5894>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804eba4 <strcpy@plt+0x5894>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804ebb0 <strcpy@plt+0x58a0>
mov    eax,0x8059780
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    esi,esi
push   0x804fbbc
push   eax
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804ed9a <strcpy@plt+0x5a8a>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xa
xor    eax,eax
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    DWORD PTR ds:0x805c0f8,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
or     BYTE PTR ds:0x805c0d0,0x20
jmp    804ed80 <strcpy@plt+0x5a70>
cmp    BYTE PTR [edx+0x1],0x0
je     804ec04 <strcpy@plt+0x58f4>
mov    DWORD PTR ds:0x805c16c,0x1
inc    eax
jmp    804ec31 <strcpy@plt+0x5921>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804ec35 <strcpy@plt+0x5925>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804ec35 <strcpy@plt+0x5925>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127864,edi
mov    eax,DWORD PTR [ecx+edx*4+0x4]
test   eax,eax
jne    804ec80 <strcpy@plt+0x5970>
push   0x10
call   8048fc0 <malloc@plt>
mov    ebx,eax
push   0x8
call   8048fc0 <malloc@plt>
mov    ecx,eax
mov    DWORD PTR [ebx+0x4],ecx
mov    eax,ds:0x805c0c4
mov    edx,DWORD PTR ds:0x805c0c8
mov    DWORD PTR [ecx],eax
mov    DWORD PTR [ecx+0x4],edx
mov    DWORD PTR [ebx+0xc],0xb
mov    DWORD PTR [ebx+0x8],0x1
mov    eax,ds:0x805c10c
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c10c,ebx
jmp    804ed98 <strcpy@plt+0x5a88>
lea    esi,[esi+0x0]
push   0x804dd00
push   eax
call   804de84 <strcpy@plt+0x4b74>
test   eax,eax
jne    804ed9a <strcpy@plt+0x5a8a>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xb
xor    eax,eax
jmp    804ed9a <strcpy@plt+0x5a8a>
or     BYTE PTR ds:0x805c0d0,0x40
jmp    804ed80 <strcpy@plt+0x5a70>
or     BYTE PTR ds:0x805c0d0,0x80
jmp    804ed80 <strcpy@plt+0x5a70>
mov    esi,esi
inc    DWORD PTR ds:0x805c168
jmp    804ed80 <strcpy@plt+0x5a70>
nop
lea    esi,[esi+eiz*1+0x0]
or     BYTE PTR ds:0x805c110,0x1
jmp    804ed80 <strcpy@plt+0x5a70>
lea    esi,[esi+eiz*1+0x0]
push   0x805926e
call   8049120 <printf@plt>
mov    eax,0x80597c0
jmp    804ed9a <strcpy@plt+0x5a8a>
push   0x80592b0
call   8049120 <printf@plt>
mov    eax,0x8059800
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    al,BYTE PTR [edx]
add    al,0xd0
cmp    al,0x9
ja     804ed76 <strcpy@plt+0x5a66>
push   0x10
push   0x1
call   8049240 <calloc@plt>
mov    ebx,eax
push   0x8
push   0x1
call   8049240 <calloc@plt>
mov    esi,eax
mov    DWORD PTR [ebx+0x4],esi
mov    DWORD PTR [ebx+0x8],0x1
add    esp,0x10
lea    eax,[ebp-0x4]
push   0x0
push   0x0
push   eax
push   DWORD PTR ds:0x8127868
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x4]
cmp    BYTE PTR [eax],0x0
jne    804ed5e <strcpy@plt+0x5a4e>
cmp    edx,0x7fff
jg     804ed5e <strcpy@plt+0x5a4e>
test   edx,edx
jl     804ed5e <strcpy@plt+0x5a4e>
mov    DWORD PTR [esi],edx
mov    eax,ds:0x805c10c
mov    DWORD PTR [ebx],eax
mov    DWORD PTR ds:0x805c10c,ebx
mov    DWORD PTR [ebx+0xc],0xa
xor    eax,eax
jmp    804ed9a <strcpy@plt+0x5a8a>
mov    eax,0x8059840
jmp    804ed9a <strcpy@plt+0x5a8a>
lea    esi,[esi+0x0]
mov    eax,ds:0x8127868
lea    edi,[eax+0x1]
mov    DWORD PTR ds:0x8127868,edi
cmp    BYTE PTR [eax+0x1],0x0
jne    804e771 <strcpy@plt+0x5461>
xor    eax,eax
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
push   DWORD PTR [eax]
push   DWORD PTR [edx]
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x2c
push   edi
push   esi
push   ebx
lea    esi,[ebp-0x10]
mov    DWORD PTR [ebp-0x18],esi
lea    ebx,[ebp-0x18]
mov    DWORD PTR [ebp-0x2c],ebx
mov    DWORD PTR [ebx+0x4],0x0
mov    eax,ds:0x8127864
mov    edx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [edx+eax*4]
lea    edi,[eax+0x2]
mov    DWORD PTR [ebp-0x24],edi
xor    ecx,ecx
mov    al,BYTE PTR [eax+0x2]
test   al,al
je     804ee08 <strcpy@plt+0x5af8>
cmp    al,0x3a
je     804ee08 <strcpy@plt+0x5af8>
mov    edx,edi
cmp    BYTE PTR [edx],0x3d
je     804ee08 <strcpy@plt+0x5af8>
inc    edx
inc    ecx
mov    al,BYTE PTR [edx]
test   al,al
je     804ee08 <strcpy@plt+0x5af8>
cmp    al,0x3a
jne    804edf7 <strcpy@plt+0x5ae7>
mov    DWORD PTR [ebp-0x28],ecx
cmp    ecx,0xf
ja     804ee50 <strcpy@plt+0x5b40>
mov    ebx,DWORD PTR [ebp-0x28]
push   ebx
mov    edi,DWORD PTR [ebp-0x24]
push   edi
push   esi
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    BYTE PTR [ebx+esi*1],0x0
add    edi,ebx
mov    DWORD PTR ds:0x8127868,edi
push   0x804eda4
push   0x8
push   0x24
push   0x8059a44
mov    ebx,DWORD PTR [ebp-0x2c]
push   ebx
call   80492e0 <bsearch@plt>
add    esp,0x14
test   eax,eax
jne    804ee60 <strcpy@plt+0x5b50>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x8059c67
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
jmp    DWORD PTR [eax+0x4]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804ee7b <strcpy@plt+0x5b6b>
jg     804ee77 <strcpy@plt+0x5b67>
test   al,al
je     804ee90 <strcpy@plt+0x5b80>
jmp    804eec1 <strcpy@plt+0x5bb1>
cmp    al,0x3d
jne    804eec1 <strcpy@plt+0x5bb1>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804eec1 <strcpy@plt+0x5bb1>
mov    edx,eax
jmp    804eebd <strcpy@plt+0x5bad>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804eec1 <strcpy@plt+0x5bb1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804eec1 <strcpy@plt+0x5bb1>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804eed0 <strcpy@plt+0x5bc0>
mov    eax,0x8059c80
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc6c
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x5
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804ef18 <strcpy@plt+0x5c08>
jg     804ef14 <strcpy@plt+0x5c04>
test   al,al
je     804ef30 <strcpy@plt+0x5c20>
jmp    804ef61 <strcpy@plt+0x5c51>
cmp    al,0x3d
jne    804ef61 <strcpy@plt+0x5c51>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804ef61 <strcpy@plt+0x5c51>
mov    edx,eax
jmp    804ef5d <strcpy@plt+0x5c4d>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804ef61 <strcpy@plt+0x5c51>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804ef61 <strcpy@plt+0x5c51>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804ef70 <strcpy@plt+0x5c60>
mov    eax,0x8059cc0
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc00
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x1
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804efbf <strcpy@plt+0x5caf>
jg     804efb7 <strcpy@plt+0x5ca7>
test   al,al
je     804efd4 <strcpy@plt+0x5cc4>
jmp    804f040 <strcpy@plt+0x5d30>
cmp    al,0x3d
jne    804f040 <strcpy@plt+0x5d30>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f040 <strcpy@plt+0x5d30>
mov    edx,eax
jmp    804f001 <strcpy@plt+0x5cf1>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f040 <strcpy@plt+0x5d30>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f040 <strcpy@plt+0x5d30>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
je     804f040 <strcpy@plt+0x5d30>
cmp    BYTE PTR [edx],0x0
je     804f040 <strcpy@plt+0x5d30>
lea    eax,[ebp-0x1c]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x1c]
cmp    BYTE PTR [eax],0x0
jne    804f040 <strcpy@plt+0x5d30>
test   edx,edx
jle    804f040 <strcpy@plt+0x5d30>
cmp    edx,0x773593ff
jg     804f040 <strcpy@plt+0x5d30>
mov    DWORD PTR ds:0x805c104,edx
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    esi,esi
mov    eax,0x8059d00
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f066 <strcpy@plt+0x5d56>
mov    eax,0x8059d40
jmp    804f700 <strcpy@plt+0x63f0>
mov    DWORD PTR ds:0x805c0e4,0x1
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f090 <strcpy@plt+0x5d80>
mov    eax,0x8059d80
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0f4,0x1
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f0b7 <strcpy@plt+0x5da7>
mov    eax,0x8059dc0
jmp    804f700 <strcpy@plt+0x63f0>
cmp    DWORD PTR ds:0x805c0e0,0x0
jne    804f0f0 <strcpy@plt+0x5de0>
mov    DWORD PTR ds:0x805c0e0,0x1
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f0e7 <strcpy@plt+0x5dd7>
mov    eax,0x8059e00
jmp    804f700 <strcpy@plt+0x63f0>
cmp    DWORD PTR ds:0x805c0e0,0x0
je     804f100 <strcpy@plt+0x5df0>
mov    eax,0x8059700
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
mov    DWORD PTR ds:0x805c0e0,0x2
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f127 <strcpy@plt+0x5e17>
mov    eax,0x8059e40
jmp    804f700 <strcpy@plt+0x63f0>
mov    DWORD PTR ds:0x805c0cc,0x67
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f154 <strcpy@plt+0x5e44>
jg     804f150 <strcpy@plt+0x5e40>
test   al,al
je     804f170 <strcpy@plt+0x5e60>
jmp    804f1a1 <strcpy@plt+0x5e91>
lea    esi,[esi+eiz*1+0x0]
cmp    al,0x3d
jne    804f1a1 <strcpy@plt+0x5e91>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f1a1 <strcpy@plt+0x5e91>
mov    edx,eax
jmp    804f19d <strcpy@plt+0x5e8d>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f1a1 <strcpy@plt+0x5e91>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f1a1 <strcpy@plt+0x5e91>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f1b0 <strcpy@plt+0x5ea0>
mov    eax,0x8059e80
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x7
jmp    804f582 <strcpy@plt+0x6272>
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f1d4 <strcpy@plt+0x5ec4>
jg     804f1d0 <strcpy@plt+0x5ec0>
test   al,al
je     804f1f0 <strcpy@plt+0x5ee0>
jmp    804f221 <strcpy@plt+0x5f11>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    al,0x3d
jne    804f221 <strcpy@plt+0x5f11>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f221 <strcpy@plt+0x5f11>
mov    edx,eax
jmp    804f21d <strcpy@plt+0x5f0d>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f221 <strcpy@plt+0x5f11>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f221 <strcpy@plt+0x5f11>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f230 <strcpy@plt+0x5f20>
mov    eax,0x8059ec0
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fc6c
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x6
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
cmp    DWORD PTR ds:0x812785c,0x2
jne    804f282 <strcpy@plt+0x5f72>
mov    eax,ds:0x8127860
mov    esi,DWORD PTR [eax+0x4]
mov    edi,0x8059eee
mov    ecx,0x7
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     804f290 <strcpy@plt+0x5f80>
mov    eax,0x8059f00
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
push   DWORD PTR ds:0x805c600
push   DWORD PTR ds:0x805c13c
call   8049090 <fputs@plt>
push   0x0
call   8049220 <exit@plt>
cmp    DWORD PTR ds:0x812785c,0x2
jne    804f2ca <strcpy@plt+0x5fba>
mov    eax,ds:0x8127860
mov    esi,DWORD PTR [eax+0x4]
mov    edi,0x8059f20
mov    ecx,0x7
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     804f2d4 <strcpy@plt+0x5fc4>
mov    eax,0x8059f40
jmp    804f700 <strcpy@plt+0x63f0>
call   8049b44 <strcpy@plt+0x834>
push   0x0
call   8049220 <exit@plt>
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f2f6 <strcpy@plt+0x5fe6>
mov    eax,0x8059f60
jmp    804f700 <strcpy@plt+0x63f0>
mov    eax,0x8059fa0
jmp    804f700 <strcpy@plt+0x63f0>
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f318 <strcpy@plt+0x6008>
jg     804f314 <strcpy@plt+0x6004>
test   al,al
je     804f330 <strcpy@plt+0x6020>
jmp    804f361 <strcpy@plt+0x6051>
cmp    al,0x3d
jne    804f361 <strcpy@plt+0x6051>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f361 <strcpy@plt+0x6051>
mov    edx,eax
jmp    804f35d <strcpy@plt+0x604d>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f361 <strcpy@plt+0x6051>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f361 <strcpy@plt+0x6051>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f370 <strcpy@plt+0x6060>
mov    eax,0x8059fe0
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fbbc
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xa
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f3bf <strcpy@plt+0x60af>
jg     804f3b7 <strcpy@plt+0x60a7>
test   al,al
je     804f3d4 <strcpy@plt+0x60c4>
jmp    804f440 <strcpy@plt+0x6130>
cmp    al,0x3d
jne    804f440 <strcpy@plt+0x6130>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f440 <strcpy@plt+0x6130>
mov    edx,eax
jmp    804f401 <strcpy@plt+0x60f1>
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f440 <strcpy@plt+0x6130>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f440 <strcpy@plt+0x6130>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
je     804f440 <strcpy@plt+0x6130>
cmp    BYTE PTR [edx],0x0
je     804f440 <strcpy@plt+0x6130>
lea    eax,[ebp-0x20]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x20]
cmp    BYTE PTR [eax],0x0
jne    804f440 <strcpy@plt+0x6130>
test   edx,edx
jle    804f440 <strcpy@plt+0x6130>
cmp    edx,0x773593ff
jg     804f440 <strcpy@plt+0x6130>
mov    DWORD PTR ds:0x805c108,edx
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
mov    esi,esi
mov    eax,0x805a020
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
mov    edi,DWORD PTR [ebp-0x24]
mov    ebx,DWORD PTR [ebp-0x28]
cmp    BYTE PTR [ebx+edi*1],0x0
je     804f466 <strcpy@plt+0x6156>
mov    eax,0x805a060
jmp    804f700 <strcpy@plt+0x63f0>
mov    eax,0x805a0a0
jmp    804f700 <strcpy@plt+0x63f0>
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f488 <strcpy@plt+0x6178>
jg     804f484 <strcpy@plt+0x6174>
test   al,al
je     804f4a0 <strcpy@plt+0x6190>
jmp    804f4d1 <strcpy@plt+0x61c1>
cmp    al,0x3d
jne    804f4d1 <strcpy@plt+0x61c1>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f4d1 <strcpy@plt+0x61c1>
mov    edx,eax
jmp    804f4cd <strcpy@plt+0x61bd>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f4d1 <strcpy@plt+0x61c1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f4d1 <strcpy@plt+0x61c1>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f4e0 <strcpy@plt+0x61d0>
mov    eax,0x805a0e0
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804fbbc
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xc
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f528 <strcpy@plt+0x6218>
jg     804f524 <strcpy@plt+0x6214>
test   al,al
je     804f540 <strcpy@plt+0x6230>
jmp    804f571 <strcpy@plt+0x6261>
cmp    al,0x3d
jne    804f571 <strcpy@plt+0x6261>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f571 <strcpy@plt+0x6261>
mov    edx,eax
jmp    804f56d <strcpy@plt+0x625d>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f571 <strcpy@plt+0x6261>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f571 <strcpy@plt+0x6261>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f580 <strcpy@plt+0x6270>
mov    eax,0x805a120
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x6
push   edx
call   804adfc <strcpy@plt+0x1aec>
xor    eax,eax
add    esp,0x8
jmp    804f700 <strcpy@plt+0x63f0>
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f5aa <strcpy@plt+0x629a>
jg     804f5a6 <strcpy@plt+0x6296>
test   al,al
je     804f5c0 <strcpy@plt+0x62b0>
jmp    804f5f1 <strcpy@plt+0x62e1>
cmp    al,0x3d
jne    804f5f1 <strcpy@plt+0x62e1>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f5f1 <strcpy@plt+0x62e1>
mov    edx,eax
jmp    804f5ed <strcpy@plt+0x62dd>
nop
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f5f1 <strcpy@plt+0x62e1>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f5f1 <strcpy@plt+0x62e1>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f600 <strcpy@plt+0x62f0>
mov    eax,0x805a160
jmp    804f700 <strcpy@plt+0x63f0>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x804dd00
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0xb
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8127868
mov    al,BYTE PTR [edx]
cmp    al,0x3a
je     804f648 <strcpy@plt+0x6338>
jg     804f644 <strcpy@plt+0x6334>
test   al,al
je     804f660 <strcpy@plt+0x6350>
jmp    804f691 <strcpy@plt+0x6381>
cmp    al,0x3d
jne    804f691 <strcpy@plt+0x6381>
lea    edi,[edx+0x1]
mov    DWORD PTR ds:0x8127868,edi
mov    eax,edi
cmp    BYTE PTR [edx+0x1],0x0
je     804f691 <strcpy@plt+0x6381>
mov    edx,eax
jmp    804f68d <strcpy@plt+0x637d>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
lea    eax,[edx+0x2]
cmp    eax,DWORD PTR ds:0x812785c
jg     804f691 <strcpy@plt+0x6381>
mov    ecx,DWORD PTR ds:0x8127860
mov    eax,DWORD PTR [ecx+edx*4+0x4]
cmp    BYTE PTR [eax],0x0
je     804f691 <strcpy@plt+0x6381>
lea    ebx,[edx+0x1]
mov    DWORD PTR ds:0x8127864,ebx
mov    edx,DWORD PTR [ecx+edx*4+0x4]
test   edx,edx
jne    804f698 <strcpy@plt+0x6388>
mov    eax,0x805a180
jmp    804f700 <strcpy@plt+0x63f0>
push   0x804fc00
push   edx
call   804de84 <strcpy@plt+0x4b74>
add    esp,0x8
test   eax,eax
jne    804f700 <strcpy@plt+0x63f0>
mov    eax,ds:0x805c10c
mov    DWORD PTR [eax+0xc],0x2
xor    eax,eax
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+0x0]
cmp    DWORD PTR ds:0x812785c,0x2
jne    804f6e2 <strcpy@plt+0x63d2>
mov    eax,ds:0x8127860
mov    esi,DWORD PTR [eax+0x4]
mov    edi,0x805a1ac
mov    ecx,0xa
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
je     804f6f0 <strcpy@plt+0x63e0>
mov    eax,0x805a1c0
jmp    804f700 <strcpy@plt+0x63f0>
lea    esi,[esi+eiz*1+0x0]
call   8054080 <strcpy@plt+0xad70>
push   0x0
call   8049220 <exit@plt>
lea    esi,[esi+eiz*1+0x0]
lea    esp,[ebp-0x38]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   edi
push   esi
push   ebx
mov    edx,DWORD PTR ds:0x8127864
mov    ecx,DWORD PTR ds:0x812785c
mov    DWORD PTR [ebp-0x18],ecx
sub    DWORD PTR [ebp-0x18],edx
mov    eax,ds:0x8127860
lea    edx,[eax+edx*4]
mov    DWORD PTR [ebp-0x14],edx
dec    ecx
mov    DWORD PTR ds:0x8127864,ecx
push   0x10
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x10],eax
mov    esi,DWORD PTR [ebp-0x18]
lea    ebx,[esi*8+0x0]
push   ebx
call   8048fc0 <malloc@plt>
mov    ecx,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ecx+0x4],eax
mov    DWORD PTR [ecx+0x8],0x0
push   0x10
call   8048fc0 <malloc@plt>
mov    edi,eax
push   ebx
call   8048fc0 <malloc@plt>
mov    DWORD PTR [edi+0x4],eax
mov    DWORD PTR [edi+0x8],0x0
push   0x10
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebp-0x1c],eax
push   ebx
call   8048fc0 <malloc@plt>
mov    esi,DWORD PTR [ebp-0x1c]
mov    DWORD PTR [esi+0x4],eax
mov    DWORD PTR [esi+0x8],0x0
add    esp,0x18
sub    DWORD PTR [ebp-0x18],0x1
jb     804f885 <strcpy@plt+0x6575>
nop
mov    ecx,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ecx]
add    ecx,0x4
mov    DWORD PTR [ebp-0x14],ecx
mov    al,BYTE PTR [edx]
cmp    al,0x2b
je     804f820 <strcpy@plt+0x6510>
cmp    al,0x2d
je     804f7e3 <strcpy@plt+0x64d3>
mov    esi,DWORD PTR [ebp-0x10]
mov    esi,DWORD PTR [esi+0x8]
lea    ebx,[esi*8+0x0]
mov    ecx,DWORD PTR [ebp-0x10]
add    ebx,DWORD PTR [ecx+0x4]
inc    DWORD PTR [ecx+0x8]
lea    eax,[ebp-0x4]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
jmp    804f80a <strcpy@plt+0x64fa>
inc    edx
mov    esi,DWORD PTR [edi+0x8]
lea    ebx,[esi*8+0x0]
add    ebx,DWORD PTR [edi+0x4]
inc    DWORD PTR [edi+0x8]
lea    eax,[ebp-0x8]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x8]
cmp    BYTE PTR [eax],0x0
jne    804f852 <strcpy@plt+0x6542>
cmp    edx,0x7fff
jg     804f86c <strcpy@plt+0x655c>
test   edx,edx
jl     804f86c <strcpy@plt+0x655c>
mov    DWORD PTR [ebx],edx
jmp    804f87b <strcpy@plt+0x656b>
nop
inc    edx
mov    ecx,DWORD PTR [ebp-0x1c]
mov    ecx,DWORD PTR [ecx+0x8]
lea    ebx,[ecx*8+0x0]
mov    esi,DWORD PTR [ebp-0x1c]
add    ebx,DWORD PTR [esi+0x4]
inc    DWORD PTR [esi+0x8]
lea    eax,[ebp-0xc]
push   0x0
push   0x0
push   eax
push   edx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0xc]
cmp    BYTE PTR [eax],0x0
je     804f860 <strcpy@plt+0x6550>
mov    eax,ds:0x805c178
jmp    804f877 <strcpy@plt+0x6567>
lea    esi,[esi+eiz*1+0x0]
cmp    edx,0x7fff
jg     804f86c <strcpy@plt+0x655c>
test   edx,edx
jge    804f873 <strcpy@plt+0x6563>
mov    eax,ds:0x805c174
jmp    804f877 <strcpy@plt+0x6567>
mov    DWORD PTR [ebx],edx
xor    eax,eax
test   eax,eax
jne    804f8db <strcpy@plt+0x65cb>
sub    DWORD PTR [ebp-0x18],0x1
jae    804f7a0 <strcpy@plt+0x6490>
mov    ecx,DWORD PTR [ebp-0x10]
cmp    DWORD PTR [ecx+0x8],0x0
je     804f8a2 <strcpy@plt+0x6592>
mov    eax,ds:0x805c10c
mov    DWORD PTR [ecx],eax
mov    DWORD PTR ds:0x805c10c,ecx
mov    DWORD PTR [ecx+0xc],0xa
cmp    DWORD PTR [edi+0x8],0x0
je     804f8bc <strcpy@plt+0x65ac>
mov    eax,ds:0x805c10c
mov    DWORD PTR [edi],eax
mov    DWORD PTR ds:0x805c10c,edi
mov    DWORD PTR [edi+0xc],0x9
mov    esi,DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [esi+0x8],0x0
je     804f8d9 <strcpy@plt+0x65c9>
mov    eax,ds:0x805c10c
mov    DWORD PTR [esi],eax
mov    DWORD PTR ds:0x805c10c,esi
mov    DWORD PTR [esi+0xc],0xc
xor    eax,eax
lea    esp,[ebp-0x28]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    ecx,DWORD PTR [ebp+0x8]
movsx  edx,BYTE PTR [ecx]
lea    eax,[edx-0x61]
cmp    eax,0x19
jbe    804f8fd <strcpy@plt+0x65ed>
lea    eax,[edx-0x41]
cmp    eax,0x19
ja     804f907 <strcpy@plt+0x65f7>
mov    eax,0x5
jmp    804f985 <strcpy@plt+0x6675>
lea    eax,[edx-0x30]
cmp    eax,0x9
ja     804f916 <strcpy@plt+0x6606>
mov    eax,0x4
jmp    804f985 <strcpy@plt+0x6675>
cmp    edx,0x2b
jne    804f922 <strcpy@plt+0x6612>
mov    eax,0x7
jmp    804f985 <strcpy@plt+0x6675>
cmp    edx,0x2d
jne    804f974 <strcpy@plt+0x6664>
movsx  edx,BYTE PTR [ecx+0x1]
lea    eax,[edx-0x61]
cmp    eax,0x19
jbe    804f93b <strcpy@plt+0x662b>
lea    eax,[edx-0x41]
cmp    eax,0x19
ja     804f942 <strcpy@plt+0x6632>
mov    eax,0x3
jmp    804f985 <strcpy@plt+0x6675>
lea    eax,[edx-0x30]
cmp    eax,0x9
ja     804f951 <strcpy@plt+0x6641>
mov    eax,0x2
jmp    804f985 <strcpy@plt+0x6675>
cmp    edx,0x2d
jne    804f974 <strcpy@plt+0x6664>
movsx  edx,BYTE PTR [ecx+0x2]
lea    eax,[edx-0x61]
cmp    eax,0x19
jbe    804f96a <strcpy@plt+0x665a>
lea    eax,[edx-0x41]
cmp    eax,0x19
ja     804f970 <strcpy@plt+0x6660>
xor    eax,eax
jmp    804f985 <strcpy@plt+0x6675>
mov    esi,esi
test   edx,edx
je     804f980 <strcpy@plt+0x6670>
mov    eax,0x6
jmp    804f985 <strcpy@plt+0x6675>
nop
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
jmp    804fa44 <strcpy@plt+0x6734>
mov    edx,DWORD PTR ds:0x8127864
mov    eax,ds:0x8127860
push   DWORD PTR [eax+edx*4]
call   804f8e4 <strcpy@plt+0x65d4>
add    esp,0x4
cmp    eax,0x3
je     804f9b5 <strcpy@plt+0x66a5>
mov    DWORD PTR ds:0x805c16c,0x1
cmp    eax,0x7
ja     804fa20 <strcpy@plt+0x6710>
jmp    DWORD PTR [eax*4+0x805a228]
call   804edb8 <strcpy@plt+0x5aa8>
jmp    804fa40 <strcpy@plt+0x6730>
cmp    DWORD PTR ds:0x805c170,0x0
jne    804f9f1 <strcpy@plt+0x66e1>
call   804dfe8 <strcpy@plt+0x4cd8>
jmp    804fa40 <strcpy@plt+0x6730>
cmp    DWORD PTR ds:0x805c170,0x0
je     804f9f1 <strcpy@plt+0x66e1>
test   BYTE PTR ds:0x805c0fc,0x10
jne    804f9f1 <strcpy@plt+0x66e1>
mov    eax,0x805a1e3
jmp    804fa62 <strcpy@plt+0x6752>
mov    DWORD PTR ds:0x805c100,0x1
call   804e6ec <strcpy@plt+0x53dc>
jmp    804fa40 <strcpy@plt+0x6730>
mov    DWORD PTR ds:0x805c100,0x1
call   804f708 <strcpy@plt+0x63f8>
jmp    804fa40 <strcpy@plt+0x6730>
mov    eax,0x805a1eb
jmp    804fa62 <strcpy@plt+0x6752>
lea    esi,[esi+0x0]
mov    edx,DWORD PTR ds:0x8127864
mov    eax,ds:0x8127860
push   DWORD PTR [eax+edx*4]
push   0x805a1fb
call   8049120 <printf@plt>
mov    eax,0x805a216
jmp    804fa62 <strcpy@plt+0x6752>
nop
test   eax,eax
jne    804fa62 <strcpy@plt+0x6752>
mov    eax,ds:0x8127864
lea    ecx,[eax+0x1]
mov    DWORD PTR ds:0x8127864,ecx
mov    eax,ecx
cmp    eax,DWORD PTR ds:0x812785c
jl     804f990 <strcpy@plt+0x6680>
xor    eax,eax
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
xor    ebx,ebx
mov    DWORD PTR ds:0x812785c,esi
mov    DWORD PTR ds:0x8127860,edi
mov    DWORD PTR ds:0x8127864,0x0
test   BYTE PTR ds:0x805c0fc,0x10
jne    804fac5 <strcpy@plt+0x67b5>
call   804f988 <strcpy@plt+0x6678>
mov    ebx,eax
test   ebx,ebx
jne    804fac5 <strcpy@plt+0x67b5>
cmp    DWORD PTR ds:0x805c16c,0x0
sete   al
and    eax,0xff
push   eax
call   804b4e8 <strcpy@plt+0x21d8>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    804fac5 <strcpy@plt+0x67b5>
call   804a1ec <strcpy@plt+0xedc>
mov    ebx,eax
test   ebx,ebx
je     804fb40 <strcpy@plt+0x6830>
call   8049ca8 <strcpy@plt+0x998>
mov    DWORD PTR ds:0x805c168,0x0
call   804b918 <strcpy@plt+0x2608>
call   805104c <strcpy@plt+0x7d3c>
mov    DWORD PTR ds:0x805c0d0,0x0
mov    DWORD PTR ds:0x812785c,esi
mov    DWORD PTR ds:0x8127860,edi
mov    DWORD PTR ds:0x8127864,0x0
mov    DWORD PTR ds:0x805c16c,0x1
mov    DWORD PTR ds:0x805c170,0x1
call   804f988 <strcpy@plt+0x6678>
test   eax,eax
jne    804fb72 <strcpy@plt+0x6862>
cmp    DWORD PTR ds:0x805c16c,0x0
sete   al
and    eax,0xff
push   eax
call   804b4e8 <strcpy@plt+0x21d8>
add    esp,0x4
test   eax,eax
jne    804fb72 <strcpy@plt+0x6862>
call   804a1ec <strcpy@plt+0xedc>
test   eax,eax
jne    804fb72 <strcpy@plt+0x6862>
mov    eax,ds:0x805c168
test   eax,eax
je     804fb5f <strcpy@plt+0x684f>
cmp    DWORD PTR ds:0x805c104,0x83
jg     804fb5f <strcpy@plt+0x684f>
mov    DWORD PTR ds:0x805c104,0x84
cmp    eax,0x1
jle    804fb6e <strcpy@plt+0x685e>
mov    DWORD PTR ds:0x805c104,0xc8000
xor    eax,eax
jmp    804fbb4 <strcpy@plt+0x68a4>
mov    DWORD PTR ds:0x805c168,0x0
test   BYTE PTR ds:0x805c0fc,0x10
je     804fb88 <strcpy@plt+0x6878>
push   eax
jmp    804fb89 <strcpy@plt+0x6879>
push   ebx
push   0x805a248
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0xc
push   DWORD PTR ds:0x805c604
push   DWORD PTR ds:0x805c138
call   8049090 <fputs@plt>
push   0x1
call   8049220 <exit@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x4
lea    eax,[ebp-0x4]
push   0x0
push   0x0
push   eax
push   DWORD PTR [ebp+0x8]
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
mov    eax,DWORD PTR [ebp-0x4]
cmp    BYTE PTR [eax],0x0
je     804fbe3 <strcpy@plt+0x68d3>
mov    eax,ds:0x805c178
jmp    804fbfd <strcpy@plt+0x68ed>
cmp    edx,0x7fff
jg     804fbf8 <strcpy@plt+0x68e8>
test   edx,edx
jl     804fbf8 <strcpy@plt+0x68e8>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
xor    eax,eax
jmp    804fbfd <strcpy@plt+0x68ed>
mov    eax,ds:0x805c174
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x4
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
lea    eax,[ebp-0x4]
push   0x0
push   0x0
push   eax
push   ebx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
cmp    BYTE PTR [eax],0x0
je     804fc39 <strcpy@plt+0x6929>
push   ebx
call   8049210 <getpwnam@plt>
test   eax,eax
jne    804fc36 <strcpy@plt+0x6926>
mov    eax,ds:0x805c180
jmp    804fc65 <strcpy@plt+0x6955>
mov    edx,DWORD PTR [eax+0x8]
cmp    edx,0xfffe
jg     804fc60 <strcpy@plt+0x6950>
cmp    edx,0xffff8000
jl     804fc60 <strcpy@plt+0x6950>
cmp    edx,0xffffffff
je     804fc60 <strcpy@plt+0x6950>
movzx  edx,dx
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
xor    eax,eax
jmp    804fc65 <strcpy@plt+0x6955>
lea    esi,[esi+0x0]
mov    eax,ds:0x805c17c
mov    ebx,DWORD PTR [ebp-0x8]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
lea    eax,[ebp-0x4]
push   0x0
push   0x0
push   eax
push   ebx
call   80490c0 <__strtol_internal@plt>
mov    edx,eax
add    esp,0x10
mov    eax,DWORD PTR [ebp-0x4]
cmp    BYTE PTR [eax],0x0
je     804fca5 <strcpy@plt+0x6995>
push   ebx
call   8048ec0 <getgrnam@plt>
test   eax,eax
jne    804fca2 <strcpy@plt+0x6992>
mov    eax,ds:0x805c188
jmp    804fccb <strcpy@plt+0x69bb>
mov    edx,DWORD PTR [eax+0x8]
cmp    edx,0xfffe
jg     804fcc6 <strcpy@plt+0x69b6>
cmp    edx,0xffff8000
jl     804fcc6 <strcpy@plt+0x69b6>
cmp    edx,0xffffffff
je     804fcc6 <strcpy@plt+0x69b6>
movzx  edx,dx
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [eax],edx
xor    eax,eax
jmp    804fccb <strcpy@plt+0x69bb>
mov    eax,ds:0x805c184
mov    ebx,DWORD PTR [ebp-0x8]
leave  
ret    
push   ebp
mov    ebp,esp
push   0x8
push   DWORD PTR [ebp+0x8]
push   DWORD PTR [ebp+0xc]
call   80492a0 <strncpy@plt>
xor    eax,eax
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
test   edi,edi
je     804fdb5 <strcpy@plt+0x6aa5>
mov    esi,DWORD PTR ds:0x8169cc8
cmp    DWORD PTR [esi],0x0
je     804fdb5 <strcpy@plt+0x6aa5>
lea    ebx,[esi+0x8]
push   0x0
push   0xa
push   0x0
push   ebx
call   80490c0 <__strtol_internal@plt>
add    esp,0x10
mov    edx,DWORD PTR [esi+0x4]
cmp    edx,0x1
je     804fd60 <strcpy@plt+0x6a50>
jg     804fd35 <strcpy@plt+0x6a25>
test   edx,edx
je     804fd41 <strcpy@plt+0x6a31>
jmp    804fdaa <strcpy@plt+0x6a9a>
cmp    edx,0x2
je     804fd80 <strcpy@plt+0x6a70>
cmp    edx,0x3
je     804fd96 <strcpy@plt+0x6a86>
jmp    804fdaa <strcpy@plt+0x6a9a>
cmp    eax,DWORD PTR [edi+0x1a8]
je     804fd77 <strcpy@plt+0x6a67>
cmp    eax,DWORD PTR [edi+0x1a0]
je     804fd77 <strcpy@plt+0x6a67>
cmp    eax,DWORD PTR [edi+0x1b0]
jne    804fdaa <strcpy@plt+0x6a9a>
jmp    804fd77 <strcpy@plt+0x6a67>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0xa
push   0x0
push   ebx
call   80490c0 <__strtol_internal@plt>
add    esp,0x10
cmp    DWORD PTR [edi+0x1d0],eax
jne    804fdaa <strcpy@plt+0x6a9a>
mov    eax,0x1
jmp    804fdb7 <strcpy@plt+0x6aa7>
mov    esi,esi
push   ebx
lea    eax,[edi+0x190]
push   eax
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
jne    804fdaa <strcpy@plt+0x6a9a>
jmp    804fd77 <strcpy@plt+0x6a67>
push   ebx
lea    eax,[edi+0x190]
push   eax
call   80490a0 <strstr@plt>
add    esp,0x8
test   eax,eax
jne    804fd77 <strcpy@plt+0x6a67>
mov    esi,DWORD PTR [esi]
cmp    DWORD PTR [esi],0x0
jne    804fd10 <strcpy@plt+0x6a00>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x84
push   edi
push   esi
push   ebx
push   0x88
call   8048fc0 <malloc@plt>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
je     804fec2 <strcpy@plt+0x6bb2>
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0x22
rep stos DWORD PTR es:[edi],eax
mov    DWORD PTR ds:0x8169cc8,ebx
push   0x805a260
push   0x805a280
call   80492b0 <fopen@plt>
mov    DWORD PTR [ebp-0x84],eax
add    esp,0x8
test   eax,eax
je     804febc <strcpy@plt+0x6bac>
lea    esi,[ebp-0x80]
jmp    804fe96 <strcpy@plt+0x6b86>
lea    esi,[esi+0x0]
movsx  edx,BYTE PTR [ebp-0x80]
mov    eax,ds:0x805c608
test   BYTE PTR [eax+edx*2+0x1],0x8
je     804fe96 <strcpy@plt+0x6b86>
push   0x0
push   0xa
push   0x0
push   esi
call   80490c0 <__strtol_internal@plt>
add    esp,0x10
mov    DWORD PTR [ebx+0x4],eax
push   0x20
push   esi
call   8048fd0 <index@plt>
lea    edi,[eax+0x1]
add    esp,0x8
test   edi,edi
je     804fe96 <strcpy@plt+0x6b86>
push   0xa
push   edi
call   8048fd0 <index@plt>
add    esp,0x8
test   eax,eax
je     804fe66 <strcpy@plt+0x6b56>
mov    BYTE PTR [eax],0x0
push   0x7f
push   edi
lea    eax,[ebx+0x8]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x88
call   8048fc0 <malloc@plt>
mov    edi,eax
mov    DWORD PTR [ebx],edi
add    esp,0x4
test   edi,edi
je     804feb0 <strcpy@plt+0x6ba0>
xor    eax,eax
cld    
mov    ecx,0x22
rep stos DWORD PTR es:[edi],eax
mov    ebx,DWORD PTR [ebx]
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
push   0x7f
push   esi
call   8049070 <fgets@plt>
add    esp,0xc
test   eax,eax
jne    804fe20 <strcpy@plt+0x6b10>
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
call   8049160 <fclose@plt>
mov    DWORD PTR [ebx],0x0
lea    esp,[ebp-0x90]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x1fc
push   edi
push   esi
push   ebx
push   0x3f
call   8051d90 <strcpy@plt+0x8a80>
mov    DWORD PTR [ebp-0x1e8],eax
add    esp,0x4
push   0x1e4
push   0x23
lea    eax,[ebp-0x1e4]
mov    DWORD PTR [ebp-0x1ec],eax
mov    DWORD PTR [ebp-0x1f0],eax
push   eax
jmp    8050027 <strcpy@plt+0x6d17>
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR [ebp-0x1f0]
push   edx
call   804fcf0 <strcpy@plt+0x69e0>
mov    ecx,eax
add    esp,0x4
test   ecx,ecx
jne    805002f <strcpy@plt+0x6d1f>
xor    edi,edi
mov    ebx,DWORD PTR [ebp-0x108]
add    ebx,DWORD PTR [ebp-0x10c]
cmp    DWORD PTR ds:0x805c0e4,0x0
je     804ff4e <strcpy@plt+0x6c3e>
mov    eax,DWORD PTR [ebp-0x180]
add    eax,DWORD PTR [ebp-0x184]
add    ebx,eax
mov    ecx,DWORD PTR [ebp-0xf0]
mov    eax,ds:0x8169d48
mov    DWORD PTR [ebp-0x1f4],eax
mov    eax,ecx
xor    edx,edx
div    DWORD PTR [ebp-0x1f4]
mov    esi,eax
mov    eax,ds:0x8169cc4
sub    eax,esi
mov    esi,eax
test   esi,esi
je     804ffe3 <strcpy@plt+0x6cd3>
mov    eax,0x3e8
mul    ebx
mov    ecx,eax
mov    ebx,edx
mov    edx,DWORD PTR [ebp-0x1f4]
mov    DWORD PTR [ebp-0x1fc],edx
mov    DWORD PTR [ebp-0x1f8],0x0
mov    eax,DWORD PTR [ebp-0x1fc]
mov    edx,DWORD PTR [ebp-0x1f8]
push   edx
push   eax
push   ebx
push   ecx
call   8054330 <__divdi3@@Base>
add    esp,0x10
mov    ecx,eax
mov    ebx,edx
mov    DWORD PTR [ebp-0x1fc],esi
mov    DWORD PTR [ebp-0x1f8],0x0
mov    eax,DWORD PTR [ebp-0x1fc]
mov    edx,DWORD PTR [ebp-0x1f8]
push   edx
push   eax
push   ebx
push   ecx
call   8054330 <__divdi3@@Base>
add    esp,0x10
mov    ecx,eax
mov    ebx,edx
mov    edi,ecx
mov    ecx,edi
cmp    ecx,0x3e7
jbe    804fff2 <strcpy@plt+0x6ce2>
mov    ecx,0x3e7
mov    DWORD PTR [ebp-0xc],ecx
mov    edx,DWORD PTR [ebp-0x1f0]
push   edx
call   804a13c <strcpy@plt+0xe2c>
mov    ecx,eax
add    esp,0x4
test   ecx,ecx
je     8050019 <strcpy@plt+0x6d09>
mov    eax,DWORD PTR [ebp-0x1f0]
push   eax
call   804c1dc <strcpy@plt+0x2ecc>
add    esp,0x4
push   0x1e4
push   0x23
mov    edx,DWORD PTR [ebp-0x1f0]
push   edx
call   8049280 <memset@plt>
add    esp,0xc
mov    eax,DWORD PTR [ebp-0x1ec]
push   eax
mov    edx,DWORD PTR [ebp-0x1e8]
push   edx
call   805298c <strcpy@plt+0x967c>
mov    ecx,eax
add    esp,0x8
test   ecx,ecx
jne    804ff10 <strcpy@plt+0x6c00>
mov    eax,DWORD PTR [ebp-0x1e8]
push   eax
call   8053180 <strcpy@plt+0x9e70>
lea    esp,[ebp-0x208]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x8],ecx
mov    DWORD PTR [ebp-0x4],ecx
sub    DWORD PTR [ebp-0x8],0x1
jb     805017d <strcpy@plt+0x6e6d>
mov    ecx,DWORD PTR [ebp-0x8]
lea    ecx,[ecx*4+0x81278a0]
mov    DWORD PTR [ebp-0xc],ecx
mov    edx,DWORD PTR [ebp-0x4]
dec    edx
mov    ecx,DWORD PTR [ebp-0x8]
lea    eax,[ecx*4+0x0]
cmp    edx,0xffffffff
je     80500c6 <strcpy@plt+0x6db6>
mov    ebx,0x81278a0
mov    eax,DWORD PTR [eax+ebx*1]
mov    esi,DWORD PTR [eax+0x1c4]
mov    eax,DWORD PTR [ebx+edx*4]
cmp    DWORD PTR [eax+0x1c0],esi
je     805016f <strcpy@plt+0x6e5f>
sub    edx,0x1
jae    80500b2 <strcpy@plt+0x6da2>
xor    esi,esi
mov    ecx,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ecx]
cmp    DWORD PTR [eax+0x1e0],0x0
jne    805016f <strcpy@plt+0x6e5f>
push   eax
call   804c1dc <strcpy@plt+0x2ecc>
add    esp,0x4
cmp    esi,DWORD PTR [ebp-0x4]
jge    805016f <strcpy@plt+0x6e5f>
mov    eax,ds:0x81278a0
jmp    8050100 <strcpy@plt+0x6df0>
inc    esi
cmp    esi,DWORD PTR [ebp-0x4]
jge    805016f <strcpy@plt+0x6e5f>
mov    eax,DWORD PTR [esi*4+0x81278a0]
mov    ecx,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ecx]
mov    edx,DWORD PTR [edx+0x1c0]
cmp    DWORD PTR [eax+0x1c4],edx
jne    80500f3 <strcpy@plt+0x6de3>
mov    ebx,0x1
cmp    esi,DWORD PTR [ebp-0x4]
jge    8050168 <strcpy@plt+0x6e58>
lea    esi,[esi+0x0]
lea    edi,[esi+0x1]
mov    DWORD PTR [ebp-0x10],edi
cmp    edi,DWORD PTR [ebp-0x4]
jge    8050145 <strcpy@plt+0x6e35>
mov    eax,DWORD PTR [edi*4+0x81278a0]
mov    ecx,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ecx]
mov    edx,DWORD PTR [edx+0x1c0]
cmp    DWORD PTR [eax+0x1c4],edx
je     8050147 <strcpy@plt+0x6e37>
xor    ebx,ebx
push   ebx
push   0x1
mov    ecx,DWORD PTR [ebp-0x4]
push   ecx
push   esi
mov    esi,DWORD PTR [ebp-0x10]
call   80505f0 <strcpy@plt+0x72e0>
add    esp,0x10
test   ebx,ebx
je     8050168 <strcpy@plt+0x6e58>
mov    ebx,0x1
cmp    edi,DWORD PTR [ebp-0x4]
jl     8050120 <strcpy@plt+0x6e10>
mov    BYTE PTR ds:0x8149c60,0x0
add    DWORD PTR [ebp-0xc],0xfffffffc
sub    DWORD PTR [ebp-0x8],0x1
jae    8050091 <strcpy@plt+0x6d81>
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x18
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x8],0x0
push   0x3f
call   8051d90 <strcpy@plt+0x8a80>
mov    DWORD PTR [ebp-0x4],eax
jmp    8050296 <strcpy@plt+0x6f86>
push   esi
call   804fcf0 <strcpy@plt+0x69e0>
add    esp,0x4
test   eax,eax
je     80501be <strcpy@plt+0x6eae>
mov    DWORD PTR [esi+0x1e0],0x1
mov    DWORD PTR [ebp-0xc],0x0
mov    ebx,DWORD PTR [esi+0xdc]
add    ebx,DWORD PTR [esi+0xd8]
cmp    DWORD PTR ds:0x805c0e4,0x0
je     80501e2 <strcpy@plt+0x6ed2>
mov    eax,DWORD PTR [esi+0x64]
add    eax,DWORD PTR [esi+0x60]
add    ebx,eax
mov    ecx,DWORD PTR [esi+0xf4]
mov    eax,ds:0x8169d48
mov    DWORD PTR [ebp-0x10],eax
mov    eax,ecx
xor    edx,edx
div    DWORD PTR [ebp-0x10]
mov    edi,eax
mov    eax,ds:0x8169cc4
sub    eax,edi
mov    edi,eax
test   edi,edi
je     8050257 <strcpy@plt+0x6f47>
mov    eax,0x3e8
mul    ebx
mov    ecx,eax
mov    ebx,edx
mov    edx,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x18],edx
mov    DWORD PTR [ebp-0x14],0x0
mov    eax,DWORD PTR [ebp-0x18]
mov    edx,DWORD PTR [ebp-0x14]
push   edx
push   eax
push   ebx
push   ecx
call   8054330 <__divdi3@@Base>
add    esp,0x10
mov    ecx,eax
mov    ebx,edx
mov    DWORD PTR [ebp-0x18],edi
mov    DWORD PTR [ebp-0x14],0x0
mov    eax,DWORD PTR [ebp-0x18]
mov    edx,DWORD PTR [ebp-0x14]
push   edx
push   eax
push   ebx
push   ecx
call   8054330 <__divdi3@@Base>
add    esp,0x10
mov    ecx,eax
mov    ebx,edx
mov    DWORD PTR [ebp-0xc],ecx
mov    ecx,DWORD PTR [ebp-0xc]
cmp    ecx,0x3e7
jbe    8050267 <strcpy@plt+0x6f57>
mov    ecx,0x3e7
mov    DWORD PTR [esi+0x1d8],ecx
push   esi
call   804a13c <strcpy@plt+0xe2c>
add    esp,0x4
test   eax,eax
je     8050290 <strcpy@plt+0x6f80>
mov    edx,DWORD PTR [ebp-0x8]
mov    DWORD PTR [edx*4+0x81278a0],esi
inc    edx
mov    DWORD PTR [ebp-0x8],edx
jmp    8050299 <strcpy@plt+0x6f89>
lea    esi,[esi+0x0]
push   esi
call   8049260 <free@plt>
add    esp,0x4
push   0x0
mov    eax,DWORD PTR [ebp-0x4]
push   eax
call   805298c <strcpy@plt+0x967c>
mov    esi,eax
add    esp,0x8
test   esi,esi
jne    80501a7 <strcpy@plt+0x6e97>
mov    edx,DWORD PTR [ebp-0x4]
push   edx
call   8053180 <strcpy@plt+0x9e70>
add    esp,0x4
cmp    DWORD PTR [ebp-0x8],0x0
je     80503d9 <strcpy@plt+0x70c9>
cmp    DWORD PTR ds:0x805c0cc,0x0
je     8050383 <strcpy@plt+0x7073>
cmp    DWORD PTR ds:0x805c114,0x0
jne    8050330 <strcpy@plt+0x7020>
push   0x805a314
call   804c608 <strcpy@plt+0x32f8>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    8050303 <strcpy@plt+0x6ff3>
push   0x805a31f
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
push   0x10
call   8048fc0 <malloc@plt>
mov    ecx,eax
mov    DWORD PTR [ecx+0x8],0x0
mov    DWORD PTR [ecx+0xc],0x3f
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,ds:0x805c114
mov    DWORD PTR [ecx],eax
mov    DWORD PTR ds:0x805c114,ecx
add    esp,0x4
push   0x805a33b
call   804c608 <strcpy@plt+0x32f8>
mov    ebx,eax
add    esp,0x4
test   ebx,ebx
jne    8050356 <strcpy@plt+0x7046>
push   0x805a340
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
push   0x10
call   8048fc0 <malloc@plt>
mov    ecx,eax
mov    DWORD PTR [ecx+0x8],0x0
mov    DWORD PTR [ecx+0xc],0x3f
mov    eax,DWORD PTR [ebx+0xc]
mov    DWORD PTR [ecx+0x4],eax
mov    eax,ds:0x805c114
mov    DWORD PTR [ecx],eax
mov    DWORD PTR ds:0x805c114,ecx
add    esp,0x4
push   0x80505a8
push   0x4
mov    eax,DWORD PTR [ebp-0x8]
push   eax
push   0x81278a0
call   80490d0 <qsort@plt>
add    esp,0x10
cmp    DWORD PTR ds:0x805c0cc,0x0
je     80503b0 <strcpy@plt+0x70a0>
mov    edx,DWORD PTR [ebp-0x8]
push   edx
call   8050068 <strcpy@plt+0x6d58>
jmp    80503d9 <strcpy@plt+0x70c9>
nop
mov    ebx,0x81278a0
mov    esi,DWORD PTR [ebp-0x8]
dec    esi
cmp    esi,0xffffffff
je     80503d9 <strcpy@plt+0x70c9>
mov    esi,esi
push   DWORD PTR [ebx]
call   804c1dc <strcpy@plt+0x2ecc>
push   DWORD PTR [ebx]
call   8049260 <free@plt>
add    ebx,0x4
add    esp,0x8
sub    esi,0x1
jae    80503c0 <strcpy@plt+0x70b0>
lea    esp,[ebp-0x24]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x8c
push   edi
push   ebx
call   8049130 <getuid@plt>
mov    ebx,eax
call   8049300 <geteuid@plt>
cmp    ebx,eax
je     8050416 <strcpy@plt+0x7106>
push   0x805a360
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
call   8049220 <exit@plt>
call   80491a0 <getgid@plt>
mov    ebx,eax
call   8049230 <getegid@plt>
cmp    ebx,eax
je     8050440 <strcpy@plt+0x7130>
push   0x805a3a0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
call   8049220 <exit@plt>
lea    esi,[esi+0x0]
lea    ebx,[ebp-0x8c]
mov    edi,ebx
xor    eax,eax
cld    
mov    ecx,0x23
rep stos DWORD PTR es:[edi],eax
mov    DWORD PTR [ebp-0x8c],0x8050570
lea    eax,[ebp-0x88]
push   eax
call   8048eb0 <sigfillset@plt>
add    esp,0x4
mov    edi,0x1f
cmp    edi,0x1c
ja     8050480 <strcpy@plt+0x7170>
jmp    DWORD PTR [edi*4+0x805a3d4]
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   ebx
push   edi
call   8048ee0 <sigaction@plt>
add    esp,0xc
sub    edi,0x1
jae    8050470 <strcpy@plt+0x7160>
call   8049ca8 <strcpy@plt+0x998>
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
call   804fa64 <strcpy@plt+0x6754>
call   804fdc0 <strcpy@plt+0x6ab0>
call   804c45c <strcpy@plt+0x314c>
add    esp,0x8
mov    edx,DWORD PTR ds:0x805c0d4
xor    ebx,ebx
mov    eax,ds:0x805c0e0
cmp    eax,0x2
jne    80504d0 <strcpy@plt+0x71c0>
mov    ecx,DWORD PTR ds:0x805c108
dec    ecx
mov    DWORD PTR ds:0x805c0dc,ecx
jmp    8050518 <strcpy@plt+0x7208>
nop
cmp    eax,0x1
jne    8050506 <strcpy@plt+0x71f6>
mov    DWORD PTR ds:0x805c0e8,edi
jmp    8050518 <strcpy@plt+0x7208>
lea    esi,[esi+0x0]
mov    eax,DWORD PTR [edx+0x18]
and    eax,0xf
cmp    eax,0x5
jne    80504f5 <strcpy@plt+0x71e5>
mov    DWORD PTR ds:0x8127880,0x1
mov    eax,DWORD PTR [edx+0x4]
cmp    BYTE PTR [eax],0x0
je     8050504 <strcpy@plt+0x71f4>
cmp    DWORD PTR [edx+0x8],0x0
je     8050504 <strcpy@plt+0x71f4>
inc    ebx
mov    edx,DWORD PTR [edx]
test   edx,edx
jne    80504e0 <strcpy@plt+0x71d0>
test   ebx,ebx
jne    8050518 <strcpy@plt+0x7208>
mov    DWORD PTR ds:0x805c0e8,0xffffffff
cmp    DWORD PTR ds:0x8127880,0x0
je     8050533 <strcpy@plt+0x7223>
push   DWORD PTR ds:0x805c0f0
call   8051d4c <strcpy@plt+0x8a3c>
add    esp,0x4
test   eax,eax
je     805053d <strcpy@plt+0x722d>
mov    DWORD PTR ds:0x805c134,0x1
cmp    DWORD PTR ds:0x805c0cc,0x0
jne    805054f <strcpy@plt+0x723f>
cmp    DWORD PTR ds:0x805c114,0x0
je     8050556 <strcpy@plt+0x7246>
call   8050188 <strcpy@plt+0x6e78>
jmp    805055b <strcpy@plt+0x724b>
call   804fed0 <strcpy@plt+0x6bc0>
push   0xffffffff
call   804c1dc <strcpy@plt+0x2ecc>
xor    eax,eax
lea    esp,[ebp-0x94]
pop    ebx
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
cmp    ebx,0xd
jne    8050583 <strcpy@plt+0x7273>
push   0x0
call   8049290 <_exit@plt>
push   0x805c3ec
push   ebx
push   0x805a2c0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
lea    eax,[ebx+0x80]
push   eax
call   8049290 <_exit@plt>
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR ds:0x805c114
test   ebx,ebx
je     80505e6 <strcpy@plt+0x72d6>
mov    esi,esi
push   DWORD PTR [esi]
push   DWORD PTR [edi]
mov    eax,DWORD PTR [ebx+0x4]
call   eax
add    esp,0x8
test   eax,eax
je     80505e0 <strcpy@plt+0x72d0>
cmp    DWORD PTR [ebx+0x8],0x0
je     80505e8 <strcpy@plt+0x72d8>
neg    eax
jmp    80505e8 <strcpy@plt+0x72d8>
lea    esi,[esi+0x0]
mov    ebx,DWORD PTR [ebx]
test   ebx,ebx
jne    80505c0 <strcpy@plt+0x72b0>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
xor    edi,edi
mov    ecx,DWORD PTR [ebp+0x8]
shl    ecx,0x2
mov    DWORD PTR [ebp-0x4],ecx
mov    DWORD PTR [ebp-0x14],ecx
mov    esi,0x81278a0
mov    eax,DWORD PTR [ecx+esi*1]
cmp    DWORD PTR [eax+0x1e0],0x0
jne    805075c <strcpy@plt+0x744c>
cmp    DWORD PTR [ebp+0x10],0x0
je     805065c <strcpy@plt+0x734c>
cmp    DWORD PTR [ebp+0x14],0x0
je     8050640 <strcpy@plt+0x7330>
mov    DWORD PTR [ebp-0xc],0x8149c60
mov    ebx,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp-0xc]
mov    BYTE PTR [ecx+ebx*1-0x1],0x2b
jmp    8050652 <strcpy@plt+0x7342>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebp-0xc],0x8149c60
mov    ebx,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp-0xc]
mov    BYTE PTR [ecx+ebx*1-0x1],0x4c
mov    ebx,DWORD PTR [ebp-0xc]
mov    ecx,DWORD PTR [ebp+0x10]
mov    BYTE PTR [ecx+ebx*1],0x0
mov    ebx,0x81278a0
mov    ecx,DWORD PTR [ebp-0x4]
push   DWORD PTR [ecx+ebx*1]
call   804c1dc <strcpy@plt+0x2ecc>
add    esp,0x4
cmp    edi,DWORD PTR [ebp+0xc]
jge    805075c <strcpy@plt+0x744c>
mov    eax,DWORD PTR [esi+edi*4]
mov    ebx,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ebx+esi*1]
mov    edx,DWORD PTR [edx+0x1c0]
cmp    DWORD PTR [eax+0x1c4],edx
je     80506b5 <strcpy@plt+0x73a5>
mov    esi,0x81278a0
inc    edi
cmp    edi,DWORD PTR [ebp+0xc]
jge    805075c <strcpy@plt+0x744c>
mov    eax,DWORD PTR [esi+edi*4]
mov    ecx,DWORD PTR [ebp-0x14]
mov    edx,DWORD PTR [ecx+esi*1]
mov    edx,DWORD PTR [edx+0x1c0]
cmp    DWORD PTR [eax+0x1c4],edx
jne    8050694 <strcpy@plt+0x7384>
mov    DWORD PTR [ebp-0xc],0x8149c60
cmp    DWORD PTR [ebp+0x10],0x0
je     80506e6 <strcpy@plt+0x73d6>
mov    eax,DWORD PTR [ebp+0x10]
dec    eax
cmp    DWORD PTR [ebp+0x14],0x0
je     80506d5 <strcpy@plt+0x73c5>
mov    ebx,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+ebx*1],0x7c
jmp    80506dc <strcpy@plt+0x73cc>
mov    ecx,DWORD PTR [ebp-0xc]
mov    BYTE PTR [eax+ecx*1],0x20
mov    ebx,DWORD PTR [ebp-0xc]
mov    ecx,DWORD PTR [ebp+0x10]
mov    BYTE PTR [ecx+ebx*1],0x0
mov    esi,0x1
cmp    edi,DWORD PTR [ebp+0xc]
jge    8050752 <strcpy@plt+0x7442>
mov    ebx,DWORD PTR [ebp+0x10]
inc    ebx
mov    DWORD PTR [ebp-0x8],ebx
lea    ecx,[edi+0x1]
mov    DWORD PTR [ebp-0x14],ecx
mov    DWORD PTR [ebp-0x10],ecx
mov    ebx,DWORD PTR [ebp+0xc]
cmp    ecx,ebx
jge    805072a <strcpy@plt+0x741a>
mov    ecx,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [ecx*4+0x81278a0]
mov    ebx,0x81278a0
mov    ecx,DWORD PTR [ebp-0x4]
mov    edx,DWORD PTR [ecx+ebx*1]
mov    edx,DWORD PTR [edx+0x1c0]
cmp    DWORD PTR [eax+0x1c4],edx
je     805072c <strcpy@plt+0x741c>
xor    esi,esi
push   esi
mov    ebx,DWORD PTR [ebp-0x8]
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
push   ecx
push   edi
mov    edi,DWORD PTR [ebp-0x10]
call   80505f0 <strcpy@plt+0x72e0>
add    esp,0x10
test   esi,esi
je     8050752 <strcpy@plt+0x7442>
mov    esi,0x1
mov    ebx,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [ebp-0x14],ebx
jl     80506f7 <strcpy@plt+0x73e7>
mov    ecx,DWORD PTR [ebp-0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    BYTE PTR [ebx+ecx*1],0x0
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
add    eax,0x110
push   eax
mov    eax,DWORD PTR [edx]
add    eax,0x110
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
add    eax,0x120
push   eax
mov    eax,DWORD PTR [edx]
add    eax,0x120
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
mov    edx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
add    eax,0x190
push   eax
mov    eax,DWORD PTR [edx]
add    eax,0x190
push   eax
call   8048f40 <strcmp@plt>
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ebp-0x4],0x1
mov    al,BYTE PTR [esi]
test   al,al
je     80508c1 <strcpy@plt+0x75b1>
mov    bl,BYTE PTR ds:0x805c198
mov    BYTE PTR [ebp-0x6],bl
cmp    al,0x2d
je     8050800 <strcpy@plt+0x74f0>
cmp    al,0x2b
jne    8050810 <strcpy@plt+0x7500>
jmp    8050807 <strcpy@plt+0x74f7>
mov    DWORD PTR [ebp-0x4],0xffffffff
inc    esi
jmp    80508b6 <strcpy@plt+0x75a6>
lea    esi,[esi+0x0]
xor    ecx,ecx
cmp    BYTE PTR [ebp-0x6],0x0
je     805084f <strcpy@plt+0x753f>
mov    BYTE PTR [ebp-0x5],al
mov    DWORD PTR [ebp-0xc],0x805c198
xor    edx,edx
mov    eax,edx
mov    bl,BYTE PTR [ebp-0x5]
mov    edi,DWORD PTR [ebp-0xc]
cmp    bl,BYTE PTR [edi]
je     8050841 <strcpy@plt+0x7531>
add    edi,0x14
mov    DWORD PTR [ebp-0xc],edi
lea    edx,[eax+0x4]
inc    ecx
mov    eax,edx
cmp    BYTE PTR [edi],0x0
jne    8050824 <strcpy@plt+0x7514>
add    eax,ecx
shl    eax,0x2
cmp    BYTE PTR [eax+0x805c198],0x0
jne    8050887 <strcpy@plt+0x7577>
mov    DWORD PTR ds:0x805c194,0x0
xor    ecx,ecx
mov    esi,0x8169d20
mov    edx,0x8169ce0
lea    eax,[ecx*4+0x0]
mov    DWORD PTR [eax+esi*1],0x0
mov    DWORD PTR [eax+edx*1],0x0
inc    ecx
cmp    ecx,0x9
jle    8050865 <strcpy@plt+0x7555>
mov    eax,0x805a472
jmp    80508c3 <strcpy@plt+0x75b3>
mov    ebx,DWORD PTR ds:0x805c194
lea    edx,[ebx*4+0x0]
mov    eax,DWORD PTR [eax+0x805c1a8]
mov    DWORD PTR [edx+0x8169ce0],eax
mov    edi,DWORD PTR [ebp-0x4]
mov    DWORD PTR [edx+0x8169d20],edi
inc    DWORD PTR ds:0x805c194
mov    DWORD PTR [ebp-0x4],0x1
inc    esi
mov    al,BYTE PTR [esi]
test   al,al
jne    80507f6 <strcpy@plt+0x74e6>
xor    eax,eax
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x14
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0xc],0x1
lea    esi,[esi+eiz*1+0x0]
mov    ecx,DWORD PTR [ebp+0x8]
mov    al,BYTE PTR [ecx]
cmp    al,0x2d
je     80508f0 <strcpy@plt+0x75e0>
cmp    al,0x2b
jne    8050906 <strcpy@plt+0x75f6>
jmp    80508f7 <strcpy@plt+0x75e7>
nop
mov    DWORD PTR [ebp-0xc],0xffffffff
mov    DWORD PTR [ebp-0x8],0x1
inc    DWORD PTR [ebp+0x8]
jmp    80509f8 <strcpy@plt+0x76e8>
push   0x2c
mov    esi,DWORD PTR [ebp+0x8]
push   esi
call   8048fd0 <index@plt>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x8
test   eax,eax
setne  al
movzx  ecx,al
mov    DWORD PTR [ebp-0x8],ecx
test   ecx,ecx
je     805092c <strcpy@plt+0x761c>
mov    esi,DWORD PTR [ebp-0x4]
mov    BYTE PTR [esi],0x0
xor    ebx,ebx
cmp    BYTE PTR ds:0x805c198,0x0
je     8050989 <strcpy@plt+0x7679>
mov    DWORD PTR [ebp-0x10],0x0
xor    eax,eax
mov    edi,0x805c199
mov    DWORD PTR [ebp-0x14],eax
push   edi
mov    ecx,DWORD PTR [ebp+0x8]
push   ecx
call   8048f40 <strcmp@plt>
add    esp,0x8
test   eax,eax
je     8050978 <strcpy@plt+0x7668>
add    DWORD PTR [ebp-0x10],0x14
mov    eax,DWORD PTR [ebp-0x14]
add    eax,0x4
add    edi,0x14
inc    ebx
mov    DWORD PTR [ebp-0x14],eax
mov    esi,DWORD PTR [ebp-0x10]
mov    ecx,0x805c198
cmp    BYTE PTR [ecx+esi*1],0x0
jne    8050945 <strcpy@plt+0x7635>
mov    eax,DWORD PTR [ebp-0x14]
add    eax,ebx
shl    eax,0x2
cmp    BYTE PTR [eax+0x805c198],0x0
jne    80509c2 <strcpy@plt+0x76b2>
mov    DWORD PTR ds:0x805c194,0x0
xor    ebx,ebx
mov    edi,0x8169d20
mov    edx,0x8169ce0
nop
lea    eax,[ebx*4+0x0]
mov    DWORD PTR [eax+edi*1],0x0
mov    DWORD PTR [eax+edx*1],0x0
inc    ebx
cmp    ebx,0x9
jle    80509a0 <strcpy@plt+0x7690>
mov    eax,0x805a472
jmp    8050a04 <strcpy@plt+0x76f4>
mov    esi,DWORD PTR ds:0x805c194
lea    edx,[esi*4+0x0]
mov    eax,DWORD PTR [eax+0x805c1a8]
mov    DWORD PTR [edx+0x8169ce0],eax
mov    ecx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edx+0x8169d20],ecx
inc    DWORD PTR ds:0x805c194
mov    DWORD PTR [ebp-0xc],0x1
mov    esi,DWORD PTR [ebp-0x4]
inc    esi
mov    DWORD PTR [ebp+0x8],esi
cmp    DWORD PTR [ebp-0x8],0x0
jne    80508e0 <strcpy@plt+0x75d0>
xor    eax,eax
lea    esp,[ebp-0x20]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0xc]
xor    esi,esi
cmp    esi,DWORD PTR ds:0x805c194
jge    8050a4b <strcpy@plt+0x773b>
nop
lea    ebx,[esi*4+0x0]
push   edi
mov    edx,DWORD PTR [ebp+0x8]
push   edx
mov    eax,DWORD PTR [ebx+0x8169ce0]
call   eax
imul   eax,DWORD PTR [ebx+0x8169d20]
add    esp,0x8
test   eax,eax
jne    8050a4d <strcpy@plt+0x773d>
inc    esi
cmp    esi,DWORD PTR ds:0x805c194
jl     8050a20 <strcpy@plt+0x7710>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0xc]
xor    esi,esi
cmp    esi,DWORD PTR ds:0x805c194
jge    8050a9b <strcpy@plt+0x778b>
nop
lea    esi,[esi+eiz*1+0x0]
lea    ebx,[esi*4+0x0]
push   edi
mov    edx,DWORD PTR [ebp+0x8]
push   edx
mov    eax,DWORD PTR [ebx+0x8169ce0]
call   eax
imul   eax,DWORD PTR [ebx+0x8169d20]
add    esp,0x8
test   eax,eax
jne    8050a9d <strcpy@plt+0x778d>
inc    esi
cmp    esi,DWORD PTR ds:0x805c194
jl     8050a70 <strcpy@plt+0x7760>
xor    eax,eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1a8]
mov    eax,DWORD PTR [edx+0x1a8]
cmp    ecx,eax
jge    8050ad0 <strcpy@plt+0x77c0>
mov    eax,0xffffffff
jmp    8050add <strcpy@plt+0x77cd>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
jg     8050ad8 <strcpy@plt+0x77c8>
xor    eax,eax
jmp    8050add <strcpy@plt+0x77cd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1c0]
mov    eax,DWORD PTR [edx+0x1c0]
cmp    ecx,eax
jge    8050b04 <strcpy@plt+0x77f4>
mov    eax,0xffffffff
jmp    8050b15 <strcpy@plt+0x7805>
cmp    ecx,eax
jg     8050b10 <strcpy@plt+0x7800>
xor    eax,eax
jmp    8050b15 <strcpy@plt+0x7805>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1c4]
mov    eax,DWORD PTR [edx+0x1c4]
cmp    ecx,eax
jge    8050b40 <strcpy@plt+0x7830>
mov    eax,0xffffffff
jmp    8050b4d <strcpy@plt+0x783d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
jg     8050b48 <strcpy@plt+0x7838>
xor    eax,eax
jmp    8050b4d <strcpy@plt+0x783d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1c8]
mov    eax,DWORD PTR [edx+0x1c8]
cmp    ecx,eax
jge    8050b74 <strcpy@plt+0x7864>
mov    eax,0xffffffff
jmp    8050b85 <strcpy@plt+0x7875>
cmp    ecx,eax
jg     8050b80 <strcpy@plt+0x7870>
xor    eax,eax
jmp    8050b85 <strcpy@plt+0x7875>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1cc]
mov    eax,DWORD PTR [edx+0x1cc]
cmp    ecx,eax
jge    8050bb0 <strcpy@plt+0x78a0>
mov    eax,0xffffffff
jmp    8050bbd <strcpy@plt+0x78ad>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
jg     8050bb8 <strcpy@plt+0x78a8>
xor    eax,eax
jmp    8050bbd <strcpy@plt+0x78ad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1d0]
mov    eax,DWORD PTR [edx+0x1d0]
cmp    ecx,eax
jge    8050be4 <strcpy@plt+0x78d4>
mov    eax,0xffffffff
jmp    8050bf5 <strcpy@plt+0x78e5>
cmp    ecx,eax
jg     8050bf0 <strcpy@plt+0x78e0>
xor    eax,eax
jmp    8050bf5 <strcpy@plt+0x78e5>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1d4]
mov    eax,DWORD PTR [edx+0x1d4]
cmp    ecx,eax
jge    8050c20 <strcpy@plt+0x7910>
mov    eax,0xffffffff
jmp    8050c2d <strcpy@plt+0x791d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
jg     8050c28 <strcpy@plt+0x7918>
xor    eax,eax
jmp    8050c2d <strcpy@plt+0x791d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xd8]
mov    eax,DWORD PTR [edx+0xd8]
cmp    ecx,eax
jae    8050c54 <strcpy@plt+0x7944>
mov    eax,0xffffffff
jmp    8050c65 <strcpy@plt+0x7955>
cmp    ecx,eax
ja     8050c60 <strcpy@plt+0x7950>
xor    eax,eax
jmp    8050c65 <strcpy@plt+0x7955>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xdc]
mov    eax,DWORD PTR [edx+0xdc]
cmp    ecx,eax
jae    8050c90 <strcpy@plt+0x7980>
mov    eax,0xffffffff
jmp    8050c9d <strcpy@plt+0x798d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
ja     8050c98 <strcpy@plt+0x7988>
xor    eax,eax
jmp    8050c9d <strcpy@plt+0x798d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x60]
mov    eax,DWORD PTR [edx+0x60]
cmp    ecx,eax
jge    8050cc0 <strcpy@plt+0x79b0>
mov    eax,0xffffffff
jmp    8050ccd <strcpy@plt+0x79bd>
mov    esi,esi
cmp    ecx,eax
jg     8050cc8 <strcpy@plt+0x79b8>
xor    eax,eax
jmp    8050ccd <strcpy@plt+0x79bd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x64]
mov    eax,DWORD PTR [edx+0x64]
cmp    ecx,eax
jge    8050cf0 <strcpy@plt+0x79e0>
mov    eax,0xffffffff
jmp    8050cfd <strcpy@plt+0x79ed>
mov    esi,esi
cmp    ecx,eax
jg     8050cf8 <strcpy@plt+0x79e8>
xor    eax,eax
jmp    8050cfd <strcpy@plt+0x79ed>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x70]
mov    eax,DWORD PTR [edx+0x70]
cmp    ecx,eax
jge    8050d20 <strcpy@plt+0x7a10>
mov    eax,0xffffffff
jmp    8050d2d <strcpy@plt+0x7a1d>
mov    esi,esi
cmp    ecx,eax
jg     8050d28 <strcpy@plt+0x7a18>
xor    eax,eax
jmp    8050d2d <strcpy@plt+0x7a1d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xf4]
mov    eax,DWORD PTR [edx+0xf4]
cmp    ecx,eax
jae    8050d54 <strcpy@plt+0x7a44>
mov    eax,0xffffffff
jmp    8050d65 <strcpy@plt+0x7a55>
cmp    ecx,eax
ja     8050d60 <strcpy@plt+0x7a50>
xor    eax,eax
jmp    8050d65 <strcpy@plt+0x7a55>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xbc]
mov    eax,DWORD PTR [edx+0xbc]
cmp    ecx,eax
jae    8050d90 <strcpy@plt+0x7a80>
mov    eax,0xffffffff
jmp    8050d9d <strcpy@plt+0x7a8d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
ja     8050d98 <strcpy@plt+0x7a88>
xor    eax,eax
jmp    8050d9d <strcpy@plt+0x7a8d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xc0]
mov    eax,DWORD PTR [edx+0xc0]
cmp    ecx,eax
jae    8050dc4 <strcpy@plt+0x7ab4>
mov    eax,0xffffffff
jmp    8050dd5 <strcpy@plt+0x7ac5>
cmp    ecx,eax
ja     8050dd0 <strcpy@plt+0x7ac0>
xor    eax,eax
jmp    8050dd5 <strcpy@plt+0x7ac5>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xc8]
mov    eax,DWORD PTR [edx+0xc8]
cmp    ecx,eax
jae    8050e00 <strcpy@plt+0x7af0>
mov    eax,0xffffffff
jmp    8050e0d <strcpy@plt+0x7afd>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
ja     8050e08 <strcpy@plt+0x7af8>
xor    eax,eax
jmp    8050e0d <strcpy@plt+0x7afd>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xc4]
mov    eax,DWORD PTR [edx+0xc4]
cmp    ecx,eax
jae    8050e34 <strcpy@plt+0x7b24>
mov    eax,0xffffffff
jmp    8050e45 <strcpy@plt+0x7b35>
cmp    ecx,eax
ja     8050e40 <strcpy@plt+0x7b30>
xor    eax,eax
jmp    8050e45 <strcpy@plt+0x7b35>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xcc]
mov    eax,DWORD PTR [edx+0xcc]
cmp    ecx,eax
jae    8050e70 <strcpy@plt+0x7b60>
mov    eax,0xffffffff
jmp    8050e7d <strcpy@plt+0x7b6d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
ja     8050e78 <strcpy@plt+0x7b68>
xor    eax,eax
jmp    8050e7d <strcpy@plt+0x7b6d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0xb4]
mov    eax,DWORD PTR [edx+0xb4]
cmp    ecx,eax
jae    8050ea4 <strcpy@plt+0x7b94>
mov    eax,0xffffffff
jmp    8050eb5 <strcpy@plt+0x7ba5>
cmp    ecx,eax
ja     8050eb0 <strcpy@plt+0x7ba0>
xor    eax,eax
jmp    8050eb5 <strcpy@plt+0x7ba5>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x74]
mov    eax,DWORD PTR [edx+0x74]
cmp    ecx,eax
jge    8050ed6 <strcpy@plt+0x7bc6>
mov    eax,0xffffffff
jmp    8050ee5 <strcpy@plt+0x7bd5>
cmp    ecx,eax
jg     8050ee0 <strcpy@plt+0x7bd0>
xor    eax,eax
jmp    8050ee5 <strcpy@plt+0x7bd5>
mov    esi,esi
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x1d8]
mov    eax,DWORD PTR [edx+0x1d8]
cmp    ecx,eax
jae    8050f10 <strcpy@plt+0x7c00>
mov    eax,0xffffffff
jmp    8050f1d <strcpy@plt+0x7c0d>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
ja     8050f18 <strcpy@plt+0x7c08>
xor    eax,eax
jmp    8050f1d <strcpy@plt+0x7c0d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x7c]
mov    eax,DWORD PTR [edx+0x7c]
cmp    ecx,eax
jge    8050f40 <strcpy@plt+0x7c30>
mov    eax,0xffffffff
jmp    8050f4d <strcpy@plt+0x7c3d>
mov    esi,esi
cmp    ecx,eax
jg     8050f48 <strcpy@plt+0x7c38>
xor    eax,eax
jmp    8050f4d <strcpy@plt+0x7c3d>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x80]
mov    eax,DWORD PTR [edx+0x80]
cmp    ecx,eax
jge    8050f74 <strcpy@plt+0x7c64>
mov    eax,0xffffffff
jmp    8050f85 <strcpy@plt+0x7c75>
cmp    ecx,eax
jg     8050f80 <strcpy@plt+0x7c70>
xor    eax,eax
jmp    8050f85 <strcpy@plt+0x7c75>
lea    esi,[esi+eiz*1+0x0]
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    eax,DWORD PTR [eax]
mov    edx,DWORD PTR [edx]
mov    ecx,DWORD PTR [eax+0x84]
mov    eax,DWORD PTR [edx+0x84]
cmp    ecx,eax
jge    8050fb0 <strcpy@plt+0x7ca0>
mov    eax,0xffffffff
jmp    8050fbd <strcpy@plt+0x7cad>
lea    esi,[esi+eiz*1+0x0]
cmp    ecx,eax
jg     8050fb8 <strcpy@plt+0x7ca8>
xor    eax,eax
jmp    8050fbd <strcpy@plt+0x7cad>
mov    eax,0x1
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
xor    esi,esi
cmp    BYTE PTR ds:0x805c198,0x0
je     805102b <strcpy@plt+0x7d1b>
mov    ebx,0x805c198
mov    edi,0x805c199
nop
lea    esi,[esi+eiz*1+0x0]
mov    edx,esi
and    edx,0x1
je     8050ff0 <strcpy@plt+0x7ce0>
mov    eax,0x805a448
jmp    8050ff5 <strcpy@plt+0x7ce5>
mov    esi,esi
mov    eax,0x805a44a
push   eax
push   edi
movsx  eax,BYTE PTR [ebx]
push   eax
test   edx,edx
je     8051006 <strcpy@plt+0x7cf6>
mov    eax,0x805a44a
jmp    805100b <strcpy@plt+0x7cfb>
mov    eax,0x805a44b
push   eax
push   0x805a457
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x18
add    ebx,0x14
add    edi,0x14
inc    esi
cmp    BYTE PTR [ebx],0x0
jne    8050fe0 <strcpy@plt+0x7cd0>
test   esi,0x1
je     8051043 <strcpy@plt+0x7d33>
push   0x805a448
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
mov    DWORD PTR ds:0x805c194,0x0
xor    edx,edx
mov    ebx,0x8169d20
mov    ecx,0x8169ce0
lea    eax,[edx*4+0x0]
mov    DWORD PTR [eax+ebx*1],0x0
mov    DWORD PTR [eax+ecx*1],0x0
inc    edx
cmp    edx,0x9
jle    8051066 <strcpy@plt+0x7d56>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   ebx
mov    ecx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR ds:0x805c194
lea    eax,[ebx*4+0x0]
mov    DWORD PTR [eax+0x8169ce0],edx
mov    DWORD PTR [eax+0x8169d20],ecx
inc    DWORD PTR ds:0x805c194
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x2710
push   edi
push   esi
push   ebx
push   0x0
push   0x805a484
call   80491e0 <open@plt>
mov    edi,eax
add    esp,0x8
cmp    edi,0xffffffff
je     8051186 <strcpy@plt+0x7e76>
push   0x270f
lea    ebx,[ebp-0x2710]
push   ebx
push   edi
call   80492f0 <read@plt>
add    esp,0xc
cmp    eax,0xffffffff
je     805117b <strcpy@plt+0x7e6b>
mov    BYTE PTR [eax+ebx*1],0x0
jmp    8051167 <strcpy@plt+0x7e57>
add    ebx,0x9
push   0x805a4a0
push   ebx
call   8049200 <strspn@plt>
add    esp,0x8
test   eax,eax
je     8051167 <strcpy@plt+0x7e57>
cmp    eax,0x3
jg     8051167 <strcpy@plt+0x7e57>
cmp    BYTE PTR [ebx],0x53
je     8051167 <strcpy@plt+0x7e57>
push   0xc
call   8048fc0 <malloc@plt>
mov    esi,eax
mov    eax,ds:0x805c3b4
mov    DWORD PTR [esi],eax
mov    DWORD PTR ds:0x805c3b4,esi
add    esp,0x4
mov    DWORD PTR [esi+0x8],0x0
push   0x1
push   ebx
lea    eax,[esi+0x8]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
inc    ebx
push   0x0
push   0xa
push   0x0
push   ebx
call   80490c0 <__strtol_internal@plt>
add    esp,0x10
mov    DWORD PTR [esi+0x4],eax
push   0x805a496
push   ebx
call   80490a0 <strstr@plt>
add    esp,0x8
mov    ebx,eax
test   ebx,ebx
jne    8051106 <strcpy@plt+0x7df6>
cmp    edi,0xffffffff
je     8051186 <strcpy@plt+0x7e76>
push   edi
call   8048f50 <close@plt>
cmp    DWORD PTR ds:0x805c3b4,0x0
jne    8051199 <strcpy@plt+0x7e89>
mov    DWORD PTR ds:0x805c3b4,0xffffffff
lea    esp,[ebp-0x271c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x58
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
mov    ebx,DWORD PTR [ebp+0x10]
mov    ecx,ebx
lea    eax,[edi-0x3]
cmp    eax,0x8c
ja     80512e0 <strcpy@plt+0x7fd0>
jmp    DWORD PTR [eax*4+0x805a5b8]
lea    esi,[esi+0x0]
cmp    ebx,0x3f
jg     80511e0 <strcpy@plt+0x7ed0>
push   ebx
push   0x805a4c8
jmp    80512a2 <strcpy@plt+0x7f92>
cmp    ebx,0x7f
jg     80511f3 <strcpy@plt+0x7ee3>
lea    eax,[ebx-0x40]
push   eax
push   0x805a4d3
jmp    80512a2 <strcpy@plt+0x7f92>
mov    ecx,ebx
and    ecx,0x3f
mov    eax,ecx
sar    eax,0x4
movsx  edx,BYTE PTR [eax+0x805a4df]
and    ecx,0xf
movsx  eax,BYTE PTR [ecx+0x805a4f0]
push   eax
push   edx
push   0x805a501
push   esi
call   80492c0 <sprintf@plt>
add    esp,0x10
jmp    80512ab <strcpy@plt+0x7f9b>
push   ebx
push   0x805a50e
jmp    80512a2 <strcpy@plt+0x7f92>
nop
lea    esi,[esi+eiz*1+0x0]
push   ebx
push   0x805a51a
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a526
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a532
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a53e
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a54a
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a556
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a562
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a56e
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a57a
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a586
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a592
jmp    80512a2 <strcpy@plt+0x7f92>
push   ebx
push   0x805a59e
jmp    80512a2 <strcpy@plt+0x7f92>
mov    eax,edi
shl    eax,0x8
lea    eax,[ebx+eax*1-0x8800]
push   eax
push   0x805a5aa
push   esi
call   80492c0 <sprintf@plt>
add    esp,0xc
lea    eax,[ebp-0x58]
push   eax
push   esi
push   0x3
call   8049030 <__xstat@plt>
test   eax,eax
jl     80512e0 <strcpy@plt+0x7fd0>
movzx  eax,BYTE PTR [ebp-0x38]
cmp    ebx,eax
jne    80512e0 <strcpy@plt+0x7fd0>
mov    eax,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x34]
shrd   eax,edx,0x8
shr    edx,0x8
and    eax,0xff
cmp    edi,eax
jne    80512e0 <strcpy@plt+0x7fd0>
mov    eax,0x1
jmp    80512e2 <strcpy@plt+0x7fd2>
xor    eax,eax
lea    esp,[ebp-0x64]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x88
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x10]
mov    ebx,0x81478a0
mov    DWORD PTR [ebp-0x7c],0x0
cmp    ax,0xffff
je     80514ac <strcpy@plt+0x819c>
mov    edi,eax
sar    edi,0x8
mov    esi,edi
and    esi,0xff
and    eax,0xff
mov    DWORD PTR [ebp-0x88],eax
mov    DWORD PTR [ebp-0x80],eax
push   0x2
mov    ecx,DWORD PTR [ebp+0x14]
push   ecx
push   0x805a7ec
lea    ecx,[ebp-0x78]
mov    DWORD PTR [ebp-0x84],ecx
push   ecx
call   80492c0 <sprintf@plt>
push   0x1000
push   ebx
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
call   8048ea0 <readlink@plt>
add    esp,0x1c
cmp    eax,0xffffffff
je     805139d <strcpy@plt+0x808d>
mov    BYTE PTR [eax+ebx*1],0x0
lea    eax,[ebp-0x58]
push   eax
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jl     805139d <strcpy@plt+0x808d>
movzx  eax,BYTE PTR [ebp-0x38]
cmp    DWORD PTR [ebp-0x88],eax
jne    805139d <strcpy@plt+0x808d>
mov    eax,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x34]
shrd   eax,edx,0x8
shr    edx,0x8
and    eax,0xff
cmp    esi,eax
je     80514c0 <strcpy@plt+0x81b0>
mov    esi,edi
and    esi,0xff
push   0xff
mov    ecx,DWORD PTR [ebp+0x14]
push   ecx
push   0x805a7ec
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
call   80492c0 <sprintf@plt>
push   0x1000
push   ebx
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
call   8048ea0 <readlink@plt>
add    esp,0x1c
cmp    eax,0xffffffff
je     8051416 <strcpy@plt+0x8106>
mov    BYTE PTR [eax+ebx*1],0x0
lea    eax,[ebp-0x58]
push   eax
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jl     8051416 <strcpy@plt+0x8106>
movzx  eax,BYTE PTR [ebp-0x38]
cmp    DWORD PTR [ebp-0x88],eax
jne    8051416 <strcpy@plt+0x8106>
mov    eax,DWORD PTR [ebp-0x38]
mov    edx,DWORD PTR [ebp-0x34]
shrd   eax,edx,0x8
shr    edx,0x8
and    eax,0xff
cmp    esi,eax
je     80514c0 <strcpy@plt+0x81b0>
mov    ecx,DWORD PTR [ebp-0x80]
push   ecx
mov    esi,edi
and    esi,0xff
push   esi
push   ebx
call   80511a4 <strcpy@plt+0x7e94>
add    esp,0xc
test   eax,eax
jne    80514c0 <strcpy@plt+0x81b0>
mov    eax,ds:0x805c3b4
test   eax,eax
jne    8051447 <strcpy@plt+0x8137>
call   80510c0 <strcpy@plt+0x7db0>
mov    eax,ds:0x805c3b4
cmp    eax,0xffffffff
je     80514ac <strcpy@plt+0x819c>
jmp    8051452 <strcpy@plt+0x8142>
mov    esi,esi
mov    eax,DWORD PTR [eax]
test   eax,eax
je     80514ac <strcpy@plt+0x819c>
cmp    DWORD PTR [eax+0x4],esi
jne    8051450 <strcpy@plt+0x8140>
mov    ecx,DWORD PTR [ebp-0x88]
push   ecx
add    eax,0x8
push   eax
push   0x805a4bb
push   ebx
call   80492c0 <sprintf@plt>
add    esp,0x10
mov    ecx,DWORD PTR [ebp-0x84]
push   ecx
push   ebx
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jl     80514ac <strcpy@plt+0x819c>
movzx  eax,BYTE PTR [ebp-0x58]
cmp    DWORD PTR [ebp-0x88],eax
jne    80514ac <strcpy@plt+0x819c>
mov    eax,DWORD PTR [ebp-0x58]
mov    edx,DWORD PTR [ebp-0x54]
shrd   eax,edx,0x8
shr    edx,0x8
and    eax,0xff
cmp    esi,eax
je     80514c0 <strcpy@plt+0x81b0>
mov    ecx,DWORD PTR [ebp+0x8]
mov    WORD PTR [ecx],0x3f
mov    eax,0x1
jmp    8051566 <strcpy@plt+0x8256>
mov    esi,esi
mov    ecx,DWORD PTR [ebp+0x18]
test   cl,0x1
je     80514e5 <strcpy@plt+0x81d5>
push   0x5
push   0x805a7fd
push   ebx
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
jne    80514e5 <strcpy@plt+0x81d5>
cmp    BYTE PTR [ebx+0x5],0x0
je     80514e5 <strcpy@plt+0x81d5>
add    ebx,0x5
mov    ecx,DWORD PTR [ebp+0x18]
test   cl,0x2
je     805150a <strcpy@plt+0x81fa>
push   0x3
push   0x805a803
push   ebx
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
jne    805150a <strcpy@plt+0x81fa>
cmp    BYTE PTR [ebx+0x3],0x0
je     805150a <strcpy@plt+0x81fa>
add    ebx,0x3
mov    ecx,DWORD PTR [ebp+0x18]
test   cl,0x4
je     805152c <strcpy@plt+0x821c>
push   0x4
push   0x805a807
push   ebx
call   80490e0 <strncmp@plt>
test   eax,eax
jne    805152c <strcpy@plt+0x821c>
cmp    BYTE PTR [ebx+0x4],0x0
je     805152c <strcpy@plt+0x821c>
add    ebx,0x4
mov    eax,DWORD PTR [ebp+0xc]
mov    BYTE PTR [eax+ebx*1],0x0
jmp    8051555 <strcpy@plt+0x8245>
inc    DWORD PTR [ebp-0x7c]
cmp    eax,0x20
jg     8051542 <strcpy@plt+0x8232>
mov    eax,0x3f
cmp    eax,0x7e
jle    805154c <strcpy@plt+0x823c>
mov    eax,0x3f
mov    ecx,DWORD PTR [ebp+0x8]
mov    BYTE PTR [ecx],al
inc    ecx
mov    DWORD PTR [ebp+0x8],ecx
movsx  eax,BYTE PTR [ebx]
inc    ebx
test   eax,eax
jne    8051535 <strcpy@plt+0x8225>
mov    ecx,DWORD PTR [ebp+0x8]
mov    BYTE PTR [ecx],0x0
mov    eax,DWORD PTR [ebp-0x7c]
lea    esp,[ebp-0x94]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x58
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
lea    ebx,[ebp-0x58]
push   ebx
push   esi
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    8051611 <strcpy@plt+0x8301>
push   esi
push   0x805a80c
push   0x20
push   0x81488a0
call   80491d0 <snprintf@plt>
add    esp,0x10
push   ebx
push   0x81488a0
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    8051611 <strcpy@plt+0x8301>
push   esi
push   0x805a814
push   0x20
push   0x81488a0
call   80491d0 <snprintf@plt>
add    esp,0x10
push   ebx
push   0x81488a0
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
test   eax,eax
jge    8051611 <strcpy@plt+0x8301>
push   esi
push   0x805a81f
push   0x20
push   0x81488a0
call   80491d0 <snprintf@plt>
add    esp,0x10
push   ebx
push   0x81488a0
push   0x3
call   8049030 <__xstat@plt>
test   eax,eax
jge    8051611 <strcpy@plt+0x8301>
mov    eax,0xffffffff
jmp    8051614 <strcpy@plt+0x8304>
mov    eax,DWORD PTR [ebp-0x38]
lea    esp,[ebp-0x60]
pop    ebx
pop    esi
leave  
ret    
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x80
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
cmp    DWORD PTR ds:0x8148b80,0x0
je     8051642 <strcpy@plt+0x8332>
mov    eax,0x1
jmp    80517fc <strcpy@plt+0x84ec>
push   0x0
push   esi
call   80491e0 <open@plt>
mov    ebx,eax
add    esp,0x8
test   ebx,ebx
jl     8051686 <strcpy@plt+0x8376>
lea    eax,[ebp-0x58]
push   eax
push   ebx
push   0x3
call   8049080 <__fxstat@plt>
add    esp,0xc
test   eax,eax
jl     8051686 <strcpy@plt+0x8376>
push   0x0
push   ebx
push   0x1
push   0x1
mov    eax,DWORD PTR [ebp-0x2c]
inc    eax
push   eax
push   0x0
call   8048f90 <mmap@plt>
mov    ds:0x8148b80,eax
add    esp,0x18
cmp    eax,0xffffffff
jne    80516a0 <strcpy@plt+0x8390>
push   ebx
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x8148b80,0x0
xor    eax,eax
jmp    80517fc <strcpy@plt+0x84ec>
lea    esi,[esi+0x0]
push   ebx
call   8048f50 <close@plt>
mov    eax,DWORD PTR [ebp-0x2c]
mov    ds:0x8148b94,eax
mov    edx,DWORD PTR ds:0x8148b80
lea    ecx,[eax+edx*1-0x2]
add    esp,0x4
test   ecx,ecx
je     80516cb <strcpy@plt+0x83bb>
jmp    80516c6 <strcpy@plt+0x83b6>
cmp    BYTE PTR [ecx],0xa
je     80516cb <strcpy@plt+0x83bb>
dec    ecx
cmp    ecx,edx
ja     80516c1 <strcpy@plt+0x83b1>
inc    ecx
mov    DWORD PTR ds:0x8148b84,ecx
mov    ebx,DWORD PTR ds:0x8148b80
mov    dl,BYTE PTR [ebx]
cmp    dl,0x20
je     8051700 <strcpy@plt+0x83f0>
lea    ecx,[ebx+0x20]
mov    al,dl
add    al,0xd0
cmp    al,0x9
jbe    80516f2 <strcpy@plt+0x83e2>
add    dl,0x9f
cmp    dl,0x5
ja     8051700 <strcpy@plt+0x83f0>
cmp    ebx,ecx
jae    8051700 <strcpy@plt+0x83f0>
inc    ebx
mov    al,BYTE PTR [ebx]
mov    dl,al
cmp    dl,0x20
jne    80516e2 <strcpy@plt+0x83d2>
cmp    BYTE PTR [ebx+0x2],0x20
sete   al
mov    BYTE PTR [ebp-0x7c],al
and    eax,0x1
mov    ds:0x805c3bc,eax
mov    DWORD PTR [ebp-0x80],ebx
mov    eax,ds:0x8148b80
sub    DWORD PTR [ebp-0x80],eax
mov    eax,DWORD PTR [ebp-0x80]
mov    ds:0x8148b98,eax
push   eax
push   0x805a840
push   0xa
push   0x8148b88
call   80491d0 <snprintf@plt>
add    esp,0x10
cmp    BYTE PTR [ebx],0x20
jne    8051770 <strcpy@plt+0x8460>
push   0x805a860
push   DWORD PTR ds:0x8148b80
call   8049200 <strspn@plt>
add    esp,0x8
mov    edx,eax
mov    edi,DWORD PTR ds:0x8148b80
xor    eax,eax
cld    
mov    ecx,0xffffffff
repnz scas al,BYTE PTR es:[edi]
not    ecx
dec    ecx
cmp    edx,ecx
je     80517a0 <strcpy@plt+0x8490>
nop
lea    esi,[esi+eiz*1+0x0]
push   esi
push   0x805a8c0
mov    eax,DWORD PTR [ebp+0xc]
call   eax
push   DWORD PTR ds:0x8148b94
push   DWORD PTR ds:0x8148b80
call   8049000 <munmap@plt>
mov    DWORD PTR ds:0x8148b80,0x0
xor    eax,eax
jmp    80517fc <strcpy@plt+0x84ec>
lea    esi,[esi+0x0]
lea    ebx,[ebp-0x78]
jmp    80517d0 <strcpy@plt+0x84c0>
push   esi
push   0x805a900
mov    eax,DWORD PTR [ebp+0xc]
call   eax
push   DWORD PTR ds:0x8148b94
push   DWORD PTR ds:0x8148b80
call   8049000 <munmap@plt>
mov    DWORD PTR ds:0x8148b80,0x0
xor    eax,eax
jmp    80517fc <strcpy@plt+0x84ec>
nop
push   DWORD PTR ds:0x805c404
push   0x805a8eb
push   ebx
call   80492c0 <sprintf@plt>
add    esp,0xc
push   ebx
push   DWORD PTR ds:0x8148b80
call   80490a0 <strstr@plt>
add    esp,0x8
test   eax,eax
je     80517a5 <strcpy@plt+0x8495>
mov    eax,0x1
lea    esp,[ebp-0x8c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x18
push   edi
push   esi
push   ebx
fild   DWORD PTR ds:0x805c3b8
fidivr DWORD PTR ds:0x8148b94
fnstcw WORD PTR [ebp-0x4]
mov    ebx,DWORD PTR [ebp-0x4]
mov    bh,0xc
mov    DWORD PTR [ebp-0xc],ebx
fldcw  WORD PTR [ebp-0xc]
fistp  DWORD PTR [ebp-0xc]
mov    esi,DWORD PTR [ebp-0xc]
fldcw  WORD PTR [ebp-0x4]
push   DWORD PTR [ebp+0x8]
push   0x8148b88
push   0x8148960
call   80492c0 <sprintf@plt>
mov    DWORD PTR [ebp-0x10],0x0
mov    eax,ds:0x8148b80
mov    ds:0x8148940,eax
add    esp,0xc
test   esi,esi
je     80518e0 <strcpy@plt+0x85d0>
sar    esi,0x1
mov    DWORD PTR [ebp-0x14],esi
mov    edi,DWORD PTR [ebp-0x10]
add    edi,esi
push   DWORD PTR ds:0x8148b98
mov    eax,edi
imul   eax,DWORD PTR ds:0x805c3b8
mov    esi,DWORD PTR ds:0x8148b80
lea    ecx,[eax+esi*1]
test   edi,edi
jne    8051890 <strcpy@plt+0x8580>
mov    eax,esi
jmp    80518be <strcpy@plt+0x85ae>
lea    esi,[esi+0x0]
mov    edx,ecx
sub    edx,esi
mov    ebx,DWORD PTR ds:0x8148b94
mov    DWORD PTR [ebp-0x18],ebx
mov    eax,ebx
add    eax,0xfffffffe
cmp    edx,eax
jle    80518aa <strcpy@plt+0x859a>
lea    ecx,[ebx+esi*1-0x2]
cmp    BYTE PTR [ecx],0xa
je     80518bb <strcpy@plt+0x85ab>
mov    eax,esi
cmp    ecx,eax
jbe    80518bb <strcpy@plt+0x85ab>
dec    ecx
cmp    BYTE PTR [ecx],0xa
jne    80518b1 <strcpy@plt+0x85a1>
lea    eax,[ecx+0x1]
mov    ds:0x8148940,eax
push   eax
push   0x8148960
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
jle    80518d9 <strcpy@plt+0x85c9>
inc    edi
mov    DWORD PTR [ebp-0x10],edi
mov    esi,DWORD PTR [ebp-0x14]
test   esi,esi
jne    8051862 <strcpy@plt+0x8552>
mov    eax,ds:0x8148940
cmp    eax,DWORD PTR ds:0x8148b84
jne    8051945 <strcpy@plt+0x8635>
lea    edx,[eax+0x1]
cmp    BYTE PTR [eax],0x20
je     80518fc <strcpy@plt+0x85ec>
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    80518f5 <strcpy@plt+0x85e5>
cmp    DWORD PTR ds:0x805c3bc,0x0
je     805190c <strcpy@plt+0x85fc>
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    8051905 <strcpy@plt+0x85f5>
push   0x80
push   edx
push   0x81488c0
call   80492a0 <strncpy@plt>
mov    edx,0x81488c0
mov    eax,edx
cmp    edx,0x8148940
jae    8051a80 <strcpy@plt+0x8770>
nop
cmp    BYTE PTR [eax],0xa
jne    8051938 <strcpy@plt+0x8628>
mov    BYTE PTR [eax],0x0
inc    eax
cmp    eax,0x8148940
jb     8051930 <strcpy@plt+0x8620>
jmp    8051a80 <strcpy@plt+0x8770>
push   DWORD PTR ds:0x8148b98
push   eax
push   0x8148960
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
jle    8051975 <strcpy@plt+0x8665>
push   0xa
push   DWORD PTR ds:0x8148940
call   8048ef0 <strchr@plt>
add    esp,0x8
inc    eax
mov    ds:0x8148940,eax
jmp    8051945 <strcpy@plt+0x8635>
mov    eax,ds:0x8148940
cmp    eax,DWORD PTR ds:0x8148b80
jne    80519e5 <strcpy@plt+0x86d5>
lea    edx,[eax+0x1]
cmp    BYTE PTR [eax],0x20
je     8051997 <strcpy@plt+0x8687>
lea    esi,[esi+0x0]
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    8051990 <strcpy@plt+0x8680>
cmp    DWORD PTR ds:0x805c3bc,0x0
je     80519a7 <strcpy@plt+0x8697>
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    80519a0 <strcpy@plt+0x8690>
push   0x80
push   edx
push   0x81488c0
call   80492a0 <strncpy@plt>
mov    edx,0x81488c0
mov    eax,edx
cmp    edx,0x8148940
jae    8051a80 <strcpy@plt+0x8770>
lea    esi,[esi+0x0]
cmp    BYTE PTR [eax],0xa
jne    80519d8 <strcpy@plt+0x86c8>
mov    BYTE PTR [eax],0x0
inc    eax
cmp    eax,0x8148940
jb     80519d0 <strcpy@plt+0x86c0>
jmp    8051a80 <strcpy@plt+0x8770>
push   DWORD PTR ds:0x8148b98
push   eax
push   0x8148960
call   80490e0 <strncmp@plt>
add    esp,0xc
test   eax,eax
jge    8051a30 <strcpy@plt+0x8720>
mov    edx,DWORD PTR ds:0x8148940
lea    eax,[edx-0x1]
mov    ecx,DWORD PTR ds:0x8148b80
test   eax,eax
je     8051a21 <strcpy@plt+0x8711>
lea    eax,[edx-0x2]
cmp    eax,ecx
jbe    8051a21 <strcpy@plt+0x8711>
cmp    BYTE PTR [eax],0xa
je     8051a21 <strcpy@plt+0x8711>
dec    eax
cmp    eax,ecx
ja     8051a17 <strcpy@plt+0x8707>
inc    eax
mov    ds:0x8148940,eax
jmp    80519e5 <strcpy@plt+0x86d5>
lea    esi,[esi+eiz*1+0x0]
mov    edx,DWORD PTR ds:0x8148940
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    8051a36 <strcpy@plt+0x8726>
cmp    DWORD PTR ds:0x805c3bc,0x0
je     8051a4d <strcpy@plt+0x873d>
mov    al,BYTE PTR [edx]
inc    edx
cmp    al,0x20
jne    8051a46 <strcpy@plt+0x8736>
push   0x80
push   edx
push   0x81488c0
call   80492a0 <strncpy@plt>
mov    edx,0x81488c0
mov    eax,edx
cmp    edx,0x8148940
jae    8051a80 <strcpy@plt+0x8770>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [eax],0xa
jne    8051a78 <strcpy@plt+0x8768>
mov    BYTE PTR [eax],0x0
inc    eax
cmp    eax,0x8148940
jb     8051a70 <strcpy@plt+0x8760>
mov    BYTE PTR ds:0x814893f,0x0
mov    eax,edx
lea    esp,[ebp-0x24]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
lea    eax,[ebp+0xc]
push   eax
push   DWORD PTR [ebp+0x8]
push   DWORD PTR ds:0x805c604
call   8049050 <vfprintf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x1c8
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    edi,DWORD PTR [ebp+0xc]
call   8049130 <getuid@plt>
mov    ebx,eax
call   8049300 <geteuid@plt>
cmp    ebx,eax
je     8051ae0 <strcpy@plt+0x87d0>
push   0x805a9a0
call   8049120 <printf@plt>
push   0x1
call   8049220 <exit@plt>
nop
call   80491a0 <getgid@plt>
mov    ebx,eax
call   8049230 <getegid@plt>
cmp    ebx,eax
je     8051b01 <strcpy@plt+0x87f1>
push   0x805a9e0
call   8049120 <printf@plt>
push   0x1
call   8049220 <exit@plt>
lea    eax,[ebp-0x1c8]
push   eax
call   80490b0 <uname@plt>
add    esp,0x4
test   esi,esi
je     8051b21 <strcpy@plt+0x8811>
push   edi
push   esi
call   8051620 <strcpy@plt+0x8310>
test   eax,eax
jne    8051b5f <strcpy@plt+0x884f>
jmp    8051b9b <strcpy@plt+0x888b>
push   0x805aa16
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
je     8051b40 <strcpy@plt+0x8830>
push   edi
push   eax
call   8051620 <strcpy@plt+0x8310>
add    esp,0x8
test   eax,eax
jne    8051b5f <strcpy@plt+0x884f>
push   0x805aa20
call   8048f80 <getenv@plt>
add    esp,0x4
test   eax,eax
je     8051b63 <strcpy@plt+0x8853>
push   edi
push   eax
call   8051620 <strcpy@plt+0x8310>
add    esp,0x8
test   eax,eax
je     8051b63 <strcpy@plt+0x8853>
xor    eax,eax
jmp    8051ba0 <strcpy@plt+0x8890>
mov    ebx,0x805c3c0
cmp    DWORD PTR ds:0x805c3c0,0x0
je     8051b9b <strcpy@plt+0x888b>
lea    esi,[ebp-0x40]
lea    eax,[ebp-0x146]
push   eax
push   DWORD PTR [ebx]
push   0x40
push   esi
call   80491d0 <snprintf@plt>
push   edi
push   esi
call   8051620 <strcpy@plt+0x8310>
add    esp,0x18
test   eax,eax
jne    8051b5f <strcpy@plt+0x884f>
add    ebx,0x4
cmp    DWORD PTR [ebx],0x0
jne    8051b74 <strcpy@plt+0x8864>
mov    eax,0xffffffff
lea    esp,[ebp-0x1d4]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x54
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x48],0x0
mov    BYTE PTR [ebp-0x20],0x1
mov    BYTE PTR ds:0x8148980,0x0
push   0x805aa2e
push   0x805aa30
call   80492b0 <fopen@plt>
mov    edi,eax
add    esp,0x8
test   edi,edi
jne    8051bf0 <strcpy@plt+0x88e0>
mov    eax,0x805aa3c
jmp    8051ccc <strcpy@plt+0x89bc>
lea    esi,[esi+eiz*1+0x0]
lea    esi,[ebp-0x20]
mov    DWORD PTR [ebp-0x50],esi
jmp    8051cb0 <strcpy@plt+0x89a0>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [ebp-0x20],0x0
je     8051cc1 <strcpy@plt+0x89b1>
lea    esi,[ebp-0x40]
mov    DWORD PTR [ebp-0x4c],esi
push   esi
lea    eax,[ebp-0x44]
push   eax
push   0x805aa46
push   edi
call   8048fe0 <fscanf@plt>
push   edi
call   8048ed0 <fgetc@plt>
add    esp,0x14
mov    ebx,DWORD PTR [ebp+0x8]
sub    ebx,DWORD PTR [ebp-0x48]
cmp    al,0x5b
je     8051c40 <strcpy@plt+0x8930>
mov    BYTE PTR [ebp-0x20],0x0
jmp    8051c52 <strcpy@plt+0x8942>
lea    esi,[esi+eiz*1+0x0]
mov    esi,DWORD PTR [ebp-0x50]
push   esi
push   0x805aa4e
push   edi
call   8048fe0 <fscanf@plt>
add    esp,0xc
mov    esi,DWORD PTR [ebp-0x44]
mov    DWORD PTR [ebp-0x54],esi
mov    ecx,DWORD PTR [ebp+0x8]
sub    ecx,esi
mov    edx,ecx
jns    8051c63 <strcpy@plt+0x8953>
neg    edx
mov    eax,ebx
test   eax,eax
jge    8051c6b <strcpy@plt+0x895b>
neg    eax
cmp    edx,eax
jge    8051cb0 <strcpy@plt+0x89a0>
mov    eax,ecx
test   eax,eax
jge    8051c77 <strcpy@plt+0x8967>
neg    eax
cmp    eax,0x9ff
jg     8051cb0 <strcpy@plt+0x89a0>
mov    esi,DWORD PTR [ebp-0x54]
mov    DWORD PTR [ebp-0x48],esi
mov    eax,0x8148980
mov    BYTE PTR ds:0x8148980,0x5b
cmp    ecx,0x100
jbe    8051ca3 <strcpy@plt+0x8993>
mov    esi,DWORD PTR [ebp-0x50]
push   esi
push   0x8148981
jmp    8051ca8 <strcpy@plt+0x8998>
mov    esi,DWORD PTR [ebp-0x4c]
push   esi
push   eax
call   8049310 <strcpy@plt>
add    esp,0x8
push   edi
call   8048f00 <feof@plt>
add    esp,0x4
test   eax,eax
je     8051c00 <strcpy@plt+0x88f0>
push   edi
call   8049160 <fclose@plt>
mov    eax,0x8148980
lea    esp,[ebp-0x60]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
test   eax,eax
je     8051d20 <strcpy@plt+0x8a10>
cmp    DWORD PTR ds:0x8148b80,0x0
je     8051cf5 <strcpy@plt+0x89e5>
push   eax
call   8051808 <strcpy@plt+0x84f8>
mov    ebx,eax
add    esp,0x4
jmp    8051cfa <strcpy@plt+0x89ea>
mov    ebx,0x805aa51
push   0x4
push   0x805aa57
push   ebx
call   80490e0 <strncmp@plt>
test   eax,eax
jne    8051d0e <strcpy@plt+0x89fe>
add    ebx,0x4
cmp    BYTE PTR [ebx],0x5f
jne    8051d25 <strcpy@plt+0x8a15>
inc    ebx
cmp    BYTE PTR [ebx],0x5f
je     8051d13 <strcpy@plt+0x8a03>
jmp    8051d25 <strcpy@plt+0x8a15>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,0x805c3d8
mov    eax,ebx
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
push   ebp
mov    ebp,esp
cmp    DWORD PTR ds:0x8148b80,0x0
je     8051d42 <strcpy@plt+0x8a32>
push   DWORD PTR [ebp+0x8]
call   8051808 <strcpy@plt+0x84f8>
jmp    8051d47 <strcpy@plt+0x8a37>
mov    eax,0x805aa51
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   0x8051a94
push   DWORD PTR [ebp+0x8]
call   8051aac <strcpy@plt+0x879c>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
mov    eax,ds:0x8148b80
test   eax,eax
je     8051d78 <strcpy@plt+0x8a68>
push   DWORD PTR ds:0x8148b94
push   eax
call   8049000 <munmap@plt>
mov    DWORD PTR ds:0x8148b80,0x0
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
push   0x1c
call   8054198 <strcpy@plt+0xae88>
mov    ebx,eax
mov    esi,edi
and    esi,0x100
add    esp,0x4
test   esi,esi
jne    8051dc5 <strcpy@plt+0x8ab5>
push   0x805aa60
call   80491c0 <opendir@plt>
mov    DWORD PTR [ebx],eax
test   eax,eax
jne    8051dcb <strcpy@plt+0x8abb>
xor    eax,eax
jmp    8051e28 <strcpy@plt+0x8b18>
mov    DWORD PTR [ebx],0x0
mov    DWORD PTR [ebx+0x4],edi
test   esi,esi
je     8051de0 <strcpy@plt+0x8ad0>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx+0x8],eax
jmp    8051e14 <strcpy@plt+0x8b04>
lea    esi,[esi+0x0]
test   edi,0x200
je     8051df0 <strcpy@plt+0x8ae0>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx+0xc],eax
jmp    8051e14 <strcpy@plt+0x8b04>
test   edi,0x400
je     8051e06 <strcpy@plt+0x8af6>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx+0x10],eax
mov    eax,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebx+0x14],eax
jmp    8051e14 <strcpy@plt+0x8b04>
test   edi,0x800
je     8051e14 <strcpy@plt+0x8b04>
mov    eax,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebx+0x18],eax
and    edi,0x1200
cmp    edi,0x1200
jne    8051e26 <strcpy@plt+0x8b16>
and    BYTE PTR [ebx+0x5],0xfd
mov    eax,ebx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
cmp    DWORD PTR [ebp+0x10],0x1
jne    8051eb4 <strcpy@plt+0x8ba4>
lea    ebx,[esi+0x190]
mov    DWORD PTR [esi+0x190],0x0
mov    DWORD PTR [esi+0x194],0x0
mov    DWORD PTR [esi+0x198],0x0
mov    DWORD PTR [esi+0x19c],0x0
push   ebx
push   0x805aa66
push   edi
call   8049250 <sscanf@plt>
add    esp,0xc
push   0xa
push   ebx
call   8048ef0 <strchr@plt>
add    esp,0x8
mov    edx,eax
mov    BYTE PTR [edx],0x0
push   0x805aa71
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
lea    eax,[esi+0x1dc]
push   eax
push   0x805aa77
push   edx
call   8049250 <sscanf@plt>
add    esp,0xc
push   0x805aa81
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     8051ee6 <strcpy@plt+0x8bd6>
lea    eax,[esi+0x1c4]
push   eax
lea    eax,[esi+0x1c0]
push   eax
push   0x805aa86
push   edx
call   8049250 <sscanf@plt>
add    esp,0x10
jmp    8051ef9 <strcpy@plt+0x8be9>
push   0x805aa98
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
push   0x805aaa9
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     8051f40 <strcpy@plt+0x8c30>
lea    eax,[esi+0x1b8]
push   eax
lea    eax,[esi+0x1b0]
push   eax
lea    eax,[esi+0x1a8]
push   eax
lea    eax,[esi+0x1a0]
push   eax
push   0x805aaae
push   edx
call   8049250 <sscanf@plt>
add    esp,0x18
jmp    8051f53 <strcpy@plt+0x8c43>
lea    esi,[esi+eiz*1+0x0]
push   0x805aa98
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
push   0x805aabf
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     8051f93 <strcpy@plt+0x8c83>
lea    eax,[esi+0x1bc]
push   eax
lea    eax,[esi+0x1b4]
push   eax
lea    eax,[esi+0x1ac]
push   eax
lea    eax,[esi+0x1a4]
push   eax
push   0x805aac4
push   edx
call   8049250 <sscanf@plt>
add    esp,0x18
jmp    8051fa6 <strcpy@plt+0x8c96>
push   0x805aa98
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
add    esp,0x8
push   0x805aad5
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     8052000 <strcpy@plt+0x8cf0>
lea    eax,[esi+0xb0]
push   eax
lea    eax,[esi+0xac]
push   eax
lea    eax,[esi+0xa8]
push   eax
lea    eax,[esi+0xa4]
push   eax
lea    eax,[esi+0xa0]
push   eax
lea    eax,[esi+0x9c]
push   eax
lea    eax,[esi+0x98]
push   eax
push   0x805aae0
push   edx
call   8049250 <sscanf@plt>
add    esp,0x24
jmp    8052046 <strcpy@plt+0x8d36>
nop
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [esi+0x98],0x0
mov    DWORD PTR [esi+0x9c],0x0
mov    DWORD PTR [esi+0xa0],0x0
mov    DWORD PTR [esi+0xa4],0x0
mov    DWORD PTR [esi+0xa8],0x0
mov    DWORD PTR [esi+0xac],0x0
mov    DWORD PTR [esi+0xb0],0x0
push   0x805ab45
push   edi
call   80490a0 <strstr@plt>
add    esp,0x8
mov    edx,eax
test   edx,edx
je     8052074 <strcpy@plt+0x8d64>
lea    eax,[esi+0x48]
push   eax
lea    eax,[esi+0x30]
push   eax
lea    eax,[esi+0x18]
push   eax
push   esi
push   0x805ab60
push   edx
call   8049250 <sscanf@plt>
jmp    8052084 <strcpy@plt+0x8d74>
push   0x805aa98
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
push   0x29
push   ebx
call   8049170 <strrchr@plt>
mov    edi,eax
mov    BYTE PTR [edi],0x0
add    esp,0x8
lea    eax,[esi+0x190]
mov    DWORD PTR [esi+0x190],0x0
mov    DWORD PTR [esi+0x194],0x0
mov    DWORD PTR [esi+0x198],0x0
mov    DWORD PTR [esi+0x19c],0x0
push   eax
lea    eax,[esi+0x1c0]
push   eax
push   0x805ab88
push   ebx
call   8049250 <sscanf@plt>
lea    eax,[esi+0xfc]
push   eax
lea    eax,[esi+0xd4]
push   eax
lea    eax,[esi+0xd0]
push   eax
lea    eax,[esi+0xf8]
push   eax
lea    eax,[esi+0xf0]
push   eax
lea    eax,[esi+0xec]
push   eax
lea    eax,[esi+0xe8]
push   eax
lea    eax,[esi+0xe4]
push   eax
lea    eax,[esi+0xe0]
push   eax
lea    eax,[esi+0xb8]
push   eax
lea    eax,[esi+0x74]
push   eax
lea    eax,[esi+0xb4]
push   eax
lea    eax,[esi+0xf4]
push   eax
lea    eax,[esi+0x78]
push   eax
lea    eax,[esi+0x6c]
push   eax
lea    eax,[esi+0x70]
push   eax
lea    eax,[esi+0x68]
push   eax
lea    eax,[esi+0x64]
push   eax
lea    eax,[esi+0x60]
push   eax
lea    eax,[esi+0xdc]
push   eax
lea    eax,[esi+0xd8]
push   eax
lea    eax,[esi+0xcc]
push   eax
lea    eax,[esi+0xc4]
push   eax
lea    eax,[esi+0xc8]
push   eax
lea    eax,[esi+0xc0]
push   eax
lea    eax,[esi+0xbc]
push   eax
lea    eax,[esi+0x1d4]
push   eax
lea    eax,[esi+0x1d0]
push   eax
lea    eax,[esi+0x1cc]
push   eax
lea    eax,[esi+0x1c8]
push   eax
lea    eax,[esi+0x1c4]
push   eax
lea    eax,[esi+0x1dc]
push   eax
push   0x805aba0
lea    eax,[edi+0x2]
push   eax
call   8049250 <sscanf@plt>
cmp    DWORD PTR [esi+0x1d0],0x0
jne    80521d5 <strcpy@plt+0x8ec5>
mov    DWORD PTR [esi+0x1d0],0xffffffff
mov    eax,ds:0x805c404
cmp    eax,0x10326
jg     80521fc <strcpy@plt+0x8eec>
mov    eax,0x1e
sub    eax,DWORD PTR [esi+0x68]
mov    DWORD PTR [esi+0x68],eax
mov    eax,0xf
sub    eax,DWORD PTR [esi+0x70]
mov    DWORD PTR [esi+0x70],eax
mov    eax,ds:0x805c404
cmp    eax,0x1011d
jg     8052219 <strcpy@plt+0x8f09>
mov    eax,DWORD PTR [esi+0x1d0]
cmp    eax,0xffffffff
je     8052219 <strcpy@plt+0x8f09>
add    eax,0x400
mov    DWORD PTR [esi+0x1d0],eax
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x818
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x804],0x0
mov    DWORD PTR [ebp-0x80c],0x0
mov    DWORD PTR [ebp-0x810],0x0
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
push   0x805ac49
lea    edi,[ebp-0x800]
mov    DWORD PTR [ebp-0x818],edi
mov    DWORD PTR [ebp-0x814],edi
push   edi
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   edi
call   80491e0 <open@plt>
mov    DWORD PTR [ebp-0x808],eax
add    esp,0x1c
cmp    eax,0xffffffff
jne    8052304 <strcpy@plt+0x8ff4>
xor    eax,eax
jmp    80523ea <strcpy@plt+0x90da>
cmp    esi,0x7fe
ja     80522a2 <strcpy@plt+0x8f92>
mov    DWORD PTR [ebp-0x810],0x1
cmp    DWORD PTR [ebp-0x810],0x0
je     80522c3 <strcpy@plt+0x8fb3>
mov    edi,DWORD PTR [ebp-0x818]
cmp    BYTE PTR [edi+esi*1-0x1],0x0
je     80522c3 <strcpy@plt+0x8fb3>
mov    edi,DWORD PTR [ebp-0x814]
mov    BYTE PTR [esi+edi*1],0x0
inc    esi
mov    ebx,DWORD PTR [ebp-0x80c]
add    ebx,esi
push   ebx
mov    edi,DWORD PTR [ebp-0x804]
push   edi
call   80541dc <strcpy@plt+0xaecc>
mov    DWORD PTR [ebp-0x804],eax
add    eax,DWORD PTR [ebp-0x80c]
push   esi
mov    edi,DWORD PTR [ebp-0x818]
push   edi
push   eax
call   8049150 <memcpy@plt>
mov    DWORD PTR [ebp-0x80c],ebx
add    esp,0x14
cmp    DWORD PTR [ebp-0x810],0x0
jne    8052329 <strcpy@plt+0x9019>
push   0x7ff
mov    edi,DWORD PTR [ebp-0x818]
push   edi
mov    edi,DWORD PTR [ebp-0x808]
push   edi
call   80492f0 <read@plt>
mov    esi,eax
add    esp,0xc
test   esi,esi
jg     8052290 <strcpy@plt+0x8f80>
mov    edi,DWORD PTR [ebp-0x808]
push   edi
call   8048f50 <close@plt>
add    esp,0x4
test   esi,esi
jg     8052363 <strcpy@plt+0x9053>
cmp    DWORD PTR [ebp-0x810],0x0
jne    8052363 <strcpy@plt+0x9053>
cmp    DWORD PTR [ebp-0x804],0x0
je     8052289 <strcpy@plt+0x8f79>
mov    edi,DWORD PTR [ebp-0x804]
push   edi
call   8049260 <free@plt>
jmp    8052289 <strcpy@plt+0x8f79>
mov    ecx,DWORD PTR [ebp-0x804]
add    ecx,DWORD PTR [ebp-0x80c]
mov    ebx,DWORD PTR [ebp-0x80c]
add    ebx,0x3
not    ebx
and    ebx,0x3
xor    edx,edx
mov    eax,DWORD PTR [ebp-0x804]
cmp    eax,ecx
jae    805239d <strcpy@plt+0x908d>
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [eax],0x0
jne    8052398 <strcpy@plt+0x9088>
add    edx,0x4
inc    eax
cmp    eax,ecx
jb     8052390 <strcpy@plt+0x9080>
mov    edi,DWORD PTR [ebp-0x80c]
lea    eax,[edi+edx*1+0x4]
add    eax,ebx
push   eax
mov    edi,DWORD PTR [ebp-0x804]
push   edi
call   80541dc <strcpy@plt+0xaecc>
mov    DWORD PTR [ebp-0x804],eax
mov    ecx,eax
add    ecx,DWORD PTR [ebp-0x80c]
add    ebx,ecx
mov    DWORD PTR [ebx],eax
lea    edx,[ebx+0x4]
dec    ecx
jmp    80523dd <strcpy@plt+0x90cd>
mov    esi,esi
cmp    BYTE PTR [eax],0x0
jne    80523dd <strcpy@plt+0x90cd>
lea    edi,[eax+0x1]
mov    DWORD PTR [edx],edi
add    edx,0x4
inc    eax
cmp    eax,ecx
jb     80523d0 <strcpy@plt+0x90c0>
mov    DWORD PTR [edx],0x0
mov    eax,ebx
lea    esp,[ebp-0x824]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0x20
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0x0
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    edx,DWORD PTR [ebp+0x8]
test   BYTE PTR [edx+0x5],0x1
je     8052451 <strcpy@plt+0x9141>
mov    eax,DWORD PTR [edx+0x8]
mov    eax,DWORD PTR [eax]
test   eax,eax
je     8052475 <strcpy@plt+0x9165>
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
add    DWORD PTR [ecx+0x8],0x4
push   0x805ac4f
push   0x8148c60
call   80492c0 <sprintf@plt>
mov    DWORD PTR [ebp-0x8],0x1
jmp    8052490 <strcpy@plt+0x9180>
mov    al,BYTE PTR [eax+0xb]
add    al,0xd0
cmp    al,0x9
jbe    8052467 <strcpy@plt+0x9157>
mov    edx,DWORD PTR [ebp+0x8]
push   DWORD PTR [edx]
call   80492d0 <readdir@plt>
mov    ds:0x8148bf0,eax
add    esp,0x4
test   eax,eax
jne    8052448 <strcpy@plt+0x9138>
mov    eax,ds:0x8148bf0
test   eax,eax
je     8052475 <strcpy@plt+0x9165>
add    eax,0xb
jne    8052480 <strcpy@plt+0x9170>
xor    eax,eax
jmp    8052982 <strcpy@plt+0x9672>
lea    esi,[esi+eiz*1+0x0]
push   eax
push   0x805ac58
push   0x8148c60
call   80492c0 <sprintf@plt>
add    esp,0xc
push   0x8148c00
push   0x8148c60
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
cmp    eax,0xffffffff
je     8052416 <strcpy@plt+0x9106>
mov    ecx,DWORD PTR [ebp+0x8]
test   BYTE PTR [ecx+0x5],0x4
je     80524ff <strcpy@plt+0x91ef>
mov    ebx,DWORD PTR ds:0x8148c18
mov    esi,DWORD PTR [ecx+0x10]
mov    DWORD PTR [ebp-0x20],0x0
mov    edi,DWORD PTR [ecx+0x14]
cmp    DWORD PTR [ebp-0x20],edi
jge    80524e2 <strcpy@plt+0x91d2>
mov    eax,esi
cmp    DWORD PTR [eax],ebx
je     80524e2 <strcpy@plt+0x91d2>
add    eax,0x4
inc    DWORD PTR [ebp-0x20]
cmp    DWORD PTR [ebp-0x20],edi
jl     80524d3 <strcpy@plt+0x91c3>
xor    eax,eax
cmp    DWORD PTR [ebp-0x20],edi
jge    80524f7 <strcpy@plt+0x91e7>
mov    edx,DWORD PTR [ebp-0x20]
cmp    DWORD PTR [esi+edx*4],ebx
sete   al
and    eax,0xff
test   eax,eax
je     8052416 <strcpy@plt+0x9106>
cmp    DWORD PTR [ebp-0x4],0x0
jne    805252e <strcpy@plt+0x921e>
cmp    DWORD PTR [ebp+0xc],0x0
je     8052513 <strcpy@plt+0x9203>
mov    ecx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0xc],ecx
jmp    8052527 <strcpy@plt+0x9217>
push   0x1e4
mov    edx,DWORD PTR [ebp-0xc]
push   edx
call   8054150 <strcpy@plt+0xae40>
add    esp,0x8
mov    DWORD PTR [ebp-0xc],eax
mov    DWORD PTR [ebp-0x4],0x1
mov    eax,ds:0x8148c18
mov    ecx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ecx+0x1a8],eax
push   0x805ac61
push   0x8148c60
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     80525a2 <strcpy@plt+0x9292>
push   0x1ff
push   0x8148c80
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052590 <strcpy@plt+0x9280>
mov    ebx,0xffffffff
jmp    8052597 <strcpy@plt+0x9287>
lea    esi,[esi+0x0]
mov    BYTE PTR [ebx+0x8148c80],0x0
push   esi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     8052416 <strcpy@plt+0x9106>
mov    edx,DWORD PTR [ebp-0xc]
push   edx
push   0x8148c80
call   805208c <strcpy@plt+0x8d7c>
add    esp,0x8
cmp    DWORD PTR [ebp-0x8],0x0
jne    8052677 <strcpy@plt+0x9367>
mov    ecx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x18],ecx
mov    DWORD PTR [ebp-0x14],ecx
test   ch,0x2
je     8052630 <strcpy@plt+0x9320>
mov    edx,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [edx+0x1d0]
mov    edx,eax
mov    ecx,edx
sar    ecx,0x1f
mov    esi,edx
mov    edi,ecx
mov    ecx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ecx+0xc]
mov    DWORD PTR [ebp-0x20],ecx
jmp    8052606 <strcpy@plt+0x92f6>
cmp    ebx,esi
jne    80525ff <strcpy@plt+0x92ef>
cmp    DWORD PTR [ebp-0x10],edi
je     8052617 <strcpy@plt+0x9307>
add    DWORD PTR [ebp-0x20],0x8
mov    ecx,DWORD PTR [ebp-0x20]
mov    ebx,DWORD PTR [ecx]
mov    edx,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x1c],edx
mov    DWORD PTR [ebp-0x10],edx
mov    eax,ebx
or     eax,edx
jne    80525f6 <strcpy@plt+0x92e6>
xor    eax,eax
cmp    ebx,esi
jne    8052628 <strcpy@plt+0x9318>
cmp    DWORD PTR [ebp-0x1c],edi
sete   al
and    eax,0xff
test   eax,eax
je     8052416 <strcpy@plt+0x9106>
cmp    DWORD PTR [ebp-0x8],0x0
jne    8052677 <strcpy@plt+0x9367>
mov    ecx,DWORD PTR [ebp-0x14]
test   ch,0x10
je     805264e <strcpy@plt+0x933e>
mov    edx,DWORD PTR [ebp-0xc]
cmp    DWORD PTR [edx+0x1d0],0xffffffff
je     8052416 <strcpy@plt+0x9106>
mov    ecx,DWORD PTR [ebp-0x18]
test   ch,0x8
je     8052677 <strcpy@plt+0x9367>
mov    edx,DWORD PTR [ebp-0xc]
movsx  eax,BYTE PTR [edx+0x1dc]
push   eax
mov    ecx,DWORD PTR [ebp+0x8]
push   DWORD PTR [ecx+0x18]
call   8048ef0 <strchr@plt>
add    esp,0x8
test   eax,eax
je     8052416 <strcpy@plt+0x9106>
mov    edx,DWORD PTR [ebp+0x8]
test   BYTE PTR [edx+0x4],0x1
je     8052739 <strcpy@plt+0x9429>
push   0x805ac66
push   0x8148c60
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     80526e7 <strcpy@plt+0x93d7>
push   0x1ff
push   0x8148c80
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     80526d5 <strcpy@plt+0x93c5>
mov    ebx,0xffffffff
jmp    80526dc <strcpy@plt+0x93cc>
mov    BYTE PTR [ebx+0x8148c80],0x0
push   esi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     8052739 <strcpy@plt+0x9429>
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x94
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x90
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x8c
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x88
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x84
push   eax
mov    eax,DWORD PTR [ebp-0xc]
sub    eax,0xffffff80
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x7c
push   eax
push   0x805ac2d
push   0x8148c80
call   8049250 <sscanf@plt>
add    esp,0x24
mov    ecx,DWORD PTR [ebp+0x8]
test   BYTE PTR [ecx+0x4],0x10
je     80527bd <strcpy@plt+0x94ad>
push   0x805ac6c
push   0x8148c60
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     80527a5 <strcpy@plt+0x9495>
push   0x1ff
push   0x8148c80
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052793 <strcpy@plt+0x9483>
mov    ebx,0xffffffff
jmp    805279a <strcpy@plt+0x948a>
mov    BYTE PTR [ebx+0x8148c80],0x0
push   esi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     80527bd <strcpy@plt+0x94ad>
push   0x0
mov    edx,DWORD PTR [ebp-0xc]
push   edx
push   0x8148c80
call   8051e30 <strcpy@plt+0x8b20>
add    esp,0xc
mov    ecx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x18],ecx
test   cl,0x8
je     8052912 <strcpy@plt+0x9602>
push   0x10
mov    edx,DWORD PTR [ebp-0xc]
push   DWORD PTR [edx+0x1a8]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x120
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    ecx,DWORD PTR [ebp-0xc]
push   DWORD PTR [ecx+0x1ac]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x160
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    edx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [edx+0x4]
mov    DWORD PTR [ebp-0x18],edx
test   dl,0x10
je     8052912 <strcpy@plt+0x9602>
push   0x10
mov    ecx,DWORD PTR [ebp-0xc]
push   DWORD PTR [ecx+0x1a0]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x110
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    edx,DWORD PTR [ebp-0xc]
push   DWORD PTR [edx+0x1a4]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x150
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    ecx,DWORD PTR [ebp-0xc]
push   DWORD PTR [ecx+0x1b0]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x130
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    edx,DWORD PTR [ebp-0xc]
push   DWORD PTR [edx+0x1b4]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x170
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    ecx,DWORD PTR [ebp-0xc]
push   DWORD PTR [ecx+0x1b8]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x140
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
mov    edx,DWORD PTR [ebp-0xc]
push   DWORD PTR [edx+0x1bc]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
mov    eax,DWORD PTR [ebp-0xc]
add    eax,0x180
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
mov    ecx,DWORD PTR [ebp+0x8]
mov    ecx,DWORD PTR [ecx+0x4]
mov    DWORD PTR [ebp-0x18],ecx
mov    edx,DWORD PTR [ebp-0x18]
test   dl,0x2
je     805293e <strcpy@plt+0x962e>
push   0x805ac73
push   0x8148c60
call   8052224 <strcpy@plt+0x8f14>
mov    ecx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ecx+0x10c],eax
add    esp,0x8
mov    edx,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [edx+0x4]
mov    DWORD PTR [ebp-0x18],edx
mov    ecx,DWORD PTR [ebp-0x18]
test   cl,0x4
je     8052961 <strcpy@plt+0x9651>
push   0x805ac7b
push   0x8148c60
call   8052224 <strcpy@plt+0x8f14>
mov    edx,DWORD PTR [ebp-0xc]
mov    DWORD PTR [edx+0x108],eax
add    esp,0x8
mov    ecx,DWORD PTR [ebp-0xc]
cmp    BYTE PTR [ecx+0x1dc],0x5a
jne    805297f <strcpy@plt+0x966f>
push   0x805ac83
mov    eax,ecx
add    eax,0x190
push   eax
call   8049110 <strcat@plt>
mov    eax,DWORD PTR [ebp-0xc]
lea    esp,[ebp-0x2c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x4],0x0
xor    esi,esi
jmp    80529a9 <strcpy@plt+0x9699>
mov    al,BYTE PTR [eax+0xb]
add    al,0xd0
cmp    al,0x9
jbe    80529bf <strcpy@plt+0x96af>
mov    edx,DWORD PTR [ebp+0x8]
push   DWORD PTR [edx]
call   80492d0 <readdir@plt>
mov    ds:0x8148e80,eax
add    esp,0x4
test   eax,eax
jne    80529a0 <strcpy@plt+0x9690>
mov    eax,ds:0x8148e80
test   eax,eax
je     80529cd <strcpy@plt+0x96bd>
add    eax,0xb
jne    80529d4 <strcpy@plt+0x96c4>
xor    eax,eax
jmp    8052d18 <strcpy@plt+0x9a08>
push   eax
push   0x805ac58
push   0x8148f00
call   80492c0 <sprintf@plt>
add    esp,0xc
push   0x8148ea0
push   0x8148f00
push   0x3
call   8049030 <__xstat@plt>
add    esp,0xc
cmp    eax,0xffffffff
je     80529a9 <strcpy@plt+0x9699>
cmp    DWORD PTR [ebp-0x4],0x0
jne    8052a28 <strcpy@plt+0x9718>
cmp    DWORD PTR [ebp+0xc],0x0
je     8052a11 <strcpy@plt+0x9701>
mov    esi,DWORD PTR [ebp+0xc]
jmp    8052a21 <strcpy@plt+0x9711>
push   0x1e4
push   esi
call   8054150 <strcpy@plt+0xae40>
add    esp,0x8
mov    esi,eax
mov    DWORD PTR [ebp-0x4],0x1
mov    eax,ds:0x8148eb8
mov    DWORD PTR [esi+0x1a8],eax
push   0x805ac61
push   0x8148f00
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    edi,eax
add    esp,0x1c
cmp    edi,0xffffffff
je     8052a96 <strcpy@plt+0x9786>
push   0x1ff
push   0x8148f20
push   edi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052a84 <strcpy@plt+0x9774>
mov    ebx,0xffffffff
jmp    8052a8b <strcpy@plt+0x977b>
mov    BYTE PTR [ebx+0x8148f20],0x0
push   edi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     80529a9 <strcpy@plt+0x9699>
push   esi
push   0x8148f20
call   805208c <strcpy@plt+0x8d7c>
add    esp,0x8
push   0x805ac66
push   0x8148f00
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    edi,eax
add    esp,0x1c
cmp    edi,0xffffffff
je     8052b12 <strcpy@plt+0x9802>
push   0x1ff
push   0x8148f20
push   edi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052b00 <strcpy@plt+0x97f0>
mov    ebx,0xffffffff
jmp    8052b07 <strcpy@plt+0x97f7>
mov    esi,esi
mov    BYTE PTR [ebx+0x8148f20],0x0
push   edi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     8052b57 <strcpy@plt+0x9847>
lea    eax,[esi+0x94]
push   eax
lea    eax,[esi+0x90]
push   eax
lea    eax,[esi+0x8c]
push   eax
lea    eax,[esi+0x88]
push   eax
lea    eax,[esi+0x84]
push   eax
lea    eax,[esi+0x80]
push   eax
lea    eax,[esi+0x7c]
push   eax
push   0x805ac2d
push   0x8148f20
call   8049250 <sscanf@plt>
add    esp,0x24
push   0x805ac6c
push   0x8148f00
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    edi,eax
add    esp,0x1c
cmp    edi,0xffffffff
je     8052bba <strcpy@plt+0x98aa>
push   0x1ff
push   0x8148f20
push   edi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052ba8 <strcpy@plt+0x9898>
mov    ebx,0xffffffff
jmp    8052baf <strcpy@plt+0x989f>
mov    BYTE PTR [ebx+0x8148f20],0x0
push   edi
call   8048f50 <close@plt>
mov    eax,ebx
add    esp,0x4
cmp    eax,0xffffffff
je     8052bcf <strcpy@plt+0x98bf>
push   0x0
push   esi
push   0x8148f20
call   8051e30 <strcpy@plt+0x8b20>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1a8]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
lea    eax,[esi+0x120]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1ac]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
lea    eax,[esi+0x160]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1a0]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
lea    eax,[esi+0x110]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1a4]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
lea    eax,[esi+0x150]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1b0]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
lea    eax,[esi+0x130]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1b4]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
lea    eax,[esi+0x170]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1b8]
call   8054230 <strcpy@plt+0xaf20>
add    esp,0x4
push   eax
lea    eax,[esi+0x140]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x10
push   DWORD PTR [esi+0x1bc]
call   80542a8 <strcpy@plt+0xaf98>
add    esp,0x4
push   eax
lea    eax,[esi+0x180]
push   eax
call   80492a0 <strncpy@plt>
add    esp,0xc
push   0x805ac73
push   0x8148f00
call   8052224 <strcpy@plt+0x8f14>
mov    DWORD PTR [esi+0x10c],eax
push   0x805ac7b
push   0x8148f00
call   8052224 <strcpy@plt+0x8f14>
mov    DWORD PTR [esi+0x108],eax
add    esp,0x10
cmp    BYTE PTR [esi+0x1dc],0x5a
jne    8052d16 <strcpy@plt+0x9a06>
push   0x805ac83
lea    eax,[esi+0x190]
push   eax
call   8049110 <strcat@plt>
mov    eax,esi
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
call   8048f10 <getpid@plt>
push   eax
push   0x805ac4f
push   0x8149120
call   80492c0 <sprintf@plt>
add    esp,0xc
push   0x805ac61
push   0x8149120
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     8052db4 <strcpy@plt+0x9aa4>
push   0x1ff
push   0x8149140
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052d92 <strcpy@plt+0x9a82>
mov    ebx,0xffffffff
jmp    8052d99 <strcpy@plt+0x9a89>
mov    BYTE PTR [ebx+0x8149140],0x0
push   esi
call   8048f50 <close@plt>
add    esp,0x4
test   ebx,ebx
jl     8052db4 <strcpy@plt+0x9aa4>
push   edi
push   0x8149140
call   805208c <strcpy@plt+0x8d7c>
add    esp,0x8
push   0x805ac66
push   0x8149120
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     8052e59 <strcpy@plt+0x9b49>
push   0x1ff
push   0x8149140
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052e05 <strcpy@plt+0x9af5>
mov    ebx,0xffffffff
jmp    8052e0c <strcpy@plt+0x9afc>
mov    BYTE PTR [ebx+0x8149140],0x0
push   esi
call   8048f50 <close@plt>
add    esp,0x4
test   ebx,ebx
jl     8052e59 <strcpy@plt+0x9b49>
lea    eax,[edi+0x94]
push   eax
lea    eax,[edi+0x90]
push   eax
lea    eax,[edi+0x8c]
push   eax
lea    eax,[edi+0x88]
push   eax
lea    eax,[edi+0x84]
push   eax
lea    eax,[edi+0x80]
push   eax
lea    eax,[edi+0x7c]
push   eax
push   0x805ac2d
push   0x8149140
call   8049250 <sscanf@plt>
add    esp,0x24
push   0x805ac6c
push   0x8149120
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     8052ed1 <strcpy@plt+0x9bc1>
push   0x1ff
push   0x8149140
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     8052eb0 <strcpy@plt+0x9ba0>
mov    ebx,0xffffffff
jmp    8052eb7 <strcpy@plt+0x9ba7>
lea    esi,[esi+0x0]
mov    BYTE PTR [ebx+0x8149140],0x0
push   esi
call   8048f50 <close@plt>
add    esp,0x4
test   ebx,ebx
jl     8052ed1 <strcpy@plt+0x9bc1>
push   0x0
push   edi
push   0x8149140
call   8051e30 <strcpy@plt+0x8b20>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
sub    esp,0xc
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
test   ah,0x4
je     8052f01 <strcpy@plt+0x9bf1>
push   DWORD PTR [ebp+0x10]
push   DWORD PTR [ebp+0xc]
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0xc
jmp    8052f23 <strcpy@plt+0x9c13>
test   ah,0xb
je     8052f17 <strcpy@plt+0x9c07>
push   DWORD PTR [ebp+0xc]
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x8
jmp    8052f23 <strcpy@plt+0x9c13>
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    DWORD PTR [ebp-0x4],eax
add    esp,0x4
mov    DWORD PTR ds:0x8149444,0x0
mov    DWORD PTR ds:0x8149440,0x0
mov    DWORD PTR [ebp-0x8],0x8149340
jmp    8052fd5 <strcpy@plt+0x9cc5>
mov    ebx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [esi+0x1c4]
test   ebx,ebx
je     8052fc4 <strcpy@plt+0x9cb4>
mov    ecx,DWORD PTR [ebp-0x8]
cmp    DWORD PTR [ecx+0x1c0],edi
jne    8052f60 <strcpy@plt+0x9c50>
mov    edx,ecx
jmp    8052fa0 <strcpy@plt+0x9c90>
nop
push   edi
mov    ecx,DWORD PTR [ebp-0x8]
push   DWORD PTR [ecx+0x100]
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
je     8052f80 <strcpy@plt+0x9c70>
mov    edx,eax
jmp    8052fa0 <strcpy@plt+0x9c90>
lea    esi,[esi+0x0]
cmp    DWORD PTR [ebp-0x8],0x0
je     8052f9e <strcpy@plt+0x9c8e>
push   edi
push   eax
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
jne    8052f76 <strcpy@plt+0x9c66>
mov    ebx,DWORD PTR [ebx+0x104]
test   ebx,ebx
jne    8052f86 <strcpy@plt+0x9c76>
xor    edx,edx
test   edx,edx
je     8052fc4 <strcpy@plt+0x9cb4>
mov    eax,DWORD PTR [edx+0x100]
mov    eax,DWORD PTR [eax+0x104]
mov    DWORD PTR [esi+0x104],eax
mov    eax,DWORD PTR [edx+0x100]
mov    DWORD PTR [eax+0x104],esi
jmp    8052fd5 <strcpy@plt+0x9cc5>
mov    eax,ds:0x8149444
mov    DWORD PTR [esi+0x104],eax
mov    DWORD PTR ds:0x8149444,esi
push   0x0
mov    ecx,DWORD PTR [ebp-0x4]
push   ecx
call   80523f8 <strcpy@plt+0x90e8>
mov    esi,eax
add    esp,0x8
test   esi,esi
jne    8052f43 <strcpy@plt+0x9c33>
mov    esi,DWORD PTR [ebp-0x8]
test   esi,esi
je     80530a8 <strcpy@plt+0x9d98>
mov    ecx,DWORD PTR [esi+0x104]
mov    DWORD PTR [ebp-0xc],ecx
mov    ebx,DWORD PTR [ebp-0x8]
mov    edi,DWORD PTR [ecx+0x1c4]
test   ebx,ebx
je     805309d <strcpy@plt+0x9d8d>
cmp    DWORD PTR [ebx+0x1c0],edi
jne    8053020 <strcpy@plt+0x9d10>
mov    edx,ebx
jmp    8053063 <strcpy@plt+0x9d53>
mov    esi,esi
push   edi
push   DWORD PTR [ebx+0x100]
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
je     8053054 <strcpy@plt+0x9d44>
mov    edx,eax
jmp    805305a <strcpy@plt+0x9d4a>
mov    edx,eax
jmp    805305a <strcpy@plt+0x9d4a>
nop
lea    esi,[esi+eiz*1+0x0]
push   edi
push   eax
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
jne    8053037 <strcpy@plt+0x9d27>
mov    ebx,DWORD PTR [ebx+0x104]
test   ebx,ebx
jne    8053040 <strcpy@plt+0x9d30>
xor    edx,edx
mov    ecx,DWORD PTR [esi+0x104]
mov    DWORD PTR [ebp-0xc],ecx
test   edx,edx
je     805309d <strcpy@plt+0x9d8d>
mov    ecx,DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ecx+0x104]
mov    DWORD PTR [esi+0x104],eax
mov    eax,DWORD PTR [edx+0x100]
mov    eax,DWORD PTR [eax+0x104]
mov    DWORD PTR [ecx+0x104],eax
mov    eax,DWORD PTR [edx+0x100]
mov    DWORD PTR [eax+0x104],esi
mov    esi,DWORD PTR [esi+0x104]
mov    DWORD PTR [ebp-0xc],esi
mov    esi,DWORD PTR [ebp-0xc]
test   esi,esi
jne    8052ff8 <strcpy@plt+0x9ce8>
mov    ecx,DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ecx]
test   eax,eax
je     80530ba <strcpy@plt+0x9daa>
push   eax
call   80491b0 <closedir@plt>
add    esp,0x4
cmp    DWORD PTR [ebp-0x4],0x0
je     80530c9 <strcpy@plt+0x9db9>
mov    ecx,DWORD PTR [ebp-0x4]
push   ecx
call   8049260 <free@plt>
mov    eax,0x8149340
lea    esp,[ebp-0x18]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x4
push   edi
push   esi
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
xor    edi,edi
mov    DWORD PTR [ebp-0x4],0x0
test   ah,0x4
je     8053105 <strcpy@plt+0x9df5>
push   DWORD PTR [ebp+0x10]
push   DWORD PTR [ebp+0xc]
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    esi,eax
add    esp,0xc
jmp    8053130 <strcpy@plt+0x9e20>
test   ah,0xb
je     8053120 <strcpy@plt+0x9e10>
push   DWORD PTR [ebp+0xc]
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    esi,eax
add    esp,0x8
jmp    8053130 <strcpy@plt+0x9e20>
lea    esi,[esi+0x0]
push   eax
call   8051d90 <strcpy@plt+0x8a80>
mov    esi,eax
add    esp,0x4
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp-0x4]
inc    ebx
lea    eax,[ebx*4+0x0]
push   eax
push   edi
call   80541dc <strcpy@plt+0xaecc>
mov    edi,eax
push   0x0
push   esi
call   80523f8 <strcpy@plt+0x90e8>
mov    edx,DWORD PTR [ebp-0x4]
mov    DWORD PTR [edi+edx*4],eax
add    esp,0x10
mov    DWORD PTR [ebp-0x4],ebx
test   eax,eax
jne    8053130 <strcpy@plt+0x9e20>
mov    eax,DWORD PTR [esi]
test   eax,eax
je     805316b <strcpy@plt+0x9e5b>
push   eax
call   80491b0 <closedir@plt>
add    esp,0x4
test   esi,esi
je     8053175 <strcpy@plt+0x9e65>
push   esi
call   8049260 <free@plt>
mov    eax,edi
lea    esp,[ebp-0x10]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    eax,DWORD PTR [ebx]
test   eax,eax
je     8053196 <strcpy@plt+0x9e86>
push   eax
call   80491b0 <closedir@plt>
add    esp,0x4
test   ebx,ebx
je     80531a0 <strcpy@plt+0x9e90>
push   ebx
call   8049260 <free@plt>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
je     80531e1 <strcpy@plt+0x9ed1>
mov    eax,DWORD PTR [ebx+0x10c]
test   eax,eax
je     80531c7 <strcpy@plt+0x9eb7>
push   DWORD PTR [eax]
call   8049260 <free@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebx+0x108]
test   eax,eax
je     80531db <strcpy@plt+0x9ecb>
push   DWORD PTR [eax]
call   8049260 <free@plt>
add    esp,0x4
push   ebx
call   8049260 <free@plt>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x8]
mov    esi,edi
cmp    DWORD PTR [edi],0x0
je     8053237 <strcpy@plt+0x9f27>
mov    ebx,DWORD PTR [esi]
test   ebx,ebx
je     805322f <strcpy@plt+0x9f1f>
mov    eax,DWORD PTR [ebx+0x10c]
test   eax,eax
je     8053212 <strcpy@plt+0x9f02>
push   DWORD PTR [eax]
call   8049260 <free@plt>
add    esp,0x4
mov    eax,DWORD PTR [ebx+0x108]
test   eax,eax
je     8053226 <strcpy@plt+0x9f16>
push   DWORD PTR [eax]
call   8049260 <free@plt>
add    esp,0x4
push   ebx
call   8049260 <free@plt>
add    esp,0x4
add    esi,0x4
cmp    DWORD PTR [esi],0x0
jne    80531f8 <strcpy@plt+0x9ee8>
push   edi
call   8049260 <free@plt>
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   edi
push   esi
push   ebx
mov    edi,DWORD PTR [ebp+0x10]
push   DWORD PTR [ebp+0xc]
push   DWORD PTR [ebp+0x8]
push   0x805ac49
push   0x8148ba0
call   80492c0 <sprintf@plt>
push   0x0
push   0x0
push   0x8148ba0
call   80491e0 <open@plt>
mov    esi,eax
add    esp,0x1c
cmp    esi,0xffffffff
je     80532ac <strcpy@plt+0x9f9c>
mov    eax,DWORD PTR [ebp+0x14]
dec    eax
push   eax
push   edi
push   esi
call   80492f0 <read@plt>
mov    ebx,eax
add    esp,0xc
test   ebx,ebx
jg     80532a0 <strcpy@plt+0x9f90>
mov    ebx,0xffffffff
jmp    80532a4 <strcpy@plt+0x9f94>
lea    esi,[esi+0x0]
mov    BYTE PTR [ebx+edi*1],0x0
push   esi
call   8048f50 <close@plt>
mov    eax,ebx
lea    esp,[ebp-0xc]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
mov    eax,DWORD PTR [ebp+0xc]
lea    edx,[eax+0x94]
push   edx
lea    edx,[eax+0x90]
push   edx
lea    edx,[eax+0x8c]
push   edx
lea    edx,[eax+0x88]
push   edx
lea    edx,[eax+0x84]
push   edx
lea    edx,[eax+0x80]
push   edx
add    eax,0x7c
push   eax
push   0x805ac2d
push   DWORD PTR [ebp+0x8]
call   8049250 <sscanf@plt>
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ecx,DWORD PTR [ebp+0xc]
mov    bl,BYTE PTR [ebp+0x10]
xor    edx,edx
cmp    edx,ecx
jge    805331d <strcpy@plt+0xa00d>
mov    eax,DWORD PTR [ebp+0x8]
nop
lea    esi,[esi+eiz*1+0x0]
cmp    BYTE PTR [eax],0x0
jne    8053317 <strcpy@plt+0xa007>
mov    BYTE PTR [eax],bl
inc    eax
inc    edx
cmp    edx,ecx
jl     8053310 <strcpy@plt+0xa000>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
test   ebx,ebx
je     805336b <strcpy@plt+0xa05b>
cmp    DWORD PTR [ebx+0x1c0],esi
jne    8053340 <strcpy@plt+0xa030>
mov    eax,ebx
jmp    805336d <strcpy@plt+0xa05d>
nop
push   esi
push   DWORD PTR [ebx+0x100]
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
jne    805336d <strcpy@plt+0xa05d>
push   esi
push   eax
call   8053324 <strcpy@plt+0xa014>
add    esp,0x8
test   eax,eax
jne    805336d <strcpy@plt+0xa05d>
mov    ebx,DWORD PTR [ebx+0x104]
test   ebx,ebx
jne    8053353 <strcpy@plt+0xa043>
xor    eax,eax
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x1c
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0x1c],0x0
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x10],0x0
cmp    DWORD PTR ds:0x805c3e0,0xffffffff
jne    80533f0 <strcpy@plt+0xa0e0>
push   0x0
push   0x805aca0
call   80491e0 <open@plt>
mov    ds:0x805c3e0,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    80533f0 <strcpy@plt+0xa0e0>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3e0
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
mov    esi,esi
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3e0
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3e0
call   80492f0 <read@plt>
mov    edx,eax
mov    DWORD PTR ds:0x8149540,edx
add    esp,0x18
test   edx,edx
jl     8053460 <strcpy@plt+0xa150>
mov    eax,0x8149640
mov    BYTE PTR [edx+eax*1],0x0
lea    edx,[ebp-0x14]
push   edx
lea    edx,[ebp-0x1c]
push   edx
push   0x805ad6d
push   eax
call   8049250 <sscanf@plt>
add    esp,0x10
cmp    eax,0x1
jg     8053483 <strcpy@plt+0xa173>
push   0x805ad75
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
xor    eax,eax
jmp    80534af <strcpy@plt+0xa19f>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x805aca0
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3e0
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3e0,0xffffffff
xor    eax,eax
jmp    80534af <strcpy@plt+0xa19f>
test   ebx,ebx
je     805348c <strcpy@plt+0xa17c>
fld    QWORD PTR [ebp-0x1c]
fstp   QWORD PTR [ebx]
test   esi,esi
je     8053495 <strcpy@plt+0xa185>
fld    QWORD PTR [ebp-0x14]
fstp   QWORD PTR [esi]
fld    QWORD PTR [ebp-0x1c]
fnstcw WORD PTR [ebp-0x4]
mov    ecx,DWORD PTR [ebp-0x4]
mov    ch,0xc
mov    DWORD PTR [ebp-0xc],ecx
fldcw  WORD PTR [ebp-0xc]
fistp  DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ebp-0xc]
fldcw  WORD PTR [ebp-0x4]
lea    esp,[ebp-0x24]
pop    ebx
pop    esi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x34
push   edi
push   esi
push   ebx
mov    DWORD PTR [ebp-0x18],0x0
jmp    80534d0 <strcpy@plt+0xa1c0>
fstp   st(0)
fstp   st(0)
mov    esi,esi
cmp    DWORD PTR ds:0x805c3e0,0xffffffff
jne    8053514 <strcpy@plt+0xa204>
push   0x0
push   0x805aca0
call   80491e0 <open@plt>
mov    ds:0x805c3e0,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8053514 <strcpy@plt+0xa204>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3e0
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3e0
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3e0
call   80492f0 <read@plt>
mov    ds:0x8149544,eax
add    esp,0x18
test   eax,eax
jl     80538a0 <strcpy@plt+0xa590>
mov    BYTE PTR [eax+0x8149640],0x0
lea    eax,[ebp-0x14]
push   eax
push   0x805ad8f
push   0x8149640
call   8049250 <sscanf@plt>
add    esp,0xc
cmp    DWORD PTR ds:0x805c3dc,0xffffffff
jne    80535b0 <strcpy@plt+0xa2a0>
push   0x0
push   0x805ad93
call   80491e0 <open@plt>
mov    ds:0x805c3dc,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    80535b0 <strcpy@plt+0xa2a0>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3dc
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3dc
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3dc
call   80492f0 <read@plt>
mov    ds:0x8149548,eax
add    esp,0x18
test   eax,eax
jl     80538c1 <strcpy@plt+0xa5b1>
mov    BYTE PTR [eax+0x8149640],0x0
lea    eax,[ebp-0x18]
push   eax
lea    ecx,[ebp-0x1c]
mov    DWORD PTR [ebp-0x34],ecx
push   ecx
lea    edi,[ebp-0x20]
push   edi
lea    esi,[ebp-0x24]
push   esi
lea    ebx,[ebp-0x28]
push   ebx
push   0x805ad9e
push   0x8149640
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR [ebp-0x34]
push   ecx
push   edi
push   esi
push   ebx
push   0x805adb5
mov    eax,DWORD PTR [ebp-0x18]
add    eax,0x8149640
push   eax
call   8049250 <sscanf@plt>
add    esp,0x34
cmp    DWORD PTR ds:0x805c3e0,0xffffffff
jne    8053672 <strcpy@plt+0xa362>
push   0x0
push   0x805aca0
call   80491e0 <open@plt>
mov    ds:0x805c3e0,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8053672 <strcpy@plt+0xa362>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3e0
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3e0
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3e0
call   80492f0 <read@plt>
mov    ds:0x814954c,eax
add    esp,0x18
test   eax,eax
jl     80538a0 <strcpy@plt+0xa590>
mov    BYTE PTR [eax+0x8149640],0x0
lea    eax,[ebp-0x30]
push   eax
push   0x805ad8f
push   0x8149640
call   8049250 <sscanf@plt>
fld    QWORD PTR [ebp-0x30]
fld    QWORD PTR [ebp-0x14]
fld    st(1)
fsub   st,st(1)
fld    QWORD PTR ds:0x805add0
fmulp  st(1),st
fdiv   st,st(1)
add    esp,0xc
fnstcw WORD PTR [ebp-0x4]
mov    ecx,DWORD PTR [ebp-0x4]
mov    ch,0xc
mov    DWORD PTR [ebp-0xc],ecx
fldcw  WORD PTR [ebp-0xc]
fistp  DWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ebp-0xc]
fldcw  WORD PTR [ebp-0x4]
test   eax,eax
jne    80534ca <strcpy@plt+0xa1ba>
mov    eax,DWORD PTR [ebp-0x24]
faddp  st(1),st
add    eax,DWORD PTR [ebp-0x28]
add    eax,DWORD PTR [ebp-0x20]
add    eax,DWORD PTR [ebp-0x1c]
xor    edx,edx
fld    QWORD PTR ds:0x805add8
fmulp  st(1),st
push   edx
push   eax
fild   QWORD PTR [esp]
add    esp,0x8
fdivrp st(1),st
fnstcw WORD PTR [ebp-0x4]
mov    ecx,DWORD PTR [ebp-0x4]
mov    ch,0xc
mov    DWORD PTR [ebp-0xc],ecx
fldcw  WORD PTR [ebp-0xc]
fistp  QWORD PTR [ebp-0xc]
mov    eax,DWORD PTR [ebp-0xc]
mov    edx,DWORD PTR [ebp-0x8]
fldcw  WORD PTR [ebp-0x4]
cmp    eax,0xcc
ja     80537a0 <strcpy@plt+0xa490>
cmp    eax,0xc3
jae    8053841 <strcpy@plt+0xa531>
cmp    eax,0x3e
ja     8053770 <strcpy@plt+0xa460>
cmp    eax,0x3a
jae    8053823 <strcpy@plt+0xa513>
cmp    eax,0x34
ja     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x30
jb     80538e2 <strcpy@plt+0xa5d2>
jmp    8053814 <strcpy@plt+0xa504>
lea    esi,[esi+eiz*1+0x0]
cmp    eax,0x5f
jb     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x69
jbe    80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x84
ja     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x7c
jb     80538e2 <strcpy@plt+0xa5d2>
jmp    8053832 <strcpy@plt+0xa522>
nop
lea    esi,[esi+eiz*1+0x0]
cmp    eax,0x328
ja     80537e3 <strcpy@plt+0xa4d3>
cmp    eax,0x316
jae    8053870 <strcpy@plt+0xa560>
cmp    eax,0xfd
jb     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x104
jbe    8053850 <strcpy@plt+0xa540>
cmp    eax,0x198
ja     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x189
jb     80538e2 <strcpy@plt+0xa5d2>
jmp    8053860 <strcpy@plt+0xa550>
cmp    eax,0x3de
jb     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x3f2
jbe    8053880 <strcpy@plt+0xa570>
cmp    eax,0x40b
ja     80538e2 <strcpy@plt+0xa5d2>
cmp    eax,0x3f7
jb     80538e2 <strcpy@plt+0xa5d2>
jmp    8053890 <strcpy@plt+0xa580>
mov    DWORD PTR ds:0x8169d48,0x32
jmp    80538ec <strcpy@plt+0xa5dc>
mov    DWORD PTR ds:0x8169d48,0x3c
jmp    80538ec <strcpy@plt+0xa5dc>
mov    DWORD PTR ds:0x8169d48,0x80
jmp    80538ec <strcpy@plt+0xa5dc>
mov    DWORD PTR ds:0x8169d48,0xc8
jmp    80538ec <strcpy@plt+0xa5dc>
mov    DWORD PTR ds:0x8169d48,0x100
jmp    80538ec <strcpy@plt+0xa5dc>
nop
mov    DWORD PTR ds:0x8169d48,0x190
jmp    80538ec <strcpy@plt+0xa5dc>
nop
mov    DWORD PTR ds:0x8169d48,0x320
jmp    80538ec <strcpy@plt+0xa5dc>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8169d48,0x3e8
jmp    80538ec <strcpy@plt+0xa5dc>
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR ds:0x8169d48,0x400
jmp    80538ec <strcpy@plt+0xa5dc>
lea    esi,[esi+eiz*1+0x0]
push   0x805aca0
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3e0
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3e0,0xffffffff
jmp    80538ec <strcpy@plt+0xa5dc>
push   0x805ad93
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3dc
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3dc,0xffffffff
jmp    80538ec <strcpy@plt+0xa5dc>
mov    DWORD PTR ds:0x8169d48,0x64
xor    eax,eax
lea    esp,[ebp-0x40]
pop    ebx
pop    esi
pop    edi
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0x10
push   edi
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
cmp    DWORD PTR ds:0x805c3dc,0xffffffff
jne    8053950 <strcpy@plt+0xa640>
push   0x0
push   0x805ad93
call   80491e0 <open@plt>
mov    ds:0x805c3dc,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8053950 <strcpy@plt+0xa640>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3dc
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
nop
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3dc
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3dc
call   80492f0 <read@plt>
mov    ds:0x8149560,eax
add    esp,0x18
test   eax,eax
jge    80539a4 <strcpy@plt+0xa694>
push   0x805ad93
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3dc
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3dc,0xffffffff
jmp    8053a32 <strcpy@plt+0xa722>
mov    edx,0x8149640
mov    BYTE PTR [eax+edx*1],0x0
lea    eax,[ebp-0x4]
push   eax
lea    eax,[ebp-0x8]
push   eax
lea    eax,[ebp-0xc]
push   eax
lea    eax,[ebp-0x10]
push   eax
push   0x805ade0
push   edx
call   8049250 <sscanf@plt>
cmp    DWORD PTR [ebp+0x8],0x0
je     80539dd <strcpy@plt+0xa6cd>
mov    eax,ds:0x8149550
mov    ebx,DWORD PTR [ebp-0x10]
sub    ebx,eax
mov    ecx,DWORD PTR [ebp+0x8]
mov    DWORD PTR [ecx],ebx
test   esi,esi
je     80539ed <strcpy@plt+0xa6dd>
mov    eax,ds:0x8149554
mov    ecx,DWORD PTR [ebp-0xc]
sub    ecx,eax
mov    DWORD PTR [esi],ecx
test   edi,edi
je     80539fd <strcpy@plt+0xa6ed>
mov    eax,ds:0x8149558
mov    ebx,DWORD PTR [ebp-0x8]
sub    ebx,eax
mov    DWORD PTR [edi],ebx
cmp    DWORD PTR [ebp+0x14],0x0
je     8053a12 <strcpy@plt+0xa702>
mov    eax,ds:0x814955c
mov    ebx,DWORD PTR [ebp-0x4]
sub    ebx,eax
mov    ecx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ecx],ebx
mov    eax,DWORD PTR [ebp-0x10]
mov    ds:0x8149550,eax
mov    eax,DWORD PTR [ebp-0xc]
mov    ds:0x8149554,eax
mov    eax,DWORD PTR [ebp-0x8]
mov    ds:0x8149558,eax
mov    eax,DWORD PTR [ebp-0x4]
mov    ds:0x814955c,eax
xor    eax,eax
lea    esp,[ebp-0x1c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
push   ebp
mov    ebp,esp
sub    esp,0x18
push   edi
push   esi
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
mov    esi,DWORD PTR [ebp+0xc]
mov    edi,DWORD PTR [ebp+0x10]
mov    DWORD PTR [ebp-0x18],0x0
mov    DWORD PTR [ebp-0x14],0x0
mov    DWORD PTR [ebp-0x10],0x0
mov    DWORD PTR [ebp-0xc],0x0
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0x4],0x0
cmp    DWORD PTR ds:0x805c3e4,0xffffffff
jne    8053ac0 <strcpy@plt+0xa7b0>
push   0x0
push   0x805adf4
call   80491e0 <open@plt>
mov    ds:0x805c3e4,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8053ac0 <strcpy@plt+0xa7b0>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3e4
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3e4
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3e4
call   80492f0 <read@plt>
mov    ds:0x8149564,eax
add    esp,0x18
test   eax,eax
jl     8053b30 <strcpy@plt+0xa820>
mov    edx,0x8149640
mov    BYTE PTR [eax+edx*1],0x0
lea    eax,[ebp-0x8]
push   eax
lea    eax,[ebp-0x10]
push   eax
lea    eax,[ebp-0x18]
push   eax
push   0x805ae02
push   edx
call   8049250 <sscanf@plt>
add    esp,0x14
cmp    eax,0x2
jg     8053b53 <strcpy@plt+0xa843>
push   0x805ae0e
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
call   8049220 <exit@plt>
nop
push   0x805adf4
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3e4
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3e4,0xffffffff
xor    eax,eax
jmp    8053b73 <strcpy@plt+0xa863>
test   ebx,ebx
je     8053b5c <strcpy@plt+0xa84c>
fld    QWORD PTR [ebp-0x18]
fstp   QWORD PTR [ebx]
test   esi,esi
je     8053b65 <strcpy@plt+0xa855>
fld    QWORD PTR [ebp-0x10]
fstp   QWORD PTR [esi]
test   edi,edi
je     8053b6e <strcpy@plt+0xa85e>
fld    QWORD PTR [ebp-0x8]
fstp   QWORD PTR [edi]
mov    eax,0x1
lea    esp,[ebp-0x24]
pop    ebx
pop    esi
pop    edi
leave  
ret    
nop
push   ebp
mov    ebp,esp
sub    esp,0x20
push   edi
push   esi
push   ebx
cmp    DWORD PTR ds:0x805c3e8,0xffffffff
jne    8053bd0 <strcpy@plt+0xa8c0>
push   0x0
push   0x805ae29
call   80491e0 <open@plt>
mov    ds:0x805c3e8,eax
add    esp,0x8
cmp    eax,0xffffffff
jne    8053bd0 <strcpy@plt+0xa8c0>
push   0x805acc0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   DWORD PTR ds:0x805c3e8
call   8048f50 <close@plt>
push   0x1
call   8049290 <_exit@plt>
lea    esi,[esi+eiz*1+0x0]
push   0x0
push   0x0
push   DWORD PTR ds:0x805c3e8
call   8049140 <lseek@plt>
push   0x3ff
push   0x8149640
push   DWORD PTR ds:0x805c3e8
call   80492f0 <read@plt>
mov    ds:0x8149628,eax
add    esp,0x18
test   eax,eax
jge    8053c26 <strcpy@plt+0xa916>
push   0x805ae29
call   8048f60 <perror@plt>
push   DWORD PTR ds:0x805c3e8
call   8048f50 <close@plt>
mov    DWORD PTR ds:0x805c3e8,0xffffffff
xor    eax,eax
jmp    8054051 <strcpy@plt+0xad41>
mov    BYTE PTR [eax+0x8149640],0x0
cmp    DWORD PTR ds:0x8149568,0x0
jne    8053c5e <strcpy@plt+0xa94e>
mov    ebx,0x8149568
mov    DWORD PTR [ebp-0x1c],0x2
mov    ecx,0x81495f0
mov    edx,0x8
lea    esi,[esi+eiz*1+0x0]
mov    DWORD PTR [ebx+edx*1],ecx
add    ecx,0xffffffc8
add    edx,0xfffffffc
dec    DWORD PTR [ebp-0x1c]
jns    8053c50 <strcpy@plt+0xa940>
mov    ebx,0x8149640
mov    DWORD PTR [ebp-0x1c],0x0
mov    ecx,0x8149568
nop
mov    DWORD PTR [ebp-0x20],0x0
mov    esi,DWORD PTR [ebp-0x1c]
lea    edx,[esi*4+0x0]
mov    eax,DWORD PTR [edx+ecx*1]
mov    edi,DWORD PTR [ebp-0x20]
mov    DWORD PTR [eax+edi*8],0x0
mov    DWORD PTR [eax+edi*8+0x4],0x0
inc    edi
mov    DWORD PTR [ebp-0x20],edi
cmp    edi,0x6
jle    8053c81 <strcpy@plt+0xa971>
inc    DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [ebp-0x1c],0x2
jle    8053c70 <strcpy@plt+0xa960>
cmp    DWORD PTR ds:0x805c404,0x1ffff
jg     8053d56 <strcpy@plt+0xaa46>
mov    DWORD PTR [ebp-0x1c],0x0
mov    dl,BYTE PTR ds:0x8149640
test   dl,dl
je     805404c <strcpy@plt+0xad3c>
movsx  eax,BYTE PTR [ebx]
mov    ecx,DWORD PTR ds:0x805c608
test   BYTE PTR [ecx+eax*2+0x1],0x8
jne    8053cf1 <strcpy@plt+0xa9e1>
lea    esi,[esi+0x0]
inc    ebx
mov    dl,BYTE PTR [ebx]
test   dl,dl
je     8053cf1 <strcpy@plt+0xa9e1>
movsx  eax,dl
test   BYTE PTR [ecx+eax*2+0x1],0x8
je     8053ce0 <strcpy@plt+0xa9d0>
mov    DWORD PTR [ebp-0x20],0x0
mov    esi,DWORD PTR [ebp-0x1c]
shl    esi,0x2
mov    DWORD PTR [ebp-0x14],esi
test   dl,dl
je     8053d44 <strcpy@plt+0xaa34>
lea    eax,[ebp-0x10]
push   eax
mov    edi,0x8149568
mov    esi,DWORD PTR [ebp-0x14]
mov    eax,DWORD PTR [esi+edi*1]
mov    edi,DWORD PTR [ebp-0x20]
lea    eax,[eax+edi*8]
push   eax
push   0x805ae37
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,eax
add    ebx,DWORD PTR [ebp-0x10]
mov    al,BYTE PTR [ebx]
mov    dl,al
add    esp,0x10
cmp    dl,0xa
je     8053d44 <strcpy@plt+0xaa34>
test   ecx,ecx
jle    8053d44 <strcpy@plt+0xaa34>
inc    edi
mov    DWORD PTR [ebp-0x20],edi
cmp    edi,0x6
jle    8053d01 <strcpy@plt+0xa9f1>
inc    DWORD PTR [ebp-0x1c]
cmp    DWORD PTR [ebp-0x1c],0x2
jg     805404c <strcpy@plt+0xad3c>
jmp    8053cc5 <strcpy@plt+0xa9b5>
cmp    BYTE PTR ds:0x8149640,0x0
je     8054020 <strcpy@plt+0xad10>
lea    eax,[ebp-0x10]
push   eax
lea    esi,[ebp-0xc]
mov    DWORD PTR [ebp-0x18],esi
push   esi
push   0x805ae3c
push   ebx
call   8049250 <sscanf@plt>
add    esp,0x10
mov    DWORD PTR [ebp-0x20],esi
mov    eax,DWORD PTR [ebp-0x18]
mov    edx,0x805ae43
mov    ecx,0xa
mov    edi,edx
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053de0 <strcpy@plt+0xaad0>
add    ebx,DWORD PTR [ebp-0x10]
push   DWORD PTR ds:0x8149568
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    eax,ds:0x8149568
mov    edx,DWORD PTR [eax]
mov    ecx,DWORD PTR [eax+0x4]
shld   ecx,edx,0xa
shl    edx,0xa
mov    DWORD PTR [eax],edx
mov    DWORD PTR [eax+0x4],ecx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
lea    esi,[esi+0x0]
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053dd0 <strcpy@plt+0xaac0>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+eiz*1+0x0]
mov    esi,eax
mov    edi,0x805ae52
mov    ecx,0x9
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053e40 <strcpy@plt+0xab30>
add    ebx,DWORD PTR [ebp-0x10]
mov    eax,ds:0x8149568
add    eax,0x10
push   eax
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR ds:0x8149568
mov    eax,DWORD PTR [ecx+0x10]
mov    edx,DWORD PTR [ecx+0x14]
shld   edx,eax,0xa
shl    eax,0xa
mov    DWORD PTR [ecx+0x10],eax
mov    DWORD PTR [ecx+0x14],edx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053e31 <strcpy@plt+0xab21>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+0x0]
mov    esi,eax
mov    edi,0x805ae5b
mov    ecx,0xb
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053ea0 <strcpy@plt+0xab90>
add    ebx,DWORD PTR [ebp-0x10]
mov    eax,ds:0x8149568
add    eax,0x18
push   eax
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR ds:0x8149568
mov    eax,DWORD PTR [ecx+0x18]
mov    edx,DWORD PTR [ecx+0x1c]
shld   edx,eax,0xa
shl    eax,0xa
mov    DWORD PTR [ecx+0x18],eax
mov    DWORD PTR [ecx+0x1c],edx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053e91 <strcpy@plt+0xab81>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+0x0]
mov    esi,eax
mov    edi,0x805ae66
mov    ecx,0x9
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053f00 <strcpy@plt+0xabf0>
add    ebx,DWORD PTR [ebp-0x10]
mov    eax,ds:0x8149568
add    eax,0x20
push   eax
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR ds:0x8149568
mov    eax,DWORD PTR [ecx+0x20]
mov    edx,DWORD PTR [ecx+0x24]
shld   edx,eax,0xa
shl    eax,0xa
mov    DWORD PTR [ecx+0x20],eax
mov    DWORD PTR [ecx+0x24],edx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053ef1 <strcpy@plt+0xabe1>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+0x0]
mov    esi,eax
mov    edi,0x805ae6f
mov    ecx,0x8
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053f60 <strcpy@plt+0xac50>
add    ebx,DWORD PTR [ebp-0x10]
mov    eax,ds:0x8149568
add    eax,0x28
push   eax
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR ds:0x8149568
mov    eax,DWORD PTR [ecx+0x28]
mov    edx,DWORD PTR [ecx+0x2c]
shld   edx,eax,0xa
shl    eax,0xa
mov    DWORD PTR [ecx+0x28],eax
mov    DWORD PTR [ecx+0x2c],edx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053f51 <strcpy@plt+0xac41>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+0x0]
mov    esi,eax
mov    edi,0x805ae77
mov    ecx,0xb
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8053fb0 <strcpy@plt+0xaca0>
add    ebx,DWORD PTR [ebp-0x10]
push   DWORD PTR ds:0x814956c
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    eax,ds:0x814956c
mov    edx,DWORD PTR [eax]
mov    ecx,DWORD PTR [eax+0x4]
shld   ecx,edx,0xa
shl    edx,0xa
mov    DWORD PTR [eax],edx
mov    DWORD PTR [eax+0x4],ecx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8053fa7 <strcpy@plt+0xac97>
jmp    8054017 <strcpy@plt+0xad07>
mov    esi,DWORD PTR [ebp-0x18]
mov    edi,0x805ae82
mov    ecx,0xa
cld    
test   al,0x0
repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
jne    8054010 <strcpy@plt+0xad00>
add    ebx,DWORD PTR [ebp-0x10]
mov    eax,ds:0x814956c
add    eax,0x10
push   eax
push   0x805ae4d
push   ebx
call   8049250 <sscanf@plt>
mov    ecx,DWORD PTR ds:0x814956c
mov    eax,DWORD PTR [ecx+0x10]
mov    edx,DWORD PTR [ecx+0x14]
shld   edx,eax,0xa
shl    eax,0xa
mov    DWORD PTR [ecx+0x10],eax
mov    DWORD PTR [ecx+0x14],edx
add    esp,0xc
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
je     8054017 <strcpy@plt+0xad07>
mov    esi,esi
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8054000 <strcpy@plt+0xacf0>
jmp    8054017 <strcpy@plt+0xad07>
lea    esi,[esi+eiz*1+0x0]
mov    al,BYTE PTR [ebx]
inc    ebx
cmp    al,0xa
jne    8054010 <strcpy@plt+0xad00>
cmp    BYTE PTR [ebx],0x0
jne    8053d63 <strcpy@plt+0xaa53>
mov    eax,ds:0x814956c
mov    esi,DWORD PTR [eax]
mov    edi,DWORD PTR [eax+0x4]
sub    esi,DWORD PTR [eax+0x10]
sbb    edi,DWORD PTR [eax+0x14]
mov    DWORD PTR [eax+0x8],esi
mov    DWORD PTR [eax+0xc],edi
mov    eax,ds:0x8149568
mov    esi,DWORD PTR [eax]
mov    edi,DWORD PTR [eax+0x4]
sub    esi,DWORD PTR [eax+0x10]
sbb    edi,DWORD PTR [eax+0x14]
mov    DWORD PTR [eax+0x8],esi
mov    DWORD PTR [eax+0xc],edi
mov    eax,0x8149568
lea    esp,[ebp-0x2c]
pop    ebx
pop    esi
pop    edi
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
call   8053b7c <strcpy@plt+0xa86c>
test   eax,eax
je     8054070 <strcpy@plt+0xad60>
mov    eax,DWORD PTR [eax]
mov    eax,DWORD PTR [eax]
jmp    8054075 <strcpy@plt+0xad65>
mov    esi,esi
mov    eax,0xffffffff
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   0x805c3ec
push   0x805aea0
push   DWORD PTR ds:0x805c600
call   8048f70 <fprintf@plt>
leave  
ret    
mov    esi,esi
push   ebp
mov    ebp,esp
sub    esp,0xc
push   ebx
mov    DWORD PTR [ebp-0xc],0x0
mov    DWORD PTR [ebp-0x8],0x0
mov    DWORD PTR [ebp-0x4],0x0
cmp    DWORD PTR ds:0x805c404,0x0
jne    8054149 <strcpy@plt+0xae39>
push   0x8149a40
call   80490b0 <uname@plt>
add    esp,0x4
cmp    eax,0xffffffff
jne    80540e0 <strcpy@plt+0xadd0>
push   0x1
call   8049220 <exit@plt>
mov    esi,esi
lea    eax,[ebp-0x4]
push   eax
lea    eax,[ebp-0x8]
push   eax
lea    eax,[ebp-0xc]
push   eax
push   0x805aea4
push   0x8149ac2
call   8049250 <sscanf@plt>
add    esp,0x14
cmp    eax,0x2
jg     8054133 <strcpy@plt+0xae23>
mov    ebx,DWORD PTR [ebp-0xc]
mov    edx,ebx
shl    edx,0x10
mov    ecx,DWORD PTR [ebp-0x8]
mov    eax,ecx
shl    eax,0x8
add    edx,eax
mov    eax,DWORD PTR [ebp-0x4]
add    edx,eax
push   edx
push   eax
push   ecx
push   ebx
push   0x8149ac2
push   0x805aec0
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
mov    eax,DWORD PTR [ebp-0xc]
shl    eax,0x10
mov    edx,DWORD PTR [ebp-0x8]
shl    edx,0x8
add    eax,edx
add    eax,DWORD PTR [ebp-0x4]
mov    ds:0x805c404,eax
mov    ebx,DWORD PTR [ebp-0x10]
leave  
ret    
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    eax,DWORD PTR [ebp+0x8]
mov    ebx,DWORD PTR [ebp+0xc]
test   eax,eax
je     8054167 <strcpy@plt+0xae57>
push   eax
call   8049260 <free@plt>
add    esp,0x4
push   ebx
push   0x1
call   8049240 <calloc@plt>
add    esp,0x8
test   eax,eax
jne    8054190 <strcpy@plt+0xae80>
push   ebx
push   0x805af20
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x1
call   8049220 <exit@plt>
mov    esi,esi
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0x8]
test   ebx,ebx
jne    80541a8 <strcpy@plt+0xae98>
mov    ebx,0x1
push   ebx
call   8048fc0 <malloc@plt>
add    esp,0x4
test   eax,eax
jne    80541d4 <strcpy@plt+0xaec4>
push   ebx
push   0x805af46
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x0
call   8048f60 <perror@plt>
push   0x1
call   8049220 <exit@plt>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
lea    esi,[esi+0x0]
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,DWORD PTR [ebp+0xc]
test   ebx,ebx
jne    80541ec <strcpy@plt+0xaedc>
mov    ebx,0x1
push   ebx
push   DWORD PTR [ebp+0x8]
call   8049100 <realloc@plt>
add    esp,0x8
test   eax,eax
jne    8054220 <strcpy@plt+0xaf10>
push   ebx
push   0x805af61
push   DWORD PTR ds:0x805c604
call   8048f70 <fprintf@plt>
push   0x0
call   8048f60 <perror@plt>
push   0x1
call   8049220 <exit@plt>
nop
lea    esi,[esi+eiz*1+0x0]
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,esi
and    eax,0xf
shl    eax,0x2
mov    ebx,eax
add    ebx,0x8149be0
cmp    DWORD PTR [eax+0x8149be0],0x0
je     8054260 <strcpy@plt+0xaf50>
mov    eax,DWORD PTR [ebx]
cmp    DWORD PTR [eax],esi
je     805429d <strcpy@plt+0xaf8d>
lea    ebx,[eax+0x14]
cmp    DWORD PTR [eax+0x14],0x0
jne    8054251 <strcpy@plt+0xaf41>
push   0x18
call   8054198 <strcpy@plt+0xae88>
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [eax],esi
push   esi
call   8048fa0 <getpwuid@plt>
add    esp,0x8
test   eax,eax
jne    8054280 <strcpy@plt+0xaf70>
push   esi
push   0x805af7e
jmp    8054287 <strcpy@plt+0xaf77>
push   DWORD PTR [eax]
push   0x805af82
mov    eax,DWORD PTR [ebx]
add    eax,0x4
push   eax
call   80492c0 <sprintf@plt>
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [eax+0x14],0x0
mov    eax,DWORD PTR [ebx]
add    eax,0x4
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
nop
push   ebp
mov    ebp,esp
push   esi
push   ebx
mov    esi,DWORD PTR [ebp+0x8]
mov    eax,esi
and    eax,0xf
shl    eax,0x2
mov    ebx,eax
add    ebx,0x8149c20
cmp    DWORD PTR [eax+0x8149c20],0x0
je     80542df <strcpy@plt+0xafcf>
lea    esi,[esi+eiz*1+0x0]
mov    eax,DWORD PTR [ebx]
cmp    DWORD PTR [eax],esi
je     805431d <strcpy@plt+0xb00d>
lea    ebx,[eax+0x14]
cmp    DWORD PTR [eax+0x14],0x0
jne    80542d0 <strcpy@plt+0xafc0>
push   0x18
call   8048fc0 <malloc@plt>
mov    DWORD PTR [ebx],eax
mov    DWORD PTR [eax],esi
push   esi
call   8048fb0 <getgrgid@plt>
add    esp,0x8
test   eax,eax
jne    8054300 <strcpy@plt+0xaff0>
push   esi
push   0x805af7e
jmp    8054307 <strcpy@plt+0xaff7>
nop
push   DWORD PTR [eax]
push   0x805af82
mov    eax,DWORD PTR [ebx]
add    eax,0x4
push   eax
call   80492c0 <sprintf@plt>
mov    eax,DWORD PTR [ebx]
mov    DWORD PTR [eax+0x14],0x0
mov    eax,DWORD PTR [ebx]
add    eax,0x4
lea    esp,[ebp-0x8]
pop    ebx
pop    esi
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
sub    esp,0x44
push   edi
push   esi
mov    DWORD PTR [ebp-0x4],0x0
mov    eax,DWORD PTR [ebp+0x8]
mov    edx,DWORD PTR [ebp+0xc]
mov    DWORD PTR [ebp-0xc],eax
mov    DWORD PTR [ebp-0x8],edx
mov    edx,DWORD PTR [ebp+0x10]
mov    ecx,DWORD PTR [ebp+0x14]
mov    DWORD PTR [ebp-0x14],edx
mov    DWORD PTR [ebp-0x10],ecx
cmp    DWORD PTR [ebp-0x8],0x0
jge    8054387 <__divdi3@@Base+0x57>
mov    DWORD PTR [ebp-0x4],0xffffffff
mov    ecx,DWORD PTR [ebp-0xc]
neg    ecx
mov    DWORD PTR [ebp-0x3c],ecx
mov    esi,ecx
mov    eax,DWORD PTR [ebp-0x8]
neg    eax
mov    DWORD PTR [ebp-0x44],eax
test   ecx,ecx
je     805437e <__divdi3@@Base+0x4e>
dec    eax
mov    DWORD PTR [ebp-0x44],eax
mov    edi,DWORD PTR [ebp-0x44]
mov    DWORD PTR [ebp-0xc],esi
mov    DWORD PTR [ebp-0x8],edi
cmp    DWORD PTR [ebp+0x14],0x0
jge    80543b1 <__divdi3@@Base+0x81>
not    DWORD PTR [ebp-0x4]
mov    eax,DWORD PTR [ebp+0x10]
neg    eax
mov    DWORD PTR [ebp-0x1c],eax
mov    esi,DWORD PTR [ebp+0x14]
neg    esi
test   eax,eax
je     80543a2 <__divdi3@@Base+0x72>
dec    esi
mov    DWORD PTR [ebp-0x18],esi
mov    edx,DWORD PTR [ebp-0x1c]
mov    ecx,DWORD PTR [ebp-0x18]
mov    DWORD PTR [ebp-0x14],edx
mov    DWORD PTR [ebp-0x10],ecx
mov    edi,DWORD PTR [ebp-0x14]
mov    ecx,DWORD PTR [ebp-0x10]
mov    DWORD PTR [ebp-0x44],ecx
mov    eax,DWORD PTR [ebp-0xc]
mov    DWORD PTR [ebp-0x20],eax
mov    esi,DWORD PTR [ebp-0x8]
test   ecx,ecx
jne    8054400 <__divdi3@@Base+0xd0>
cmp    edi,esi
jbe    80543d7 <__divdi3@@Base+0xa7>
mov    edx,esi
div    edi
mov    DWORD PTR [ebp-0x3c],eax
jmp    80544a0 <__divdi3@@Base+0x170>
cmp    DWORD PTR [ebp-0x14],0x0
jne    80543e8 <__divdi3@@Base+0xb8>
mov    eax,0x1
xor    edx,edx
div    edi
mov    edi,eax
mov    eax,esi
xor    edx,edx
div    edi
mov    DWORD PTR [ebp-0x44],eax
mov    esi,edx
mov    eax,DWORD PTR [ebp-0x20]
div    edi
mov    DWORD PTR [ebp-0x3c],eax
jmp    80544a7 <__divdi3@@Base+0x177>
cmp    DWORD PTR [ebp-0x44],esi
jbe    8054411 <__divdi3@@Base+0xe1>
mov    DWORD PTR [ebp-0x3c],0x0
jmp    80544a0 <__divdi3@@Base+0x170>
bsr    edx,DWORD PTR [ebp-0x44]
xor    edx,0x1f
mov    DWORD PTR [ebp-0x40],edx
jne    8054430 <__divdi3@@Base+0x100>
cmp    esi,DWORD PTR [ebp-0x44]
ja     8054427 <__divdi3@@Base+0xf7>
cmp    DWORD PTR [ebp-0x20],edi
jb     8054405 <__divdi3@@Base+0xd5>
mov    DWORD PTR [ebp-0x3c],0x1
jmp    80544a0 <__divdi3@@Base+0x170>
mov    DWORD PTR [ebp-0x24],0x20
mov    ecx,DWORD PTR [ebp-0x40]
sub    DWORD PTR [ebp-0x24],ecx
mov    eax,DWORD PTR [ebp-0x44]
shl    eax,cl
mov    DWORD PTR [ebp-0x44],edi
mov    ecx,DWORD PTR [ebp-0x24]
shr    DWORD PTR [ebp-0x44],cl
mov    edx,DWORD PTR [ebp-0x44]
or     eax,edx
mov    DWORD PTR [ebp-0x3c],eax
mov    ecx,DWORD PTR [ebp-0x40]
shl    edi,cl
mov    DWORD PTR [ebp-0x28],esi
mov    ecx,DWORD PTR [ebp-0x24]
shr    DWORD PTR [ebp-0x28],cl
mov    ecx,DWORD PTR [ebp-0x40]
shl    esi,cl
mov    eax,DWORD PTR [ebp-0x20]
mov    DWORD PTR [ebp-0x44],eax
mov    ecx,DWORD PTR [ebp-0x24]
shr    DWORD PTR [ebp-0x44],cl
or     esi,DWORD PTR [ebp-0x44]
mov    ecx,DWORD PTR [ebp-0x40]
shl    eax,cl
mov    DWORD PTR [ebp-0x20],eax
mov    eax,esi
mov    edx,DWORD PTR [ebp-0x28]
div    DWORD PTR [ebp-0x3c]
mov    DWORD PTR [ebp-0x3c],eax
mov    DWORD PTR [ebp-0x44],edx
mul    edi
mov    esi,eax
mov    edi,edx
cmp    edi,DWORD PTR [ebp-0x44]
ja     805449d <__divdi3@@Base+0x16d>
jne    80544a0 <__divdi3@@Base+0x170>
cmp    esi,DWORD PTR [ebp-0x20]
jbe    80544a0 <__divdi3@@Base+0x170>
dec    DWORD PTR [ebp-0x3c]
mov    DWORD PTR [ebp-0x44],0x0
mov    ecx,DWORD PTR [ebp-0x3c]
mov    DWORD PTR [ebp-0x30],ecx
mov    eax,DWORD PTR [ebp-0x44]
mov    DWORD PTR [ebp-0x2c],eax
mov    esi,DWORD PTR [ebp-0x30]
mov    edi,DWORD PTR [ebp-0x2c]
cmp    DWORD PTR [ebp-0x4],0x0
je     80544d8 <__divdi3@@Base+0x1a8>
mov    eax,esi
neg    eax
mov    DWORD PTR [ebp-0x38],eax
mov    esi,edi
neg    esi
test   eax,eax
je     80544cf <__divdi3@@Base+0x19f>
dec    esi
mov    DWORD PTR [ebp-0x34],esi
mov    esi,DWORD PTR [ebp-0x38]
mov    edi,DWORD PTR [ebp-0x34]
mov    eax,esi
mov    edx,edi
lea    esp,[ebp-0x4c]
pop    esi
pop    edi
leave  
ret    
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
mov    ebx,0x805c414
cmp    DWORD PTR ds:0x805c414,0xffffffff
je     805450e <__divdi3@@Base+0x1de>
mov    eax,DWORD PTR [ebx]
call   eax
add    ebx,0xfffffffc
cmp    DWORD PTR [ebx],0xffffffff
jne    8054502 <__divdi3@@Base+0x1d2>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
nop
push   ebp
mov    ebp,esp
leave  
ret    
nop
nop
nop
push   ebp
mov    ebp,esp
push   ebx
call   8054525 <__divdi3@@Base+0x1f5>
pop    ebx
add    ebx,0x7eff
call   8049350 <strcpy@plt+0x40>
mov    ebx,DWORD PTR [ebp-0x4]
leave  
ret    
