xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push sym.__libc_csu_fini
push sym.__libc_csu_init
push ecx
push esi
push dbg.main
call sym.imp.__libc_start_main
jmp dword [reloc.__libc_start_main]
push ebp
mov ebp, esp
sub esp, 8
cmp byte [obj.completed.5843], 0
je 0x80484cb
jmp 0x80484dd
add eax, 4
mov dword [obj.p.5841], eax
call edx
mov eax, dword [obj.p.5841]
mov edx, dword [eax]
test edx, edx
jne 0x80484c1
mov byte [obj.completed.5843], 1
leave
ret
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword [obj.__JCR_LIST__]
test eax, eax
je 0x8048501
mov eax, 0
test eax, eax
je 0x8048501
mov dword [esp], obj.__JCR_LIST__
call eax
leave
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
mov eax, dword [obj.__CTOR_LIST__]
cmp eax, 0xffffffff
je 0x80487d3
xor ebx, ebx
call eax
mov eax, dword [ebx + 0x804986c]
sub ebx, 4
cmp eax, 0xffffffff
jne 0x80487c3
add esp, 4
pop ebx
pop ebp
ret
push ebp
mov ebp, esp
pop ebp
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x80487e8
pop ebx
add ebx, 0x1170
call sym.__do_global_dtors_aux
pop ecx
pop ebx
leave
ret
push ebp
mov ebp, esp
push edi
push esi
push ebx
call sym.__i686.get_pc_thunk.bx
add ebx, 0x11fd
sub esp, 0xc
call sym._init
lea edi, [ebx - 0xe8]
lea eax, [ebx - 0xe8]
sub edi, eax
sar edi, 2
test edi, edi
je 0x80487a2
xor esi, esi
mov eax, dword [arg_10h]
mov dword [var_8h], eax
mov eax, dword [arg_ch]
mov dword [var_4h], eax
mov eax, dword [arg_8h]
mov dword [esp], eax
call dword [ebx + esi*4 - 0xe8]
add esi, 1
cmp edi, esi
jne 0x8048780
add esp, 0xc
pop ebx
pop esi
pop edi
pop ebp
ret
mov ebx, dword [esp]
ret
lea ecx, [argv]
and esp, 0xfffffff0
push dword [ecx - 4]
push ebp
mov ebp, esp
push ecx
sub esp, 0x34
call sym.imp.getuid
test eax, eax
je 0x804853d
call sym.imp.getgid
test eax, eax
je 0x804853d
call sym.imp.geteuid
test eax, eax
je 0x804853d
call sym.imp.getegid
test eax, eax
jne 0x804870f
mov dword [i], 1
jmp 0x8048705
mov dword [format], 0x8048800
mov dword [esp], str._dev_pts_1
call sym.imp.fopen
mov dword [f1], eax
mov dword [var_sp_8h], str.PEDERAAAST____
mov dword [format], 0x804881c
mov eax, dword [f1]
mov dword [esp], eax
call sym.imp.fprintf
mov dword [var_sp_8h], str.PEDERAAASTUS____
mov dword [format], 0x804881c
mov eax, dword [f1]
mov dword [esp], eax
call sym.imp.fprintf
mov eax, dword [f1]
mov dword [esp], eax
call sym.imp.fclose
mov dword [format], 0x8048800
mov dword [esp], str._dev_pts_2
call sym.imp.fopen
mov dword [f2], eax
mov dword [var_sp_8h], str.PEDERAAAST____
mov dword [format], 0x804881c
mov eax, dword [f2]
mov dword [esp], eax
call sym.imp.fprintf
mov dword [var_sp_8h], str.PEDERAAASTUS____
mov dword [format], 0x804881c
mov eax, dword [f2]
mov dword [esp], eax
call sym.imp.fprintf
mov eax, dword [f2]
mov dword [esp], eax
call sym.imp.fclose
mov dword [format], 0x8048800
mov dword [esp], str._dev_pts_3
call sym.imp.fopen
mov dword [f3], eax
mov dword [var_sp_8h], str.PEDERAAAST____
mov dword [format], 0x804881c
mov eax, dword [f3]
mov dword [esp], eax
call sym.imp.fprintf
mov dword [var_sp_8h], str.PEDERAAASTUS____
mov dword [format], 0x804881c
mov eax, dword [f3]
mov dword [esp], eax
call sym.imp.fprintf
mov eax, dword [f3]
mov dword [esp], eax
call sym.imp.fclose
mov dword [format], 0x8048800
mov dword [esp], str._dev_pts_4
call sym.imp.fopen
mov dword [f4], eax
mov dword [var_sp_8h], str.PEDERAAAST____
mov dword [format], 0x804881c
mov eax, dword [f4]
mov dword [esp], eax
call sym.imp.fprintf
mov dword [var_sp_8h], str.PEDERAAASTUS____
mov dword [format], 0x804881c
mov eax, dword [f4]
mov dword [esp], eax
call sym.imp.fprintf
mov eax, dword [f4]
mov dword [esp], eax
call sym.imp.fclose
mov dword [format], 0x8048800
mov dword [esp], str._dev_pts_5
call sym.imp.fopen
mov dword [f5], eax
mov dword [var_sp_8h], str.PEDERAAAST____
mov dword [format], 0x804881c
mov eax, dword [f5]
mov dword [esp], eax
call sym.imp.fprintf
mov dword [var_sp_8h], str.PEDERAAASTUS____
mov dword [format], 0x804881c
mov eax, dword [f5]
mov dword [esp], eax
call sym.imp.fprintf
mov eax, dword [f5]
mov dword [esp], eax
call sym.imp.fclose
add dword [i], 1
cmp dword [i], 0x32
jle 0x8048549
mov dword [i], 1
jmp 0x8048728
mov dword [esp], str.mount__dev_fd0
call sym.imp.system
add dword [i], 1
cmp dword [i], 0xc350
jle 0x8048718
mov eax, 0
add esp, 0x34
pop ecx
pop ebp
lea esp, [ecx - 4]
ret
push ebp
mov ebp, esp
push ebx
sub esp, 4
call 0x80483a4
pop ebx
add ebx, 0x15b4
mov edx, dword [ebx - 4]
test edx, edx
je 0x80483ba
call loc.imp.__gmon_start__
call sym.frame_dummy
call sym.__do_global_ctors_aux
pop eax
pop ebx
leave
ret
jmp dword [reloc.__gmon_start__]
jmp dword [reloc.system]
jmp dword [reloc.fclose]
jmp dword [reloc.fopen]
jmp dword [reloc.getegid]
jmp dword [reloc.getuid]
jmp dword [reloc.fprintf]
jmp dword [reloc.getgid]
jmp dword [reloc.geteuid]
